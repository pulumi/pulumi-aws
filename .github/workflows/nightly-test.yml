# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt

env:
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  OIDC_ROLE_ARN: ${{ secrets.OIDC_ROLE_ARN }}
  PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PULUMI_MISSING_DOCS_ERROR: true
  PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  PYPI_USERNAME: __token__
  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  TF_APPEND_USER_AGENT: pulumi
jobs:
  build_sdk:
    name: build_sdk
    needs: prerequisites
    uses: ./.github/workflows/build_sdk.yml
    secrets: inherit

  prerequisites:
    uses: ./.github/workflows/prerequisites.yml
    secrets: inherit
    with:
      default_branch: ${{ github.event.repository.default_branch }}
      is_pr: ${{ github.event_name == 'pull_request' }}
      is_automated: ${{ github.actor == 'dependabot[bot]' }}

  test:
    name: test
    needs: build_sdk
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
      with:
        tool-cache: false
        swap-storage: false
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        submodules: true
    - uses: pulumi/provider-version-action@v1
      with:
        set-env: 'PROVIDER_VERSION'
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.21.x"
        cache-dependency-path: |
          sdk/go.sum
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.11.0
      with:
        tag: v0.0.46
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
      with:
        pulumi-version: "dev"
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: "20.x"
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: "6.0.x"
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11.8"
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: temurin
        java-version: "11"
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: "7.6"
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v4
      with:
        name: aws-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: >-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin

        find ${{ github.workspace }} -name "pulumi-*-aws" -print -exec chmod +x {} \;
    - run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download SDK
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.language }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress SDK folder
      run: tar -zxf ${{ github.workspace }}/sdk/${{ matrix.language }}.tar.gz -C ${{
        github.workspace }}/sdk/${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
    - name: Install gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v2.5.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 3600
        role-session-name: aws@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Make upstream
      run: make upstream
    - name: Run tests
      run: cd examples && go test -v -json -count=1 -cover -timeout 2h -tags=${{
        matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in running ${{ matrix.language }} tests
        fields: repo,commit,author,action
        status: ${{ job.status }}
    strategy:
      fail-fast: false
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go
        - java
name: cron
on:
  schedule:
  - cron: 0 6 * * *
