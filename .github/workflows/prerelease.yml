# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt

env:
  IS_PRERELEASE: true
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  OIDC_ROLE_ARN: ${{ secrets.OIDC_ROLE_ARN }}
  PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PULUMI_MISSING_DOCS_ERROR: true
  PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  PYPI_USERNAME: __token__
  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  TF_APPEND_USER_AGENT: pulumi
jobs:
  prerequisites:
    uses: ./.github/workflows/prerequisites.yml
    secrets: inherit
    with:
      default_branch: ${{ github.event.repository.default_branch }}
      is_pr: ${{ github.event_name == 'pull_request' }}
      is_automated: ${{ github.actor == 'dependabot[bot]' }}

  build_provider:
    uses: ./.github/workflows/build_provider.yml
    needs: prerequisites
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}

  build_sdk:
    name: build_sdk
    needs: prerequisites
    uses: ./.github/workflows/build_sdk.yml
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}

  license_check:
    name: License Check
    uses: ./.github/workflows/license.yml
    secrets: inherit

  publish:
    name: publish
    needs:
      - prerequisites
      - build_provider
      - test
      - license_check
      - go_test_shim
      - provider_test
      - test_oidc
      - upstream_lint
    uses: ./.github/workflows/publish.yml
    secrets: inherit
    with:
      version: ${{ needs.prerequisites.outputs.version }}
      isPrerelease: true

  test:
    name: test
    needs:
      - prerequisites
      - build_sdk
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    env:
      PROVIDER_VERSION: ${{ needs.prerequisites.outputs.version }}
    steps:
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
      with:
        tool-cache: false
        swap-storage: false
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, nodejs, python, dotnet, go, java
    - name: Download bin
      uses: ./.github/actions/download-bin
    - name: Add NuGet source
      if: matrix.language == 'dotnet'
      run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download SDK
      uses: ./.github/actions/download-sdk
      with:
        language: ${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      if: matrix.language == 'python'
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
    - name: Install gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v2.5.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 3600
        role-session-name: aws@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Make upstream
      run: make upstream
    - name: Run tests
      run: cd examples && go test -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4 .
    strategy:
      fail-fast: false
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go
        - java
  go_test_shim:
      name: Run test of provider shim
      runs-on: ubuntu-latest
      steps:
          - name: Checkout Repo
            uses: actions/checkout@v4
            with:
              ref: ${{ env.PR_COMMIT_SHA }}
              submodules: true
          - uses: pulumi/provider-version-action@v1
            with:
              set-env: PROVIDER_VERSION
          - name: Setup tools
            uses: ./.github/actions/setup-tools
            with:
              tools: pulumictl, pulumi, go
          - name: Make upstream
            run: make upstream
          - name: go test
            run: |
              cd upstream
              go get github.com/hashicorp/aws-sdk-go-base@v1.1.0
              cd shim
              go test -v -coverprofile="coverage.txt" .
          - env:
              CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
            name: Upload coverage reports to Codecov
            uses: codecov/codecov-action@v4
      timeout-minutes: 60
  provider_test:
      name: provider_test
      needs: build_sdk
      permissions:
          contents: read
          id-token: write
      runs-on: ubuntu-latest
      steps:
          - name: Free Disk Space (Ubuntu)
            uses: jlumbroso/free-disk-space@main
            with:
              swap-storage: false
              tool-cache: false
          - name: Checkout Repo
            uses: actions/checkout@v4
            with:
              ref: ${{ env.PR_COMMIT_SHA }}
              submodules: true
          - uses: pulumi/provider-version-action@v1
            with:
              set-env: PROVIDER_VERSION
          - name: Setup tools
            uses: ./.github/actions/setup-tools
            with:
              tools: pulumictl, pulumi, go, node, dotnet, python, java
          - name: Make upstream
            run: make upstream
          - name: Download provider + tfgen binaries
            uses: actions/download-artifact@v4
            with:
              name: aws-provider.tar.gz
              path: ${{ github.workspace }}/bin
          - name: Untar provider binaries
            run: |-
              tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace}}/bin
              find ${{ github.workspace }} -name "pulumi-*-aws" -print -exec chmod +x {} \;
          - run: dotnet nuget add source ${{ github.workspace }}/nuget
          - name: Download SDK
            uses: actions/download-artifact@v4
            with:
              name: ${{ matrix.language }}-sdk.tar.gz
              path: ${{ github.workspace}}/sdk/
          - name: Uncompress SDK folder
            run: tar -zxf ${{ github.workspace }}/sdk/${{ matrix.language }}.tar.gz -C ${{ github.workspace }}/sdk/${{ matrix.language }}
          - name: Update path
            run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
          - name: Install Python deps
            run: |-
              pip3 install virtualenv==20.0.23
              pip3 install pipenv
          - name: Install dependencies
            run: make install_${{ matrix.language}}_sdk
          - name: Install gotestfmt
            uses: GoTestTools/gotestfmt-action@v2
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              version: v2.5.0
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-region: ${{ env.AWS_REGION }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              role-duration-seconds: 3600
              role-session-name: aws@githubActions
              role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
          - name: Run provider tests
            run: |
              cd provider && go test -v -json -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
          - if: failure() && github.event_name == 'push'
            name: Notify Slack
            uses: 8398a7/action-slack@v3
            with:
              author_name: Failure in running ${{ matrix.language }} provider tests
              fields: repo,commit,author,action
              status: ${{ job.status }}
      strategy:
          fail-fast: false
          matrix:
              language:
                  - nodejs
                  - python
                  - dotnet
                  - go
                  - java
  test_oidc:
      name: test_oidc
      needs: build_sdk
      permissions:
          contents: read
          id-token: write
      runs-on: ubuntu-latest
      steps:
          - name: Free Disk Space (Ubuntu)
            uses: jlumbroso/free-disk-space@main
            with:
              dotnet: ${{ matrix.language != 'dotnet' }}
              swap-storage: false
              tool-cache: false
          - name: Checkout Repo
            uses: actions/checkout@v4
            with:
              ref: ${{ env.PR_COMMIT_SHA }}
              submodules: true
          - uses: pulumi/provider-version-action@v1
            with:
              set-env: PROVIDER_VERSION
          - name: Setup tools
            uses: ./.github/actions/setup-tools
            with:
              tools: pulumictl, pulumi, go, node
          - name: Download provider + tfgen binaries
            uses: actions/download-artifact@v4
            with:
              name: aws-provider.tar.gz
              path: ${{ github.workspace }}/bin
          - name: Untar provider binaries
            run: |-
              tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace}}/bin
              find ${{ github.workspace }} -name "pulumi-*-aws" -print -exec chmod +x {} \;
          - name: Download SDK
            uses: actions/download-artifact@v4
            with:
              name: ${{ matrix.language }}-sdk.tar.gz
              path: ${{ github.workspace}}/sdk/
          - name: Uncompress SDK folder
            run: tar -zxf ${{ github.workspace }}/sdk/${{ matrix.language }}.tar.gz -C ${{ github.workspace }}/sdk/${{ matrix.language }}
          - name: Update path
            run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
          - name: Install dependencies
            run: make install_${{ matrix.language}}_sdk
          - name: Install gotestfmt
            uses: GoTestTools/gotestfmt-action@v2
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              version: v2.4.0
          - name: Make upstream
            run: make upstream
          - name: Run selected tests with manual web identity/OIDC auth
            run: cd examples && go test -v -json -count=1 -run TestAccCloudWatchOidcManual -tags=${{ matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
          - name: Configure AWS Credentials for OIDC
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-region: ${{ env.AWS_REGION }}
              role-duration-seconds: 3600
              role-session-name: aws@githubActions
              role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
              unset-current-credentials: true
          - name: Run selected tests with configure-aws-credentials web identity/OIDC auth
            run: cd examples && go test -v -json -count=1 -run TestAccCloudWatch -tags=${{ matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
          - if: failure() && github.event_name == 'push'
            name: Notify Slack
            uses: 8398a7/action-slack@v3
            with:
              author_name: Failure in running ${{ matrix.language }} tests
              fields: repo,commit,author,action
              status: ${{ job.status }}
      strategy:
          fail-fast: false
          matrix:
              language:
                  - nodejs
  upstream_lint:
      name: Run upstream provider-lint
      runs-on: ubuntu-latest
      steps:
          - name: Free Disk Space (Ubuntu)
            uses: jlumbroso/free-disk-space@main
            with:
              swap-storage: false
              tool-cache: false
          - name: Checkout Repo
            uses: actions/checkout@v4
            with:
              ref: ${{ env.PR_COMMIT_SHA }}
              submodules: true
          - name: Install Go
            uses: actions/setup-go@v5
            with:
              cache: false
              go-version: 1.22.x
          - name: Make upstream
            run: make upstream
          - name: upstream lint
            run: |
              cd upstream
              make provider-lint
      timeout-minutes: 60


name: prerelease
on:
  push:
    tags:
    - v*.*.*-**
