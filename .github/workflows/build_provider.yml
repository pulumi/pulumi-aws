# WARNING: This file is autogenerated - changes will be overwritten when regenerated by https://github.com/pulumi/ci-mgmt

name: "Build Provider"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: Version of the provider to build
      matrix:
        required: false
        type: string
        default: |
          {
            "platform": [
              {"os": "linux",   "arch": "amd64"},
              {"os": "linux",   "arch": "arm64"},
              {"os": "darwin",  "arch": "amd64"},
              {"os": "darwin",  "arch": "arm64"},
              {"os": "windows", "arch": "amd64"}
            ]
          }

jobs:
  build_provider:
    name: Build ${{ matrix.platform.os }}-${{ matrix.platform.arch }}
    runs-on: ubuntu-latest
    env:
      PROVIDER_VERSION: ${{ inputs.version }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: true
      matrix: ${{ fromJSON(inputs.matrix) }}
    steps:
      # Run as first step so we don't delete things that have just been installed
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: false
          swap-storage: false
          dotnet: false
          large-packages: false
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          persist-credentials: false
      # Without ldid cross-compiling Node binaries on a Linux worker intended to work on darwin-arm64 fails to sign the
      # binaries properly and they do not work as expected. See https://github.com/pulumi/pulumi-awsx/issues/1490
      - uses: MOZGIII/install-ldid-action@v1
        with:
          tag: v2.1.5-procursus2
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          tools: pulumictl, go
          # use per-platform/arch caches instead since we are doing cross-builds
          cache-go: false
      # Based on https://github.com/actions/cache/blob/main/examples.md#go---modules
      - name: Get GOCACHE
        id: gocache
        shell: bash
        run: |
          echo "path=$(go env GOCACHE)" >> "${GITHUB_OUTPUT}"
      - name: Get GOMODCACHE
        id: gomodcache
        shell: bash
        run: |
          echo "path=$(go env GOMODCACHE)" >> "${GITHUB_OUTPUT}"
      - name: Go Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.gocache.outputs.path }}
            ${{ steps.gomodcache.outputs.path }}
          key: go-provider-${{ matrix.platform.os }}-${{ matrix.platform.arch }}-${{ hashFiles('provider/go.sum') }}
          restore-keys: |
            go-provider-${{ matrix.platform.os }}-${{ matrix.platform.arch }}-
      - name: Prepare local workspace before restoring previously built
        run: make prepare_local_workspace
      - name: Restore prerequisites
        uses: ./.github/actions/download-prerequisites
      - name: Restore makefile progress
        # This mirrors the targets completed in the prerequisites job
        run: make --touch provider schema

      - name: Build provider
        run: make "provider-${{ matrix.platform.os }}-${{ matrix.platform.arch }}"
        env:
          AZURE_SIGNING_CLIENT_ID: ${{ secrets.AZURE_SIGNING_CLIENT_ID }}
          AZURE_SIGNING_CLIENT_SECRET: ${{ secrets.AZURE_SIGNING_CLIENT_SECRET }}
          AZURE_SIGNING_TENANT_ID: ${{ secrets.AZURE_SIGNING_TENANT_ID }}
          AZURE_SIGNING_KEY_VAULT_URI: ${{ secrets.AZURE_SIGNING_KEY_VAULT_URI }}
          SKIP_SIGNING: ${{ secrets.AZURE_SIGNING_CLIENT_ID == '' && secrets.AZURE_SIGNING_CLIENT_SECRET == '' && secrets.AZURE_SIGNING_TENANT_ID == '' && secrets.AZURE_SIGNING_KEY_VAULT_URI == '' }}

      - name: Package provider
        run: make provider_dist-${{ matrix.platform.os }}-${{ matrix.platform.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pulumi-resource-aws-v${{ inputs.version }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.tar.gz
          path: bin/pulumi-resource-aws-v${{ inputs.version }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.tar.gz
          retention-days: 30
