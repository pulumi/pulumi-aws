env:
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PROVIDER: aws
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  TRAVIS_OS_NAME: linux
jobs:
  build_sdk:
    name: build_sdk
    needs: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetverson}}
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
    - name: Restore binary perms
      run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
        -exec chmod +x {} \;
    - name: Build SDK
      run: make -f Makefile.github build_${{ matrix.language }}
    - name: Check worktree clean
      run: ./ci-scripts/ci/check-worktree-is-clean
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in building ${{ matrix.language }} sdk
        fields: repo,commit,author,action
        status: ${{ job.status }}
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
        - 3.1.201
        goversion:
        - 1.14.x
        language:
        - nodejs
        - python
        - dotnet
        - go
        nodeversion:
        - 13.x
        pythonversion:
        - "3.7"
  create_docs_build:
    name: Create docs build
    needs: publish_sdk
    runs-on: ubuntu-latest
    steps:
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - env:
        GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
      name: Dispatch event
      run: pulumictl create docs-build pulumi-${{ env.PROVIDER }} ${GITHUB_REF#refs/tags/}
  prerequisites:
    name: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Build tfgen & provider binaries
      run: make -f Makefile.github provider
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in building provider prerequisites
        fields: repo,commit,author,action
        status: ${{ job.status }}
  publish:
    name: publish
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 3600
        role-external-id: upload-pulumi-release
        role-session-name: ${{ env.PROVIDER}}@githubActions
        role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        args: release --rm-dist
        version: latest
  publish_sdk:
    name: publish_sdk
    needs: publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        always-auth: true
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
    - name: Setup Python
      uses: actions/setup-python@v1
    - name: Download Python SDK
      uses: actions/download-artifact@v2
      with:
        name: python-sdk
        path: ${{ github.workspace}}/sdk/python
    - name: Install Twine
      run: python -m pip install pip twine
    - name: Download NodeJS SDK
      uses: actions/download-artifact@v2
      with:
        name: nodejs-sdk
        path: ${{ github.workspace}}/sdk/nodejs
    - name: Download DotNet SDK
      uses: actions/download-artifact@v2
      with:
        name: dotnet-sdk
        path: ${{ github.workspace}}/sdk/dotnet
    - env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      name: Publish SDKs
      run: ./ci-scripts/ci/publish-tfgen-package ${{ github.workspace }}
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in publishing SDK
        fields: repo,commit,author,action
        status: ${{ job.status }}
  test:
    name: test
    needs: build_sdk
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetverson}}
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
    - name: Restore binary perms
      run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
        -exec chmod +x {} \;
    - name: Download SDK
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}
    - name: Update path
      run: echo ::add-path::${{ github.workspace }}/bin
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
    - name: Install dependencies
      run: make -f Makefile.github install_${{ matrix.language}}_sdk
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 3600
        role-session-name: ${{ env.PROVIDER }}@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Run tests
      run: cd examples && go test -v -count=1 -cover -timeout 2h -tags=${{ matrix.language
        }} -parallel 4 .
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in running ${{ matrix.language }} tests
        fields: repo,commit,author,action
        status: ${{ job.status }}
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
        - 3.1.201
        goversion:
        - 1.14.x
        language:
        - nodejs
        - python
        - dotnet
        - go
        nodeversion:
        - 13.x
        pythonversion:
        - "3.7"
name: release
"on":
  push:
    tags:
    - v*.*.*
