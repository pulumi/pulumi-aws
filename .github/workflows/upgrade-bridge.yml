# WARNING: This file is autogenerated - changes will be overwritten if not made via https://github.com/pulumi/ci-mgmt

name: Upgrade bridge
on:
  repository_dispatch:
    types:
      - upgrade-bridge
  workflow_dispatch:
    inputs:
      kind:
        description: Overrides the kind of upgrade. Must be one of `all`, `bridge`, `provider`, `code`, `pf`, or `pulumi`.
        required: false
        type: string
        default: "bridge"
      target-bridge-version:
        description: pulumi-terraform-bridge version or hash reference
        required: false
        type: string
        default: "latest"
      target-pulumi-version:
        description: |
             Set the version of `pulumi/pkg` and `pulumi/sdk` to depend on for bridged providers. Currently,
             these versions inform the linked runtime and SDK generation in all languages except Java. Valid
             options are:
             - "": Use the same version as pulumi-terraform-bridge
             - A go version such as "v3.90.1"
             - A commit SHA in pulumi/pulumi such as "ac71ebc1d34e5ccfd1a7fed61e6ff43a3160f3cb"
        required: false
        type: string
        default: ""
      pr-reviewers:
        description: Reviewers to assign to the auto-opened pull request
        required: false
        type: string
        default: ""
      pr-description:
        description: Extra description to add to the auto-opened pull request
        required: false
        type: string
        default: ""
      pr-title-prefix:
        description: Prefix to add to the auto-opened pull request title
        required: false
        type: string
        default: ""
      automerge:
        description: Mark created PR for auto-merging?
        required: false
        type: boolean
        default: false
env:
  GH_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  upgrade_provider:
    name: upgrade-provider
    runs-on: ubuntu-latest
    steps:
    - name: Call upgrade provider action
      if: github.event_name == 'workflow_dispatch'
      uses: pulumi/pulumi-upgrade-provider-action@v0.0.12
      with:
        kind: ${{ inputs.kind }}
        email: bot@pulumi.com
        username: pulumi-bot
        automerge: ${{ inputs.automerge }}
        target-bridge-version: ${{ inputs.target-bridge-version }}
        target-pulumi-version: ${{ inputs.target-pulumi-version }}
        pr-reviewers: ${{ inputs.pr-reviewers }}
        pr-description: ${{ inputs.pr-description }}
        pr-title-prefix: ${{ inputs.pr-title-prefix }}
    - name: Call upgrade provider action
      if: github.event_name == 'repository_dispatch'
      uses: pulumi/pulumi-upgrade-provider-action@v0.0.12
      with:
        kind: ${{ github.event.client_payload.kind || 'bridge' }}
        email: bot@pulumi.com
        username: pulumi-bot
        automerge: ${{ github.event.client_payload.automerge }}
        target-pulumi-version: ${{ github.event.client_payload.target-pulumi-version }}
        target-bridge-version: ${{ github.event.client_payload.target-bridge-version }}
        pr-reviewers: ${{ github.event.client_payload.pr-reviewers }}
        pr-description: ${{ github.event.client_payload.pr-description }}
        pr-title-prefix: ${{ github.event.client_payload.pr-title-prefix }}
    - env:
        SLACK_CHANNEL: provider-upgrade-publish-status
        SLACK_COLOR: "#7CFC00"
        SLACK_ICON_EMOJI: ":taco:"
        SLACK_MESSAGE: >-
          Upgrade succeeded :heart_decoration:

          PR opened at github.com/pulumi/${{ github.event.repository.name }}/pulls
        SLACK_TITLE: ${{ github.event.repository.name }} upgrade result
        SLACK_USERNAME: provider-bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      name: Send Upgrade Success To Slack
      uses: rtCamp/action-slack-notify@v2
    - env:
        SLACK_CHANNEL: provider-upgrade-publish-status
        SLACK_COLOR: "#FF0000"
        SLACK_ICON_EMOJI: ":taco:"
        SLACK_MESSAGE: " Upgrade failed :x:"
        SLACK_TITLE: ${{ github.event.repository.name }} upgrade result
        SLACK_USERNAME: provider-bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()
      name: Send Upgrade Failure To Slack
      uses: rtCamp/action-slack-notify@v2
