# It may be tempting to add parens around each individual clause in this expression, but Travis then builds pushes anyway
if: branch = master OR branch =~ ^release/ OR tag IS present
language: go
go: 1.9
sudo: true # give us 7.5GB and >2 bursted cores.
git:
  depth: false
before_install:
    - export PULUMI_ROOT=/opt/pulumi
    - if [ "${TRAVIS_SECURE_ENV_VARS:-}" = "true" ]; then git clone git@github.com:pulumi/home ${GOPATH}/src/github.com/pulumi/home; fi
    - git clone git@github.com:pulumi/scripts ${GOPATH}/src/github.com/pulumi/scripts
    - git clone git@github.com:pulumi/pulumi ${GOPATH}/src/github.com/pulumi/pulumi
    # Dep for Go dependency management.
    - go get -v github.com/golang/dep/cmd/dep
    # Gometalinter for good Go linting/hygiene.
    - go get -v github.com/alecthomas/gometalinter
    - gometalinter --install
    # Node.js 6.10.2 for all JavaScript code (to match AWS Lambda).
    - nvm install v6.10.2
    # Install Yarn as per https://yarnpkg.com/lang/en/docs/install-ci/#travis-tab.
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.2.1
    - export PATH=$HOME/.yarn/bin:$PATH
    # Install Twine so that we can publish Pip packages.
    - pip install --upgrade --user twine==1.9.1
    # Ensure that we can access Pulumi's private NPM and PyPI orgs.
    - echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
    - mkdir -p ~/.config/pip && echo -e "[global]\nextra-index-url = https://${PULUMI_API_TOKEN}@pypi.pulumi.com/simple" >> ~/.config/pip/pip.conf
    # Install the AWS CLI so that we can publish the resulting release (if applicable) at the end.
    - pip install --upgrade --user awscli
    - if [ "${TRAVIS_SECURE_ENV_VARS:-}" = "true" ]; then source ${GOPATH}/src/github.com/pulumi/home/scripts/keep-failed-tests.sh; fi
    # Install Pulumi
    - ${GOPATH}/src/github.com/pulumi/scripts/ci/install-pulumi.sh v0.12.4-dev-1528753447-gb69ad036
    - export PATH=/usr/local/pulumi/bin:$PATH
install:
    # Now restore all dependencies, after cloning, to rebuild vendor appropriately.
    - make ensure
before_script:
    # Ensure the working tree is clean (make ensure may have updated lock files)
    - ${GOPATH}/src/github.com/pulumi/scripts/ci/check-worktree-is-clean.sh
script:
    - make travis_${TRAVIS_EVENT_TYPE}
after_failure:
    - if [ "${TRAVIS_SECURE_ENV_VARS:-}" = "true" ]; then ${GOPATH}/src/github.com/pulumi/home/scripts/upload-failed-tests; fi
notifications:
    webhooks: https://ufci1w66n3.execute-api.us-west-2.amazonaws.com/stage/travis
