From 2298f708c3532b879bf2acb89337300e589ebf58 Mon Sep 17 00:00:00 2001
From: Daniel Bradley <daniel@pulumi.com>
Date: Fri, 4 Nov 2022 17:34:56 +0000
Subject: [PATCH 10/29] Workaround Autoscaling launch_configuration
 associate_public_ip_address

- Disable computation of property until fixed.
---
 .../autoscaling/launch_configuration.go       | 22 +++++++++++--------
 1 file changed, 13 insertions(+), 9 deletions(-)

diff --git a/internal/service/autoscaling/launch_configuration.go b/internal/service/autoscaling/launch_configuration.go
index 567ffca83e..b76134cebf 100644
--- a/internal/service/autoscaling/launch_configuration.go
+++ b/internal/service/autoscaling/launch_configuration.go
@@ -45,7 +45,8 @@ func ResourceLaunchConfiguration() *schema.Resource {
 			"associate_public_ip_address": {
 				Type:     schema.TypeBool,
 				Optional: true,
-				Computed: true,
+				//Computed: true,
+				Default:  false,
 				ForceNew: true,
 			},
 			"ebs_block_device": {
@@ -320,16 +321,19 @@ func resourceLaunchConfigurationCreate(ctx context.Context, d *schema.ResourceDa
 
 	lcName := create.Name(d.Get("name").(string), d.Get("name_prefix").(string))
 	input := autoscaling.CreateLaunchConfigurationInput{
-		EbsOptimized:            aws.Bool(d.Get("ebs_optimized").(bool)),
-		ImageId:                 aws.String(d.Get("image_id").(string)),
-		InstanceType:            aws.String(d.Get("instance_type").(string)),
-		LaunchConfigurationName: aws.String(lcName),
+		EbsOptimized:             aws.Bool(d.Get("ebs_optimized").(bool)),
+		ImageId:                  aws.String(d.Get("image_id").(string)),
+		InstanceType:             aws.String(d.Get("instance_type").(string)),
+		LaunchConfigurationName:  aws.String(lcName),
+		AssociatePublicIpAddress: aws.Bool(d.Get("associate_public_ip_address").(bool)),
 	}
 
-	associatePublicIPAddress := d.GetRawConfig().GetAttr("associate_public_ip_address")
-	if associatePublicIPAddress.IsKnown() && !associatePublicIPAddress.IsNull() {
-		input.AssociatePublicIpAddress = aws.Bool(associatePublicIPAddress.True())
-	}
+	// FORK: Stack72 to remove this AssociatePublicIpAddress below when associated bridge issue is solved
+
+	//associatePublicIPAddress := d.GetRawConfig().GetAttr("associate_public_ip_address")
+	//if associatePublicIPAddress.IsKnown() && !associatePublicIPAddress.IsNull() {
+	//	input.AssociatePublicIpAddress = aws.Bool(associatePublicIPAddress.True())
+	//}
 
 	if v, ok := d.GetOk("iam_instance_profile"); ok {
 		input.IamInstanceProfile = aws.String(v.(string))
