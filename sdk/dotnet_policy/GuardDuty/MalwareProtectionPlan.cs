// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GuardDuty
{
    [PolicyResourceType("aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan")]
    public sealed class MalwareProtectionPlan : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
        /// </summary>
        [Input("actions")]
        public List<MalwareProtectionPlanAction>? Actions;

        /// <summary>
        /// The ARN of the GuardDuty malware protection plan
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The timestamp when the Malware Protection plan resource was created.
        /// </summary>
        [Input("createdAt")]
        public string? CreatedAt;

        /// <summary>
        /// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
        /// </summary>
        [Input("protectedResource")]
        public MalwareProtectionPlanProtectedResource? ProtectedResource;

        /// <summary>
        /// ARN of IAM role that includes the permissions required to scan and add tags to the associated protected resource.
        /// </summary>
        [Input("role")]
        public string? Role;

        /// <summary>
        /// The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
