// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GuardDuty
{
    [PolicyResourceType("aws:guardduty/filter:Filter")]
    public sealed class Filter : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Specifies the action that is to be applied to the findings that match the filter. Can be one of `ARCHIVE` or `NOOP`.
        /// </summary>
        [Input("action")]
        public string? Action;

        /// <summary>
        /// The ARN of the GuardDuty filter.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Description of the filter.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// ID of a GuardDuty detector, attached to your account.
        /// </summary>
        [Input("detectorId")]
        public string? DetectorId;

        /// <summary>
        /// Represents the criteria to be used in the filter for querying findings. Contains one or more `criterion` blocks, documented below.
        /// </summary>
        [Input("findingCriteria")]
        public FilterFindingCriteria? FindingCriteria;

        /// <summary>
        /// The name of your filter.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
        /// </summary>
        [Input("rank")]
        public int? Rank;

        /// <summary>
        /// The tags that you want to add to the Filter resource. A tag consists of a key and a value. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
