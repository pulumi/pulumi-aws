// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GuardDuty
{
    [PolicyResourceType("aws:guardduty/threatIntelSet:ThreatIntelSet")]
    public sealed class ThreatIntelSet : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Specifies whether GuardDuty is to start using the uploaded ThreatIntelSet.
        /// </summary>
        [PolicyResourceProperty("activate", "_mUnknown_Activate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Activate;
        private bool _mUnknown_Activate;
        public bool? Activate
        {
            get
            {
                if (!_mUnknown_Activate) return _mValue_Activate;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.Activate' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the GuardDuty ThreatIntelSet.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.Arn' is not present");
            }
        }

        /// <summary>
        /// The detector ID of the GuardDuty.
        /// </summary>
        [PolicyResourceProperty("detectorId", "_mUnknown_DetectorId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DetectorId;
        private bool _mUnknown_DetectorId;
        public string? DetectorId
        {
            get
            {
                if (!_mUnknown_DetectorId) return _mValue_DetectorId;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.DetectorId' is not present");
            }
        }

        /// <summary>
        /// The format of the file that contains the ThreatIntelSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`
        /// </summary>
        [PolicyResourceProperty("format", "_mUnknown_Format")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Format;
        private bool _mUnknown_Format;
        public string? Format
        {
            get
            {
                if (!_mUnknown_Format) return _mValue_Format;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.Format' is not present");
            }
        }

        /// <summary>
        /// The URI of the file that contains the ThreatIntelSet.
        /// </summary>
        [PolicyResourceProperty("location", "_mUnknown_Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Location;
        private bool _mUnknown_Location;
        public string? Location
        {
            get
            {
                if (!_mUnknown_Location) return _mValue_Location;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.Location' is not present");
            }
        }

        /// <summary>
        /// The friendly name to identify the ThreatIntelSet.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.Name' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ThreatIntelSet.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:guardduty/threatIntelSet:ThreatIntelSet")]
    public sealed class ThreatIntelSetArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies whether GuardDuty is to start using the uploaded ThreatIntelSet.
        /// </summary>
        [PolicyResourceProperty("activate", "_mUnknown_Activate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Activate;
        private bool _mUnknown_Activate;
        public bool? Activate
        {
            get
            {
                if (!_mUnknown_Activate) return _mValue_Activate;
                throw new UndeferrableValueException("Value 'ThreatIntelSetArgs.Activate' is not present");
            }
        }

        /// <summary>
        /// The detector ID of the GuardDuty.
        /// </summary>
        [PolicyResourceProperty("detectorId", "_mUnknown_DetectorId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DetectorId;
        private bool _mUnknown_DetectorId;
        public string? DetectorId
        {
            get
            {
                if (!_mUnknown_DetectorId) return _mValue_DetectorId;
                throw new UndeferrableValueException("Value 'ThreatIntelSetArgs.DetectorId' is not present");
            }
        }

        /// <summary>
        /// The format of the file that contains the ThreatIntelSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`
        /// </summary>
        [PolicyResourceProperty("format", "_mUnknown_Format")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Format;
        private bool _mUnknown_Format;
        public string? Format
        {
            get
            {
                if (!_mUnknown_Format) return _mValue_Format;
                throw new UndeferrableValueException("Value 'ThreatIntelSetArgs.Format' is not present");
            }
        }

        /// <summary>
        /// The URI of the file that contains the ThreatIntelSet.
        /// </summary>
        [PolicyResourceProperty("location", "_mUnknown_Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Location;
        private bool _mUnknown_Location;
        public string? Location
        {
            get
            {
                if (!_mUnknown_Location) return _mValue_Location;
                throw new UndeferrableValueException("Value 'ThreatIntelSetArgs.Location' is not present");
            }
        }

        /// <summary>
        /// The friendly name to identify the ThreatIntelSet.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ThreatIntelSetArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ThreatIntelSetArgs.Tags' is not present");
            }
        }
    }
}
