// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GuardDuty
{
    [PolicyResourceType("aws:guardduty/iPSet:IPSet")]
    public sealed class IPSet : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Specifies whether GuardDuty is to start using the uploaded IPSet.
        /// </summary>
        [Input("activate")]
        public bool? Activate;

        /// <summary>
        /// Amazon Resource Name (ARN) of the GuardDuty IPSet.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The detector ID of the GuardDuty.
        /// </summary>
        [Input("detectorId")]
        public string? DetectorId;

        /// <summary>
        /// The format of the file that contains the IPSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`
        /// </summary>
        [Input("format")]
        public string? Format;

        /// <summary>
        /// The URI of the file that contains the IPSet.
        /// </summary>
        [Input("location")]
        public string? Location;

        /// <summary>
        /// The friendly name to identify the IPSet.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
