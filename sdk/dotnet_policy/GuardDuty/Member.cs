// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GuardDuty
{
    [PolicyResourceType("aws:guardduty/member:Member")]
    public sealed class Member : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// AWS account ID for member account.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'Member.AccountId' is not present");
            }
        }

        /// <summary>
        /// The detector ID of the GuardDuty account where you want to create member accounts.
        /// </summary>
        [PolicyResourceProperty("detectorId", "_mUnknown_DetectorId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DetectorId;
        private bool _mUnknown_DetectorId;
        public string? DetectorId
        {
            get
            {
                if (!_mUnknown_DetectorId) return _mValue_DetectorId;
                throw new UndeferrableValueException("Value 'Member.DetectorId' is not present");
            }
        }

        /// <summary>
        /// Boolean whether an email notification is sent to the accounts. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("disableEmailNotification", "_mUnknown_DisableEmailNotification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_DisableEmailNotification;
        private bool _mUnknown_DisableEmailNotification;
        public bool? DisableEmailNotification
        {
            get
            {
                if (!_mUnknown_DisableEmailNotification) return _mValue_DisableEmailNotification;
                throw new UndeferrableValueException("Value 'Member.DisableEmailNotification' is not present");
            }
        }

        /// <summary>
        /// Email address for member account.
        /// </summary>
        [PolicyResourceProperty("email", "_mUnknown_Email")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Email;
        private bool _mUnknown_Email;
        public string? Email
        {
            get
            {
                if (!_mUnknown_Email) return _mValue_Email;
                throw new UndeferrableValueException("Value 'Member.Email' is not present");
            }
        }

        /// <summary>
        /// Message for invitation.
        /// </summary>
        [PolicyResourceProperty("invitationMessage", "_mUnknown_InvitationMessage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InvitationMessage;
        private bool _mUnknown_InvitationMessage;
        public string? InvitationMessage
        {
            get
            {
                if (!_mUnknown_InvitationMessage) return _mValue_InvitationMessage;
                throw new UndeferrableValueException("Value 'Member.InvitationMessage' is not present");
            }
        }

        /// <summary>
        /// Boolean whether to invite the account to GuardDuty as a member. Defaults to `false`. To detect if an invitation needs to be (re-)sent, the this provider state value is `true` based on a `relationship_status` of `Disabled`, `Enabled`, `Invited`, or `EmailVerificationInProgress`.
        /// </summary>
        [PolicyResourceProperty("invite", "_mUnknown_Invite")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Invite;
        private bool _mUnknown_Invite;
        public bool? Invite
        {
            get
            {
                if (!_mUnknown_Invite) return _mValue_Invite;
                throw new UndeferrableValueException("Value 'Member.Invite' is not present");
            }
        }

        /// <summary>
        /// The status of the relationship between the member account and its primary account. More information can be found in [Amazon GuardDuty API Reference](https://docs.aws.amazon.com/guardduty/latest/ug/get-members.html).
        /// </summary>
        [PolicyResourceProperty("relationshipStatus", "_mUnknown_RelationshipStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RelationshipStatus;
        private bool _mUnknown_RelationshipStatus;
        public string? RelationshipStatus
        {
            get
            {
                if (!_mUnknown_RelationshipStatus) return _mValue_RelationshipStatus;
                throw new UndeferrableValueException("Value 'Member.RelationshipStatus' is not present");
            }
        }
    }

    [PolicyResourceType("aws:guardduty/member:Member")]
    public sealed class MemberArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// AWS account ID for member account.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'MemberArgs.AccountId' is not present");
            }
        }

        /// <summary>
        /// The detector ID of the GuardDuty account where you want to create member accounts.
        /// </summary>
        [PolicyResourceProperty("detectorId", "_mUnknown_DetectorId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DetectorId;
        private bool _mUnknown_DetectorId;
        public string? DetectorId
        {
            get
            {
                if (!_mUnknown_DetectorId) return _mValue_DetectorId;
                throw new UndeferrableValueException("Value 'MemberArgs.DetectorId' is not present");
            }
        }

        /// <summary>
        /// Boolean whether an email notification is sent to the accounts. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("disableEmailNotification", "_mUnknown_DisableEmailNotification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_DisableEmailNotification;
        private bool _mUnknown_DisableEmailNotification;
        public bool? DisableEmailNotification
        {
            get
            {
                if (!_mUnknown_DisableEmailNotification) return _mValue_DisableEmailNotification;
                throw new UndeferrableValueException("Value 'MemberArgs.DisableEmailNotification' is not present");
            }
        }

        /// <summary>
        /// Email address for member account.
        /// </summary>
        [PolicyResourceProperty("email", "_mUnknown_Email")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Email;
        private bool _mUnknown_Email;
        public string? Email
        {
            get
            {
                if (!_mUnknown_Email) return _mValue_Email;
                throw new UndeferrableValueException("Value 'MemberArgs.Email' is not present");
            }
        }

        /// <summary>
        /// Message for invitation.
        /// </summary>
        [PolicyResourceProperty("invitationMessage", "_mUnknown_InvitationMessage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InvitationMessage;
        private bool _mUnknown_InvitationMessage;
        public string? InvitationMessage
        {
            get
            {
                if (!_mUnknown_InvitationMessage) return _mValue_InvitationMessage;
                throw new UndeferrableValueException("Value 'MemberArgs.InvitationMessage' is not present");
            }
        }

        /// <summary>
        /// Boolean whether to invite the account to GuardDuty as a member. Defaults to `false`. To detect if an invitation needs to be (re-)sent, the this provider state value is `true` based on a `relationship_status` of `Disabled`, `Enabled`, `Invited`, or `EmailVerificationInProgress`.
        /// </summary>
        [PolicyResourceProperty("invite", "_mUnknown_Invite")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Invite;
        private bool _mUnknown_Invite;
        public bool? Invite
        {
            get
            {
                if (!_mUnknown_Invite) return _mValue_Invite;
                throw new UndeferrableValueException("Value 'MemberArgs.Invite' is not present");
            }
        }
    }
}
