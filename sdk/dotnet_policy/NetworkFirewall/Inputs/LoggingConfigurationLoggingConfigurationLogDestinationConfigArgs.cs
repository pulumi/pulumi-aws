// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkFirewall.Inputs
{
    public sealed class LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs
    {
        /// <summary>
        /// A map describing the logging destination for the chosen `log_destination_type`.
        /// * For an Amazon S3 bucket, specify the key `bucketName` with the name of the bucket and optionally specify the key `prefix` with a path (Do not add a leading / in the `prefix` as the configuration will have two // when applied).
        /// * For a CloudWatch log group, specify the key `logGroup` with the name of the CloudWatch log group.
        /// * For a Kinesis Data Firehose delivery stream, specify the key `deliveryStream` with the name of the delivery stream.
        /// </summary>
        [PolicyResourceProperty("logDestination", "_mUnknown_LogDestination")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_LogDestination;
        private bool _mUnknown_LogDestination;
        public Dictionary<string, string>? LogDestination
        {
            get
            {
                if (!_mUnknown_LogDestination) return _mValue_LogDestination;
                throw new UndeferrableValueException("Value 'LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs.LogDestination' is not present");
            }
        }

        /// <summary>
        /// The location to send logs to. Valid values: `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.
        /// </summary>
        [PolicyResourceProperty("logDestinationType", "_mUnknown_LogDestinationType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogDestinationType;
        private bool _mUnknown_LogDestinationType;
        public string? LogDestinationType
        {
            get
            {
                if (!_mUnknown_LogDestinationType) return _mValue_LogDestinationType;
                throw new UndeferrableValueException("Value 'LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs.LogDestinationType' is not present");
            }
        }

        /// <summary>
        /// The type of log to send. Valid values: `ALERT` or `FLOW` or `TLS`. Alert logs report traffic that matches a `StatefulRule` with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
        /// </summary>
        [PolicyResourceProperty("logType", "_mUnknown_LogType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogType;
        private bool _mUnknown_LogType;
        public string? LogType
        {
            get
            {
                if (!_mUnknown_LogType) return _mValue_LogType;
                throw new UndeferrableValueException("Value 'LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs.LogType' is not present");
            }
        }
    }
}
