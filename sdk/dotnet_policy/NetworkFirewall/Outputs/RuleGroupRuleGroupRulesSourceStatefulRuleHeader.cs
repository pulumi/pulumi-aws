// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkFirewall.Outputs
{
    public sealed class RuleGroupRuleGroupRulesSourceStatefulRuleHeader
    {
        /// <summary>
        /// The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify `ANY`.
        /// </summary>
        [PolicyResourceProperty("destination", "_mUnknown_Destination")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Destination;
        private bool _mUnknown_Destination;
        public string? Destination
        {
            get
            {
                if (!_mUnknown_Destination) return _mValue_Destination;
                throw new UndeferrableValueException("Value 'RuleGroupRuleGroupRulesSourceStatefulRuleHeader.Destination' is not present");
            }
        }

        /// <summary>
        /// The destination port to inspect for. To match with any address, specify `ANY`.
        /// </summary>
        [PolicyResourceProperty("destinationPort", "_mUnknown_DestinationPort")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationPort;
        private bool _mUnknown_DestinationPort;
        public string? DestinationPort
        {
            get
            {
                if (!_mUnknown_DestinationPort) return _mValue_DestinationPort;
                throw new UndeferrableValueException("Value 'RuleGroupRuleGroupRulesSourceStatefulRuleHeader.DestinationPort' is not present");
            }
        }

        /// <summary>
        /// The direction of traffic flow to inspect. Valid values: `ANY` or `FORWARD`.
        /// </summary>
        [PolicyResourceProperty("direction", "_mUnknown_Direction")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Direction;
        private bool _mUnknown_Direction;
        public string? Direction
        {
            get
            {
                if (!_mUnknown_Direction) return _mValue_Direction;
                throw new UndeferrableValueException("Value 'RuleGroupRuleGroupRulesSourceStatefulRuleHeader.Direction' is not present");
            }
        }

        /// <summary>
        /// The protocol to inspect. Valid values: `IP`, `TCP`, `UDP`, `ICMP`, `HTTP`, `FTP`, `TLS`, `SMB`, `DNS`, `DCERPC`, `SSH`, `SMTP`, `IMAP`, `MSN`, `KRB5`, `IKEV2`, `TFTP`, `NTP`, `DHCP`.
        /// </summary>
        [PolicyResourceProperty("protocol", "_mUnknown_Protocol")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Protocol;
        private bool _mUnknown_Protocol;
        public string? Protocol
        {
            get
            {
                if (!_mUnknown_Protocol) return _mValue_Protocol;
                throw new UndeferrableValueException("Value 'RuleGroupRuleGroupRulesSourceStatefulRuleHeader.Protocol' is not present");
            }
        }

        /// <summary>
        /// The source IP address or address range for, in CIDR notation. To match with any address, specify `ANY`.
        /// </summary>
        [PolicyResourceProperty("source", "_mUnknown_Source")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Source;
        private bool _mUnknown_Source;
        public string? Source
        {
            get
            {
                if (!_mUnknown_Source) return _mValue_Source;
                throw new UndeferrableValueException("Value 'RuleGroupRuleGroupRulesSourceStatefulRuleHeader.Source' is not present");
            }
        }

        /// <summary>
        /// The source port to inspect for. To match with any address, specify `ANY`.
        /// </summary>
        [PolicyResourceProperty("sourcePort", "_mUnknown_SourcePort")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourcePort;
        private bool _mUnknown_SourcePort;
        public string? SourcePort
        {
            get
            {
                if (!_mUnknown_SourcePort) return _mValue_SourcePort;
                throw new UndeferrableValueException("Value 'RuleGroupRuleGroupRulesSourceStatefulRuleHeader.SourcePort' is not present");
            }
        }
    }
}
