// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkFirewall.Outputs
{
    public sealed class GetFirewallFirewallStatusResult
    {
        /// <summary>
        /// Aggregated count of all resources used by reference sets in a firewall.
        /// </summary>
        [Input("capacityUsageSummaries")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Outputs.GetFirewallFirewallStatusCapacityUsageSummaryResult>> _mCapacityUsageSummaries;

        public List<Outputs.GetFirewallFirewallStatusCapacityUsageSummaryResult>? CapacityUsageSummaries => _mCapacityUsageSummaries.GetValue("capacityUsageSummaries");

        /// <summary>
        /// Summary of sync states for all availability zones in which the firewall is configured.
        /// </summary>
        [Input("configurationSyncStateSummary")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mConfigurationSyncStateSummary;

        public string? ConfigurationSyncStateSummary => _mConfigurationSyncStateSummary.GetValue("configurationSyncStateSummary");

        [Input("status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mStatus;

        public string? Status => _mStatus.GetValue("status");

        /// <summary>
        /// Set of subnets configured for use by the firewall.
        /// </summary>
        [Input("syncStates")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Outputs.GetFirewallFirewallStatusSyncStateResult>> _mSyncStates;

        public List<Outputs.GetFirewallFirewallStatusSyncStateResult>? SyncStates => _mSyncStates.GetValue("syncStates");
    }
}
