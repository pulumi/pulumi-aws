// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkFirewall
{
    [PolicyResourceType("aws:networkfirewall/ruleGroup:RuleGroup")]
    public sealed class RuleGroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies the rule group.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The maximum number of operating resources that this rule group can use. For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules. For a stateful rule group, the minimum capacity required is the number of individual rules.
        /// </summary>
        [Input("capacity")]
        public int? Capacity;

        /// <summary>
        /// A friendly description of the rule group.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// KMS encryption configuration settings. See Encryption Configuration below for details.
        /// </summary>
        [Input("encryptionConfiguration")]
        public RuleGroupEncryptionConfiguration? EncryptionConfiguration;

        /// <summary>
        /// A friendly name of the rule group.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// A configuration block that defines the rule group rules. Required unless `rules` is specified. See Rule Group below for details.
        /// </summary>
        [Input("ruleGroup")]
        public RuleGroupRuleGroup? RuleGroupConfiguration;

        /// <summary>
        /// The stateful rule group rules specifications in Suricata file format, with one rule per line. Use this to import your existing Suricata compatible rule groups. Required unless `rule_group` is specified.
        /// </summary>
        [Input("rules")]
        public string? Rules;

        /// <summary>
        /// A map of key:value pairs to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Whether the rule group is stateless (containing stateless rules) or stateful (containing stateful rules). Valid values include: `STATEFUL` or `STATELESS`.
        /// </summary>
        [Input("type")]
        public string? Type;

        /// <summary>
        /// A string token used when updating the rule group.
        /// </summary>
        [Input("updateToken")]
        public string? UpdateToken;
    }
}
