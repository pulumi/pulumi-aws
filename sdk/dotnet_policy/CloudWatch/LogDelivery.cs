// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch
{
    [PolicyResourceType("aws:cloudwatch/logDelivery:LogDelivery")]
    public sealed class LogDelivery : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the delivery.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'LogDelivery.Arn' is not present");
            }
        }

        /// <summary>
        /// The ARN of the delivery destination to use for this delivery.
        /// </summary>
        [PolicyResourceProperty("deliveryDestinationArn", "_mUnknown_DeliveryDestinationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliveryDestinationArn;
        private bool _mUnknown_DeliveryDestinationArn;
        public string? DeliveryDestinationArn
        {
            get
            {
                if (!_mUnknown_DeliveryDestinationArn) return _mValue_DeliveryDestinationArn;
                throw new UndeferrableValueException("Value 'LogDelivery.DeliveryDestinationArn' is not present");
            }
        }

        /// <summary>
        /// The name of the delivery source to use for this delivery.
        /// </summary>
        [PolicyResourceProperty("deliverySourceName", "_mUnknown_DeliverySourceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliverySourceName;
        private bool _mUnknown_DeliverySourceName;
        public string? DeliverySourceName
        {
            get
            {
                if (!_mUnknown_DeliverySourceName) return _mValue_DeliverySourceName;
                throw new UndeferrableValueException("Value 'LogDelivery.DeliverySourceName' is not present");
            }
        }

        /// <summary>
        /// The field delimiter to use between record fields when the final output format of a delivery is in `plain`, `w3c`, or `raw` format.
        /// </summary>
        [PolicyResourceProperty("fieldDelimiter", "_mUnknown_FieldDelimiter")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FieldDelimiter;
        private bool _mUnknown_FieldDelimiter;
        public string? FieldDelimiter
        {
            get
            {
                if (!_mUnknown_FieldDelimiter) return _mValue_FieldDelimiter;
                throw new UndeferrableValueException("Value 'LogDelivery.FieldDelimiter' is not present");
            }
        }

        /// <summary>
        /// The list of record fields to be delivered to the destination, in order.
        /// </summary>
        [PolicyResourceProperty("recordFields", "_mUnknown_RecordFields")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_RecordFields;
        private bool _mUnknown_RecordFields;
        public List<string>? RecordFields
        {
            get
            {
                if (!_mUnknown_RecordFields) return _mValue_RecordFields;
                throw new UndeferrableValueException("Value 'LogDelivery.RecordFields' is not present");
            }
        }

        /// <summary>
        /// Parameters that are valid only when the delivery's delivery destination is an S3 bucket.
        /// </summary>
        [PolicyResourceProperty("s3DeliveryConfigurations", "_mUnknown_S3DeliveryConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.LogDeliveryS3DeliveryConfiguration>? _mValue_S3DeliveryConfigurations;
        private bool _mUnknown_S3DeliveryConfigurations;
        public List<Outputs.LogDeliveryS3DeliveryConfiguration>? S3DeliveryConfigurations
        {
            get
            {
                if (!_mUnknown_S3DeliveryConfigurations) return _mValue_S3DeliveryConfigurations;
                throw new UndeferrableValueException("Value 'LogDelivery.S3DeliveryConfigurations' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'LogDelivery.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'LogDelivery.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cloudwatch/logDelivery:LogDelivery")]
    public sealed class LogDeliveryArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ARN of the delivery destination to use for this delivery.
        /// </summary>
        [PolicyResourceProperty("deliveryDestinationArn", "_mUnknown_DeliveryDestinationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliveryDestinationArn;
        private bool _mUnknown_DeliveryDestinationArn;
        public string? DeliveryDestinationArn
        {
            get
            {
                if (!_mUnknown_DeliveryDestinationArn) return _mValue_DeliveryDestinationArn;
                throw new UndeferrableValueException("Value 'LogDeliveryArgs.DeliveryDestinationArn' is not present");
            }
        }

        /// <summary>
        /// The name of the delivery source to use for this delivery.
        /// </summary>
        [PolicyResourceProperty("deliverySourceName", "_mUnknown_DeliverySourceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliverySourceName;
        private bool _mUnknown_DeliverySourceName;
        public string? DeliverySourceName
        {
            get
            {
                if (!_mUnknown_DeliverySourceName) return _mValue_DeliverySourceName;
                throw new UndeferrableValueException("Value 'LogDeliveryArgs.DeliverySourceName' is not present");
            }
        }

        /// <summary>
        /// The field delimiter to use between record fields when the final output format of a delivery is in `plain`, `w3c`, or `raw` format.
        /// </summary>
        [PolicyResourceProperty("fieldDelimiter", "_mUnknown_FieldDelimiter")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FieldDelimiter;
        private bool _mUnknown_FieldDelimiter;
        public string? FieldDelimiter
        {
            get
            {
                if (!_mUnknown_FieldDelimiter) return _mValue_FieldDelimiter;
                throw new UndeferrableValueException("Value 'LogDeliveryArgs.FieldDelimiter' is not present");
            }
        }

        /// <summary>
        /// The list of record fields to be delivered to the destination, in order.
        /// </summary>
        [PolicyResourceProperty("recordFields", "_mUnknown_RecordFields")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_RecordFields;
        private bool _mUnknown_RecordFields;
        public List<string>? RecordFields
        {
            get
            {
                if (!_mUnknown_RecordFields) return _mValue_RecordFields;
                throw new UndeferrableValueException("Value 'LogDeliveryArgs.RecordFields' is not present");
            }
        }

        /// <summary>
        /// Parameters that are valid only when the delivery's delivery destination is an S3 bucket.
        /// </summary>
        [PolicyResourceProperty("s3DeliveryConfigurations", "_mUnknown_S3DeliveryConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.LogDeliveryS3DeliveryConfigurationArgs>? _mValue_S3DeliveryConfigurations;
        private bool _mUnknown_S3DeliveryConfigurations;
        public List<Inputs.LogDeliveryS3DeliveryConfigurationArgs>? S3DeliveryConfigurations
        {
            get
            {
                if (!_mUnknown_S3DeliveryConfigurations) return _mValue_S3DeliveryConfigurations;
                throw new UndeferrableValueException("Value 'LogDeliveryArgs.S3DeliveryConfigurations' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'LogDeliveryArgs.Tags' is not present");
            }
        }
    }
}
