// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch.Inputs
{
    public sealed class MetricAlarmMetricQueryMetricArgs
    {
        /// <summary>
        /// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
        /// </summary>
        [PolicyResourceProperty("dimensions", "_mUnknown_Dimensions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Dimensions;
        private bool _mUnknown_Dimensions;
        public Dictionary<string, string>? Dimensions
        {
            get
            {
                if (!_mUnknown_Dimensions) return _mValue_Dimensions;
                throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryMetricArgs.Dimensions' is not present");
            }
        }

        /// <summary>
        /// The name for this metric.
        /// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
        /// </summary>
        [PolicyResourceProperty("metricName", "_mUnknown_MetricName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricName;
        private bool _mUnknown_MetricName;
        public string? MetricName
        {
            get
            {
                if (!_mUnknown_MetricName) return _mValue_MetricName;
                throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryMetricArgs.MetricName' is not present");
            }
        }

        /// <summary>
        /// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
        /// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
        /// </summary>
        [PolicyResourceProperty("namespace", "_mUnknown_Namespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Namespace;
        private bool _mUnknown_Namespace;
        public string? Namespace
        {
            get
            {
                if (!_mUnknown_Namespace) return _mValue_Namespace;
                throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryMetricArgs.Namespace' is not present");
            }
        }

        /// <summary>
        /// Granularity in seconds of returned data points.
        /// For metrics with regular resolution, valid values are any multiple of `60`.
        /// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
        /// </summary>
        [PolicyResourceProperty("period", "_mUnknown_Period")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Period;
        private bool _mUnknown_Period;
        public int? Period
        {
            get
            {
                if (!_mUnknown_Period) return _mValue_Period;
                throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryMetricArgs.Period' is not present");
            }
        }

        /// <summary>
        /// The statistic to apply to this metric.
        /// See docs for [supported statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html).
        /// </summary>
        [PolicyResourceProperty("stat", "_mUnknown_Stat")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Stat;
        private bool _mUnknown_Stat;
        public string? Stat
        {
            get
            {
                if (!_mUnknown_Stat) return _mValue_Stat;
                throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryMetricArgs.Stat' is not present");
            }
        }

        /// <summary>
        /// The unit for this metric.
        /// </summary>
        [PolicyResourceProperty("unit", "_mUnknown_Unit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Unit;
        private bool _mUnknown_Unit;
        public string? Unit
        {
            get
            {
                if (!_mUnknown_Unit) return _mValue_Unit;
                throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryMetricArgs.Unit' is not present");
            }
        }
    }
}
