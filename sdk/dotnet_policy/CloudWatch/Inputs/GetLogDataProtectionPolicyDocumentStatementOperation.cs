// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch.Inputs
{
    public sealed class GetLogDataProtectionPolicyDocumentStatementOperationArgs
    {
        /// <summary>
        /// Configures the detection of sensitive data.
        /// </summary>
        [PolicyResourceProperty("audit", "_mUnknown_Audit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs? _mValue_Audit;
        private bool _mUnknown_Audit;
        public Inputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs? Audit
        {
            get
            {
                if (!_mUnknown_Audit) return _mValue_Audit;
                throw new UndeferrableValueException("Value 'GetLogDataProtectionPolicyDocumentStatementOperationArgs.Audit' is not present");
            }
        }

        /// <summary>
        /// Configures the masking of sensitive data.
        /// 
        /// &gt; Every policy statement must specify exactly one operation.
        /// </summary>
        [PolicyResourceProperty("deidentify", "_mUnknown_Deidentify")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs? _mValue_Deidentify;
        private bool _mUnknown_Deidentify;
        public Inputs.GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs? Deidentify
        {
            get
            {
                if (!_mUnknown_Deidentify) return _mValue_Deidentify;
                throw new UndeferrableValueException("Value 'GetLogDataProtectionPolicyDocumentStatementOperationArgs.Deidentify' is not present");
            }
        }
    }
}
