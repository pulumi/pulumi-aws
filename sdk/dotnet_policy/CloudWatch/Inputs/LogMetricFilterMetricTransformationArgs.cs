// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch.Inputs
{
    public sealed class LogMetricFilterMetricTransformationArgs
    {
        /// <summary>
        /// The value to emit when a filter pattern does not match a log event. Conflicts with `dimensions`.
        /// </summary>
        [Input("defaultValue")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDefaultValue;

        public string? DefaultValue => _mDefaultValue.GetValue("defaultValue");

        /// <summary>
        /// Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with `default_value`.
        /// </summary>
        [Input("dimensions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mDimensions;

        public Dictionary<string, string>? Dimensions => _mDimensions.GetValue("dimensions");

        /// <summary>
        /// The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)
        /// </summary>
        [Input("name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mName;

        public string? Name => _mName.GetValue("name");

        /// <summary>
        /// The destination namespace of the CloudWatch metric.
        /// </summary>
        [Input("namespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mNamespace;

        public string? Namespace => _mNamespace.GetValue("namespace");

        /// <summary>
        /// The unit to assign to the metric. If you omit this, the unit is set as `None`.
        /// </summary>
        [Input("unit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mUnit;

        public string? Unit => _mUnit.GetValue("unit");

        /// <summary>
        /// What to publish to the metric. For example, if you're counting the occurrences of a particular term like "Error", the value will be "1" for each occurrence. If you're counting the bytes transferred the published value will be the value in the log event.
        /// </summary>
        [Input("value")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mValue;

        public string? Value => _mValue.GetValue("value");
    }
}
