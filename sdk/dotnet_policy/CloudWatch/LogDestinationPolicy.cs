// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch
{
    [PolicyResourceType("aws:cloudwatch/logDestinationPolicy:LogDestinationPolicy")]
    public sealed class LogDestinationPolicy : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The policy document. This is a JSON formatted string.
        /// </summary>
        [PolicyResourceProperty("accessPolicy", "_mUnknown_AccessPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccessPolicy;
        private bool _mUnknown_AccessPolicy;
        public string? AccessPolicy
        {
            get
            {
                if (!_mUnknown_AccessPolicy) return _mValue_AccessPolicy;
                throw new UndeferrableValueException("Value 'LogDestinationPolicy.AccessPolicy' is not present");
            }
        }

        /// <summary>
        /// A name for the subscription filter
        /// </summary>
        [PolicyResourceProperty("destinationName", "_mUnknown_DestinationName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationName;
        private bool _mUnknown_DestinationName;
        public string? DestinationName
        {
            get
            {
                if (!_mUnknown_DestinationName) return _mValue_DestinationName;
                throw new UndeferrableValueException("Value 'LogDestinationPolicy.DestinationName' is not present");
            }
        }

        /// <summary>
        /// Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.
        /// </summary>
        [PolicyResourceProperty("forceUpdate", "_mUnknown_ForceUpdate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceUpdate;
        private bool _mUnknown_ForceUpdate;
        public bool? ForceUpdate
        {
            get
            {
                if (!_mUnknown_ForceUpdate) return _mValue_ForceUpdate;
                throw new UndeferrableValueException("Value 'LogDestinationPolicy.ForceUpdate' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cloudwatch/logDestinationPolicy:LogDestinationPolicy")]
    public sealed class LogDestinationPolicyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The policy document. This is a JSON formatted string.
        /// </summary>
        [PolicyResourceProperty("accessPolicy", "_mUnknown_AccessPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccessPolicy;
        private bool _mUnknown_AccessPolicy;
        public string? AccessPolicy
        {
            get
            {
                if (!_mUnknown_AccessPolicy) return _mValue_AccessPolicy;
                throw new UndeferrableValueException("Value 'LogDestinationPolicyArgs.AccessPolicy' is not present");
            }
        }

        /// <summary>
        /// A name for the subscription filter
        /// </summary>
        [PolicyResourceProperty("destinationName", "_mUnknown_DestinationName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationName;
        private bool _mUnknown_DestinationName;
        public string? DestinationName
        {
            get
            {
                if (!_mUnknown_DestinationName) return _mValue_DestinationName;
                throw new UndeferrableValueException("Value 'LogDestinationPolicyArgs.DestinationName' is not present");
            }
        }

        /// <summary>
        /// Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.
        /// </summary>
        [PolicyResourceProperty("forceUpdate", "_mUnknown_ForceUpdate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceUpdate;
        private bool _mUnknown_ForceUpdate;
        public bool? ForceUpdate
        {
            get
            {
                if (!_mUnknown_ForceUpdate) return _mValue_ForceUpdate;
                throw new UndeferrableValueException("Value 'LogDestinationPolicyArgs.ForceUpdate' is not present");
            }
        }
    }
}
