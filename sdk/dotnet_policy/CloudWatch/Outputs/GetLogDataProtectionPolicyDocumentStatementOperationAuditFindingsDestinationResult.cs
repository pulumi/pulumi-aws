// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch.Outputs
{
    public sealed class GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationResult
    {
        /// <summary>
        /// Configures CloudWatch Logs as a findings destination.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLogs", "_mUnknown_CloudwatchLogs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsResult? _mValue_CloudwatchLogs;
        private bool _mUnknown_CloudwatchLogs;
        public Outputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsResult? CloudwatchLogs
        {
            get
            {
                if (!_mUnknown_CloudwatchLogs) return _mValue_CloudwatchLogs;
                throw new UndeferrableValueException("Value 'GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationResult.CloudwatchLogs' is not present");
            }
        }

        /// <summary>
        /// Configures Kinesis Firehose as a findings destination.
        /// </summary>
        [PolicyResourceProperty("firehose", "_mUnknown_Firehose")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseResult? _mValue_Firehose;
        private bool _mUnknown_Firehose;
        public Outputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseResult? Firehose
        {
            get
            {
                if (!_mUnknown_Firehose) return _mValue_Firehose;
                throw new UndeferrableValueException("Value 'GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationResult.Firehose' is not present");
            }
        }

        /// <summary>
        /// Configures S3 as a findings destination.
        /// </summary>
        [PolicyResourceProperty("s3", "_mUnknown_S3")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Result? _mValue_S3;
        private bool _mUnknown_S3;
        public Outputs.GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Result? S3
        {
            get
            {
                if (!_mUnknown_S3) return _mValue_S3;
                throw new UndeferrableValueException("Value 'GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationResult.S3' is not present");
            }
        }
    }
}
