// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch
{
    [PolicyResourceType("aws:cloudwatch/eventArchive:EventArchive")]
    public sealed class EventArchive : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the event archive.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The description of the new event archive.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Instructs the new event archive to only capture events matched by this pattern. By default, it attempts to archive every event received in the `event_source_arn`.
        /// </summary>
        [Input("eventPattern")]
        public string? EventPattern;

        /// <summary>
        /// Event bus source ARN from where these events should be archived.
        /// </summary>
        [Input("eventSourceArn")]
        public string? EventSourceArn;

        /// <summary>
        /// The name of the new event archive. The archive name cannot exceed 48 characters.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The maximum number of days to retain events in the new event archive. By default, it archives indefinitely.
        /// </summary>
        [Input("retentionDays")]
        public int? RetentionDays;
    }
}
