// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch
{
    [PolicyResourceType("aws:cloudwatch/LogMetricFilterMetricTransformation:LogMetricFilterMetricTransformation")]
    public sealed class LogMetricFilterMetricTransformation
    {
        /// <summary>
        /// The value to emit when a filter pattern does not match a log event. Conflicts with `dimensions`.
        /// </summary>
        [Input("defaultValue")]
        public string? DefaultValue;

        /// <summary>
        /// Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with `default_value`.
        /// </summary>
        [Input("dimensions")]
        public Dictionary<string, string>? Dimensions;

        /// <summary>
        /// The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The destination namespace of the CloudWatch metric.
        /// </summary>
        [Input("namespace")]
        public string? Namespace;

        /// <summary>
        /// The unit to assign to the metric. If you omit this, the unit is set as `None`.
        /// </summary>
        [Input("unit")]
        public string? Unit;

        /// <summary>
        /// What to publish to the metric. For example, if you're counting the occurrences of a particular term like "Error", the value will be "1" for each occurrence. If you're counting the bytes transferred the published value will be the value in the log event.
        /// </summary>
        [Input("value")]
        public string? Value;
    }
}
