// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudWatch
{
    [PolicyResourceType("aws:cloudwatch/eventEndpoint:EventEndpoint")]
    public sealed class EventEndpoint : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the endpoint that was created.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A description of the global endpoint.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The URL of the endpoint that was created.
        /// </summary>
        [Input("endpointUrl")]
        public string? EndpointUrl;

        /// <summary>
        /// The event buses to use. The names of the event buses must be identical in each Region. Exactly two event buses are required. Documented below.
        /// </summary>
        [Input("eventBuses")]
        public List<EventEndpointEventBus>? EventBuses;

        /// <summary>
        /// The name of the global endpoint.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Parameters used for replication. Documented below.
        /// </summary>
        [Input("replicationConfig")]
        public EventEndpointReplicationConfig? ReplicationConfig;

        /// <summary>
        /// The ARN of the IAM role used for replication between event buses.
        /// </summary>
        [Input("roleArn")]
        public string? RoleArn;

        /// <summary>
        /// Parameters used for routing, including the health check and secondary Region. Documented below.
        /// </summary>
        [Input("routingConfig")]
        public EventEndpointRoutingConfig? RoutingConfig;
    }
}
