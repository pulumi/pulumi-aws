// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DirectConnect
{
    [PolicyResourceType("aws:directconnect/linkAggregationGroup:LinkAggregationGroup")]
    public sealed class LinkAggregationGroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the LAG.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The ID of an existing dedicated connection to migrate to the LAG.
        /// </summary>
        [Input("connectionId")]
        public string? ConnectionId;

        /// <summary>
        /// The bandwidth of the individual dedicated connections bundled by the LAG. Valid values: 1Gbps, 10Gbps, 100Gbps, and 400Gbps. Case sensitive. Refer to the AWS Direct Connection supported bandwidths for [Dedicated Connections](https://docs.aws.amazon.com/directconnect/latest/UserGuide/dedicated_connection.html).
        /// </summary>
        [Input("connectionsBandwidth")]
        public string? ConnectionsBandwidth;

        /// <summary>
        /// A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are *not* recoverable.
        /// </summary>
        [Input("forceDestroy")]
        public bool? ForceDestroy;

        /// <summary>
        /// Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).
        /// </summary>
        [Input("hasLogicalRedundancy")]
        public string? HasLogicalRedundancy;

        /// <summary>
        /// Indicates whether jumbo frames (9001 MTU) are supported.
        /// </summary>
        [Input("jumboFrameCapable")]
        public bool? JumboFrameCapable;

        /// <summary>
        /// The AWS Direct Connect location in which the LAG should be allocated. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.
        /// </summary>
        [Input("location")]
        public string? Location;

        /// <summary>
        /// The name of the LAG.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The ID of the AWS account that owns the LAG.
        /// </summary>
        [Input("ownerAccountId")]
        public string? OwnerAccountId;

        /// <summary>
        /// The name of the service provider associated with the LAG.
        /// </summary>
        [Input("providerName")]
        public string? ProviderName;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
