// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DirectConnect
{
    [PolicyResourceType("aws:directconnect/bgpPeer:BgpPeer")]
    public sealed class BgpPeer : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The address family for the BGP peer. `ipv4 ` or `ipv6`.
        /// </summary>
        [PolicyResourceProperty("addressFamily", "_mUnknown_AddressFamily")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AddressFamily;
        private bool _mUnknown_AddressFamily;
        public string? AddressFamily
        {
            get
            {
                if (!_mUnknown_AddressFamily) return _mValue_AddressFamily;
                throw new UndeferrableValueException("Value 'BgpPeer.AddressFamily' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR address to use to send traffic to Amazon.
        /// Required for IPv4 BGP peers on public virtual interfaces.
        /// </summary>
        [PolicyResourceProperty("amazonAddress", "_mUnknown_AmazonAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmazonAddress;
        private bool _mUnknown_AmazonAddress;
        public string? AmazonAddress
        {
            get
            {
                if (!_mUnknown_AmazonAddress) return _mValue_AmazonAddress;
                throw new UndeferrableValueException("Value 'BgpPeer.AmazonAddress' is not present");
            }
        }

        /// <summary>
        /// The Direct Connect endpoint on which the BGP peer terminates.
        /// </summary>
        [PolicyResourceProperty("awsDevice", "_mUnknown_AwsDevice")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsDevice;
        private bool _mUnknown_AwsDevice;
        public string? AwsDevice
        {
            get
            {
                if (!_mUnknown_AwsDevice) return _mValue_AwsDevice;
                throw new UndeferrableValueException("Value 'BgpPeer.AwsDevice' is not present");
            }
        }

        /// <summary>
        /// The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAsn", "_mUnknown_BgpAsn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BgpAsn;
        private bool _mUnknown_BgpAsn;
        public int? BgpAsn
        {
            get
            {
                if (!_mUnknown_BgpAsn) return _mValue_BgpAsn;
                throw new UndeferrableValueException("Value 'BgpPeer.BgpAsn' is not present");
            }
        }

        /// <summary>
        /// The authentication key for BGP configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAuthKey", "_mUnknown_BgpAuthKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BgpAuthKey;
        private bool _mUnknown_BgpAuthKey;
        public string? BgpAuthKey
        {
            get
            {
                if (!_mUnknown_BgpAuthKey) return _mValue_BgpAuthKey;
                throw new UndeferrableValueException("Value 'BgpPeer.BgpAuthKey' is not present");
            }
        }

        /// <summary>
        /// The ID of the BGP peer.
        /// </summary>
        [PolicyResourceProperty("bgpPeerId", "_mUnknown_BgpPeerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BgpPeerId;
        private bool _mUnknown_BgpPeerId;
        public string? BgpPeerId
        {
            get
            {
                if (!_mUnknown_BgpPeerId) return _mValue_BgpPeerId;
                throw new UndeferrableValueException("Value 'BgpPeer.BgpPeerId' is not present");
            }
        }

        /// <summary>
        /// The Up/Down state of the BGP peer.
        /// </summary>
        [PolicyResourceProperty("bgpStatus", "_mUnknown_BgpStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BgpStatus;
        private bool _mUnknown_BgpStatus;
        public string? BgpStatus
        {
            get
            {
                if (!_mUnknown_BgpStatus) return _mValue_BgpStatus;
                throw new UndeferrableValueException("Value 'BgpPeer.BgpStatus' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR destination address to which Amazon should send traffic.
        /// Required for IPv4 BGP peers on public virtual interfaces.
        /// </summary>
        [PolicyResourceProperty("customerAddress", "_mUnknown_CustomerAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomerAddress;
        private bool _mUnknown_CustomerAddress;
        public string? CustomerAddress
        {
            get
            {
                if (!_mUnknown_CustomerAddress) return _mValue_CustomerAddress;
                throw new UndeferrableValueException("Value 'BgpPeer.CustomerAddress' is not present");
            }
        }

        /// <summary>
        /// The ID of the Direct Connect virtual interface on which to create the BGP peer.
        /// </summary>
        [PolicyResourceProperty("virtualInterfaceId", "_mUnknown_VirtualInterfaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VirtualInterfaceId;
        private bool _mUnknown_VirtualInterfaceId;
        public string? VirtualInterfaceId
        {
            get
            {
                if (!_mUnknown_VirtualInterfaceId) return _mValue_VirtualInterfaceId;
                throw new UndeferrableValueException("Value 'BgpPeer.VirtualInterfaceId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:directconnect/bgpPeer:BgpPeer")]
    public sealed class BgpPeerArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The address family for the BGP peer. `ipv4 ` or `ipv6`.
        /// </summary>
        [PolicyResourceProperty("addressFamily", "_mUnknown_AddressFamily")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AddressFamily;
        private bool _mUnknown_AddressFamily;
        public string? AddressFamily
        {
            get
            {
                if (!_mUnknown_AddressFamily) return _mValue_AddressFamily;
                throw new UndeferrableValueException("Value 'BgpPeerArgs.AddressFamily' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR address to use to send traffic to Amazon.
        /// Required for IPv4 BGP peers on public virtual interfaces.
        /// </summary>
        [PolicyResourceProperty("amazonAddress", "_mUnknown_AmazonAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmazonAddress;
        private bool _mUnknown_AmazonAddress;
        public string? AmazonAddress
        {
            get
            {
                if (!_mUnknown_AmazonAddress) return _mValue_AmazonAddress;
                throw new UndeferrableValueException("Value 'BgpPeerArgs.AmazonAddress' is not present");
            }
        }

        /// <summary>
        /// The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAsn", "_mUnknown_BgpAsn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BgpAsn;
        private bool _mUnknown_BgpAsn;
        public int? BgpAsn
        {
            get
            {
                if (!_mUnknown_BgpAsn) return _mValue_BgpAsn;
                throw new UndeferrableValueException("Value 'BgpPeerArgs.BgpAsn' is not present");
            }
        }

        /// <summary>
        /// The authentication key for BGP configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAuthKey", "_mUnknown_BgpAuthKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BgpAuthKey;
        private bool _mUnknown_BgpAuthKey;
        public string? BgpAuthKey
        {
            get
            {
                if (!_mUnknown_BgpAuthKey) return _mValue_BgpAuthKey;
                throw new UndeferrableValueException("Value 'BgpPeerArgs.BgpAuthKey' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR destination address to which Amazon should send traffic.
        /// Required for IPv4 BGP peers on public virtual interfaces.
        /// </summary>
        [PolicyResourceProperty("customerAddress", "_mUnknown_CustomerAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomerAddress;
        private bool _mUnknown_CustomerAddress;
        public string? CustomerAddress
        {
            get
            {
                if (!_mUnknown_CustomerAddress) return _mValue_CustomerAddress;
                throw new UndeferrableValueException("Value 'BgpPeerArgs.CustomerAddress' is not present");
            }
        }

        /// <summary>
        /// The ID of the Direct Connect virtual interface on which to create the BGP peer.
        /// </summary>
        [PolicyResourceProperty("virtualInterfaceId", "_mUnknown_VirtualInterfaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VirtualInterfaceId;
        private bool _mUnknown_VirtualInterfaceId;
        public string? VirtualInterfaceId
        {
            get
            {
                if (!_mUnknown_VirtualInterfaceId) return _mValue_VirtualInterfaceId;
                throw new UndeferrableValueException("Value 'BgpPeerArgs.VirtualInterfaceId' is not present");
            }
        }
    }
}
