// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DirectConnect
{
    [PolicyResourceType("aws:directconnect/hostedPrivateVirtualInterfaceAccepter:HostedPrivateVirtualInterfaceAccepter")]
    public sealed class HostedPrivateVirtualInterfaceAccepter : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the virtual interface.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepter.Arn' is not present");
            }
        }

        /// <summary>
        /// The ID of the Direct Connect gateway to which to connect the virtual interface.
        /// </summary>
        [PolicyResourceProperty("dxGatewayId", "_mUnknown_DxGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DxGatewayId;
        private bool _mUnknown_DxGatewayId;
        public string? DxGatewayId
        {
            get
            {
                if (!_mUnknown_DxGatewayId) return _mValue_DxGatewayId;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepter.DxGatewayId' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepter.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepter.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The ID of the Direct Connect virtual interface to accept.
        /// </summary>
        [PolicyResourceProperty("virtualInterfaceId", "_mUnknown_VirtualInterfaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VirtualInterfaceId;
        private bool _mUnknown_VirtualInterfaceId;
        public string? VirtualInterfaceId
        {
            get
            {
                if (!_mUnknown_VirtualInterfaceId) return _mValue_VirtualInterfaceId;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepter.VirtualInterfaceId' is not present");
            }
        }

        /// <summary>
        /// The ID of the virtual private gateway to which to connect the virtual interface.
        /// </summary>
        [PolicyResourceProperty("vpnGatewayId", "_mUnknown_VpnGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpnGatewayId;
        private bool _mUnknown_VpnGatewayId;
        public string? VpnGatewayId
        {
            get
            {
                if (!_mUnknown_VpnGatewayId) return _mValue_VpnGatewayId;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepter.VpnGatewayId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:directconnect/hostedPrivateVirtualInterfaceAccepter:HostedPrivateVirtualInterfaceAccepter")]
    public sealed class HostedPrivateVirtualInterfaceAccepterArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the Direct Connect gateway to which to connect the virtual interface.
        /// </summary>
        [PolicyResourceProperty("dxGatewayId", "_mUnknown_DxGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DxGatewayId;
        private bool _mUnknown_DxGatewayId;
        public string? DxGatewayId
        {
            get
            {
                if (!_mUnknown_DxGatewayId) return _mValue_DxGatewayId;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepterArgs.DxGatewayId' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepterArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The ID of the Direct Connect virtual interface to accept.
        /// </summary>
        [PolicyResourceProperty("virtualInterfaceId", "_mUnknown_VirtualInterfaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VirtualInterfaceId;
        private bool _mUnknown_VirtualInterfaceId;
        public string? VirtualInterfaceId
        {
            get
            {
                if (!_mUnknown_VirtualInterfaceId) return _mValue_VirtualInterfaceId;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepterArgs.VirtualInterfaceId' is not present");
            }
        }

        /// <summary>
        /// The ID of the virtual private gateway to which to connect the virtual interface.
        /// </summary>
        [PolicyResourceProperty("vpnGatewayId", "_mUnknown_VpnGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpnGatewayId;
        private bool _mUnknown_VpnGatewayId;
        public string? VpnGatewayId
        {
            get
            {
                if (!_mUnknown_VpnGatewayId) return _mValue_VpnGatewayId;
                throw new UndeferrableValueException("Value 'HostedPrivateVirtualInterfaceAccepterArgs.VpnGatewayId' is not present");
            }
        }
    }
}
