// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DirectConnect
{
    [PolicyResourceType("aws:directconnect/gatewayAssociationProposal:GatewayAssociationProposal")]
    public sealed class GatewayAssociationProposal : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
        /// </summary>
        [PolicyResourceProperty("allowedPrefixes", "_mUnknown_AllowedPrefixes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedPrefixes;
        private bool _mUnknown_AllowedPrefixes;
        public List<string>? AllowedPrefixes
        {
            get
            {
                if (!_mUnknown_AllowedPrefixes) return _mValue_AllowedPrefixes;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposal.AllowedPrefixes' is not present");
            }
        }

        /// <summary>
        /// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
        /// </summary>
        [PolicyResourceProperty("associatedGatewayId", "_mUnknown_AssociatedGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssociatedGatewayId;
        private bool _mUnknown_AssociatedGatewayId;
        public string? AssociatedGatewayId
        {
            get
            {
                if (!_mUnknown_AssociatedGatewayId) return _mValue_AssociatedGatewayId;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposal.AssociatedGatewayId' is not present");
            }
        }

        /// <summary>
        /// The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
        /// </summary>
        [PolicyResourceProperty("associatedGatewayOwnerAccountId", "_mUnknown_AssociatedGatewayOwnerAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssociatedGatewayOwnerAccountId;
        private bool _mUnknown_AssociatedGatewayOwnerAccountId;
        public string? AssociatedGatewayOwnerAccountId
        {
            get
            {
                if (!_mUnknown_AssociatedGatewayOwnerAccountId) return _mValue_AssociatedGatewayOwnerAccountId;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposal.AssociatedGatewayOwnerAccountId' is not present");
            }
        }

        /// <summary>
        /// The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
        /// </summary>
        [PolicyResourceProperty("associatedGatewayType", "_mUnknown_AssociatedGatewayType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssociatedGatewayType;
        private bool _mUnknown_AssociatedGatewayType;
        public string? AssociatedGatewayType
        {
            get
            {
                if (!_mUnknown_AssociatedGatewayType) return _mValue_AssociatedGatewayType;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposal.AssociatedGatewayType' is not present");
            }
        }

        /// <summary>
        /// Direct Connect Gateway identifier.
        /// </summary>
        [PolicyResourceProperty("dxGatewayId", "_mUnknown_DxGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DxGatewayId;
        private bool _mUnknown_DxGatewayId;
        public string? DxGatewayId
        {
            get
            {
                if (!_mUnknown_DxGatewayId) return _mValue_DxGatewayId;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposal.DxGatewayId' is not present");
            }
        }

        /// <summary>
        /// AWS Account identifier of the Direct Connect Gateway's owner.
        /// </summary>
        [PolicyResourceProperty("dxGatewayOwnerAccountId", "_mUnknown_DxGatewayOwnerAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DxGatewayOwnerAccountId;
        private bool _mUnknown_DxGatewayOwnerAccountId;
        public string? DxGatewayOwnerAccountId
        {
            get
            {
                if (!_mUnknown_DxGatewayOwnerAccountId) return _mValue_DxGatewayOwnerAccountId;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposal.DxGatewayOwnerAccountId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:directconnect/gatewayAssociationProposal:GatewayAssociationProposal")]
    public sealed class GatewayAssociationProposalArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
        /// </summary>
        [PolicyResourceProperty("allowedPrefixes", "_mUnknown_AllowedPrefixes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedPrefixes;
        private bool _mUnknown_AllowedPrefixes;
        public List<string>? AllowedPrefixes
        {
            get
            {
                if (!_mUnknown_AllowedPrefixes) return _mValue_AllowedPrefixes;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposalArgs.AllowedPrefixes' is not present");
            }
        }

        /// <summary>
        /// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
        /// </summary>
        [PolicyResourceProperty("associatedGatewayId", "_mUnknown_AssociatedGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssociatedGatewayId;
        private bool _mUnknown_AssociatedGatewayId;
        public string? AssociatedGatewayId
        {
            get
            {
                if (!_mUnknown_AssociatedGatewayId) return _mValue_AssociatedGatewayId;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposalArgs.AssociatedGatewayId' is not present");
            }
        }

        /// <summary>
        /// Direct Connect Gateway identifier.
        /// </summary>
        [PolicyResourceProperty("dxGatewayId", "_mUnknown_DxGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DxGatewayId;
        private bool _mUnknown_DxGatewayId;
        public string? DxGatewayId
        {
            get
            {
                if (!_mUnknown_DxGatewayId) return _mValue_DxGatewayId;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposalArgs.DxGatewayId' is not present");
            }
        }

        /// <summary>
        /// AWS Account identifier of the Direct Connect Gateway's owner.
        /// </summary>
        [PolicyResourceProperty("dxGatewayOwnerAccountId", "_mUnknown_DxGatewayOwnerAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DxGatewayOwnerAccountId;
        private bool _mUnknown_DxGatewayOwnerAccountId;
        public string? DxGatewayOwnerAccountId
        {
            get
            {
                if (!_mUnknown_DxGatewayOwnerAccountId) return _mValue_DxGatewayOwnerAccountId;
                throw new UndeferrableValueException("Value 'GatewayAssociationProposalArgs.DxGatewayOwnerAccountId' is not present");
            }
        }
    }
}
