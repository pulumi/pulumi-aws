// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DirectConnect
{
    [PolicyResourceType("aws:directconnect/hostedPublicVirtualInterface:HostedPublicVirtualInterface")]
    public sealed class HostedPublicVirtualInterface : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The address family for the BGP peer. `ipv4 ` or `ipv6`.
        /// </summary>
        [PolicyResourceProperty("addressFamily", "_mUnknown_AddressFamily")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AddressFamily;
        private bool _mUnknown_AddressFamily;
        public string? AddressFamily
        {
            get
            {
                if (!_mUnknown_AddressFamily) return _mValue_AddressFamily;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.AddressFamily' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.
        /// </summary>
        [PolicyResourceProperty("amazonAddress", "_mUnknown_AmazonAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmazonAddress;
        private bool _mUnknown_AmazonAddress;
        public string? AmazonAddress
        {
            get
            {
                if (!_mUnknown_AmazonAddress) return _mValue_AmazonAddress;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.AmazonAddress' is not present");
            }
        }

        [PolicyResourceProperty("amazonSideAsn", "_mUnknown_AmazonSideAsn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmazonSideAsn;
        private bool _mUnknown_AmazonSideAsn;
        public string? AmazonSideAsn
        {
            get
            {
                if (!_mUnknown_AmazonSideAsn) return _mValue_AmazonSideAsn;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.AmazonSideAsn' is not present");
            }
        }

        /// <summary>
        /// The ARN of the virtual interface.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.Arn' is not present");
            }
        }

        /// <summary>
        /// The Direct Connect endpoint on which the virtual interface terminates.
        /// </summary>
        [PolicyResourceProperty("awsDevice", "_mUnknown_AwsDevice")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsDevice;
        private bool _mUnknown_AwsDevice;
        public string? AwsDevice
        {
            get
            {
                if (!_mUnknown_AwsDevice) return _mValue_AwsDevice;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.AwsDevice' is not present");
            }
        }

        /// <summary>
        /// The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAsn", "_mUnknown_BgpAsn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BgpAsn;
        private bool _mUnknown_BgpAsn;
        public int? BgpAsn
        {
            get
            {
                if (!_mUnknown_BgpAsn) return _mValue_BgpAsn;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.BgpAsn' is not present");
            }
        }

        /// <summary>
        /// The authentication key for BGP configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAuthKey", "_mUnknown_BgpAuthKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BgpAuthKey;
        private bool _mUnknown_BgpAuthKey;
        public string? BgpAuthKey
        {
            get
            {
                if (!_mUnknown_BgpAuthKey) return _mValue_BgpAuthKey;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.BgpAuthKey' is not present");
            }
        }

        /// <summary>
        /// The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.
        /// </summary>
        [PolicyResourceProperty("connectionId", "_mUnknown_ConnectionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConnectionId;
        private bool _mUnknown_ConnectionId;
        public string? ConnectionId
        {
            get
            {
                if (!_mUnknown_ConnectionId) return _mValue_ConnectionId;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.ConnectionId' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.
        /// </summary>
        [PolicyResourceProperty("customerAddress", "_mUnknown_CustomerAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomerAddress;
        private bool _mUnknown_CustomerAddress;
        public string? CustomerAddress
        {
            get
            {
                if (!_mUnknown_CustomerAddress) return _mValue_CustomerAddress;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.CustomerAddress' is not present");
            }
        }

        /// <summary>
        /// The name for the virtual interface.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.Name' is not present");
            }
        }

        /// <summary>
        /// The AWS account that will own the new virtual interface.
        /// </summary>
        [PolicyResourceProperty("ownerAccountId", "_mUnknown_OwnerAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerAccountId;
        private bool _mUnknown_OwnerAccountId;
        public string? OwnerAccountId
        {
            get
            {
                if (!_mUnknown_OwnerAccountId) return _mValue_OwnerAccountId;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.OwnerAccountId' is not present");
            }
        }

        /// <summary>
        /// A list of routes to be advertised to the AWS network in this region.
        /// </summary>
        [PolicyResourceProperty("routeFilterPrefixes", "_mUnknown_RouteFilterPrefixes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_RouteFilterPrefixes;
        private bool _mUnknown_RouteFilterPrefixes;
        public List<string>? RouteFilterPrefixes
        {
            get
            {
                if (!_mUnknown_RouteFilterPrefixes) return _mValue_RouteFilterPrefixes;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.RouteFilterPrefixes' is not present");
            }
        }

        /// <summary>
        /// The VLAN ID.
        /// </summary>
        [PolicyResourceProperty("vlan", "_mUnknown_Vlan")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Vlan;
        private bool _mUnknown_Vlan;
        public int? Vlan
        {
            get
            {
                if (!_mUnknown_Vlan) return _mValue_Vlan;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterface.Vlan' is not present");
            }
        }
    }

    [PolicyResourceType("aws:directconnect/hostedPublicVirtualInterface:HostedPublicVirtualInterface")]
    public sealed class HostedPublicVirtualInterfaceArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The address family for the BGP peer. `ipv4 ` or `ipv6`.
        /// </summary>
        [PolicyResourceProperty("addressFamily", "_mUnknown_AddressFamily")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AddressFamily;
        private bool _mUnknown_AddressFamily;
        public string? AddressFamily
        {
            get
            {
                if (!_mUnknown_AddressFamily) return _mValue_AddressFamily;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.AddressFamily' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.
        /// </summary>
        [PolicyResourceProperty("amazonAddress", "_mUnknown_AmazonAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmazonAddress;
        private bool _mUnknown_AmazonAddress;
        public string? AmazonAddress
        {
            get
            {
                if (!_mUnknown_AmazonAddress) return _mValue_AmazonAddress;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.AmazonAddress' is not present");
            }
        }

        /// <summary>
        /// The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAsn", "_mUnknown_BgpAsn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BgpAsn;
        private bool _mUnknown_BgpAsn;
        public int? BgpAsn
        {
            get
            {
                if (!_mUnknown_BgpAsn) return _mValue_BgpAsn;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.BgpAsn' is not present");
            }
        }

        /// <summary>
        /// The authentication key for BGP configuration.
        /// </summary>
        [PolicyResourceProperty("bgpAuthKey", "_mUnknown_BgpAuthKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BgpAuthKey;
        private bool _mUnknown_BgpAuthKey;
        public string? BgpAuthKey
        {
            get
            {
                if (!_mUnknown_BgpAuthKey) return _mValue_BgpAuthKey;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.BgpAuthKey' is not present");
            }
        }

        /// <summary>
        /// The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.
        /// </summary>
        [PolicyResourceProperty("connectionId", "_mUnknown_ConnectionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConnectionId;
        private bool _mUnknown_ConnectionId;
        public string? ConnectionId
        {
            get
            {
                if (!_mUnknown_ConnectionId) return _mValue_ConnectionId;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.ConnectionId' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.
        /// </summary>
        [PolicyResourceProperty("customerAddress", "_mUnknown_CustomerAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomerAddress;
        private bool _mUnknown_CustomerAddress;
        public string? CustomerAddress
        {
            get
            {
                if (!_mUnknown_CustomerAddress) return _mValue_CustomerAddress;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.CustomerAddress' is not present");
            }
        }

        /// <summary>
        /// The name for the virtual interface.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The AWS account that will own the new virtual interface.
        /// </summary>
        [PolicyResourceProperty("ownerAccountId", "_mUnknown_OwnerAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerAccountId;
        private bool _mUnknown_OwnerAccountId;
        public string? OwnerAccountId
        {
            get
            {
                if (!_mUnknown_OwnerAccountId) return _mValue_OwnerAccountId;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.OwnerAccountId' is not present");
            }
        }

        /// <summary>
        /// A list of routes to be advertised to the AWS network in this region.
        /// </summary>
        [PolicyResourceProperty("routeFilterPrefixes", "_mUnknown_RouteFilterPrefixes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_RouteFilterPrefixes;
        private bool _mUnknown_RouteFilterPrefixes;
        public List<string>? RouteFilterPrefixes
        {
            get
            {
                if (!_mUnknown_RouteFilterPrefixes) return _mValue_RouteFilterPrefixes;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.RouteFilterPrefixes' is not present");
            }
        }

        /// <summary>
        /// The VLAN ID.
        /// </summary>
        [PolicyResourceProperty("vlan", "_mUnknown_Vlan")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Vlan;
        private bool _mUnknown_Vlan;
        public int? Vlan
        {
            get
            {
                if (!_mUnknown_Vlan) return _mValue_Vlan;
                throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.Vlan' is not present");
            }
        }
    }
}
