// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppFlow.Inputs
{
    public sealed class FlowTaskArgs
    {
        /// <summary>
        /// Operation to be performed on the provided source fields. See Connector Operator for details.
        /// </summary>
        [PolicyResourceProperty("connectorOperators", "_mUnknown_ConnectorOperators")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.FlowTaskConnectorOperatorArgs>? _mValue_ConnectorOperators;
        private bool _mUnknown_ConnectorOperators;
        public List<Inputs.FlowTaskConnectorOperatorArgs>? ConnectorOperators
        {
            get
            {
                if (!_mUnknown_ConnectorOperators) return _mValue_ConnectorOperators;
                throw new UndeferrableValueException("Value 'FlowTaskArgs.ConnectorOperators' is not present");
            }
        }

        /// <summary>
        /// Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
        /// </summary>
        [PolicyResourceProperty("destinationField", "_mUnknown_DestinationField")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationField;
        private bool _mUnknown_DestinationField;
        public string? DestinationField
        {
            get
            {
                if (!_mUnknown_DestinationField) return _mValue_DestinationField;
                throw new UndeferrableValueException("Value 'FlowTaskArgs.DestinationField' is not present");
            }
        }

        /// <summary>
        /// Source fields to which a particular task is applied.
        /// </summary>
        [PolicyResourceProperty("sourceFields", "_mUnknown_SourceFields")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SourceFields;
        private bool _mUnknown_SourceFields;
        public List<string>? SourceFields
        {
            get
            {
                if (!_mUnknown_SourceFields) return _mValue_SourceFields;
                throw new UndeferrableValueException("Value 'FlowTaskArgs.SourceFields' is not present");
            }
        }

        /// <summary>
        /// Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
        /// </summary>
        [PolicyResourceProperty("taskProperties", "_mUnknown_TaskProperties")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TaskProperties;
        private bool _mUnknown_TaskProperties;
        public Dictionary<string, string>? TaskProperties
        {
            get
            {
                if (!_mUnknown_TaskProperties) return _mValue_TaskProperties;
                throw new UndeferrableValueException("Value 'FlowTaskArgs.TaskProperties' is not present");
            }
        }

        /// <summary>
        /// Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
        /// </summary>
        [PolicyResourceProperty("taskType", "_mUnknown_TaskType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TaskType;
        private bool _mUnknown_TaskType;
        public string? TaskType
        {
            get
            {
                if (!_mUnknown_TaskType) return _mValue_TaskType;
                throw new UndeferrableValueException("Value 'FlowTaskArgs.TaskType' is not present");
            }
        }
    }
}
