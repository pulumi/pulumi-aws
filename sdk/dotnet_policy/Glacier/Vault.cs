// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glacier
{
    [PolicyResourceType("aws:glacier/vault:Vault")]
    public sealed class Vault : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The policy document. This is a JSON formatted string.
        /// The heredoc syntax or `file` function is helpful here. Use the [Glacier Developer Guide](https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html) for more information on Glacier Vault Policy
        /// </summary>
        [Input("accessPolicy")]
        public string? AccessPolicy;

        /// <summary>
        /// The ARN of the vault.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The URI of the vault that was created.
        /// </summary>
        [Input("location")]
        public string? Location;

        /// <summary>
        /// The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The notifications for the Vault. Fields documented below.
        /// </summary>
        [Input("notification")]
        public VaultNotification? Notification;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
