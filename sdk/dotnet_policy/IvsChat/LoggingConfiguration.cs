// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.IvsChat
{
    [PolicyResourceType("aws:ivschat/loggingConfiguration:LoggingConfiguration")]
    public sealed class LoggingConfiguration : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Logging Configuration.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'LoggingConfiguration.Arn' is not present");
            }
        }

        /// <summary>
        /// Object containing destination configuration for where chat activity will be logged. This object must contain exactly one of the following children arguments:
        /// </summary>
        [PolicyResourceProperty("destinationConfiguration", "_mUnknown_DestinationConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.LoggingConfigurationDestinationConfiguration? _mValue_DestinationConfiguration;
        private bool _mUnknown_DestinationConfiguration;
        public Outputs.LoggingConfigurationDestinationConfiguration? DestinationConfiguration
        {
            get
            {
                if (!_mUnknown_DestinationConfiguration) return _mValue_DestinationConfiguration;
                throw new UndeferrableValueException("Value 'LoggingConfiguration.DestinationConfiguration' is not present");
            }
        }

        /// <summary>
        /// Logging Configuration name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'LoggingConfiguration.Name' is not present");
            }
        }

        /// <summary>
        /// State of the Logging Configuration.
        /// </summary>
        [PolicyResourceProperty("state", "_mUnknown_State")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_State;
        private bool _mUnknown_State;
        public string? State
        {
            get
            {
                if (!_mUnknown_State) return _mValue_State;
                throw new UndeferrableValueException("Value 'LoggingConfiguration.State' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'LoggingConfiguration.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'LoggingConfiguration.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ivschat/loggingConfiguration:LoggingConfiguration")]
    public sealed class LoggingConfigurationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Object containing destination configuration for where chat activity will be logged. This object must contain exactly one of the following children arguments:
        /// </summary>
        [PolicyResourceProperty("destinationConfiguration", "_mUnknown_DestinationConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.LoggingConfigurationDestinationConfigurationArgs? _mValue_DestinationConfiguration;
        private bool _mUnknown_DestinationConfiguration;
        public Inputs.LoggingConfigurationDestinationConfigurationArgs? DestinationConfiguration
        {
            get
            {
                if (!_mUnknown_DestinationConfiguration) return _mValue_DestinationConfiguration;
                throw new UndeferrableValueException("Value 'LoggingConfigurationArgs.DestinationConfiguration' is not present");
            }
        }

        /// <summary>
        /// Logging Configuration name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'LoggingConfigurationArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'LoggingConfigurationArgs.Tags' is not present");
            }
        }
    }
}
