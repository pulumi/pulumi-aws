// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.IvsChat
{
    [PolicyResourceType("aws:ivschat/room:Room")]
    public sealed class Room : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Room.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Room.Arn' is not present");
            }
        }

        /// <summary>
        /// List of Logging Configuration
        /// ARNs to attach to the room.
        /// </summary>
        [PolicyResourceProperty("loggingConfigurationIdentifiers", "_mUnknown_LoggingConfigurationIdentifiers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_LoggingConfigurationIdentifiers;
        private bool _mUnknown_LoggingConfigurationIdentifiers;
        public List<string>? LoggingConfigurationIdentifiers
        {
            get
            {
                if (!_mUnknown_LoggingConfigurationIdentifiers) return _mValue_LoggingConfigurationIdentifiers;
                throw new UndeferrableValueException("Value 'Room.LoggingConfigurationIdentifiers' is not present");
            }
        }

        /// <summary>
        /// Maximum number of characters in a single
        /// message. Messages are expected to be UTF-8 encoded and this limit applies
        /// specifically to rune/code-point count, not number of bytes.
        /// </summary>
        [PolicyResourceProperty("maximumMessageLength", "_mUnknown_MaximumMessageLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumMessageLength;
        private bool _mUnknown_MaximumMessageLength;
        public int? MaximumMessageLength
        {
            get
            {
                if (!_mUnknown_MaximumMessageLength) return _mValue_MaximumMessageLength;
                throw new UndeferrableValueException("Value 'Room.MaximumMessageLength' is not present");
            }
        }

        /// <summary>
        /// Maximum number of messages per
        /// second that can be sent to the room (by all clients).
        /// </summary>
        [PolicyResourceProperty("maximumMessageRatePerSecond", "_mUnknown_MaximumMessageRatePerSecond")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumMessageRatePerSecond;
        private bool _mUnknown_MaximumMessageRatePerSecond;
        public int? MaximumMessageRatePerSecond
        {
            get
            {
                if (!_mUnknown_MaximumMessageRatePerSecond) return _mValue_MaximumMessageRatePerSecond;
                throw new UndeferrableValueException("Value 'Room.MaximumMessageRatePerSecond' is not present");
            }
        }

        /// <summary>
        /// Configuration information for optional
        /// review of messages.
        /// </summary>
        [PolicyResourceProperty("messageReviewHandler", "_mUnknown_MessageReviewHandler")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.RoomMessageReviewHandler? _mValue_MessageReviewHandler;
        private bool _mUnknown_MessageReviewHandler;
        public Outputs.RoomMessageReviewHandler? MessageReviewHandler
        {
            get
            {
                if (!_mUnknown_MessageReviewHandler) return _mValue_MessageReviewHandler;
                throw new UndeferrableValueException("Value 'Room.MessageReviewHandler' is not present");
            }
        }

        /// <summary>
        /// Room name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Room.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Room.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Room.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ivschat/room:Room")]
    public sealed class RoomArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// List of Logging Configuration
        /// ARNs to attach to the room.
        /// </summary>
        [PolicyResourceProperty("loggingConfigurationIdentifiers", "_mUnknown_LoggingConfigurationIdentifiers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_LoggingConfigurationIdentifiers;
        private bool _mUnknown_LoggingConfigurationIdentifiers;
        public List<string>? LoggingConfigurationIdentifiers
        {
            get
            {
                if (!_mUnknown_LoggingConfigurationIdentifiers) return _mValue_LoggingConfigurationIdentifiers;
                throw new UndeferrableValueException("Value 'RoomArgs.LoggingConfigurationIdentifiers' is not present");
            }
        }

        /// <summary>
        /// Maximum number of characters in a single
        /// message. Messages are expected to be UTF-8 encoded and this limit applies
        /// specifically to rune/code-point count, not number of bytes.
        /// </summary>
        [PolicyResourceProperty("maximumMessageLength", "_mUnknown_MaximumMessageLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumMessageLength;
        private bool _mUnknown_MaximumMessageLength;
        public int? MaximumMessageLength
        {
            get
            {
                if (!_mUnknown_MaximumMessageLength) return _mValue_MaximumMessageLength;
                throw new UndeferrableValueException("Value 'RoomArgs.MaximumMessageLength' is not present");
            }
        }

        /// <summary>
        /// Maximum number of messages per
        /// second that can be sent to the room (by all clients).
        /// </summary>
        [PolicyResourceProperty("maximumMessageRatePerSecond", "_mUnknown_MaximumMessageRatePerSecond")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumMessageRatePerSecond;
        private bool _mUnknown_MaximumMessageRatePerSecond;
        public int? MaximumMessageRatePerSecond
        {
            get
            {
                if (!_mUnknown_MaximumMessageRatePerSecond) return _mValue_MaximumMessageRatePerSecond;
                throw new UndeferrableValueException("Value 'RoomArgs.MaximumMessageRatePerSecond' is not present");
            }
        }

        /// <summary>
        /// Configuration information for optional
        /// review of messages.
        /// </summary>
        [PolicyResourceProperty("messageReviewHandler", "_mUnknown_MessageReviewHandler")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.RoomMessageReviewHandlerArgs? _mValue_MessageReviewHandler;
        private bool _mUnknown_MessageReviewHandler;
        public Inputs.RoomMessageReviewHandlerArgs? MessageReviewHandler
        {
            get
            {
                if (!_mUnknown_MessageReviewHandler) return _mValue_MessageReviewHandler;
                throw new UndeferrableValueException("Value 'RoomArgs.MessageReviewHandler' is not present");
            }
        }

        /// <summary>
        /// Room name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'RoomArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'RoomArgs.Tags' is not present");
            }
        }
    }
}
