// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeGuruReviewer
{
    [PolicyResourceType("aws:codegurureviewer/repositoryAssociation:RepositoryAssociation")]
    public sealed class RepositoryAssociation : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) identifying the repository association.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The ID of the repository association.
        /// </summary>
        [Input("associationId")]
        public string? AssociationId;

        /// <summary>
        /// The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection.
        /// </summary>
        [Input("connectionArn")]
        public string? ConnectionArn;

        /// <summary>
        /// An object describing the KMS key to asssociate. Block is documented below.
        /// </summary>
        [Input("kmsKeyDetails")]
        public RepositoryAssociationKmsKeyDetails? KmsKeyDetails;

        /// <summary>
        /// The name of the repository.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The owner of the repository.
        /// </summary>
        [Input("owner")]
        public string? Owner;

        /// <summary>
        /// The provider type of the repository association.
        /// </summary>
        [Input("providerType")]
        public string? ProviderType;

        /// <summary>
        /// An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("repository")]
        public RepositoryAssociationRepository? Repository;

        [Input("s3RepositoryDetails")]
        public List<RepositoryAssociationS3RepositoryDetail>? S3RepositoryDetails;

        /// <summary>
        /// The state of the repository association.
        /// </summary>
        [Input("state")]
        public string? State;

        /// <summary>
        /// A description of why the repository association is in the current state.
        /// </summary>
        [Input("stateReason")]
        public string? StateReason;

        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
