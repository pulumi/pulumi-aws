// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Connect
{
    [PolicyResourceType("aws:connect/userHierarchyGroup:UserHierarchyGroup")]
    public sealed class UserHierarchyGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the hierarchy group.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.Arn' is not present");
            }
        }

        /// <summary>
        /// The identifier for the hierarchy group.
        /// </summary>
        [PolicyResourceProperty("hierarchyGroupId", "_mUnknown_HierarchyGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HierarchyGroupId;
        private bool _mUnknown_HierarchyGroupId;
        public string? HierarchyGroupId
        {
            get
            {
                if (!_mUnknown_HierarchyGroupId) return _mValue_HierarchyGroupId;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.HierarchyGroupId' is not present");
            }
        }

        /// <summary>
        /// A block that contains information about the levels in the hierarchy group. The `hierarchy_path` block is documented below.
        /// </summary>
        [PolicyResourceProperty("hierarchyPaths", "_mUnknown_HierarchyPaths")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.UserHierarchyGroupHierarchyPath>? _mValue_HierarchyPaths;
        private bool _mUnknown_HierarchyPaths;
        public List<Outputs.UserHierarchyGroupHierarchyPath>? HierarchyPaths
        {
            get
            {
                if (!_mUnknown_HierarchyPaths) return _mValue_HierarchyPaths;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.HierarchyPaths' is not present");
            }
        }

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [PolicyResourceProperty("instanceId", "_mUnknown_InstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceId;
        private bool _mUnknown_InstanceId;
        public string? InstanceId
        {
            get
            {
                if (!_mUnknown_InstanceId) return _mValue_InstanceId;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.InstanceId' is not present");
            }
        }

        /// <summary>
        /// The identifier of the level in the hierarchy group.
        /// </summary>
        [PolicyResourceProperty("levelId", "_mUnknown_LevelId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LevelId;
        private bool _mUnknown_LevelId;
        public string? LevelId
        {
            get
            {
                if (!_mUnknown_LevelId) return _mValue_LevelId;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.LevelId' is not present");
            }
        }

        /// <summary>
        /// The name of the user hierarchy group. Must not be more than 100 characters.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.Name' is not present");
            }
        }

        /// <summary>
        /// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
        /// </summary>
        [PolicyResourceProperty("parentGroupId", "_mUnknown_ParentGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ParentGroupId;
        private bool _mUnknown_ParentGroupId;
        public string? ParentGroupId
        {
            get
            {
                if (!_mUnknown_ParentGroupId) return _mValue_ParentGroupId;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.ParentGroupId' is not present");
            }
        }

        /// <summary>
        /// Tags to apply to the hierarchy group. If configured with a provider
        /// `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'UserHierarchyGroup.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:connect/userHierarchyGroup:UserHierarchyGroup")]
    public sealed class UserHierarchyGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [PolicyResourceProperty("instanceId", "_mUnknown_InstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceId;
        private bool _mUnknown_InstanceId;
        public string? InstanceId
        {
            get
            {
                if (!_mUnknown_InstanceId) return _mValue_InstanceId;
                throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.InstanceId' is not present");
            }
        }

        /// <summary>
        /// The name of the user hierarchy group. Must not be more than 100 characters.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
        /// </summary>
        [PolicyResourceProperty("parentGroupId", "_mUnknown_ParentGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ParentGroupId;
        private bool _mUnknown_ParentGroupId;
        public string? ParentGroupId
        {
            get
            {
                if (!_mUnknown_ParentGroupId) return _mValue_ParentGroupId;
                throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.ParentGroupId' is not present");
            }
        }

        /// <summary>
        /// Tags to apply to the hierarchy group. If configured with a provider
        /// `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.Tags' is not present");
            }
        }
    }
}
