// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Connect
{
    [PolicyResourceType("aws:connect/user:User")]
    public sealed class User : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the user.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
        /// </summary>
        [Input("directoryUserId")]
        public string? DirectoryUserId;

        /// <summary>
        /// The identifier of the hierarchy group for the user.
        /// </summary>
        [Input("hierarchyGroupId")]
        public string? HierarchyGroupId;

        /// <summary>
        /// A block that contains information about the identity of the user. Documented below.
        /// </summary>
        [Input("identityInfo")]
        public UserIdentityInfo? IdentityInfo;

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId;

        /// <summary>
        /// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\@]+`.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
        /// </summary>
        [Input("password")]
        public string? Password;

        /// <summary>
        /// A block that contains information about the phone settings for the user. Documented below.
        /// </summary>
        [Input("phoneConfig")]
        public UserPhoneConfig? PhoneConfig;

        /// <summary>
        /// The identifier of the routing profile for the user.
        /// </summary>
        [Input("routingProfileId")]
        public string? RoutingProfileId;

        /// <summary>
        /// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
        /// </summary>
        [Input("securityProfileIds")]
        public List<string>? SecurityProfileIds;

        /// <summary>
        /// Tags to apply to the user. If configured with a provider
        /// `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The identifier for the user.
        /// </summary>
        [Input("userId")]
        public string? UserId;
    }
}
