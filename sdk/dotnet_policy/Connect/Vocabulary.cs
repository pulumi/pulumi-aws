// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Connect
{
    [PolicyResourceType("aws:connect/vocabulary:Vocabulary")]
    public sealed class Vocabulary : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the vocabulary.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Vocabulary.Arn' is not present");
            }
        }

        /// <summary>
        /// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
        /// </summary>
        [PolicyResourceProperty("content", "_mUnknown_Content")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Content;
        private bool _mUnknown_Content;
        public string? Content
        {
            get
            {
                if (!_mUnknown_Content) return _mValue_Content;
                throw new UndeferrableValueException("Value 'Vocabulary.Content' is not present");
            }
        }

        /// <summary>
        /// The reason why the custom vocabulary was not created.
        /// </summary>
        [PolicyResourceProperty("failureReason", "_mUnknown_FailureReason")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FailureReason;
        private bool _mUnknown_FailureReason;
        public string? FailureReason
        {
            get
            {
                if (!_mUnknown_FailureReason) return _mValue_FailureReason;
                throw new UndeferrableValueException("Value 'Vocabulary.FailureReason' is not present");
            }
        }

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [PolicyResourceProperty("instanceId", "_mUnknown_InstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceId;
        private bool _mUnknown_InstanceId;
        public string? InstanceId
        {
            get
            {
                if (!_mUnknown_InstanceId) return _mValue_InstanceId;
                throw new UndeferrableValueException("Value 'Vocabulary.InstanceId' is not present");
            }
        }

        /// <summary>
        /// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
        /// </summary>
        [PolicyResourceProperty("languageCode", "_mUnknown_LanguageCode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LanguageCode;
        private bool _mUnknown_LanguageCode;
        public string? LanguageCode
        {
            get
            {
                if (!_mUnknown_LanguageCode) return _mValue_LanguageCode;
                throw new UndeferrableValueException("Value 'Vocabulary.LanguageCode' is not present");
            }
        }

        /// <summary>
        /// The timestamp when the custom vocabulary was last modified.
        /// </summary>
        [PolicyResourceProperty("lastModifiedTime", "_mUnknown_LastModifiedTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastModifiedTime;
        private bool _mUnknown_LastModifiedTime;
        public string? LastModifiedTime
        {
            get
            {
                if (!_mUnknown_LastModifiedTime) return _mValue_LastModifiedTime;
                throw new UndeferrableValueException("Value 'Vocabulary.LastModifiedTime' is not present");
            }
        }

        /// <summary>
        /// A unique name of the custom vocabulary. Must not be more than 140 characters.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Vocabulary.Name' is not present");
            }
        }

        /// <summary>
        /// The current state of the custom vocabulary. Valid values are `CREATION_IN_PROGRESS`, `ACTIVE`, `CREATION_FAILED`, `DELETE_IN_PROGRESS`.
        /// </summary>
        [PolicyResourceProperty("state", "_mUnknown_State")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_State;
        private bool _mUnknown_State;
        public string? State
        {
            get
            {
                if (!_mUnknown_State) return _mValue_State;
                throw new UndeferrableValueException("Value 'Vocabulary.State' is not present");
            }
        }

        /// <summary>
        /// Tags to apply to the vocabulary. If configured with a provider
        /// `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Vocabulary.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Vocabulary.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The identifier of the custom vocabulary.
        /// </summary>
        [PolicyResourceProperty("vocabularyId", "_mUnknown_VocabularyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VocabularyId;
        private bool _mUnknown_VocabularyId;
        public string? VocabularyId
        {
            get
            {
                if (!_mUnknown_VocabularyId) return _mValue_VocabularyId;
                throw new UndeferrableValueException("Value 'Vocabulary.VocabularyId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:connect/vocabulary:Vocabulary")]
    public sealed class VocabularyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
        /// </summary>
        [PolicyResourceProperty("content", "_mUnknown_Content")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Content;
        private bool _mUnknown_Content;
        public string? Content
        {
            get
            {
                if (!_mUnknown_Content) return _mValue_Content;
                throw new UndeferrableValueException("Value 'VocabularyArgs.Content' is not present");
            }
        }

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [PolicyResourceProperty("instanceId", "_mUnknown_InstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceId;
        private bool _mUnknown_InstanceId;
        public string? InstanceId
        {
            get
            {
                if (!_mUnknown_InstanceId) return _mValue_InstanceId;
                throw new UndeferrableValueException("Value 'VocabularyArgs.InstanceId' is not present");
            }
        }

        /// <summary>
        /// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
        /// </summary>
        [PolicyResourceProperty("languageCode", "_mUnknown_LanguageCode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LanguageCode;
        private bool _mUnknown_LanguageCode;
        public string? LanguageCode
        {
            get
            {
                if (!_mUnknown_LanguageCode) return _mValue_LanguageCode;
                throw new UndeferrableValueException("Value 'VocabularyArgs.LanguageCode' is not present");
            }
        }

        /// <summary>
        /// A unique name of the custom vocabulary. Must not be more than 140 characters.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'VocabularyArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Tags to apply to the vocabulary. If configured with a provider
        /// `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'VocabularyArgs.Tags' is not present");
            }
        }
    }
}
