// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Connect
{
    [PolicyResourceType("aws:connect/quickConnect:QuickConnect")]
    public sealed class QuickConnect : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Quick Connect.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'QuickConnect.Arn' is not present");
            }
        }

        /// <summary>
        /// Specifies the description of the Quick Connect.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'QuickConnect.Description' is not present");
            }
        }

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [PolicyResourceProperty("instanceId", "_mUnknown_InstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceId;
        private bool _mUnknown_InstanceId;
        public string? InstanceId
        {
            get
            {
                if (!_mUnknown_InstanceId) return _mValue_InstanceId;
                throw new UndeferrableValueException("Value 'QuickConnect.InstanceId' is not present");
            }
        }

        /// <summary>
        /// Specifies the name of the Quick Connect.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'QuickConnect.Name' is not present");
            }
        }

        /// <summary>
        /// A block that defines the configuration information for the Quick Connect: `quick_connect_type` and one of `phone_config`, `queue_config`, `user_config` . The Quick Connect Config block is documented below.
        /// </summary>
        [PolicyResourceProperty("quickConnectConfig", "_mUnknown_QuickConnectConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.QuickConnectQuickConnectConfig? _mValue_QuickConnectConfig;
        private bool _mUnknown_QuickConnectConfig;
        public Outputs.QuickConnectQuickConnectConfig? QuickConnectConfig
        {
            get
            {
                if (!_mUnknown_QuickConnectConfig) return _mValue_QuickConnectConfig;
                throw new UndeferrableValueException("Value 'QuickConnect.QuickConnectConfig' is not present");
            }
        }

        /// <summary>
        /// The identifier for the Quick Connect.
        /// </summary>
        [PolicyResourceProperty("quickConnectId", "_mUnknown_QuickConnectId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_QuickConnectId;
        private bool _mUnknown_QuickConnectId;
        public string? QuickConnectId
        {
            get
            {
                if (!_mUnknown_QuickConnectId) return _mValue_QuickConnectId;
                throw new UndeferrableValueException("Value 'QuickConnect.QuickConnectId' is not present");
            }
        }

        /// <summary>
        /// Tags to apply to the Quick Connect. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'QuickConnect.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'QuickConnect.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:connect/quickConnect:QuickConnect")]
    public sealed class QuickConnectArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies the description of the Quick Connect.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'QuickConnectArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [PolicyResourceProperty("instanceId", "_mUnknown_InstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceId;
        private bool _mUnknown_InstanceId;
        public string? InstanceId
        {
            get
            {
                if (!_mUnknown_InstanceId) return _mValue_InstanceId;
                throw new UndeferrableValueException("Value 'QuickConnectArgs.InstanceId' is not present");
            }
        }

        /// <summary>
        /// Specifies the name of the Quick Connect.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'QuickConnectArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A block that defines the configuration information for the Quick Connect: `quick_connect_type` and one of `phone_config`, `queue_config`, `user_config` . The Quick Connect Config block is documented below.
        /// </summary>
        [PolicyResourceProperty("quickConnectConfig", "_mUnknown_QuickConnectConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.QuickConnectQuickConnectConfigArgs? _mValue_QuickConnectConfig;
        private bool _mUnknown_QuickConnectConfig;
        public Inputs.QuickConnectQuickConnectConfigArgs? QuickConnectConfig
        {
            get
            {
                if (!_mUnknown_QuickConnectConfig) return _mValue_QuickConnectConfig;
                throw new UndeferrableValueException("Value 'QuickConnectArgs.QuickConnectConfig' is not present");
            }
        }

        /// <summary>
        /// Tags to apply to the Quick Connect. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'QuickConnectArgs.Tags' is not present");
            }
        }
    }
}
