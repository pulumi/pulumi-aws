// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ServiceDiscovery
{
    [PolicyResourceType("aws:servicediscovery/service:Service")]
    public sealed class Service : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the service.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The description of the service.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance. See `dns_config` Block for details.
        /// </summary>
        [Input("dnsConfig")]
        public ServiceDnsConfig? DnsConfig;

        /// <summary>
        /// A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable. Defaults to `false`.
        /// </summary>
        [Input("forceDestroy")]
        public bool? ForceDestroy;

        /// <summary>
        /// A complex type that contains settings for an optional health check. Only for Public DNS namespaces. See `health_check_config` Block for details.
        /// </summary>
        [Input("healthCheckConfig")]
        public ServiceHealthCheckConfig? HealthCheckConfig;

        /// <summary>
        /// A complex type that contains settings for ECS managed health checks. See `health_check_custom_config` Block for details.
        /// </summary>
        [Input("healthCheckCustomConfig")]
        public ServiceHealthCheckCustomConfig? HealthCheckCustomConfig;

        /// <summary>
        /// The name of the service.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The ID of the namespace that you want to use to create the service.
        /// </summary>
        [Input("namespaceId")]
        public string? NamespaceId;

        /// <summary>
        /// A map of tags to assign to the service. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// If present, specifies that the service instances are only discoverable using the `DiscoverInstances` API operation. No DNS records is registered for the service instances. The only valid value is `HTTP`.
        /// </summary>
        [Input("type")]
        public string? Type;
    }
}
