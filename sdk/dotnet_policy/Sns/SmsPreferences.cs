// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sns
{
    [PolicyResourceType("aws:sns/smsPreferences:SmsPreferences")]
    public sealed class SmsPreferences : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// A string, such as your business brand, that is displayed as the sender on the receiving device.
        /// </summary>
        [PolicyResourceProperty("defaultSenderId", "_mUnknown_DefaultSenderId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultSenderId;
        private bool _mUnknown_DefaultSenderId;
        public string? DefaultSenderId
        {
            get
            {
                if (!_mUnknown_DefaultSenderId) return _mValue_DefaultSenderId;
                throw new UndeferrableValueException("Value 'SmsPreferences.DefaultSenderId' is not present");
            }
        }

        /// <summary>
        /// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
        /// </summary>
        [PolicyResourceProperty("defaultSmsType", "_mUnknown_DefaultSmsType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultSmsType;
        private bool _mUnknown_DefaultSmsType;
        public string? DefaultSmsType
        {
            get
            {
                if (!_mUnknown_DefaultSmsType) return _mValue_DefaultSmsType;
                throw new UndeferrableValueException("Value 'SmsPreferences.DefaultSmsType' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
        /// </summary>
        [PolicyResourceProperty("deliveryStatusIamRoleArn", "_mUnknown_DeliveryStatusIamRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliveryStatusIamRoleArn;
        private bool _mUnknown_DeliveryStatusIamRoleArn;
        public string? DeliveryStatusIamRoleArn
        {
            get
            {
                if (!_mUnknown_DeliveryStatusIamRoleArn) return _mValue_DeliveryStatusIamRoleArn;
                throw new UndeferrableValueException("Value 'SmsPreferences.DeliveryStatusIamRoleArn' is not present");
            }
        }

        /// <summary>
        /// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
        /// </summary>
        [PolicyResourceProperty("deliveryStatusSuccessSamplingRate", "_mUnknown_DeliveryStatusSuccessSamplingRate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliveryStatusSuccessSamplingRate;
        private bool _mUnknown_DeliveryStatusSuccessSamplingRate;
        public string? DeliveryStatusSuccessSamplingRate
        {
            get
            {
                if (!_mUnknown_DeliveryStatusSuccessSamplingRate) return _mValue_DeliveryStatusSuccessSamplingRate;
                throw new UndeferrableValueException("Value 'SmsPreferences.DeliveryStatusSuccessSamplingRate' is not present");
            }
        }

        /// <summary>
        /// The maximum amount in USD that you are willing to spend each month to send SMS messages.
        /// </summary>
        [PolicyResourceProperty("monthlySpendLimit", "_mUnknown_MonthlySpendLimit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MonthlySpendLimit;
        private bool _mUnknown_MonthlySpendLimit;
        public int? MonthlySpendLimit
        {
            get
            {
                if (!_mUnknown_MonthlySpendLimit) return _mValue_MonthlySpendLimit;
                throw new UndeferrableValueException("Value 'SmsPreferences.MonthlySpendLimit' is not present");
            }
        }

        /// <summary>
        /// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
        /// </summary>
        [PolicyResourceProperty("usageReportS3Bucket", "_mUnknown_UsageReportS3Bucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UsageReportS3Bucket;
        private bool _mUnknown_UsageReportS3Bucket;
        public string? UsageReportS3Bucket
        {
            get
            {
                if (!_mUnknown_UsageReportS3Bucket) return _mValue_UsageReportS3Bucket;
                throw new UndeferrableValueException("Value 'SmsPreferences.UsageReportS3Bucket' is not present");
            }
        }
    }

    [PolicyResourceType("aws:sns/smsPreferences:SmsPreferences")]
    public sealed class SmsPreferencesArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A string, such as your business brand, that is displayed as the sender on the receiving device.
        /// </summary>
        [PolicyResourceProperty("defaultSenderId", "_mUnknown_DefaultSenderId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultSenderId;
        private bool _mUnknown_DefaultSenderId;
        public string? DefaultSenderId
        {
            get
            {
                if (!_mUnknown_DefaultSenderId) return _mValue_DefaultSenderId;
                throw new UndeferrableValueException("Value 'SmsPreferencesArgs.DefaultSenderId' is not present");
            }
        }

        /// <summary>
        /// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
        /// </summary>
        [PolicyResourceProperty("defaultSmsType", "_mUnknown_DefaultSmsType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultSmsType;
        private bool _mUnknown_DefaultSmsType;
        public string? DefaultSmsType
        {
            get
            {
                if (!_mUnknown_DefaultSmsType) return _mValue_DefaultSmsType;
                throw new UndeferrableValueException("Value 'SmsPreferencesArgs.DefaultSmsType' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
        /// </summary>
        [PolicyResourceProperty("deliveryStatusIamRoleArn", "_mUnknown_DeliveryStatusIamRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliveryStatusIamRoleArn;
        private bool _mUnknown_DeliveryStatusIamRoleArn;
        public string? DeliveryStatusIamRoleArn
        {
            get
            {
                if (!_mUnknown_DeliveryStatusIamRoleArn) return _mValue_DeliveryStatusIamRoleArn;
                throw new UndeferrableValueException("Value 'SmsPreferencesArgs.DeliveryStatusIamRoleArn' is not present");
            }
        }

        /// <summary>
        /// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
        /// </summary>
        [PolicyResourceProperty("deliveryStatusSuccessSamplingRate", "_mUnknown_DeliveryStatusSuccessSamplingRate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliveryStatusSuccessSamplingRate;
        private bool _mUnknown_DeliveryStatusSuccessSamplingRate;
        public string? DeliveryStatusSuccessSamplingRate
        {
            get
            {
                if (!_mUnknown_DeliveryStatusSuccessSamplingRate) return _mValue_DeliveryStatusSuccessSamplingRate;
                throw new UndeferrableValueException("Value 'SmsPreferencesArgs.DeliveryStatusSuccessSamplingRate' is not present");
            }
        }

        /// <summary>
        /// The maximum amount in USD that you are willing to spend each month to send SMS messages.
        /// </summary>
        [PolicyResourceProperty("monthlySpendLimit", "_mUnknown_MonthlySpendLimit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MonthlySpendLimit;
        private bool _mUnknown_MonthlySpendLimit;
        public int? MonthlySpendLimit
        {
            get
            {
                if (!_mUnknown_MonthlySpendLimit) return _mValue_MonthlySpendLimit;
                throw new UndeferrableValueException("Value 'SmsPreferencesArgs.MonthlySpendLimit' is not present");
            }
        }

        /// <summary>
        /// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
        /// </summary>
        [PolicyResourceProperty("usageReportS3Bucket", "_mUnknown_UsageReportS3Bucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UsageReportS3Bucket;
        private bool _mUnknown_UsageReportS3Bucket;
        public string? UsageReportS3Bucket
        {
            get
            {
                if (!_mUnknown_UsageReportS3Bucket) return _mValue_UsageReportS3Bucket;
                throw new UndeferrableValueException("Value 'SmsPreferencesArgs.UsageReportS3Bucket' is not present");
            }
        }
    }
}
