// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Qldb
{
    [PolicyResourceType("aws:qldb/ledger:Ledger")]
    public sealed class Ledger : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the QLDB Ledger
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The deletion protection for the QLDB Ledger instance. By default it is `true`. To delete this resource via the provider, this value must be configured to `false` and applied first before attempting deletion.
        /// </summary>
        [Input("deletionProtection")]
        public bool? DeletionProtection;

        /// <summary>
        /// The key in AWS Key Management Service (AWS KMS) to use for encryption of data at rest in the ledger. For more information, see the [AWS documentation](https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html). Valid values are `"AWS_OWNED_KMS_KEY"` to use an AWS KMS key that is owned and managed by AWS on your behalf, or the ARN of a valid symmetric customer managed KMS key.
        /// </summary>
        [Input("kmsKey")]
        public string? KmsKey;

        /// <summary>
        /// The friendly name for the QLDB Ledger instance. By default generated by the provider.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The permissions mode for the QLDB ledger instance. Specify either `ALLOW_ALL` or `STANDARD`.
        /// </summary>
        [Input("permissionsMode")]
        public string? PermissionsMode;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
