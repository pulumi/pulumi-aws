// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53
{
    [PolicyResourceType("aws:route53/zone:Zone")]
    public sealed class Zone : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Hosted Zone.
        /// </summary>
        [Input("arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mArn;

        public string? Arn => _mArn.GetValue("arn");

        /// <summary>
        /// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
        /// </summary>
        [Input("comment")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mComment;

        public string? Comment => _mComment.GetValue("comment");

        /// <summary>
        /// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
        /// </summary>
        [Input("delegationSetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDelegationSetId;

        public string? DelegationSetId => _mDelegationSetId.GetValue("delegationSetId");

        /// <summary>
        /// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
        /// </summary>
        [Input("forceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mForceDestroy;

        public bool? ForceDestroy => _mForceDestroy.GetValue("forceDestroy");

        /// <summary>
        /// This is the name of the hosted zone.
        /// </summary>
        [Input("name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mName;

        public string? Name => _mName.GetValue("name");

        /// <summary>
        /// A list of name servers in associated (or default) delegation set.
        /// Find more about delegation sets in [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/actions-on-reusable-delegation-sets.html).
        /// </summary>
        [Input("nameServers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<string>> _mNameServers;

        public List<string>? NameServers => _mNameServers.GetValue("nameServers");

        /// <summary>
        /// The Route 53 name server that created the SOA record.
        /// </summary>
        [Input("primaryNameServer")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mPrimaryNameServer;

        public string? PrimaryNameServer => _mPrimaryNameServer.GetValue("primaryNameServer");

        /// <summary>
        /// A mapping of tags to assign to the zone. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTags;

        public Dictionary<string, string>? Tags => _mTags.GetValue("tags");

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTagsAll;

        public Dictionary<string, string>? TagsAll => _mTagsAll.GetValue("tagsAll");

        /// <summary>
        /// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegation_set_id` argument in this resource and any `aws.route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
        /// </summary>
        [Input("vpcs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Outputs.ZoneVpc>> _mVpcs;

        public List<Outputs.ZoneVpc>? Vpcs => _mVpcs.GetValue("vpcs");

        /// <summary>
        /// The Hosted Zone ID. This can be referenced by zone records.
        /// </summary>
        [Input("zoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mZoneId;

        public string? ZoneId => _mZoneId.GetValue("zoneId");
    }

    [PolicyResourceType("aws:route53/zone:Zone")]
    public sealed class ZoneArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
        /// </summary>
        [Input("comment")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mComment;

        public string? Comment => _mComment.GetValue("comment");

        /// <summary>
        /// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
        /// </summary>
        [Input("delegationSetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDelegationSetId;

        public string? DelegationSetId => _mDelegationSetId.GetValue("delegationSetId");

        /// <summary>
        /// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
        /// </summary>
        [Input("forceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mForceDestroy;

        public bool? ForceDestroy => _mForceDestroy.GetValue("forceDestroy");

        /// <summary>
        /// This is the name of the hosted zone.
        /// </summary>
        [Input("name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mName;

        public string? Name => _mName.GetValue("name");

        /// <summary>
        /// A mapping of tags to assign to the zone. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTags;

        public Dictionary<string, string>? Tags => _mTags.GetValue("tags");

        /// <summary>
        /// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegation_set_id` argument in this resource and any `aws.route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
        /// </summary>
        [Input("vpcs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Inputs.ZoneVpcArgs>> _mVpcs;

        public List<Inputs.ZoneVpcArgs>? Vpcs => _mVpcs.GetValue("vpcs");
    }
}
