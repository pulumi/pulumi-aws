// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53
{
    [PolicyResourceType("aws:route53/resolverQueryLogConfig:ResolverQueryLogConfig")]
    public sealed class ResolverQueryLogConfig : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN (Amazon Resource Name) of the Route 53 Resolver query logging configuration.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The ARN of the resource that you want Route 53 Resolver to send query logs.
        /// You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.
        /// </summary>
        [Input("destinationArn")]
        public string? DestinationArn;

        /// <summary>
        /// The name of the Route 53 Resolver query logging configuration.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The AWS account ID of the account that created the query logging configuration.
        /// </summary>
        [Input("ownerId")]
        public string? OwnerId;

        /// <summary>
        /// An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another AWS account.
        /// Sharing is configured through AWS Resource Access Manager (AWS RAM).
        /// Values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`
        /// </summary>
        [Input("shareStatus")]
        public string? ShareStatus;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
