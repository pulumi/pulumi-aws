// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53
{
    [PolicyResourceType("aws:route53/cidrLocation:CidrLocation")]
    public sealed class CidrLocation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// CIDR blocks for the location.
        /// </summary>
        [PolicyResourceProperty("cidrBlocks", "_mUnknown_CidrBlocks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_CidrBlocks;
        private bool _mUnknown_CidrBlocks;
        public List<string>? CidrBlocks
        {
            get
            {
                if (!_mUnknown_CidrBlocks) return _mValue_CidrBlocks;
                throw new UndeferrableValueException("Value 'CidrLocation.CidrBlocks' is not present");
            }
        }

        /// <summary>
        /// The ID of the CIDR collection to update.
        /// </summary>
        [PolicyResourceProperty("cidrCollectionId", "_mUnknown_CidrCollectionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrCollectionId;
        private bool _mUnknown_CidrCollectionId;
        public string? CidrCollectionId
        {
            get
            {
                if (!_mUnknown_CidrCollectionId) return _mValue_CidrCollectionId;
                throw new UndeferrableValueException("Value 'CidrLocation.CidrCollectionId' is not present");
            }
        }

        /// <summary>
        /// Name for the CIDR location.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'CidrLocation.Name' is not present");
            }
        }
    }

    [PolicyResourceType("aws:route53/cidrLocation:CidrLocation")]
    public sealed class CidrLocationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// CIDR blocks for the location.
        /// </summary>
        [PolicyResourceProperty("cidrBlocks", "_mUnknown_CidrBlocks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_CidrBlocks;
        private bool _mUnknown_CidrBlocks;
        public List<string>? CidrBlocks
        {
            get
            {
                if (!_mUnknown_CidrBlocks) return _mValue_CidrBlocks;
                throw new UndeferrableValueException("Value 'CidrLocationArgs.CidrBlocks' is not present");
            }
        }

        /// <summary>
        /// The ID of the CIDR collection to update.
        /// </summary>
        [PolicyResourceProperty("cidrCollectionId", "_mUnknown_CidrCollectionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrCollectionId;
        private bool _mUnknown_CidrCollectionId;
        public string? CidrCollectionId
        {
            get
            {
                if (!_mUnknown_CidrCollectionId) return _mValue_CidrCollectionId;
                throw new UndeferrableValueException("Value 'CidrLocationArgs.CidrCollectionId' is not present");
            }
        }

        /// <summary>
        /// Name for the CIDR location.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'CidrLocationArgs.Name' is not present");
            }
        }
    }
}
