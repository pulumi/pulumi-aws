// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53
{
    [PolicyResourceType("aws:route53/resolverQueryLogConfigAssociation:ResolverQueryLogConfigAssociation")]
    public sealed class ResolverQueryLogConfigAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ID of the Route 53 Resolver query logging configuration that you want to associate a VPC with.
        /// </summary>
        [PolicyResourceProperty("resolverQueryLogConfigId", "_mUnknown_ResolverQueryLogConfigId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResolverQueryLogConfigId;
        private bool _mUnknown_ResolverQueryLogConfigId;
        public string? ResolverQueryLogConfigId
        {
            get
            {
                if (!_mUnknown_ResolverQueryLogConfigId) return _mValue_ResolverQueryLogConfigId;
                throw new UndeferrableValueException("Value 'ResolverQueryLogConfigAssociation.ResolverQueryLogConfigId' is not present");
            }
        }

        /// <summary>
        /// The ID of a VPC that you want this query logging configuration to log queries for.
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'ResolverQueryLogConfigAssociation.ResourceId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:route53/resolverQueryLogConfigAssociation:ResolverQueryLogConfigAssociation")]
    public sealed class ResolverQueryLogConfigAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the Route 53 Resolver query logging configuration that you want to associate a VPC with.
        /// </summary>
        [PolicyResourceProperty("resolverQueryLogConfigId", "_mUnknown_ResolverQueryLogConfigId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResolverQueryLogConfigId;
        private bool _mUnknown_ResolverQueryLogConfigId;
        public string? ResolverQueryLogConfigId
        {
            get
            {
                if (!_mUnknown_ResolverQueryLogConfigId) return _mValue_ResolverQueryLogConfigId;
                throw new UndeferrableValueException("Value 'ResolverQueryLogConfigAssociationArgs.ResolverQueryLogConfigId' is not present");
            }
        }

        /// <summary>
        /// The ID of a VPC that you want this query logging configuration to log queries for.
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'ResolverQueryLogConfigAssociationArgs.ResourceId' is not present");
            }
        }
    }
}
