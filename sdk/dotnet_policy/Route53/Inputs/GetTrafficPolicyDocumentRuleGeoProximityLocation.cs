// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53.Inputs
{
    public sealed class GetTrafficPolicyDocumentRuleGeoProximityLocationArgs
    {
        /// <summary>
        /// Specify a value for `bias` if you want to route more traffic to an endpoint from nearby endpoints (positive values) or route less traffic to an endpoint (negative values).
        /// </summary>
        [Input("bias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mBias;

        public string? Bias => _mBias.GetValue("bias");

        /// <summary>
        /// References to an endpoint.
        /// </summary>
        [Input("endpointReference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEndpointReference;

        public string? EndpointReference => _mEndpointReference.GetValue("endpointReference");

        /// <summary>
        /// Indicates whether you want Amazon Route 53 to evaluate the health of the endpoint and route traffic only to healthy endpoints.
        /// </summary>
        [Input("evaluateTargetHealth")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mEvaluateTargetHealth;

        public bool? EvaluateTargetHealth => _mEvaluateTargetHealth.GetValue("evaluateTargetHealth");

        /// <summary>
        /// If you want to associate a health check with the endpoint or rule.
        /// </summary>
        [Input("healthCheck")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mHealthCheck;

        public string? HealthCheck => _mHealthCheck.GetValue("healthCheck");

        /// <summary>
        /// Represents the location south (negative) or north (positive) of the equator. Valid values are -90 degrees to 90 degrees.
        /// </summary>
        [Input("latitude")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLatitude;

        public string? Latitude => _mLatitude.GetValue("latitude");

        /// <summary>
        /// Represents the location west (negative) or east (positive) of the prime meridian. Valid values are -180 degrees to 180 degrees.
        /// </summary>
        [Input("longitude")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLongitude;

        public string? Longitude => _mLongitude.GetValue("longitude");

        /// <summary>
        /// If your endpoint is an AWS resource, specify the AWS Region that you created the resource in.
        /// </summary>
        [Input("region")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mRegion;

        public string? Region => _mRegion.GetValue("region");

        /// <summary>
        /// References to a rule.
        /// </summary>
        [Input("ruleReference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mRuleReference;

        public string? RuleReference => _mRuleReference.GetValue("ruleReference");
    }
}
