// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53.Inputs
{
    public sealed class GetTrafficPolicyDocumentRuleRegionInputArgs
    {
        /// <summary>
        /// References to an endpoint.
        /// </summary>
        [PolicyResourceProperty("endpointReference", "_mUnknown_EndpointReference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EndpointReference;
        private bool _mUnknown_EndpointReference;
        public string? EndpointReference
        {
            get
            {
                if (!_mUnknown_EndpointReference) return _mValue_EndpointReference;
                throw new UndeferrableValueException("Value 'GetTrafficPolicyDocumentRuleRegionInputArgs.EndpointReference' is not present");
            }
        }

        /// <summary>
        /// Indicates whether you want Amazon Route 53 to evaluate the health of the endpoint and route traffic only to healthy endpoints.
        /// </summary>
        [PolicyResourceProperty("evaluateTargetHealth", "_mUnknown_EvaluateTargetHealth")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EvaluateTargetHealth;
        private bool _mUnknown_EvaluateTargetHealth;
        public bool? EvaluateTargetHealth
        {
            get
            {
                if (!_mUnknown_EvaluateTargetHealth) return _mValue_EvaluateTargetHealth;
                throw new UndeferrableValueException("Value 'GetTrafficPolicyDocumentRuleRegionInputArgs.EvaluateTargetHealth' is not present");
            }
        }

        /// <summary>
        /// If you want to associate a health check with the endpoint or rule.
        /// </summary>
        [PolicyResourceProperty("healthCheck", "_mUnknown_HealthCheck")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HealthCheck;
        private bool _mUnknown_HealthCheck;
        public string? HealthCheck
        {
            get
            {
                if (!_mUnknown_HealthCheck) return _mValue_HealthCheck;
                throw new UndeferrableValueException("Value 'GetTrafficPolicyDocumentRuleRegionInputArgs.HealthCheck' is not present");
            }
        }

        /// <summary>
        /// Region code for the AWS Region that you created the resource in.
        /// </summary>
        [PolicyResourceProperty("region", "_mUnknown_Region")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Region;
        private bool _mUnknown_Region;
        public string? Region
        {
            get
            {
                if (!_mUnknown_Region) return _mValue_Region;
                throw new UndeferrableValueException("Value 'GetTrafficPolicyDocumentRuleRegionInputArgs.Region' is not present");
            }
        }

        /// <summary>
        /// References to a rule.
        /// </summary>
        [PolicyResourceProperty("ruleReference", "_mUnknown_RuleReference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RuleReference;
        private bool _mUnknown_RuleReference;
        public string? RuleReference
        {
            get
            {
                if (!_mUnknown_RuleReference) return _mValue_RuleReference;
                throw new UndeferrableValueException("Value 'GetTrafficPolicyDocumentRuleRegionInputArgs.RuleReference' is not present");
            }
        }
    }
}
