// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53
{
    [PolicyResourceType("aws:route53/resolverDnsSecConfig:ResolverDnsSecConfig")]
    public sealed class ResolverDnsSecConfig : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN for a configuration for DNSSEC validation.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ResolverDnsSecConfig.Arn' is not present");
            }
        }

        /// <summary>
        /// The owner account ID of the virtual private cloud (VPC) for a configuration for DNSSEC validation.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'ResolverDnsSecConfig.OwnerId' is not present");
            }
        }

        /// <summary>
        /// The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'ResolverDnsSecConfig.ResourceId' is not present");
            }
        }

        /// <summary>
        /// The validation status for a DNSSEC configuration. The status can be one of the following: `ENABLING`, `ENABLED`, `DISABLING` and `DISABLED`.
        /// </summary>
        [PolicyResourceProperty("validationStatus", "_mUnknown_ValidationStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ValidationStatus;
        private bool _mUnknown_ValidationStatus;
        public string? ValidationStatus
        {
            get
            {
                if (!_mUnknown_ValidationStatus) return _mValue_ValidationStatus;
                throw new UndeferrableValueException("Value 'ResolverDnsSecConfig.ValidationStatus' is not present");
            }
        }
    }

    [PolicyResourceType("aws:route53/resolverDnsSecConfig:ResolverDnsSecConfig")]
    public sealed class ResolverDnsSecConfigArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for.
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'ResolverDnsSecConfigArgs.ResourceId' is not present");
            }
        }
    }
}
