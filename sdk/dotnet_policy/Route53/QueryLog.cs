// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53
{
    [PolicyResourceType("aws:route53/queryLog:QueryLog")]
    public sealed class QueryLog : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Query Logging Config.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'QueryLog.Arn' is not present");
            }
        }

        /// <summary>
        /// CloudWatch log group ARN to send query logs.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLogGroupArn", "_mUnknown_CloudwatchLogGroupArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CloudwatchLogGroupArn;
        private bool _mUnknown_CloudwatchLogGroupArn;
        public string? CloudwatchLogGroupArn
        {
            get
            {
                if (!_mUnknown_CloudwatchLogGroupArn) return _mValue_CloudwatchLogGroupArn;
                throw new UndeferrableValueException("Value 'QueryLog.CloudwatchLogGroupArn' is not present");
            }
        }

        /// <summary>
        /// Route53 hosted zone ID to enable query logs.
        /// </summary>
        [PolicyResourceProperty("zoneId", "_mUnknown_ZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ZoneId;
        private bool _mUnknown_ZoneId;
        public string? ZoneId
        {
            get
            {
                if (!_mUnknown_ZoneId) return _mValue_ZoneId;
                throw new UndeferrableValueException("Value 'QueryLog.ZoneId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:route53/queryLog:QueryLog")]
    public sealed class QueryLogArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// CloudWatch log group ARN to send query logs.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLogGroupArn", "_mUnknown_CloudwatchLogGroupArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CloudwatchLogGroupArn;
        private bool _mUnknown_CloudwatchLogGroupArn;
        public string? CloudwatchLogGroupArn
        {
            get
            {
                if (!_mUnknown_CloudwatchLogGroupArn) return _mValue_CloudwatchLogGroupArn;
                throw new UndeferrableValueException("Value 'QueryLogArgs.CloudwatchLogGroupArn' is not present");
            }
        }

        /// <summary>
        /// Route53 hosted zone ID to enable query logs.
        /// </summary>
        [PolicyResourceProperty("zoneId", "_mUnknown_ZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ZoneId;
        private bool _mUnknown_ZoneId;
        public string? ZoneId
        {
            get
            {
                if (!_mUnknown_ZoneId) return _mValue_ZoneId;
                throw new UndeferrableValueException("Value 'QueryLogArgs.ZoneId' is not present");
            }
        }
    }
}
