// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53
{
    [PolicyResourceType("aws:route53/resolverFirewallRuleGroup:ResolverFirewallRuleGroup")]
    public sealed class ResolverFirewallRuleGroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN (Amazon Resource Name) of the rule group.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A name that lets you identify the rule group, to manage and use it.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The AWS account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.
        /// </summary>
        [Input("ownerId")]
        public string? OwnerId;

        /// <summary>
        /// Whether the rule group is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM). Valid values: `NOT_SHARED`, `SHARED_BY_ME`, `SHARED_WITH_ME`
        /// </summary>
        [Input("shareStatus")]
        public string? ShareStatus;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
