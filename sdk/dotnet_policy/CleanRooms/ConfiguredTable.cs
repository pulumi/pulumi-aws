// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CleanRooms
{
    [PolicyResourceType("aws:cleanrooms/configuredTable:ConfiguredTable")]
    public sealed class ConfiguredTable : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The columns of the references table which will be included in the configured table.
        /// </summary>
        [PolicyResourceProperty("allowedColumns", "_mUnknown_AllowedColumns")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedColumns;
        private bool _mUnknown_AllowedColumns;
        public List<string>? AllowedColumns
        {
            get
            {
                if (!_mUnknown_AllowedColumns) return _mValue_AllowedColumns;
                throw new UndeferrableValueException("Value 'ConfiguredTable.AllowedColumns' is not present");
            }
        }

        /// <summary>
        /// The analysis method for the configured table. The only valid value is currently `DIRECT_QUERY`.
        /// </summary>
        [PolicyResourceProperty("analysisMethod", "_mUnknown_AnalysisMethod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AnalysisMethod;
        private bool _mUnknown_AnalysisMethod;
        public string? AnalysisMethod
        {
            get
            {
                if (!_mUnknown_AnalysisMethod) return _mValue_AnalysisMethod;
                throw new UndeferrableValueException("Value 'ConfiguredTable.AnalysisMethod' is not present");
            }
        }

        /// <summary>
        /// The ARN of the configured table.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ConfiguredTable.Arn' is not present");
            }
        }

        /// <summary>
        /// The date and time the configured table was created.
        /// </summary>
        [PolicyResourceProperty("createTime", "_mUnknown_CreateTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreateTime;
        private bool _mUnknown_CreateTime;
        public string? CreateTime
        {
            get
            {
                if (!_mUnknown_CreateTime) return _mValue_CreateTime;
                throw new UndeferrableValueException("Value 'ConfiguredTable.CreateTime' is not present");
            }
        }

        /// <summary>
        /// A description for the configured table.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ConfiguredTable.Description' is not present");
            }
        }

        /// <summary>
        /// The name of the configured table.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ConfiguredTable.Name' is not present");
            }
        }

        /// <summary>
        /// A reference to the AWS Glue table which will be used to create the configured table.
        /// * `table_reference.database_name` - (Required - Forces new resource) - The name of the AWS Glue database which contains the table.
        /// * `table_reference.table_name` - (Required - Forces new resource) - The name of the AWS Glue table which will be used to create the configured table.
        /// </summary>
        [PolicyResourceProperty("tableReference", "_mUnknown_TableReference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ConfiguredTableTableReference? _mValue_TableReference;
        private bool _mUnknown_TableReference;
        public Outputs.ConfiguredTableTableReference? TableReference
        {
            get
            {
                if (!_mUnknown_TableReference) return _mValue_TableReference;
                throw new UndeferrableValueException("Value 'ConfiguredTable.TableReference' is not present");
            }
        }

        /// <summary>
        /// Key value pairs which tag the configured table.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ConfiguredTable.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ConfiguredTable.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The date and time the configured table was last updated.
        /// </summary>
        [PolicyResourceProperty("updateTime", "_mUnknown_UpdateTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UpdateTime;
        private bool _mUnknown_UpdateTime;
        public string? UpdateTime
        {
            get
            {
                if (!_mUnknown_UpdateTime) return _mValue_UpdateTime;
                throw new UndeferrableValueException("Value 'ConfiguredTable.UpdateTime' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cleanrooms/configuredTable:ConfiguredTable")]
    public sealed class ConfiguredTableArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The columns of the references table which will be included in the configured table.
        /// </summary>
        [PolicyResourceProperty("allowedColumns", "_mUnknown_AllowedColumns")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedColumns;
        private bool _mUnknown_AllowedColumns;
        public List<string>? AllowedColumns
        {
            get
            {
                if (!_mUnknown_AllowedColumns) return _mValue_AllowedColumns;
                throw new UndeferrableValueException("Value 'ConfiguredTableArgs.AllowedColumns' is not present");
            }
        }

        /// <summary>
        /// The analysis method for the configured table. The only valid value is currently `DIRECT_QUERY`.
        /// </summary>
        [PolicyResourceProperty("analysisMethod", "_mUnknown_AnalysisMethod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AnalysisMethod;
        private bool _mUnknown_AnalysisMethod;
        public string? AnalysisMethod
        {
            get
            {
                if (!_mUnknown_AnalysisMethod) return _mValue_AnalysisMethod;
                throw new UndeferrableValueException("Value 'ConfiguredTableArgs.AnalysisMethod' is not present");
            }
        }

        /// <summary>
        /// A description for the configured table.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ConfiguredTableArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The name of the configured table.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ConfiguredTableArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A reference to the AWS Glue table which will be used to create the configured table.
        /// * `table_reference.database_name` - (Required - Forces new resource) - The name of the AWS Glue database which contains the table.
        /// * `table_reference.table_name` - (Required - Forces new resource) - The name of the AWS Glue table which will be used to create the configured table.
        /// </summary>
        [PolicyResourceProperty("tableReference", "_mUnknown_TableReference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ConfiguredTableTableReferenceArgs? _mValue_TableReference;
        private bool _mUnknown_TableReference;
        public Inputs.ConfiguredTableTableReferenceArgs? TableReference
        {
            get
            {
                if (!_mUnknown_TableReference) return _mValue_TableReference;
                throw new UndeferrableValueException("Value 'ConfiguredTableArgs.TableReference' is not present");
            }
        }

        /// <summary>
        /// Key value pairs which tag the configured table.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ConfiguredTableArgs.Tags' is not present");
            }
        }
    }
}
