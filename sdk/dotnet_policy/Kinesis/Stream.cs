// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kinesis
{
    [PolicyResourceType("aws:kinesis/stream:Stream")]
    public sealed class Stream : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) specifying the Stream (same as `id`)
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Stream.Arn' is not present");
            }
        }

        /// <summary>
        /// The encryption type to use. The only acceptable values are `NONE` or `KMS`. The default value is `NONE`.
        /// </summary>
        [PolicyResourceProperty("encryptionType", "_mUnknown_EncryptionType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EncryptionType;
        private bool _mUnknown_EncryptionType;
        public string? EncryptionType
        {
            get
            {
                if (!_mUnknown_EncryptionType) return _mValue_EncryptionType;
                throw new UndeferrableValueException("Value 'Stream.EncryptionType' is not present");
            }
        }

        /// <summary>
        /// A boolean that indicates all registered consumers should be deregistered from the stream so that the stream can be destroyed without error. The default value is `false`.
        /// </summary>
        [PolicyResourceProperty("enforceConsumerDeletion", "_mUnknown_EnforceConsumerDeletion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnforceConsumerDeletion;
        private bool _mUnknown_EnforceConsumerDeletion;
        public bool? EnforceConsumerDeletion
        {
            get
            {
                if (!_mUnknown_EnforceConsumerDeletion) return _mValue_EnforceConsumerDeletion;
                throw new UndeferrableValueException("Value 'Stream.EnforceConsumerDeletion' is not present");
            }
        }

        /// <summary>
        /// The GUID for the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned master key by specifying the alias `alias/aws/kinesis`.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'Stream.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// A name to identify the stream. This is unique to the AWS account and region the Stream is created in.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Stream.Name' is not present");
            }
        }

        /// <summary>
        /// Length of time data records are accessible after they are added to the stream. The maximum value of a stream's retention period is 8760 hours. Minimum value is 24. Default is 24.
        /// </summary>
        [PolicyResourceProperty("retentionPeriod", "_mUnknown_RetentionPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RetentionPeriod;
        private bool _mUnknown_RetentionPeriod;
        public int? RetentionPeriod
        {
            get
            {
                if (!_mUnknown_RetentionPeriod) return _mValue_RetentionPeriod;
                throw new UndeferrableValueException("Value 'Stream.RetentionPeriod' is not present");
            }
        }

        /// <summary>
        /// The number of shards that the stream will use. If the `stream_mode` is `PROVISIONED`, this field is required.
        /// Amazon has guidelines for specifying the Stream size that should be referenced when creating a Kinesis stream. See [Amazon Kinesis Streams](https://docs.aws.amazon.com/kinesis/latest/dev/amazon-kinesis-streams.html) for more.
        /// </summary>
        [PolicyResourceProperty("shardCount", "_mUnknown_ShardCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ShardCount;
        private bool _mUnknown_ShardCount;
        public int? ShardCount
        {
            get
            {
                if (!_mUnknown_ShardCount) return _mValue_ShardCount;
                throw new UndeferrableValueException("Value 'Stream.ShardCount' is not present");
            }
        }

        /// <summary>
        /// A list of shard-level CloudWatch metrics which can be enabled for the stream. See [Monitoring with CloudWatch](https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html) for more. Note that the value ALL should not be used; instead you should provide an explicit list of metrics you wish to enable.
        /// </summary>
        [PolicyResourceProperty("shardLevelMetrics", "_mUnknown_ShardLevelMetrics")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ShardLevelMetrics;
        private bool _mUnknown_ShardLevelMetrics;
        public List<string>? ShardLevelMetrics
        {
            get
            {
                if (!_mUnknown_ShardLevelMetrics) return _mValue_ShardLevelMetrics;
                throw new UndeferrableValueException("Value 'Stream.ShardLevelMetrics' is not present");
            }
        }

        /// <summary>
        /// Indicates the [capacity mode](https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html) of the data stream. Detailed below.
        /// </summary>
        [PolicyResourceProperty("streamModeDetails", "_mUnknown_StreamModeDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.StreamStreamModeDetails? _mValue_StreamModeDetails;
        private bool _mUnknown_StreamModeDetails;
        public Outputs.StreamStreamModeDetails? StreamModeDetails
        {
            get
            {
                if (!_mUnknown_StreamModeDetails) return _mValue_StreamModeDetails;
                throw new UndeferrableValueException("Value 'Stream.StreamModeDetails' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Stream.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Stream.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:kinesis/stream:Stream")]
    public sealed class StreamArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) specifying the Stream (same as `id`)
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'StreamArgs.Arn' is not present");
            }
        }

        /// <summary>
        /// The encryption type to use. The only acceptable values are `NONE` or `KMS`. The default value is `NONE`.
        /// </summary>
        [PolicyResourceProperty("encryptionType", "_mUnknown_EncryptionType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EncryptionType;
        private bool _mUnknown_EncryptionType;
        public string? EncryptionType
        {
            get
            {
                if (!_mUnknown_EncryptionType) return _mValue_EncryptionType;
                throw new UndeferrableValueException("Value 'StreamArgs.EncryptionType' is not present");
            }
        }

        /// <summary>
        /// A boolean that indicates all registered consumers should be deregistered from the stream so that the stream can be destroyed without error. The default value is `false`.
        /// </summary>
        [PolicyResourceProperty("enforceConsumerDeletion", "_mUnknown_EnforceConsumerDeletion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnforceConsumerDeletion;
        private bool _mUnknown_EnforceConsumerDeletion;
        public bool? EnforceConsumerDeletion
        {
            get
            {
                if (!_mUnknown_EnforceConsumerDeletion) return _mValue_EnforceConsumerDeletion;
                throw new UndeferrableValueException("Value 'StreamArgs.EnforceConsumerDeletion' is not present");
            }
        }

        /// <summary>
        /// The GUID for the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned master key by specifying the alias `alias/aws/kinesis`.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'StreamArgs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// A name to identify the stream. This is unique to the AWS account and region the Stream is created in.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'StreamArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Length of time data records are accessible after they are added to the stream. The maximum value of a stream's retention period is 8760 hours. Minimum value is 24. Default is 24.
        /// </summary>
        [PolicyResourceProperty("retentionPeriod", "_mUnknown_RetentionPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RetentionPeriod;
        private bool _mUnknown_RetentionPeriod;
        public int? RetentionPeriod
        {
            get
            {
                if (!_mUnknown_RetentionPeriod) return _mValue_RetentionPeriod;
                throw new UndeferrableValueException("Value 'StreamArgs.RetentionPeriod' is not present");
            }
        }

        /// <summary>
        /// The number of shards that the stream will use. If the `stream_mode` is `PROVISIONED`, this field is required.
        /// Amazon has guidelines for specifying the Stream size that should be referenced when creating a Kinesis stream. See [Amazon Kinesis Streams](https://docs.aws.amazon.com/kinesis/latest/dev/amazon-kinesis-streams.html) for more.
        /// </summary>
        [PolicyResourceProperty("shardCount", "_mUnknown_ShardCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ShardCount;
        private bool _mUnknown_ShardCount;
        public int? ShardCount
        {
            get
            {
                if (!_mUnknown_ShardCount) return _mValue_ShardCount;
                throw new UndeferrableValueException("Value 'StreamArgs.ShardCount' is not present");
            }
        }

        /// <summary>
        /// A list of shard-level CloudWatch metrics which can be enabled for the stream. See [Monitoring with CloudWatch](https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html) for more. Note that the value ALL should not be used; instead you should provide an explicit list of metrics you wish to enable.
        /// </summary>
        [PolicyResourceProperty("shardLevelMetrics", "_mUnknown_ShardLevelMetrics")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ShardLevelMetrics;
        private bool _mUnknown_ShardLevelMetrics;
        public List<string>? ShardLevelMetrics
        {
            get
            {
                if (!_mUnknown_ShardLevelMetrics) return _mValue_ShardLevelMetrics;
                throw new UndeferrableValueException("Value 'StreamArgs.ShardLevelMetrics' is not present");
            }
        }

        /// <summary>
        /// Indicates the [capacity mode](https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html) of the data stream. Detailed below.
        /// </summary>
        [PolicyResourceProperty("streamModeDetails", "_mUnknown_StreamModeDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.StreamStreamModeDetailsArgs? _mValue_StreamModeDetails;
        private bool _mUnknown_StreamModeDetails;
        public Inputs.StreamStreamModeDetailsArgs? StreamModeDetails
        {
            get
            {
                if (!_mUnknown_StreamModeDetails) return _mValue_StreamModeDetails;
                throw new UndeferrableValueException("Value 'StreamArgs.StreamModeDetails' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'StreamArgs.Tags' is not present");
            }
        }
    }
}
