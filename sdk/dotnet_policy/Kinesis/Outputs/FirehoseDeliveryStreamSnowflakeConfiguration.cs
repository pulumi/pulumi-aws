// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kinesis.Outputs
{
    public sealed class FirehoseDeliveryStreamSnowflakeConfiguration
    {
        /// <summary>
        /// The URL of the Snowflake account. Format: https://[account_identifier].snowflakecomputing.com.
        /// </summary>
        [PolicyResourceProperty("accountUrl", "_mUnknown_AccountUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountUrl;
        private bool _mUnknown_AccountUrl;
        public string? AccountUrl
        {
            get
            {
                if (!_mUnknown_AccountUrl) return _mValue_AccountUrl;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.AccountUrl' is not present");
            }
        }

        /// <summary>
        /// Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 0s.
        /// </summary>
        [PolicyResourceProperty("bufferingInterval", "_mUnknown_BufferingInterval")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BufferingInterval;
        private bool _mUnknown_BufferingInterval;
        public int? BufferingInterval
        {
            get
            {
                if (!_mUnknown_BufferingInterval) return _mValue_BufferingInterval;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.BufferingInterval' is not present");
            }
        }

        /// <summary>
        /// Buffer incoming data to the specified size, in MBs between 1 to 128, before delivering it to the destination.  The default value is 1MB.
        /// </summary>
        [PolicyResourceProperty("bufferingSize", "_mUnknown_BufferingSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BufferingSize;
        private bool _mUnknown_BufferingSize;
        public int? BufferingSize
        {
            get
            {
                if (!_mUnknown_BufferingSize) return _mValue_BufferingSize;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.BufferingSize' is not present");
            }
        }

        /// <summary>
        /// The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLoggingOptions", "_mUnknown_CloudwatchLoggingOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptions? _mValue_CloudwatchLoggingOptions;
        private bool _mUnknown_CloudwatchLoggingOptions;
        public Outputs.FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptions? CloudwatchLoggingOptions
        {
            get
            {
                if (!_mUnknown_CloudwatchLoggingOptions) return _mValue_CloudwatchLoggingOptions;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.CloudwatchLoggingOptions' is not present");
            }
        }

        /// <summary>
        /// The name of the content column.
        /// </summary>
        [PolicyResourceProperty("contentColumnName", "_mUnknown_ContentColumnName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ContentColumnName;
        private bool _mUnknown_ContentColumnName;
        public string? ContentColumnName
        {
            get
            {
                if (!_mUnknown_ContentColumnName) return _mValue_ContentColumnName;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.ContentColumnName' is not present");
            }
        }

        /// <summary>
        /// The data loading option.
        /// </summary>
        [PolicyResourceProperty("dataLoadingOption", "_mUnknown_DataLoadingOption")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataLoadingOption;
        private bool _mUnknown_DataLoadingOption;
        public string? DataLoadingOption
        {
            get
            {
                if (!_mUnknown_DataLoadingOption) return _mValue_DataLoadingOption;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.DataLoadingOption' is not present");
            }
        }

        /// <summary>
        /// The Snowflake database name.
        /// </summary>
        [PolicyResourceProperty("database", "_mUnknown_Database")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Database;
        private bool _mUnknown_Database;
        public string? Database
        {
            get
            {
                if (!_mUnknown_Database) return _mValue_Database;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.Database' is not present");
            }
        }

        /// <summary>
        /// The passphrase for the private key.
        /// </summary>
        [PolicyResourceProperty("keyPassphrase", "_mUnknown_KeyPassphrase")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KeyPassphrase;
        private bool _mUnknown_KeyPassphrase;
        public string? KeyPassphrase
        {
            get
            {
                if (!_mUnknown_KeyPassphrase) return _mValue_KeyPassphrase;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.KeyPassphrase' is not present");
            }
        }

        /// <summary>
        /// The name of the metadata column.
        /// </summary>
        [PolicyResourceProperty("metadataColumnName", "_mUnknown_MetadataColumnName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetadataColumnName;
        private bool _mUnknown_MetadataColumnName;
        public string? MetadataColumnName
        {
            get
            {
                if (!_mUnknown_MetadataColumnName) return _mValue_MetadataColumnName;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.MetadataColumnName' is not present");
            }
        }

        /// <summary>
        /// The private key for authentication. This value is required if `secrets_manager_configuration` is not provided.
        /// </summary>
        [PolicyResourceProperty("privateKey", "_mUnknown_PrivateKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PrivateKey;
        private bool _mUnknown_PrivateKey;
        public string? PrivateKey
        {
            get
            {
                if (!_mUnknown_PrivateKey) return _mValue_PrivateKey;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.PrivateKey' is not present");
            }
        }

        /// <summary>
        /// The processing configuration. See `processing_configuration` block below for details.
        /// </summary>
        [PolicyResourceProperty("processingConfiguration", "_mUnknown_ProcessingConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfiguration? _mValue_ProcessingConfiguration;
        private bool _mUnknown_ProcessingConfiguration;
        public Outputs.FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfiguration? ProcessingConfiguration
        {
            get
            {
                if (!_mUnknown_ProcessingConfiguration) return _mValue_ProcessingConfiguration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.ProcessingConfiguration' is not present");
            }
        }

        /// <summary>
        /// After an initial failure to deliver to Snowflake, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 60s.  There will be no retry if the value is 0.
        /// </summary>
        [PolicyResourceProperty("retryDuration", "_mUnknown_RetryDuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RetryDuration;
        private bool _mUnknown_RetryDuration;
        public int? RetryDuration
        {
            get
            {
                if (!_mUnknown_RetryDuration) return _mValue_RetryDuration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.RetryDuration' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.RoleArn' is not present");
            }
        }

        /// <summary>
        /// The S3 backup mode.
        /// </summary>
        [PolicyResourceProperty("s3BackupMode", "_mUnknown_S3BackupMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_S3BackupMode;
        private bool _mUnknown_S3BackupMode;
        public string? S3BackupMode
        {
            get
            {
                if (!_mUnknown_S3BackupMode) return _mValue_S3BackupMode;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.S3BackupMode' is not present");
            }
        }

        /// <summary>
        /// The S3 configuration. See `s3_configuration` block below for details.
        /// </summary>
        [PolicyResourceProperty("s3Configuration", "_mUnknown_S3Configuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FirehoseDeliveryStreamSnowflakeConfigurationS3Configuration? _mValue_S3Configuration;
        private bool _mUnknown_S3Configuration;
        public Outputs.FirehoseDeliveryStreamSnowflakeConfigurationS3Configuration? S3Configuration
        {
            get
            {
                if (!_mUnknown_S3Configuration) return _mValue_S3Configuration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.S3Configuration' is not present");
            }
        }

        /// <summary>
        /// The Snowflake schema name.
        /// </summary>
        [PolicyResourceProperty("schema", "_mUnknown_Schema")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Schema;
        private bool _mUnknown_Schema;
        public string? Schema
        {
            get
            {
                if (!_mUnknown_Schema) return _mValue_Schema;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.Schema' is not present");
            }
        }

        /// <summary>
        /// The Secrets Manager configuration. See `secrets_manager_configuration` block below for details. This value is required if `user` and `private_key` are not provided.
        /// </summary>
        [PolicyResourceProperty("secretsManagerConfiguration", "_mUnknown_SecretsManagerConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfiguration? _mValue_SecretsManagerConfiguration;
        private bool _mUnknown_SecretsManagerConfiguration;
        public Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfiguration? SecretsManagerConfiguration
        {
            get
            {
                if (!_mUnknown_SecretsManagerConfiguration) return _mValue_SecretsManagerConfiguration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.SecretsManagerConfiguration' is not present");
            }
        }

        /// <summary>
        /// The configuration for Snowflake role.
        /// </summary>
        [PolicyResourceProperty("snowflakeRoleConfiguration", "_mUnknown_SnowflakeRoleConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfiguration? _mValue_SnowflakeRoleConfiguration;
        private bool _mUnknown_SnowflakeRoleConfiguration;
        public Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfiguration? SnowflakeRoleConfiguration
        {
            get
            {
                if (!_mUnknown_SnowflakeRoleConfiguration) return _mValue_SnowflakeRoleConfiguration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.SnowflakeRoleConfiguration' is not present");
            }
        }

        /// <summary>
        /// The VPC configuration for Snowflake.
        /// </summary>
        [PolicyResourceProperty("snowflakeVpcConfiguration", "_mUnknown_SnowflakeVpcConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfiguration? _mValue_SnowflakeVpcConfiguration;
        private bool _mUnknown_SnowflakeVpcConfiguration;
        public Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfiguration? SnowflakeVpcConfiguration
        {
            get
            {
                if (!_mUnknown_SnowflakeVpcConfiguration) return _mValue_SnowflakeVpcConfiguration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.SnowflakeVpcConfiguration' is not present");
            }
        }

        /// <summary>
        /// The Snowflake table name.
        /// </summary>
        [PolicyResourceProperty("table", "_mUnknown_Table")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Table;
        private bool _mUnknown_Table;
        public string? Table
        {
            get
            {
                if (!_mUnknown_Table) return _mValue_Table;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.Table' is not present");
            }
        }

        /// <summary>
        /// The user for authentication. This value is required if `secrets_manager_configuration` is not provided.
        /// </summary>
        [PolicyResourceProperty("user", "_mUnknown_User")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_User;
        private bool _mUnknown_User;
        public string? User
        {
            get
            {
                if (!_mUnknown_User) return _mValue_User;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.User' is not present");
            }
        }
    }
}
