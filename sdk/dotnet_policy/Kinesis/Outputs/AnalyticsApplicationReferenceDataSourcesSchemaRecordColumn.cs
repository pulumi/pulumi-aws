// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kinesis.Outputs
{
    public sealed class AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn
    {
        /// <summary>
        /// The Mapping reference to the data element.
        /// </summary>
        [PolicyResourceProperty("mapping", "_mUnknown_Mapping")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Mapping;
        private bool _mUnknown_Mapping;
        public string? Mapping
        {
            get
            {
                if (!_mUnknown_Mapping) return _mValue_Mapping;
                throw new UndeferrableValueException("Value 'AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn.Mapping' is not present");
            }
        }

        /// <summary>
        /// Name of the column.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn.Name' is not present");
            }
        }

        /// <summary>
        /// The SQL Type of the column.
        /// </summary>
        [PolicyResourceProperty("sqlType", "_mUnknown_SqlType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SqlType;
        private bool _mUnknown_SqlType;
        public string? SqlType
        {
            get
            {
                if (!_mUnknown_SqlType) return _mValue_SqlType;
                throw new UndeferrableValueException("Value 'AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn.SqlType' is not present");
            }
        }
    }
}
