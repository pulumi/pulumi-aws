// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kinesis.Inputs
{
    public sealed class FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs
    {
        /// <summary>
        /// Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
        /// </summary>
        [PolicyResourceProperty("bufferingInterval", "_mUnknown_BufferingInterval")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BufferingInterval;
        private bool _mUnknown_BufferingInterval;
        public int? BufferingInterval
        {
            get
            {
                if (!_mUnknown_BufferingInterval) return _mValue_BufferingInterval;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.BufferingInterval' is not present");
            }
        }

        /// <summary>
        /// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
        /// </summary>
        [PolicyResourceProperty("bufferingSize", "_mUnknown_BufferingSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BufferingSize;
        private bool _mUnknown_BufferingSize;
        public int? BufferingSize
        {
            get
            {
                if (!_mUnknown_BufferingSize) return _mValue_BufferingSize;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.BufferingSize' is not present");
            }
        }

        /// <summary>
        /// The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLoggingOptions", "_mUnknown_CloudwatchLoggingOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs? _mValue_CloudwatchLoggingOptions;
        private bool _mUnknown_CloudwatchLoggingOptions;
        public Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs? CloudwatchLoggingOptions
        {
            get
            {
                if (!_mUnknown_CloudwatchLoggingOptions) return _mValue_CloudwatchLoggingOptions;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.CloudwatchLoggingOptions' is not present");
            }
        }

        /// <summary>
        /// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
        /// </summary>
        [PolicyResourceProperty("collectionEndpoint", "_mUnknown_CollectionEndpoint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CollectionEndpoint;
        private bool _mUnknown_CollectionEndpoint;
        public string? CollectionEndpoint
        {
            get
            {
                if (!_mUnknown_CollectionEndpoint) return _mValue_CollectionEndpoint;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.CollectionEndpoint' is not present");
            }
        }

        /// <summary>
        /// The Serverless offering for Amazon OpenSearch Service index name.
        /// </summary>
        [PolicyResourceProperty("indexName", "_mUnknown_IndexName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IndexName;
        private bool _mUnknown_IndexName;
        public string? IndexName
        {
            get
            {
                if (!_mUnknown_IndexName) return _mValue_IndexName;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.IndexName' is not present");
            }
        }

        /// <summary>
        /// The data processing configuration.  See `processing_configuration` block below for details.
        /// </summary>
        [PolicyResourceProperty("processingConfiguration", "_mUnknown_ProcessingConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs? _mValue_ProcessingConfiguration;
        private bool _mUnknown_ProcessingConfiguration;
        public Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs? ProcessingConfiguration
        {
            get
            {
                if (!_mUnknown_ProcessingConfiguration) return _mValue_ProcessingConfiguration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.ProcessingConfiguration' is not present");
            }
        }

        /// <summary>
        /// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
        /// </summary>
        [PolicyResourceProperty("retryDuration", "_mUnknown_RetryDuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RetryDuration;
        private bool _mUnknown_RetryDuration;
        public int? RetryDuration
        {
            get
            {
                if (!_mUnknown_RetryDuration) return _mValue_RetryDuration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.RetryDuration' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
        /// </summary>
        [PolicyResourceProperty("s3BackupMode", "_mUnknown_S3BackupMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_S3BackupMode;
        private bool _mUnknown_S3BackupMode;
        public string? S3BackupMode
        {
            get
            {
                if (!_mUnknown_S3BackupMode) return _mValue_S3BackupMode;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.S3BackupMode' is not present");
            }
        }

        /// <summary>
        /// The S3 Configuration. See `s3_configuration` block below for details.
        /// </summary>
        [PolicyResourceProperty("s3Configuration", "_mUnknown_S3Configuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs? _mValue_S3Configuration;
        private bool _mUnknown_S3Configuration;
        public Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs? S3Configuration
        {
            get
            {
                if (!_mUnknown_S3Configuration) return _mValue_S3Configuration;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.S3Configuration' is not present");
            }
        }

        /// <summary>
        /// The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. See `vpc_config` block below for details.
        /// </summary>
        [PolicyResourceProperty("vpcConfig", "_mUnknown_VpcConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs? _mValue_VpcConfig;
        private bool _mUnknown_VpcConfig;
        public Inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs? VpcConfig
        {
            get
            {
                if (!_mUnknown_VpcConfig) return _mValue_VpcConfig;
                throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.VpcConfig' is not present");
            }
        }
    }
}
