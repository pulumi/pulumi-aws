// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Transcribe
{
    [PolicyResourceType("aws:transcribe/vocabularyFilter:VocabularyFilter")]
    public sealed class VocabularyFilter : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the VocabularyFilter.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Generated download URI.
        /// </summary>
        [Input("downloadUri")]
        public string? DownloadUri;

        /// <summary>
        /// The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
        /// </summary>
        [Input("languageCode")]
        public string? LanguageCode;

        /// <summary>
        /// A map of tags to assign to the VocabularyFilter. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words` argument.
        /// </summary>
        [Input("vocabularyFilterFileUri")]
        public string? VocabularyFilterFileUri;

        /// <summary>
        /// The name of the VocabularyFilter.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("vocabularyFilterName")]
        public string? VocabularyFilterName;

        /// <summary>
        /// A list of terms to include in the vocabulary. Conflicts with `vocabulary_filter_file_uri` argument.
        /// </summary>
        [Input("words")]
        public List<string>? Words;
    }
}
