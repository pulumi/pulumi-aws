// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DirectoryService
{
    [PolicyResourceType("aws:directoryservice/conditionalForwader:ConditionalForwader")]
    public sealed class ConditionalForwader : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ID of directory.
        /// </summary>
        [PolicyResourceProperty("directoryId", "_mUnknown_DirectoryId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DirectoryId;
        private bool _mUnknown_DirectoryId;
        public string? DirectoryId
        {
            get
            {
                if (!_mUnknown_DirectoryId) return _mValue_DirectoryId;
                throw new UndeferrableValueException("Value 'ConditionalForwader.DirectoryId' is not present");
            }
        }

        /// <summary>
        /// A list of forwarder IP addresses.
        /// </summary>
        [PolicyResourceProperty("dnsIps", "_mUnknown_DnsIps")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DnsIps;
        private bool _mUnknown_DnsIps;
        public List<string>? DnsIps
        {
            get
            {
                if (!_mUnknown_DnsIps) return _mValue_DnsIps;
                throw new UndeferrableValueException("Value 'ConditionalForwader.DnsIps' is not present");
            }
        }

        /// <summary>
        /// The fully qualified domain name of the remote domain for which forwarders will be used.
        /// </summary>
        [PolicyResourceProperty("remoteDomainName", "_mUnknown_RemoteDomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RemoteDomainName;
        private bool _mUnknown_RemoteDomainName;
        public string? RemoteDomainName
        {
            get
            {
                if (!_mUnknown_RemoteDomainName) return _mValue_RemoteDomainName;
                throw new UndeferrableValueException("Value 'ConditionalForwader.RemoteDomainName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:directoryservice/conditionalForwader:ConditionalForwader")]
    public sealed class ConditionalForwaderArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// ID of directory.
        /// </summary>
        [PolicyResourceProperty("directoryId", "_mUnknown_DirectoryId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DirectoryId;
        private bool _mUnknown_DirectoryId;
        public string? DirectoryId
        {
            get
            {
                if (!_mUnknown_DirectoryId) return _mValue_DirectoryId;
                throw new UndeferrableValueException("Value 'ConditionalForwaderArgs.DirectoryId' is not present");
            }
        }

        /// <summary>
        /// A list of forwarder IP addresses.
        /// </summary>
        [PolicyResourceProperty("dnsIps", "_mUnknown_DnsIps")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DnsIps;
        private bool _mUnknown_DnsIps;
        public List<string>? DnsIps
        {
            get
            {
                if (!_mUnknown_DnsIps) return _mValue_DnsIps;
                throw new UndeferrableValueException("Value 'ConditionalForwaderArgs.DnsIps' is not present");
            }
        }

        /// <summary>
        /// The fully qualified domain name of the remote domain for which forwarders will be used.
        /// </summary>
        [PolicyResourceProperty("remoteDomainName", "_mUnknown_RemoteDomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RemoteDomainName;
        private bool _mUnknown_RemoteDomainName;
        public string? RemoteDomainName
        {
            get
            {
                if (!_mUnknown_RemoteDomainName) return _mValue_RemoteDomainName;
                throw new UndeferrableValueException("Value 'ConditionalForwaderArgs.RemoteDomainName' is not present");
            }
        }
    }
}
