// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudTrail.Inputs
{
    public sealed class TrailEventSelectorArgs
    {
        /// <summary>
        /// Configuration block for data events. See details below.
        /// </summary>
        [PolicyResourceProperty("dataResources", "_mUnknown_DataResources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.TrailEventSelectorDataResourceArgs>? _mValue_DataResources;
        private bool _mUnknown_DataResources;
        public List<Inputs.TrailEventSelectorDataResourceArgs>? DataResources
        {
            get
            {
                if (!_mUnknown_DataResources) return _mValue_DataResources;
                throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.DataResources' is not present");
            }
        }

        /// <summary>
        /// A set of event sources to exclude. Valid values include: `kms.amazonaws.com` and `rdsdata.amazonaws.com`. `include_management_events` must be set to`true` to allow this.
        /// </summary>
        [PolicyResourceProperty("excludeManagementEventSources", "_mUnknown_ExcludeManagementEventSources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ExcludeManagementEventSources;
        private bool _mUnknown_ExcludeManagementEventSources;
        public List<string>? ExcludeManagementEventSources
        {
            get
            {
                if (!_mUnknown_ExcludeManagementEventSources) return _mValue_ExcludeManagementEventSources;
                throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.ExcludeManagementEventSources' is not present");
            }
        }

        /// <summary>
        /// Whether to include management events for your trail. Defaults to `true`.
        /// </summary>
        [PolicyResourceProperty("includeManagementEvents", "_mUnknown_IncludeManagementEvents")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_IncludeManagementEvents;
        private bool _mUnknown_IncludeManagementEvents;
        public bool? IncludeManagementEvents
        {
            get
            {
                if (!_mUnknown_IncludeManagementEvents) return _mValue_IncludeManagementEvents;
                throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.IncludeManagementEvents' is not present");
            }
        }

        /// <summary>
        /// Type of events to log. Valid values are `ReadOnly`, `WriteOnly`, `All`. Default value is `All`.
        /// </summary>
        [PolicyResourceProperty("readWriteType", "_mUnknown_ReadWriteType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReadWriteType;
        private bool _mUnknown_ReadWriteType;
        public string? ReadWriteType
        {
            get
            {
                if (!_mUnknown_ReadWriteType) return _mValue_ReadWriteType;
                throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.ReadWriteType' is not present");
            }
        }
    }
}
