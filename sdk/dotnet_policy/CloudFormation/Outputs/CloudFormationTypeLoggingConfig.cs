// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudFormation.Outputs
{
    public sealed class CloudFormationTypeLoggingConfig
    {
        /// <summary>
        /// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
        /// </summary>
        [PolicyResourceProperty("logGroupName", "_mUnknown_LogGroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogGroupName;
        private bool _mUnknown_LogGroupName;
        public string? LogGroupName
        {
            get
            {
                if (!_mUnknown_LogGroupName) return _mValue_LogGroupName;
                throw new UndeferrableValueException("Value 'CloudFormationTypeLoggingConfig.LogGroupName' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
        /// </summary>
        [PolicyResourceProperty("logRoleArn", "_mUnknown_LogRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogRoleArn;
        private bool _mUnknown_LogRoleArn;
        public string? LogRoleArn
        {
            get
            {
                if (!_mUnknown_LogRoleArn) return _mValue_LogRoleArn;
                throw new UndeferrableValueException("Value 'CloudFormationTypeLoggingConfig.LogRoleArn' is not present");
            }
        }
    }
}
