// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudFormation
{
    [PolicyResourceType("aws:cloudformation/stack:Stack")]
    public sealed class Stack : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// A list of capabilities.
        /// Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`
        /// </summary>
        [Input("capabilities")]
        public List<string>? Capabilities;

        /// <summary>
        /// Set to true to disable rollback of the stack if stack creation failed.
        /// Conflicts with `on_failure`.
        /// </summary>
        [Input("disableRollback")]
        public bool? DisableRollback;

        /// <summary>
        /// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
        /// </summary>
        [Input("iamRoleArn")]
        public string? IamRoleArn;

        /// <summary>
        /// Stack name.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// A list of SNS topic ARNs to publish stack related events.
        /// </summary>
        [Input("notificationArns")]
        public List<string>? NotificationArns;

        /// <summary>
        /// Action to be taken if stack creation fails. This must be
        /// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.
        /// </summary>
        [Input("onFailure")]
        public string? OnFailure;

        /// <summary>
        /// A map of outputs from the stack.
        /// </summary>
        [Input("outputs")]
        public Dictionary<string, string>? Outputs;

        /// <summary>
        /// A map of Parameter structures that specify input parameters for the stack.
        /// </summary>
        [Input("parameters")]
        public Dictionary<string, string>? Parameters;

        /// <summary>
        /// Structure containing the stack policy body.
        /// Conflicts w/ `policy_url`.
        /// </summary>
        [Input("policyBody")]
        public string? PolicyBody;

        /// <summary>
        /// Location of a file containing the stack policy.
        /// Conflicts w/ `policy_body`.
        /// </summary>
        [Input("policyUrl")]
        public string? PolicyUrl;

        /// <summary>
        /// Map of resource tags to associate with this stack. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Structure containing the template body (max size: 51,200 bytes).
        /// </summary>
        [Input("templateBody")]
        public string? TemplateBody;

        /// <summary>
        /// Location of a file containing the template body (max size: 460,800 bytes).
        /// </summary>
        [Input("templateUrl")]
        public string? TemplateUrl;

        /// <summary>
        /// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
        /// </summary>
        [Input("timeoutInMinutes")]
        public int? TimeoutInMinutes;
    }
}
