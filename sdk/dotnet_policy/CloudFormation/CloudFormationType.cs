// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudFormation
{
    [PolicyResourceType("aws:cloudformation/cloudFormationType:CloudFormationType")]
    public sealed class CloudFormationType : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// (Optional) Amazon Resource Name (ARN) of the CloudFormation Type version. See also `type_arn`.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Identifier of the CloudFormation Type default version.
        /// </summary>
        [Input("defaultVersionId")]
        public string? DefaultVersionId;

        /// <summary>
        /// Deprecation status of the version.
        /// </summary>
        [Input("deprecatedStatus")]
        public string? DeprecatedStatus;

        /// <summary>
        /// Description of the version.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// URL of the documentation for the CloudFormation Type.
        /// </summary>
        [Input("documentationUrl")]
        public string? DocumentationUrl;

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role for CloudFormation to assume when invoking the extension. If your extension calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. When CloudFormation needs to invoke the extension handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the extension handler, thereby supplying your extension with the appropriate credentials.
        /// </summary>
        [Input("executionRoleArn")]
        public string? ExecutionRoleArn;

        /// <summary>
        /// Whether the CloudFormation Type version is the default version.
        /// </summary>
        [Input("isDefaultVersion")]
        public bool? IsDefaultVersion;

        /// <summary>
        /// Configuration block containing logging configuration.
        /// </summary>
        [Input("loggingConfig")]
        public CloudFormationTypeLoggingConfig? LoggingConfig;

        /// <summary>
        /// Provisioning behavior of the CloudFormation Type.
        /// </summary>
        [Input("provisioningType")]
        public string? ProvisioningType;

        /// <summary>
        /// JSON document of the CloudFormation Type schema.
        /// </summary>
        [Input("schema")]
        public string? Schema;

        /// <summary>
        /// URL to the S3 bucket containing the extension project package that contains the necessary files for the extension you want to register. Must begin with `s3://` or `https://`. For example, `s3://example-bucket/example-object`.
        /// </summary>
        [Input("schemaHandlerPackage")]
        public string? SchemaHandlerPackage;

        /// <summary>
        /// URL of the source code for the CloudFormation Type.
        /// </summary>
        [Input("sourceUrl")]
        public string? SourceUrl;

        /// <summary>
        /// CloudFormation Registry Type. For example, `RESOURCE` or `MODULE`.
        /// </summary>
        [Input("type")]
        public string? Type;

        /// <summary>
        /// (Optional) Amazon Resource Name (ARN) of the CloudFormation Type. See also `arn`.
        /// </summary>
        [Input("typeArn")]
        public string? TypeArn;

        /// <summary>
        /// CloudFormation Type name. For example, `ExampleCompany::ExampleService::ExampleResource`.
        /// </summary>
        [Input("typeName")]
        public string? TypeName;

        /// <summary>
        /// (Optional) Identifier of the CloudFormation Type version.
        /// </summary>
        [Input("versionId")]
        public string? VersionId;

        /// <summary>
        /// Scope of the CloudFormation Type.
        /// </summary>
        [Input("visibility")]
        public string? Visibility;
    }
}
