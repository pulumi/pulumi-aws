// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Transfer.Outputs
{
    public sealed class WorkflowStepCopyStepDetails
    {
        /// <summary>
        /// Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.
        /// </summary>
        [PolicyResourceProperty("destinationFileLocation", "_mUnknown_DestinationFileLocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WorkflowStepCopyStepDetailsDestinationFileLocation? _mValue_DestinationFileLocation;
        private bool _mUnknown_DestinationFileLocation;
        public Outputs.WorkflowStepCopyStepDetailsDestinationFileLocation? DestinationFileLocation
        {
            get
            {
                if (!_mUnknown_DestinationFileLocation) return _mValue_DestinationFileLocation;
                throw new UndeferrableValueException("Value 'WorkflowStepCopyStepDetails.DestinationFileLocation' is not present");
            }
        }

        /// <summary>
        /// The name of the step, used as an identifier.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'WorkflowStepCopyStepDetails.Name' is not present");
            }
        }

        /// <summary>
        /// A flag that indicates whether or not to overwrite an existing file of the same name. The default is `FALSE`. Valid values are `TRUE` and `FALSE`.
        /// </summary>
        [PolicyResourceProperty("overwriteExisting", "_mUnknown_OverwriteExisting")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OverwriteExisting;
        private bool _mUnknown_OverwriteExisting;
        public string? OverwriteExisting
        {
            get
            {
                if (!_mUnknown_OverwriteExisting) return _mValue_OverwriteExisting;
                throw new UndeferrableValueException("Value 'WorkflowStepCopyStepDetails.OverwriteExisting' is not present");
            }
        }

        /// <summary>
        /// Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.
        /// </summary>
        [PolicyResourceProperty("sourceFileLocation", "_mUnknown_SourceFileLocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceFileLocation;
        private bool _mUnknown_SourceFileLocation;
        public string? SourceFileLocation
        {
            get
            {
                if (!_mUnknown_SourceFileLocation) return _mValue_SourceFileLocation;
                throw new UndeferrableValueException("Value 'WorkflowStepCopyStepDetails.SourceFileLocation' is not present");
            }
        }
    }
}
