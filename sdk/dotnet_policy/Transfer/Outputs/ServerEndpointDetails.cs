// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Transfer.Outputs
{
    public sealed class ServerEndpointDetails
    {
        /// <summary>
        /// A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when `endpoint_type` is set to `VPC`.
        /// </summary>
        [PolicyResourceProperty("addressAllocationIds", "_mUnknown_AddressAllocationIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AddressAllocationIds;
        private bool _mUnknown_AddressAllocationIds;
        public List<string>? AddressAllocationIds
        {
            get
            {
                if (!_mUnknown_AddressAllocationIds) return _mValue_AddressAllocationIds;
                throw new UndeferrableValueException("Value 'ServerEndpointDetails.AddressAllocationIds' is not present");
            }
        }

        /// <summary>
        /// A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when `endpoint_type` is set to `VPC`.
        /// </summary>
        [PolicyResourceProperty("securityGroupIds", "_mUnknown_SecurityGroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroupIds;
        private bool _mUnknown_SecurityGroupIds;
        public List<string>? SecurityGroupIds
        {
            get
            {
                if (!_mUnknown_SecurityGroupIds) return _mValue_SecurityGroupIds;
                throw new UndeferrableValueException("Value 'ServerEndpointDetails.SecurityGroupIds' is not present");
            }
        }

        /// <summary>
        /// A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when `endpoint_type` is set to `VPC`.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'ServerEndpointDetails.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// The ID of the VPC endpoint. This property can only be used when `endpoint_type` is set to `VPC_ENDPOINT`
        /// </summary>
        [PolicyResourceProperty("vpcEndpointId", "_mUnknown_VpcEndpointId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcEndpointId;
        private bool _mUnknown_VpcEndpointId;
        public string? VpcEndpointId
        {
            get
            {
                if (!_mUnknown_VpcEndpointId) return _mValue_VpcEndpointId;
                throw new UndeferrableValueException("Value 'ServerEndpointDetails.VpcEndpointId' is not present");
            }
        }

        /// <summary>
        /// The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when `endpoint_type` is set to `VPC`.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'ServerEndpointDetails.VpcId' is not present");
            }
        }
    }
}
