// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Transfer.Outputs
{
    public sealed class GetConnectorAs2ConfigResult
    {
        /// <summary>
        /// Basic authentication for AS2 connector API. Returns a null value if not set.
        /// </summary>
        [PolicyResourceProperty("basicAuthSecretId", "_mUnknown_BasicAuthSecretId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BasicAuthSecretId;
        private bool _mUnknown_BasicAuthSecretId;
        public string? BasicAuthSecretId
        {
            get
            {
                if (!_mUnknown_BasicAuthSecretId) return _mValue_BasicAuthSecretId;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.BasicAuthSecretId' is not present");
            }
        }

        /// <summary>
        /// Specifies whether AS2 file is compressed. Will be ZLIB or DISABLED
        /// </summary>
        [PolicyResourceProperty("compression", "_mUnknown_Compression")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Compression;
        private bool _mUnknown_Compression;
        public string? Compression
        {
            get
            {
                if (!_mUnknown_Compression) return _mValue_Compression;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.Compression' is not present");
            }
        }

        /// <summary>
        /// Algorithm used to encrypt file. Will be AES128_CBC or AES192_CBC or AES256_CBC or DES_EDE3_CBC or NONE.
        /// </summary>
        [PolicyResourceProperty("encryptionAlgorithm", "_mUnknown_EncryptionAlgorithm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EncryptionAlgorithm;
        private bool _mUnknown_EncryptionAlgorithm;
        public string? EncryptionAlgorithm
        {
            get
            {
                if (!_mUnknown_EncryptionAlgorithm) return _mValue_EncryptionAlgorithm;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.EncryptionAlgorithm' is not present");
            }
        }

        /// <summary>
        /// Unique identifier for AS2 local profile.
        /// </summary>
        [PolicyResourceProperty("localProfileId", "_mUnknown_LocalProfileId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LocalProfileId;
        private bool _mUnknown_LocalProfileId;
        public string? LocalProfileId
        {
            get
            {
                if (!_mUnknown_LocalProfileId) return _mValue_LocalProfileId;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.LocalProfileId' is not present");
            }
        }

        /// <summary>
        /// Used for outbound requests to tell if response is asynchronous or not. Will be either SYNC or NONE.
        /// </summary>
        [PolicyResourceProperty("mdnResponse", "_mUnknown_MdnResponse")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MdnResponse;
        private bool _mUnknown_MdnResponse;
        public string? MdnResponse
        {
            get
            {
                if (!_mUnknown_MdnResponse) return _mValue_MdnResponse;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.MdnResponse' is not present");
            }
        }

        /// <summary>
        /// Signing algorithm for MDN response. Will be SHA256 or SHA384 or SHA512 or SHA1 or NONE or DEFAULT.
        /// </summary>
        [PolicyResourceProperty("mdnSigningAlgorithm", "_mUnknown_MdnSigningAlgorithm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MdnSigningAlgorithm;
        private bool _mUnknown_MdnSigningAlgorithm;
        public string? MdnSigningAlgorithm
        {
            get
            {
                if (!_mUnknown_MdnSigningAlgorithm) return _mValue_MdnSigningAlgorithm;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.MdnSigningAlgorithm' is not present");
            }
        }

        /// <summary>
        /// Subject HTTP header attribute in outbound AS2 messages to the connector.
        /// </summary>
        [PolicyResourceProperty("messageSubject", "_mUnknown_MessageSubject")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MessageSubject;
        private bool _mUnknown_MessageSubject;
        public string? MessageSubject
        {
            get
            {
                if (!_mUnknown_MessageSubject) return _mValue_MessageSubject;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.MessageSubject' is not present");
            }
        }

        /// <summary>
        /// Unique identifier used by connector for partner profile.
        /// </summary>
        [PolicyResourceProperty("partnerProfileId", "_mUnknown_PartnerProfileId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PartnerProfileId;
        private bool _mUnknown_PartnerProfileId;
        public string? PartnerProfileId
        {
            get
            {
                if (!_mUnknown_PartnerProfileId) return _mValue_PartnerProfileId;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.PartnerProfileId' is not present");
            }
        }

        [PolicyResourceProperty("singingAlgorithm", "_mUnknown_SingingAlgorithm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SingingAlgorithm;
        private bool _mUnknown_SingingAlgorithm;
        public string? SingingAlgorithm
        {
            get
            {
                if (!_mUnknown_SingingAlgorithm) return _mValue_SingingAlgorithm;
                throw new UndeferrableValueException("Value 'GetConnectorAs2ConfigResult.SingingAlgorithm' is not present");
            }
        }
    }
}
