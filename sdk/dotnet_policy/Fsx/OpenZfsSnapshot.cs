// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Fsx
{
    [PolicyResourceType("aws:fsx/openZfsSnapshot:OpenZfsSnapshot")]
    public sealed class OpenZfsSnapshot : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name of the snapshot.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        [Input("creationTime")]
        public string? CreationTime;

        /// <summary>
        /// The name of the Snapshot. You can use a maximum of 203 alphanumeric characters plus either _ or -  or : or . for the name.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copy_tags_to_backups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The ID of the volume to snapshot. This can be the root volume or a child volume.
        /// </summary>
        [Input("volumeId")]
        public string? VolumeId;
    }
}
