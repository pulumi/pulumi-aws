// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Fsx.Inputs
{
    public sealed class WindowsFileSystemSelfManagedActiveDirectoryArgs
    {
        /// <summary>
        /// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
        /// </summary>
        [PolicyResourceProperty("dnsIps", "_mUnknown_DnsIps")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DnsIps;
        private bool _mUnknown_DnsIps;
        public List<string>? DnsIps
        {
            get
            {
                if (!_mUnknown_DnsIps) return _mValue_DnsIps;
                throw new UndeferrableValueException("Value 'WindowsFileSystemSelfManagedActiveDirectoryArgs.DnsIps' is not present");
            }
        }

        /// <summary>
        /// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
        /// </summary>
        [PolicyResourceProperty("domainName", "_mUnknown_DomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainName;
        private bool _mUnknown_DomainName;
        public string? DomainName
        {
            get
            {
                if (!_mUnknown_DomainName) return _mValue_DomainName;
                throw new UndeferrableValueException("Value 'WindowsFileSystemSelfManagedActiveDirectoryArgs.DomainName' is not present");
            }
        }

        /// <summary>
        /// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
        /// </summary>
        [PolicyResourceProperty("fileSystemAdministratorsGroup", "_mUnknown_FileSystemAdministratorsGroup")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FileSystemAdministratorsGroup;
        private bool _mUnknown_FileSystemAdministratorsGroup;
        public string? FileSystemAdministratorsGroup
        {
            get
            {
                if (!_mUnknown_FileSystemAdministratorsGroup) return _mValue_FileSystemAdministratorsGroup;
                throw new UndeferrableValueException("Value 'WindowsFileSystemSelfManagedActiveDirectoryArgs.FileSystemAdministratorsGroup' is not present");
            }
        }

        /// <summary>
        /// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
        /// </summary>
        [PolicyResourceProperty("organizationalUnitDistinguishedName", "_mUnknown_OrganizationalUnitDistinguishedName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OrganizationalUnitDistinguishedName;
        private bool _mUnknown_OrganizationalUnitDistinguishedName;
        public string? OrganizationalUnitDistinguishedName
        {
            get
            {
                if (!_mUnknown_OrganizationalUnitDistinguishedName) return _mValue_OrganizationalUnitDistinguishedName;
                throw new UndeferrableValueException("Value 'WindowsFileSystemSelfManagedActiveDirectoryArgs.OrganizationalUnitDistinguishedName' is not present");
            }
        }

        /// <summary>
        /// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
        /// </summary>
        [PolicyResourceProperty("password", "_mUnknown_Password")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Password;
        private bool _mUnknown_Password;
        public string? Password
        {
            get
            {
                if (!_mUnknown_Password) return _mValue_Password;
                throw new UndeferrableValueException("Value 'WindowsFileSystemSelfManagedActiveDirectoryArgs.Password' is not present");
            }
        }

        /// <summary>
        /// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
        /// </summary>
        [PolicyResourceProperty("username", "_mUnknown_Username")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Username;
        private bool _mUnknown_Username;
        public string? Username
        {
            get
            {
                if (!_mUnknown_Username) return _mValue_Username;
                throw new UndeferrableValueException("Value 'WindowsFileSystemSelfManagedActiveDirectoryArgs.Username' is not present");
            }
        }
    }
}
