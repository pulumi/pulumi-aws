// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Fsx
{
    [PolicyResourceType("aws:fsx/backup:Backup")]
    public sealed class Backup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name of the backup.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Backup.Arn' is not present");
            }
        }

        /// <summary>
        /// The ID of the file system to back up. Required if backing up Lustre or Windows file systems.
        /// </summary>
        [PolicyResourceProperty("fileSystemId", "_mUnknown_FileSystemId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FileSystemId;
        private bool _mUnknown_FileSystemId;
        public string? FileSystemId
        {
            get
            {
                if (!_mUnknown_FileSystemId) return _mValue_FileSystemId;
                throw new UndeferrableValueException("Value 'Backup.FileSystemId' is not present");
            }
        }

        /// <summary>
        /// The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the backup of the Amazon FSx file system's data at rest.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'Backup.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// AWS account identifier that created the file system.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'Backup.OwnerId' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copy_tags_to_backups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Backup.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Backup.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The type of the file system backup.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'Backup.Type' is not present");
            }
        }

        /// <summary>
        /// The ID of the volume to back up. Required if backing up a ONTAP Volume.
        /// </summary>
        [PolicyResourceProperty("volumeId", "_mUnknown_VolumeId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VolumeId;
        private bool _mUnknown_VolumeId;
        public string? VolumeId
        {
            get
            {
                if (!_mUnknown_VolumeId) return _mValue_VolumeId;
                throw new UndeferrableValueException("Value 'Backup.VolumeId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:fsx/backup:Backup")]
    public sealed class BackupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the file system to back up. Required if backing up Lustre or Windows file systems.
        /// </summary>
        [PolicyResourceProperty("fileSystemId", "_mUnknown_FileSystemId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FileSystemId;
        private bool _mUnknown_FileSystemId;
        public string? FileSystemId
        {
            get
            {
                if (!_mUnknown_FileSystemId) return _mValue_FileSystemId;
                throw new UndeferrableValueException("Value 'BackupArgs.FileSystemId' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copy_tags_to_backups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'BackupArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The ID of the volume to back up. Required if backing up a ONTAP Volume.
        /// </summary>
        [PolicyResourceProperty("volumeId", "_mUnknown_VolumeId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VolumeId;
        private bool _mUnknown_VolumeId;
        public string? VolumeId
        {
            get
            {
                if (!_mUnknown_VolumeId) return _mValue_VolumeId;
                throw new UndeferrableValueException("Value 'BackupArgs.VolumeId' is not present");
            }
        }
    }
}
