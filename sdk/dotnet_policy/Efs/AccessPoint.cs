// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Efs
{
    [PolicyResourceType("aws:efs/accessPoint:AccessPoint")]
    public sealed class AccessPoint : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the access point.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// ARN of the file system.
        /// </summary>
        [Input("fileSystemArn")]
        public string? FileSystemArn;

        /// <summary>
        /// ID of the file system for which the access point is intended.
        /// </summary>
        [Input("fileSystemId")]
        public string? FileSystemId;

        [Input("ownerId")]
        public string? OwnerId;

        /// <summary>
        /// Operating system user and group applied to all file system requests made using the access point. Detailed below.
        /// </summary>
        [Input("posixUser")]
        public AccessPointPosixUser? PosixUser;

        /// <summary>
        /// Directory on the Amazon EFS file system that the access point provides access to. Detailed below.
        /// </summary>
        [Input("rootDirectory")]
        public AccessPointRootDirectory? RootDirectory;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
