// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Efs
{
    [PolicyResourceType("aws:efs/fileSystem:FileSystem")]
    public sealed class FileSystem : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name of the file system.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'FileSystem.Arn' is not present");
            }
        }

        /// <summary>
        /// The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
        /// </summary>
        [PolicyResourceProperty("availabilityZoneId", "_mUnknown_AvailabilityZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZoneId;
        private bool _mUnknown_AvailabilityZoneId;
        public string? AvailabilityZoneId
        {
            get
            {
                if (!_mUnknown_AvailabilityZoneId) return _mValue_AvailabilityZoneId;
                throw new UndeferrableValueException("Value 'FileSystem.AvailabilityZoneId' is not present");
            }
        }

        /// <summary>
        /// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html) for more information.
        /// </summary>
        [PolicyResourceProperty("availabilityZoneName", "_mUnknown_AvailabilityZoneName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZoneName;
        private bool _mUnknown_AvailabilityZoneName;
        public string? AvailabilityZoneName
        {
            get
            {
                if (!_mUnknown_AvailabilityZoneName) return _mValue_AvailabilityZoneName;
                throw new UndeferrableValueException("Value 'FileSystem.AvailabilityZoneName' is not present");
            }
        }

        /// <summary>
        /// A unique name (a maximum of 64 characters are allowed)
        /// used as reference when creating the Elastic File System to ensure idempotent file
        /// system creation. By default generated by this provider. See [Elastic File System]
        /// user guide for more information.
        /// </summary>
        [PolicyResourceProperty("creationToken", "_mUnknown_CreationToken")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreationToken;
        private bool _mUnknown_CreationToken;
        public string? CreationToken
        {
            get
            {
                if (!_mUnknown_CreationToken) return _mValue_CreationToken;
                throw new UndeferrableValueException("Value 'FileSystem.CreationToken' is not present");
            }
        }

        /// <summary>
        /// The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
        /// </summary>
        [PolicyResourceProperty("dnsName", "_mUnknown_DnsName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DnsName;
        private bool _mUnknown_DnsName;
        public string? DnsName
        {
            get
            {
                if (!_mUnknown_DnsName) return _mValue_DnsName;
                throw new UndeferrableValueException("Value 'FileSystem.DnsName' is not present");
            }
        }

        /// <summary>
        /// If true, the disk will be encrypted.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public bool? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'FileSystem.Encrypted' is not present");
            }
        }

        /// <summary>
        /// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'FileSystem.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object. See `lifecycle_policy` block below for details.
        /// </summary>
        [PolicyResourceProperty("lifecyclePolicies", "_mUnknown_LifecyclePolicies")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.FileSystemLifecyclePolicy>? _mValue_LifecyclePolicies;
        private bool _mUnknown_LifecyclePolicies;
        public List<Outputs.FileSystemLifecyclePolicy>? LifecyclePolicies
        {
            get
            {
                if (!_mUnknown_LifecyclePolicies) return _mValue_LifecyclePolicies;
                throw new UndeferrableValueException("Value 'FileSystem.LifecyclePolicies' is not present");
            }
        }

        /// <summary>
        /// The value of the file system's `Name` tag.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'FileSystem.Name' is not present");
            }
        }

        /// <summary>
        /// The current number of mount targets that the file system has.
        /// </summary>
        [PolicyResourceProperty("numberOfMountTargets", "_mUnknown_NumberOfMountTargets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NumberOfMountTargets;
        private bool _mUnknown_NumberOfMountTargets;
        public int? NumberOfMountTargets
        {
            get
            {
                if (!_mUnknown_NumberOfMountTargets) return _mValue_NumberOfMountTargets;
                throw new UndeferrableValueException("Value 'FileSystem.NumberOfMountTargets' is not present");
            }
        }

        /// <summary>
        /// The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'FileSystem.OwnerId' is not present");
            }
        }

        /// <summary>
        /// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
        /// </summary>
        [PolicyResourceProperty("performanceMode", "_mUnknown_PerformanceMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PerformanceMode;
        private bool _mUnknown_PerformanceMode;
        public string? PerformanceMode
        {
            get
            {
                if (!_mUnknown_PerformanceMode) return _mValue_PerformanceMode;
                throw new UndeferrableValueException("Value 'FileSystem.PerformanceMode' is not present");
            }
        }

        /// <summary>
        /// A file system [protection](https://docs.aws.amazon.com/efs/latest/ug/API_FileSystemProtectionDescription.html) object. See `protection` block below for details.
        /// </summary>
        [PolicyResourceProperty("protection", "_mUnknown_Protection")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FileSystemProtection? _mValue_Protection;
        private bool _mUnknown_Protection;
        public Outputs.FileSystemProtection? Protection
        {
            get
            {
                if (!_mUnknown_Protection) return _mValue_Protection;
                throw new UndeferrableValueException("Value 'FileSystem.Protection' is not present");
            }
        }

        /// <summary>
        /// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughput_mode` set to `provisioned`.
        /// </summary>
        [PolicyResourceProperty("provisionedThroughputInMibps", "_mUnknown_ProvisionedThroughputInMibps")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_ProvisionedThroughputInMibps;
        private bool _mUnknown_ProvisionedThroughputInMibps;
        public double? ProvisionedThroughputInMibps
        {
            get
            {
                if (!_mUnknown_ProvisionedThroughputInMibps) return _mValue_ProvisionedThroughputInMibps;
                throw new UndeferrableValueException("Value 'FileSystem.ProvisionedThroughputInMibps' is not present");
            }
        }

        /// <summary>
        /// The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.
        /// </summary>
        [PolicyResourceProperty("sizeInBytes", "_mUnknown_SizeInBytes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.FileSystemSizeInByte>? _mValue_SizeInBytes;
        private bool _mUnknown_SizeInBytes;
        public List<Outputs.FileSystemSizeInByte>? SizeInBytes
        {
            get
            {
                if (!_mUnknown_SizeInBytes) return _mValue_SizeInBytes;
                throw new UndeferrableValueException("Value 'FileSystem.SizeInBytes' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FileSystem.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'FileSystem.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisioned_throughput_in_mibps`.
        /// </summary>
        [PolicyResourceProperty("throughputMode", "_mUnknown_ThroughputMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ThroughputMode;
        private bool _mUnknown_ThroughputMode;
        public string? ThroughputMode
        {
            get
            {
                if (!_mUnknown_ThroughputMode) return _mValue_ThroughputMode;
                throw new UndeferrableValueException("Value 'FileSystem.ThroughputMode' is not present");
            }
        }
    }

    [PolicyResourceType("aws:efs/fileSystem:FileSystem")]
    public sealed class FileSystemArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html) for more information.
        /// </summary>
        [PolicyResourceProperty("availabilityZoneName", "_mUnknown_AvailabilityZoneName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZoneName;
        private bool _mUnknown_AvailabilityZoneName;
        public string? AvailabilityZoneName
        {
            get
            {
                if (!_mUnknown_AvailabilityZoneName) return _mValue_AvailabilityZoneName;
                throw new UndeferrableValueException("Value 'FileSystemArgs.AvailabilityZoneName' is not present");
            }
        }

        /// <summary>
        /// A unique name (a maximum of 64 characters are allowed)
        /// used as reference when creating the Elastic File System to ensure idempotent file
        /// system creation. By default generated by this provider. See [Elastic File System]
        /// user guide for more information.
        /// </summary>
        [PolicyResourceProperty("creationToken", "_mUnknown_CreationToken")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreationToken;
        private bool _mUnknown_CreationToken;
        public string? CreationToken
        {
            get
            {
                if (!_mUnknown_CreationToken) return _mValue_CreationToken;
                throw new UndeferrableValueException("Value 'FileSystemArgs.CreationToken' is not present");
            }
        }

        /// <summary>
        /// If true, the disk will be encrypted.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public bool? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'FileSystemArgs.Encrypted' is not present");
            }
        }

        /// <summary>
        /// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'FileSystemArgs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object. See `lifecycle_policy` block below for details.
        /// </summary>
        [PolicyResourceProperty("lifecyclePolicies", "_mUnknown_LifecyclePolicies")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.FileSystemLifecyclePolicyArgs>? _mValue_LifecyclePolicies;
        private bool _mUnknown_LifecyclePolicies;
        public List<Inputs.FileSystemLifecyclePolicyArgs>? LifecyclePolicies
        {
            get
            {
                if (!_mUnknown_LifecyclePolicies) return _mValue_LifecyclePolicies;
                throw new UndeferrableValueException("Value 'FileSystemArgs.LifecyclePolicies' is not present");
            }
        }

        /// <summary>
        /// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
        /// </summary>
        [PolicyResourceProperty("performanceMode", "_mUnknown_PerformanceMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PerformanceMode;
        private bool _mUnknown_PerformanceMode;
        public string? PerformanceMode
        {
            get
            {
                if (!_mUnknown_PerformanceMode) return _mValue_PerformanceMode;
                throw new UndeferrableValueException("Value 'FileSystemArgs.PerformanceMode' is not present");
            }
        }

        /// <summary>
        /// A file system [protection](https://docs.aws.amazon.com/efs/latest/ug/API_FileSystemProtectionDescription.html) object. See `protection` block below for details.
        /// </summary>
        [PolicyResourceProperty("protection", "_mUnknown_Protection")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FileSystemProtectionArgs? _mValue_Protection;
        private bool _mUnknown_Protection;
        public Inputs.FileSystemProtectionArgs? Protection
        {
            get
            {
                if (!_mUnknown_Protection) return _mValue_Protection;
                throw new UndeferrableValueException("Value 'FileSystemArgs.Protection' is not present");
            }
        }

        /// <summary>
        /// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughput_mode` set to `provisioned`.
        /// </summary>
        [PolicyResourceProperty("provisionedThroughputInMibps", "_mUnknown_ProvisionedThroughputInMibps")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_ProvisionedThroughputInMibps;
        private bool _mUnknown_ProvisionedThroughputInMibps;
        public double? ProvisionedThroughputInMibps
        {
            get
            {
                if (!_mUnknown_ProvisionedThroughputInMibps) return _mValue_ProvisionedThroughputInMibps;
                throw new UndeferrableValueException("Value 'FileSystemArgs.ProvisionedThroughputInMibps' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FileSystemArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisioned_throughput_in_mibps`.
        /// </summary>
        [PolicyResourceProperty("throughputMode", "_mUnknown_ThroughputMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ThroughputMode;
        private bool _mUnknown_ThroughputMode;
        public string? ThroughputMode
        {
            get
            {
                if (!_mUnknown_ThroughputMode) return _mValue_ThroughputMode;
                throw new UndeferrableValueException("Value 'FileSystemArgs.ThroughputMode' is not present");
            }
        }
    }
}
