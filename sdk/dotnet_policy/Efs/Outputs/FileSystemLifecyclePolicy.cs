// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Efs.Outputs
{
    public sealed class FileSystemLifecyclePolicy
    {
        /// <summary>
        /// Indicates how long it takes to transition files to the archive storage class. Requires transition_to_ia, Elastic Throughput and General Purpose performance mode. Valid values: `AFTER_1_DAY`, `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, `AFTER_90_DAYS`, `AFTER_180_DAYS`, `AFTER_270_DAYS`, or `AFTER_365_DAYS`.
        /// </summary>
        [PolicyResourceProperty("transitionToArchive", "_mUnknown_TransitionToArchive")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TransitionToArchive;
        private bool _mUnknown_TransitionToArchive;
        public string? TransitionToArchive
        {
            get
            {
                if (!_mUnknown_TransitionToArchive) return _mValue_TransitionToArchive;
                throw new UndeferrableValueException("Value 'FileSystemLifecyclePolicy.TransitionToArchive' is not present");
            }
        }

        /// <summary>
        /// Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_1_DAY`, `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, `AFTER_90_DAYS`, `AFTER_180_DAYS`, `AFTER_270_DAYS`, or `AFTER_365_DAYS`.
        /// </summary>
        [PolicyResourceProperty("transitionToIa", "_mUnknown_TransitionToIa")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TransitionToIa;
        private bool _mUnknown_TransitionToIa;
        public string? TransitionToIa
        {
            get
            {
                if (!_mUnknown_TransitionToIa) return _mValue_TransitionToIa;
                throw new UndeferrableValueException("Value 'FileSystemLifecyclePolicy.TransitionToIa' is not present");
            }
        }

        /// <summary>
        /// Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: `AFTER_1_ACCESS`.
        /// </summary>
        [PolicyResourceProperty("transitionToPrimaryStorageClass", "_mUnknown_TransitionToPrimaryStorageClass")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TransitionToPrimaryStorageClass;
        private bool _mUnknown_TransitionToPrimaryStorageClass;
        public string? TransitionToPrimaryStorageClass
        {
            get
            {
                if (!_mUnknown_TransitionToPrimaryStorageClass) return _mValue_TransitionToPrimaryStorageClass;
                throw new UndeferrableValueException("Value 'FileSystemLifecyclePolicy.TransitionToPrimaryStorageClass' is not present");
            }
        }
    }
}
