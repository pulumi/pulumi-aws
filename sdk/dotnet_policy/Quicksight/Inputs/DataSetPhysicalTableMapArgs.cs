// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Quicksight.Inputs
{
    public sealed class DataSetPhysicalTableMapArgs
    {
        /// <summary>
        /// A physical table type built from the results of the custom SQL query. See custom_sql.
        /// </summary>
        [PolicyResourceProperty("customSql", "_mUnknown_CustomSql")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DataSetPhysicalTableMapCustomSqlArgs? _mValue_CustomSql;
        private bool _mUnknown_CustomSql;
        public Inputs.DataSetPhysicalTableMapCustomSqlArgs? CustomSql
        {
            get
            {
                if (!_mUnknown_CustomSql) return _mValue_CustomSql;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.CustomSql' is not present");
            }
        }

        /// <summary>
        /// Key of the physical table map.
        /// </summary>
        [PolicyResourceProperty("physicalTableMapId", "_mUnknown_PhysicalTableMapId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PhysicalTableMapId;
        private bool _mUnknown_PhysicalTableMapId;
        public string? PhysicalTableMapId
        {
            get
            {
                if (!_mUnknown_PhysicalTableMapId) return _mValue_PhysicalTableMapId;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.PhysicalTableMapId' is not present");
            }
        }

        /// <summary>
        /// A physical table type for relational data sources. See relational_table.
        /// </summary>
        [PolicyResourceProperty("relationalTable", "_mUnknown_RelationalTable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DataSetPhysicalTableMapRelationalTableArgs? _mValue_RelationalTable;
        private bool _mUnknown_RelationalTable;
        public Inputs.DataSetPhysicalTableMapRelationalTableArgs? RelationalTable
        {
            get
            {
                if (!_mUnknown_RelationalTable) return _mValue_RelationalTable;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.RelationalTable' is not present");
            }
        }

        /// <summary>
        /// A physical table type for as S3 data source. See s3_source.
        /// </summary>
        [PolicyResourceProperty("s3Source", "_mUnknown_S3Source")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DataSetPhysicalTableMapS3SourceArgs? _mValue_S3Source;
        private bool _mUnknown_S3Source;
        public Inputs.DataSetPhysicalTableMapS3SourceArgs? S3Source
        {
            get
            {
                if (!_mUnknown_S3Source) return _mValue_S3Source;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.S3Source' is not present");
            }
        }
    }
}
