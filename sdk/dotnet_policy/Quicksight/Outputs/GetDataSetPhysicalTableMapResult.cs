// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Quicksight.Outputs
{
    public sealed class GetDataSetPhysicalTableMapResult
    {
        [PolicyResourceProperty("customSqls", "_mUnknown_CustomSqls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDataSetPhysicalTableMapCustomSqlResult>? _mValue_CustomSqls;
        private bool _mUnknown_CustomSqls;
        public List<Outputs.GetDataSetPhysicalTableMapCustomSqlResult>? CustomSqls
        {
            get
            {
                if (!_mUnknown_CustomSqls) return _mValue_CustomSqls;
                throw new UndeferrableValueException("Value 'GetDataSetPhysicalTableMapResult.CustomSqls' is not present");
            }
        }

        [PolicyResourceProperty("physicalTableMapId", "_mUnknown_PhysicalTableMapId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PhysicalTableMapId;
        private bool _mUnknown_PhysicalTableMapId;
        public string? PhysicalTableMapId
        {
            get
            {
                if (!_mUnknown_PhysicalTableMapId) return _mValue_PhysicalTableMapId;
                throw new UndeferrableValueException("Value 'GetDataSetPhysicalTableMapResult.PhysicalTableMapId' is not present");
            }
        }

        [PolicyResourceProperty("relationalTables", "_mUnknown_RelationalTables")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDataSetPhysicalTableMapRelationalTableResult>? _mValue_RelationalTables;
        private bool _mUnknown_RelationalTables;
        public List<Outputs.GetDataSetPhysicalTableMapRelationalTableResult>? RelationalTables
        {
            get
            {
                if (!_mUnknown_RelationalTables) return _mValue_RelationalTables;
                throw new UndeferrableValueException("Value 'GetDataSetPhysicalTableMapResult.RelationalTables' is not present");
            }
        }

        [PolicyResourceProperty("s3Sources", "_mUnknown_S3Sources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDataSetPhysicalTableMapS3SourceResult>? _mValue_S3Sources;
        private bool _mUnknown_S3Sources;
        public List<Outputs.GetDataSetPhysicalTableMapS3SourceResult>? S3Sources
        {
            get
            {
                if (!_mUnknown_S3Sources) return _mValue_S3Sources;
                throw new UndeferrableValueException("Value 'GetDataSetPhysicalTableMapResult.S3Sources' is not present");
            }
        }
    }
}
