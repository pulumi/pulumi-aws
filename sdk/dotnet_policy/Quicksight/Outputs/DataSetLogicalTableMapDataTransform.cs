// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Quicksight.Outputs
{
    public sealed class DataSetLogicalTableMapDataTransform
    {
        /// <summary>
        /// A transform operation that casts a column to a different type. See cast_column_type_operation.
        /// </summary>
        [PolicyResourceProperty("castColumnTypeOperation", "_mUnknown_CastColumnTypeOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSetLogicalTableMapDataTransformCastColumnTypeOperation? _mValue_CastColumnTypeOperation;
        private bool _mUnknown_CastColumnTypeOperation;
        public Outputs.DataSetLogicalTableMapDataTransformCastColumnTypeOperation? CastColumnTypeOperation
        {
            get
            {
                if (!_mUnknown_CastColumnTypeOperation) return _mValue_CastColumnTypeOperation;
                throw new UndeferrableValueException("Value 'DataSetLogicalTableMapDataTransform.CastColumnTypeOperation' is not present");
            }
        }

        /// <summary>
        /// An operation that creates calculated columns. Columns created in one such operation form a lexical closure. See create_columns_operation.
        /// </summary>
        [PolicyResourceProperty("createColumnsOperation", "_mUnknown_CreateColumnsOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSetLogicalTableMapDataTransformCreateColumnsOperation? _mValue_CreateColumnsOperation;
        private bool _mUnknown_CreateColumnsOperation;
        public Outputs.DataSetLogicalTableMapDataTransformCreateColumnsOperation? CreateColumnsOperation
        {
            get
            {
                if (!_mUnknown_CreateColumnsOperation) return _mValue_CreateColumnsOperation;
                throw new UndeferrableValueException("Value 'DataSetLogicalTableMapDataTransform.CreateColumnsOperation' is not present");
            }
        }

        /// <summary>
        /// An operation that filters rows based on some condition. See filter_operation.
        /// </summary>
        [PolicyResourceProperty("filterOperation", "_mUnknown_FilterOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSetLogicalTableMapDataTransformFilterOperation? _mValue_FilterOperation;
        private bool _mUnknown_FilterOperation;
        public Outputs.DataSetLogicalTableMapDataTransformFilterOperation? FilterOperation
        {
            get
            {
                if (!_mUnknown_FilterOperation) return _mValue_FilterOperation;
                throw new UndeferrableValueException("Value 'DataSetLogicalTableMapDataTransform.FilterOperation' is not present");
            }
        }

        /// <summary>
        /// An operation that projects columns. Operations that come after a projection can only refer to projected columns. See project_operation.
        /// </summary>
        [PolicyResourceProperty("projectOperation", "_mUnknown_ProjectOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSetLogicalTableMapDataTransformProjectOperation? _mValue_ProjectOperation;
        private bool _mUnknown_ProjectOperation;
        public Outputs.DataSetLogicalTableMapDataTransformProjectOperation? ProjectOperation
        {
            get
            {
                if (!_mUnknown_ProjectOperation) return _mValue_ProjectOperation;
                throw new UndeferrableValueException("Value 'DataSetLogicalTableMapDataTransform.ProjectOperation' is not present");
            }
        }

        /// <summary>
        /// An operation that renames a column. See rename_column_operation.
        /// </summary>
        [PolicyResourceProperty("renameColumnOperation", "_mUnknown_RenameColumnOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSetLogicalTableMapDataTransformRenameColumnOperation? _mValue_RenameColumnOperation;
        private bool _mUnknown_RenameColumnOperation;
        public Outputs.DataSetLogicalTableMapDataTransformRenameColumnOperation? RenameColumnOperation
        {
            get
            {
                if (!_mUnknown_RenameColumnOperation) return _mValue_RenameColumnOperation;
                throw new UndeferrableValueException("Value 'DataSetLogicalTableMapDataTransform.RenameColumnOperation' is not present");
            }
        }

        /// <summary>
        /// An operation that tags a column with additional information. See tag_column_operation.
        /// </summary>
        [PolicyResourceProperty("tagColumnOperation", "_mUnknown_TagColumnOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSetLogicalTableMapDataTransformTagColumnOperation? _mValue_TagColumnOperation;
        private bool _mUnknown_TagColumnOperation;
        public Outputs.DataSetLogicalTableMapDataTransformTagColumnOperation? TagColumnOperation
        {
            get
            {
                if (!_mUnknown_TagColumnOperation) return _mValue_TagColumnOperation;
                throw new UndeferrableValueException("Value 'DataSetLogicalTableMapDataTransform.TagColumnOperation' is not present");
            }
        }

        /// <summary>
        /// A transform operation that removes tags associated with a column. See untag_column_operation.
        /// </summary>
        [PolicyResourceProperty("untagColumnOperation", "_mUnknown_UntagColumnOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSetLogicalTableMapDataTransformUntagColumnOperation? _mValue_UntagColumnOperation;
        private bool _mUnknown_UntagColumnOperation;
        public Outputs.DataSetLogicalTableMapDataTransformUntagColumnOperation? UntagColumnOperation
        {
            get
            {
                if (!_mUnknown_UntagColumnOperation) return _mValue_UntagColumnOperation;
                throw new UndeferrableValueException("Value 'DataSetLogicalTableMapDataTransform.UntagColumnOperation' is not present");
            }
        }
    }
}
