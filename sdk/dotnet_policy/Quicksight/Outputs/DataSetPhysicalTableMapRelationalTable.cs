// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Quicksight.Outputs
{
    public sealed class DataSetPhysicalTableMapRelationalTable
    {
        /// <summary>
        /// Catalog associated with the table.
        /// </summary>
        [PolicyResourceProperty("catalog", "_mUnknown_Catalog")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Catalog;
        private bool _mUnknown_Catalog;
        public string? Catalog
        {
            get
            {
                if (!_mUnknown_Catalog) return _mValue_Catalog;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapRelationalTable.Catalog' is not present");
            }
        }

        /// <summary>
        /// ARN of the data source.
        /// </summary>
        [PolicyResourceProperty("dataSourceArn", "_mUnknown_DataSourceArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataSourceArn;
        private bool _mUnknown_DataSourceArn;
        public string? DataSourceArn
        {
            get
            {
                if (!_mUnknown_DataSourceArn) return _mValue_DataSourceArn;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapRelationalTable.DataSourceArn' is not present");
            }
        }

        /// <summary>
        /// Column schema of the table. See input_columns.
        /// </summary>
        [PolicyResourceProperty("inputColumns", "_mUnknown_InputColumns")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.DataSetPhysicalTableMapRelationalTableInputColumn>? _mValue_InputColumns;
        private bool _mUnknown_InputColumns;
        public List<Outputs.DataSetPhysicalTableMapRelationalTableInputColumn>? InputColumns
        {
            get
            {
                if (!_mUnknown_InputColumns) return _mValue_InputColumns;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapRelationalTable.InputColumns' is not present");
            }
        }

        /// <summary>
        /// Name of the relational table.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapRelationalTable.Name' is not present");
            }
        }

        /// <summary>
        /// Schema name. This name applies to certain relational database engines.
        /// </summary>
        [PolicyResourceProperty("schema", "_mUnknown_Schema")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Schema;
        private bool _mUnknown_Schema;
        public string? Schema
        {
            get
            {
                if (!_mUnknown_Schema) return _mValue_Schema;
                throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapRelationalTable.Schema' is not present");
            }
        }
    }
}
