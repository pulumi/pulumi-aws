// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Quicksight.Outputs
{
    public sealed class GetThemeConfigurationResult
    {
        /// <summary>
        /// Color properties that apply to chart data colors. See data_color_palette.
        /// </summary>
        [PolicyResourceProperty("dataColorPalettes", "_mUnknown_DataColorPalettes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetThemeConfigurationDataColorPaletteResult>? _mValue_DataColorPalettes;
        private bool _mUnknown_DataColorPalettes;
        public List<Outputs.GetThemeConfigurationDataColorPaletteResult>? DataColorPalettes
        {
            get
            {
                if (!_mUnknown_DataColorPalettes) return _mValue_DataColorPalettes;
                throw new UndeferrableValueException("Value 'GetThemeConfigurationResult.DataColorPalettes' is not present");
            }
        }

        /// <summary>
        /// Display options related to sheets. See sheet.
        /// </summary>
        [PolicyResourceProperty("sheets", "_mUnknown_Sheets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetThemeConfigurationSheetResult>? _mValue_Sheets;
        private bool _mUnknown_Sheets;
        public List<Outputs.GetThemeConfigurationSheetResult>? Sheets
        {
            get
            {
                if (!_mUnknown_Sheets) return _mValue_Sheets;
                throw new UndeferrableValueException("Value 'GetThemeConfigurationResult.Sheets' is not present");
            }
        }

        /// <summary>
        /// Determines the typography options. See typography.
        /// </summary>
        [PolicyResourceProperty("typographies", "_mUnknown_Typographies")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetThemeConfigurationTypographyResult>? _mValue_Typographies;
        private bool _mUnknown_Typographies;
        public List<Outputs.GetThemeConfigurationTypographyResult>? Typographies
        {
            get
            {
                if (!_mUnknown_Typographies) return _mValue_Typographies;
                throw new UndeferrableValueException("Value 'GetThemeConfigurationResult.Typographies' is not present");
            }
        }

        /// <summary>
        /// Color properties that apply to the UI and to charts, excluding the colors that apply to data. See ui_color_palette.
        /// </summary>
        [PolicyResourceProperty("uiColorPalettes", "_mUnknown_UiColorPalettes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetThemeConfigurationUiColorPaletteResult>? _mValue_UiColorPalettes;
        private bool _mUnknown_UiColorPalettes;
        public List<Outputs.GetThemeConfigurationUiColorPaletteResult>? UiColorPalettes
        {
            get
            {
                if (!_mUnknown_UiColorPalettes) return _mValue_UiColorPalettes;
                throw new UndeferrableValueException("Value 'GetThemeConfigurationResult.UiColorPalettes' is not present");
            }
        }
    }
}
