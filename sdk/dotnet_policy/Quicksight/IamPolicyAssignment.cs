// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Quicksight
{
    [PolicyResourceType("aws:quicksight/iamPolicyAssignment:IamPolicyAssignment")]
    public sealed class IamPolicyAssignment : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Assignment ID.
        /// </summary>
        [PolicyResourceProperty("assignmentId", "_mUnknown_AssignmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssignmentId;
        private bool _mUnknown_AssignmentId;
        public string? AssignmentId
        {
            get
            {
                if (!_mUnknown_AssignmentId) return _mValue_AssignmentId;
                throw new UndeferrableValueException("Value 'IamPolicyAssignment.AssignmentId' is not present");
            }
        }

        /// <summary>
        /// Name of the assignment.
        /// </summary>
        [PolicyResourceProperty("assignmentName", "_mUnknown_AssignmentName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssignmentName;
        private bool _mUnknown_AssignmentName;
        public string? AssignmentName
        {
            get
            {
                if (!_mUnknown_AssignmentName) return _mValue_AssignmentName;
                throw new UndeferrableValueException("Value 'IamPolicyAssignment.AssignmentName' is not present");
            }
        }

        /// <summary>
        /// Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("assignmentStatus", "_mUnknown_AssignmentStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssignmentStatus;
        private bool _mUnknown_AssignmentStatus;
        public string? AssignmentStatus
        {
            get
            {
                if (!_mUnknown_AssignmentStatus) return _mValue_AssignmentStatus;
                throw new UndeferrableValueException("Value 'IamPolicyAssignment.AssignmentStatus' is not present");
            }
        }

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [PolicyResourceProperty("awsAccountId", "_mUnknown_AwsAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsAccountId;
        private bool _mUnknown_AwsAccountId;
        public string? AwsAccountId
        {
            get
            {
                if (!_mUnknown_AwsAccountId) return _mValue_AwsAccountId;
                throw new UndeferrableValueException("Value 'IamPolicyAssignment.AwsAccountId' is not present");
            }
        }

        /// <summary>
        /// Amazon QuickSight users, groups, or both to assign the policy to. See `identities` block.
        /// </summary>
        [PolicyResourceProperty("identities", "_mUnknown_Identities")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.IamPolicyAssignmentIdentities? _mValue_Identities;
        private bool _mUnknown_Identities;
        public Outputs.IamPolicyAssignmentIdentities? Identities
        {
            get
            {
                if (!_mUnknown_Identities) return _mValue_Identities;
                throw new UndeferrableValueException("Value 'IamPolicyAssignment.Identities' is not present");
            }
        }

        /// <summary>
        /// Namespace that contains the assignment. Defaults to `default`.
        /// </summary>
        [PolicyResourceProperty("namespace", "_mUnknown_Namespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Namespace;
        private bool _mUnknown_Namespace;
        public string? Namespace
        {
            get
            {
                if (!_mUnknown_Namespace) return _mValue_Namespace;
                throw new UndeferrableValueException("Value 'IamPolicyAssignment.Namespace' is not present");
            }
        }

        /// <summary>
        /// ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
        /// </summary>
        [PolicyResourceProperty("policyArn", "_mUnknown_PolicyArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyArn;
        private bool _mUnknown_PolicyArn;
        public string? PolicyArn
        {
            get
            {
                if (!_mUnknown_PolicyArn) return _mValue_PolicyArn;
                throw new UndeferrableValueException("Value 'IamPolicyAssignment.PolicyArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:quicksight/iamPolicyAssignment:IamPolicyAssignment")]
    public sealed class IamPolicyAssignmentArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the assignment.
        /// </summary>
        [PolicyResourceProperty("assignmentName", "_mUnknown_AssignmentName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssignmentName;
        private bool _mUnknown_AssignmentName;
        public string? AssignmentName
        {
            get
            {
                if (!_mUnknown_AssignmentName) return _mValue_AssignmentName;
                throw new UndeferrableValueException("Value 'IamPolicyAssignmentArgs.AssignmentName' is not present");
            }
        }

        /// <summary>
        /// Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("assignmentStatus", "_mUnknown_AssignmentStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssignmentStatus;
        private bool _mUnknown_AssignmentStatus;
        public string? AssignmentStatus
        {
            get
            {
                if (!_mUnknown_AssignmentStatus) return _mValue_AssignmentStatus;
                throw new UndeferrableValueException("Value 'IamPolicyAssignmentArgs.AssignmentStatus' is not present");
            }
        }

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [PolicyResourceProperty("awsAccountId", "_mUnknown_AwsAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsAccountId;
        private bool _mUnknown_AwsAccountId;
        public string? AwsAccountId
        {
            get
            {
                if (!_mUnknown_AwsAccountId) return _mValue_AwsAccountId;
                throw new UndeferrableValueException("Value 'IamPolicyAssignmentArgs.AwsAccountId' is not present");
            }
        }

        /// <summary>
        /// Amazon QuickSight users, groups, or both to assign the policy to. See `identities` block.
        /// </summary>
        [PolicyResourceProperty("identities", "_mUnknown_Identities")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.IamPolicyAssignmentIdentitiesArgs? _mValue_Identities;
        private bool _mUnknown_Identities;
        public Inputs.IamPolicyAssignmentIdentitiesArgs? Identities
        {
            get
            {
                if (!_mUnknown_Identities) return _mValue_Identities;
                throw new UndeferrableValueException("Value 'IamPolicyAssignmentArgs.Identities' is not present");
            }
        }

        /// <summary>
        /// Namespace that contains the assignment. Defaults to `default`.
        /// </summary>
        [PolicyResourceProperty("namespace", "_mUnknown_Namespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Namespace;
        private bool _mUnknown_Namespace;
        public string? Namespace
        {
            get
            {
                if (!_mUnknown_Namespace) return _mValue_Namespace;
                throw new UndeferrableValueException("Value 'IamPolicyAssignmentArgs.Namespace' is not present");
            }
        }

        /// <summary>
        /// ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
        /// </summary>
        [PolicyResourceProperty("policyArn", "_mUnknown_PolicyArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyArn;
        private bool _mUnknown_PolicyArn;
        public string? PolicyArn
        {
            get
            {
                if (!_mUnknown_PolicyArn) return _mValue_PolicyArn;
                throw new UndeferrableValueException("Value 'IamPolicyAssignmentArgs.PolicyArn' is not present");
            }
        }
    }
}
