// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Quicksight
{
    [PolicyResourceType("aws:quicksight/ingestion:Ingestion")]
    public sealed class Ingestion : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Ingestion.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Ingestion.Arn' is not present");
            }
        }

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [PolicyResourceProperty("awsAccountId", "_mUnknown_AwsAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsAccountId;
        private bool _mUnknown_AwsAccountId;
        public string? AwsAccountId
        {
            get
            {
                if (!_mUnknown_AwsAccountId) return _mValue_AwsAccountId;
                throw new UndeferrableValueException("Value 'Ingestion.AwsAccountId' is not present");
            }
        }

        /// <summary>
        /// ID of the dataset used in the ingestion.
        /// </summary>
        [PolicyResourceProperty("dataSetId", "_mUnknown_DataSetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataSetId;
        private bool _mUnknown_DataSetId;
        public string? DataSetId
        {
            get
            {
                if (!_mUnknown_DataSetId) return _mValue_DataSetId;
                throw new UndeferrableValueException("Value 'Ingestion.DataSetId' is not present");
            }
        }

        /// <summary>
        /// ID for the ingestion.
        /// </summary>
        [PolicyResourceProperty("ingestionId", "_mUnknown_IngestionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IngestionId;
        private bool _mUnknown_IngestionId;
        public string? IngestionId
        {
            get
            {
                if (!_mUnknown_IngestionId) return _mValue_IngestionId;
                throw new UndeferrableValueException("Value 'Ingestion.IngestionId' is not present");
            }
        }

        /// <summary>
        /// Ingestion status.
        /// </summary>
        [PolicyResourceProperty("ingestionStatus", "_mUnknown_IngestionStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IngestionStatus;
        private bool _mUnknown_IngestionStatus;
        public string? IngestionStatus
        {
            get
            {
                if (!_mUnknown_IngestionStatus) return _mValue_IngestionStatus;
                throw new UndeferrableValueException("Value 'Ingestion.IngestionStatus' is not present");
            }
        }

        /// <summary>
        /// Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("ingestionType", "_mUnknown_IngestionType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IngestionType;
        private bool _mUnknown_IngestionType;
        public string? IngestionType
        {
            get
            {
                if (!_mUnknown_IngestionType) return _mValue_IngestionType;
                throw new UndeferrableValueException("Value 'Ingestion.IngestionType' is not present");
            }
        }
    }

    [PolicyResourceType("aws:quicksight/ingestion:Ingestion")]
    public sealed class IngestionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// AWS account ID.
        /// </summary>
        [PolicyResourceProperty("awsAccountId", "_mUnknown_AwsAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsAccountId;
        private bool _mUnknown_AwsAccountId;
        public string? AwsAccountId
        {
            get
            {
                if (!_mUnknown_AwsAccountId) return _mValue_AwsAccountId;
                throw new UndeferrableValueException("Value 'IngestionArgs.AwsAccountId' is not present");
            }
        }

        /// <summary>
        /// ID of the dataset used in the ingestion.
        /// </summary>
        [PolicyResourceProperty("dataSetId", "_mUnknown_DataSetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataSetId;
        private bool _mUnknown_DataSetId;
        public string? DataSetId
        {
            get
            {
                if (!_mUnknown_DataSetId) return _mValue_DataSetId;
                throw new UndeferrableValueException("Value 'IngestionArgs.DataSetId' is not present");
            }
        }

        /// <summary>
        /// ID for the ingestion.
        /// </summary>
        [PolicyResourceProperty("ingestionId", "_mUnknown_IngestionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IngestionId;
        private bool _mUnknown_IngestionId;
        public string? IngestionId
        {
            get
            {
                if (!_mUnknown_IngestionId) return _mValue_IngestionId;
                throw new UndeferrableValueException("Value 'IngestionArgs.IngestionId' is not present");
            }
        }

        /// <summary>
        /// Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("ingestionType", "_mUnknown_IngestionType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IngestionType;
        private bool _mUnknown_IngestionType;
        public string? IngestionType
        {
            get
            {
                if (!_mUnknown_IngestionType) return _mValue_IngestionType;
                throw new UndeferrableValueException("Value 'IngestionArgs.IngestionType' is not present");
            }
        }
    }
}
