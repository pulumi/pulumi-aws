// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder
{
    [PolicyResourceType("aws:imagebuilder/component:Component")]
    public sealed class Component : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// (Required) Amazon Resource Name (ARN) of the component.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Change description of the component.
        /// </summary>
        [Input("changeDescription")]
        public string? ChangeDescription;

        /// <summary>
        /// Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
        /// </summary>
        [Input("data")]
        public string? Data;

        /// <summary>
        /// Date the component was created.
        /// </summary>
        [Input("dateCreated")]
        public string? DateCreated;

        /// <summary>
        /// Description of the component.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Encryption status of the component.
        /// </summary>
        [Input("encrypted")]
        public bool? Encrypted;

        /// <summary>
        /// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId;

        /// <summary>
        /// Name of the component.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Owner of the component.
        /// </summary>
        [Input("owner")]
        public string? Owner;

        /// <summary>
        /// Platform of the component.
        /// </summary>
        [Input("platform")]
        public string? Platform;

        /// <summary>
        /// Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
        /// </summary>
        [Input("skipDestroy")]
        public bool? SkipDestroy;

        /// <summary>
        /// Set of Operating Systems (OS) supported by the component.
        /// </summary>
        [Input("supportedOsVersions")]
        public List<string>? SupportedOsVersions;

        /// <summary>
        /// Key-value map of resource tags for the component. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Type of the component.
        /// </summary>
        [Input("type")]
        public string? Type;

        /// <summary>
        /// S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
        /// 
        /// &gt; **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skip_destroy` argument can be used to retain the old version.
        /// </summary>
        [Input("uri")]
        public string? Uri;

        /// <summary>
        /// Version of the component.
        /// 
        /// The following attributes are optional:
        /// </summary>
        [Input("version")]
        public string? Version;
    }
}
