// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder.Outputs
{
    public sealed class LifecyclePolicyPolicyDetailFilter
    {
        /// <summary>
        /// For age-based filters, this is the number of resources to keep on hand after the lifecycle DELETE action is applied. Impacted resources are only deleted if you have more than this number of resources. If you have fewer resources than this number, the impacted resource is not deleted.
        /// </summary>
        [PolicyResourceProperty("retainAtLeast", "_mUnknown_RetainAtLeast")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RetainAtLeast;
        private bool _mUnknown_RetainAtLeast;
        public int? RetainAtLeast
        {
            get
            {
                if (!_mUnknown_RetainAtLeast) return _mValue_RetainAtLeast;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilter.RetainAtLeast' is not present");
            }
        }

        /// <summary>
        /// Filter resources based on either age or count. Valid values: `AGE` or `COUNT`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilter.Type' is not present");
            }
        }

        /// <summary>
        /// Defines the unit of time that the lifecycle policy uses to determine impacted resources. This is required for age-based rules. Valid values: `DAYS`, `WEEKS`, `MONTHS` or `YEARS`.
        /// </summary>
        [PolicyResourceProperty("unit", "_mUnknown_Unit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Unit;
        private bool _mUnknown_Unit;
        public string? Unit
        {
            get
            {
                if (!_mUnknown_Unit) return _mValue_Unit;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilter.Unit' is not present");
            }
        }

        /// <summary>
        /// The number of units for the time period or for the count. For example, a value of 6 might refer to six months or six AMIs.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("value", "_mUnknown_Value")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Value;
        private bool _mUnknown_Value;
        public int? Value
        {
            get
            {
                if (!_mUnknown_Value) return _mValue_Value;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilter.Value' is not present");
            }
        }
    }
}
