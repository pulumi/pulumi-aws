// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder.Outputs
{
    public sealed class DistributionConfigurationDistributionFastLaunchConfiguration
    {
        /// <summary>
        /// The owner account ID for the fast-launch enabled Windows AMI.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'DistributionConfigurationDistributionFastLaunchConfiguration.AccountId' is not present");
            }
        }

        /// <summary>
        /// A Boolean that represents the current state of faster launching for the Windows AMI. Set to `true` to start using Windows faster launching, or `false` to stop using it.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'DistributionConfigurationDistributionFastLaunchConfiguration.Enabled' is not present");
            }
        }

        /// <summary>
        /// Configuration block for the launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots. Detailed below.
        /// </summary>
        [PolicyResourceProperty("launchTemplate", "_mUnknown_LaunchTemplate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate? _mValue_LaunchTemplate;
        private bool _mUnknown_LaunchTemplate;
        public Outputs.DistributionConfigurationDistributionFastLaunchConfigurationLaunchTemplate? LaunchTemplate
        {
            get
            {
                if (!_mUnknown_LaunchTemplate) return _mValue_LaunchTemplate;
                throw new UndeferrableValueException("Value 'DistributionConfigurationDistributionFastLaunchConfiguration.LaunchTemplate' is not present");
            }
        }

        /// <summary>
        /// The maximum number of parallel instances that are launched for creating resources.
        /// </summary>
        [PolicyResourceProperty("maxParallelLaunches", "_mUnknown_MaxParallelLaunches")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxParallelLaunches;
        private bool _mUnknown_MaxParallelLaunches;
        public int? MaxParallelLaunches
        {
            get
            {
                if (!_mUnknown_MaxParallelLaunches) return _mValue_MaxParallelLaunches;
                throw new UndeferrableValueException("Value 'DistributionConfigurationDistributionFastLaunchConfiguration.MaxParallelLaunches' is not present");
            }
        }

        /// <summary>
        /// Configuration block for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled. Detailed below.
        /// </summary>
        [PolicyResourceProperty("snapshotConfiguration", "_mUnknown_SnapshotConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration? _mValue_SnapshotConfiguration;
        private bool _mUnknown_SnapshotConfiguration;
        public Outputs.DistributionConfigurationDistributionFastLaunchConfigurationSnapshotConfiguration? SnapshotConfiguration
        {
            get
            {
                if (!_mUnknown_SnapshotConfiguration) return _mValue_SnapshotConfiguration;
                throw new UndeferrableValueException("Value 'DistributionConfigurationDistributionFastLaunchConfiguration.SnapshotConfiguration' is not present");
            }
        }
    }
}
