// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder.Outputs
{
    public sealed class GetDistributionConfigurationDistributionResult
    {
        /// <summary>
        /// Nested list of AMI distribution configuration.
        /// </summary>
        [PolicyResourceProperty("amiDistributionConfigurations", "_mUnknown_AmiDistributionConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDistributionConfigurationDistributionAmiDistributionConfigurationResult>? _mValue_AmiDistributionConfigurations;
        private bool _mUnknown_AmiDistributionConfigurations;
        public List<Outputs.GetDistributionConfigurationDistributionAmiDistributionConfigurationResult>? AmiDistributionConfigurations
        {
            get
            {
                if (!_mUnknown_AmiDistributionConfigurations) return _mValue_AmiDistributionConfigurations;
                throw new UndeferrableValueException("Value 'GetDistributionConfigurationDistributionResult.AmiDistributionConfigurations' is not present");
            }
        }

        /// <summary>
        /// Nested list of container distribution configurations.
        /// </summary>
        [PolicyResourceProperty("containerDistributionConfigurations", "_mUnknown_ContainerDistributionConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDistributionConfigurationDistributionContainerDistributionConfigurationResult>? _mValue_ContainerDistributionConfigurations;
        private bool _mUnknown_ContainerDistributionConfigurations;
        public List<Outputs.GetDistributionConfigurationDistributionContainerDistributionConfigurationResult>? ContainerDistributionConfigurations
        {
            get
            {
                if (!_mUnknown_ContainerDistributionConfigurations) return _mValue_ContainerDistributionConfigurations;
                throw new UndeferrableValueException("Value 'GetDistributionConfigurationDistributionResult.ContainerDistributionConfigurations' is not present");
            }
        }

        /// <summary>
        /// Nested list of Windows faster-launching configurations to use for AMI distribution.
        /// </summary>
        [PolicyResourceProperty("fastLaunchConfigurations", "_mUnknown_FastLaunchConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDistributionConfigurationDistributionFastLaunchConfigurationResult>? _mValue_FastLaunchConfigurations;
        private bool _mUnknown_FastLaunchConfigurations;
        public List<Outputs.GetDistributionConfigurationDistributionFastLaunchConfigurationResult>? FastLaunchConfigurations
        {
            get
            {
                if (!_mUnknown_FastLaunchConfigurations) return _mValue_FastLaunchConfigurations;
                throw new UndeferrableValueException("Value 'GetDistributionConfigurationDistributionResult.FastLaunchConfigurations' is not present");
            }
        }

        /// <summary>
        /// Nested list of launch template configurations.
        /// </summary>
        [PolicyResourceProperty("launchTemplateConfigurations", "_mUnknown_LaunchTemplateConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDistributionConfigurationDistributionLaunchTemplateConfigurationResult>? _mValue_LaunchTemplateConfigurations;
        private bool _mUnknown_LaunchTemplateConfigurations;
        public List<Outputs.GetDistributionConfigurationDistributionLaunchTemplateConfigurationResult>? LaunchTemplateConfigurations
        {
            get
            {
                if (!_mUnknown_LaunchTemplateConfigurations) return _mValue_LaunchTemplateConfigurations;
                throw new UndeferrableValueException("Value 'GetDistributionConfigurationDistributionResult.LaunchTemplateConfigurations' is not present");
            }
        }

        /// <summary>
        /// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
        /// </summary>
        [PolicyResourceProperty("licenseConfigurationArns", "_mUnknown_LicenseConfigurationArns")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_LicenseConfigurationArns;
        private bool _mUnknown_LicenseConfigurationArns;
        public List<string>? LicenseConfigurationArns
        {
            get
            {
                if (!_mUnknown_LicenseConfigurationArns) return _mValue_LicenseConfigurationArns;
                throw new UndeferrableValueException("Value 'GetDistributionConfigurationDistributionResult.LicenseConfigurationArns' is not present");
            }
        }

        /// <summary>
        /// AWS Region of distribution.
        /// </summary>
        [PolicyResourceProperty("region", "_mUnknown_Region")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Region;
        private bool _mUnknown_Region;
        public string? Region
        {
            get
            {
                if (!_mUnknown_Region) return _mValue_Region;
                throw new UndeferrableValueException("Value 'GetDistributionConfigurationDistributionResult.Region' is not present");
            }
        }

        /// <summary>
        /// Nested list of S3 export configuration.
        /// </summary>
        [PolicyResourceProperty("s3ExportConfigurations", "_mUnknown_S3ExportConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetDistributionConfigurationDistributionS3ExportConfigurationResult>? _mValue_S3ExportConfigurations;
        private bool _mUnknown_S3ExportConfigurations;
        public List<Outputs.GetDistributionConfigurationDistributionS3ExportConfigurationResult>? S3ExportConfigurations
        {
            get
            {
                if (!_mUnknown_S3ExportConfigurations) return _mValue_S3ExportConfigurations;
                throw new UndeferrableValueException("Value 'GetDistributionConfigurationDistributionResult.S3ExportConfigurations' is not present");
            }
        }
    }
}
