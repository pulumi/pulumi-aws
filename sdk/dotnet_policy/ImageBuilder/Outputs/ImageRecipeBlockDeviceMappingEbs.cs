// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder.Outputs
{
    public sealed class ImageRecipeBlockDeviceMappingEbs
    {
        /// <summary>
        /// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
        /// </summary>
        [PolicyResourceProperty("deleteOnTermination", "_mUnknown_DeleteOnTermination")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeleteOnTermination;
        private bool _mUnknown_DeleteOnTermination;
        public string? DeleteOnTermination
        {
            get
            {
                if (!_mUnknown_DeleteOnTermination) return _mValue_DeleteOnTermination;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.DeleteOnTermination' is not present");
            }
        }

        /// <summary>
        /// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public string? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.Encrypted' is not present");
            }
        }

        /// <summary>
        /// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
        /// </summary>
        [PolicyResourceProperty("iops", "_mUnknown_Iops")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Iops;
        private bool _mUnknown_Iops;
        public int? Iops
        {
            get
            {
                if (!_mUnknown_Iops) return _mValue_Iops;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.Iops' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// Identifier of the EC2 Volume Snapshot.
        /// </summary>
        [PolicyResourceProperty("snapshotId", "_mUnknown_SnapshotId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SnapshotId;
        private bool _mUnknown_SnapshotId;
        public string? SnapshotId
        {
            get
            {
                if (!_mUnknown_SnapshotId) return _mValue_SnapshotId;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.SnapshotId' is not present");
            }
        }

        /// <summary>
        /// For GP3 volumes only. The throughput in MiB/s that the volume supports.
        /// </summary>
        [PolicyResourceProperty("throughput", "_mUnknown_Throughput")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Throughput;
        private bool _mUnknown_Throughput;
        public int? Throughput
        {
            get
            {
                if (!_mUnknown_Throughput) return _mValue_Throughput;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.Throughput' is not present");
            }
        }

        /// <summary>
        /// Size of the volume, in GiB.
        /// </summary>
        [PolicyResourceProperty("volumeSize", "_mUnknown_VolumeSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_VolumeSize;
        private bool _mUnknown_VolumeSize;
        public int? VolumeSize
        {
            get
            {
                if (!_mUnknown_VolumeSize) return _mValue_VolumeSize;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.VolumeSize' is not present");
            }
        }

        /// <summary>
        /// Type of the volume. For example, `gp2` or `io2`.
        /// </summary>
        [PolicyResourceProperty("volumeType", "_mUnknown_VolumeType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VolumeType;
        private bool _mUnknown_VolumeType;
        public string? VolumeType
        {
            get
            {
                if (!_mUnknown_VolumeType) return _mValue_VolumeType;
                throw new UndeferrableValueException("Value 'ImageRecipeBlockDeviceMappingEbs.VolumeType' is not present");
            }
        }
    }
}
