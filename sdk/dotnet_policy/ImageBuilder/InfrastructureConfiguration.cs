// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder
{
    [PolicyResourceType("aws:imagebuilder/infrastructureConfiguration:InfrastructureConfiguration")]
    public sealed class InfrastructureConfiguration : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the configuration.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Date when the configuration was created.
        /// </summary>
        [Input("dateCreated")]
        public string? DateCreated;

        /// <summary>
        /// Date when the configuration was updated.
        /// </summary>
        [Input("dateUpdated")]
        public string? DateUpdated;

        /// <summary>
        /// Description for the configuration.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Configuration block with instance metadata options for the HTTP requests that pipeline builds use to launch EC2 build and test instances. Detailed below.
        /// </summary>
        [Input("instanceMetadataOptions")]
        public InfrastructureConfigurationInstanceMetadataOptions? InstanceMetadataOptions;

        /// <summary>
        /// Name of IAM Instance Profile.
        /// </summary>
        [Input("instanceProfileName")]
        public string? InstanceProfileName;

        /// <summary>
        /// Set of EC2 Instance Types.
        /// </summary>
        [Input("instanceTypes")]
        public List<string>? InstanceTypes;

        /// <summary>
        /// Name of EC2 Key Pair.
        /// </summary>
        [Input("keyPair")]
        public string? KeyPair;

        /// <summary>
        /// Configuration block with logging settings. Detailed below.
        /// </summary>
        [Input("logging")]
        public InfrastructureConfigurationLogging? Logging;

        /// <summary>
        /// Name for the configuration.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Key-value map of resource tags to assign to infrastructure created by the configuration.
        /// </summary>
        [Input("resourceTags")]
        public Dictionary<string, string>? ResourceTags;

        /// <summary>
        /// Set of EC2 Security Group identifiers.
        /// </summary>
        [Input("securityGroupIds")]
        public List<string>? SecurityGroupIds;

        /// <summary>
        /// Amazon Resource Name (ARN) of SNS Topic.
        /// </summary>
        [Input("snsTopicArn")]
        public string? SnsTopicArn;

        /// <summary>
        /// EC2 Subnet identifier. Also requires `security_group_ids` argument.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId;

        /// <summary>
        /// Key-value map of resource tags to assign to the configuration. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Enable if the instance should be terminated when the pipeline fails. Defaults to `false`.
        /// </summary>
        [Input("terminateInstanceOnFailure")]
        public bool? TerminateInstanceOnFailure;
    }
}
