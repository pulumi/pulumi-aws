// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder.Inputs
{
    public sealed class ContainerRecipeInstanceConfigurationArgs
    {
        /// <summary>
        /// Configuration block(s) with block device mappings for the container recipe. Detailed below.
        /// </summary>
        [PolicyResourceProperty("blockDeviceMappings", "_mUnknown_BlockDeviceMappings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs>? _mValue_BlockDeviceMappings;
        private bool _mUnknown_BlockDeviceMappings;
        public List<Inputs.ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs>? BlockDeviceMappings
        {
            get
            {
                if (!_mUnknown_BlockDeviceMappings) return _mValue_BlockDeviceMappings;
                throw new UndeferrableValueException("Value 'ContainerRecipeInstanceConfigurationArgs.BlockDeviceMappings' is not present");
            }
        }

        /// <summary>
        /// The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
        /// </summary>
        [PolicyResourceProperty("image", "_mUnknown_Image")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Image;
        private bool _mUnknown_Image;
        public string? Image
        {
            get
            {
                if (!_mUnknown_Image) return _mValue_Image;
                throw new UndeferrableValueException("Value 'ContainerRecipeInstanceConfigurationArgs.Image' is not present");
            }
        }
    }
}
