// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder
{
    [PolicyResourceType("aws:imagebuilder/imagePipeline:ImagePipeline")]
    public sealed class ImagePipeline : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the image pipeline.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Amazon Resource Name (ARN) of the container recipe.
        /// </summary>
        [Input("containerRecipeArn")]
        public string? ContainerRecipeArn;

        /// <summary>
        /// Date the image pipeline was created.
        /// </summary>
        [Input("dateCreated")]
        public string? DateCreated;

        /// <summary>
        /// Date the image pipeline was last run.
        /// </summary>
        [Input("dateLastRun")]
        public string? DateLastRun;

        /// <summary>
        /// Date the image pipeline will run next.
        /// </summary>
        [Input("dateNextRun")]
        public string? DateNextRun;

        /// <summary>
        /// Date the image pipeline was updated.
        /// </summary>
        [Input("dateUpdated")]
        public string? DateUpdated;

        /// <summary>
        /// Description of the image pipeline.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
        /// </summary>
        [Input("distributionConfigurationArn")]
        public string? DistributionConfigurationArn;

        /// <summary>
        /// Whether additional information about the image being created is collected. Defaults to `true`.
        /// </summary>
        [Input("enhancedImageMetadataEnabled")]
        public bool? EnhancedImageMetadataEnabled;

        /// <summary>
        /// Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to [execute workflows](https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-image-workflows.html).
        /// </summary>
        [Input("executionRole")]
        public string? ExecutionRole;

        /// <summary>
        /// Amazon Resource Name (ARN) of the image recipe.
        /// </summary>
        [Input("imageRecipeArn")]
        public string? ImageRecipeArn;

        /// <summary>
        /// Configuration block with image scanning configuration. Detailed below.
        /// </summary>
        [Input("imageScanningConfiguration")]
        public ImagePipelineImageScanningConfiguration? ImageScanningConfiguration;

        /// <summary>
        /// Configuration block with image tests configuration. Detailed below.
        /// </summary>
        [Input("imageTestsConfiguration")]
        public ImagePipelineImageTestsConfiguration? ImageTestsConfiguration;

        /// <summary>
        /// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
        /// </summary>
        [Input("infrastructureConfigurationArn")]
        public string? InfrastructureConfigurationArn;

        /// <summary>
        /// Name of the image pipeline.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Platform of the image pipeline.
        /// </summary>
        [Input("platform")]
        public string? Platform;

        /// <summary>
        /// Configuration block with schedule settings. Detailed below.
        /// </summary>
        [Input("schedule")]
        public ImagePipelineSchedule? Schedule;

        /// <summary>
        /// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Key-value map of resource tags for the image pipeline. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Configuration block with the workflow configuration. Detailed below.
        /// </summary>
        [Input("workflows")]
        public List<ImagePipelineWorkflow>? Workflows;
    }
}
