// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder
{
    [PolicyResourceType("aws:imagebuilder/imageRecipe:ImageRecipe")]
    public sealed class ImageRecipe : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the image recipe.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Configuration block(s) with block device mappings for the image recipe. Detailed below.
        /// </summary>
        [Input("blockDeviceMappings")]
        public List<ImageRecipeBlockDeviceMapping>? BlockDeviceMappings;

        /// <summary>
        /// Ordered configuration block(s) with components for the image recipe. Detailed below.
        /// </summary>
        [Input("components")]
        public List<ImageRecipeComponent>? Components;

        /// <summary>
        /// Date the image recipe was created.
        /// </summary>
        [Input("dateCreated")]
        public string? DateCreated;

        /// <summary>
        /// Description of the image recipe.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Name of the image recipe.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Owner of the image recipe.
        /// </summary>
        [Input("owner")]
        public string? Owner;

        /// <summary>
        /// The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.
        /// </summary>
        [Input("parentImage")]
        public string? ParentImage;

        /// <summary>
        /// Platform of the image recipe.
        /// </summary>
        [Input("platform")]
        public string? Platform;

        /// <summary>
        /// Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.
        /// </summary>
        [Input("systemsManagerAgent")]
        public ImageRecipeSystemsManagerAgent? SystemsManagerAgent;

        /// <summary>
        /// Key-value map of resource tags for the image recipe. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
        /// </summary>
        [Input("userDataBase64")]
        public string? UserDataBase64;

        /// <summary>
        /// The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.
        /// 
        /// The following attributes are optional:
        /// </summary>
        [Input("version")]
        public string? Version;

        /// <summary>
        /// The working directory to be used during build and test workflows.
        /// </summary>
        [Input("workingDirectory")]
        public string? WorkingDirectory;
    }
}
