// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ImageBuilder
{
    [PolicyResourceType("aws:imagebuilder/image:Image")]
    public sealed class Image : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the image.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Image.Arn' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the container recipe.
        /// </summary>
        [PolicyResourceProperty("containerRecipeArn", "_mUnknown_ContainerRecipeArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ContainerRecipeArn;
        private bool _mUnknown_ContainerRecipeArn;
        public string? ContainerRecipeArn
        {
            get
            {
                if (!_mUnknown_ContainerRecipeArn) return _mValue_ContainerRecipeArn;
                throw new UndeferrableValueException("Value 'Image.ContainerRecipeArn' is not present");
            }
        }

        /// <summary>
        /// Date the image was created.
        /// </summary>
        [PolicyResourceProperty("dateCreated", "_mUnknown_DateCreated")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DateCreated;
        private bool _mUnknown_DateCreated;
        public string? DateCreated
        {
            get
            {
                if (!_mUnknown_DateCreated) return _mValue_DateCreated;
                throw new UndeferrableValueException("Value 'Image.DateCreated' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
        /// </summary>
        [PolicyResourceProperty("distributionConfigurationArn", "_mUnknown_DistributionConfigurationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DistributionConfigurationArn;
        private bool _mUnknown_DistributionConfigurationArn;
        public string? DistributionConfigurationArn
        {
            get
            {
                if (!_mUnknown_DistributionConfigurationArn) return _mValue_DistributionConfigurationArn;
                throw new UndeferrableValueException("Value 'Image.DistributionConfigurationArn' is not present");
            }
        }

        /// <summary>
        /// Whether additional information about the image being created is collected. Defaults to `true`.
        /// </summary>
        [PolicyResourceProperty("enhancedImageMetadataEnabled", "_mUnknown_EnhancedImageMetadataEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnhancedImageMetadataEnabled;
        private bool _mUnknown_EnhancedImageMetadataEnabled;
        public bool? EnhancedImageMetadataEnabled
        {
            get
            {
                if (!_mUnknown_EnhancedImageMetadataEnabled) return _mValue_EnhancedImageMetadataEnabled;
                throw new UndeferrableValueException("Value 'Image.EnhancedImageMetadataEnabled' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to [execute workflows](https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-image-workflows.html).
        /// </summary>
        [PolicyResourceProperty("executionRole", "_mUnknown_ExecutionRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ExecutionRole;
        private bool _mUnknown_ExecutionRole;
        public string? ExecutionRole
        {
            get
            {
                if (!_mUnknown_ExecutionRole) return _mValue_ExecutionRole;
                throw new UndeferrableValueException("Value 'Image.ExecutionRole' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the image recipe.
        /// </summary>
        [PolicyResourceProperty("imageRecipeArn", "_mUnknown_ImageRecipeArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageRecipeArn;
        private bool _mUnknown_ImageRecipeArn;
        public string? ImageRecipeArn
        {
            get
            {
                if (!_mUnknown_ImageRecipeArn) return _mValue_ImageRecipeArn;
                throw new UndeferrableValueException("Value 'Image.ImageRecipeArn' is not present");
            }
        }

        /// <summary>
        /// Configuration block with image scanning configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("imageScanningConfiguration", "_mUnknown_ImageScanningConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ImageImageScanningConfiguration? _mValue_ImageScanningConfiguration;
        private bool _mUnknown_ImageScanningConfiguration;
        public Outputs.ImageImageScanningConfiguration? ImageScanningConfiguration
        {
            get
            {
                if (!_mUnknown_ImageScanningConfiguration) return _mValue_ImageScanningConfiguration;
                throw new UndeferrableValueException("Value 'Image.ImageScanningConfiguration' is not present");
            }
        }

        /// <summary>
        /// Configuration block with image tests configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("imageTestsConfiguration", "_mUnknown_ImageTestsConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ImageImageTestsConfiguration? _mValue_ImageTestsConfiguration;
        private bool _mUnknown_ImageTestsConfiguration;
        public Outputs.ImageImageTestsConfiguration? ImageTestsConfiguration
        {
            get
            {
                if (!_mUnknown_ImageTestsConfiguration) return _mValue_ImageTestsConfiguration;
                throw new UndeferrableValueException("Value 'Image.ImageTestsConfiguration' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("infrastructureConfigurationArn", "_mUnknown_InfrastructureConfigurationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InfrastructureConfigurationArn;
        private bool _mUnknown_InfrastructureConfigurationArn;
        public string? InfrastructureConfigurationArn
        {
            get
            {
                if (!_mUnknown_InfrastructureConfigurationArn) return _mValue_InfrastructureConfigurationArn;
                throw new UndeferrableValueException("Value 'Image.InfrastructureConfigurationArn' is not present");
            }
        }

        /// <summary>
        /// Name of the AMI.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Image.Name' is not present");
            }
        }

        /// <summary>
        /// Operating System version of the image.
        /// </summary>
        [PolicyResourceProperty("osVersion", "_mUnknown_OsVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OsVersion;
        private bool _mUnknown_OsVersion;
        public string? OsVersion
        {
            get
            {
                if (!_mUnknown_OsVersion) return _mValue_OsVersion;
                throw new UndeferrableValueException("Value 'Image.OsVersion' is not present");
            }
        }

        /// <summary>
        /// List of objects with resources created by the image.
        /// </summary>
        [PolicyResourceProperty("outputResources", "_mUnknown_OutputResources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ImageOutputResource>? _mValue_OutputResources;
        private bool _mUnknown_OutputResources;
        public List<Outputs.ImageOutputResource>? OutputResources
        {
            get
            {
                if (!_mUnknown_OutputResources) return _mValue_OutputResources;
                throw new UndeferrableValueException("Value 'Image.OutputResources' is not present");
            }
        }

        /// <summary>
        /// Platform of the image.
        /// </summary>
        [PolicyResourceProperty("platform", "_mUnknown_Platform")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Platform;
        private bool _mUnknown_Platform;
        public string? Platform
        {
            get
            {
                if (!_mUnknown_Platform) return _mValue_Platform;
                throw new UndeferrableValueException("Value 'Image.Platform' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags for the Image Builder Image. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Image.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Image.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Version of the image.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'Image.Version' is not present");
            }
        }

        /// <summary>
        /// Configuration block with the workflow configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("workflows", "_mUnknown_Workflows")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ImageWorkflow>? _mValue_Workflows;
        private bool _mUnknown_Workflows;
        public List<Outputs.ImageWorkflow>? Workflows
        {
            get
            {
                if (!_mUnknown_Workflows) return _mValue_Workflows;
                throw new UndeferrableValueException("Value 'Image.Workflows' is not present");
            }
        }
    }

    [PolicyResourceType("aws:imagebuilder/image:Image")]
    public sealed class ImageArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the container recipe.
        /// </summary>
        [PolicyResourceProperty("containerRecipeArn", "_mUnknown_ContainerRecipeArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ContainerRecipeArn;
        private bool _mUnknown_ContainerRecipeArn;
        public string? ContainerRecipeArn
        {
            get
            {
                if (!_mUnknown_ContainerRecipeArn) return _mValue_ContainerRecipeArn;
                throw new UndeferrableValueException("Value 'ImageArgs.ContainerRecipeArn' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
        /// </summary>
        [PolicyResourceProperty("distributionConfigurationArn", "_mUnknown_DistributionConfigurationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DistributionConfigurationArn;
        private bool _mUnknown_DistributionConfigurationArn;
        public string? DistributionConfigurationArn
        {
            get
            {
                if (!_mUnknown_DistributionConfigurationArn) return _mValue_DistributionConfigurationArn;
                throw new UndeferrableValueException("Value 'ImageArgs.DistributionConfigurationArn' is not present");
            }
        }

        /// <summary>
        /// Whether additional information about the image being created is collected. Defaults to `true`.
        /// </summary>
        [PolicyResourceProperty("enhancedImageMetadataEnabled", "_mUnknown_EnhancedImageMetadataEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnhancedImageMetadataEnabled;
        private bool _mUnknown_EnhancedImageMetadataEnabled;
        public bool? EnhancedImageMetadataEnabled
        {
            get
            {
                if (!_mUnknown_EnhancedImageMetadataEnabled) return _mValue_EnhancedImageMetadataEnabled;
                throw new UndeferrableValueException("Value 'ImageArgs.EnhancedImageMetadataEnabled' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to [execute workflows](https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-image-workflows.html).
        /// </summary>
        [PolicyResourceProperty("executionRole", "_mUnknown_ExecutionRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ExecutionRole;
        private bool _mUnknown_ExecutionRole;
        public string? ExecutionRole
        {
            get
            {
                if (!_mUnknown_ExecutionRole) return _mValue_ExecutionRole;
                throw new UndeferrableValueException("Value 'ImageArgs.ExecutionRole' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the image recipe.
        /// </summary>
        [PolicyResourceProperty("imageRecipeArn", "_mUnknown_ImageRecipeArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageRecipeArn;
        private bool _mUnknown_ImageRecipeArn;
        public string? ImageRecipeArn
        {
            get
            {
                if (!_mUnknown_ImageRecipeArn) return _mValue_ImageRecipeArn;
                throw new UndeferrableValueException("Value 'ImageArgs.ImageRecipeArn' is not present");
            }
        }

        /// <summary>
        /// Configuration block with image scanning configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("imageScanningConfiguration", "_mUnknown_ImageScanningConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ImageImageScanningConfigurationArgs? _mValue_ImageScanningConfiguration;
        private bool _mUnknown_ImageScanningConfiguration;
        public Inputs.ImageImageScanningConfigurationArgs? ImageScanningConfiguration
        {
            get
            {
                if (!_mUnknown_ImageScanningConfiguration) return _mValue_ImageScanningConfiguration;
                throw new UndeferrableValueException("Value 'ImageArgs.ImageScanningConfiguration' is not present");
            }
        }

        /// <summary>
        /// Configuration block with image tests configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("imageTestsConfiguration", "_mUnknown_ImageTestsConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ImageImageTestsConfigurationArgs? _mValue_ImageTestsConfiguration;
        private bool _mUnknown_ImageTestsConfiguration;
        public Inputs.ImageImageTestsConfigurationArgs? ImageTestsConfiguration
        {
            get
            {
                if (!_mUnknown_ImageTestsConfiguration) return _mValue_ImageTestsConfiguration;
                throw new UndeferrableValueException("Value 'ImageArgs.ImageTestsConfiguration' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("infrastructureConfigurationArn", "_mUnknown_InfrastructureConfigurationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InfrastructureConfigurationArn;
        private bool _mUnknown_InfrastructureConfigurationArn;
        public string? InfrastructureConfigurationArn
        {
            get
            {
                if (!_mUnknown_InfrastructureConfigurationArn) return _mValue_InfrastructureConfigurationArn;
                throw new UndeferrableValueException("Value 'ImageArgs.InfrastructureConfigurationArn' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags for the Image Builder Image. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ImageArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Configuration block with the workflow configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("workflows", "_mUnknown_Workflows")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ImageWorkflowArgs>? _mValue_Workflows;
        private bool _mUnknown_Workflows;
        public List<Inputs.ImageWorkflowArgs>? Workflows
        {
            get
            {
                if (!_mUnknown_Workflows) return _mValue_Workflows;
                throw new UndeferrableValueException("Value 'ImageArgs.Workflows' is not present");
            }
        }
    }
}
