// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Fis
{
    [PolicyResourceType("aws:fis/experimentTemplate:ExperimentTemplate")]
    public sealed class ExperimentTemplate : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Action to be performed during an experiment. See below.
        /// </summary>
        [Input("actions")]
        public List<ExperimentTemplateAction>? Actions;

        /// <summary>
        /// Description for the experiment template.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The experiment options for the experiment template. See experiment_options below for more details!
        /// </summary>
        [Input("experimentOptions")]
        public ExperimentTemplateExperimentOptions? ExperimentOptions;

        /// <summary>
        /// The configuration for experiment logging. See below.
        /// </summary>
        [Input("logConfiguration")]
        public ExperimentTemplateLogConfiguration? LogConfiguration;

        /// <summary>
        /// ARN of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.
        /// </summary>
        [Input("roleArn")]
        public string? RoleArn;

        /// <summary>
        /// When an ongoing experiment should be stopped. See below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("stopConditions")]
        public List<ExperimentTemplateStopCondition>? StopConditions;

        /// <summary>
        /// Key-value mapping of tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Target of an action. See below.
        /// </summary>
        [Input("targets")]
        public List<ExperimentTemplateTarget>? Targets;
    }
}
