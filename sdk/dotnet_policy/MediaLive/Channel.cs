// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive
{
    [PolicyResourceType("aws:medialive/channel:Channel")]
    public sealed class Channel : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Channel.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Channel.Arn' is not present");
            }
        }

        /// <summary>
        /// Specification of CDI inputs for this channel. See CDI Input Specification for more details.
        /// </summary>
        [PolicyResourceProperty("cdiInputSpecification", "_mUnknown_CdiInputSpecification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ChannelCdiInputSpecification? _mValue_CdiInputSpecification;
        private bool _mUnknown_CdiInputSpecification;
        public Outputs.ChannelCdiInputSpecification? CdiInputSpecification
        {
            get
            {
                if (!_mUnknown_CdiInputSpecification) return _mValue_CdiInputSpecification;
                throw new UndeferrableValueException("Value 'Channel.CdiInputSpecification' is not present");
            }
        }

        /// <summary>
        /// Concise argument description.
        /// </summary>
        [PolicyResourceProperty("channelClass", "_mUnknown_ChannelClass")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ChannelClass;
        private bool _mUnknown_ChannelClass;
        public string? ChannelClass
        {
            get
            {
                if (!_mUnknown_ChannelClass) return _mValue_ChannelClass;
                throw new UndeferrableValueException("Value 'Channel.ChannelClass' is not present");
            }
        }

        /// <summary>
        /// ID of the Channel.
        /// </summary>
        [PolicyResourceProperty("channelId", "_mUnknown_ChannelId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ChannelId;
        private bool _mUnknown_ChannelId;
        public string? ChannelId
        {
            get
            {
                if (!_mUnknown_ChannelId) return _mValue_ChannelId;
                throw new UndeferrableValueException("Value 'Channel.ChannelId' is not present");
            }
        }

        /// <summary>
        /// Destinations for channel. See Destinations for more details.
        /// </summary>
        [PolicyResourceProperty("destinations", "_mUnknown_Destinations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ChannelDestination>? _mValue_Destinations;
        private bool _mUnknown_Destinations;
        public List<Outputs.ChannelDestination>? Destinations
        {
            get
            {
                if (!_mUnknown_Destinations) return _mValue_Destinations;
                throw new UndeferrableValueException("Value 'Channel.Destinations' is not present");
            }
        }

        /// <summary>
        /// Encoder settings. See Encoder Settings for more details.
        /// </summary>
        [PolicyResourceProperty("encoderSettings", "_mUnknown_EncoderSettings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ChannelEncoderSettings? _mValue_EncoderSettings;
        private bool _mUnknown_EncoderSettings;
        public Outputs.ChannelEncoderSettings? EncoderSettings
        {
            get
            {
                if (!_mUnknown_EncoderSettings) return _mValue_EncoderSettings;
                throw new UndeferrableValueException("Value 'Channel.EncoderSettings' is not present");
            }
        }

        /// <summary>
        /// Input attachments for the channel. See Input Attachments for more details.
        /// </summary>
        [PolicyResourceProperty("inputAttachments", "_mUnknown_InputAttachments")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ChannelInputAttachment>? _mValue_InputAttachments;
        private bool _mUnknown_InputAttachments;
        public List<Outputs.ChannelInputAttachment>? InputAttachments
        {
            get
            {
                if (!_mUnknown_InputAttachments) return _mValue_InputAttachments;
                throw new UndeferrableValueException("Value 'Channel.InputAttachments' is not present");
            }
        }

        /// <summary>
        /// Specification of network and file inputs for the channel.
        /// </summary>
        [PolicyResourceProperty("inputSpecification", "_mUnknown_InputSpecification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ChannelInputSpecification? _mValue_InputSpecification;
        private bool _mUnknown_InputSpecification;
        public Outputs.ChannelInputSpecification? InputSpecification
        {
            get
            {
                if (!_mUnknown_InputSpecification) return _mValue_InputSpecification;
                throw new UndeferrableValueException("Value 'Channel.InputSpecification' is not present");
            }
        }

        /// <summary>
        /// The log level to write to Cloudwatch logs.
        /// </summary>
        [PolicyResourceProperty("logLevel", "_mUnknown_LogLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogLevel;
        private bool _mUnknown_LogLevel;
        public string? LogLevel
        {
            get
            {
                if (!_mUnknown_LogLevel) return _mValue_LogLevel;
                throw new UndeferrableValueException("Value 'Channel.LogLevel' is not present");
            }
        }

        /// <summary>
        /// Maintenance settings for this channel. See Maintenance for more details.
        /// </summary>
        [PolicyResourceProperty("maintenance", "_mUnknown_Maintenance")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ChannelMaintenance? _mValue_Maintenance;
        private bool _mUnknown_Maintenance;
        public Outputs.ChannelMaintenance? Maintenance
        {
            get
            {
                if (!_mUnknown_Maintenance) return _mValue_Maintenance;
                throw new UndeferrableValueException("Value 'Channel.Maintenance' is not present");
            }
        }

        /// <summary>
        /// Name of the Channel.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Channel.Name' is not present");
            }
        }

        /// <summary>
        /// Concise argument description.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'Channel.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Whether to start/stop channel. Default: `false`
        /// </summary>
        [PolicyResourceProperty("startChannel", "_mUnknown_StartChannel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_StartChannel;
        private bool _mUnknown_StartChannel;
        public bool? StartChannel
        {
            get
            {
                if (!_mUnknown_StartChannel) return _mValue_StartChannel;
                throw new UndeferrableValueException("Value 'Channel.StartChannel' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the channel. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Channel.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Channel.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Settings for the VPC outputs. See VPC for more details.
        /// </summary>
        [PolicyResourceProperty("vpc", "_mUnknown_Vpc")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ChannelVpc? _mValue_Vpc;
        private bool _mUnknown_Vpc;
        public Outputs.ChannelVpc? Vpc
        {
            get
            {
                if (!_mUnknown_Vpc) return _mValue_Vpc;
                throw new UndeferrableValueException("Value 'Channel.Vpc' is not present");
            }
        }
    }

    [PolicyResourceType("aws:medialive/channel:Channel")]
    public sealed class ChannelArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specification of CDI inputs for this channel. See CDI Input Specification for more details.
        /// </summary>
        [PolicyResourceProperty("cdiInputSpecification", "_mUnknown_CdiInputSpecification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ChannelCdiInputSpecificationArgs? _mValue_CdiInputSpecification;
        private bool _mUnknown_CdiInputSpecification;
        public Inputs.ChannelCdiInputSpecificationArgs? CdiInputSpecification
        {
            get
            {
                if (!_mUnknown_CdiInputSpecification) return _mValue_CdiInputSpecification;
                throw new UndeferrableValueException("Value 'ChannelArgs.CdiInputSpecification' is not present");
            }
        }

        /// <summary>
        /// Concise argument description.
        /// </summary>
        [PolicyResourceProperty("channelClass", "_mUnknown_ChannelClass")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ChannelClass;
        private bool _mUnknown_ChannelClass;
        public string? ChannelClass
        {
            get
            {
                if (!_mUnknown_ChannelClass) return _mValue_ChannelClass;
                throw new UndeferrableValueException("Value 'ChannelArgs.ChannelClass' is not present");
            }
        }

        /// <summary>
        /// Destinations for channel. See Destinations for more details.
        /// </summary>
        [PolicyResourceProperty("destinations", "_mUnknown_Destinations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ChannelDestinationArgs>? _mValue_Destinations;
        private bool _mUnknown_Destinations;
        public List<Inputs.ChannelDestinationArgs>? Destinations
        {
            get
            {
                if (!_mUnknown_Destinations) return _mValue_Destinations;
                throw new UndeferrableValueException("Value 'ChannelArgs.Destinations' is not present");
            }
        }

        /// <summary>
        /// Encoder settings. See Encoder Settings for more details.
        /// </summary>
        [PolicyResourceProperty("encoderSettings", "_mUnknown_EncoderSettings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ChannelEncoderSettingsArgs? _mValue_EncoderSettings;
        private bool _mUnknown_EncoderSettings;
        public Inputs.ChannelEncoderSettingsArgs? EncoderSettings
        {
            get
            {
                if (!_mUnknown_EncoderSettings) return _mValue_EncoderSettings;
                throw new UndeferrableValueException("Value 'ChannelArgs.EncoderSettings' is not present");
            }
        }

        /// <summary>
        /// Input attachments for the channel. See Input Attachments for more details.
        /// </summary>
        [PolicyResourceProperty("inputAttachments", "_mUnknown_InputAttachments")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ChannelInputAttachmentArgs>? _mValue_InputAttachments;
        private bool _mUnknown_InputAttachments;
        public List<Inputs.ChannelInputAttachmentArgs>? InputAttachments
        {
            get
            {
                if (!_mUnknown_InputAttachments) return _mValue_InputAttachments;
                throw new UndeferrableValueException("Value 'ChannelArgs.InputAttachments' is not present");
            }
        }

        /// <summary>
        /// Specification of network and file inputs for the channel.
        /// </summary>
        [PolicyResourceProperty("inputSpecification", "_mUnknown_InputSpecification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ChannelInputSpecificationArgs? _mValue_InputSpecification;
        private bool _mUnknown_InputSpecification;
        public Inputs.ChannelInputSpecificationArgs? InputSpecification
        {
            get
            {
                if (!_mUnknown_InputSpecification) return _mValue_InputSpecification;
                throw new UndeferrableValueException("Value 'ChannelArgs.InputSpecification' is not present");
            }
        }

        /// <summary>
        /// The log level to write to Cloudwatch logs.
        /// </summary>
        [PolicyResourceProperty("logLevel", "_mUnknown_LogLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogLevel;
        private bool _mUnknown_LogLevel;
        public string? LogLevel
        {
            get
            {
                if (!_mUnknown_LogLevel) return _mValue_LogLevel;
                throw new UndeferrableValueException("Value 'ChannelArgs.LogLevel' is not present");
            }
        }

        /// <summary>
        /// Maintenance settings for this channel. See Maintenance for more details.
        /// </summary>
        [PolicyResourceProperty("maintenance", "_mUnknown_Maintenance")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ChannelMaintenanceArgs? _mValue_Maintenance;
        private bool _mUnknown_Maintenance;
        public Inputs.ChannelMaintenanceArgs? Maintenance
        {
            get
            {
                if (!_mUnknown_Maintenance) return _mValue_Maintenance;
                throw new UndeferrableValueException("Value 'ChannelArgs.Maintenance' is not present");
            }
        }

        /// <summary>
        /// Name of the Channel.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ChannelArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Concise argument description.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'ChannelArgs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Whether to start/stop channel. Default: `false`
        /// </summary>
        [PolicyResourceProperty("startChannel", "_mUnknown_StartChannel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_StartChannel;
        private bool _mUnknown_StartChannel;
        public bool? StartChannel
        {
            get
            {
                if (!_mUnknown_StartChannel) return _mValue_StartChannel;
                throw new UndeferrableValueException("Value 'ChannelArgs.StartChannel' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the channel. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ChannelArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Settings for the VPC outputs. See VPC for more details.
        /// </summary>
        [PolicyResourceProperty("vpc", "_mUnknown_Vpc")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ChannelVpcArgs? _mValue_Vpc;
        private bool _mUnknown_Vpc;
        public Inputs.ChannelVpcArgs? Vpc
        {
            get
            {
                if (!_mUnknown_Vpc) return _mValue_Vpc;
                throw new UndeferrableValueException("Value 'ChannelArgs.Vpc' is not present");
            }
        }
    }
}
