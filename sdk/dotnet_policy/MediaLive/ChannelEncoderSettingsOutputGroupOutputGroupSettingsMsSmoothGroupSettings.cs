// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive
{
    [PolicyResourceType("aws:medialive/ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettings:ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettings")]
    public sealed class ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettings
    {
        [Input("acquisitionPointId")]
        public string? AcquisitionPointId;

        [Input("audioOnlyTimecodeControl")]
        public string? AudioOnlyTimecodeControl;

        /// <summary>
        /// Setting to allow self signed or verified RTMP certificates.
        /// </summary>
        [Input("certificateMode")]
        public string? CertificateMode;

        /// <summary>
        /// Number of seconds to wait before retrying connection to the flash media server if the connection is lost.
        /// </summary>
        [Input("connectionRetryInterval")]
        public int? ConnectionRetryInterval;

        [Input("destination")]
        public ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettingsDestination? Destination;

        [Input("eventId")]
        public string? EventId;

        [Input("eventIdMode")]
        public string? EventIdMode;

        [Input("eventStopBehavior")]
        public string? EventStopBehavior;

        [Input("filecacheDuration")]
        public int? FilecacheDuration;

        [Input("fragmentLength")]
        public int? FragmentLength;

        [Input("inputLossAction")]
        public string? InputLossAction;

        /// <summary>
        /// Number of retry attempts.
        /// </summary>
        [Input("numRetries")]
        public int? NumRetries;

        /// <summary>
        /// Number of seconds to wait until a restart is initiated.
        /// </summary>
        [Input("restartDelay")]
        public int? RestartDelay;

        [Input("segmentationMode")]
        public string? SegmentationMode;

        [Input("sendDelayMs")]
        public int? SendDelayMs;

        [Input("sparseTrackType")]
        public string? SparseTrackType;

        [Input("streamManifestBehavior")]
        public string? StreamManifestBehavior;

        [Input("timestampOffset")]
        public string? TimestampOffset;

        [Input("timestampOffsetMode")]
        public string? TimestampOffsetMode;
    }
}
