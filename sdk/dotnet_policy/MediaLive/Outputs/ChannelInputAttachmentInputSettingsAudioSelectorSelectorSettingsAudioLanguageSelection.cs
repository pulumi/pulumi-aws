// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive.Outputs
{
    public sealed class ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelection
    {
        /// <summary>
        /// Selects a specific three-letter language code from within an audio source.
        /// </summary>
        [PolicyResourceProperty("languageCode", "_mUnknown_LanguageCode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LanguageCode;
        private bool _mUnknown_LanguageCode;
        public string? LanguageCode
        {
            get
            {
                if (!_mUnknown_LanguageCode) return _mValue_LanguageCode;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelection.LanguageCode' is not present");
            }
        }

        /// <summary>
        /// When set to “strict”, the transport stream demux strictly identifies audio streams by their language descriptor. If a PMT update occurs such that an audio stream matching the initially selected language is no longer present then mute will be encoded until the language returns. If “loose”, then on a PMT update the demux will choose another audio stream in the program with the same stream type if it can’t find one with the same language.
        /// </summary>
        [PolicyResourceProperty("languageSelectionPolicy", "_mUnknown_LanguageSelectionPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LanguageSelectionPolicy;
        private bool _mUnknown_LanguageSelectionPolicy;
        public string? LanguageSelectionPolicy
        {
            get
            {
                if (!_mUnknown_LanguageSelectionPolicy) return _mValue_LanguageSelectionPolicy;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioLanguageSelection.LanguageSelectionPolicy' is not present");
            }
        }
    }
}
