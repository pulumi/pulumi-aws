// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive.Outputs
{
    public sealed class ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelection
    {
        /// <summary>
        /// Configure decoding options for Dolby E streams - these should be Dolby E frames carried in PCM streams tagged with SMPTE-337. See Dolby E Decode for more details.
        /// </summary>
        [PolicyResourceProperty("dolbyEDecode", "_mUnknown_DolbyEDecode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionDolbyEDecode? _mValue_DolbyEDecode;
        private bool _mUnknown_DolbyEDecode;
        public Outputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionDolbyEDecode? DolbyEDecode
        {
            get
            {
                if (!_mUnknown_DolbyEDecode) return _mValue_DolbyEDecode;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelection.DolbyEDecode' is not present");
            }
        }

        /// <summary>
        /// Selects one or more unique audio tracks from within a source. See Audio Tracks for more details.
        /// </summary>
        [PolicyResourceProperty("tracks", "_mUnknown_Tracks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionTrack>? _mValue_Tracks;
        private bool _mUnknown_Tracks;
        public List<Outputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionTrack>? Tracks
        {
            get
            {
                if (!_mUnknown_Tracks) return _mValue_Tracks;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelection.Tracks' is not present");
            }
        }
    }
}
