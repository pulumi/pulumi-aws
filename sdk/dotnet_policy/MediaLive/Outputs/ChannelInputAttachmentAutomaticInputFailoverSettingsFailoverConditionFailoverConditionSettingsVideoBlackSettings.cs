// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive.Outputs
{
    public sealed class ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsVideoBlackSettings
    {
        /// <summary>
        /// A value used in calculating the threshold below which MediaLive considers a pixel to be 'black'. For the input to be considered black, every pixel in a frame must be below this threshold. The threshold is calculated as a percentage (expressed as a decimal) of white. Therefore .1 means 10% white (or 90% black). Note how the formula works for any color depth. For example, if you set this field to 0.1 in 10-bit color depth: (10230.1=102.3), which means a pixel value of 102 or less is 'black'. If you set this field to .1 in an 8-bit color depth: (2550.1=25.5), which means a pixel value of 25 or less is 'black'. The range is 0.0 to 1.0, with any number of decimal places.
        /// </summary>
        [PolicyResourceProperty("blackDetectThreshold", "_mUnknown_BlackDetectThreshold")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_BlackDetectThreshold;
        private bool _mUnknown_BlackDetectThreshold;
        public double? BlackDetectThreshold
        {
            get
            {
                if (!_mUnknown_BlackDetectThreshold) return _mValue_BlackDetectThreshold;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsVideoBlackSettings.BlackDetectThreshold' is not present");
            }
        }

        /// <summary>
        /// The amount of time (in milliseconds) that the active input must be black before automatic input failover occurs.
        /// </summary>
        [PolicyResourceProperty("videoBlackThresholdMsec", "_mUnknown_VideoBlackThresholdMsec")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_VideoBlackThresholdMsec;
        private bool _mUnknown_VideoBlackThresholdMsec;
        public int? VideoBlackThresholdMsec
        {
            get
            {
                if (!_mUnknown_VideoBlackThresholdMsec) return _mValue_VideoBlackThresholdMsec;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsVideoBlackSettings.VideoBlackThresholdMsec' is not present");
            }
        }
    }
}
