// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive
{
    [PolicyResourceType("aws:medialive/ChannelEncoderSettingsVideoDescriptionCodecSettingsH264Settings:ChannelEncoderSettingsVideoDescriptionCodecSettingsH264Settings")]
    public sealed class ChannelEncoderSettingsVideoDescriptionCodecSettingsH264Settings
    {
        /// <summary>
        /// Enables or disables adaptive quantization.
        /// </summary>
        [Input("adaptiveQuantization")]
        public string? AdaptiveQuantization;

        /// <summary>
        /// Indicates that AFD values will be written into the output stream.
        /// </summary>
        [Input("afdSignaling")]
        public string? AfdSignaling;

        /// <summary>
        /// Average bitrate in bits/second.
        /// </summary>
        [Input("bitrate")]
        public int? Bitrate;

        [Input("bufFillPct")]
        public int? BufFillPct;

        /// <summary>
        /// Size of buffer in bits.
        /// </summary>
        [Input("bufSize")]
        public int? BufSize;

        /// <summary>
        /// Includes color space metadata in the output.
        /// </summary>
        [Input("colorMetadata")]
        public string? ColorMetadata;

        /// <summary>
        /// Entropy encoding mode.
        /// </summary>
        [Input("entropyEncoding")]
        public string? EntropyEncoding;

        /// <summary>
        /// Filters to apply to an encode. See H264 Filter Settings for more details.
        /// </summary>
        [Input("filterSettings")]
        public ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettings? FilterSettings;

        /// <summary>
        /// Four bit AFD value to write on all frames of video in the output stream.
        /// </summary>
        [Input("fixedAfd")]
        public string? FixedAfd;

        [Input("flickerAq")]
        public string? FlickerAq;

        /// <summary>
        /// Controls whether coding is performed on a field basis or on a frame basis.
        /// </summary>
        [Input("forceFieldPictures")]
        public string? ForceFieldPictures;

        /// <summary>
        /// Indicates how the output video frame rate is specified.
        /// </summary>
        [Input("framerateControl")]
        public string? FramerateControl;

        /// <summary>
        /// Framerate denominator.
        /// </summary>
        [Input("framerateDenominator")]
        public int? FramerateDenominator;

        /// <summary>
        /// Framerate numerator.
        /// </summary>
        [Input("framerateNumerator")]
        public int? FramerateNumerator;

        /// <summary>
        /// GOP-B reference.
        /// </summary>
        [Input("gopBReference")]
        public string? GopBReference;

        /// <summary>
        /// Frequency of closed GOPs.
        /// </summary>
        [Input("gopClosedCadence")]
        public int? GopClosedCadence;

        /// <summary>
        /// Number of B-frames between reference frames.
        /// </summary>
        [Input("gopNumBFrames")]
        public int? GopNumBFrames;

        /// <summary>
        /// GOP size in units of either frames of seconds per `gop_size_units`.
        /// </summary>
        [Input("gopSize")]
        public double? GopSize;

        /// <summary>
        /// Indicates if the `gop_size` is specified in frames or seconds.
        /// </summary>
        [Input("gopSizeUnits")]
        public string? GopSizeUnits;

        /// <summary>
        /// H264 level.
        /// </summary>
        [Input("level")]
        public string? Level;

        /// <summary>
        /// Amount of lookahead.
        /// </summary>
        [Input("lookAheadRateControl")]
        public string? LookAheadRateControl;

        /// <summary>
        /// Set the maximum bitrate in order to accommodate expected spikes in the complexity of the video.
        /// </summary>
        [Input("maxBitrate")]
        public int? MaxBitrate;

        /// <summary>
        /// Min interval.
        /// </summary>
        [Input("minIInterval")]
        public int? MinIInterval;

        /// <summary>
        /// Number of reference frames to use.
        /// </summary>
        [Input("numRefFrames")]
        public int? NumRefFrames;

        /// <summary>
        /// Indicates how the output pixel aspect ratio is specified.
        /// </summary>
        [Input("parControl")]
        public string? ParControl;

        /// <summary>
        /// Pixel Aspect Ratio denominator.
        /// </summary>
        [Input("parDenominator")]
        public int? ParDenominator;

        /// <summary>
        /// Pixel Aspect Ratio numerator.
        /// </summary>
        [Input("parNumerator")]
        public int? ParNumerator;

        /// <summary>
        /// H264 profile.
        /// </summary>
        [Input("profile")]
        public string? Profile;

        /// <summary>
        /// Quality level.
        /// </summary>
        [Input("qualityLevel")]
        public string? QualityLevel;

        /// <summary>
        /// Controls the target quality for the video encode.
        /// </summary>
        [Input("qvbrQualityLevel")]
        public int? QvbrQualityLevel;

        /// <summary>
        /// Rate control mode.
        /// </summary>
        [Input("rateControlMode")]
        public string? RateControlMode;

        /// <summary>
        /// Sets the scan type of the output.
        /// </summary>
        [Input("scanType")]
        public string? ScanType;

        /// <summary>
        /// Scene change detection.
        /// </summary>
        [Input("sceneChangeDetect")]
        public string? SceneChangeDetect;

        /// <summary>
        /// Number of slices per picture.
        /// </summary>
        [Input("slices")]
        public int? Slices;

        /// <summary>
        /// Softness.
        /// </summary>
        [Input("softness")]
        public int? Softness;

        /// <summary>
        /// Makes adjustments within each frame based on spatial variation of content complexity.
        /// </summary>
        [Input("spatialAq")]
        public string? SpatialAq;

        /// <summary>
        /// Subgop length.
        /// </summary>
        [Input("subgopLength")]
        public string? SubgopLength;

        /// <summary>
        /// Produces a bitstream compliant with SMPTE RP-2027.
        /// </summary>
        [Input("syntax")]
        public string? Syntax;

        /// <summary>
        /// Makes adjustments within each frame based on temporal variation of content complexity.
        /// </summary>
        [Input("temporalAq")]
        public string? TemporalAq;

        /// <summary>
        /// Determines how timecodes should be inserted into the video elementary stream.
        /// </summary>
        [Input("timecodeInsertion")]
        public string? TimecodeInsertion;
    }
}
