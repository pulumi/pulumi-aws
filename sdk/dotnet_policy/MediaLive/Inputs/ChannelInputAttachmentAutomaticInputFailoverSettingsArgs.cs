// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive.Inputs
{
    public sealed class ChannelInputAttachmentAutomaticInputFailoverSettingsArgs
    {
        /// <summary>
        /// This clear time defines the requirement a recovered input must meet to be considered healthy. The input must have no failover conditions for this length of time. Enter a time in milliseconds. This value is particularly important if the input\_preference for the failover pair is set to PRIMARY\_INPUT\_PREFERRED, because after this time, MediaLive will switch back to the primary input.
        /// </summary>
        [PolicyResourceProperty("errorClearTimeMsec", "_mUnknown_ErrorClearTimeMsec")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ErrorClearTimeMsec;
        private bool _mUnknown_ErrorClearTimeMsec;
        public int? ErrorClearTimeMsec
        {
            get
            {
                if (!_mUnknown_ErrorClearTimeMsec) return _mValue_ErrorClearTimeMsec;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsArgs.ErrorClearTimeMsec' is not present");
            }
        }

        /// <summary>
        /// A list of failover conditions. If any of these conditions occur, MediaLive will perform a failover to the other input. See Failover Condition Block for more details.
        /// </summary>
        [PolicyResourceProperty("failoverConditions", "_mUnknown_FailoverConditions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionArgs>? _mValue_FailoverConditions;
        private bool _mUnknown_FailoverConditions;
        public List<Inputs.ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionArgs>? FailoverConditions
        {
            get
            {
                if (!_mUnknown_FailoverConditions) return _mValue_FailoverConditions;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsArgs.FailoverConditions' is not present");
            }
        }

        /// <summary>
        /// Input preference when deciding which input to make active when a previously failed input has recovered.
        /// </summary>
        [PolicyResourceProperty("inputPreference", "_mUnknown_InputPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InputPreference;
        private bool _mUnknown_InputPreference;
        public string? InputPreference
        {
            get
            {
                if (!_mUnknown_InputPreference) return _mValue_InputPreference;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsArgs.InputPreference' is not present");
            }
        }

        /// <summary>
        /// The input ID of the secondary input in the automatic input failover pair.
        /// </summary>
        [PolicyResourceProperty("secondaryInputId", "_mUnknown_SecondaryInputId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SecondaryInputId;
        private bool _mUnknown_SecondaryInputId;
        public string? SecondaryInputId
        {
            get
            {
                if (!_mUnknown_SecondaryInputId) return _mValue_SecondaryInputId;
                throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsArgs.SecondaryInputId' is not present");
            }
        }
    }
}
