// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive.Inputs
{
    public sealed class ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs
    {
        /// <summary>
        /// Average bitrate in bits/second.
        /// </summary>
        [PolicyResourceProperty("bitrate", "_mUnknown_Bitrate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_Bitrate;
        private bool _mUnknown_Bitrate;
        public double? Bitrate
        {
            get
            {
                if (!_mUnknown_Bitrate) return _mValue_Bitrate;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs.Bitrate' is not present");
            }
        }

        /// <summary>
        /// Dolby Digital Plus with Dolby Atmos coding mode.
        /// </summary>
        [PolicyResourceProperty("codingMode", "_mUnknown_CodingMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CodingMode;
        private bool _mUnknown_CodingMode;
        public string? CodingMode
        {
            get
            {
                if (!_mUnknown_CodingMode) return _mValue_CodingMode;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs.CodingMode' is not present");
            }
        }

        /// <summary>
        /// Sets the dialnorm for the output.
        /// </summary>
        [PolicyResourceProperty("dialnorm", "_mUnknown_Dialnorm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_Dialnorm;
        private bool _mUnknown_Dialnorm;
        public double? Dialnorm
        {
            get
            {
                if (!_mUnknown_Dialnorm) return _mValue_Dialnorm;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs.Dialnorm' is not present");
            }
        }

        /// <summary>
        /// Sets the Dolby dynamic range compression profile.
        /// </summary>
        [PolicyResourceProperty("drcLine", "_mUnknown_DrcLine")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DrcLine;
        private bool _mUnknown_DrcLine;
        public string? DrcLine
        {
            get
            {
                if (!_mUnknown_DrcLine) return _mValue_DrcLine;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs.DrcLine' is not present");
            }
        }

        /// <summary>
        /// Sets the profile for heavy Dolby dynamic range compression.
        /// </summary>
        [PolicyResourceProperty("drcRf", "_mUnknown_DrcRf")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DrcRf;
        private bool _mUnknown_DrcRf;
        public string? DrcRf
        {
            get
            {
                if (!_mUnknown_DrcRf) return _mValue_DrcRf;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs.DrcRf' is not present");
            }
        }

        /// <summary>
        /// Height dimensional trim.
        /// </summary>
        [PolicyResourceProperty("heightTrim", "_mUnknown_HeightTrim")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_HeightTrim;
        private bool _mUnknown_HeightTrim;
        public double? HeightTrim
        {
            get
            {
                if (!_mUnknown_HeightTrim) return _mValue_HeightTrim;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs.HeightTrim' is not present");
            }
        }

        /// <summary>
        /// Surround dimensional trim.
        /// </summary>
        [PolicyResourceProperty("surroundTrim", "_mUnknown_SurroundTrim")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_SurroundTrim;
        private bool _mUnknown_SurroundTrim;
        public double? SurroundTrim
        {
            get
            {
                if (!_mUnknown_SurroundTrim) return _mValue_SurroundTrim;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettingsArgs.SurroundTrim' is not present");
            }
        }
    }
}
