// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MediaLive.Inputs
{
    public sealed class ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs
    {
        /// <summary>
        /// Average bitrate in bits/second.
        /// </summary>
        [PolicyResourceProperty("bitrate", "_mUnknown_Bitrate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_Bitrate;
        private bool _mUnknown_Bitrate;
        public double? Bitrate
        {
            get
            {
                if (!_mUnknown_Bitrate) return _mValue_Bitrate;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs.Bitrate' is not present");
            }
        }

        /// <summary>
        /// Specifies the bitstream mode (bsmod) for the emitted AC-3 stream.
        /// </summary>
        [PolicyResourceProperty("bitstreamMode", "_mUnknown_BitstreamMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BitstreamMode;
        private bool _mUnknown_BitstreamMode;
        public string? BitstreamMode
        {
            get
            {
                if (!_mUnknown_BitstreamMode) return _mValue_BitstreamMode;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs.BitstreamMode' is not present");
            }
        }

        /// <summary>
        /// Dolby Digital coding mode.
        /// </summary>
        [PolicyResourceProperty("codingMode", "_mUnknown_CodingMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CodingMode;
        private bool _mUnknown_CodingMode;
        public string? CodingMode
        {
            get
            {
                if (!_mUnknown_CodingMode) return _mValue_CodingMode;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs.CodingMode' is not present");
            }
        }

        /// <summary>
        /// Sets the dialnorm of the output.
        /// </summary>
        [PolicyResourceProperty("dialnorm", "_mUnknown_Dialnorm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Dialnorm;
        private bool _mUnknown_Dialnorm;
        public int? Dialnorm
        {
            get
            {
                if (!_mUnknown_Dialnorm) return _mValue_Dialnorm;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs.Dialnorm' is not present");
            }
        }

        /// <summary>
        /// If set to filmStandard, adds dynamic range compression signaling to the output bitstream as defined in the Dolby Digital specification.
        /// </summary>
        [PolicyResourceProperty("drcProfile", "_mUnknown_DrcProfile")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DrcProfile;
        private bool _mUnknown_DrcProfile;
        public string? DrcProfile
        {
            get
            {
                if (!_mUnknown_DrcProfile) return _mValue_DrcProfile;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs.DrcProfile' is not present");
            }
        }

        /// <summary>
        /// When set to enabled, applies a 120Hz lowpass filter to the LFE channel prior to encoding.
        /// </summary>
        [PolicyResourceProperty("lfeFilter", "_mUnknown_LfeFilter")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LfeFilter;
        private bool _mUnknown_LfeFilter;
        public string? LfeFilter
        {
            get
            {
                if (!_mUnknown_LfeFilter) return _mValue_LfeFilter;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs.LfeFilter' is not present");
            }
        }

        /// <summary>
        /// Metadata control.
        /// </summary>
        [PolicyResourceProperty("metadataControl", "_mUnknown_MetadataControl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetadataControl;
        private bool _mUnknown_MetadataControl;
        public string? MetadataControl
        {
            get
            {
                if (!_mUnknown_MetadataControl) return _mValue_MetadataControl;
                throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3SettingsArgs.MetadataControl' is not present");
            }
        }
    }
}
