// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Grafana
{
    [PolicyResourceType("aws:grafana/roleAssociation:RoleAssociation")]
    public sealed class RoleAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The AWS SSO group ids to be assigned the role given in `role`.
        /// </summary>
        [PolicyResourceProperty("groupIds", "_mUnknown_GroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_GroupIds;
        private bool _mUnknown_GroupIds;
        public List<string>? GroupIds
        {
            get
            {
                if (!_mUnknown_GroupIds) return _mValue_GroupIds;
                throw new UndeferrableValueException("Value 'RoleAssociation.GroupIds' is not present");
            }
        }

        /// <summary>
        /// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
        /// </summary>
        [PolicyResourceProperty("role", "_mUnknown_Role")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Role;
        private bool _mUnknown_Role;
        public string? Role
        {
            get
            {
                if (!_mUnknown_Role) return _mValue_Role;
                throw new UndeferrableValueException("Value 'RoleAssociation.Role' is not present");
            }
        }

        /// <summary>
        /// The AWS SSO user ids to be assigned the role given in `role`.
        /// </summary>
        [PolicyResourceProperty("userIds", "_mUnknown_UserIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_UserIds;
        private bool _mUnknown_UserIds;
        public List<string>? UserIds
        {
            get
            {
                if (!_mUnknown_UserIds) return _mValue_UserIds;
                throw new UndeferrableValueException("Value 'RoleAssociation.UserIds' is not present");
            }
        }

        /// <summary>
        /// The workspace id.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("workspaceId", "_mUnknown_WorkspaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkspaceId;
        private bool _mUnknown_WorkspaceId;
        public string? WorkspaceId
        {
            get
            {
                if (!_mUnknown_WorkspaceId) return _mValue_WorkspaceId;
                throw new UndeferrableValueException("Value 'RoleAssociation.WorkspaceId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:grafana/roleAssociation:RoleAssociation")]
    public sealed class RoleAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The AWS SSO group ids to be assigned the role given in `role`.
        /// </summary>
        [PolicyResourceProperty("groupIds", "_mUnknown_GroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_GroupIds;
        private bool _mUnknown_GroupIds;
        public List<string>? GroupIds
        {
            get
            {
                if (!_mUnknown_GroupIds) return _mValue_GroupIds;
                throw new UndeferrableValueException("Value 'RoleAssociationArgs.GroupIds' is not present");
            }
        }

        /// <summary>
        /// The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
        /// </summary>
        [PolicyResourceProperty("role", "_mUnknown_Role")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Role;
        private bool _mUnknown_Role;
        public string? Role
        {
            get
            {
                if (!_mUnknown_Role) return _mValue_Role;
                throw new UndeferrableValueException("Value 'RoleAssociationArgs.Role' is not present");
            }
        }

        /// <summary>
        /// The AWS SSO user ids to be assigned the role given in `role`.
        /// </summary>
        [PolicyResourceProperty("userIds", "_mUnknown_UserIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_UserIds;
        private bool _mUnknown_UserIds;
        public List<string>? UserIds
        {
            get
            {
                if (!_mUnknown_UserIds) return _mValue_UserIds;
                throw new UndeferrableValueException("Value 'RoleAssociationArgs.UserIds' is not present");
            }
        }

        /// <summary>
        /// The workspace id.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("workspaceId", "_mUnknown_WorkspaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkspaceId;
        private bool _mUnknown_WorkspaceId;
        public string? WorkspaceId
        {
            get
            {
                if (!_mUnknown_WorkspaceId) return _mValue_WorkspaceId;
                throw new UndeferrableValueException("Value 'RoleAssociationArgs.WorkspaceId' is not present");
            }
        }
    }
}
