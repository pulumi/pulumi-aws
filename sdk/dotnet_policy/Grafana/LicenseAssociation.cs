// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Grafana
{
    [PolicyResourceType("aws:grafana/licenseAssociation:LicenseAssociation")]
    public sealed class LicenseAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// If `license_type` is set to `ENTERPRISE_FREE_TRIAL`, this is the expiration date of the free trial.
        /// </summary>
        [PolicyResourceProperty("freeTrialExpiration", "_mUnknown_FreeTrialExpiration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FreeTrialExpiration;
        private bool _mUnknown_FreeTrialExpiration;
        public string? FreeTrialExpiration
        {
            get
            {
                if (!_mUnknown_FreeTrialExpiration) return _mValue_FreeTrialExpiration;
                throw new UndeferrableValueException("Value 'LicenseAssociation.FreeTrialExpiration' is not present");
            }
        }

        /// <summary>
        /// A token from Grafana Labs that ties your AWS account with a Grafana Labs account.
        /// </summary>
        [PolicyResourceProperty("grafanaToken", "_mUnknown_GrafanaToken")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GrafanaToken;
        private bool _mUnknown_GrafanaToken;
        public string? GrafanaToken
        {
            get
            {
                if (!_mUnknown_GrafanaToken) return _mValue_GrafanaToken;
                throw new UndeferrableValueException("Value 'LicenseAssociation.GrafanaToken' is not present");
            }
        }

        /// <summary>
        /// If `license_type` is set to `ENTERPRISE`, this is the expiration date of the enterprise license.
        /// </summary>
        [PolicyResourceProperty("licenseExpiration", "_mUnknown_LicenseExpiration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LicenseExpiration;
        private bool _mUnknown_LicenseExpiration;
        public string? LicenseExpiration
        {
            get
            {
                if (!_mUnknown_LicenseExpiration) return _mValue_LicenseExpiration;
                throw new UndeferrableValueException("Value 'LicenseAssociation.LicenseExpiration' is not present");
            }
        }

        /// <summary>
        /// The type of license for the workspace license association. Valid values are `ENTERPRISE` and `ENTERPRISE_FREE_TRIAL`.
        /// </summary>
        [PolicyResourceProperty("licenseType", "_mUnknown_LicenseType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LicenseType;
        private bool _mUnknown_LicenseType;
        public string? LicenseType
        {
            get
            {
                if (!_mUnknown_LicenseType) return _mValue_LicenseType;
                throw new UndeferrableValueException("Value 'LicenseAssociation.LicenseType' is not present");
            }
        }

        /// <summary>
        /// The workspace id.
        /// </summary>
        [PolicyResourceProperty("workspaceId", "_mUnknown_WorkspaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkspaceId;
        private bool _mUnknown_WorkspaceId;
        public string? WorkspaceId
        {
            get
            {
                if (!_mUnknown_WorkspaceId) return _mValue_WorkspaceId;
                throw new UndeferrableValueException("Value 'LicenseAssociation.WorkspaceId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:grafana/licenseAssociation:LicenseAssociation")]
    public sealed class LicenseAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A token from Grafana Labs that ties your AWS account with a Grafana Labs account.
        /// </summary>
        [PolicyResourceProperty("grafanaToken", "_mUnknown_GrafanaToken")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GrafanaToken;
        private bool _mUnknown_GrafanaToken;
        public string? GrafanaToken
        {
            get
            {
                if (!_mUnknown_GrafanaToken) return _mValue_GrafanaToken;
                throw new UndeferrableValueException("Value 'LicenseAssociationArgs.GrafanaToken' is not present");
            }
        }

        /// <summary>
        /// The type of license for the workspace license association. Valid values are `ENTERPRISE` and `ENTERPRISE_FREE_TRIAL`.
        /// </summary>
        [PolicyResourceProperty("licenseType", "_mUnknown_LicenseType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LicenseType;
        private bool _mUnknown_LicenseType;
        public string? LicenseType
        {
            get
            {
                if (!_mUnknown_LicenseType) return _mValue_LicenseType;
                throw new UndeferrableValueException("Value 'LicenseAssociationArgs.LicenseType' is not present");
            }
        }

        /// <summary>
        /// The workspace id.
        /// </summary>
        [PolicyResourceProperty("workspaceId", "_mUnknown_WorkspaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkspaceId;
        private bool _mUnknown_WorkspaceId;
        public string? WorkspaceId
        {
            get
            {
                if (!_mUnknown_WorkspaceId) return _mValue_WorkspaceId;
                throw new UndeferrableValueException("Value 'LicenseAssociationArgs.WorkspaceId' is not present");
            }
        }
    }
}
