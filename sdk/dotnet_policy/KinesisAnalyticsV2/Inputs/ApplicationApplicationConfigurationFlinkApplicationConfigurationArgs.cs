// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.KinesisAnalyticsV2.Inputs
{
    public sealed class ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs
    {
        /// <summary>
        /// Describes an application's checkpointing configuration.
        /// </summary>
        [PolicyResourceProperty("checkpointConfiguration", "_mUnknown_CheckpointConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs? _mValue_CheckpointConfiguration;
        private bool _mUnknown_CheckpointConfiguration;
        public Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs? CheckpointConfiguration
        {
            get
            {
                if (!_mUnknown_CheckpointConfiguration) return _mValue_CheckpointConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs.CheckpointConfiguration' is not present");
            }
        }

        /// <summary>
        /// Describes configuration parameters for CloudWatch logging for an application.
        /// </summary>
        [PolicyResourceProperty("monitoringConfiguration", "_mUnknown_MonitoringConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs? _mValue_MonitoringConfiguration;
        private bool _mUnknown_MonitoringConfiguration;
        public Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs? MonitoringConfiguration
        {
            get
            {
                if (!_mUnknown_MonitoringConfiguration) return _mValue_MonitoringConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs.MonitoringConfiguration' is not present");
            }
        }

        /// <summary>
        /// Describes parameters for how an application executes multiple tasks simultaneously.
        /// </summary>
        [PolicyResourceProperty("parallelismConfiguration", "_mUnknown_ParallelismConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs? _mValue_ParallelismConfiguration;
        private bool _mUnknown_ParallelismConfiguration;
        public Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs? ParallelismConfiguration
        {
            get
            {
                if (!_mUnknown_ParallelismConfiguration) return _mValue_ParallelismConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs.ParallelismConfiguration' is not present");
            }
        }
    }
}
