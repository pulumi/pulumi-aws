// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.KinesisAnalyticsV2
{
    [PolicyResourceType("aws:kinesisanalyticsv2/application:Application")]
    public sealed class Application : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The application's configuration
        /// </summary>
        [PolicyResourceProperty("applicationConfiguration", "_mUnknown_ApplicationConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationApplicationConfiguration? _mValue_ApplicationConfiguration;
        private bool _mUnknown_ApplicationConfiguration;
        public Outputs.ApplicationApplicationConfiguration? ApplicationConfiguration
        {
            get
            {
                if (!_mUnknown_ApplicationConfiguration) return _mValue_ApplicationConfiguration;
                throw new UndeferrableValueException("Value 'Application.ApplicationConfiguration' is not present");
            }
        }

        /// <summary>
        /// The application's mode. Valid values are `STREAMING`, `INTERACTIVE`.
        /// </summary>
        [PolicyResourceProperty("applicationMode", "_mUnknown_ApplicationMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ApplicationMode;
        private bool _mUnknown_ApplicationMode;
        public string? ApplicationMode
        {
            get
            {
                if (!_mUnknown_ApplicationMode) return _mValue_ApplicationMode;
                throw new UndeferrableValueException("Value 'Application.ApplicationMode' is not present");
            }
        }

        /// <summary>
        /// The ARN of the application.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Application.Arn' is not present");
            }
        }

        /// <summary>
        /// A CloudWatch log stream to monitor application configuration errors.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLoggingOptions", "_mUnknown_CloudwatchLoggingOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationCloudwatchLoggingOptions? _mValue_CloudwatchLoggingOptions;
        private bool _mUnknown_CloudwatchLoggingOptions;
        public Outputs.ApplicationCloudwatchLoggingOptions? CloudwatchLoggingOptions
        {
            get
            {
                if (!_mUnknown_CloudwatchLoggingOptions) return _mValue_CloudwatchLoggingOptions;
                throw new UndeferrableValueException("Value 'Application.CloudwatchLoggingOptions' is not present");
            }
        }

        /// <summary>
        /// The current timestamp when the application was created.
        /// </summary>
        [PolicyResourceProperty("createTimestamp", "_mUnknown_CreateTimestamp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreateTimestamp;
        private bool _mUnknown_CreateTimestamp;
        public string? CreateTimestamp
        {
            get
            {
                if (!_mUnknown_CreateTimestamp) return _mValue_CreateTimestamp;
                throw new UndeferrableValueException("Value 'Application.CreateTimestamp' is not present");
            }
        }

        /// <summary>
        /// A summary description of the application.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Application.Description' is not present");
            }
        }

        /// <summary>
        /// Whether to force stop an unresponsive Flink-based application.
        /// </summary>
        [PolicyResourceProperty("forceStop", "_mUnknown_ForceStop")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceStop;
        private bool _mUnknown_ForceStop;
        public bool? ForceStop
        {
            get
            {
                if (!_mUnknown_ForceStop) return _mValue_ForceStop;
                throw new UndeferrableValueException("Value 'Application.ForceStop' is not present");
            }
        }

        /// <summary>
        /// The current timestamp when the application was last updated.
        /// </summary>
        [PolicyResourceProperty("lastUpdateTimestamp", "_mUnknown_LastUpdateTimestamp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastUpdateTimestamp;
        private bool _mUnknown_LastUpdateTimestamp;
        public string? LastUpdateTimestamp
        {
            get
            {
                if (!_mUnknown_LastUpdateTimestamp) return _mValue_LastUpdateTimestamp;
                throw new UndeferrableValueException("Value 'Application.LastUpdateTimestamp' is not present");
            }
        }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Application.Name' is not present");
            }
        }

        /// <summary>
        /// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`, `FLINK-1_18`, `FLINK-1_19`.
        /// </summary>
        [PolicyResourceProperty("runtimeEnvironment", "_mUnknown_RuntimeEnvironment")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RuntimeEnvironment;
        private bool _mUnknown_RuntimeEnvironment;
        public string? RuntimeEnvironment
        {
            get
            {
                if (!_mUnknown_RuntimeEnvironment) return _mValue_RuntimeEnvironment;
                throw new UndeferrableValueException("Value 'Application.RuntimeEnvironment' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
        /// </summary>
        [PolicyResourceProperty("serviceExecutionRole", "_mUnknown_ServiceExecutionRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceExecutionRole;
        private bool _mUnknown_ServiceExecutionRole;
        public string? ServiceExecutionRole
        {
            get
            {
                if (!_mUnknown_ServiceExecutionRole) return _mValue_ServiceExecutionRole;
                throw new UndeferrableValueException("Value 'Application.ServiceExecutionRole' is not present");
            }
        }

        /// <summary>
        /// Whether to start or stop the application.
        /// </summary>
        [PolicyResourceProperty("startApplication", "_mUnknown_StartApplication")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_StartApplication;
        private bool _mUnknown_StartApplication;
        public bool? StartApplication
        {
            get
            {
                if (!_mUnknown_StartApplication) return _mValue_StartApplication;
                throw new UndeferrableValueException("Value 'Application.StartApplication' is not present");
            }
        }

        /// <summary>
        /// The status of the application.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'Application.Status' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the application. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Application.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Application.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The current application version. Kinesis Data Analytics updates the `version_id` each time the application is updated.
        /// </summary>
        [PolicyResourceProperty("versionId", "_mUnknown_VersionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_VersionId;
        private bool _mUnknown_VersionId;
        public int? VersionId
        {
            get
            {
                if (!_mUnknown_VersionId) return _mValue_VersionId;
                throw new UndeferrableValueException("Value 'Application.VersionId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:kinesisanalyticsv2/application:Application")]
    public sealed class ApplicationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The application's configuration
        /// </summary>
        [PolicyResourceProperty("applicationConfiguration", "_mUnknown_ApplicationConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationApplicationConfigurationArgs? _mValue_ApplicationConfiguration;
        private bool _mUnknown_ApplicationConfiguration;
        public Inputs.ApplicationApplicationConfigurationArgs? ApplicationConfiguration
        {
            get
            {
                if (!_mUnknown_ApplicationConfiguration) return _mValue_ApplicationConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationArgs.ApplicationConfiguration' is not present");
            }
        }

        /// <summary>
        /// The application's mode. Valid values are `STREAMING`, `INTERACTIVE`.
        /// </summary>
        [PolicyResourceProperty("applicationMode", "_mUnknown_ApplicationMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ApplicationMode;
        private bool _mUnknown_ApplicationMode;
        public string? ApplicationMode
        {
            get
            {
                if (!_mUnknown_ApplicationMode) return _mValue_ApplicationMode;
                throw new UndeferrableValueException("Value 'ApplicationArgs.ApplicationMode' is not present");
            }
        }

        /// <summary>
        /// A CloudWatch log stream to monitor application configuration errors.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLoggingOptions", "_mUnknown_CloudwatchLoggingOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationCloudwatchLoggingOptionsArgs? _mValue_CloudwatchLoggingOptions;
        private bool _mUnknown_CloudwatchLoggingOptions;
        public Inputs.ApplicationCloudwatchLoggingOptionsArgs? CloudwatchLoggingOptions
        {
            get
            {
                if (!_mUnknown_CloudwatchLoggingOptions) return _mValue_CloudwatchLoggingOptions;
                throw new UndeferrableValueException("Value 'ApplicationArgs.CloudwatchLoggingOptions' is not present");
            }
        }

        /// <summary>
        /// A summary description of the application.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ApplicationArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Whether to force stop an unresponsive Flink-based application.
        /// </summary>
        [PolicyResourceProperty("forceStop", "_mUnknown_ForceStop")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceStop;
        private bool _mUnknown_ForceStop;
        public bool? ForceStop
        {
            get
            {
                if (!_mUnknown_ForceStop) return _mValue_ForceStop;
                throw new UndeferrableValueException("Value 'ApplicationArgs.ForceStop' is not present");
            }
        }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ApplicationArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`, `FLINK-1_18`, `FLINK-1_19`.
        /// </summary>
        [PolicyResourceProperty("runtimeEnvironment", "_mUnknown_RuntimeEnvironment")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RuntimeEnvironment;
        private bool _mUnknown_RuntimeEnvironment;
        public string? RuntimeEnvironment
        {
            get
            {
                if (!_mUnknown_RuntimeEnvironment) return _mValue_RuntimeEnvironment;
                throw new UndeferrableValueException("Value 'ApplicationArgs.RuntimeEnvironment' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
        /// </summary>
        [PolicyResourceProperty("serviceExecutionRole", "_mUnknown_ServiceExecutionRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceExecutionRole;
        private bool _mUnknown_ServiceExecutionRole;
        public string? ServiceExecutionRole
        {
            get
            {
                if (!_mUnknown_ServiceExecutionRole) return _mValue_ServiceExecutionRole;
                throw new UndeferrableValueException("Value 'ApplicationArgs.ServiceExecutionRole' is not present");
            }
        }

        /// <summary>
        /// Whether to start or stop the application.
        /// </summary>
        [PolicyResourceProperty("startApplication", "_mUnknown_StartApplication")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_StartApplication;
        private bool _mUnknown_StartApplication;
        public bool? StartApplication
        {
            get
            {
                if (!_mUnknown_StartApplication) return _mValue_StartApplication;
                throw new UndeferrableValueException("Value 'ApplicationArgs.StartApplication' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the application. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ApplicationArgs.Tags' is not present");
            }
        }
    }
}
