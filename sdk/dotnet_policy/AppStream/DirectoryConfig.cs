// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppStream
{
    [PolicyResourceType("aws:appstream/directoryConfig:DirectoryConfig")]
    public sealed class DirectoryConfig : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Date and time, in UTC and extended RFC 3339 format, when the directory config was created.
        /// </summary>
        [PolicyResourceProperty("createdTime", "_mUnknown_CreatedTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreatedTime;
        private bool _mUnknown_CreatedTime;
        public string? CreatedTime
        {
            get
            {
                if (!_mUnknown_CreatedTime) return _mValue_CreatedTime;
                throw new UndeferrableValueException("Value 'DirectoryConfig.CreatedTime' is not present");
            }
        }

        /// <summary>
        /// Fully qualified name of the directory.
        /// </summary>
        [PolicyResourceProperty("directoryName", "_mUnknown_DirectoryName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DirectoryName;
        private bool _mUnknown_DirectoryName;
        public string? DirectoryName
        {
            get
            {
                if (!_mUnknown_DirectoryName) return _mValue_DirectoryName;
                throw new UndeferrableValueException("Value 'DirectoryConfig.DirectoryName' is not present");
            }
        }

        /// <summary>
        /// Distinguished names of the organizational units for computer accounts.
        /// </summary>
        [PolicyResourceProperty("organizationalUnitDistinguishedNames", "_mUnknown_OrganizationalUnitDistinguishedNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_OrganizationalUnitDistinguishedNames;
        private bool _mUnknown_OrganizationalUnitDistinguishedNames;
        public List<string>? OrganizationalUnitDistinguishedNames
        {
            get
            {
                if (!_mUnknown_OrganizationalUnitDistinguishedNames) return _mValue_OrganizationalUnitDistinguishedNames;
                throw new UndeferrableValueException("Value 'DirectoryConfig.OrganizationalUnitDistinguishedNames' is not present");
            }
        }

        /// <summary>
        /// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `service_account_credentials` below.
        /// </summary>
        [PolicyResourceProperty("serviceAccountCredentials", "_mUnknown_ServiceAccountCredentials")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DirectoryConfigServiceAccountCredentials? _mValue_ServiceAccountCredentials;
        private bool _mUnknown_ServiceAccountCredentials;
        public Outputs.DirectoryConfigServiceAccountCredentials? ServiceAccountCredentials
        {
            get
            {
                if (!_mUnknown_ServiceAccountCredentials) return _mValue_ServiceAccountCredentials;
                throw new UndeferrableValueException("Value 'DirectoryConfig.ServiceAccountCredentials' is not present");
            }
        }
    }

    [PolicyResourceType("aws:appstream/directoryConfig:DirectoryConfig")]
    public sealed class DirectoryConfigArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Fully qualified name of the directory.
        /// </summary>
        [PolicyResourceProperty("directoryName", "_mUnknown_DirectoryName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DirectoryName;
        private bool _mUnknown_DirectoryName;
        public string? DirectoryName
        {
            get
            {
                if (!_mUnknown_DirectoryName) return _mValue_DirectoryName;
                throw new UndeferrableValueException("Value 'DirectoryConfigArgs.DirectoryName' is not present");
            }
        }

        /// <summary>
        /// Distinguished names of the organizational units for computer accounts.
        /// </summary>
        [PolicyResourceProperty("organizationalUnitDistinguishedNames", "_mUnknown_OrganizationalUnitDistinguishedNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_OrganizationalUnitDistinguishedNames;
        private bool _mUnknown_OrganizationalUnitDistinguishedNames;
        public List<string>? OrganizationalUnitDistinguishedNames
        {
            get
            {
                if (!_mUnknown_OrganizationalUnitDistinguishedNames) return _mValue_OrganizationalUnitDistinguishedNames;
                throw new UndeferrableValueException("Value 'DirectoryConfigArgs.OrganizationalUnitDistinguishedNames' is not present");
            }
        }

        /// <summary>
        /// Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See `service_account_credentials` below.
        /// </summary>
        [PolicyResourceProperty("serviceAccountCredentials", "_mUnknown_ServiceAccountCredentials")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DirectoryConfigServiceAccountCredentialsArgs? _mValue_ServiceAccountCredentials;
        private bool _mUnknown_ServiceAccountCredentials;
        public Inputs.DirectoryConfigServiceAccountCredentialsArgs? ServiceAccountCredentials
        {
            get
            {
                if (!_mUnknown_ServiceAccountCredentials) return _mValue_ServiceAccountCredentials;
                throw new UndeferrableValueException("Value 'DirectoryConfigArgs.ServiceAccountCredentials' is not present");
            }
        }
    }
}
