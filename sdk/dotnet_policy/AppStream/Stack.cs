// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppStream
{
    [PolicyResourceType("aws:appstream/stack:Stack")]
    public sealed class Stack : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Set of configuration blocks defining the interface VPC endpoints. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.
        /// See `access_endpoints` below.
        /// </summary>
        [Input("accessEndpoints")]
        public List<StackAccessEndpoint>? AccessEndpoints;

        /// <summary>
        /// Settings for application settings persistence.
        /// See `application_settings` below.
        /// </summary>
        [Input("applicationSettings")]
        public StackApplicationSettings? ApplicationSettings;

        /// <summary>
        /// ARN of the appstream stack.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Date and time, in UTC and extended RFC 3339 format, when the stack was created.
        /// </summary>
        [Input("createdTime")]
        public string? CreatedTime;

        /// <summary>
        /// Description for the AppStream stack.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Stack name to display.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName;

        /// <summary>
        /// Domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.
        /// </summary>
        [Input("embedHostDomains")]
        public List<string>? EmbedHostDomains;

        /// <summary>
        /// URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed. .
        /// </summary>
        [Input("feedbackUrl")]
        public string? FeedbackUrl;

        /// <summary>
        /// Unique name for the AppStream stack.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// URL that users are redirected to after their streaming session ends.
        /// </summary>
        [Input("redirectUrl")]
        public string? RedirectUrl;

        /// <summary>
        /// Configuration block for the storage connectors to enable.
        /// See `storage_connectors` below.
        /// </summary>
        [Input("storageConnectors")]
        public List<StackStorageConnector>? StorageConnectors;

        /// <summary>
        /// The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.
        /// See `streaming_experience_settings` below.
        /// </summary>
        [Input("streamingExperienceSettings")]
        public StackStreamingExperienceSettings? StreamingExperienceSettings;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Configuration block for the actions that are enabled or disabled for users during their streaming sessions. If not provided, these settings are configured automatically by AWS. If provided, the configuration should include a block for each configurable action.
        /// See `user_settings` below.
        /// </summary>
        [Input("userSettings")]
        public List<StackUserSetting>? UserSettings;
    }
}
