// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Organizations
{
    [PolicyResourceType("aws:organizations/delegatedAdministrator:DelegatedAdministrator")]
    public sealed class DelegatedAdministrator : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The account ID number of the member account in the organization to register as a delegated administrator.
        /// </summary>
        [Input("accountId")]
        public string? AccountId;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the delegated administrator's account.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The date when the account was made a delegated administrator.
        /// </summary>
        [Input("delegationEnabledDate")]
        public string? DelegationEnabledDate;

        /// <summary>
        /// The email address that is associated with the delegated administrator's AWS account.
        /// </summary>
        [Input("email")]
        public string? Email;

        /// <summary>
        /// The method by which the delegated administrator's account joined the organization.
        /// </summary>
        [Input("joinedMethod")]
        public string? JoinedMethod;

        /// <summary>
        /// The date when the delegated administrator's account became a part of the organization.
        /// </summary>
        [Input("joinedTimestamp")]
        public string? JoinedTimestamp;

        /// <summary>
        /// The friendly name of the delegated administrator's account.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The service principal of the AWS service for which you want to make the member account a delegated administrator.
        /// </summary>
        [Input("servicePrincipal")]
        public string? ServicePrincipal;

        /// <summary>
        /// The status of the delegated administrator's account in the organization.
        /// </summary>
        [Input("status")]
        public string? Status;
    }
}
