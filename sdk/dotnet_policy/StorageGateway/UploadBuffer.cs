// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.StorageGateway
{
    [PolicyResourceType("aws:storagegateway/uploadBuffer:UploadBuffer")]
    public sealed class UploadBuffer : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
        /// </summary>
        [PolicyResourceProperty("diskId", "_mUnknown_DiskId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DiskId;
        private bool _mUnknown_DiskId;
        public string? DiskId
        {
            get
            {
                if (!_mUnknown_DiskId) return _mValue_DiskId;
                throw new UndeferrableValueException("Value 'UploadBuffer.DiskId' is not present");
            }
        }

        /// <summary>
        /// Local disk path. For example, `/dev/nvme1n1`.
        /// </summary>
        [PolicyResourceProperty("diskPath", "_mUnknown_DiskPath")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DiskPath;
        private bool _mUnknown_DiskPath;
        public string? DiskPath
        {
            get
            {
                if (!_mUnknown_DiskPath) return _mValue_DiskPath;
                throw new UndeferrableValueException("Value 'UploadBuffer.DiskPath' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the gateway.
        /// </summary>
        [PolicyResourceProperty("gatewayArn", "_mUnknown_GatewayArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GatewayArn;
        private bool _mUnknown_GatewayArn;
        public string? GatewayArn
        {
            get
            {
                if (!_mUnknown_GatewayArn) return _mValue_GatewayArn;
                throw new UndeferrableValueException("Value 'UploadBuffer.GatewayArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:storagegateway/uploadBuffer:UploadBuffer")]
    public sealed class UploadBufferArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
        /// </summary>
        [PolicyResourceProperty("diskId", "_mUnknown_DiskId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DiskId;
        private bool _mUnknown_DiskId;
        public string? DiskId
        {
            get
            {
                if (!_mUnknown_DiskId) return _mValue_DiskId;
                throw new UndeferrableValueException("Value 'UploadBufferArgs.DiskId' is not present");
            }
        }

        /// <summary>
        /// Local disk path. For example, `/dev/nvme1n1`.
        /// </summary>
        [PolicyResourceProperty("diskPath", "_mUnknown_DiskPath")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DiskPath;
        private bool _mUnknown_DiskPath;
        public string? DiskPath
        {
            get
            {
                if (!_mUnknown_DiskPath) return _mValue_DiskPath;
                throw new UndeferrableValueException("Value 'UploadBufferArgs.DiskPath' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the gateway.
        /// </summary>
        [PolicyResourceProperty("gatewayArn", "_mUnknown_GatewayArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GatewayArn;
        private bool _mUnknown_GatewayArn;
        public string? GatewayArn
        {
            get
            {
                if (!_mUnknown_GatewayArn) return _mValue_GatewayArn;
                throw new UndeferrableValueException("Value 'UploadBufferArgs.GatewayArn' is not present");
            }
        }
    }
}
