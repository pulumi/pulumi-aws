// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.StorageGateway
{
    [PolicyResourceType("aws:storagegateway/fileSystemAssociation:FileSystemAssociation")]
    public sealed class FileSystemAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the newly created file system association.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.Arn' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the storage used for the audit logs.
        /// </summary>
        [PolicyResourceProperty("auditDestinationArn", "_mUnknown_AuditDestinationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuditDestinationArn;
        private bool _mUnknown_AuditDestinationArn;
        public string? AuditDestinationArn
        {
            get
            {
                if (!_mUnknown_AuditDestinationArn) return _mValue_AuditDestinationArn;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.AuditDestinationArn' is not present");
            }
        }

        /// <summary>
        /// Refresh cache information. see Cache Attributes for more details.
        /// </summary>
        [PolicyResourceProperty("cacheAttributes", "_mUnknown_CacheAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FileSystemAssociationCacheAttributes? _mValue_CacheAttributes;
        private bool _mUnknown_CacheAttributes;
        public Outputs.FileSystemAssociationCacheAttributes? CacheAttributes
        {
            get
            {
                if (!_mUnknown_CacheAttributes) return _mValue_CacheAttributes;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.CacheAttributes' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the gateway.
        /// </summary>
        [PolicyResourceProperty("gatewayArn", "_mUnknown_GatewayArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GatewayArn;
        private bool _mUnknown_GatewayArn;
        public string? GatewayArn
        {
            get
            {
                if (!_mUnknown_GatewayArn) return _mValue_GatewayArn;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.GatewayArn' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
        /// </summary>
        [PolicyResourceProperty("locationArn", "_mUnknown_LocationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LocationArn;
        private bool _mUnknown_LocationArn;
        public string? LocationArn
        {
            get
            {
                if (!_mUnknown_LocationArn) return _mValue_LocationArn;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.LocationArn' is not present");
            }
        }

        /// <summary>
        /// The password of the user credential.
        /// </summary>
        [PolicyResourceProperty("password", "_mUnknown_Password")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Password;
        private bool _mUnknown_Password;
        public string? Password
        {
            get
            {
                if (!_mUnknown_Password) return _mValue_Password;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.Password' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
        /// </summary>
        [PolicyResourceProperty("username", "_mUnknown_Username")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Username;
        private bool _mUnknown_Username;
        public string? Username
        {
            get
            {
                if (!_mUnknown_Username) return _mValue_Username;
                throw new UndeferrableValueException("Value 'FileSystemAssociation.Username' is not present");
            }
        }
    }

    [PolicyResourceType("aws:storagegateway/fileSystemAssociation:FileSystemAssociation")]
    public sealed class FileSystemAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the storage used for the audit logs.
        /// </summary>
        [PolicyResourceProperty("auditDestinationArn", "_mUnknown_AuditDestinationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuditDestinationArn;
        private bool _mUnknown_AuditDestinationArn;
        public string? AuditDestinationArn
        {
            get
            {
                if (!_mUnknown_AuditDestinationArn) return _mValue_AuditDestinationArn;
                throw new UndeferrableValueException("Value 'FileSystemAssociationArgs.AuditDestinationArn' is not present");
            }
        }

        /// <summary>
        /// Refresh cache information. see Cache Attributes for more details.
        /// </summary>
        [PolicyResourceProperty("cacheAttributes", "_mUnknown_CacheAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FileSystemAssociationCacheAttributesArgs? _mValue_CacheAttributes;
        private bool _mUnknown_CacheAttributes;
        public Inputs.FileSystemAssociationCacheAttributesArgs? CacheAttributes
        {
            get
            {
                if (!_mUnknown_CacheAttributes) return _mValue_CacheAttributes;
                throw new UndeferrableValueException("Value 'FileSystemAssociationArgs.CacheAttributes' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the gateway.
        /// </summary>
        [PolicyResourceProperty("gatewayArn", "_mUnknown_GatewayArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GatewayArn;
        private bool _mUnknown_GatewayArn;
        public string? GatewayArn
        {
            get
            {
                if (!_mUnknown_GatewayArn) return _mValue_GatewayArn;
                throw new UndeferrableValueException("Value 'FileSystemAssociationArgs.GatewayArn' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
        /// </summary>
        [PolicyResourceProperty("locationArn", "_mUnknown_LocationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LocationArn;
        private bool _mUnknown_LocationArn;
        public string? LocationArn
        {
            get
            {
                if (!_mUnknown_LocationArn) return _mValue_LocationArn;
                throw new UndeferrableValueException("Value 'FileSystemAssociationArgs.LocationArn' is not present");
            }
        }

        /// <summary>
        /// The password of the user credential.
        /// </summary>
        [PolicyResourceProperty("password", "_mUnknown_Password")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Password;
        private bool _mUnknown_Password;
        public string? Password
        {
            get
            {
                if (!_mUnknown_Password) return _mValue_Password;
                throw new UndeferrableValueException("Value 'FileSystemAssociationArgs.Password' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FileSystemAssociationArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
        /// </summary>
        [PolicyResourceProperty("username", "_mUnknown_Username")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Username;
        private bool _mUnknown_Username;
        public string? Username
        {
            get
            {
                if (!_mUnknown_Username) return _mValue_Username;
                throw new UndeferrableValueException("Value 'FileSystemAssociationArgs.Username' is not present");
            }
        }
    }
}
