// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DevOpsGuru
{
    [PolicyResourceType("aws:devopsguru/eventSourcesConfig:EventSourcesConfig")]
    public sealed class EventSourcesConfig : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service. See `event_sources` below.
        /// </summary>
        [PolicyResourceProperty("eventSources", "_mUnknown_EventSources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.EventSourcesConfigEventSource>? _mValue_EventSources;
        private bool _mUnknown_EventSources;
        public List<Outputs.EventSourcesConfigEventSource>? EventSources
        {
            get
            {
                if (!_mUnknown_EventSources) return _mValue_EventSources;
                throw new UndeferrableValueException("Value 'EventSourcesConfig.EventSources' is not present");
            }
        }
    }

    [PolicyResourceType("aws:devopsguru/eventSourcesConfig:EventSourcesConfig")]
    public sealed class EventSourcesConfigArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service. See `event_sources` below.
        /// </summary>
        [PolicyResourceProperty("eventSources", "_mUnknown_EventSources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.EventSourcesConfigEventSourceArgs>? _mValue_EventSources;
        private bool _mUnknown_EventSources;
        public List<Inputs.EventSourcesConfigEventSourceArgs>? EventSources
        {
            get
            {
                if (!_mUnknown_EventSources) return _mValue_EventSources;
                throw new UndeferrableValueException("Value 'EventSourcesConfigArgs.EventSources' is not present");
            }
        }
    }
}
