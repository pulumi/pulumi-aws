// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.TimestreamWrite.Outputs
{
    public sealed class TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3Configuration
    {
        /// <summary>
        /// Bucket name of the customer S3 bucket.
        /// </summary>
        [PolicyResourceProperty("bucketName", "_mUnknown_BucketName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BucketName;
        private bool _mUnknown_BucketName;
        public string? BucketName
        {
            get
            {
                if (!_mUnknown_BucketName) return _mValue_BucketName;
                throw new UndeferrableValueException("Value 'TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3Configuration.BucketName' is not present");
            }
        }

        /// <summary>
        /// Encryption option for the customer s3 location. Options are S3 server side encryption with an S3-managed key or KMS managed key. Valid values are `SSE_KMS` and `SSE_S3`.
        /// </summary>
        [PolicyResourceProperty("encryptionOption", "_mUnknown_EncryptionOption")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EncryptionOption;
        private bool _mUnknown_EncryptionOption;
        public string? EncryptionOption
        {
            get
            {
                if (!_mUnknown_EncryptionOption) return _mValue_EncryptionOption;
                throw new UndeferrableValueException("Value 'TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3Configuration.EncryptionOption' is not present");
            }
        }

        /// <summary>
        /// KMS key arn for the customer s3 location when encrypting with a KMS managed key.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3Configuration.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// Object key prefix for the customer S3 location.
        /// </summary>
        [PolicyResourceProperty("objectKeyPrefix", "_mUnknown_ObjectKeyPrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ObjectKeyPrefix;
        private bool _mUnknown_ObjectKeyPrefix;
        public string? ObjectKeyPrefix
        {
            get
            {
                if (!_mUnknown_ObjectKeyPrefix) return _mValue_ObjectKeyPrefix;
                throw new UndeferrableValueException("Value 'TableMagneticStoreWritePropertiesMagneticStoreRejectedDataLocationS3Configuration.ObjectKeyPrefix' is not present");
            }
        }
    }
}
