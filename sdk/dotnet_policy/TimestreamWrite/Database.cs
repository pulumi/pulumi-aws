// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.TimestreamWrite
{
    [PolicyResourceType("aws:timestreamwrite/database:Database")]
    public sealed class Database : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN that uniquely identifies this database.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The name of the Timestream database. Minimum length of 3. Maximum length of 64.
        /// </summary>
        [Input("databaseName")]
        public string? DatabaseName;

        /// <summary>
        /// The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account. Refer to [AWS managed KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk) for more info.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId;

        /// <summary>
        /// The total number of tables found within the Timestream database.
        /// </summary>
        [Input("tableCount")]
        public int? TableCount;

        /// <summary>
        /// Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
