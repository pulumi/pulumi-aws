// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkMonitor
{
    [PolicyResourceType("aws:networkmonitor/monitor:Monitor")]
    public sealed class Monitor : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The time, in seconds, that metrics are aggregated and sent to Amazon CloudWatch. Valid values are either 30 or 60.
        /// </summary>
        [PolicyResourceProperty("aggregationPeriod", "_mUnknown_AggregationPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AggregationPeriod;
        private bool _mUnknown_AggregationPeriod;
        public int? AggregationPeriod
        {
            get
            {
                if (!_mUnknown_AggregationPeriod) return _mValue_AggregationPeriod;
                throw new UndeferrableValueException("Value 'Monitor.AggregationPeriod' is not present");
            }
        }

        /// <summary>
        /// The ARN of the monitor.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Monitor.Arn' is not present");
            }
        }

        /// <summary>
        /// The name of the monitor.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("monitorName", "_mUnknown_MonitorName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MonitorName;
        private bool _mUnknown_MonitorName;
        public string? MonitorName
        {
            get
            {
                if (!_mUnknown_MonitorName) return _mValue_MonitorName;
                throw new UndeferrableValueException("Value 'Monitor.MonitorName' is not present");
            }
        }

        /// <summary>
        /// Key-value tags for the monitor. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Monitor.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Monitor.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:networkmonitor/monitor:Monitor")]
    public sealed class MonitorArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The time, in seconds, that metrics are aggregated and sent to Amazon CloudWatch. Valid values are either 30 or 60.
        /// </summary>
        [PolicyResourceProperty("aggregationPeriod", "_mUnknown_AggregationPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AggregationPeriod;
        private bool _mUnknown_AggregationPeriod;
        public int? AggregationPeriod
        {
            get
            {
                if (!_mUnknown_AggregationPeriod) return _mValue_AggregationPeriod;
                throw new UndeferrableValueException("Value 'MonitorArgs.AggregationPeriod' is not present");
            }
        }

        /// <summary>
        /// The name of the monitor.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("monitorName", "_mUnknown_MonitorName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MonitorName;
        private bool _mUnknown_MonitorName;
        public string? MonitorName
        {
            get
            {
                if (!_mUnknown_MonitorName) return _mValue_MonitorName;
                throw new UndeferrableValueException("Value 'MonitorArgs.MonitorName' is not present");
            }
        }

        /// <summary>
        /// Key-value tags for the monitor. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'MonitorArgs.Tags' is not present");
            }
        }
    }
}
