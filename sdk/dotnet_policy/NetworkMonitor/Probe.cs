// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkMonitor
{
    [PolicyResourceType("aws:networkmonitor/probe:Probe")]
    public sealed class Probe : global::Pulumi.PolicyResource
    {
        [Input("addressFamily")]
        public string? AddressFamily;

        /// <summary>
        /// The ARN of the attachment.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The destination IP address. This must be either IPV4 or IPV6.
        /// </summary>
        [Input("destination")]
        public string? Destination;

        /// <summary>
        /// The port associated with the destination. This is required only if the protocol is TCP and must be a number between 1 and 65536.
        /// </summary>
        [Input("destinationPort")]
        public int? DestinationPort;

        /// <summary>
        /// The name of the monitor.
        /// </summary>
        [Input("monitorName")]
        public string? MonitorName;

        /// <summary>
        /// The size of the packets sent between the source and destination. This must be a number between 56 and 8500.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("packetSize")]
        public int? PacketSize;

        [Input("probeId")]
        public string? ProbeId;

        /// <summary>
        /// The protocol used for the network traffic between the source and destination. This must be either TCP or ICMP.
        /// </summary>
        [Input("protocol")]
        public string? Protocol;

        /// <summary>
        /// The ARN of the subnet.
        /// </summary>
        [Input("sourceArn")]
        public string? SourceArn;

        /// <summary>
        /// Key-value tags for the monitor. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("vpcId")]
        public string? VpcId;
    }
}
