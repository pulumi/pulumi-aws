// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Amplify.Outputs
{
    public sealed class DomainAssociationCertificateSettings
    {
        /// <summary>
        /// DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
        /// </summary>
        [PolicyResourceProperty("certificateVerificationDnsRecord", "_mUnknown_CertificateVerificationDnsRecord")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CertificateVerificationDnsRecord;
        private bool _mUnknown_CertificateVerificationDnsRecord;
        public string? CertificateVerificationDnsRecord
        {
            get
            {
                if (!_mUnknown_CertificateVerificationDnsRecord) return _mValue_CertificateVerificationDnsRecord;
                throw new UndeferrableValueException("Value 'DomainAssociationCertificateSettings.CertificateVerificationDnsRecord' is not present");
            }
        }

        /// <summary>
        /// The Amazon resource name (ARN) for the custom certificate.
        /// Required when `type` is `CUSTOM`.
        /// </summary>
        [PolicyResourceProperty("customCertificateArn", "_mUnknown_CustomCertificateArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomCertificateArn;
        private bool _mUnknown_CustomCertificateArn;
        public string? CustomCertificateArn
        {
            get
            {
                if (!_mUnknown_CustomCertificateArn) return _mValue_CustomCertificateArn;
                throw new UndeferrableValueException("Value 'DomainAssociationCertificateSettings.CustomCertificateArn' is not present");
            }
        }

        /// <summary>
        /// The certificate type.
        /// Valid values are `AMPLIFY_MANAGED` and `CUSTOM`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'DomainAssociationCertificateSettings.Type' is not present");
            }
        }
    }
}
