// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Amplify
{
    [PolicyResourceType("aws:amplify/branch:Branch")]
    public sealed class Branch : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Unique ID for an Amplify app.
        /// </summary>
        [Input("appId")]
        public string? AppId;

        /// <summary>
        /// ARN for the branch.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A list of custom resources that are linked to this branch.
        /// </summary>
        [Input("associatedResources")]
        public List<string>? AssociatedResources;

        /// <summary>
        /// ARN for a backend environment that is part of an Amplify app.
        /// </summary>
        [Input("backendEnvironmentArn")]
        public string? BackendEnvironmentArn;

        /// <summary>
        /// Basic authorization credentials for the branch.
        /// </summary>
        [Input("basicAuthCredentials")]
        public string? BasicAuthCredentials;

        /// <summary>
        /// Name for the branch.
        /// </summary>
        [Input("branchName")]
        public string? BranchName;

        /// <summary>
        /// Custom domains for the branch.
        /// </summary>
        [Input("customDomains")]
        public List<string>? CustomDomains;

        /// <summary>
        /// Description for the branch.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Destination branch if the branch is a pull request branch.
        /// </summary>
        [Input("destinationBranch")]
        public string? DestinationBranch;

        /// <summary>
        /// Display name for a branch. This is used as the default domain prefix.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName;

        /// <summary>
        /// Enables auto building for the branch.
        /// </summary>
        [Input("enableAutoBuild")]
        public bool? EnableAutoBuild;

        /// <summary>
        /// Enables basic authorization for the branch.
        /// </summary>
        [Input("enableBasicAuth")]
        public bool? EnableBasicAuth;

        /// <summary>
        /// Enables notifications for the branch.
        /// </summary>
        [Input("enableNotification")]
        public bool? EnableNotification;

        /// <summary>
        /// Enables performance mode for the branch.
        /// </summary>
        [Input("enablePerformanceMode")]
        public bool? EnablePerformanceMode;

        /// <summary>
        /// Enables pull request previews for this branch.
        /// </summary>
        [Input("enablePullRequestPreview")]
        public bool? EnablePullRequestPreview;

        /// <summary>
        /// Environment variables for the branch.
        /// </summary>
        [Input("environmentVariables")]
        public Dictionary<string, string>? EnvironmentVariables;

        /// <summary>
        /// Framework for the branch.
        /// </summary>
        [Input("framework")]
        public string? Framework;

        /// <summary>
        /// Amplify environment name for the pull request.
        /// </summary>
        [Input("pullRequestEnvironmentName")]
        public string? PullRequestEnvironmentName;

        /// <summary>
        /// Source branch if the branch is a pull request branch.
        /// </summary>
        [Input("sourceBranch")]
        public string? SourceBranch;

        /// <summary>
        /// Describes the current stage for the branch. Valid values: `PRODUCTION`, `BETA`, `DEVELOPMENT`, `EXPERIMENTAL`, `PULL_REQUEST`.
        /// </summary>
        [Input("stage")]
        public string? Stage;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Content Time To Live (TTL) for the website in seconds.
        /// </summary>
        [Input("ttl")]
        public string? Ttl;
    }
}
