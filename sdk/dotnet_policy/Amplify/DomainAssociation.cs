// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Amplify
{
    [PolicyResourceType("aws:amplify/domainAssociation:DomainAssociation")]
    public sealed class DomainAssociation : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Unique ID for an Amplify app.
        /// </summary>
        [Input("appId")]
        public string? AppId;

        /// <summary>
        /// ARN for the domain association.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The type of SSL/TLS certificate to use for your custom domain. If you don't specify a certificate type, Amplify uses the default certificate that it provisions and manages for you.
        /// </summary>
        [Input("certificateSettings")]
        public DomainAssociationCertificateSettings? CertificateSettings;

        /// <summary>
        /// DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
        /// </summary>
        [Input("certificateVerificationDnsRecord")]
        public string? CertificateVerificationDnsRecord;

        /// <summary>
        /// Domain name for the domain association.
        /// </summary>
        [Input("domainName")]
        public string? DomainName;

        /// <summary>
        /// Enables the automated creation of subdomains for branches.
        /// </summary>
        [Input("enableAutoSubDomain")]
        public bool? EnableAutoSubDomain;

        /// <summary>
        /// Setting for the subdomain. Documented below.
        /// </summary>
        [Input("subDomains")]
        public List<DomainAssociationSubDomain>? SubDomains;

        /// <summary>
        /// If enabled, the resource will wait for the domain association status to change to `PENDING_DEPLOYMENT` or `AVAILABLE`. Setting this to `false` will skip the process. Default: `true`.
        /// </summary>
        [Input("waitForVerification")]
        public bool? WaitForVerification;
    }
}
