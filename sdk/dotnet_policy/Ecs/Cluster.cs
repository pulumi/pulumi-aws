// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs
{
    [PolicyResourceType("aws:ecs/cluster:Cluster")]
    public sealed class Cluster : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN that identifies the cluster.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Execute command configuration for the cluster. See `configuration` Block for details.
        /// </summary>
        [Input("configuration")]
        public ClusterConfiguration? Configuration;

        /// <summary>
        /// Name of the cluster (up to 255 letters, numbers, hyphens, and underscores)
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Default Service Connect namespace. See `service_connect_defaults` Block for details.
        /// </summary>
        [Input("serviceConnectDefaults")]
        public ClusterServiceConnectDefaults? ServiceConnectDefaults;

        /// <summary>
        /// Configuration block(s) with cluster settings. For example, this can be used to enable CloudWatch Container Insights for a cluster. See `setting` Block for details.
        /// </summary>
        [Input("settings")]
        public List<ClusterSetting>? Settings;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
