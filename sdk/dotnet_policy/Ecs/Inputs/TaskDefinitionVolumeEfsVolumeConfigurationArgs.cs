// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Inputs
{
    public sealed class TaskDefinitionVolumeEfsVolumeConfigurationArgs
    {
        /// <summary>
        /// Configuration block for authorization for the Amazon EFS file system. Detailed below.
        /// </summary>
        [PolicyResourceProperty("authorizationConfig", "_mUnknown_AuthorizationConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.TaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfigArgs? _mValue_AuthorizationConfig;
        private bool _mUnknown_AuthorizationConfig;
        public Inputs.TaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfigArgs? AuthorizationConfig
        {
            get
            {
                if (!_mUnknown_AuthorizationConfig) return _mValue_AuthorizationConfig;
                throw new UndeferrableValueException("Value 'TaskDefinitionVolumeEfsVolumeConfigurationArgs.AuthorizationConfig' is not present");
            }
        }

        /// <summary>
        /// ID of the EFS File System.
        /// </summary>
        [PolicyResourceProperty("fileSystemId", "_mUnknown_FileSystemId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FileSystemId;
        private bool _mUnknown_FileSystemId;
        public string? FileSystemId
        {
            get
            {
                if (!_mUnknown_FileSystemId) return _mValue_FileSystemId;
                throw new UndeferrableValueException("Value 'TaskDefinitionVolumeEfsVolumeConfigurationArgs.FileSystemId' is not present");
            }
        }

        /// <summary>
        /// Directory within the Amazon EFS file system to mount as the root directory inside the host. If this parameter is omitted, the root of the Amazon EFS volume will be used. Specifying / will have the same effect as omitting this parameter. This argument is ignored when using `authorization_config`.
        /// </summary>
        [PolicyResourceProperty("rootDirectory", "_mUnknown_RootDirectory")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RootDirectory;
        private bool _mUnknown_RootDirectory;
        public string? RootDirectory
        {
            get
            {
                if (!_mUnknown_RootDirectory) return _mValue_RootDirectory;
                throw new UndeferrableValueException("Value 'TaskDefinitionVolumeEfsVolumeConfigurationArgs.RootDirectory' is not present");
            }
        }

        /// <summary>
        /// Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS IAM authorization is used. Valid values: `ENABLED`, `DISABLED`. If this parameter is omitted, the default value of `DISABLED` is used.
        /// </summary>
        [PolicyResourceProperty("transitEncryption", "_mUnknown_TransitEncryption")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TransitEncryption;
        private bool _mUnknown_TransitEncryption;
        public string? TransitEncryption
        {
            get
            {
                if (!_mUnknown_TransitEncryption) return _mValue_TransitEncryption;
                throw new UndeferrableValueException("Value 'TaskDefinitionVolumeEfsVolumeConfigurationArgs.TransitEncryption' is not present");
            }
        }

        /// <summary>
        /// Port to use for transit encryption. If you do not specify a transit encryption port, it will use the port selection strategy that the Amazon EFS mount helper uses.
        /// </summary>
        [PolicyResourceProperty("transitEncryptionPort", "_mUnknown_TransitEncryptionPort")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_TransitEncryptionPort;
        private bool _mUnknown_TransitEncryptionPort;
        public int? TransitEncryptionPort
        {
            get
            {
                if (!_mUnknown_TransitEncryptionPort) return _mValue_TransitEncryptionPort;
                throw new UndeferrableValueException("Value 'TaskDefinitionVolumeEfsVolumeConfigurationArgs.TransitEncryptionPort' is not present");
            }
        }
    }
}
