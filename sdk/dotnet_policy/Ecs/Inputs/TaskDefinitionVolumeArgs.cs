// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Inputs
{
    public sealed class TaskDefinitionVolumeArgs
    {
        /// <summary>
        /// Whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration.
        /// </summary>
        [Input("configureAtLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mConfigureAtLaunch;

        public bool? ConfigureAtLaunch => _mConfigureAtLaunch.GetValue("configureAtLaunch");

        /// <summary>
        /// Configuration block to configure a docker volume. Detailed below.
        /// </summary>
        [Input("dockerVolumeConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.TaskDefinitionVolumeDockerVolumeConfigurationArgs> _mDockerVolumeConfiguration;

        public Inputs.TaskDefinitionVolumeDockerVolumeConfigurationArgs? DockerVolumeConfiguration => _mDockerVolumeConfiguration.GetValue("dockerVolumeConfiguration");

        /// <summary>
        /// Configuration block for an EFS volume. Detailed below.
        /// </summary>
        [Input("efsVolumeConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.TaskDefinitionVolumeEfsVolumeConfigurationArgs> _mEfsVolumeConfiguration;

        public Inputs.TaskDefinitionVolumeEfsVolumeConfigurationArgs? EfsVolumeConfiguration => _mEfsVolumeConfiguration.GetValue("efsVolumeConfiguration");

        /// <summary>
        /// Configuration block for an FSX Windows File Server volume. Detailed below.
        /// </summary>
        [Input("fsxWindowsFileServerVolumeConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationArgs> _mFsxWindowsFileServerVolumeConfiguration;

        public Inputs.TaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationArgs? FsxWindowsFileServerVolumeConfiguration => _mFsxWindowsFileServerVolumeConfiguration.GetValue("fsxWindowsFileServerVolumeConfiguration");

        /// <summary>
        /// Path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
        /// </summary>
        [Input("hostPath")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mHostPath;

        public string? HostPath => _mHostPath.GetValue("hostPath");

        /// <summary>
        /// Name of the volume. This name is referenced in the `sourceVolume`
        /// parameter of container definition in the `mountPoints` section.
        /// </summary>
        [Input("name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mName;

        public string? Name => _mName.GetValue("name");
    }
}
