// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Inputs
{
    public sealed class GetTaskExecutionPlacementConstraintArgs
    {
        /// <summary>
        /// A cluster query language expression to apply to the constraint. The expression can have a maximum length of 2000 characters. You can't specify an expression if the constraint type is `distinctInstance`.
        /// </summary>
        [PolicyResourceProperty("expression", "_mUnknown_Expression")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Expression;
        private bool _mUnknown_Expression;
        public string? Expression
        {
            get
            {
                if (!_mUnknown_Expression) return _mValue_Expression;
                throw new UndeferrableValueException("Value 'GetTaskExecutionPlacementConstraintArgs.Expression' is not present");
            }
        }

        /// <summary>
        /// The type of constraint. Valid values are `distinctInstance` or `memberOf`. Use `distinctInstance` to ensure that each task in a particular group is running on a different container instance. Use `memberOf` to restrict the selection to a group of valid candidates.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'GetTaskExecutionPlacementConstraintArgs.Type' is not present");
            }
        }
    }
}
