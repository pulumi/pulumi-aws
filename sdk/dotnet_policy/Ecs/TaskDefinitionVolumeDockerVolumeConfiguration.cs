// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs
{
    [PolicyResourceType("aws:ecs/TaskDefinitionVolumeDockerVolumeConfiguration:TaskDefinitionVolumeDockerVolumeConfiguration")]
    public sealed class TaskDefinitionVolumeDockerVolumeConfiguration
    {
        /// <summary>
        /// If this value is `true`, the Docker volume is created if it does not already exist. *Note*: This field is only used if the scope is `shared`.
        /// </summary>
        [Input("autoprovision")]
        public bool? Autoprovision;

        /// <summary>
        /// Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
        /// </summary>
        [Input("driver")]
        public string? Driver;

        /// <summary>
        /// Map of Docker driver specific options.
        /// </summary>
        [Input("driverOpts")]
        public Dictionary<string, string>? DriverOpts;

        /// <summary>
        /// Map of custom metadata to add to your Docker volume.
        /// </summary>
        [Input("labels")]
        public Dictionary<string, string>? Labels;

        /// <summary>
        /// Scope for the Docker volume, which determines its lifecycle, either `task` or `shared`.  Docker volumes that are scoped to a `task` are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as `shared` persist after the task stops.
        /// </summary>
        [Input("scope")]
        public string? Scope;
    }
}
