// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Outputs
{
    public sealed class ServiceNetworkConfiguration
    {
        /// <summary>
        /// Assign a public IP address to the ENI (Fargate launch type only). Valid values are `true` or `false`. Default `false`.
        /// 
        /// For more information, see [Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html)
        /// </summary>
        [PolicyResourceProperty("assignPublicIp", "_mUnknown_AssignPublicIp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AssignPublicIp;
        private bool _mUnknown_AssignPublicIp;
        public bool? AssignPublicIp
        {
            get
            {
                if (!_mUnknown_AssignPublicIp) return _mValue_AssignPublicIp;
                throw new UndeferrableValueException("Value 'ServiceNetworkConfiguration.AssignPublicIp' is not present");
            }
        }

        /// <summary>
        /// Security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
        /// </summary>
        [PolicyResourceProperty("securityGroups", "_mUnknown_SecurityGroups")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroups;
        private bool _mUnknown_SecurityGroups;
        public List<string>? SecurityGroups
        {
            get
            {
                if (!_mUnknown_SecurityGroups) return _mValue_SecurityGroups;
                throw new UndeferrableValueException("Value 'ServiceNetworkConfiguration.SecurityGroups' is not present");
            }
        }

        /// <summary>
        /// Subnets associated with the task or service.
        /// </summary>
        [PolicyResourceProperty("subnets", "_mUnknown_Subnets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Subnets;
        private bool _mUnknown_Subnets;
        public List<string>? Subnets
        {
            get
            {
                if (!_mUnknown_Subnets) return _mValue_Subnets;
                throw new UndeferrableValueException("Value 'ServiceNetworkConfiguration.Subnets' is not present");
            }
        }
    }
}
