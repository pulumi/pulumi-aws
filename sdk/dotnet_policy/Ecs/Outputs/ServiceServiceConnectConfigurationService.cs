// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Outputs
{
    public sealed class ServiceServiceConnectConfigurationService
    {
        /// <summary>
        /// List of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. See below.
        /// </summary>
        [PolicyResourceProperty("clientAlias", "_mUnknown_ClientAlias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ServiceServiceConnectConfigurationServiceClientAlias>? _mValue_ClientAlias;
        private bool _mUnknown_ClientAlias;
        public List<Outputs.ServiceServiceConnectConfigurationServiceClientAlias>? ClientAlias
        {
            get
            {
                if (!_mUnknown_ClientAlias) return _mValue_ClientAlias;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.ClientAlias' is not present");
            }
        }

        /// <summary>
        /// Name of the new AWS Cloud Map service that Amazon ECS creates for this Amazon ECS service.
        /// </summary>
        [PolicyResourceProperty("discoveryName", "_mUnknown_DiscoveryName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DiscoveryName;
        private bool _mUnknown_DiscoveryName;
        public string? DiscoveryName
        {
            get
            {
                if (!_mUnknown_DiscoveryName) return _mValue_DiscoveryName;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.DiscoveryName' is not present");
            }
        }

        /// <summary>
        /// Port number for the Service Connect proxy to listen on.
        /// </summary>
        [PolicyResourceProperty("ingressPortOverride", "_mUnknown_IngressPortOverride")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_IngressPortOverride;
        private bool _mUnknown_IngressPortOverride;
        public int? IngressPortOverride
        {
            get
            {
                if (!_mUnknown_IngressPortOverride) return _mValue_IngressPortOverride;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.IngressPortOverride' is not present");
            }
        }

        /// <summary>
        /// Name of one of the `portMappings` from all the containers in the task definition of this Amazon ECS service.
        /// </summary>
        [PolicyResourceProperty("portName", "_mUnknown_PortName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PortName;
        private bool _mUnknown_PortName;
        public string? PortName
        {
            get
            {
                if (!_mUnknown_PortName) return _mValue_PortName;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.PortName' is not present");
            }
        }

        /// <summary>
        /// Configuration timeouts for Service Connect
        /// </summary>
        [PolicyResourceProperty("timeout", "_mUnknown_Timeout")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceServiceConnectConfigurationServiceTimeout? _mValue_Timeout;
        private bool _mUnknown_Timeout;
        public Outputs.ServiceServiceConnectConfigurationServiceTimeout? Timeout
        {
            get
            {
                if (!_mUnknown_Timeout) return _mValue_Timeout;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.Timeout' is not present");
            }
        }

        /// <summary>
        /// Configuration for enabling Transport Layer Security (TLS)
        /// </summary>
        [PolicyResourceProperty("tls", "_mUnknown_Tls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceServiceConnectConfigurationServiceTls? _mValue_Tls;
        private bool _mUnknown_Tls;
        public Outputs.ServiceServiceConnectConfigurationServiceTls? Tls
        {
            get
            {
                if (!_mUnknown_Tls) return _mValue_Tls;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.Tls' is not present");
            }
        }
    }
}
