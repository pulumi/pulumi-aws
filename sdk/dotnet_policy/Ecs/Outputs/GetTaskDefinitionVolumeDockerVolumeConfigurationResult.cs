// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Outputs
{
    public sealed class GetTaskDefinitionVolumeDockerVolumeConfigurationResult
    {
        /// <summary>
        /// If this value is `true`, the Docker volume is created if it does not already exist. *Note*: This field is only used if the scope is `shared`.
        /// </summary>
        [Input("autoprovision")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mAutoprovision;

        public bool? Autoprovision => _mAutoprovision.GetValue("autoprovision");

        /// <summary>
        /// Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
        /// </summary>
        [Input("driver")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDriver;

        public string? Driver => _mDriver.GetValue("driver");

        /// <summary>
        /// Map of Docker driver specific options.
        /// </summary>
        [Input("driverOpts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mDriverOpts;

        public Dictionary<string, string>? DriverOpts => _mDriverOpts.GetValue("driverOpts");

        /// <summary>
        /// Map of custom metadata to add to your Docker volume.
        /// </summary>
        [Input("labels")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mLabels;

        public Dictionary<string, string>? Labels => _mLabels.GetValue("labels");

        /// <summary>
        /// Scope for the Docker volume, which determines its lifecycle, either `task` or `shared`.  Docker volumes that are scoped to a `task` are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as `shared` persist after the task stops.
        /// </summary>
        [Input("scope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mScope;

        public string? Scope => _mScope.GetValue("scope");
    }
}
