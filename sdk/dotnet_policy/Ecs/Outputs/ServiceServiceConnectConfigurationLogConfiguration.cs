// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Outputs
{
    public sealed class ServiceServiceConnectConfigurationLogConfiguration
    {
        /// <summary>
        /// Log driver to use for the container.
        /// </summary>
        [PolicyResourceProperty("logDriver", "_mUnknown_LogDriver")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogDriver;
        private bool _mUnknown_LogDriver;
        public string? LogDriver
        {
            get
            {
                if (!_mUnknown_LogDriver) return _mValue_LogDriver;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationLogConfiguration.LogDriver' is not present");
            }
        }

        /// <summary>
        /// Configuration options to send to the log driver.
        /// </summary>
        [PolicyResourceProperty("options", "_mUnknown_Options")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Options;
        private bool _mUnknown_Options;
        public Dictionary<string, string>? Options
        {
            get
            {
                if (!_mUnknown_Options) return _mValue_Options;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationLogConfiguration.Options' is not present");
            }
        }

        /// <summary>
        /// Secrets to pass to the log configuration. See below.
        /// </summary>
        [PolicyResourceProperty("secretOptions", "_mUnknown_SecretOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ServiceServiceConnectConfigurationLogConfigurationSecretOption>? _mValue_SecretOptions;
        private bool _mUnknown_SecretOptions;
        public List<Outputs.ServiceServiceConnectConfigurationLogConfigurationSecretOption>? SecretOptions
        {
            get
            {
                if (!_mUnknown_SecretOptions) return _mValue_SecretOptions;
                throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationLogConfiguration.SecretOptions' is not present");
            }
        }
    }
}
