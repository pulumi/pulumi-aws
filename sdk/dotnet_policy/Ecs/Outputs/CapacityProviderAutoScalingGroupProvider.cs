// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecs.Outputs
{
    public sealed class CapacityProviderAutoScalingGroupProvider
    {
        /// <summary>
        /// ARN of the associated auto scaling group.
        /// </summary>
        [PolicyResourceProperty("autoScalingGroupArn", "_mUnknown_AutoScalingGroupArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoScalingGroupArn;
        private bool _mUnknown_AutoScalingGroupArn;
        public string? AutoScalingGroupArn
        {
            get
            {
                if (!_mUnknown_AutoScalingGroupArn) return _mValue_AutoScalingGroupArn;
                throw new UndeferrableValueException("Value 'CapacityProviderAutoScalingGroupProvider.AutoScalingGroupArn' is not present");
            }
        }

        /// <summary>
        /// Enables or disables a graceful shutdown of instances without disturbing workloads. Valid values are `ENABLED` and `DISABLED`. The default value is `ENABLED` when a capacity provider is created.
        /// </summary>
        [PolicyResourceProperty("managedDraining", "_mUnknown_ManagedDraining")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ManagedDraining;
        private bool _mUnknown_ManagedDraining;
        public string? ManagedDraining
        {
            get
            {
                if (!_mUnknown_ManagedDraining) return _mValue_ManagedDraining;
                throw new UndeferrableValueException("Value 'CapacityProviderAutoScalingGroupProvider.ManagedDraining' is not present");
            }
        }

        /// <summary>
        /// Configuration block defining the parameters of the auto scaling. Detailed below.
        /// </summary>
        [PolicyResourceProperty("managedScaling", "_mUnknown_ManagedScaling")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.CapacityProviderAutoScalingGroupProviderManagedScaling? _mValue_ManagedScaling;
        private bool _mUnknown_ManagedScaling;
        public Outputs.CapacityProviderAutoScalingGroupProviderManagedScaling? ManagedScaling
        {
            get
            {
                if (!_mUnknown_ManagedScaling) return _mValue_ManagedScaling;
                throw new UndeferrableValueException("Value 'CapacityProviderAutoScalingGroupProvider.ManagedScaling' is not present");
            }
        }

        /// <summary>
        /// Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [PolicyResourceProperty("managedTerminationProtection", "_mUnknown_ManagedTerminationProtection")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ManagedTerminationProtection;
        private bool _mUnknown_ManagedTerminationProtection;
        public string? ManagedTerminationProtection
        {
            get
            {
                if (!_mUnknown_ManagedTerminationProtection) return _mValue_ManagedTerminationProtection;
                throw new UndeferrableValueException("Value 'CapacityProviderAutoScalingGroupProvider.ManagedTerminationProtection' is not present");
            }
        }
    }
}
