// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DynamoDB
{
    [PolicyResourceType("aws:dynamodb/tableReplica:TableReplica")]
    public sealed class TableReplica : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the table replica.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Whether deletion protection is enabled (true) or disabled (false) on the table replica.
        /// </summary>
        [Input("deletionProtectionEnabled")]
        public bool? DeletionProtectionEnabled;

        /// <summary>
        /// ARN of the _main_ or global table which this resource will replicate.
        /// 
        /// Optional arguments:
        /// </summary>
        [Input("globalTableArn")]
        public string? GlobalTableArn;

        /// <summary>
        /// ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
        /// </summary>
        [Input("kmsKeyArn")]
        public string? KmsKeyArn;

        /// <summary>
        /// Whether to enable Point In Time Recovery for the table replica. Default is `false`.
        /// </summary>
        [Input("pointInTimeRecovery")]
        public bool? PointInTimeRecovery;

        /// <summary>
        /// Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
        /// </summary>
        [Input("tableClassOverride")]
        public string? TableClassOverride;

        /// <summary>
        /// Map of tags to populate on the created table. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
