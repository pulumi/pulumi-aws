// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DynamoDB
{
    [PolicyResourceType("aws:dynamodb/contributorInsights:ContributorInsights")]
    public sealed class ContributorInsights : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The global secondary index name
        /// </summary>
        [Input("indexName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mIndexName;

        public string? IndexName => _mIndexName.GetValue("indexName");

        /// <summary>
        /// The name of the table to enable contributor insights
        /// </summary>
        [Input("tableName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mTableName;

        public string? TableName => _mTableName.GetValue("tableName");
    }

    [PolicyResourceType("aws:dynamodb/contributorInsights:ContributorInsights")]
    public sealed class ContributorInsightsArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The global secondary index name
        /// </summary>
        [Input("indexName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mIndexName;

        public string? IndexName => _mIndexName.GetValue("indexName");

        /// <summary>
        /// The name of the table to enable contributor insights
        /// </summary>
        [Input("tableName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mTableName;

        public string? TableName => _mTableName.GetValue("tableName");
    }
}
