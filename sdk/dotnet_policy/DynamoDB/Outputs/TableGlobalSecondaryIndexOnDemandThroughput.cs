// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DynamoDB.Outputs
{
    public sealed class TableGlobalSecondaryIndexOnDemandThroughput
    {
        /// <summary>
        /// Maximum number of read request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
        /// </summary>
        [PolicyResourceProperty("maxReadRequestUnits", "_mUnknown_MaxReadRequestUnits")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxReadRequestUnits;
        private bool _mUnknown_MaxReadRequestUnits;
        public int? MaxReadRequestUnits
        {
            get
            {
                if (!_mUnknown_MaxReadRequestUnits) return _mValue_MaxReadRequestUnits;
                throw new UndeferrableValueException("Value 'TableGlobalSecondaryIndexOnDemandThroughput.MaxReadRequestUnits' is not present");
            }
        }

        /// <summary>
        /// Maximum number of write request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
        /// </summary>
        [PolicyResourceProperty("maxWriteRequestUnits", "_mUnknown_MaxWriteRequestUnits")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxWriteRequestUnits;
        private bool _mUnknown_MaxWriteRequestUnits;
        public int? MaxWriteRequestUnits
        {
            get
            {
                if (!_mUnknown_MaxWriteRequestUnits) return _mValue_MaxWriteRequestUnits;
                throw new UndeferrableValueException("Value 'TableGlobalSecondaryIndexOnDemandThroughput.MaxWriteRequestUnits' is not present");
            }
        }
    }
}
