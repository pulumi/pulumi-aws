// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeArtifact
{
    [PolicyResourceType("aws:codeartifact/domainPermissions:DomainPermissions")]
    public sealed class DomainPermissions : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The name of the domain on which to set the resource policy.
        /// </summary>
        [PolicyResourceProperty("domain", "_mUnknown_Domain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Domain;
        private bool _mUnknown_Domain;
        public string? Domain
        {
            get
            {
                if (!_mUnknown_Domain) return _mValue_Domain;
                throw new UndeferrableValueException("Value 'DomainPermissions.Domain' is not present");
            }
        }

        /// <summary>
        /// The account number of the AWS account that owns the domain.
        /// </summary>
        [PolicyResourceProperty("domainOwner", "_mUnknown_DomainOwner")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainOwner;
        private bool _mUnknown_DomainOwner;
        public string? DomainOwner
        {
            get
            {
                if (!_mUnknown_DomainOwner) return _mValue_DomainOwner;
                throw new UndeferrableValueException("Value 'DomainPermissions.DomainOwner' is not present");
            }
        }

        /// <summary>
        /// A JSON policy string to be set as the access control resource policy on the provided domain.
        /// </summary>
        [PolicyResourceProperty("policyDocument", "_mUnknown_PolicyDocument")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyDocument;
        private bool _mUnknown_PolicyDocument;
        public string? PolicyDocument
        {
            get
            {
                if (!_mUnknown_PolicyDocument) return _mValue_PolicyDocument;
                throw new UndeferrableValueException("Value 'DomainPermissions.PolicyDocument' is not present");
            }
        }

        /// <summary>
        /// The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain's resource policy.
        /// </summary>
        [PolicyResourceProperty("policyRevision", "_mUnknown_PolicyRevision")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyRevision;
        private bool _mUnknown_PolicyRevision;
        public string? PolicyRevision
        {
            get
            {
                if (!_mUnknown_PolicyRevision) return _mValue_PolicyRevision;
                throw new UndeferrableValueException("Value 'DomainPermissions.PolicyRevision' is not present");
            }
        }

        /// <summary>
        /// The ARN of the resource associated with the resource policy.
        /// </summary>
        [PolicyResourceProperty("resourceArn", "_mUnknown_ResourceArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceArn;
        private bool _mUnknown_ResourceArn;
        public string? ResourceArn
        {
            get
            {
                if (!_mUnknown_ResourceArn) return _mValue_ResourceArn;
                throw new UndeferrableValueException("Value 'DomainPermissions.ResourceArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:codeartifact/domainPermissions:DomainPermissions")]
    public sealed class DomainPermissionsArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The name of the domain on which to set the resource policy.
        /// </summary>
        [PolicyResourceProperty("domain", "_mUnknown_Domain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Domain;
        private bool _mUnknown_Domain;
        public string? Domain
        {
            get
            {
                if (!_mUnknown_Domain) return _mValue_Domain;
                throw new UndeferrableValueException("Value 'DomainPermissionsArgs.Domain' is not present");
            }
        }

        /// <summary>
        /// The account number of the AWS account that owns the domain.
        /// </summary>
        [PolicyResourceProperty("domainOwner", "_mUnknown_DomainOwner")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainOwner;
        private bool _mUnknown_DomainOwner;
        public string? DomainOwner
        {
            get
            {
                if (!_mUnknown_DomainOwner) return _mValue_DomainOwner;
                throw new UndeferrableValueException("Value 'DomainPermissionsArgs.DomainOwner' is not present");
            }
        }

        /// <summary>
        /// A JSON policy string to be set as the access control resource policy on the provided domain.
        /// </summary>
        [PolicyResourceProperty("policyDocument", "_mUnknown_PolicyDocument")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyDocument;
        private bool _mUnknown_PolicyDocument;
        public string? PolicyDocument
        {
            get
            {
                if (!_mUnknown_PolicyDocument) return _mValue_PolicyDocument;
                throw new UndeferrableValueException("Value 'DomainPermissionsArgs.PolicyDocument' is not present");
            }
        }

        /// <summary>
        /// The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain's resource policy.
        /// </summary>
        [PolicyResourceProperty("policyRevision", "_mUnknown_PolicyRevision")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyRevision;
        private bool _mUnknown_PolicyRevision;
        public string? PolicyRevision
        {
            get
            {
                if (!_mUnknown_PolicyRevision) return _mValue_PolicyRevision;
                throw new UndeferrableValueException("Value 'DomainPermissionsArgs.PolicyRevision' is not present");
            }
        }
    }
}
