// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Inspector2
{
    [PolicyResourceType("aws:inspector2/memberAssociation:MemberAssociation")]
    public sealed class MemberAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ID of the account to associate
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'MemberAssociation.AccountId' is not present");
            }
        }

        /// <summary>
        /// Account ID of the delegated administrator account
        /// </summary>
        [PolicyResourceProperty("delegatedAdminAccountId", "_mUnknown_DelegatedAdminAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DelegatedAdminAccountId;
        private bool _mUnknown_DelegatedAdminAccountId;
        public string? DelegatedAdminAccountId
        {
            get
            {
                if (!_mUnknown_DelegatedAdminAccountId) return _mValue_DelegatedAdminAccountId;
                throw new UndeferrableValueException("Value 'MemberAssociation.DelegatedAdminAccountId' is not present");
            }
        }

        /// <summary>
        /// Status of the member relationship
        /// </summary>
        [PolicyResourceProperty("relationshipStatus", "_mUnknown_RelationshipStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RelationshipStatus;
        private bool _mUnknown_RelationshipStatus;
        public string? RelationshipStatus
        {
            get
            {
                if (!_mUnknown_RelationshipStatus) return _mValue_RelationshipStatus;
                throw new UndeferrableValueException("Value 'MemberAssociation.RelationshipStatus' is not present");
            }
        }

        /// <summary>
        /// Date and time of the last update of the relationship
        /// </summary>
        [PolicyResourceProperty("updatedAt", "_mUnknown_UpdatedAt")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UpdatedAt;
        private bool _mUnknown_UpdatedAt;
        public string? UpdatedAt
        {
            get
            {
                if (!_mUnknown_UpdatedAt) return _mValue_UpdatedAt;
                throw new UndeferrableValueException("Value 'MemberAssociation.UpdatedAt' is not present");
            }
        }
    }

    [PolicyResourceType("aws:inspector2/memberAssociation:MemberAssociation")]
    public sealed class MemberAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// ID of the account to associate
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'MemberAssociationArgs.AccountId' is not present");
            }
        }
    }
}
