// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/hsmClientCertificate:HsmClientCertificate")]
    public sealed class HsmClientCertificate : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Hsm Client Certificate.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'HsmClientCertificate.Arn' is not present");
            }
        }

        /// <summary>
        /// The identifier of the HSM client certificate.
        /// </summary>
        [PolicyResourceProperty("hsmClientCertificateIdentifier", "_mUnknown_HsmClientCertificateIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmClientCertificateIdentifier;
        private bool _mUnknown_HsmClientCertificateIdentifier;
        public string? HsmClientCertificateIdentifier
        {
            get
            {
                if (!_mUnknown_HsmClientCertificateIdentifier) return _mValue_HsmClientCertificateIdentifier;
                throw new UndeferrableValueException("Value 'HsmClientCertificate.HsmClientCertificateIdentifier' is not present");
            }
        }

        /// <summary>
        /// The public key that the Amazon Redshift cluster will use to connect to the HSM. You must register the public key in the HSM.
        /// </summary>
        [PolicyResourceProperty("hsmClientCertificatePublicKey", "_mUnknown_HsmClientCertificatePublicKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmClientCertificatePublicKey;
        private bool _mUnknown_HsmClientCertificatePublicKey;
        public string? HsmClientCertificatePublicKey
        {
            get
            {
                if (!_mUnknown_HsmClientCertificatePublicKey) return _mValue_HsmClientCertificatePublicKey;
                throw new UndeferrableValueException("Value 'HsmClientCertificate.HsmClientCertificatePublicKey' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'HsmClientCertificate.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'HsmClientCertificate.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:redshift/hsmClientCertificate:HsmClientCertificate")]
    public sealed class HsmClientCertificateArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The identifier of the HSM client certificate.
        /// </summary>
        [PolicyResourceProperty("hsmClientCertificateIdentifier", "_mUnknown_HsmClientCertificateIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmClientCertificateIdentifier;
        private bool _mUnknown_HsmClientCertificateIdentifier;
        public string? HsmClientCertificateIdentifier
        {
            get
            {
                if (!_mUnknown_HsmClientCertificateIdentifier) return _mValue_HsmClientCertificateIdentifier;
                throw new UndeferrableValueException("Value 'HsmClientCertificateArgs.HsmClientCertificateIdentifier' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'HsmClientCertificateArgs.Tags' is not present");
            }
        }
    }
}
