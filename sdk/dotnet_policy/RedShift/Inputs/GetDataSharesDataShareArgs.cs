// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift.Inputs
{
    public sealed class GetDataSharesDataShareInputArgs
    {
        /// <summary>
        /// ARN (Amazon Resource Name) of the data share.
        /// </summary>
        [PolicyResourceProperty("dataShareArn", "_mUnknown_DataShareArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataShareArn;
        private bool _mUnknown_DataShareArn;
        public string? DataShareArn
        {
            get
            {
                if (!_mUnknown_DataShareArn) return _mValue_DataShareArn;
                throw new UndeferrableValueException("Value 'GetDataSharesDataShareInputArgs.DataShareArn' is not present");
            }
        }

        /// <summary>
        /// Identifier of a datashare to show its managing entity.
        /// </summary>
        [PolicyResourceProperty("managedBy", "_mUnknown_ManagedBy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ManagedBy;
        private bool _mUnknown_ManagedBy;
        public string? ManagedBy
        {
            get
            {
                if (!_mUnknown_ManagedBy) return _mValue_ManagedBy;
                throw new UndeferrableValueException("Value 'GetDataSharesDataShareInputArgs.ManagedBy' is not present");
            }
        }

        /// <summary>
        /// ARN (Amazon Resource Name) of the producer.
        /// </summary>
        [PolicyResourceProperty("producerArn", "_mUnknown_ProducerArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProducerArn;
        private bool _mUnknown_ProducerArn;
        public string? ProducerArn
        {
            get
            {
                if (!_mUnknown_ProducerArn) return _mValue_ProducerArn;
                throw new UndeferrableValueException("Value 'GetDataSharesDataShareInputArgs.ProducerArn' is not present");
            }
        }
    }
}
