// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/endpointAuthorization:EndpointAuthorization")]
    public sealed class EndpointAuthorization : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Web Services account ID to grant access to.
        /// </summary>
        [Input("account")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mAccount;

        public string? Account => _mAccount.GetValue("account");

        /// <summary>
        /// Indicates whether all VPCs in the grantee account are allowed access to the cluster.
        /// </summary>
        [Input("allowedAllVpcs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mAllowedAllVpcs;

        public bool? AllowedAllVpcs => _mAllowedAllVpcs.GetValue("allowedAllVpcs");

        /// <summary>
        /// The cluster identifier of the cluster to grant access to.
        /// </summary>
        [Input("clusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mClusterIdentifier;

        public string? ClusterIdentifier => _mClusterIdentifier.GetValue("clusterIdentifier");

        /// <summary>
        /// The number of Redshift-managed VPC endpoints created for the authorization.
        /// </summary>
        [Input("endpointCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mEndpointCount;

        public int? EndpointCount => _mEndpointCount.GetValue("endpointCount");

        /// <summary>
        /// Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted. Default value is `false`.
        /// </summary>
        [Input("forceDelete")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mForceDelete;

        public bool? ForceDelete => _mForceDelete.GetValue("forceDelete");

        /// <summary>
        /// The Amazon Web Services account ID of the grantee of the cluster.
        /// </summary>
        [Input("grantee")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mGrantee;

        public string? Grantee => _mGrantee.GetValue("grantee");

        /// <summary>
        /// The Amazon Web Services account ID of the cluster owner.
        /// </summary>
        [Input("grantor")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mGrantor;

        public string? Grantor => _mGrantor.GetValue("grantor");

        /// <summary>
        /// The virtual private cloud (VPC) identifiers to grant access to. If none are specified all VPCs in shared account are allowed.
        /// </summary>
        [Input("vpcIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<string>> _mVpcIds;

        public List<string>? VpcIds => _mVpcIds.GetValue("vpcIds");
    }

    [PolicyResourceType("aws:redshift/endpointAuthorization:EndpointAuthorization")]
    public sealed class EndpointAuthorizationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon Web Services account ID to grant access to.
        /// </summary>
        [Input("account")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mAccount;

        public string? Account => _mAccount.GetValue("account");

        /// <summary>
        /// The cluster identifier of the cluster to grant access to.
        /// </summary>
        [Input("clusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mClusterIdentifier;

        public string? ClusterIdentifier => _mClusterIdentifier.GetValue("clusterIdentifier");

        /// <summary>
        /// Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted. Default value is `false`.
        /// </summary>
        [Input("forceDelete")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mForceDelete;

        public bool? ForceDelete => _mForceDelete.GetValue("forceDelete");

        /// <summary>
        /// The virtual private cloud (VPC) identifiers to grant access to. If none are specified all VPCs in shared account are allowed.
        /// </summary>
        [Input("vpcIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<string>> _mVpcIds;

        public List<string>? VpcIds => _mVpcIds.GetValue("vpcIds");
    }
}
