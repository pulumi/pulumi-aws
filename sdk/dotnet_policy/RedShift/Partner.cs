// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/partner:Partner")]
    public sealed class Partner : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Web Services account ID that owns the cluster.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'Partner.AccountId' is not present");
            }
        }

        /// <summary>
        /// The cluster identifier of the cluster that receives data from the partner.
        /// </summary>
        [PolicyResourceProperty("clusterIdentifier", "_mUnknown_ClusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterIdentifier;
        private bool _mUnknown_ClusterIdentifier;
        public string? ClusterIdentifier
        {
            get
            {
                if (!_mUnknown_ClusterIdentifier) return _mValue_ClusterIdentifier;
                throw new UndeferrableValueException("Value 'Partner.ClusterIdentifier' is not present");
            }
        }

        /// <summary>
        /// The name of the database that receives data from the partner.
        /// </summary>
        [PolicyResourceProperty("databaseName", "_mUnknown_DatabaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DatabaseName;
        private bool _mUnknown_DatabaseName;
        public string? DatabaseName
        {
            get
            {
                if (!_mUnknown_DatabaseName) return _mValue_DatabaseName;
                throw new UndeferrableValueException("Value 'Partner.DatabaseName' is not present");
            }
        }

        /// <summary>
        /// The name of the partner that is authorized to send data.
        /// </summary>
        [PolicyResourceProperty("partnerName", "_mUnknown_PartnerName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PartnerName;
        private bool _mUnknown_PartnerName;
        public string? PartnerName
        {
            get
            {
                if (!_mUnknown_PartnerName) return _mValue_PartnerName;
                throw new UndeferrableValueException("Value 'Partner.PartnerName' is not present");
            }
        }

        /// <summary>
        /// (Optional) The partner integration status.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'Partner.Status' is not present");
            }
        }

        /// <summary>
        /// (Optional) The status message provided by the partner.
        /// </summary>
        [PolicyResourceProperty("statusMessage", "_mUnknown_StatusMessage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatusMessage;
        private bool _mUnknown_StatusMessage;
        public string? StatusMessage
        {
            get
            {
                if (!_mUnknown_StatusMessage) return _mValue_StatusMessage;
                throw new UndeferrableValueException("Value 'Partner.StatusMessage' is not present");
            }
        }
    }

    [PolicyResourceType("aws:redshift/partner:Partner")]
    public sealed class PartnerArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon Web Services account ID that owns the cluster.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'PartnerArgs.AccountId' is not present");
            }
        }

        /// <summary>
        /// The cluster identifier of the cluster that receives data from the partner.
        /// </summary>
        [PolicyResourceProperty("clusterIdentifier", "_mUnknown_ClusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterIdentifier;
        private bool _mUnknown_ClusterIdentifier;
        public string? ClusterIdentifier
        {
            get
            {
                if (!_mUnknown_ClusterIdentifier) return _mValue_ClusterIdentifier;
                throw new UndeferrableValueException("Value 'PartnerArgs.ClusterIdentifier' is not present");
            }
        }

        /// <summary>
        /// The name of the database that receives data from the partner.
        /// </summary>
        [PolicyResourceProperty("databaseName", "_mUnknown_DatabaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DatabaseName;
        private bool _mUnknown_DatabaseName;
        public string? DatabaseName
        {
            get
            {
                if (!_mUnknown_DatabaseName) return _mValue_DatabaseName;
                throw new UndeferrableValueException("Value 'PartnerArgs.DatabaseName' is not present");
            }
        }

        /// <summary>
        /// The name of the partner that is authorized to send data.
        /// </summary>
        [PolicyResourceProperty("partnerName", "_mUnknown_PartnerName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PartnerName;
        private bool _mUnknown_PartnerName;
        public string? PartnerName
        {
            get
            {
                if (!_mUnknown_PartnerName) return _mValue_PartnerName;
                throw new UndeferrableValueException("Value 'PartnerArgs.PartnerName' is not present");
            }
        }
    }
}
