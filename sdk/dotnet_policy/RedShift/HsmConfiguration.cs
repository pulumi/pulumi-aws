// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/hsmConfiguration:HsmConfiguration")]
    public sealed class HsmConfiguration : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Hsm Client Certificate.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A text description of the HSM configuration to be created.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The identifier to be assigned to the new Amazon Redshift HSM configuration.
        /// </summary>
        [Input("hsmConfigurationIdentifier")]
        public string? HsmConfigurationIdentifier;

        /// <summary>
        /// The IP address that the Amazon Redshift cluster must use to access the HSM.
        /// </summary>
        [Input("hsmIpAddress")]
        public string? HsmIpAddress;

        /// <summary>
        /// The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
        /// </summary>
        [Input("hsmPartitionName")]
        public string? HsmPartitionName;

        /// <summary>
        /// The password required to access the HSM partition.
        /// </summary>
        [Input("hsmPartitionPassword")]
        public string? HsmPartitionPassword;

        /// <summary>
        /// The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.
        /// </summary>
        [Input("hsmServerPublicCertificate")]
        public string? HsmServerPublicCertificate;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
