// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/hsmConfiguration:HsmConfiguration")]
    public sealed class HsmConfiguration : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Hsm Client Certificate.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'HsmConfiguration.Arn' is not present");
            }
        }

        /// <summary>
        /// A text description of the HSM configuration to be created.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'HsmConfiguration.Description' is not present");
            }
        }

        /// <summary>
        /// The identifier to be assigned to the new Amazon Redshift HSM configuration.
        /// </summary>
        [PolicyResourceProperty("hsmConfigurationIdentifier", "_mUnknown_HsmConfigurationIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmConfigurationIdentifier;
        private bool _mUnknown_HsmConfigurationIdentifier;
        public string? HsmConfigurationIdentifier
        {
            get
            {
                if (!_mUnknown_HsmConfigurationIdentifier) return _mValue_HsmConfigurationIdentifier;
                throw new UndeferrableValueException("Value 'HsmConfiguration.HsmConfigurationIdentifier' is not present");
            }
        }

        /// <summary>
        /// The IP address that the Amazon Redshift cluster must use to access the HSM.
        /// </summary>
        [PolicyResourceProperty("hsmIpAddress", "_mUnknown_HsmIpAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmIpAddress;
        private bool _mUnknown_HsmIpAddress;
        public string? HsmIpAddress
        {
            get
            {
                if (!_mUnknown_HsmIpAddress) return _mValue_HsmIpAddress;
                throw new UndeferrableValueException("Value 'HsmConfiguration.HsmIpAddress' is not present");
            }
        }

        /// <summary>
        /// The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
        /// </summary>
        [PolicyResourceProperty("hsmPartitionName", "_mUnknown_HsmPartitionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmPartitionName;
        private bool _mUnknown_HsmPartitionName;
        public string? HsmPartitionName
        {
            get
            {
                if (!_mUnknown_HsmPartitionName) return _mValue_HsmPartitionName;
                throw new UndeferrableValueException("Value 'HsmConfiguration.HsmPartitionName' is not present");
            }
        }

        /// <summary>
        /// The password required to access the HSM partition.
        /// </summary>
        [PolicyResourceProperty("hsmPartitionPassword", "_mUnknown_HsmPartitionPassword")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmPartitionPassword;
        private bool _mUnknown_HsmPartitionPassword;
        public string? HsmPartitionPassword
        {
            get
            {
                if (!_mUnknown_HsmPartitionPassword) return _mValue_HsmPartitionPassword;
                throw new UndeferrableValueException("Value 'HsmConfiguration.HsmPartitionPassword' is not present");
            }
        }

        /// <summary>
        /// The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.
        /// </summary>
        [PolicyResourceProperty("hsmServerPublicCertificate", "_mUnknown_HsmServerPublicCertificate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmServerPublicCertificate;
        private bool _mUnknown_HsmServerPublicCertificate;
        public string? HsmServerPublicCertificate
        {
            get
            {
                if (!_mUnknown_HsmServerPublicCertificate) return _mValue_HsmServerPublicCertificate;
                throw new UndeferrableValueException("Value 'HsmConfiguration.HsmServerPublicCertificate' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'HsmConfiguration.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'HsmConfiguration.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:redshift/hsmConfiguration:HsmConfiguration")]
    public sealed class HsmConfigurationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A text description of the HSM configuration to be created.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'HsmConfigurationArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The identifier to be assigned to the new Amazon Redshift HSM configuration.
        /// </summary>
        [PolicyResourceProperty("hsmConfigurationIdentifier", "_mUnknown_HsmConfigurationIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmConfigurationIdentifier;
        private bool _mUnknown_HsmConfigurationIdentifier;
        public string? HsmConfigurationIdentifier
        {
            get
            {
                if (!_mUnknown_HsmConfigurationIdentifier) return _mValue_HsmConfigurationIdentifier;
                throw new UndeferrableValueException("Value 'HsmConfigurationArgs.HsmConfigurationIdentifier' is not present");
            }
        }

        /// <summary>
        /// The IP address that the Amazon Redshift cluster must use to access the HSM.
        /// </summary>
        [PolicyResourceProperty("hsmIpAddress", "_mUnknown_HsmIpAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmIpAddress;
        private bool _mUnknown_HsmIpAddress;
        public string? HsmIpAddress
        {
            get
            {
                if (!_mUnknown_HsmIpAddress) return _mValue_HsmIpAddress;
                throw new UndeferrableValueException("Value 'HsmConfigurationArgs.HsmIpAddress' is not present");
            }
        }

        /// <summary>
        /// The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
        /// </summary>
        [PolicyResourceProperty("hsmPartitionName", "_mUnknown_HsmPartitionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmPartitionName;
        private bool _mUnknown_HsmPartitionName;
        public string? HsmPartitionName
        {
            get
            {
                if (!_mUnknown_HsmPartitionName) return _mValue_HsmPartitionName;
                throw new UndeferrableValueException("Value 'HsmConfigurationArgs.HsmPartitionName' is not present");
            }
        }

        /// <summary>
        /// The password required to access the HSM partition.
        /// </summary>
        [PolicyResourceProperty("hsmPartitionPassword", "_mUnknown_HsmPartitionPassword")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmPartitionPassword;
        private bool _mUnknown_HsmPartitionPassword;
        public string? HsmPartitionPassword
        {
            get
            {
                if (!_mUnknown_HsmPartitionPassword) return _mValue_HsmPartitionPassword;
                throw new UndeferrableValueException("Value 'HsmConfigurationArgs.HsmPartitionPassword' is not present");
            }
        }

        /// <summary>
        /// The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.
        /// </summary>
        [PolicyResourceProperty("hsmServerPublicCertificate", "_mUnknown_HsmServerPublicCertificate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HsmServerPublicCertificate;
        private bool _mUnknown_HsmServerPublicCertificate;
        public string? HsmServerPublicCertificate
        {
            get
            {
                if (!_mUnknown_HsmServerPublicCertificate) return _mValue_HsmServerPublicCertificate;
                throw new UndeferrableValueException("Value 'HsmConfigurationArgs.HsmServerPublicCertificate' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'HsmConfigurationArgs.Tags' is not present");
            }
        }
    }
}
