// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/snapshotSchedule:SnapshotSchedule")]
    public sealed class SnapshotSchedule : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Redshift Snapshot Schedule.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The definition of the snapshot schedule. The definition is made up of schedule expressions, for example `cron(30 12 *)` or `rate(12 hours)`.
        /// </summary>
        [Input("definitions")]
        public List<string>? Definitions;

        /// <summary>
        /// The description of the snapshot schedule.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Whether to destroy all associated clusters with this snapshot schedule on deletion. Must be enabled and applied before attempting deletion.
        /// </summary>
        [Input("forceDestroy")]
        public bool? ForceDestroy;

        /// <summary>
        /// The snapshot schedule identifier. If omitted, this provider will assign a random, unique identifier.
        /// </summary>
        [Input("identifier")]
        public string? Identifier;

        /// <summary>
        /// Creates a unique
        /// identifier beginning with the specified prefix. Conflicts with `identifier`.
        /// </summary>
        [Input("identifierPrefix")]
        public string? IdentifierPrefix;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
