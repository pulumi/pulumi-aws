// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/usageLimit:UsageLimit")]
    public sealed class UsageLimit : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB). The value must be a positive number.
        /// </summary>
        [Input("amount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mAmount;

        public int? Amount => _mAmount.GetValue("amount");

        /// <summary>
        /// Amazon Resource Name (ARN) of the Redshift Usage Limit.
        /// </summary>
        [Input("arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mArn;

        public string? Arn => _mArn.GetValue("arn");

        /// <summary>
        /// The action that Amazon Redshift takes when the limit is reached. The default is `log`. Valid values are `log`, `emit-metric`, and `disable`.
        /// </summary>
        [Input("breachAction")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mBreachAction;

        public string? BreachAction => _mBreachAction.GetValue("breachAction");

        /// <summary>
        /// The identifier of the cluster that you want to limit usage.
        /// </summary>
        [Input("clusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mClusterIdentifier;

        public string? ClusterIdentifier => _mClusterIdentifier.GetValue("clusterIdentifier");

        /// <summary>
        /// The Amazon Redshift feature that you want to limit. Valid values are `spectrum`, `concurrency-scaling`, and `cross-region-datasharing`.
        /// </summary>
        [Input("featureType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mFeatureType;

        public string? FeatureType => _mFeatureType.GetValue("featureType");

        /// <summary>
        /// The type of limit. Depending on the feature type, this can be based on a time duration or data size. If FeatureType is `spectrum`, then LimitType must be `data-scanned`. If FeatureType is `concurrency-scaling`, then LimitType must be `time`. If FeatureType is `cross-region-datasharing`, then LimitType must be `data-scanned`. Valid values are `data-scanned`, and `time`.
        /// </summary>
        [Input("limitType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLimitType;

        public string? LimitType => _mLimitType.GetValue("limitType");

        /// <summary>
        /// The time period that the amount applies to. A weekly period begins on Sunday. The default is `monthly`. Valid values are `daily`, `weekly`, and `monthly`.
        /// </summary>
        [Input("period")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mPeriod;

        public string? Period => _mPeriod.GetValue("period");

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTags;

        public Dictionary<string, string>? Tags => _mTags.GetValue("tags");

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTagsAll;

        public Dictionary<string, string>? TagsAll => _mTagsAll.GetValue("tagsAll");
    }

    [PolicyResourceType("aws:redshift/usageLimit:UsageLimit")]
    public sealed class UsageLimitArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB). The value must be a positive number.
        /// </summary>
        [Input("amount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mAmount;

        public int? Amount => _mAmount.GetValue("amount");

        /// <summary>
        /// The action that Amazon Redshift takes when the limit is reached. The default is `log`. Valid values are `log`, `emit-metric`, and `disable`.
        /// </summary>
        [Input("breachAction")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mBreachAction;

        public string? BreachAction => _mBreachAction.GetValue("breachAction");

        /// <summary>
        /// The identifier of the cluster that you want to limit usage.
        /// </summary>
        [Input("clusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mClusterIdentifier;

        public string? ClusterIdentifier => _mClusterIdentifier.GetValue("clusterIdentifier");

        /// <summary>
        /// The Amazon Redshift feature that you want to limit. Valid values are `spectrum`, `concurrency-scaling`, and `cross-region-datasharing`.
        /// </summary>
        [Input("featureType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mFeatureType;

        public string? FeatureType => _mFeatureType.GetValue("featureType");

        /// <summary>
        /// The type of limit. Depending on the feature type, this can be based on a time duration or data size. If FeatureType is `spectrum`, then LimitType must be `data-scanned`. If FeatureType is `concurrency-scaling`, then LimitType must be `time`. If FeatureType is `cross-region-datasharing`, then LimitType must be `data-scanned`. Valid values are `data-scanned`, and `time`.
        /// </summary>
        [Input("limitType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLimitType;

        public string? LimitType => _mLimitType.GetValue("limitType");

        /// <summary>
        /// The time period that the amount applies to. A weekly period begins on Sunday. The default is `monthly`. Valid values are `daily`, `weekly`, and `monthly`.
        /// </summary>
        [Input("period")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mPeriod;

        public string? Period => _mPeriod.GetValue("period");

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTags;

        public Dictionary<string, string>? Tags => _mTags.GetValue("tags");
    }
}
