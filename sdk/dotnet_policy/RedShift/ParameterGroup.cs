// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedShift
{
    [PolicyResourceType("aws:redshift/parameterGroup:ParameterGroup")]
    public sealed class ParameterGroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of parameter group
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The description of the Redshift parameter group. Defaults to "Managed by Pulumi".
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The family of the Redshift parameter group.
        /// </summary>
        [Input("family")]
        public string? Family;

        /// <summary>
        /// The name of the Redshift parameter.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// A list of Redshift parameters to apply.
        /// </summary>
        [Input("parameters")]
        public List<ParameterGroupParameter>? Parameters;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// You can read more about the parameters that Redshift supports in the [documentation](http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
