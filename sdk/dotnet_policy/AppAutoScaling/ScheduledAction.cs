// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppAutoScaling
{
    [PolicyResourceType("aws:appautoscaling/scheduledAction:ScheduledAction")]
    public sealed class ScheduledAction : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the scheduled action.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ScheduledAction.Arn' is not present");
            }
        }

        /// <summary>
        /// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
        /// </summary>
        [PolicyResourceProperty("endTime", "_mUnknown_EndTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EndTime;
        private bool _mUnknown_EndTime;
        public string? EndTime
        {
            get
            {
                if (!_mUnknown_EndTime) return _mValue_EndTime;
                throw new UndeferrableValueException("Value 'ScheduledAction.EndTime' is not present");
            }
        }

        /// <summary>
        /// Name of the scheduled action.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ScheduledAction.Name' is not present");
            }
        }

        /// <summary>
        /// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'ScheduledAction.ResourceId' is not present");
            }
        }

        /// <summary>
        /// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
        /// </summary>
        [PolicyResourceProperty("scalableDimension", "_mUnknown_ScalableDimension")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ScalableDimension;
        private bool _mUnknown_ScalableDimension;
        public string? ScalableDimension
        {
            get
            {
                if (!_mUnknown_ScalableDimension) return _mValue_ScalableDimension;
                throw new UndeferrableValueException("Value 'ScheduledAction.ScalableDimension' is not present");
            }
        }

        /// <summary>
        /// New minimum and maximum capacity. You can set both values or just one. See below
        /// </summary>
        [PolicyResourceProperty("scalableTargetAction", "_mUnknown_ScalableTargetAction")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ScheduledActionScalableTargetAction? _mValue_ScalableTargetAction;
        private bool _mUnknown_ScalableTargetAction;
        public Outputs.ScheduledActionScalableTargetAction? ScalableTargetAction
        {
            get
            {
                if (!_mUnknown_ScalableTargetAction) return _mValue_ScalableTargetAction;
                throw new UndeferrableValueException("Value 'ScheduledAction.ScalableTargetAction' is not present");
            }
        }

        /// <summary>
        /// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
        /// </summary>
        [PolicyResourceProperty("schedule", "_mUnknown_Schedule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Schedule;
        private bool _mUnknown_Schedule;
        public string? Schedule
        {
            get
            {
                if (!_mUnknown_Schedule) return _mValue_Schedule;
                throw new UndeferrableValueException("Value 'ScheduledAction.Schedule' is not present");
            }
        }

        /// <summary>
        /// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
        /// </summary>
        [PolicyResourceProperty("serviceNamespace", "_mUnknown_ServiceNamespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceNamespace;
        private bool _mUnknown_ServiceNamespace;
        public string? ServiceNamespace
        {
            get
            {
                if (!_mUnknown_ServiceNamespace) return _mValue_ServiceNamespace;
                throw new UndeferrableValueException("Value 'ScheduledAction.ServiceNamespace' is not present");
            }
        }

        /// <summary>
        /// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
        /// </summary>
        [PolicyResourceProperty("startTime", "_mUnknown_StartTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StartTime;
        private bool _mUnknown_StartTime;
        public string? StartTime
        {
            get
            {
                if (!_mUnknown_StartTime) return _mValue_StartTime;
                throw new UndeferrableValueException("Value 'ScheduledAction.StartTime' is not present");
            }
        }

        /// <summary>
        /// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `start_time` and `end_time`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
        /// </summary>
        [PolicyResourceProperty("timezone", "_mUnknown_Timezone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Timezone;
        private bool _mUnknown_Timezone;
        public string? Timezone
        {
            get
            {
                if (!_mUnknown_Timezone) return _mValue_Timezone;
                throw new UndeferrableValueException("Value 'ScheduledAction.Timezone' is not present");
            }
        }
    }

    [PolicyResourceType("aws:appautoscaling/scheduledAction:ScheduledAction")]
    public sealed class ScheduledActionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
        /// </summary>
        [PolicyResourceProperty("endTime", "_mUnknown_EndTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EndTime;
        private bool _mUnknown_EndTime;
        public string? EndTime
        {
            get
            {
                if (!_mUnknown_EndTime) return _mValue_EndTime;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.EndTime' is not present");
            }
        }

        /// <summary>
        /// Name of the scheduled action.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.ResourceId' is not present");
            }
        }

        /// <summary>
        /// Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
        /// </summary>
        [PolicyResourceProperty("scalableDimension", "_mUnknown_ScalableDimension")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ScalableDimension;
        private bool _mUnknown_ScalableDimension;
        public string? ScalableDimension
        {
            get
            {
                if (!_mUnknown_ScalableDimension) return _mValue_ScalableDimension;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.ScalableDimension' is not present");
            }
        }

        /// <summary>
        /// New minimum and maximum capacity. You can set both values or just one. See below
        /// </summary>
        [PolicyResourceProperty("scalableTargetAction", "_mUnknown_ScalableTargetAction")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ScheduledActionScalableTargetActionArgs? _mValue_ScalableTargetAction;
        private bool _mUnknown_ScalableTargetAction;
        public Inputs.ScheduledActionScalableTargetActionArgs? ScalableTargetAction
        {
            get
            {
                if (!_mUnknown_ScalableTargetAction) return _mValue_ScalableTargetAction;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.ScalableTargetAction' is not present");
            }
        }

        /// <summary>
        /// Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
        /// </summary>
        [PolicyResourceProperty("schedule", "_mUnknown_Schedule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Schedule;
        private bool _mUnknown_Schedule;
        public string? Schedule
        {
            get
            {
                if (!_mUnknown_Schedule) return _mValue_Schedule;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.Schedule' is not present");
            }
        }

        /// <summary>
        /// Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
        /// </summary>
        [PolicyResourceProperty("serviceNamespace", "_mUnknown_ServiceNamespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceNamespace;
        private bool _mUnknown_ServiceNamespace;
        public string? ServiceNamespace
        {
            get
            {
                if (!_mUnknown_ServiceNamespace) return _mValue_ServiceNamespace;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.ServiceNamespace' is not present");
            }
        }

        /// <summary>
        /// Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
        /// </summary>
        [PolicyResourceProperty("startTime", "_mUnknown_StartTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StartTime;
        private bool _mUnknown_StartTime;
        public string? StartTime
        {
            get
            {
                if (!_mUnknown_StartTime) return _mValue_StartTime;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.StartTime' is not present");
            }
        }

        /// <summary>
        /// Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `start_time` and `end_time`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
        /// </summary>
        [PolicyResourceProperty("timezone", "_mUnknown_Timezone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Timezone;
        private bool _mUnknown_Timezone;
        public string? Timezone
        {
            get
            {
                if (!_mUnknown_Timezone) return _mValue_Timezone;
                throw new UndeferrableValueException("Value 'ScheduledActionArgs.Timezone' is not present");
            }
        }
    }
}
