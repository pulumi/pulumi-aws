// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppAutoScaling.Inputs
{
    public sealed class PolicyTargetTrackingScalingPolicyConfigurationArgs
    {
        /// <summary>
        /// Custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
        /// </summary>
        [PolicyResourceProperty("customizedMetricSpecification", "_mUnknown_CustomizedMetricSpecification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs? _mValue_CustomizedMetricSpecification;
        private bool _mUnknown_CustomizedMetricSpecification;
        public Inputs.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs? CustomizedMetricSpecification
        {
            get
            {
                if (!_mUnknown_CustomizedMetricSpecification) return _mValue_CustomizedMetricSpecification;
                throw new UndeferrableValueException("Value 'PolicyTargetTrackingScalingPolicyConfigurationArgs.CustomizedMetricSpecification' is not present");
            }
        }

        /// <summary>
        /// Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
        /// </summary>
        [PolicyResourceProperty("disableScaleIn", "_mUnknown_DisableScaleIn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_DisableScaleIn;
        private bool _mUnknown_DisableScaleIn;
        public bool? DisableScaleIn
        {
            get
            {
                if (!_mUnknown_DisableScaleIn) return _mValue_DisableScaleIn;
                throw new UndeferrableValueException("Value 'PolicyTargetTrackingScalingPolicyConfigurationArgs.DisableScaleIn' is not present");
            }
        }

        /// <summary>
        /// Predefined metric. See supported fields below.
        /// </summary>
        [PolicyResourceProperty("predefinedMetricSpecification", "_mUnknown_PredefinedMetricSpecification")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs? _mValue_PredefinedMetricSpecification;
        private bool _mUnknown_PredefinedMetricSpecification;
        public Inputs.PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs? PredefinedMetricSpecification
        {
            get
            {
                if (!_mUnknown_PredefinedMetricSpecification) return _mValue_PredefinedMetricSpecification;
                throw new UndeferrableValueException("Value 'PolicyTargetTrackingScalingPolicyConfigurationArgs.PredefinedMetricSpecification' is not present");
            }
        }

        /// <summary>
        /// Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
        /// </summary>
        [PolicyResourceProperty("scaleInCooldown", "_mUnknown_ScaleInCooldown")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ScaleInCooldown;
        private bool _mUnknown_ScaleInCooldown;
        public int? ScaleInCooldown
        {
            get
            {
                if (!_mUnknown_ScaleInCooldown) return _mValue_ScaleInCooldown;
                throw new UndeferrableValueException("Value 'PolicyTargetTrackingScalingPolicyConfigurationArgs.ScaleInCooldown' is not present");
            }
        }

        /// <summary>
        /// Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
        /// </summary>
        [PolicyResourceProperty("scaleOutCooldown", "_mUnknown_ScaleOutCooldown")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ScaleOutCooldown;
        private bool _mUnknown_ScaleOutCooldown;
        public int? ScaleOutCooldown
        {
            get
            {
                if (!_mUnknown_ScaleOutCooldown) return _mValue_ScaleOutCooldown;
                throw new UndeferrableValueException("Value 'PolicyTargetTrackingScalingPolicyConfigurationArgs.ScaleOutCooldown' is not present");
            }
        }

        /// <summary>
        /// Target value for the metric.
        /// </summary>
        [PolicyResourceProperty("targetValue", "_mUnknown_TargetValue")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_TargetValue;
        private bool _mUnknown_TargetValue;
        public double? TargetValue
        {
            get
            {
                if (!_mUnknown_TargetValue) return _mValue_TargetValue;
                throw new UndeferrableValueException("Value 'PolicyTargetTrackingScalingPolicyConfigurationArgs.TargetValue' is not present");
            }
        }
    }
}
