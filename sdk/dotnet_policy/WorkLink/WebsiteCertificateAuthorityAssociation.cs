// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.WorkLink
{
    [PolicyResourceType("aws:worklink/websiteCertificateAuthorityAssociation:WebsiteCertificateAuthorityAssociation")]
    public sealed class WebsiteCertificateAuthorityAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The root certificate of the Certificate Authority.
        /// </summary>
        [PolicyResourceProperty("certificate", "_mUnknown_Certificate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Certificate;
        private bool _mUnknown_Certificate;
        public string? Certificate
        {
            get
            {
                if (!_mUnknown_Certificate) return _mValue_Certificate;
                throw new UndeferrableValueException("Value 'WebsiteCertificateAuthorityAssociation.Certificate' is not present");
            }
        }

        /// <summary>
        /// The certificate name to display.
        /// </summary>
        [PolicyResourceProperty("displayName", "_mUnknown_DisplayName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DisplayName;
        private bool _mUnknown_DisplayName;
        public string? DisplayName
        {
            get
            {
                if (!_mUnknown_DisplayName) return _mValue_DisplayName;
                throw new UndeferrableValueException("Value 'WebsiteCertificateAuthorityAssociation.DisplayName' is not present");
            }
        }

        /// <summary>
        /// The ARN of the fleet.
        /// </summary>
        [PolicyResourceProperty("fleetArn", "_mUnknown_FleetArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FleetArn;
        private bool _mUnknown_FleetArn;
        public string? FleetArn
        {
            get
            {
                if (!_mUnknown_FleetArn) return _mValue_FleetArn;
                throw new UndeferrableValueException("Value 'WebsiteCertificateAuthorityAssociation.FleetArn' is not present");
            }
        }

        /// <summary>
        /// A unique identifier for the Certificate Authority.
        /// </summary>
        [PolicyResourceProperty("websiteCaId", "_mUnknown_WebsiteCaId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WebsiteCaId;
        private bool _mUnknown_WebsiteCaId;
        public string? WebsiteCaId
        {
            get
            {
                if (!_mUnknown_WebsiteCaId) return _mValue_WebsiteCaId;
                throw new UndeferrableValueException("Value 'WebsiteCertificateAuthorityAssociation.WebsiteCaId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:worklink/websiteCertificateAuthorityAssociation:WebsiteCertificateAuthorityAssociation")]
    public sealed class WebsiteCertificateAuthorityAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The root certificate of the Certificate Authority.
        /// </summary>
        [PolicyResourceProperty("certificate", "_mUnknown_Certificate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Certificate;
        private bool _mUnknown_Certificate;
        public string? Certificate
        {
            get
            {
                if (!_mUnknown_Certificate) return _mValue_Certificate;
                throw new UndeferrableValueException("Value 'WebsiteCertificateAuthorityAssociationArgs.Certificate' is not present");
            }
        }

        /// <summary>
        /// The certificate name to display.
        /// </summary>
        [PolicyResourceProperty("displayName", "_mUnknown_DisplayName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DisplayName;
        private bool _mUnknown_DisplayName;
        public string? DisplayName
        {
            get
            {
                if (!_mUnknown_DisplayName) return _mValue_DisplayName;
                throw new UndeferrableValueException("Value 'WebsiteCertificateAuthorityAssociationArgs.DisplayName' is not present");
            }
        }

        /// <summary>
        /// The ARN of the fleet.
        /// </summary>
        [PolicyResourceProperty("fleetArn", "_mUnknown_FleetArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FleetArn;
        private bool _mUnknown_FleetArn;
        public string? FleetArn
        {
            get
            {
                if (!_mUnknown_FleetArn) return _mValue_FleetArn;
                throw new UndeferrableValueException("Value 'WebsiteCertificateAuthorityAssociationArgs.FleetArn' is not present");
            }
        }
    }
}
