// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Eks.Outputs
{
    public sealed class GetClusterOutpostConfigResult
    {
        /// <summary>
        /// The Amazon EC2 instance type for all Kubernetes control plane instances.
        /// </summary>
        [PolicyResourceProperty("controlPlaneInstanceType", "_mUnknown_ControlPlaneInstanceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ControlPlaneInstanceType;
        private bool _mUnknown_ControlPlaneInstanceType;
        public string? ControlPlaneInstanceType
        {
            get
            {
                if (!_mUnknown_ControlPlaneInstanceType) return _mValue_ControlPlaneInstanceType;
                throw new UndeferrableValueException("Value 'GetClusterOutpostConfigResult.ControlPlaneInstanceType' is not present");
            }
        }

        /// <summary>
        /// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
        /// </summary>
        [PolicyResourceProperty("controlPlanePlacements", "_mUnknown_ControlPlanePlacements")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetClusterOutpostConfigControlPlanePlacementResult>? _mValue_ControlPlanePlacements;
        private bool _mUnknown_ControlPlanePlacements;
        public List<Outputs.GetClusterOutpostConfigControlPlanePlacementResult>? ControlPlanePlacements
        {
            get
            {
                if (!_mUnknown_ControlPlanePlacements) return _mValue_ControlPlanePlacements;
                throw new UndeferrableValueException("Value 'GetClusterOutpostConfigResult.ControlPlanePlacements' is not present");
            }
        }

        /// <summary>
        /// List of ARNs of the Outposts hosting the EKS cluster. Only a single ARN is supported currently.
        /// </summary>
        [PolicyResourceProperty("outpostArns", "_mUnknown_OutpostArns")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_OutpostArns;
        private bool _mUnknown_OutpostArns;
        public List<string>? OutpostArns
        {
            get
            {
                if (!_mUnknown_OutpostArns) return _mValue_OutpostArns;
                throw new UndeferrableValueException("Value 'GetClusterOutpostConfigResult.OutpostArns' is not present");
            }
        }
    }
}
