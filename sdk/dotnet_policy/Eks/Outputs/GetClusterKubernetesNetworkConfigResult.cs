// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Eks.Outputs
{
    public sealed class GetClusterKubernetesNetworkConfigResult
    {
        /// <summary>
        /// Contains Elastic Load Balancing configuration for EKS Auto Mode enabled cluster.
        /// </summary>
        [PolicyResourceProperty("elasticLoadBalancings", "_mUnknown_ElasticLoadBalancings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetClusterKubernetesNetworkConfigElasticLoadBalancingResult>? _mValue_ElasticLoadBalancings;
        private bool _mUnknown_ElasticLoadBalancings;
        public List<Outputs.GetClusterKubernetesNetworkConfigElasticLoadBalancingResult>? ElasticLoadBalancings
        {
            get
            {
                if (!_mUnknown_ElasticLoadBalancings) return _mValue_ElasticLoadBalancings;
                throw new UndeferrableValueException("Value 'GetClusterKubernetesNetworkConfigResult.ElasticLoadBalancings' is not present");
            }
        }

        /// <summary>
        /// `ipv4` or `ipv6`.
        /// </summary>
        [PolicyResourceProperty("ipFamily", "_mUnknown_IpFamily")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpFamily;
        private bool _mUnknown_IpFamily;
        public string? IpFamily
        {
            get
            {
                if (!_mUnknown_IpFamily) return _mValue_IpFamily;
                throw new UndeferrableValueException("Value 'GetClusterKubernetesNetworkConfigResult.IpFamily' is not present");
            }
        }

        /// <summary>
        /// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv4` was specified when the cluster was created.
        /// </summary>
        [PolicyResourceProperty("serviceIpv4Cidr", "_mUnknown_ServiceIpv4Cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceIpv4Cidr;
        private bool _mUnknown_ServiceIpv4Cidr;
        public string? ServiceIpv4Cidr
        {
            get
            {
                if (!_mUnknown_ServiceIpv4Cidr) return _mValue_ServiceIpv4Cidr;
                throw new UndeferrableValueException("Value 'GetClusterKubernetesNetworkConfigResult.ServiceIpv4Cidr' is not present");
            }
        }

        /// <summary>
        /// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was created. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
        /// </summary>
        [PolicyResourceProperty("serviceIpv6Cidr", "_mUnknown_ServiceIpv6Cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceIpv6Cidr;
        private bool _mUnknown_ServiceIpv6Cidr;
        public string? ServiceIpv6Cidr
        {
            get
            {
                if (!_mUnknown_ServiceIpv6Cidr) return _mValue_ServiceIpv6Cidr;
                throw new UndeferrableValueException("Value 'GetClusterKubernetesNetworkConfigResult.ServiceIpv6Cidr' is not present");
            }
        }
    }
}
