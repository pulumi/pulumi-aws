// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Eks.Outputs
{
    public sealed class GetClusterVersionsClusterVersionResult
    {
        /// <summary>
        /// Type of clusters to filter by.
        /// Currently, the only valid value is `eks`.
        /// </summary>
        [PolicyResourceProperty("clusterType", "_mUnknown_ClusterType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterType;
        private bool _mUnknown_ClusterType;
        public string? ClusterType
        {
            get
            {
                if (!_mUnknown_ClusterType) return _mValue_ClusterType;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.ClusterType' is not present");
            }
        }

        /// <summary>
        /// Kubernetes version supported by EKS.
        /// </summary>
        [PolicyResourceProperty("clusterVersion", "_mUnknown_ClusterVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterVersion;
        private bool _mUnknown_ClusterVersion;
        public string? ClusterVersion
        {
            get
            {
                if (!_mUnknown_ClusterVersion) return _mValue_ClusterVersion;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.ClusterVersion' is not present");
            }
        }

        /// <summary>
        /// Default eks platform version for the cluster version.
        /// </summary>
        [PolicyResourceProperty("defaultPlatformVersion", "_mUnknown_DefaultPlatformVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultPlatformVersion;
        private bool _mUnknown_DefaultPlatformVersion;
        public string? DefaultPlatformVersion
        {
            get
            {
                if (!_mUnknown_DefaultPlatformVersion) return _mValue_DefaultPlatformVersion;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.DefaultPlatformVersion' is not present");
            }
        }

        /// <summary>
        /// Default Kubernetes version for the cluster version.
        /// </summary>
        [PolicyResourceProperty("defaultVersion", "_mUnknown_DefaultVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_DefaultVersion;
        private bool _mUnknown_DefaultVersion;
        public bool? DefaultVersion
        {
            get
            {
                if (!_mUnknown_DefaultVersion) return _mValue_DefaultVersion;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.DefaultVersion' is not present");
            }
        }

        /// <summary>
        /// End of extended support date for the cluster version.
        /// </summary>
        [PolicyResourceProperty("endOfExtendedSupportDate", "_mUnknown_EndOfExtendedSupportDate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EndOfExtendedSupportDate;
        private bool _mUnknown_EndOfExtendedSupportDate;
        public string? EndOfExtendedSupportDate
        {
            get
            {
                if (!_mUnknown_EndOfExtendedSupportDate) return _mValue_EndOfExtendedSupportDate;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.EndOfExtendedSupportDate' is not present");
            }
        }

        /// <summary>
        /// End of standard support date for the cluster version.
        /// </summary>
        [PolicyResourceProperty("endOfStandardSupportDate", "_mUnknown_EndOfStandardSupportDate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EndOfStandardSupportDate;
        private bool _mUnknown_EndOfStandardSupportDate;
        public string? EndOfStandardSupportDate
        {
            get
            {
                if (!_mUnknown_EndOfStandardSupportDate) return _mValue_EndOfStandardSupportDate;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.EndOfStandardSupportDate' is not present");
            }
        }

        /// <summary>
        /// Kubernetes patch version for the cluster version.
        /// </summary>
        [PolicyResourceProperty("kubernetesPatchVersion", "_mUnknown_KubernetesPatchVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KubernetesPatchVersion;
        private bool _mUnknown_KubernetesPatchVersion;
        public string? KubernetesPatchVersion
        {
            get
            {
                if (!_mUnknown_KubernetesPatchVersion) return _mValue_KubernetesPatchVersion;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.KubernetesPatchVersion' is not present");
            }
        }

        /// <summary>
        /// Release date of the cluster version.
        /// </summary>
        [PolicyResourceProperty("releaseDate", "_mUnknown_ReleaseDate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReleaseDate;
        private bool _mUnknown_ReleaseDate;
        public string? ReleaseDate
        {
            get
            {
                if (!_mUnknown_ReleaseDate) return _mValue_ReleaseDate;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.ReleaseDate' is not present");
            }
        }

        /// <summary>
        /// Status of the EKS cluster versions to list.
        /// Valid values are `STANDARD_SUPPORT` or `UNSUPPORTED` or `EXTENDED_SUPPORT`.
        /// </summary>
        [PolicyResourceProperty("versionStatus", "_mUnknown_VersionStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VersionStatus;
        private bool _mUnknown_VersionStatus;
        public string? VersionStatus
        {
            get
            {
                if (!_mUnknown_VersionStatus) return _mValue_VersionStatus;
                throw new UndeferrableValueException("Value 'GetClusterVersionsClusterVersionResult.VersionStatus' is not present");
            }
        }
    }
}
