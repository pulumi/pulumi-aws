// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Eks.Outputs
{
    public sealed class NodeGroupScalingConfig
    {
        /// <summary>
        /// Desired number of worker nodes.
        /// </summary>
        [PolicyResourceProperty("desiredSize", "_mUnknown_DesiredSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_DesiredSize;
        private bool _mUnknown_DesiredSize;
        public int? DesiredSize
        {
            get
            {
                if (!_mUnknown_DesiredSize) return _mValue_DesiredSize;
                throw new UndeferrableValueException("Value 'NodeGroupScalingConfig.DesiredSize' is not present");
            }
        }

        /// <summary>
        /// Maximum number of worker nodes.
        /// </summary>
        [PolicyResourceProperty("maxSize", "_mUnknown_MaxSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxSize;
        private bool _mUnknown_MaxSize;
        public int? MaxSize
        {
            get
            {
                if (!_mUnknown_MaxSize) return _mValue_MaxSize;
                throw new UndeferrableValueException("Value 'NodeGroupScalingConfig.MaxSize' is not present");
            }
        }

        /// <summary>
        /// Minimum number of worker nodes.
        /// </summary>
        [PolicyResourceProperty("minSize", "_mUnknown_MinSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MinSize;
        private bool _mUnknown_MinSize;
        public int? MinSize
        {
            get
            {
                if (!_mUnknown_MinSize) return _mValue_MinSize;
                throw new UndeferrableValueException("Value 'NodeGroupScalingConfig.MinSize' is not present");
            }
        }
    }
}
