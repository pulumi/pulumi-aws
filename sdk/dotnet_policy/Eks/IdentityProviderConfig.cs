// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Eks
{
    [PolicyResourceType("aws:eks/identityProviderConfig:IdentityProviderConfig")]
    public sealed class IdentityProviderConfig : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the EKS Identity Provider Configuration.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'IdentityProviderConfig.Arn' is not present");
            }
        }

        /// <summary>
        /// Name of the EKS Cluster.
        /// </summary>
        [PolicyResourceProperty("clusterName", "_mUnknown_ClusterName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterName;
        private bool _mUnknown_ClusterName;
        public string? ClusterName
        {
            get
            {
                if (!_mUnknown_ClusterName) return _mValue_ClusterName;
                throw new UndeferrableValueException("Value 'IdentityProviderConfig.ClusterName' is not present");
            }
        }

        /// <summary>
        /// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
        /// </summary>
        [PolicyResourceProperty("oidc", "_mUnknown_Oidc")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.IdentityProviderConfigOidc? _mValue_Oidc;
        private bool _mUnknown_Oidc;
        public Outputs.IdentityProviderConfigOidc? Oidc
        {
            get
            {
                if (!_mUnknown_Oidc) return _mValue_Oidc;
                throw new UndeferrableValueException("Value 'IdentityProviderConfig.Oidc' is not present");
            }
        }

        /// <summary>
        /// Status of the EKS Identity Provider Configuration.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'IdentityProviderConfig.Status' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'IdentityProviderConfig.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'IdentityProviderConfig.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:eks/identityProviderConfig:IdentityProviderConfig")]
    public sealed class IdentityProviderConfigArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the EKS Cluster.
        /// </summary>
        [PolicyResourceProperty("clusterName", "_mUnknown_ClusterName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterName;
        private bool _mUnknown_ClusterName;
        public string? ClusterName
        {
            get
            {
                if (!_mUnknown_ClusterName) return _mValue_ClusterName;
                throw new UndeferrableValueException("Value 'IdentityProviderConfigArgs.ClusterName' is not present");
            }
        }

        /// <summary>
        /// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
        /// </summary>
        [PolicyResourceProperty("oidc", "_mUnknown_Oidc")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.IdentityProviderConfigOidcArgs? _mValue_Oidc;
        private bool _mUnknown_Oidc;
        public Inputs.IdentityProviderConfigOidcArgs? Oidc
        {
            get
            {
                if (!_mUnknown_Oidc) return _mValue_Oidc;
                throw new UndeferrableValueException("Value 'IdentityProviderConfigArgs.Oidc' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'IdentityProviderConfigArgs.Tags' is not present");
            }
        }
    }
}
