// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Eks
{
    [PolicyResourceType("aws:eks/fargateProfile:FargateProfile")]
    public sealed class FargateProfile : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the EKS Fargate Profile.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'FargateProfile.Arn' is not present");
            }
        }

        /// <summary>
        /// Name of the EKS Cluster.
        /// </summary>
        [PolicyResourceProperty("clusterName", "_mUnknown_ClusterName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterName;
        private bool _mUnknown_ClusterName;
        public string? ClusterName
        {
            get
            {
                if (!_mUnknown_ClusterName) return _mValue_ClusterName;
                throw new UndeferrableValueException("Value 'FargateProfile.ClusterName' is not present");
            }
        }

        /// <summary>
        /// Name of the EKS Fargate Profile.
        /// </summary>
        [PolicyResourceProperty("fargateProfileName", "_mUnknown_FargateProfileName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FargateProfileName;
        private bool _mUnknown_FargateProfileName;
        public string? FargateProfileName
        {
            get
            {
                if (!_mUnknown_FargateProfileName) return _mValue_FargateProfileName;
                throw new UndeferrableValueException("Value 'FargateProfile.FargateProfileName' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
        /// </summary>
        [PolicyResourceProperty("podExecutionRoleArn", "_mUnknown_PodExecutionRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PodExecutionRoleArn;
        private bool _mUnknown_PodExecutionRoleArn;
        public string? PodExecutionRoleArn
        {
            get
            {
                if (!_mUnknown_PodExecutionRoleArn) return _mValue_PodExecutionRoleArn;
                throw new UndeferrableValueException("Value 'FargateProfile.PodExecutionRoleArn' is not present");
            }
        }

        /// <summary>
        /// Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
        /// </summary>
        [PolicyResourceProperty("selectors", "_mUnknown_Selectors")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.FargateProfileSelector>? _mValue_Selectors;
        private bool _mUnknown_Selectors;
        public List<Outputs.FargateProfileSelector>? Selectors
        {
            get
            {
                if (!_mUnknown_Selectors) return _mValue_Selectors;
                throw new UndeferrableValueException("Value 'FargateProfile.Selectors' is not present");
            }
        }

        /// <summary>
        /// Status of the EKS Fargate Profile.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'FargateProfile.Status' is not present");
            }
        }

        /// <summary>
        /// Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'FargateProfile.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FargateProfile.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'FargateProfile.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:eks/fargateProfile:FargateProfile")]
    public sealed class FargateProfileArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the EKS Cluster.
        /// </summary>
        [PolicyResourceProperty("clusterName", "_mUnknown_ClusterName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterName;
        private bool _mUnknown_ClusterName;
        public string? ClusterName
        {
            get
            {
                if (!_mUnknown_ClusterName) return _mValue_ClusterName;
                throw new UndeferrableValueException("Value 'FargateProfileArgs.ClusterName' is not present");
            }
        }

        /// <summary>
        /// Name of the EKS Fargate Profile.
        /// </summary>
        [PolicyResourceProperty("fargateProfileName", "_mUnknown_FargateProfileName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FargateProfileName;
        private bool _mUnknown_FargateProfileName;
        public string? FargateProfileName
        {
            get
            {
                if (!_mUnknown_FargateProfileName) return _mValue_FargateProfileName;
                throw new UndeferrableValueException("Value 'FargateProfileArgs.FargateProfileName' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
        /// </summary>
        [PolicyResourceProperty("podExecutionRoleArn", "_mUnknown_PodExecutionRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PodExecutionRoleArn;
        private bool _mUnknown_PodExecutionRoleArn;
        public string? PodExecutionRoleArn
        {
            get
            {
                if (!_mUnknown_PodExecutionRoleArn) return _mValue_PodExecutionRoleArn;
                throw new UndeferrableValueException("Value 'FargateProfileArgs.PodExecutionRoleArn' is not present");
            }
        }

        /// <summary>
        /// Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
        /// </summary>
        [PolicyResourceProperty("selectors", "_mUnknown_Selectors")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.FargateProfileSelectorArgs>? _mValue_Selectors;
        private bool _mUnknown_Selectors;
        public List<Inputs.FargateProfileSelectorArgs>? Selectors
        {
            get
            {
                if (!_mUnknown_Selectors) return _mValue_Selectors;
                throw new UndeferrableValueException("Value 'FargateProfileArgs.Selectors' is not present");
            }
        }

        /// <summary>
        /// Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'FargateProfileArgs.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FargateProfileArgs.Tags' is not present");
            }
        }
    }
}
