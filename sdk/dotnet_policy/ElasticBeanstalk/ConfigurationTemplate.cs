// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElasticBeanstalk
{
    [PolicyResourceType("aws:elasticbeanstalk/configurationTemplate:ConfigurationTemplate")]
    public sealed class ConfigurationTemplate : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// name of the application to associate with this configuration template
        /// </summary>
        [PolicyResourceProperty("application", "_mUnknown_Application")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Application;
        private bool _mUnknown_Application;
        public string? Application
        {
            get
            {
                if (!_mUnknown_Application) return _mValue_Application;
                throw new UndeferrableValueException("Value 'ConfigurationTemplate.Application' is not present");
            }
        }

        /// <summary>
        /// Short description of the Template
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ConfigurationTemplate.Description' is not present");
            }
        }

        /// <summary>
        /// The ID of the environment used with this configuration template
        /// </summary>
        [PolicyResourceProperty("environmentId", "_mUnknown_EnvironmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnvironmentId;
        private bool _mUnknown_EnvironmentId;
        public string? EnvironmentId
        {
            get
            {
                if (!_mUnknown_EnvironmentId) return _mValue_EnvironmentId;
                throw new UndeferrableValueException("Value 'ConfigurationTemplate.EnvironmentId' is not present");
            }
        }

        /// <summary>
        /// A unique name for this Template.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ConfigurationTemplate.Name' is not present");
            }
        }

        /// <summary>
        /// Option settings to configure the new Environment. These
        /// override specific values that are set as defaults. The format is detailed
        /// below in Option Settings
        /// </summary>
        [PolicyResourceProperty("settings", "_mUnknown_Settings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ConfigurationTemplateSetting>? _mValue_Settings;
        private bool _mUnknown_Settings;
        public List<Outputs.ConfigurationTemplateSetting>? Settings
        {
            get
            {
                if (!_mUnknown_Settings) return _mValue_Settings;
                throw new UndeferrableValueException("Value 'ConfigurationTemplate.Settings' is not present");
            }
        }

        /// <summary>
        /// A solution stack to base your Template
        /// off of. Example stacks can be found in the [Amazon API documentation][1]
        /// </summary>
        [PolicyResourceProperty("solutionStackName", "_mUnknown_SolutionStackName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SolutionStackName;
        private bool _mUnknown_SolutionStackName;
        public string? SolutionStackName
        {
            get
            {
                if (!_mUnknown_SolutionStackName) return _mValue_SolutionStackName;
                throw new UndeferrableValueException("Value 'ConfigurationTemplate.SolutionStackName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:elasticbeanstalk/configurationTemplate:ConfigurationTemplate")]
    public sealed class ConfigurationTemplateArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// name of the application to associate with this configuration template
        /// </summary>
        [PolicyResourceProperty("application", "_mUnknown_Application")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Application;
        private bool _mUnknown_Application;
        public string? Application
        {
            get
            {
                if (!_mUnknown_Application) return _mValue_Application;
                throw new UndeferrableValueException("Value 'ConfigurationTemplateArgs.Application' is not present");
            }
        }

        /// <summary>
        /// Short description of the Template
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ConfigurationTemplateArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The ID of the environment used with this configuration template
        /// </summary>
        [PolicyResourceProperty("environmentId", "_mUnknown_EnvironmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnvironmentId;
        private bool _mUnknown_EnvironmentId;
        public string? EnvironmentId
        {
            get
            {
                if (!_mUnknown_EnvironmentId) return _mValue_EnvironmentId;
                throw new UndeferrableValueException("Value 'ConfigurationTemplateArgs.EnvironmentId' is not present");
            }
        }

        /// <summary>
        /// A unique name for this Template.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ConfigurationTemplateArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Option settings to configure the new Environment. These
        /// override specific values that are set as defaults. The format is detailed
        /// below in Option Settings
        /// </summary>
        [PolicyResourceProperty("settings", "_mUnknown_Settings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ConfigurationTemplateSettingArgs>? _mValue_Settings;
        private bool _mUnknown_Settings;
        public List<Inputs.ConfigurationTemplateSettingArgs>? Settings
        {
            get
            {
                if (!_mUnknown_Settings) return _mValue_Settings;
                throw new UndeferrableValueException("Value 'ConfigurationTemplateArgs.Settings' is not present");
            }
        }

        /// <summary>
        /// A solution stack to base your Template
        /// off of. Example stacks can be found in the [Amazon API documentation][1]
        /// </summary>
        [PolicyResourceProperty("solutionStackName", "_mUnknown_SolutionStackName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SolutionStackName;
        private bool _mUnknown_SolutionStackName;
        public string? SolutionStackName
        {
            get
            {
                if (!_mUnknown_SolutionStackName) return _mValue_SolutionStackName;
                throw new UndeferrableValueException("Value 'ConfigurationTemplateArgs.SolutionStackName' is not present");
            }
        }
    }
}
