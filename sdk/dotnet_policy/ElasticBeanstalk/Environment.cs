// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElasticBeanstalk
{
    [PolicyResourceType("aws:elasticbeanstalk/environment:Environment")]
    public sealed class Environment : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// List of all option settings configured in this Environment. These
        /// are a combination of default settings and their overrides from `setting` in
        /// the configuration.
        /// </summary>
        [Input("allSettings")]
        public List<EnvironmentAllSetting>? AllSettings;

        /// <summary>
        /// Name of the application that contains the version
        /// to be deployed
        /// </summary>
        [Input("application")]
        public string? Application;

        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The autoscaling groups used by this Environment.
        /// </summary>
        [Input("autoscalingGroups")]
        public List<string>? AutoscalingGroups;

        /// <summary>
        /// Fully qualified DNS name for this Environment.
        /// </summary>
        [Input("cname")]
        public string? Cname;

        /// <summary>
        /// Prefix to use for the fully qualified DNS name of
        /// the Environment.
        /// </summary>
        [Input("cnamePrefix")]
        public string? CnamePrefix;

        /// <summary>
        /// Short description of the Environment
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The URL to the Load Balancer for this Environment
        /// </summary>
        [Input("endpointUrl")]
        public string? EndpointUrl;

        /// <summary>
        /// Instances used by this Environment.
        /// </summary>
        [Input("instances")]
        public List<string>? Instances;

        /// <summary>
        /// Launch configurations in use by this Environment.
        /// </summary>
        [Input("launchConfigurations")]
        public List<string>? LaunchConfigurations;

        /// <summary>
        /// Elastic load balancers in use by this Environment.
        /// </summary>
        [Input("loadBalancers")]
        public List<string>? LoadBalancers;

        /// <summary>
        /// A unique name for this Environment. This name is used
        /// in the application URL
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Elastic Beanstalk [Platform](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn)
        /// to use in deployment
        /// </summary>
        [Input("platformArn")]
        public string? PlatformArn;

        /// <summary>
        /// The time between polling the AWS API to
        /// check if changes have been applied. Use this to adjust the rate of API calls
        /// for any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to
        /// use the default behavior, which is an exponential backoff
        /// </summary>
        [Input("pollInterval")]
        public string? PollInterval;

        /// <summary>
        /// SQS queues in use by this Environment.
        /// </summary>
        [Input("queues")]
        public List<string>? Queues;

        /// <summary>
        /// Option settings to configure the new Environment. These
        /// override specific values that are set as defaults. The format is detailed
        /// below in Option Settings
        /// </summary>
        [Input("settings")]
        public List<EnvironmentSetting>? Settings;

        /// <summary>
        /// A solution stack to base your environment
        /// off of. Example stacks can be found in the [Amazon API documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
        /// </summary>
        [Input("solutionStackName")]
        public string? SolutionStackName;

        /// <summary>
        /// A set of tags to apply to the Environment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The name of the Elastic Beanstalk Configuration
        /// template to use in deployment
        /// </summary>
        [Input("templateName")]
        public string? TemplateName;

        /// <summary>
        /// Elastic Beanstalk Environment tier. Valid values are `Worker`
        /// or `WebServer`. If tier is left blank `WebServer` will be used.
        /// </summary>
        [Input("tier")]
        public string? Tier;

        /// <summary>
        /// Autoscaling triggers in use by this Environment.
        /// </summary>
        [Input("triggers")]
        public List<string>? Triggers;

        /// <summary>
        /// The name of the Elastic Beanstalk Application Version
        /// to use in deployment.
        /// </summary>
        [Input("version")]
        public string? Version;

        /// <summary>
        /// The maximum
        /// [duration](https://golang.org/pkg/time/#ParseDuration) that this provider should
        /// wait for an Elastic Beanstalk Environment to be in a ready state before timing
        /// out.
        /// </summary>
        [Input("waitForReadyTimeout")]
        public string? WaitForReadyTimeout;
    }
}
