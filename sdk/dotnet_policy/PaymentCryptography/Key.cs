// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.PaymentCryptography
{
    [PolicyResourceType("aws:paymentcryptography/key:Key")]
    public sealed class Key : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the key.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        [Input("deletionWindowInDays")]
        public int? DeletionWindowInDays;

        /// <summary>
        /// Whether to enable the key.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled;

        /// <summary>
        /// Whether the key is exportable from the service.
        /// </summary>
        [Input("exportable")]
        public bool? Exportable;

        /// <summary>
        /// Role of the key, the algorithm it supports, and the cryptographic operations allowed with the key.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("keyAttributes")]
        public KeyKeyAttributes? KeyAttributes;

        /// <summary>
        /// Key check value (KCV) is used to check if all parties holding a given key have the same key or to detect that a key has changed.
        /// </summary>
        [Input("keyCheckValue")]
        public string? KeyCheckValue;

        /// <summary>
        /// Algorithm that AWS Payment Cryptography uses to calculate the key check value (KCV).
        /// </summary>
        [Input("keyCheckValueAlgorithm")]
        public string? KeyCheckValueAlgorithm;

        /// <summary>
        /// Source of the key material.
        /// </summary>
        [Input("keyOrigin")]
        public string? KeyOrigin;

        /// <summary>
        /// State of key that is being created or deleted.
        /// </summary>
        [Input("keyState")]
        public string? State;

        /// <summary>
        /// Map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("timeouts")]
        public KeyTimeouts? Timeouts;
    }
}
