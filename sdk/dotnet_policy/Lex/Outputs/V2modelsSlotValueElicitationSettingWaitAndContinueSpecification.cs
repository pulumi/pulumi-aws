// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lex.Outputs
{
    public sealed class V2modelsSlotValueElicitationSettingWaitAndContinueSpecification
    {
        /// <summary>
        /// Specifies whether the bot will wait for a user to respond.
        /// When this field is `false`, wait and continue responses for a slot aren't used.
        /// If the active field isn't specified, the default is `true`.
        /// </summary>
        [PolicyResourceProperty("active", "_mUnknown_Active")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Active;
        private bool _mUnknown_Active;
        public bool? Active
        {
            get
            {
                if (!_mUnknown_Active) return _mValue_Active;
                throw new UndeferrableValueException("Value 'V2modelsSlotValueElicitationSettingWaitAndContinueSpecification.Active' is not present");
            }
        }

        /// <summary>
        /// Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
        /// See the `continue_response` argument reference below.
        /// </summary>
        [PolicyResourceProperty("continueResponses", "_mUnknown_ContinueResponses")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse>? _mValue_ContinueResponses;
        private bool _mUnknown_ContinueResponses;
        public List<Outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationContinueResponse>? ContinueResponses
        {
            get
            {
                if (!_mUnknown_ContinueResponses) return _mValue_ContinueResponses;
                throw new UndeferrableValueException("Value 'V2modelsSlotValueElicitationSettingWaitAndContinueSpecification.ContinueResponses' is not present");
            }
        }

        /// <summary>
        /// Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
        /// See the `still_waiting_response` argument reference below.
        /// </summary>
        [PolicyResourceProperty("stillWaitingResponses", "_mUnknown_StillWaitingResponses")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse>? _mValue_StillWaitingResponses;
        private bool _mUnknown_StillWaitingResponses;
        public List<Outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponse>? StillWaitingResponses
        {
            get
            {
                if (!_mUnknown_StillWaitingResponses) return _mValue_StillWaitingResponses;
                throw new UndeferrableValueException("Value 'V2modelsSlotValueElicitationSettingWaitAndContinueSpecification.StillWaitingResponses' is not present");
            }
        }

        /// <summary>
        /// Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
        /// See the `waiting_response` argument reference below.
        /// </summary>
        [PolicyResourceProperty("waitingResponses", "_mUnknown_WaitingResponses")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse>? _mValue_WaitingResponses;
        private bool _mUnknown_WaitingResponses;
        public List<Outputs.V2modelsSlotValueElicitationSettingWaitAndContinueSpecificationWaitingResponse>? WaitingResponses
        {
            get
            {
                if (!_mUnknown_WaitingResponses) return _mValue_WaitingResponses;
                throw new UndeferrableValueException("Value 'V2modelsSlotValueElicitationSettingWaitAndContinueSpecification.WaitingResponses' is not present");
            }
        }
    }
}
