// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppRunner.Inputs
{
    public sealed class ServiceSourceConfigurationArgs
    {
        /// <summary>
        /// Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("authenticationConfiguration", "_mUnknown_AuthenticationConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceSourceConfigurationAuthenticationConfigurationArgs? _mValue_AuthenticationConfiguration;
        private bool _mUnknown_AuthenticationConfiguration;
        public Inputs.ServiceSourceConfigurationAuthenticationConfigurationArgs? AuthenticationConfiguration
        {
            get
            {
                if (!_mUnknown_AuthenticationConfiguration) return _mValue_AuthenticationConfiguration;
                throw new UndeferrableValueException("Value 'ServiceSourceConfigurationArgs.AuthenticationConfiguration' is not present");
            }
        }

        /// <summary>
        /// Whether continuous integration from the source repository is enabled for the App Runner service. If set to `true`, each repository change (source code commit or new image version) starts a deployment. Defaults to `true`.
        /// </summary>
        [PolicyResourceProperty("autoDeploymentsEnabled", "_mUnknown_AutoDeploymentsEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AutoDeploymentsEnabled;
        private bool _mUnknown_AutoDeploymentsEnabled;
        public bool? AutoDeploymentsEnabled
        {
            get
            {
                if (!_mUnknown_AutoDeploymentsEnabled) return _mValue_AutoDeploymentsEnabled;
                throw new UndeferrableValueException("Value 'ServiceSourceConfigurationArgs.AutoDeploymentsEnabled' is not present");
            }
        }

        /// <summary>
        /// Description of a source code repository. See Code Repository below for more details.
        /// </summary>
        [PolicyResourceProperty("codeRepository", "_mUnknown_CodeRepository")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceSourceConfigurationCodeRepositoryArgs? _mValue_CodeRepository;
        private bool _mUnknown_CodeRepository;
        public Inputs.ServiceSourceConfigurationCodeRepositoryArgs? CodeRepository
        {
            get
            {
                if (!_mUnknown_CodeRepository) return _mValue_CodeRepository;
                throw new UndeferrableValueException("Value 'ServiceSourceConfigurationArgs.CodeRepository' is not present");
            }
        }

        /// <summary>
        /// Description of a source image repository. See Image Repository below for more details.
        /// </summary>
        [PolicyResourceProperty("imageRepository", "_mUnknown_ImageRepository")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceSourceConfigurationImageRepositoryArgs? _mValue_ImageRepository;
        private bool _mUnknown_ImageRepository;
        public Inputs.ServiceSourceConfigurationImageRepositoryArgs? ImageRepository
        {
            get
            {
                if (!_mUnknown_ImageRepository) return _mValue_ImageRepository;
                throw new UndeferrableValueException("Value 'ServiceSourceConfigurationArgs.ImageRepository' is not present");
            }
        }
    }
}
