// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppRunner
{
    [PolicyResourceType("aws:apprunner/vpcIngressConnection:VpcIngressConnection")]
    public sealed class VpcIngressConnection : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the VPC Ingress Connection.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The domain name associated with the VPC Ingress Connection resource.
        /// </summary>
        [Input("domainName")]
        public string? DomainName;

        /// <summary>
        /// Specifications for the customerâ€™s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See Ingress VPC Configuration below for more details.
        /// </summary>
        [Input("ingressVpcConfiguration")]
        public VpcIngressConnectionIngressVpcConfiguration? IngressVpcConfiguration;

        /// <summary>
        /// A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.
        /// </summary>
        [Input("serviceArn")]
        public string? ServiceArn;

        /// <summary>
        /// The current status of the VPC Ingress Connection.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
