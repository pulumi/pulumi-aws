// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppRunner.Outputs
{
    public sealed class ServiceNetworkConfiguration
    {
        /// <summary>
        /// Network configuration settings for outbound message traffic. See Egress Configuration below for more details.
        /// </summary>
        [Input("egressConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.ServiceNetworkConfigurationEgressConfiguration> _mEgressConfiguration;

        public Outputs.ServiceNetworkConfigurationEgressConfiguration? EgressConfiguration => _mEgressConfiguration.GetValue("egressConfiguration");

        /// <summary>
        /// Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.
        /// </summary>
        [Input("ingressConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.ServiceNetworkConfigurationIngressConfiguration> _mIngressConfiguration;

        public Outputs.ServiceNetworkConfigurationIngressConfiguration? IngressConfiguration => _mIngressConfiguration.GetValue("ingressConfiguration");

        /// <summary>
        /// App Runner provides you with the option to choose between Internet Protocol version 4 (IPv4) and dual stack (IPv4 and IPv6) for your incoming public network configuration. Valid values: `IPV4`, `DUAL_STACK`. Default: `IPV4`.
        /// </summary>
        [Input("ipAddressType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mIpAddressType;

        public string? IpAddressType => _mIpAddressType.GetValue("ipAddressType");
    }
}
