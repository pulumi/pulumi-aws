// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppRunner.Outputs
{
    public sealed class ServiceSourceConfigurationImageRepository
    {
        /// <summary>
        /// Configuration for running the identified image. See Image Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("imageConfiguration", "_mUnknown_ImageConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceSourceConfigurationImageRepositoryImageConfiguration? _mValue_ImageConfiguration;
        private bool _mUnknown_ImageConfiguration;
        public Outputs.ServiceSourceConfigurationImageRepositoryImageConfiguration? ImageConfiguration
        {
            get
            {
                if (!_mUnknown_ImageConfiguration) return _mValue_ImageConfiguration;
                throw new UndeferrableValueException("Value 'ServiceSourceConfigurationImageRepository.ImageConfiguration' is not present");
            }
        }

        /// <summary>
        /// Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
        /// image name format, see Pulling an image in the Amazon ECR User Guide.
        /// </summary>
        [PolicyResourceProperty("imageIdentifier", "_mUnknown_ImageIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageIdentifier;
        private bool _mUnknown_ImageIdentifier;
        public string? ImageIdentifier
        {
            get
            {
                if (!_mUnknown_ImageIdentifier) return _mValue_ImageIdentifier;
                throw new UndeferrableValueException("Value 'ServiceSourceConfigurationImageRepository.ImageIdentifier' is not present");
            }
        }

        /// <summary>
        /// Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: `ECR` , `ECR_PUBLIC`.
        /// </summary>
        [PolicyResourceProperty("imageRepositoryType", "_mUnknown_ImageRepositoryType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageRepositoryType;
        private bool _mUnknown_ImageRepositoryType;
        public string? ImageRepositoryType
        {
            get
            {
                if (!_mUnknown_ImageRepositoryType) return _mValue_ImageRepositoryType;
                throw new UndeferrableValueException("Value 'ServiceSourceConfigurationImageRepository.ImageRepositoryType' is not present");
            }
        }
    }
}
