// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppRunner
{
    [PolicyResourceType("aws:apprunner/service:Service")]
    public sealed class Service : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the App Runner service.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
        /// </summary>
        [Input("autoScalingConfigurationArn")]
        public string? AutoScalingConfigurationArn;

        /// <summary>
        /// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
        /// </summary>
        [Input("encryptionConfiguration")]
        public ServiceEncryptionConfiguration? EncryptionConfiguration;

        /// <summary>
        /// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
        /// </summary>
        [Input("healthCheckConfiguration")]
        public ServiceHealthCheckConfiguration? HealthCheckConfiguration;

        /// <summary>
        /// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
        /// </summary>
        [Input("instanceConfiguration")]
        public ServiceInstanceConfiguration? InstanceConfiguration;

        /// <summary>
        /// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
        /// </summary>
        [Input("networkConfiguration")]
        public ServiceNetworkConfiguration? NetworkConfiguration;

        /// <summary>
        /// The observability configuration of your service. See Observability Configuration below for more details.
        /// </summary>
        [Input("observabilityConfiguration")]
        public ServiceObservabilityConfiguration? ObservabilityConfiguration;

        /// <summary>
        /// An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.
        /// </summary>
        [Input("serviceId")]
        public string? ServiceId;

        /// <summary>
        /// Name of the service.
        /// </summary>
        [Input("serviceName")]
        public string? ServiceName;

        /// <summary>
        /// Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
        /// </summary>
        [Input("serviceUrl")]
        public string? ServiceUrl;

        /// <summary>
        /// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("sourceConfiguration")]
        public ServiceSourceConfiguration? SourceConfiguration;

        /// <summary>
        /// Current state of the App Runner service.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
