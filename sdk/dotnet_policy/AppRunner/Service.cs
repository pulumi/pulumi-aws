// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppRunner
{
    [PolicyResourceType("aws:apprunner/service:Service")]
    public sealed class Service : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the App Runner service.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Service.Arn' is not present");
            }
        }

        /// <summary>
        /// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
        /// </summary>
        [PolicyResourceProperty("autoScalingConfigurationArn", "_mUnknown_AutoScalingConfigurationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoScalingConfigurationArn;
        private bool _mUnknown_AutoScalingConfigurationArn;
        public string? AutoScalingConfigurationArn
        {
            get
            {
                if (!_mUnknown_AutoScalingConfigurationArn) return _mValue_AutoScalingConfigurationArn;
                throw new UndeferrableValueException("Value 'Service.AutoScalingConfigurationArn' is not present");
            }
        }

        /// <summary>
        /// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("encryptionConfiguration", "_mUnknown_EncryptionConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceEncryptionConfiguration? _mValue_EncryptionConfiguration;
        private bool _mUnknown_EncryptionConfiguration;
        public Outputs.ServiceEncryptionConfiguration? EncryptionConfiguration
        {
            get
            {
                if (!_mUnknown_EncryptionConfiguration) return _mValue_EncryptionConfiguration;
                throw new UndeferrableValueException("Value 'Service.EncryptionConfiguration' is not present");
            }
        }

        /// <summary>
        /// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("healthCheckConfiguration", "_mUnknown_HealthCheckConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceHealthCheckConfiguration? _mValue_HealthCheckConfiguration;
        private bool _mUnknown_HealthCheckConfiguration;
        public Outputs.ServiceHealthCheckConfiguration? HealthCheckConfiguration
        {
            get
            {
                if (!_mUnknown_HealthCheckConfiguration) return _mValue_HealthCheckConfiguration;
                throw new UndeferrableValueException("Value 'Service.HealthCheckConfiguration' is not present");
            }
        }

        /// <summary>
        /// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("instanceConfiguration", "_mUnknown_InstanceConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceInstanceConfiguration? _mValue_InstanceConfiguration;
        private bool _mUnknown_InstanceConfiguration;
        public Outputs.ServiceInstanceConfiguration? InstanceConfiguration
        {
            get
            {
                if (!_mUnknown_InstanceConfiguration) return _mValue_InstanceConfiguration;
                throw new UndeferrableValueException("Value 'Service.InstanceConfiguration' is not present");
            }
        }

        /// <summary>
        /// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("networkConfiguration", "_mUnknown_NetworkConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceNetworkConfiguration? _mValue_NetworkConfiguration;
        private bool _mUnknown_NetworkConfiguration;
        public Outputs.ServiceNetworkConfiguration? NetworkConfiguration
        {
            get
            {
                if (!_mUnknown_NetworkConfiguration) return _mValue_NetworkConfiguration;
                throw new UndeferrableValueException("Value 'Service.NetworkConfiguration' is not present");
            }
        }

        /// <summary>
        /// The observability configuration of your service. See Observability Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("observabilityConfiguration", "_mUnknown_ObservabilityConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceObservabilityConfiguration? _mValue_ObservabilityConfiguration;
        private bool _mUnknown_ObservabilityConfiguration;
        public Outputs.ServiceObservabilityConfiguration? ObservabilityConfiguration
        {
            get
            {
                if (!_mUnknown_ObservabilityConfiguration) return _mValue_ObservabilityConfiguration;
                throw new UndeferrableValueException("Value 'Service.ObservabilityConfiguration' is not present");
            }
        }

        /// <summary>
        /// An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.
        /// </summary>
        [PolicyResourceProperty("serviceId", "_mUnknown_ServiceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceId;
        private bool _mUnknown_ServiceId;
        public string? ServiceId
        {
            get
            {
                if (!_mUnknown_ServiceId) return _mValue_ServiceId;
                throw new UndeferrableValueException("Value 'Service.ServiceId' is not present");
            }
        }

        /// <summary>
        /// Name of the service.
        /// </summary>
        [PolicyResourceProperty("serviceName", "_mUnknown_ServiceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceName;
        private bool _mUnknown_ServiceName;
        public string? ServiceName
        {
            get
            {
                if (!_mUnknown_ServiceName) return _mValue_ServiceName;
                throw new UndeferrableValueException("Value 'Service.ServiceName' is not present");
            }
        }

        /// <summary>
        /// Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
        /// </summary>
        [PolicyResourceProperty("serviceUrl", "_mUnknown_ServiceUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceUrl;
        private bool _mUnknown_ServiceUrl;
        public string? ServiceUrl
        {
            get
            {
                if (!_mUnknown_ServiceUrl) return _mValue_ServiceUrl;
                throw new UndeferrableValueException("Value 'Service.ServiceUrl' is not present");
            }
        }

        /// <summary>
        /// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("sourceConfiguration", "_mUnknown_SourceConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServiceSourceConfiguration? _mValue_SourceConfiguration;
        private bool _mUnknown_SourceConfiguration;
        public Outputs.ServiceSourceConfiguration? SourceConfiguration
        {
            get
            {
                if (!_mUnknown_SourceConfiguration) return _mValue_SourceConfiguration;
                throw new UndeferrableValueException("Value 'Service.SourceConfiguration' is not present");
            }
        }

        /// <summary>
        /// Current state of the App Runner service.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'Service.Status' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Service.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Service.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:apprunner/service:Service")]
    public sealed class ServiceArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
        /// </summary>
        [PolicyResourceProperty("autoScalingConfigurationArn", "_mUnknown_AutoScalingConfigurationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoScalingConfigurationArn;
        private bool _mUnknown_AutoScalingConfigurationArn;
        public string? AutoScalingConfigurationArn
        {
            get
            {
                if (!_mUnknown_AutoScalingConfigurationArn) return _mValue_AutoScalingConfigurationArn;
                throw new UndeferrableValueException("Value 'ServiceArgs.AutoScalingConfigurationArn' is not present");
            }
        }

        /// <summary>
        /// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("encryptionConfiguration", "_mUnknown_EncryptionConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceEncryptionConfigurationArgs? _mValue_EncryptionConfiguration;
        private bool _mUnknown_EncryptionConfiguration;
        public Inputs.ServiceEncryptionConfigurationArgs? EncryptionConfiguration
        {
            get
            {
                if (!_mUnknown_EncryptionConfiguration) return _mValue_EncryptionConfiguration;
                throw new UndeferrableValueException("Value 'ServiceArgs.EncryptionConfiguration' is not present");
            }
        }

        /// <summary>
        /// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("healthCheckConfiguration", "_mUnknown_HealthCheckConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceHealthCheckConfigurationArgs? _mValue_HealthCheckConfiguration;
        private bool _mUnknown_HealthCheckConfiguration;
        public Inputs.ServiceHealthCheckConfigurationArgs? HealthCheckConfiguration
        {
            get
            {
                if (!_mUnknown_HealthCheckConfiguration) return _mValue_HealthCheckConfiguration;
                throw new UndeferrableValueException("Value 'ServiceArgs.HealthCheckConfiguration' is not present");
            }
        }

        /// <summary>
        /// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("instanceConfiguration", "_mUnknown_InstanceConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceInstanceConfigurationArgs? _mValue_InstanceConfiguration;
        private bool _mUnknown_InstanceConfiguration;
        public Inputs.ServiceInstanceConfigurationArgs? InstanceConfiguration
        {
            get
            {
                if (!_mUnknown_InstanceConfiguration) return _mValue_InstanceConfiguration;
                throw new UndeferrableValueException("Value 'ServiceArgs.InstanceConfiguration' is not present");
            }
        }

        /// <summary>
        /// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("networkConfiguration", "_mUnknown_NetworkConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceNetworkConfigurationArgs? _mValue_NetworkConfiguration;
        private bool _mUnknown_NetworkConfiguration;
        public Inputs.ServiceNetworkConfigurationArgs? NetworkConfiguration
        {
            get
            {
                if (!_mUnknown_NetworkConfiguration) return _mValue_NetworkConfiguration;
                throw new UndeferrableValueException("Value 'ServiceArgs.NetworkConfiguration' is not present");
            }
        }

        /// <summary>
        /// The observability configuration of your service. See Observability Configuration below for more details.
        /// </summary>
        [PolicyResourceProperty("observabilityConfiguration", "_mUnknown_ObservabilityConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceObservabilityConfigurationArgs? _mValue_ObservabilityConfiguration;
        private bool _mUnknown_ObservabilityConfiguration;
        public Inputs.ServiceObservabilityConfigurationArgs? ObservabilityConfiguration
        {
            get
            {
                if (!_mUnknown_ObservabilityConfiguration) return _mValue_ObservabilityConfiguration;
                throw new UndeferrableValueException("Value 'ServiceArgs.ObservabilityConfiguration' is not present");
            }
        }

        /// <summary>
        /// Name of the service.
        /// </summary>
        [PolicyResourceProperty("serviceName", "_mUnknown_ServiceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceName;
        private bool _mUnknown_ServiceName;
        public string? ServiceName
        {
            get
            {
                if (!_mUnknown_ServiceName) return _mValue_ServiceName;
                throw new UndeferrableValueException("Value 'ServiceArgs.ServiceName' is not present");
            }
        }

        /// <summary>
        /// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("sourceConfiguration", "_mUnknown_SourceConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServiceSourceConfigurationArgs? _mValue_SourceConfiguration;
        private bool _mUnknown_SourceConfiguration;
        public Inputs.ServiceSourceConfigurationArgs? SourceConfiguration
        {
            get
            {
                if (!_mUnknown_SourceConfiguration) return _mValue_SourceConfiguration;
                throw new UndeferrableValueException("Value 'ServiceArgs.SourceConfiguration' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ServiceArgs.Tags' is not present");
            }
        }
    }
}
