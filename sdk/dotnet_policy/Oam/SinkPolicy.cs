// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Oam
{
    [PolicyResourceType("aws:oam/sinkPolicy:SinkPolicy")]
    public sealed class SinkPolicy : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Sink.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'SinkPolicy.Arn' is not present");
            }
        }

        /// <summary>
        /// JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here.
        /// </summary>
        [PolicyResourceProperty("policy", "_mUnknown_Policy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Policy;
        private bool _mUnknown_Policy;
        public string? Policy
        {
            get
            {
                if (!_mUnknown_Policy) return _mValue_Policy;
                throw new UndeferrableValueException("Value 'SinkPolicy.Policy' is not present");
            }
        }

        /// <summary>
        /// ID string that AWS generated as part of the sink ARN.
        /// </summary>
        [PolicyResourceProperty("sinkId", "_mUnknown_SinkId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SinkId;
        private bool _mUnknown_SinkId;
        public string? SinkId
        {
            get
            {
                if (!_mUnknown_SinkId) return _mValue_SinkId;
                throw new UndeferrableValueException("Value 'SinkPolicy.SinkId' is not present");
            }
        }

        /// <summary>
        /// ARN of the sink to attach this policy to.
        /// </summary>
        [PolicyResourceProperty("sinkIdentifier", "_mUnknown_SinkIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SinkIdentifier;
        private bool _mUnknown_SinkIdentifier;
        public string? SinkIdentifier
        {
            get
            {
                if (!_mUnknown_SinkIdentifier) return _mValue_SinkIdentifier;
                throw new UndeferrableValueException("Value 'SinkPolicy.SinkIdentifier' is not present");
            }
        }
    }

    [PolicyResourceType("aws:oam/sinkPolicy:SinkPolicy")]
    public sealed class SinkPolicyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here.
        /// </summary>
        [PolicyResourceProperty("policy", "_mUnknown_Policy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Policy;
        private bool _mUnknown_Policy;
        public string? Policy
        {
            get
            {
                if (!_mUnknown_Policy) return _mValue_Policy;
                throw new UndeferrableValueException("Value 'SinkPolicyArgs.Policy' is not present");
            }
        }

        /// <summary>
        /// ARN of the sink to attach this policy to.
        /// </summary>
        [PolicyResourceProperty("sinkIdentifier", "_mUnknown_SinkIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SinkIdentifier;
        private bool _mUnknown_SinkIdentifier;
        public string? SinkIdentifier
        {
            get
            {
                if (!_mUnknown_SinkIdentifier) return _mValue_SinkIdentifier;
                throw new UndeferrableValueException("Value 'SinkPolicyArgs.SinkIdentifier' is not present");
            }
        }
    }
}
