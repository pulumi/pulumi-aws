// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Oam.Outputs
{
    public sealed class GetLinkLinkConfigurationResult
    {
        /// <summary>
        /// Configuration for filtering which log groups are to send log events from the source account to the monitoring account. See `log_group_configuration` Block for details.
        /// </summary>
        [PolicyResourceProperty("logGroupConfigurations", "_mUnknown_LogGroupConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetLinkLinkConfigurationLogGroupConfigurationResult>? _mValue_LogGroupConfigurations;
        private bool _mUnknown_LogGroupConfigurations;
        public List<Outputs.GetLinkLinkConfigurationLogGroupConfigurationResult>? LogGroupConfigurations
        {
            get
            {
                if (!_mUnknown_LogGroupConfigurations) return _mValue_LogGroupConfigurations;
                throw new UndeferrableValueException("Value 'GetLinkLinkConfigurationResult.LogGroupConfigurations' is not present");
            }
        }

        /// <summary>
        /// Configuration for filtering which metric namespaces are to be shared from the source account to the monitoring account. See `metric_configuration` Block for details.
        /// </summary>
        [PolicyResourceProperty("metricConfigurations", "_mUnknown_MetricConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetLinkLinkConfigurationMetricConfigurationResult>? _mValue_MetricConfigurations;
        private bool _mUnknown_MetricConfigurations;
        public List<Outputs.GetLinkLinkConfigurationMetricConfigurationResult>? MetricConfigurations
        {
            get
            {
                if (!_mUnknown_MetricConfigurations) return _mValue_MetricConfigurations;
                throw new UndeferrableValueException("Value 'GetLinkLinkConfigurationResult.MetricConfigurations' is not present");
            }
        }
    }
}
