// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MemoryDb
{
    [PolicyResourceType("aws:memorydb/acl:Acl")]
    public sealed class Acl : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the ACL.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Acl.Arn' is not present");
            }
        }

        /// <summary>
        /// The minimum engine version supported by the ACL.
        /// </summary>
        [PolicyResourceProperty("minimumEngineVersion", "_mUnknown_MinimumEngineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MinimumEngineVersion;
        private bool _mUnknown_MinimumEngineVersion;
        public string? MinimumEngineVersion
        {
            get
            {
                if (!_mUnknown_MinimumEngineVersion) return _mValue_MinimumEngineVersion;
                throw new UndeferrableValueException("Value 'Acl.MinimumEngineVersion' is not present");
            }
        }

        /// <summary>
        /// Name of the ACL. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Acl.Name' is not present");
            }
        }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'Acl.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Acl.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Acl.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Set of MemoryDB user names to be included in this ACL.
        /// </summary>
        [PolicyResourceProperty("userNames", "_mUnknown_UserNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_UserNames;
        private bool _mUnknown_UserNames;
        public List<string>? UserNames
        {
            get
            {
                if (!_mUnknown_UserNames) return _mValue_UserNames;
                throw new UndeferrableValueException("Value 'Acl.UserNames' is not present");
            }
        }
    }

    [PolicyResourceType("aws:memorydb/acl:Acl")]
    public sealed class AclArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the ACL. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'AclArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'AclArgs.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'AclArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Set of MemoryDB user names to be included in this ACL.
        /// </summary>
        [PolicyResourceProperty("userNames", "_mUnknown_UserNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_UserNames;
        private bool _mUnknown_UserNames;
        public List<string>? UserNames
        {
            get
            {
                if (!_mUnknown_UserNames) return _mValue_UserNames;
                throw new UndeferrableValueException("Value 'AclArgs.UserNames' is not present");
            }
        }
    }
}
