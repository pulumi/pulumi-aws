// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Athena
{
    [PolicyResourceType("aws:athena/capacityReservation:CapacityReservation")]
    public sealed class CapacityReservation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Number of data processing units currently allocated.
        /// </summary>
        [PolicyResourceProperty("allocatedDpus", "_mUnknown_AllocatedDpus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AllocatedDpus;
        private bool _mUnknown_AllocatedDpus;
        public int? AllocatedDpus
        {
            get
            {
                if (!_mUnknown_AllocatedDpus) return _mValue_AllocatedDpus;
                throw new UndeferrableValueException("Value 'CapacityReservation.AllocatedDpus' is not present");
            }
        }

        /// <summary>
        /// ARN of the Capacity Reservation.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'CapacityReservation.Arn' is not present");
            }
        }

        /// <summary>
        /// Name of the capacity reservation.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'CapacityReservation.Name' is not present");
            }
        }

        /// <summary>
        /// Status of the capacity reservation.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'CapacityReservation.Status' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'CapacityReservation.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'CapacityReservation.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Number of data processing units requested. Must be at least `24` units.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("targetDpus", "_mUnknown_TargetDpus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_TargetDpus;
        private bool _mUnknown_TargetDpus;
        public int? TargetDpus
        {
            get
            {
                if (!_mUnknown_TargetDpus) return _mValue_TargetDpus;
                throw new UndeferrableValueException("Value 'CapacityReservation.TargetDpus' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.CapacityReservationTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.CapacityReservationTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'CapacityReservation.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:athena/capacityReservation:CapacityReservation")]
    public sealed class CapacityReservationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the capacity reservation.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'CapacityReservationArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'CapacityReservationArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Number of data processing units requested. Must be at least `24` units.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("targetDpus", "_mUnknown_TargetDpus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_TargetDpus;
        private bool _mUnknown_TargetDpus;
        public int? TargetDpus
        {
            get
            {
                if (!_mUnknown_TargetDpus) return _mValue_TargetDpus;
                throw new UndeferrableValueException("Value 'CapacityReservationArgs.TargetDpus' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.CapacityReservationTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.CapacityReservationTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'CapacityReservationArgs.Timeouts' is not present");
            }
        }
    }
}
