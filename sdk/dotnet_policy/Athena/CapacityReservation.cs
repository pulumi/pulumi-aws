// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Athena
{
    [PolicyResourceType("aws:athena/capacityReservation:CapacityReservation")]
    public sealed class CapacityReservation : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Number of data processing units currently allocated.
        /// </summary>
        [Input("allocatedDpus")]
        public int? AllocatedDpus;

        /// <summary>
        /// ARN of the Capacity Reservation.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Name of the capacity reservation.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Status of the capacity reservation.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Number of data processing units requested. Must be at least `24` units.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("targetDpus")]
        public int? TargetDpus;

        [Input("timeouts")]
        public CapacityReservationTimeouts? Timeouts;
    }
}
