// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Athena
{
    [PolicyResourceType("aws:athena/workgroup:Workgroup")]
    public sealed class Workgroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the workgroup
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Configuration block with various settings for the workgroup. Documented below.
        /// </summary>
        [Input("configuration")]
        public WorkgroupConfiguration? Configuration;

        /// <summary>
        /// Description of the workgroup.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Option to delete the workgroup and its contents even if the workgroup contains any named queries.
        /// </summary>
        [Input("forceDestroy")]
        public bool? ForceDestroy;

        /// <summary>
        /// Name of the workgroup.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// State of the workgroup. Valid values are `DISABLED` or `ENABLED`. Defaults to `ENABLED`.
        /// </summary>
        [Input("state")]
        public string? State;

        /// <summary>
        /// Key-value map of resource tags for the workgroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
