// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.WafRegional.Inputs
{
    public sealed class SqlInjectionMatchSetSqlInjectionMatchTupleArgs
    {
        /// <summary>
        /// Specifies where in a web request to look for snippets of malicious SQL code.
        /// </summary>
        [PolicyResourceProperty("fieldToMatch", "_mUnknown_FieldToMatch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs? _mValue_FieldToMatch;
        private bool _mUnknown_FieldToMatch;
        public Inputs.SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs? FieldToMatch
        {
            get
            {
                if (!_mUnknown_FieldToMatch) return _mValue_FieldToMatch;
                throw new UndeferrableValueException("Value 'SqlInjectionMatchSetSqlInjectionMatchTupleArgs.FieldToMatch' is not present");
            }
        }

        /// <summary>
        /// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
        /// If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
        /// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
        /// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
        /// for all supported values.
        /// </summary>
        [PolicyResourceProperty("textTransformation", "_mUnknown_TextTransformation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TextTransformation;
        private bool _mUnknown_TextTransformation;
        public string? TextTransformation
        {
            get
            {
                if (!_mUnknown_TextTransformation) return _mValue_TextTransformation;
                throw new UndeferrableValueException("Value 'SqlInjectionMatchSetSqlInjectionMatchTupleArgs.TextTransformation' is not present");
            }
        }
    }
}
