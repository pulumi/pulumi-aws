// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LakeFormation.Inputs
{
    public sealed class PermissionsLfTagPolicyArgs
    {
        /// <summary>
        /// Identifier for the Data Catalog. By default, it is the account ID of the caller.
        /// </summary>
        [PolicyResourceProperty("catalogId", "_mUnknown_CatalogId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CatalogId;
        private bool _mUnknown_CatalogId;
        public string? CatalogId
        {
            get
            {
                if (!_mUnknown_CatalogId) return _mValue_CatalogId;
                throw new UndeferrableValueException("Value 'PermissionsLfTagPolicyArgs.CatalogId' is not present");
            }
        }

        /// <summary>
        /// A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See `expression` below.
        /// 
        /// The following argument is optional:
        /// </summary>
        [PolicyResourceProperty("expressions", "_mUnknown_Expressions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PermissionsLfTagPolicyExpressionArgs>? _mValue_Expressions;
        private bool _mUnknown_Expressions;
        public List<Inputs.PermissionsLfTagPolicyExpressionArgs>? Expressions
        {
            get
            {
                if (!_mUnknown_Expressions) return _mValue_Expressions;
                throw new UndeferrableValueException("Value 'PermissionsLfTagPolicyArgs.Expressions' is not present");
            }
        }

        /// <summary>
        /// The resource type for which the tag policy applies. Valid values are `DATABASE` and `TABLE`.
        /// </summary>
        [PolicyResourceProperty("resourceType", "_mUnknown_ResourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceType;
        private bool _mUnknown_ResourceType;
        public string? ResourceType
        {
            get
            {
                if (!_mUnknown_ResourceType) return _mValue_ResourceType;
                throw new UndeferrableValueException("Value 'PermissionsLfTagPolicyArgs.ResourceType' is not present");
            }
        }
    }
}
