// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LakeFormation.Inputs
{
    public sealed class GetPermissionsTableArgs
    {
        /// <summary>
        /// Identifier for the Data Catalog. By default, it is the account ID of the caller.
        /// </summary>
        [Input("catalogId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mCatalogId;

        public string? CatalogId => _mCatalogId.GetValue("catalogId");

        /// <summary>
        /// Name of the database for the table. Unique to a Data Catalog.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("databaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDatabaseName;

        public string? DatabaseName => _mDatabaseName.GetValue("databaseName");

        /// <summary>
        /// Name of the table. At least one of `name` or `wildcard` is required.
        /// </summary>
        [Input("name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mName;

        public string? Name => _mName.GetValue("name");

        /// <summary>
        /// Whether to use a wildcard representing every table under a database. At least one of `name` or `wildcard` is required. Defaults to `false`.
        /// </summary>
        [Input("wildcard")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mWildcard;

        public bool? Wildcard => _mWildcard.GetValue("wildcard");
    }
}
