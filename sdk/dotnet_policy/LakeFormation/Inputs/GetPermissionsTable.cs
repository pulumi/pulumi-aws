// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LakeFormation.Inputs
{
    public sealed class GetPermissionsTableArgs
    {
        /// <summary>
        /// Identifier for the Data Catalog. By default, it is the account ID of the caller.
        /// </summary>
        [PolicyResourceProperty("catalogId", "_mUnknown_CatalogId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CatalogId;
        private bool _mUnknown_CatalogId;
        public string? CatalogId
        {
            get
            {
                if (!_mUnknown_CatalogId) return _mValue_CatalogId;
                throw new UndeferrableValueException("Value 'GetPermissionsTableArgs.CatalogId' is not present");
            }
        }

        /// <summary>
        /// Name of the database for the table. Unique to a Data Catalog.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("databaseName", "_mUnknown_DatabaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DatabaseName;
        private bool _mUnknown_DatabaseName;
        public string? DatabaseName
        {
            get
            {
                if (!_mUnknown_DatabaseName) return _mValue_DatabaseName;
                throw new UndeferrableValueException("Value 'GetPermissionsTableArgs.DatabaseName' is not present");
            }
        }

        /// <summary>
        /// Name of the table. At least one of `name` or `wildcard` is required.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'GetPermissionsTableArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Whether to use a wildcard representing every table under a database. At least one of `name` or `wildcard` is required. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("wildcard", "_mUnknown_Wildcard")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Wildcard;
        private bool _mUnknown_Wildcard;
        public bool? Wildcard
        {
            get
            {
                if (!_mUnknown_Wildcard) return _mValue_Wildcard;
                throw new UndeferrableValueException("Value 'GetPermissionsTableArgs.Wildcard' is not present");
            }
        }
    }
}
