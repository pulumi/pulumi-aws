// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LakeFormation.Inputs
{
    public sealed class DataCellsFilterTableDataArgs
    {
        /// <summary>
        /// A list of column names and/or nested column attributes.
        /// </summary>
        [PolicyResourceProperty("columnNames", "_mUnknown_ColumnNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ColumnNames;
        private bool _mUnknown_ColumnNames;
        public List<string>? ColumnNames
        {
            get
            {
                if (!_mUnknown_ColumnNames) return _mValue_ColumnNames;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.ColumnNames' is not present");
            }
        }

        /// <summary>
        /// A wildcard with exclusions. See Column Wildcard below for details.
        /// </summary>
        [PolicyResourceProperty("columnWildcard", "_mUnknown_ColumnWildcard")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DataCellsFilterTableDataColumnWildcardArgs? _mValue_ColumnWildcard;
        private bool _mUnknown_ColumnWildcard;
        public Inputs.DataCellsFilterTableDataColumnWildcardArgs? ColumnWildcard
        {
            get
            {
                if (!_mUnknown_ColumnWildcard) return _mValue_ColumnWildcard;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.ColumnWildcard' is not present");
            }
        }

        /// <summary>
        /// The name of the database.
        /// </summary>
        [PolicyResourceProperty("databaseName", "_mUnknown_DatabaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DatabaseName;
        private bool _mUnknown_DatabaseName;
        public string? DatabaseName
        {
            get
            {
                if (!_mUnknown_DatabaseName) return _mValue_DatabaseName;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.DatabaseName' is not present");
            }
        }

        /// <summary>
        /// The name of the data cells filter.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A PartiQL predicate. See Row Filter below for details.
        /// </summary>
        [PolicyResourceProperty("rowFilter", "_mUnknown_RowFilter")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DataCellsFilterTableDataRowFilterArgs? _mValue_RowFilter;
        private bool _mUnknown_RowFilter;
        public Inputs.DataCellsFilterTableDataRowFilterArgs? RowFilter
        {
            get
            {
                if (!_mUnknown_RowFilter) return _mValue_RowFilter;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.RowFilter' is not present");
            }
        }

        /// <summary>
        /// The ID of the Data Catalog.
        /// </summary>
        [PolicyResourceProperty("tableCatalogId", "_mUnknown_TableCatalogId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TableCatalogId;
        private bool _mUnknown_TableCatalogId;
        public string? TableCatalogId
        {
            get
            {
                if (!_mUnknown_TableCatalogId) return _mValue_TableCatalogId;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.TableCatalogId' is not present");
            }
        }

        /// <summary>
        /// The name of the table.
        /// </summary>
        [PolicyResourceProperty("tableName", "_mUnknown_TableName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TableName;
        private bool _mUnknown_TableName;
        public string? TableName
        {
            get
            {
                if (!_mUnknown_TableName) return _mValue_TableName;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.TableName' is not present");
            }
        }

        /// <summary>
        /// ID of the data cells filter version.
        /// </summary>
        [PolicyResourceProperty("versionId", "_mUnknown_VersionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VersionId;
        private bool _mUnknown_VersionId;
        public string? VersionId
        {
            get
            {
                if (!_mUnknown_VersionId) return _mValue_VersionId;
                throw new UndeferrableValueException("Value 'DataCellsFilterTableDataArgs.VersionId' is not present");
            }
        }
    }
}
