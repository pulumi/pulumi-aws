// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LakeFormation
{
    [PolicyResourceType("aws:lakeformation/permissions:Permissions")]
    public sealed class Permissions : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
        /// </summary>
        [Input("catalogId")]
        public string? CatalogId;

        /// <summary>
        /// Whether the permissions are to be granted for the Data Catalog. Defaults to `false`.
        /// </summary>
        [Input("catalogResource")]
        public bool? CatalogResource;

        /// <summary>
        /// Configuration block for a data cells filter resource. Detailed below.
        /// </summary>
        [Input("dataCellsFilter")]
        public PermissionsDataCellsFilter? DataCellsFilter;

        /// <summary>
        /// Configuration block for a data location resource. Detailed below.
        /// </summary>
        [Input("dataLocation")]
        public PermissionsDataLocation? DataLocation;

        /// <summary>
        /// Configuration block for a database resource. Detailed below.
        /// </summary>
        [Input("database")]
        public PermissionsDatabase? Database;

        /// <summary>
        /// Configuration block for an LF-tag resource. Detailed below.
        /// </summary>
        [Input("lfTag")]
        public PermissionsLfTag? LfTag;

        /// <summary>
        /// Configuration block for an LF-tag policy resource. Detailed below.
        /// </summary>
        [Input("lfTagPolicy")]
        public PermissionsLfTagPolicy? LfTagPolicy;

        /// <summary>
        /// List of permissions granted to the principal. Valid values may include `ALL`, `ALTER`, `ASSOCIATE`, `CREATE_DATABASE`, `CREATE_TABLE`, `DATA_LOCATION_ACCESS`, `DELETE`, `DESCRIBE`, `DROP`, `INSERT`, and `SELECT`. For details on each permission, see [Lake Formation Permissions Reference](https://docs.aws.amazon.com/lake-formation/latest/dg/lf-permissions-reference.html).
        /// </summary>
        [Input("permissions")]
        public List<string>? PermissionDetails;

        /// <summary>
        /// Subset of `permissions` which the principal can pass.
        /// </summary>
        [Input("permissionsWithGrantOptions")]
        public List<string>? PermissionsWithGrantOptions;

        /// <summary>
        /// Principal to be granted the permissions on the resource. Supported principals include `IAM_ALLOWED_PRINCIPALS` (see Default Behavior and `IAMAllowedPrincipals` above), IAM roles, users, groups, Federated Users, SAML groups and users, QuickSight groups, OUs, and organizations as well as AWS account IDs for cross-account permissions. For more information, see [Lake Formation Permissions Reference](https://docs.aws.amazon.com/lake-formation/latest/dg/lf-permissions-reference.html).
        /// 
        /// &gt; **NOTE:** We highly recommend that the `principal` _NOT_ be a Lake Formation administrator (granted using `aws.lakeformation.DataLakeSettings`). The entity (e.g., IAM role) running the deployment will most likely need to be a Lake Formation administrator. As such, the entity will have implicit permissions and does not need permissions granted through this resource.
        /// 
        /// One of the following is required:
        /// </summary>
        [Input("principal")]
        public string? Principal;

        /// <summary>
        /// Configuration block for a table resource. Detailed below.
        /// </summary>
        [Input("table")]
        public PermissionsTable? Table;

        /// <summary>
        /// Configuration block for a table with columns resource. Detailed below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("tableWithColumns")]
        public PermissionsTableWithColumns? TableWithColumns;
    }
}
