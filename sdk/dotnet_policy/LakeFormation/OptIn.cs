// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LakeFormation
{
    [PolicyResourceType("aws:lakeformation/optIn:OptIn")]
    public sealed class OptIn : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
        /// </summary>
        [PolicyResourceProperty("conditions", "_mUnknown_Conditions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.OptInCondition>? _mValue_Conditions;
        private bool _mUnknown_Conditions;
        public List<Outputs.OptInCondition>? Conditions
        {
            get
            {
                if (!_mUnknown_Conditions) return _mValue_Conditions;
                throw new UndeferrableValueException("Value 'OptIn.Conditions' is not present");
            }
        }

        /// <summary>
        /// Last modified date and time of the record.
        /// </summary>
        [PolicyResourceProperty("lastModified", "_mUnknown_LastModified")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastModified;
        private bool _mUnknown_LastModified;
        public string? LastModified
        {
            get
            {
                if (!_mUnknown_LastModified) return _mValue_LastModified;
                throw new UndeferrableValueException("Value 'OptIn.LastModified' is not present");
            }
        }

        [PolicyResourceProperty("lastUpdatedBy", "_mUnknown_LastUpdatedBy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastUpdatedBy;
        private bool _mUnknown_LastUpdatedBy;
        public string? LastUpdatedBy
        {
            get
            {
                if (!_mUnknown_LastUpdatedBy) return _mValue_LastUpdatedBy;
                throw new UndeferrableValueException("Value 'OptIn.LastUpdatedBy' is not present");
            }
        }

        /// <summary>
        /// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
        /// </summary>
        [PolicyResourceProperty("principals", "_mUnknown_Principals")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.OptInPrincipal>? _mValue_Principals;
        private bool _mUnknown_Principals;
        public List<Outputs.OptInPrincipal>? Principals
        {
            get
            {
                if (!_mUnknown_Principals) return _mValue_Principals;
                throw new UndeferrableValueException("Value 'OptIn.Principals' is not present");
            }
        }

        /// <summary>
        /// Structure for the resource. See Resource for more details.
        /// </summary>
        [PolicyResourceProperty("resourceDatas", "_mUnknown_ResourceDatas")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.OptInResourceData>? _mValue_ResourceDatas;
        private bool _mUnknown_ResourceDatas;
        public List<Outputs.OptInResourceData>? ResourceDatas
        {
            get
            {
                if (!_mUnknown_ResourceDatas) return _mValue_ResourceDatas;
                throw new UndeferrableValueException("Value 'OptIn.ResourceDatas' is not present");
            }
        }
    }

    [PolicyResourceType("aws:lakeformation/optIn:OptIn")]
    public sealed class OptInArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
        /// </summary>
        [PolicyResourceProperty("conditions", "_mUnknown_Conditions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.OptInConditionArgs>? _mValue_Conditions;
        private bool _mUnknown_Conditions;
        public List<Inputs.OptInConditionArgs>? Conditions
        {
            get
            {
                if (!_mUnknown_Conditions) return _mValue_Conditions;
                throw new UndeferrableValueException("Value 'OptInArgs.Conditions' is not present");
            }
        }

        /// <summary>
        /// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
        /// </summary>
        [PolicyResourceProperty("principals", "_mUnknown_Principals")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.OptInPrincipalArgs>? _mValue_Principals;
        private bool _mUnknown_Principals;
        public List<Inputs.OptInPrincipalArgs>? Principals
        {
            get
            {
                if (!_mUnknown_Principals) return _mValue_Principals;
                throw new UndeferrableValueException("Value 'OptInArgs.Principals' is not present");
            }
        }

        /// <summary>
        /// Structure for the resource. See Resource for more details.
        /// </summary>
        [PolicyResourceProperty("resourceDatas", "_mUnknown_ResourceDatas")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.OptInResourceDataArgs>? _mValue_ResourceDatas;
        private bool _mUnknown_ResourceDatas;
        public List<Inputs.OptInResourceDataArgs>? ResourceDatas
        {
            get
            {
                if (!_mUnknown_ResourceDatas) return _mValue_ResourceDatas;
                throw new UndeferrableValueException("Value 'OptInArgs.ResourceDatas' is not present");
            }
        }
    }
}
