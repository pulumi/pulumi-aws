// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.EmrServerless
{
    [PolicyResourceType("aws:emrserverless/application:Application")]
    public sealed class Application : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The CPU architecture of an application. Valid values are `ARM64` or `X86_64`. Default value is `X86_64`.
        /// </summary>
        [Input("architecture")]
        public string? Architecture;

        /// <summary>
        /// ARN of the cluster.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The configuration for an application to automatically start on job submission.
        /// </summary>
        [Input("autoStartConfiguration")]
        public ApplicationAutoStartConfiguration? AutoStartConfiguration;

        /// <summary>
        /// The configuration for an application to automatically stop after a certain amount of time being idle.
        /// </summary>
        [Input("autoStopConfiguration")]
        public ApplicationAutoStopConfiguration? AutoStopConfiguration;

        /// <summary>
        /// The image configuration applied to all worker types.
        /// </summary>
        [Input("imageConfiguration")]
        public ApplicationImageConfiguration? ImageConfiguration;

        /// <summary>
        /// The capacity to initialize when the application is created.
        /// </summary>
        [Input("initialCapacities")]
        public List<ApplicationInitialCapacity>? InitialCapacities;

        /// <summary>
        /// Enables the interactive use cases to use when running an application.
        /// </summary>
        [Input("interactiveConfiguration")]
        public ApplicationInteractiveConfiguration? InteractiveConfiguration;

        /// <summary>
        /// The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
        /// </summary>
        [Input("maximumCapacity")]
        public ApplicationMaximumCapacity? MaximumCapacity;

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The network configuration for customer VPC connectivity.
        /// </summary>
        [Input("networkConfiguration")]
        public ApplicationNetworkConfiguration? NetworkConfiguration;

        /// <summary>
        /// The EMR release version associated with the application.
        /// </summary>
        [Input("releaseLabel")]
        public string? ReleaseLabel;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The type of application you want to start, such as `spark` or `hive`.
        /// </summary>
        [Input("type")]
        public string? Type;
    }
}
