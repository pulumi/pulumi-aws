// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.EmrServerless
{
    [PolicyResourceType("aws:emrserverless/application:Application")]
    public sealed class Application : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The CPU architecture of an application. Valid values are `ARM64` or `X86_64`. Default value is `X86_64`.
        /// </summary>
        [PolicyResourceProperty("architecture", "_mUnknown_Architecture")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Architecture;
        private bool _mUnknown_Architecture;
        public string? Architecture
        {
            get
            {
                if (!_mUnknown_Architecture) return _mValue_Architecture;
                throw new UndeferrableValueException("Value 'Application.Architecture' is not present");
            }
        }

        /// <summary>
        /// ARN of the cluster.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Application.Arn' is not present");
            }
        }

        /// <summary>
        /// The configuration for an application to automatically start on job submission.
        /// </summary>
        [PolicyResourceProperty("autoStartConfiguration", "_mUnknown_AutoStartConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationAutoStartConfiguration? _mValue_AutoStartConfiguration;
        private bool _mUnknown_AutoStartConfiguration;
        public Outputs.ApplicationAutoStartConfiguration? AutoStartConfiguration
        {
            get
            {
                if (!_mUnknown_AutoStartConfiguration) return _mValue_AutoStartConfiguration;
                throw new UndeferrableValueException("Value 'Application.AutoStartConfiguration' is not present");
            }
        }

        /// <summary>
        /// The configuration for an application to automatically stop after a certain amount of time being idle.
        /// </summary>
        [PolicyResourceProperty("autoStopConfiguration", "_mUnknown_AutoStopConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationAutoStopConfiguration? _mValue_AutoStopConfiguration;
        private bool _mUnknown_AutoStopConfiguration;
        public Outputs.ApplicationAutoStopConfiguration? AutoStopConfiguration
        {
            get
            {
                if (!_mUnknown_AutoStopConfiguration) return _mValue_AutoStopConfiguration;
                throw new UndeferrableValueException("Value 'Application.AutoStopConfiguration' is not present");
            }
        }

        /// <summary>
        /// The image configuration applied to all worker types.
        /// </summary>
        [PolicyResourceProperty("imageConfiguration", "_mUnknown_ImageConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationImageConfiguration? _mValue_ImageConfiguration;
        private bool _mUnknown_ImageConfiguration;
        public Outputs.ApplicationImageConfiguration? ImageConfiguration
        {
            get
            {
                if (!_mUnknown_ImageConfiguration) return _mValue_ImageConfiguration;
                throw new UndeferrableValueException("Value 'Application.ImageConfiguration' is not present");
            }
        }

        /// <summary>
        /// The capacity to initialize when the application is created.
        /// </summary>
        [PolicyResourceProperty("initialCapacities", "_mUnknown_InitialCapacities")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ApplicationInitialCapacity>? _mValue_InitialCapacities;
        private bool _mUnknown_InitialCapacities;
        public List<Outputs.ApplicationInitialCapacity>? InitialCapacities
        {
            get
            {
                if (!_mUnknown_InitialCapacities) return _mValue_InitialCapacities;
                throw new UndeferrableValueException("Value 'Application.InitialCapacities' is not present");
            }
        }

        /// <summary>
        /// Enables the interactive use cases to use when running an application.
        /// </summary>
        [PolicyResourceProperty("interactiveConfiguration", "_mUnknown_InteractiveConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationInteractiveConfiguration? _mValue_InteractiveConfiguration;
        private bool _mUnknown_InteractiveConfiguration;
        public Outputs.ApplicationInteractiveConfiguration? InteractiveConfiguration
        {
            get
            {
                if (!_mUnknown_InteractiveConfiguration) return _mValue_InteractiveConfiguration;
                throw new UndeferrableValueException("Value 'Application.InteractiveConfiguration' is not present");
            }
        }

        /// <summary>
        /// The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
        /// </summary>
        [PolicyResourceProperty("maximumCapacity", "_mUnknown_MaximumCapacity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationMaximumCapacity? _mValue_MaximumCapacity;
        private bool _mUnknown_MaximumCapacity;
        public Outputs.ApplicationMaximumCapacity? MaximumCapacity
        {
            get
            {
                if (!_mUnknown_MaximumCapacity) return _mValue_MaximumCapacity;
                throw new UndeferrableValueException("Value 'Application.MaximumCapacity' is not present");
            }
        }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Application.Name' is not present");
            }
        }

        /// <summary>
        /// The network configuration for customer VPC connectivity.
        /// </summary>
        [PolicyResourceProperty("networkConfiguration", "_mUnknown_NetworkConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ApplicationNetworkConfiguration? _mValue_NetworkConfiguration;
        private bool _mUnknown_NetworkConfiguration;
        public Outputs.ApplicationNetworkConfiguration? NetworkConfiguration
        {
            get
            {
                if (!_mUnknown_NetworkConfiguration) return _mValue_NetworkConfiguration;
                throw new UndeferrableValueException("Value 'Application.NetworkConfiguration' is not present");
            }
        }

        /// <summary>
        /// The EMR release version associated with the application.
        /// </summary>
        [PolicyResourceProperty("releaseLabel", "_mUnknown_ReleaseLabel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReleaseLabel;
        private bool _mUnknown_ReleaseLabel;
        public string? ReleaseLabel
        {
            get
            {
                if (!_mUnknown_ReleaseLabel) return _mValue_ReleaseLabel;
                throw new UndeferrableValueException("Value 'Application.ReleaseLabel' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Application.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Application.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The type of application you want to start, such as `spark` or `hive`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'Application.Type' is not present");
            }
        }
    }

    [PolicyResourceType("aws:emrserverless/application:Application")]
    public sealed class ApplicationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The CPU architecture of an application. Valid values are `ARM64` or `X86_64`. Default value is `X86_64`.
        /// </summary>
        [PolicyResourceProperty("architecture", "_mUnknown_Architecture")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Architecture;
        private bool _mUnknown_Architecture;
        public string? Architecture
        {
            get
            {
                if (!_mUnknown_Architecture) return _mValue_Architecture;
                throw new UndeferrableValueException("Value 'ApplicationArgs.Architecture' is not present");
            }
        }

        /// <summary>
        /// The configuration for an application to automatically start on job submission.
        /// </summary>
        [PolicyResourceProperty("autoStartConfiguration", "_mUnknown_AutoStartConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationAutoStartConfigurationArgs? _mValue_AutoStartConfiguration;
        private bool _mUnknown_AutoStartConfiguration;
        public Inputs.ApplicationAutoStartConfigurationArgs? AutoStartConfiguration
        {
            get
            {
                if (!_mUnknown_AutoStartConfiguration) return _mValue_AutoStartConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationArgs.AutoStartConfiguration' is not present");
            }
        }

        /// <summary>
        /// The configuration for an application to automatically stop after a certain amount of time being idle.
        /// </summary>
        [PolicyResourceProperty("autoStopConfiguration", "_mUnknown_AutoStopConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationAutoStopConfigurationArgs? _mValue_AutoStopConfiguration;
        private bool _mUnknown_AutoStopConfiguration;
        public Inputs.ApplicationAutoStopConfigurationArgs? AutoStopConfiguration
        {
            get
            {
                if (!_mUnknown_AutoStopConfiguration) return _mValue_AutoStopConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationArgs.AutoStopConfiguration' is not present");
            }
        }

        /// <summary>
        /// The image configuration applied to all worker types.
        /// </summary>
        [PolicyResourceProperty("imageConfiguration", "_mUnknown_ImageConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationImageConfigurationArgs? _mValue_ImageConfiguration;
        private bool _mUnknown_ImageConfiguration;
        public Inputs.ApplicationImageConfigurationArgs? ImageConfiguration
        {
            get
            {
                if (!_mUnknown_ImageConfiguration) return _mValue_ImageConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationArgs.ImageConfiguration' is not present");
            }
        }

        /// <summary>
        /// The capacity to initialize when the application is created.
        /// </summary>
        [PolicyResourceProperty("initialCapacities", "_mUnknown_InitialCapacities")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ApplicationInitialCapacityArgs>? _mValue_InitialCapacities;
        private bool _mUnknown_InitialCapacities;
        public List<Inputs.ApplicationInitialCapacityArgs>? InitialCapacities
        {
            get
            {
                if (!_mUnknown_InitialCapacities) return _mValue_InitialCapacities;
                throw new UndeferrableValueException("Value 'ApplicationArgs.InitialCapacities' is not present");
            }
        }

        /// <summary>
        /// Enables the interactive use cases to use when running an application.
        /// </summary>
        [PolicyResourceProperty("interactiveConfiguration", "_mUnknown_InteractiveConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationInteractiveConfigurationArgs? _mValue_InteractiveConfiguration;
        private bool _mUnknown_InteractiveConfiguration;
        public Inputs.ApplicationInteractiveConfigurationArgs? InteractiveConfiguration
        {
            get
            {
                if (!_mUnknown_InteractiveConfiguration) return _mValue_InteractiveConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationArgs.InteractiveConfiguration' is not present");
            }
        }

        /// <summary>
        /// The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
        /// </summary>
        [PolicyResourceProperty("maximumCapacity", "_mUnknown_MaximumCapacity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationMaximumCapacityArgs? _mValue_MaximumCapacity;
        private bool _mUnknown_MaximumCapacity;
        public Inputs.ApplicationMaximumCapacityArgs? MaximumCapacity
        {
            get
            {
                if (!_mUnknown_MaximumCapacity) return _mValue_MaximumCapacity;
                throw new UndeferrableValueException("Value 'ApplicationArgs.MaximumCapacity' is not present");
            }
        }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ApplicationArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The network configuration for customer VPC connectivity.
        /// </summary>
        [PolicyResourceProperty("networkConfiguration", "_mUnknown_NetworkConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ApplicationNetworkConfigurationArgs? _mValue_NetworkConfiguration;
        private bool _mUnknown_NetworkConfiguration;
        public Inputs.ApplicationNetworkConfigurationArgs? NetworkConfiguration
        {
            get
            {
                if (!_mUnknown_NetworkConfiguration) return _mValue_NetworkConfiguration;
                throw new UndeferrableValueException("Value 'ApplicationArgs.NetworkConfiguration' is not present");
            }
        }

        /// <summary>
        /// The EMR release version associated with the application.
        /// </summary>
        [PolicyResourceProperty("releaseLabel", "_mUnknown_ReleaseLabel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReleaseLabel;
        private bool _mUnknown_ReleaseLabel;
        public string? ReleaseLabel
        {
            get
            {
                if (!_mUnknown_ReleaseLabel) return _mValue_ReleaseLabel;
                throw new UndeferrableValueException("Value 'ApplicationArgs.ReleaseLabel' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ApplicationArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The type of application you want to start, such as `spark` or `hive`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'ApplicationArgs.Type' is not present");
            }
        }
    }
}
