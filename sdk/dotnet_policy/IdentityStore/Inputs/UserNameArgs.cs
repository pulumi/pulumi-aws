// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.IdentityStore.Inputs
{
    public sealed class UserNameArgs
    {
        /// <summary>
        /// The family name of the user.
        /// </summary>
        [PolicyResourceProperty("familyName", "_mUnknown_FamilyName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FamilyName;
        private bool _mUnknown_FamilyName;
        public string? FamilyName
        {
            get
            {
                if (!_mUnknown_FamilyName) return _mValue_FamilyName;
                throw new UndeferrableValueException("Value 'UserNameArgs.FamilyName' is not present");
            }
        }

        /// <summary>
        /// The name that is typically displayed when the name is shown for display.
        /// </summary>
        [PolicyResourceProperty("formatted", "_mUnknown_Formatted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Formatted;
        private bool _mUnknown_Formatted;
        public string? Formatted
        {
            get
            {
                if (!_mUnknown_Formatted) return _mValue_Formatted;
                throw new UndeferrableValueException("Value 'UserNameArgs.Formatted' is not present");
            }
        }

        /// <summary>
        /// The given name of the user.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("givenName", "_mUnknown_GivenName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GivenName;
        private bool _mUnknown_GivenName;
        public string? GivenName
        {
            get
            {
                if (!_mUnknown_GivenName) return _mValue_GivenName;
                throw new UndeferrableValueException("Value 'UserNameArgs.GivenName' is not present");
            }
        }

        /// <summary>
        /// The honorific prefix of the user.
        /// </summary>
        [PolicyResourceProperty("honorificPrefix", "_mUnknown_HonorificPrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HonorificPrefix;
        private bool _mUnknown_HonorificPrefix;
        public string? HonorificPrefix
        {
            get
            {
                if (!_mUnknown_HonorificPrefix) return _mValue_HonorificPrefix;
                throw new UndeferrableValueException("Value 'UserNameArgs.HonorificPrefix' is not present");
            }
        }

        /// <summary>
        /// The honorific suffix of the user.
        /// </summary>
        [PolicyResourceProperty("honorificSuffix", "_mUnknown_HonorificSuffix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HonorificSuffix;
        private bool _mUnknown_HonorificSuffix;
        public string? HonorificSuffix
        {
            get
            {
                if (!_mUnknown_HonorificSuffix) return _mValue_HonorificSuffix;
                throw new UndeferrableValueException("Value 'UserNameArgs.HonorificSuffix' is not present");
            }
        }

        /// <summary>
        /// The middle name of the user.
        /// </summary>
        [PolicyResourceProperty("middleName", "_mUnknown_MiddleName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MiddleName;
        private bool _mUnknown_MiddleName;
        public string? MiddleName
        {
            get
            {
                if (!_mUnknown_MiddleName) return _mValue_MiddleName;
                throw new UndeferrableValueException("Value 'UserNameArgs.MiddleName' is not present");
            }
        }
    }
}
