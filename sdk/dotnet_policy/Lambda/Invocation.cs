// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lambda
{
    [PolicyResourceType("aws:lambda/invocation:Invocation")]
    public sealed class Invocation : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Name of the lambda function.
        /// </summary>
        [Input("functionName")]
        public string? FunctionName;

        /// <summary>
        /// JSON payload to the lambda function.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("input")]
        public string? Input;

        /// <summary>
        /// Lifecycle scope of the resource to manage. Valid values are `CREATE_ONLY` and `CRUD`. Defaults to `CREATE_ONLY`. `CREATE_ONLY` will invoke the function only on creation or replacement. `CRUD` will invoke the function on each lifecycle event, and augment the input JSON payload with additional lifecycle information.
        /// </summary>
        [Input("lifecycleScope")]
        public string? LifecycleScope;

        /// <summary>
        /// Qualifier (i.e., version) of the lambda function. Defaults to `$LATEST`.
        /// </summary>
        [Input("qualifier")]
        public string? Qualifier;

        /// <summary>
        /// String result of the lambda function invocation.
        /// </summary>
        [Input("result")]
        public string? Result;

        [Input("terraformKey")]
        public string? TerraformKey;

        /// <summary>
        /// Map of arbitrary keys and values that, when changed, will trigger a re-invocation.
        /// </summary>
        [Input("triggers")]
        public Dictionary<string, string>? Triggers;
    }
}
