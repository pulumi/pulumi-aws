// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lambda.Outputs
{
    public sealed class FunctionImageConfig
    {
        /// <summary>
        /// Parameters that you want to pass in with `entry_point`.
        /// </summary>
        [PolicyResourceProperty("commands", "_mUnknown_Commands")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Commands;
        private bool _mUnknown_Commands;
        public List<string>? Commands
        {
            get
            {
                if (!_mUnknown_Commands) return _mValue_Commands;
                throw new UndeferrableValueException("Value 'FunctionImageConfig.Commands' is not present");
            }
        }

        /// <summary>
        /// Entry point to your application, which is typically the location of the runtime executable.
        /// </summary>
        [PolicyResourceProperty("entryPoints", "_mUnknown_EntryPoints")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_EntryPoints;
        private bool _mUnknown_EntryPoints;
        public List<string>? EntryPoints
        {
            get
            {
                if (!_mUnknown_EntryPoints) return _mValue_EntryPoints;
                throw new UndeferrableValueException("Value 'FunctionImageConfig.EntryPoints' is not present");
            }
        }

        /// <summary>
        /// Working directory.
        /// </summary>
        [PolicyResourceProperty("workingDirectory", "_mUnknown_WorkingDirectory")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkingDirectory;
        private bool _mUnknown_WorkingDirectory;
        public string? WorkingDirectory
        {
            get
            {
                if (!_mUnknown_WorkingDirectory) return _mValue_WorkingDirectory;
                throw new UndeferrableValueException("Value 'FunctionImageConfig.WorkingDirectory' is not present");
            }
        }
    }
}
