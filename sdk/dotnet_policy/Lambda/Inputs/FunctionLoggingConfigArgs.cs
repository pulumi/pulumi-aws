// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lambda.Inputs
{
    public sealed class FunctionLoggingConfigArgs
    {
        /// <summary>
        /// for JSON structured logs, choose the detail level of the logs your application sends to CloudWatch when using supported logging libraries.
        /// </summary>
        [PolicyResourceProperty("applicationLogLevel", "_mUnknown_ApplicationLogLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ApplicationLogLevel;
        private bool _mUnknown_ApplicationLogLevel;
        public string? ApplicationLogLevel
        {
            get
            {
                if (!_mUnknown_ApplicationLogLevel) return _mValue_ApplicationLogLevel;
                throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.ApplicationLogLevel' is not present");
            }
        }

        /// <summary>
        /// select between `Text` and structured `JSON` format for your function's logs.
        /// </summary>
        [PolicyResourceProperty("logFormat", "_mUnknown_LogFormat")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogFormat;
        private bool _mUnknown_LogFormat;
        public string? LogFormat
        {
            get
            {
                if (!_mUnknown_LogFormat) return _mValue_LogFormat;
                throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.LogFormat' is not present");
            }
        }

        /// <summary>
        /// the CloudWatch log group your function sends logs to.
        /// </summary>
        [PolicyResourceProperty("logGroup", "_mUnknown_LogGroup")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogGroup;
        private bool _mUnknown_LogGroup;
        public string? LogGroup
        {
            get
            {
                if (!_mUnknown_LogGroup) return _mValue_LogGroup;
                throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.LogGroup' is not present");
            }
        }

        /// <summary>
        /// for JSON structured logs, choose the detail level of the Lambda platform event logs sent to CloudWatch, such as `ERROR`, `DEBUG`, or `INFO`.
        /// </summary>
        [PolicyResourceProperty("systemLogLevel", "_mUnknown_SystemLogLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SystemLogLevel;
        private bool _mUnknown_SystemLogLevel;
        public string? SystemLogLevel
        {
            get
            {
                if (!_mUnknown_SystemLogLevel) return _mValue_SystemLogLevel;
                throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.SystemLogLevel' is not present");
            }
        }
    }
}
