// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lambda.Inputs
{
    public sealed class FunctionLoggingConfigArgs
    {
        /// <summary>
        /// for JSON structured logs, choose the detail level of the logs your application sends to CloudWatch when using supported logging libraries.
        /// </summary>
        [Input("applicationLogLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mApplicationLogLevel;

        public string? ApplicationLogLevel => _mApplicationLogLevel.GetValue("applicationLogLevel");

        /// <summary>
        /// select between `Text` and structured `JSON` format for your function's logs.
        /// </summary>
        [Input("logFormat")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLogFormat;

        public string? LogFormat => _mLogFormat.GetValue("logFormat");

        /// <summary>
        /// the CloudWatch log group your function sends logs to.
        /// </summary>
        [Input("logGroup")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLogGroup;

        public string? LogGroup => _mLogGroup.GetValue("logGroup");

        /// <summary>
        /// for JSON structured logs, choose the detail level of the Lambda platform event logs sent to CloudWatch, such as `ERROR`, `DEBUG`, or `INFO`.
        /// </summary>
        [Input("systemLogLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mSystemLogLevel;

        public string? SystemLogLevel => _mSystemLogLevel.GetValue("systemLogLevel");
    }
}
