// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lambda
{
    [PolicyResourceType("aws:lambda/layerVersion:LayerVersion")]
    public sealed class LayerVersion : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the Lambda Layer with version.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Path to the function's deployment package within the local filesystem. If defined, The `s3_`-prefixed options cannot be used.
        /// </summary>
        [Input("code")]
        public Archive? Code;

        /// <summary>
        /// Base64-encoded representation of raw SHA-256 sum of the zip file.
        /// </summary>
        [Input("codeSha256")]
        public string? CodeSha256;

        /// <summary>
        /// List of [Architectures](https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html#SSS-PublishLayerVersion-request-CompatibleArchitectures) this layer is compatible with. Currently `x86_64` and `arm64` can be specified.
        /// </summary>
        [Input("compatibleArchitectures")]
        public List<string>? CompatibleArchitectures;

        /// <summary>
        /// List of [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html#SSS-PublishLayerVersion-request-CompatibleRuntimes) this layer is compatible with. Up to 15 runtimes can be specified.
        /// </summary>
        [Input("compatibleRuntimes")]
        public List<string>? CompatibleRuntimes;

        /// <summary>
        /// Date this resource was created.
        /// </summary>
        [Input("createdDate")]
        public string? CreatedDate;

        /// <summary>
        /// Description of what your Lambda Layer does.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// ARN of the Lambda Layer without version.
        /// </summary>
        [Input("layerArn")]
        public string? LayerArn;

        /// <summary>
        /// Unique name for your Lambda Layer
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("layerName")]
        public string? LayerName;

        /// <summary>
        /// License info for your Lambda Layer. See [License Info](https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html#SSS-PublishLayerVersion-request-LicenseInfo).
        /// </summary>
        [Input("licenseInfo")]
        public string? LicenseInfo;

        /// <summary>
        /// S3 bucket location containing the function's deployment package. Conflicts with `filename`. This bucket must reside in the same AWS region where you are creating the Lambda function.
        /// </summary>
        [Input("s3Bucket")]
        public string? S3Bucket;

        /// <summary>
        /// S3 key of an object containing the function's deployment package. Conflicts with `filename`.
        /// </summary>
        [Input("s3Key")]
        public string? S3Key;

        /// <summary>
        /// Object version containing the function's deployment package. Conflicts with `filename`.
        /// </summary>
        [Input("s3ObjectVersion")]
        public string? S3ObjectVersion;

        /// <summary>
        /// ARN of a signing job.
        /// </summary>
        [Input("signingJobArn")]
        public string? SigningJobArn;

        /// <summary>
        /// ARN for a signing profile version.
        /// </summary>
        [Input("signingProfileVersionArn")]
        public string? SigningProfileVersionArn;

        /// <summary>
        /// Whether to retain the old version of a previously deployed Lambda Layer. Default is `false`. When this is not set to `true`, changing any of `compatible_architectures`, `compatible_runtimes`, `description`, `filename`, `layer_name`, `license_info`, `s3_bucket`, `s3_key`, `s3_object_version`, or `source_code_hash` forces deletion of the existing layer version and creation of a new layer version.
        /// </summary>
        [Input("skipDestroy")]
        public bool? SkipDestroy;

        /// <summary>
        /// Virtual attribute used to trigger replacement when source code changes. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`.
        /// </summary>
        [Input("sourceCodeHash")]
        public string? SourceCodeHash;

        /// <summary>
        /// Size in bytes of the function .zip file.
        /// </summary>
        [Input("sourceCodeSize")]
        public int? SourceCodeSize;

        /// <summary>
        /// Lambda Layer version.
        /// </summary>
        [Input("version")]
        public string? Version;
    }
}
