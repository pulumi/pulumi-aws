// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lambda
{
    [PolicyResourceType("aws:lambda/layerVersionPermission:LayerVersionPermission")]
    public sealed class LayerVersionPermission : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Action, which will be allowed. `lambda:GetLayerVersion` value is suggested by AWS documantation.
        /// </summary>
        [Input("action")]
        public string? Action;

        /// <summary>
        /// The name or ARN of the Lambda Layer, which you want to grant access to.
        /// </summary>
        [Input("layerName")]
        public string? LayerName;

        /// <summary>
        /// An identifier of AWS Organization, which should be able to use your Lambda Layer. `principal` should be equal to `*` if `organization_id` provided.
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId;

        /// <summary>
        /// Full Lambda Layer Permission policy.
        /// </summary>
        [Input("policy")]
        public string? Policy;

        /// <summary>
        /// AWS account ID which should be able to use your Lambda Layer. `*` can be used here, if you want to share your Lambda Layer widely.
        /// </summary>
        [Input("principal")]
        public string? Principal;

        /// <summary>
        /// A unique identifier for the current revision of the policy.
        /// </summary>
        [Input("revisionId")]
        public string? RevisionId;

        /// <summary>
        /// Whether to retain the old version of a previously deployed Lambda Layer. Default is `false`. When this is not set to `true`, changing any of `compatible_architectures`, `compatible_runtimes`, `description`, `filename`, `layer_name`, `license_info`, `s3_bucket`, `s3_key`, `s3_object_version`, or `source_code_hash` forces deletion of the existing layer version and creation of a new layer version.
        /// </summary>
        [Input("skipDestroy")]
        public bool? SkipDestroy;

        /// <summary>
        /// The name of Lambda Layer Permission, for example `dev-account` - human readable note about what is this permission for.
        /// </summary>
        [Input("statementId")]
        public string? StatementId;

        /// <summary>
        /// Version of Lambda Layer, which you want to grant access to. Note: permissions only apply to a single version of a layer.
        /// </summary>
        [Input("versionNumber")]
        public int? VersionNumber;
    }
}
