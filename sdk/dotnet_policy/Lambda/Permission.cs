// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Lambda
{
    [PolicyResourceType("aws:lambda/permission:Permission")]
    public sealed class Permission : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)
        /// </summary>
        [Input("action")]
        public string? Action;

        /// <summary>
        /// The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).
        /// </summary>
        [Input("eventSourceToken")]
        public string? EventSourceToken;

        /// <summary>
        /// Name of the Lambda function whose resource policy you are updating
        /// </summary>
        [Input("function")]
        public string? Function;

        /// <summary>
        /// Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`. Only supported for `lambda:InvokeFunctionUrl` action.
        /// </summary>
        [Input("functionUrlAuthType")]
        public string? FunctionUrlAuthType;

        /// <summary>
        /// The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or AWS IAM principal, or AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.
        /// </summary>
        [Input("principal")]
        public string? Principal;

        /// <summary>
        /// The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.
        /// 
        /// [1]: https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli
        /// [2]: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html
        /// [3]: https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html
        /// </summary>
        [Input("principalOrgId")]
        public string? PrincipalOrgId;

        /// <summary>
        /// Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`
        /// </summary>
        [Input("qualifier")]
        public string? Qualifier;

        /// <summary>
        /// This parameter is used when allowing cross-account access, or for S3 and SES. The AWS account ID (without a hyphen) of the source owner.
        /// </summary>
        [Input("sourceAccount")]
        public string? SourceAccount;

        /// <summary>
        /// When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.
        /// Without this, any resource from `principal` will be granted permission â€“ even if that resource is from another account.
        /// For S3, this should be the ARN of the S3 Bucket.
        /// For EventBridge events, this should be the ARN of the EventBridge Rule.
        /// For API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).
        /// </summary>
        [Input("sourceArn")]
        public string? SourceArn;

        /// <summary>
        /// A unique statement identifier. By default generated by the provider.
        /// </summary>
        [Input("statementId")]
        public string? StatementId;

        /// <summary>
        /// A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.
        /// </summary>
        [Input("statementIdPrefix")]
        public string? StatementIdPrefix;
    }
}
