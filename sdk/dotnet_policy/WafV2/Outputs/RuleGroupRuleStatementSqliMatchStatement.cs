// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.WafV2.Outputs
{
    public sealed class RuleGroupRuleStatementSqliMatchStatement
    {
        /// <summary>
        /// The part of a web request that you want AWS WAF to inspect. See Field to Match below for details.
        /// </summary>
        [PolicyResourceProperty("fieldToMatch", "_mUnknown_FieldToMatch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.RuleGroupRuleStatementSqliMatchStatementFieldToMatch? _mValue_FieldToMatch;
        private bool _mUnknown_FieldToMatch;
        public Outputs.RuleGroupRuleStatementSqliMatchStatementFieldToMatch? FieldToMatch
        {
            get
            {
                if (!_mUnknown_FieldToMatch) return _mValue_FieldToMatch;
                throw new UndeferrableValueException("Value 'RuleGroupRuleStatementSqliMatchStatement.FieldToMatch' is not present");
            }
        }

        /// <summary>
        /// Sensitivity that you want AWS WAF to use to inspect for SQL injection attacks. Valid values include: `LOW`, `HIGH`.
        /// </summary>
        [PolicyResourceProperty("sensitivityLevel", "_mUnknown_SensitivityLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SensitivityLevel;
        private bool _mUnknown_SensitivityLevel;
        public string? SensitivityLevel
        {
            get
            {
                if (!_mUnknown_SensitivityLevel) return _mValue_SensitivityLevel;
                throw new UndeferrableValueException("Value 'RuleGroupRuleStatementSqliMatchStatement.SensitivityLevel' is not present");
            }
        }

        /// <summary>
        /// Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
        /// At least one required.
        /// See Text Transformation below for details.
        /// </summary>
        [PolicyResourceProperty("textTransformations", "_mUnknown_TextTransformations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RuleGroupRuleStatementSqliMatchStatementTextTransformation>? _mValue_TextTransformations;
        private bool _mUnknown_TextTransformations;
        public List<Outputs.RuleGroupRuleStatementSqliMatchStatementTextTransformation>? TextTransformations
        {
            get
            {
                if (!_mUnknown_TextTransformations) return _mValue_TextTransformations;
                throw new UndeferrableValueException("Value 'RuleGroupRuleStatementSqliMatchStatement.TextTransformations' is not present");
            }
        }
    }
}
