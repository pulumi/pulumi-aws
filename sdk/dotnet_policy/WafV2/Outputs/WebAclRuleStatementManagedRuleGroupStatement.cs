// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.WafV2.Outputs
{
    public sealed class WebAclRuleStatementManagedRuleGroupStatement
    {
        /// <summary>
        /// Additional information that's used by a managed rule group. Only one rule attribute is allowed in each config. See `managed_rule_group_configs` for more details
        /// </summary>
        [PolicyResourceProperty("managedRuleGroupConfigs", "_mUnknown_ManagedRuleGroupConfigs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig>? _mValue_ManagedRuleGroupConfigs;
        private bool _mUnknown_ManagedRuleGroupConfigs;
        public List<Outputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfig>? ManagedRuleGroupConfigs
        {
            get
            {
                if (!_mUnknown_ManagedRuleGroupConfigs) return _mValue_ManagedRuleGroupConfigs;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.ManagedRuleGroupConfigs' is not present");
            }
        }

        /// <summary>
        /// Name of the managed rule group.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.Name' is not present");
            }
        }

        /// <summary>
        /// Action settings to use in the place of the rule actions that are configured inside the rule group. You specify one override for each rule whose action you want to change. See `rule_action_override` below for details.
        /// </summary>
        [PolicyResourceProperty("ruleActionOverrides", "_mUnknown_RuleActionOverrides")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride>? _mValue_RuleActionOverrides;
        private bool _mUnknown_RuleActionOverrides;
        public List<Outputs.WebAclRuleStatementManagedRuleGroupStatementRuleActionOverride>? RuleActionOverrides
        {
            get
            {
                if (!_mUnknown_RuleActionOverrides) return _mValue_RuleActionOverrides;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.RuleActionOverrides' is not present");
            }
        }

        /// <summary>
        /// Narrows the scope of the statement to matching web requests. This can be any nestable statement, and you can nest statements at any level below this scope-down statement. See `statement` above for details.
        /// </summary>
        [PolicyResourceProperty("scopeDownStatement", "_mUnknown_ScopeDownStatement")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement? _mValue_ScopeDownStatement;
        private bool _mUnknown_ScopeDownStatement;
        public Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement? ScopeDownStatement
        {
            get
            {
                if (!_mUnknown_ScopeDownStatement) return _mValue_ScopeDownStatement;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.ScopeDownStatement' is not present");
            }
        }

        /// <summary>
        /// Name of the managed rule group vendor.
        /// </summary>
        [PolicyResourceProperty("vendorName", "_mUnknown_VendorName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VendorName;
        private bool _mUnknown_VendorName;
        public string? VendorName
        {
            get
            {
                if (!_mUnknown_VendorName) return _mValue_VendorName;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.VendorName' is not present");
            }
        }

        /// <summary>
        /// Version of the managed rule group. You can set `Version_1.0` or `Version_1.1` etc. If you want to use the default version, do not set anything.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatement.Version' is not present");
            }
        }
    }
}
