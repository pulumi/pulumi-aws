// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.WafV2.Outputs
{
    public sealed class WebAclRuleStatementGeoMatchStatement
    {
        /// <summary>
        /// Array of two-character country codes, for example, [ "US", "CN" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
        /// </summary>
        [PolicyResourceProperty("countryCodes", "_mUnknown_CountryCodes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_CountryCodes;
        private bool _mUnknown_CountryCodes;
        public List<string>? CountryCodes
        {
            get
            {
                if (!_mUnknown_CountryCodes) return _mValue_CountryCodes;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementGeoMatchStatement.CountryCodes' is not present");
            }
        }

        /// <summary>
        /// Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. See `forwarded_ip_config` below for details.
        /// </summary>
        [PolicyResourceProperty("forwardedIpConfig", "_mUnknown_ForwardedIpConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WebAclRuleStatementGeoMatchStatementForwardedIpConfig? _mValue_ForwardedIpConfig;
        private bool _mUnknown_ForwardedIpConfig;
        public Outputs.WebAclRuleStatementGeoMatchStatementForwardedIpConfig? ForwardedIpConfig
        {
            get
            {
                if (!_mUnknown_ForwardedIpConfig) return _mValue_ForwardedIpConfig;
                throw new UndeferrableValueException("Value 'WebAclRuleStatementGeoMatchStatement.ForwardedIpConfig' is not present");
            }
        }
    }
}
