// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.WafV2.Outputs
{
    public sealed class RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern
    {
        /// <summary>
        /// An empty configuration block that is used for inspecting all headers.
        /// </summary>
        [PolicyResourceProperty("all", "_mUnknown_All")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll? _mValue_All;
        private bool _mUnknown_All;
        public Outputs.RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPatternAll? All
        {
            get
            {
                if (!_mUnknown_All) return _mValue_All;
                throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern.All' is not present");
            }
        }

        /// <summary>
        /// An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
        /// </summary>
        [PolicyResourceProperty("excludedHeaders", "_mUnknown_ExcludedHeaders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ExcludedHeaders;
        private bool _mUnknown_ExcludedHeaders;
        public List<string>? ExcludedHeaders
        {
            get
            {
                if (!_mUnknown_ExcludedHeaders) return _mValue_ExcludedHeaders;
                throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern.ExcludedHeaders' is not present");
            }
        }

        /// <summary>
        /// An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
        /// </summary>
        [PolicyResourceProperty("includedHeaders", "_mUnknown_IncludedHeaders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_IncludedHeaders;
        private bool _mUnknown_IncludedHeaders;
        public List<string>? IncludedHeaders
        {
            get
            {
                if (!_mUnknown_IncludedHeaders) return _mValue_IncludedHeaders;
                throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchHeaderMatchPattern.IncludedHeaders' is not present");
            }
        }
    }
}
