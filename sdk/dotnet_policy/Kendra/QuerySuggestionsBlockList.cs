// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kendra
{
    [PolicyResourceType("aws:kendra/querySuggestionsBlockList:QuerySuggestionsBlockList")]
    public sealed class QuerySuggestionsBlockList : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the block list.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.Arn' is not present");
            }
        }

        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.Description' is not present");
            }
        }

        /// <summary>
        /// Identifier of the index for a block list.
        /// </summary>
        [PolicyResourceProperty("indexId", "_mUnknown_IndexId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IndexId;
        private bool _mUnknown_IndexId;
        public string? IndexId
        {
            get
            {
                if (!_mUnknown_IndexId) return _mValue_IndexId;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.IndexId' is not present");
            }
        }

        /// <summary>
        /// Name for the block list.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.Name' is not present");
            }
        }

        /// <summary>
        /// Unique identifier of the block list.
        /// </summary>
        [PolicyResourceProperty("querySuggestionsBlockListId", "_mUnknown_QuerySuggestionsBlockListId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_QuerySuggestionsBlockListId;
        private bool _mUnknown_QuerySuggestionsBlockListId;
        public string? QuerySuggestionsBlockListId
        {
            get
            {
                if (!_mUnknown_QuerySuggestionsBlockListId) return _mValue_QuerySuggestionsBlockListId;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.QuerySuggestionsBlockListId' is not present");
            }
        }

        /// <summary>
        /// IAM (Identity and Access Management) role used to access the block list text file in S3.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.RoleArn' is not present");
            }
        }

        /// <summary>
        /// S3 path where your block list text file is located. See details below.
        /// </summary>
        [PolicyResourceProperty("sourceS3Path", "_mUnknown_SourceS3Path")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.QuerySuggestionsBlockListSourceS3Path? _mValue_SourceS3Path;
        private bool _mUnknown_SourceS3Path;
        public Outputs.QuerySuggestionsBlockListSourceS3Path? SourceS3Path
        {
            get
            {
                if (!_mUnknown_SourceS3Path) return _mValue_SourceS3Path;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.SourceS3Path' is not present");
            }
        }

        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.Status' is not present");
            }
        }

        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider's default_tags configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockList.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:kendra/querySuggestionsBlockList:QuerySuggestionsBlockList")]
    public sealed class QuerySuggestionsBlockListArgs : global::Pulumi.PolicyResourceInput
    {
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockListArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Identifier of the index for a block list.
        /// </summary>
        [PolicyResourceProperty("indexId", "_mUnknown_IndexId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IndexId;
        private bool _mUnknown_IndexId;
        public string? IndexId
        {
            get
            {
                if (!_mUnknown_IndexId) return _mValue_IndexId;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockListArgs.IndexId' is not present");
            }
        }

        /// <summary>
        /// Name for the block list.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockListArgs.Name' is not present");
            }
        }

        /// <summary>
        /// IAM (Identity and Access Management) role used to access the block list text file in S3.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockListArgs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// S3 path where your block list text file is located. See details below.
        /// </summary>
        [PolicyResourceProperty("sourceS3Path", "_mUnknown_SourceS3Path")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.QuerySuggestionsBlockListSourceS3PathArgs? _mValue_SourceS3Path;
        private bool _mUnknown_SourceS3Path;
        public Inputs.QuerySuggestionsBlockListSourceS3PathArgs? SourceS3Path
        {
            get
            {
                if (!_mUnknown_SourceS3Path) return _mValue_SourceS3Path;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockListArgs.SourceS3Path' is not present");
            }
        }

        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'QuerySuggestionsBlockListArgs.Tags' is not present");
            }
        }
    }
}
