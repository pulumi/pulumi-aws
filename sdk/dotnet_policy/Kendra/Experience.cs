// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kendra
{
    [PolicyResourceType("aws:kendra/experience:Experience")]
    public sealed class Experience : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Experience.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Experience.Arn' is not present");
            }
        }

        /// <summary>
        /// Configuration information for your Amazon Kendra experience. The provider will only perform drift detection of its value when present in a configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("configuration", "_mUnknown_Configuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ExperienceConfiguration? _mValue_Configuration;
        private bool _mUnknown_Configuration;
        public Outputs.ExperienceConfiguration? Configuration
        {
            get
            {
                if (!_mUnknown_Configuration) return _mValue_Configuration;
                throw new UndeferrableValueException("Value 'Experience.Configuration' is not present");
            }
        }

        /// <summary>
        /// A description for your Amazon Kendra experience.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Experience.Description' is not present");
            }
        }

        /// <summary>
        /// Shows the endpoint URLs for your Amazon Kendra experiences. The URLs are unique and fully hosted by AWS.
        /// </summary>
        [PolicyResourceProperty("endpoints", "_mUnknown_Endpoints")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ExperienceEndpoint>? _mValue_Endpoints;
        private bool _mUnknown_Endpoints;
        public List<Outputs.ExperienceEndpoint>? Endpoints
        {
            get
            {
                if (!_mUnknown_Endpoints) return _mValue_Endpoints;
                throw new UndeferrableValueException("Value 'Experience.Endpoints' is not present");
            }
        }

        /// <summary>
        /// The unique identifier of the experience.
        /// </summary>
        [PolicyResourceProperty("experienceId", "_mUnknown_ExperienceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ExperienceId;
        private bool _mUnknown_ExperienceId;
        public string? ExperienceId
        {
            get
            {
                if (!_mUnknown_ExperienceId) return _mValue_ExperienceId;
                throw new UndeferrableValueException("Value 'Experience.ExperienceId' is not present");
            }
        }

        /// <summary>
        /// The identifier of the index for your Amazon Kendra experience.
        /// </summary>
        [PolicyResourceProperty("indexId", "_mUnknown_IndexId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IndexId;
        private bool _mUnknown_IndexId;
        public string? IndexId
        {
            get
            {
                if (!_mUnknown_IndexId) return _mValue_IndexId;
                throw new UndeferrableValueException("Value 'Experience.IndexId' is not present");
            }
        }

        /// <summary>
        /// A name for your Amazon Kendra experience.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Experience.Name' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of a role with permission to access `Query API`, `QuerySuggestions API`, `SubmitFeedback API`, and `AWS SSO` that stores your user and group information. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'Experience.RoleArn' is not present");
            }
        }

        /// <summary>
        /// The current processing status of your Amazon Kendra experience.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'Experience.Status' is not present");
            }
        }
    }

    [PolicyResourceType("aws:kendra/experience:Experience")]
    public sealed class ExperienceArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Configuration information for your Amazon Kendra experience. The provider will only perform drift detection of its value when present in a configuration. Detailed below.
        /// </summary>
        [PolicyResourceProperty("configuration", "_mUnknown_Configuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ExperienceConfigurationArgs? _mValue_Configuration;
        private bool _mUnknown_Configuration;
        public Inputs.ExperienceConfigurationArgs? Configuration
        {
            get
            {
                if (!_mUnknown_Configuration) return _mValue_Configuration;
                throw new UndeferrableValueException("Value 'ExperienceArgs.Configuration' is not present");
            }
        }

        /// <summary>
        /// A description for your Amazon Kendra experience.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ExperienceArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The identifier of the index for your Amazon Kendra experience.
        /// </summary>
        [PolicyResourceProperty("indexId", "_mUnknown_IndexId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IndexId;
        private bool _mUnknown_IndexId;
        public string? IndexId
        {
            get
            {
                if (!_mUnknown_IndexId) return _mValue_IndexId;
                throw new UndeferrableValueException("Value 'ExperienceArgs.IndexId' is not present");
            }
        }

        /// <summary>
        /// A name for your Amazon Kendra experience.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ExperienceArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of a role with permission to access `Query API`, `QuerySuggestions API`, `SubmitFeedback API`, and `AWS SSO` that stores your user and group information. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'ExperienceArgs.RoleArn' is not present");
            }
        }
    }
}
