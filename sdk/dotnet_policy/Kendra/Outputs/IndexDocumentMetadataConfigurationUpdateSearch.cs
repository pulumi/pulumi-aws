// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kendra.Outputs
{
    public sealed class IndexDocumentMetadataConfigurationUpdateSearch
    {
        /// <summary>
        /// Determines whether the field is returned in the query response. The default is `true`.
        /// </summary>
        [PolicyResourceProperty("displayable", "_mUnknown_Displayable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Displayable;
        private bool _mUnknown_Displayable;
        public bool? Displayable
        {
            get
            {
                if (!_mUnknown_Displayable) return _mValue_Displayable;
                throw new UndeferrableValueException("Value 'IndexDocumentMetadataConfigurationUpdateSearch.Displayable' is not present");
            }
        }

        /// <summary>
        /// Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is `false`.
        /// </summary>
        [PolicyResourceProperty("facetable", "_mUnknown_Facetable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Facetable;
        private bool _mUnknown_Facetable;
        public bool? Facetable
        {
            get
            {
                if (!_mUnknown_Facetable) return _mValue_Facetable;
                throw new UndeferrableValueException("Value 'IndexDocumentMetadataConfigurationUpdateSearch.Facetable' is not present");
            }
        }

        /// <summary>
        /// Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.
        /// </summary>
        [PolicyResourceProperty("searchable", "_mUnknown_Searchable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Searchable;
        private bool _mUnknown_Searchable;
        public bool? Searchable
        {
            get
            {
                if (!_mUnknown_Searchable) return _mValue_Searchable;
                throw new UndeferrableValueException("Value 'IndexDocumentMetadataConfigurationUpdateSearch.Searchable' is not present");
            }
        }

        /// <summary>
        /// Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.
        /// </summary>
        [PolicyResourceProperty("sortable", "_mUnknown_Sortable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Sortable;
        private bool _mUnknown_Sortable;
        public bool? Sortable
        {
            get
            {
                if (!_mUnknown_Sortable) return _mValue_Sortable;
                throw new UndeferrableValueException("Value 'IndexDocumentMetadataConfigurationUpdateSearch.Sortable' is not present");
            }
        }
    }
}
