// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppConfig
{
    [PolicyResourceType("aws:appconfig/environment:Environment")]
    public sealed class Environment : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// AppConfig application ID. Must be between 4 and 7 characters in length.
        /// </summary>
        [PolicyResourceProperty("applicationId", "_mUnknown_ApplicationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ApplicationId;
        private bool _mUnknown_ApplicationId;
        public string? ApplicationId
        {
            get
            {
                if (!_mUnknown_ApplicationId) return _mValue_ApplicationId;
                throw new UndeferrableValueException("Value 'Environment.ApplicationId' is not present");
            }
        }

        /// <summary>
        /// ARN of the AppConfig Environment.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Environment.Arn' is not present");
            }
        }

        /// <summary>
        /// Description of the environment. Can be at most 1024 characters.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Environment.Description' is not present");
            }
        }

        /// <summary>
        /// AppConfig environment ID.
        /// </summary>
        [PolicyResourceProperty("environmentId", "_mUnknown_EnvironmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnvironmentId;
        private bool _mUnknown_EnvironmentId;
        public string? EnvironmentId
        {
            get
            {
                if (!_mUnknown_EnvironmentId) return _mValue_EnvironmentId;
                throw new UndeferrableValueException("Value 'Environment.EnvironmentId' is not present");
            }
        }

        /// <summary>
        /// Set of Amazon CloudWatch alarms to monitor during the deployment process. Maximum of 5. See Monitor below for more details.
        /// </summary>
        [PolicyResourceProperty("monitors", "_mUnknown_Monitors")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.EnvironmentMonitor>? _mValue_Monitors;
        private bool _mUnknown_Monitors;
        public List<Outputs.EnvironmentMonitor>? Monitors
        {
            get
            {
                if (!_mUnknown_Monitors) return _mValue_Monitors;
                throw new UndeferrableValueException("Value 'Environment.Monitors' is not present");
            }
        }

        /// <summary>
        /// Name for the environment. Must be between 1 and 64 characters in length.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Environment.Name' is not present");
            }
        }

        /// <summary>
        /// State of the environment. Possible values are `READY_FOR_DEPLOYMENT`, `DEPLOYING`, `ROLLING_BACK`
        /// or `ROLLED_BACK`.
        /// </summary>
        [PolicyResourceProperty("state", "_mUnknown_State")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_State;
        private bool _mUnknown_State;
        public string? State
        {
            get
            {
                if (!_mUnknown_State) return _mValue_State;
                throw new UndeferrableValueException("Value 'Environment.State' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Environment.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Environment.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:appconfig/environment:Environment")]
    public sealed class EnvironmentArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// AppConfig application ID. Must be between 4 and 7 characters in length.
        /// </summary>
        [PolicyResourceProperty("applicationId", "_mUnknown_ApplicationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ApplicationId;
        private bool _mUnknown_ApplicationId;
        public string? ApplicationId
        {
            get
            {
                if (!_mUnknown_ApplicationId) return _mValue_ApplicationId;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.ApplicationId' is not present");
            }
        }

        /// <summary>
        /// Description of the environment. Can be at most 1024 characters.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Set of Amazon CloudWatch alarms to monitor during the deployment process. Maximum of 5. See Monitor below for more details.
        /// </summary>
        [PolicyResourceProperty("monitors", "_mUnknown_Monitors")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.EnvironmentMonitorArgs>? _mValue_Monitors;
        private bool _mUnknown_Monitors;
        public List<Inputs.EnvironmentMonitorArgs>? Monitors
        {
            get
            {
                if (!_mUnknown_Monitors) return _mValue_Monitors;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Monitors' is not present");
            }
        }

        /// <summary>
        /// Name for the environment. Must be between 1 and 64 characters in length.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Tags' is not present");
            }
        }
    }
}
