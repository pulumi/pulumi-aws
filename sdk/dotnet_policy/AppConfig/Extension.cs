// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppConfig
{
    [PolicyResourceType("aws:appconfig/extension:Extension")]
    public sealed class Extension : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The action points defined in the extension. Detailed below.
        /// </summary>
        [Input("actionPoints")]
        public List<ExtensionActionPoint>? ActionPoints;

        /// <summary>
        /// ARN of the AppConfig Extension.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Information about the extension.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the CreateExtensionAssociation API action. For Lambda extension actions, these parameters are included in the Lambda request object. Detailed below.
        /// </summary>
        [Input("parameters")]
        public List<ExtensionParameter>? Parameters;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The version number for the extension.
        /// </summary>
        [Input("version")]
        public int? Version;
    }
}
