// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Bedrock.Inputs
{
    public sealed class AgentDataSourceDataSourceConfigurationSalesforceConfigurationSourceConfigurationArgs
    {
        /// <summary>
        /// The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
        /// </summary>
        [PolicyResourceProperty("authType", "_mUnknown_AuthType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuthType;
        private bool _mUnknown_AuthType;
        public string? AuthType
        {
            get
            {
                if (!_mUnknown_AuthType) return _mValue_AuthType;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSalesforceConfigurationSourceConfigurationArgs.AuthType' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.@-]{1,512}$.
        /// </summary>
        [PolicyResourceProperty("credentialsSecretArn", "_mUnknown_CredentialsSecretArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CredentialsSecretArn;
        private bool _mUnknown_CredentialsSecretArn;
        public string? CredentialsSecretArn
        {
            get
            {
                if (!_mUnknown_CredentialsSecretArn) return _mValue_CredentialsSecretArn;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSalesforceConfigurationSourceConfigurationArgs.CredentialsSecretArn' is not present");
            }
        }

        /// <summary>
        /// The Salesforce host URL or instance URL. Pattern: `^https://[A-Za-z0-9][^\s]*$`.
        /// </summary>
        [PolicyResourceProperty("hostUrl", "_mUnknown_HostUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostUrl;
        private bool _mUnknown_HostUrl;
        public string? HostUrl
        {
            get
            {
                if (!_mUnknown_HostUrl) return _mValue_HostUrl;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSalesforceConfigurationSourceConfigurationArgs.HostUrl' is not present");
            }
        }
    }
}
