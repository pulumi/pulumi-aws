// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Bedrock.Outputs
{
    public sealed class AgentDataSourceVectorIngestionConfigurationParsingConfiguration
    {
        /// <summary>
        /// Settings for a foundation model used to parse documents in a data source. See `bedrock_foundation_model_configuration` block for details.
        /// </summary>
        [PolicyResourceProperty("bedrockFoundationModelConfiguration", "_mUnknown_BedrockFoundationModelConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.AgentDataSourceVectorIngestionConfigurationParsingConfigurationBedrockFoundationModelConfiguration? _mValue_BedrockFoundationModelConfiguration;
        private bool _mUnknown_BedrockFoundationModelConfiguration;
        public Outputs.AgentDataSourceVectorIngestionConfigurationParsingConfigurationBedrockFoundationModelConfiguration? BedrockFoundationModelConfiguration
        {
            get
            {
                if (!_mUnknown_BedrockFoundationModelConfiguration) return _mValue_BedrockFoundationModelConfiguration;
                throw new UndeferrableValueException("Value 'AgentDataSourceVectorIngestionConfigurationParsingConfiguration.BedrockFoundationModelConfiguration' is not present");
            }
        }

        /// <summary>
        /// Currently only `BEDROCK_FOUNDATION_MODEL` is supported
        /// </summary>
        [PolicyResourceProperty("parsingStrategy", "_mUnknown_ParsingStrategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ParsingStrategy;
        private bool _mUnknown_ParsingStrategy;
        public string? ParsingStrategy
        {
            get
            {
                if (!_mUnknown_ParsingStrategy) return _mValue_ParsingStrategy;
                throw new UndeferrableValueException("Value 'AgentDataSourceVectorIngestionConfigurationParsingConfiguration.ParsingStrategy' is not present");
            }
        }
    }
}
