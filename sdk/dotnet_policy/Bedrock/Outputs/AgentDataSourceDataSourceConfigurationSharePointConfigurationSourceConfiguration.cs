// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Bedrock.Outputs
{
    public sealed class AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration
    {
        /// <summary>
        /// The supported authentication type to authenticate and connect to your SharePoint site. Valid values: `OAUTH2_CLIENT_CREDENTIALS`, `OAUTH2_SHAREPOINT_APP_ONLY_CLIENT_CREDENTIALS`.
        /// </summary>
        [PolicyResourceProperty("authType", "_mUnknown_AuthType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuthType;
        private bool _mUnknown_AuthType;
        public string? AuthType
        {
            get
            {
                if (!_mUnknown_AuthType) return _mValue_AuthType;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration.AuthType' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration. Pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.@-]{1,512}$.
        /// </summary>
        [PolicyResourceProperty("credentialsSecretArn", "_mUnknown_CredentialsSecretArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CredentialsSecretArn;
        private bool _mUnknown_CredentialsSecretArn;
        public string? CredentialsSecretArn
        {
            get
            {
                if (!_mUnknown_CredentialsSecretArn) return _mValue_CredentialsSecretArn;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration.CredentialsSecretArn' is not present");
            }
        }

        /// <summary>
        /// The domain of your SharePoint instance or site URL/URLs.
        /// </summary>
        [PolicyResourceProperty("domain", "_mUnknown_Domain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Domain;
        private bool _mUnknown_Domain;
        public string? Domain
        {
            get
            {
                if (!_mUnknown_Domain) return _mValue_Domain;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration.Domain' is not present");
            }
        }

        /// <summary>
        /// The supported host type, whether online/cloud or server/on-premises. Valid values: `ONLINE`.
        /// </summary>
        [PolicyResourceProperty("hostType", "_mUnknown_HostType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostType;
        private bool _mUnknown_HostType;
        public string? HostType
        {
            get
            {
                if (!_mUnknown_HostType) return _mValue_HostType;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration.HostType' is not present");
            }
        }

        /// <summary>
        /// A list of one or more SharePoint site URLs.
        /// </summary>
        [PolicyResourceProperty("siteUrls", "_mUnknown_SiteUrls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SiteUrls;
        private bool _mUnknown_SiteUrls;
        public List<string>? SiteUrls
        {
            get
            {
                if (!_mUnknown_SiteUrls) return _mValue_SiteUrls;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration.SiteUrls' is not present");
            }
        }

        /// <summary>
        /// The identifier of your Microsoft 365 tenant.
        /// </summary>
        [PolicyResourceProperty("tenantId", "_mUnknown_TenantId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TenantId;
        private bool _mUnknown_TenantId;
        public string? TenantId
        {
            get
            {
                if (!_mUnknown_TenantId) return _mValue_TenantId;
                throw new UndeferrableValueException("Value 'AgentDataSourceDataSourceConfigurationSharePointConfigurationSourceConfiguration.TenantId' is not present");
            }
        }
    }
}
