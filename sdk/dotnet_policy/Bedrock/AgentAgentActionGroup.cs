// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Bedrock
{
    [PolicyResourceType("aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup")]
    public sealed class AgentAgentActionGroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `action_group_executor` Block for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("actionGroupExecutor")]
        public AgentAgentActionGroupActionGroupExecutor? ActionGroupExecutor;

        /// <summary>
        /// Unique identifier of the action group.
        /// </summary>
        [Input("actionGroupId")]
        public string? ActionGroupId;

        /// <summary>
        /// Name of the action group.
        /// </summary>
        [Input("actionGroupName")]
        public string? ActionGroupName;

        /// <summary>
        /// Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
        /// </summary>
        [Input("actionGroupState")]
        public string? ActionGroupState;

        /// <summary>
        /// The unique identifier of the agent for which to create the action group.
        /// </summary>
        [Input("agentId")]
        public string? AgentId;

        /// <summary>
        /// Version of the agent for which to create the action group. Valid values: `DRAFT`.
        /// </summary>
        [Input("agentVersion")]
        public string? AgentVersion;

        /// <summary>
        /// Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `api_schema` Block for details.
        /// </summary>
        [Input("apiSchema")]
        public AgentAgentActionGroupApiSchema? ApiSchema;

        /// <summary>
        /// Description of the action group.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Describes the function schema for the action group.
        /// Each function represents an action in an action group.
        /// See `function_schema` Block for details.
        /// </summary>
        [Input("functionSchema")]
        public AgentAgentActionGroupFunctionSchema? FunctionSchema;

        /// <summary>
        /// To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `api_schema`, and `action_group_executor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
        /// </summary>
        [Input("parentActionGroupSignature")]
        public string? ParentActionGroupSignature;

        /// <summary>
        /// Whether or not to prepare the agent after creation or modification. Defaults to `true`.
        /// </summary>
        [Input("prepareAgent")]
        public bool? PrepareAgent;

        /// <summary>
        /// Whether the in-use check is skipped when deleting the action group.
        /// </summary>
        [Input("skipResourceInUseCheck")]
        public bool? SkipResourceInUseCheck;

        [Input("timeouts")]
        public AgentAgentActionGroupTimeouts? Timeouts;
    }
}
