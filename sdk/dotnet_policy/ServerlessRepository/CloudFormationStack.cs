// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ServerlessRepository
{
    [PolicyResourceType("aws:serverlessrepository/cloudFormationStack:CloudFormationStack")]
    public sealed class CloudFormationStack : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the application from the Serverless Application Repository.
        /// </summary>
        [Input("applicationId")]
        public string? ApplicationId;

        /// <summary>
        /// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
        /// </summary>
        [Input("capabilities")]
        public List<string>? Capabilities;

        /// <summary>
        /// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// A map of outputs from the stack.
        /// </summary>
        [Input("outputs")]
        public Dictionary<string, string>? Outputs;

        /// <summary>
        /// A map of Parameter structures that specify input parameters for the stack.
        /// </summary>
        [Input("parameters")]
        public Dictionary<string, string>? Parameters;

        /// <summary>
        /// The version of the application to deploy. If not supplied, deploys the latest version.
        /// </summary>
        [Input("semanticVersion")]
        public string? SemanticVersion;

        /// <summary>
        /// A list of tags to associate with this stack. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
