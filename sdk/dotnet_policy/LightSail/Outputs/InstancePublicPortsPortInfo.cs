// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LightSail.Outputs
{
    public sealed class InstancePublicPortsPortInfo
    {
        /// <summary>
        /// Set of CIDR aliases that define access for a preconfigured range of IP addresses.
        /// </summary>
        [PolicyResourceProperty("cidrListAliases", "_mUnknown_CidrListAliases")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_CidrListAliases;
        private bool _mUnknown_CidrListAliases;
        public List<string>? CidrListAliases
        {
            get
            {
                if (!_mUnknown_CidrListAliases) return _mValue_CidrListAliases;
                throw new UndeferrableValueException("Value 'InstancePublicPortsPortInfo.CidrListAliases' is not present");
            }
        }

        /// <summary>
        /// Set of CIDR blocks.
        /// </summary>
        [PolicyResourceProperty("cidrs", "_mUnknown_Cidrs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Cidrs;
        private bool _mUnknown_Cidrs;
        public List<string>? Cidrs
        {
            get
            {
                if (!_mUnknown_Cidrs) return _mValue_Cidrs;
                throw new UndeferrableValueException("Value 'InstancePublicPortsPortInfo.Cidrs' is not present");
            }
        }

        /// <summary>
        /// First port in a range of open ports on an instance.
        /// </summary>
        [PolicyResourceProperty("fromPort", "_mUnknown_FromPort")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_FromPort;
        private bool _mUnknown_FromPort;
        public int? FromPort
        {
            get
            {
                if (!_mUnknown_FromPort) return _mValue_FromPort;
                throw new UndeferrableValueException("Value 'InstancePublicPortsPortInfo.FromPort' is not present");
            }
        }

        [PolicyResourceProperty("ipv6Cidrs", "_mUnknown_Ipv6Cidrs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Ipv6Cidrs;
        private bool _mUnknown_Ipv6Cidrs;
        public List<string>? Ipv6Cidrs
        {
            get
            {
                if (!_mUnknown_Ipv6Cidrs) return _mValue_Ipv6Cidrs;
                throw new UndeferrableValueException("Value 'InstancePublicPortsPortInfo.Ipv6Cidrs' is not present");
            }
        }

        /// <summary>
        /// IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
        /// </summary>
        [PolicyResourceProperty("protocol", "_mUnknown_Protocol")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Protocol;
        private bool _mUnknown_Protocol;
        public string? Protocol
        {
            get
            {
                if (!_mUnknown_Protocol) return _mValue_Protocol;
                throw new UndeferrableValueException("Value 'InstancePublicPortsPortInfo.Protocol' is not present");
            }
        }

        /// <summary>
        /// Last port in a range of open ports on an instance.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("toPort", "_mUnknown_ToPort")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ToPort;
        private bool _mUnknown_ToPort;
        public int? ToPort
        {
            get
            {
                if (!_mUnknown_ToPort) return _mValue_ToPort;
                throw new UndeferrableValueException("Value 'InstancePublicPortsPortInfo.ToPort' is not present");
            }
        }
    }
}
