// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LightSail
{
    [PolicyResourceType("aws:lightsail/staticIpAttachment:StaticIpAttachment")]
    public sealed class StaticIpAttachment : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The name of the Lightsail instance to attach the IP to
        /// </summary>
        [PolicyResourceProperty("instanceName", "_mUnknown_InstanceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceName;
        private bool _mUnknown_InstanceName;
        public string? InstanceName
        {
            get
            {
                if (!_mUnknown_InstanceName) return _mValue_InstanceName;
                throw new UndeferrableValueException("Value 'StaticIpAttachment.InstanceName' is not present");
            }
        }

        /// <summary>
        /// The allocated static IP address
        /// </summary>
        [PolicyResourceProperty("ipAddress", "_mUnknown_IpAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpAddress;
        private bool _mUnknown_IpAddress;
        public string? IpAddress
        {
            get
            {
                if (!_mUnknown_IpAddress) return _mValue_IpAddress;
                throw new UndeferrableValueException("Value 'StaticIpAttachment.IpAddress' is not present");
            }
        }

        /// <summary>
        /// The name of the allocated static IP
        /// </summary>
        [PolicyResourceProperty("staticIpName", "_mUnknown_StaticIpName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StaticIpName;
        private bool _mUnknown_StaticIpName;
        public string? StaticIpName
        {
            get
            {
                if (!_mUnknown_StaticIpName) return _mValue_StaticIpName;
                throw new UndeferrableValueException("Value 'StaticIpAttachment.StaticIpName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:lightsail/staticIpAttachment:StaticIpAttachment")]
    public sealed class StaticIpAttachmentArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The name of the Lightsail instance to attach the IP to
        /// </summary>
        [PolicyResourceProperty("instanceName", "_mUnknown_InstanceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceName;
        private bool _mUnknown_InstanceName;
        public string? InstanceName
        {
            get
            {
                if (!_mUnknown_InstanceName) return _mValue_InstanceName;
                throw new UndeferrableValueException("Value 'StaticIpAttachmentArgs.InstanceName' is not present");
            }
        }

        /// <summary>
        /// The name of the allocated static IP
        /// </summary>
        [PolicyResourceProperty("staticIpName", "_mUnknown_StaticIpName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StaticIpName;
        private bool _mUnknown_StaticIpName;
        public string? StaticIpName
        {
            get
            {
                if (!_mUnknown_StaticIpName) return _mValue_StaticIpName;
                throw new UndeferrableValueException("Value 'StaticIpAttachmentArgs.StaticIpName' is not present");
            }
        }
    }
}
