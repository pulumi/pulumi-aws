// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LightSail
{
    [PolicyResourceType("aws:lightsail/domainEntry:DomainEntry")]
    public sealed class DomainEntry : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The name of the Lightsail domain in which to create the entry
        /// </summary>
        [PolicyResourceProperty("domainName", "_mUnknown_DomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainName;
        private bool _mUnknown_DomainName;
        public string? DomainName
        {
            get
            {
                if (!_mUnknown_DomainName) return _mValue_DomainName;
                throw new UndeferrableValueException("Value 'DomainEntry.DomainName' is not present");
            }
        }

        /// <summary>
        /// If the entry should be an alias Defaults to `false`
        /// </summary>
        [PolicyResourceProperty("isAlias", "_mUnknown_IsAlias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_IsAlias;
        private bool _mUnknown_IsAlias;
        public bool? IsAlias
        {
            get
            {
                if (!_mUnknown_IsAlias) return _mValue_IsAlias;
                throw new UndeferrableValueException("Value 'DomainEntry.IsAlias' is not present");
            }
        }

        /// <summary>
        /// Name of the entry record
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'DomainEntry.Name' is not present");
            }
        }

        /// <summary>
        /// Target of the domain entry
        /// </summary>
        [PolicyResourceProperty("target", "_mUnknown_Target")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Target;
        private bool _mUnknown_Target;
        public string? Target
        {
            get
            {
                if (!_mUnknown_Target) return _mValue_Target;
                throw new UndeferrableValueException("Value 'DomainEntry.Target' is not present");
            }
        }

        /// <summary>
        /// Type of record
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'DomainEntry.Type' is not present");
            }
        }
    }

    [PolicyResourceType("aws:lightsail/domainEntry:DomainEntry")]
    public sealed class DomainEntryArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The name of the Lightsail domain in which to create the entry
        /// </summary>
        [PolicyResourceProperty("domainName", "_mUnknown_DomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainName;
        private bool _mUnknown_DomainName;
        public string? DomainName
        {
            get
            {
                if (!_mUnknown_DomainName) return _mValue_DomainName;
                throw new UndeferrableValueException("Value 'DomainEntryArgs.DomainName' is not present");
            }
        }

        /// <summary>
        /// If the entry should be an alias Defaults to `false`
        /// </summary>
        [PolicyResourceProperty("isAlias", "_mUnknown_IsAlias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_IsAlias;
        private bool _mUnknown_IsAlias;
        public bool? IsAlias
        {
            get
            {
                if (!_mUnknown_IsAlias) return _mValue_IsAlias;
                throw new UndeferrableValueException("Value 'DomainEntryArgs.IsAlias' is not present");
            }
        }

        /// <summary>
        /// Name of the entry record
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'DomainEntryArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Target of the domain entry
        /// </summary>
        [PolicyResourceProperty("target", "_mUnknown_Target")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Target;
        private bool _mUnknown_Target;
        public string? Target
        {
            get
            {
                if (!_mUnknown_Target) return _mValue_Target;
                throw new UndeferrableValueException("Value 'DomainEntryArgs.Target' is not present");
            }
        }

        /// <summary>
        /// Type of record
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'DomainEntryArgs.Type' is not present");
            }
        }
    }
}
