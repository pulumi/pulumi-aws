// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LightSail.Inputs
{
    public sealed class DistributionCacheBehaviorSettingsArgs
    {
        /// <summary>
        /// The HTTP methods that are processed and forwarded to the distribution's origin.
        /// </summary>
        [PolicyResourceProperty("allowedHttpMethods", "_mUnknown_AllowedHttpMethods")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AllowedHttpMethods;
        private bool _mUnknown_AllowedHttpMethods;
        public string? AllowedHttpMethods
        {
            get
            {
                if (!_mUnknown_AllowedHttpMethods) return _mValue_AllowedHttpMethods;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.AllowedHttpMethods' is not present");
            }
        }

        /// <summary>
        /// The HTTP method responses that are cached by your distribution.
        /// </summary>
        [PolicyResourceProperty("cachedHttpMethods", "_mUnknown_CachedHttpMethods")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CachedHttpMethods;
        private bool _mUnknown_CachedHttpMethods;
        public string? CachedHttpMethods
        {
            get
            {
                if (!_mUnknown_CachedHttpMethods) return _mValue_CachedHttpMethods;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.CachedHttpMethods' is not present");
            }
        }

        /// <summary>
        /// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
        /// </summary>
        [PolicyResourceProperty("defaultTtl", "_mUnknown_DefaultTtl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_DefaultTtl;
        private bool _mUnknown_DefaultTtl;
        public int? DefaultTtl
        {
            get
            {
                if (!_mUnknown_DefaultTtl) return _mValue_DefaultTtl;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.DefaultTtl' is not present");
            }
        }

        /// <summary>
        /// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded. Detailed below
        /// </summary>
        [PolicyResourceProperty("forwardedCookies", "_mUnknown_ForwardedCookies")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DistributionCacheBehaviorSettingsForwardedCookiesArgs? _mValue_ForwardedCookies;
        private bool _mUnknown_ForwardedCookies;
        public Inputs.DistributionCacheBehaviorSettingsForwardedCookiesArgs? ForwardedCookies
        {
            get
            {
                if (!_mUnknown_ForwardedCookies) return _mValue_ForwardedCookies;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.ForwardedCookies' is not present");
            }
        }

        /// <summary>
        /// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded. Detailed below
        /// </summary>
        [PolicyResourceProperty("forwardedHeaders", "_mUnknown_ForwardedHeaders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DistributionCacheBehaviorSettingsForwardedHeadersArgs? _mValue_ForwardedHeaders;
        private bool _mUnknown_ForwardedHeaders;
        public Inputs.DistributionCacheBehaviorSettingsForwardedHeadersArgs? ForwardedHeaders
        {
            get
            {
                if (!_mUnknown_ForwardedHeaders) return _mValue_ForwardedHeaders;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.ForwardedHeaders' is not present");
            }
        }

        /// <summary>
        /// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded. Detailed below
        /// </summary>
        [PolicyResourceProperty("forwardedQueryStrings", "_mUnknown_ForwardedQueryStrings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DistributionCacheBehaviorSettingsForwardedQueryStringsArgs? _mValue_ForwardedQueryStrings;
        private bool _mUnknown_ForwardedQueryStrings;
        public Inputs.DistributionCacheBehaviorSettingsForwardedQueryStringsArgs? ForwardedQueryStrings
        {
            get
            {
                if (!_mUnknown_ForwardedQueryStrings) return _mValue_ForwardedQueryStrings;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.ForwardedQueryStrings' is not present");
            }
        }

        /// <summary>
        /// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
        /// </summary>
        [PolicyResourceProperty("maximumTtl", "_mUnknown_MaximumTtl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumTtl;
        private bool _mUnknown_MaximumTtl;
        public int? MaximumTtl
        {
            get
            {
                if (!_mUnknown_MaximumTtl) return _mValue_MaximumTtl;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.MaximumTtl' is not present");
            }
        }

        /// <summary>
        /// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
        /// </summary>
        [PolicyResourceProperty("minimumTtl", "_mUnknown_MinimumTtl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MinimumTtl;
        private bool _mUnknown_MinimumTtl;
        public int? MinimumTtl
        {
            get
            {
                if (!_mUnknown_MinimumTtl) return _mValue_MinimumTtl;
                throw new UndeferrableValueException("Value 'DistributionCacheBehaviorSettingsArgs.MinimumTtl' is not present");
            }
        }
    }
}
