// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Dlm.Outputs
{
    public sealed class LifecyclePolicyPolicyDetailsSchedule
    {
        [PolicyResourceProperty("copyTags", "_mUnknown_CopyTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_CopyTags;
        private bool _mUnknown_CopyTags;
        public bool? CopyTags
        {
            get
            {
                if (!_mUnknown_CopyTags) return _mValue_CopyTags;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.CopyTags' is not present");
            }
        }

        /// <summary>
        /// See the `create_rule` block. Max of 1 per schedule.
        /// </summary>
        [PolicyResourceProperty("createRule", "_mUnknown_CreateRule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule? _mValue_CreateRule;
        private bool _mUnknown_CreateRule;
        public Outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule? CreateRule
        {
            get
            {
                if (!_mUnknown_CreateRule) return _mValue_CreateRule;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.CreateRule' is not present");
            }
        }

        /// <summary>
        /// See the `cross_region_copy_rule` block. Max of 3 per schedule.
        /// </summary>
        [PolicyResourceProperty("crossRegionCopyRules", "_mUnknown_CrossRegionCopyRules")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule>? _mValue_CrossRegionCopyRules;
        private bool _mUnknown_CrossRegionCopyRules;
        public List<Outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule>? CrossRegionCopyRules
        {
            get
            {
                if (!_mUnknown_CrossRegionCopyRules) return _mValue_CrossRegionCopyRules;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.CrossRegionCopyRules' is not present");
            }
        }

        [PolicyResourceProperty("deprecateRule", "_mUnknown_DeprecateRule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRule? _mValue_DeprecateRule;
        private bool _mUnknown_DeprecateRule;
        public Outputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRule? DeprecateRule
        {
            get
            {
                if (!_mUnknown_DeprecateRule) return _mValue_DeprecateRule;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.DeprecateRule' is not present");
            }
        }

        /// <summary>
        /// See the `fast_restore_rule` block. Max of 1 per schedule.
        /// </summary>
        [PolicyResourceProperty("fastRestoreRule", "_mUnknown_FastRestoreRule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRule? _mValue_FastRestoreRule;
        private bool _mUnknown_FastRestoreRule;
        public Outputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRule? FastRestoreRule
        {
            get
            {
                if (!_mUnknown_FastRestoreRule) return _mValue_FastRestoreRule;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.FastRestoreRule' is not present");
            }
        }

        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.Name' is not present");
            }
        }

        [PolicyResourceProperty("retainRule", "_mUnknown_RetainRule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule? _mValue_RetainRule;
        private bool _mUnknown_RetainRule;
        public Outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule? RetainRule
        {
            get
            {
                if (!_mUnknown_RetainRule) return _mValue_RetainRule;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.RetainRule' is not present");
            }
        }

        /// <summary>
        /// See the `share_rule` block. Max of 1 per schedule.
        /// </summary>
        [PolicyResourceProperty("shareRule", "_mUnknown_ShareRule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.LifecyclePolicyPolicyDetailsScheduleShareRule? _mValue_ShareRule;
        private bool _mUnknown_ShareRule;
        public Outputs.LifecyclePolicyPolicyDetailsScheduleShareRule? ShareRule
        {
            get
            {
                if (!_mUnknown_ShareRule) return _mValue_ShareRule;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.ShareRule' is not present");
            }
        }

        /// <summary>
        /// A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
        /// </summary>
        [PolicyResourceProperty("tagsToAdd", "_mUnknown_TagsToAdd")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsToAdd;
        private bool _mUnknown_TagsToAdd;
        public Dictionary<string, string>? TagsToAdd
        {
            get
            {
                if (!_mUnknown_TagsToAdd) return _mValue_TagsToAdd;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.TagsToAdd' is not present");
            }
        }

        /// <summary>
        /// A map of tag keys and variable values, where the values are determined when the policy is executed. Only `$(instance-id)` or `$(timestamp)` are valid values. Can only be used when `resource_types` is `INSTANCE`.
        /// </summary>
        [PolicyResourceProperty("variableTags", "_mUnknown_VariableTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_VariableTags;
        private bool _mUnknown_VariableTags;
        public Dictionary<string, string>? VariableTags
        {
            get
            {
                if (!_mUnknown_VariableTags) return _mValue_VariableTags;
                throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsSchedule.VariableTags' is not present");
            }
        }
    }
}
