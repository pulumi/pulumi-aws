// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeBuild
{
    [PolicyResourceType("aws:codebuild/fleet:Fleet")]
    public sealed class Fleet : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the Fleet.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Number of machines allocated to the ï¬‚eet.
        /// </summary>
        [Input("baseCapacity")]
        public int? BaseCapacity;

        /// <summary>
        /// The compute configuration of the compute fleet. This is only required if `compute_type` is set to `ATTRIBUTE_BASED_COMPUTE`. See `compute_configuration` below.
        /// </summary>
        [Input("computeConfiguration")]
        public FleetComputeConfiguration? ComputeConfiguration;

        /// <summary>
        /// Compute resources the compute fleet uses. See [compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
        /// </summary>
        [Input("computeType")]
        public string? ComputeType;

        /// <summary>
        /// Creation time of the fleet.
        /// </summary>
        [Input("created")]
        public string? Created;

        /// <summary>
        /// Environment type of the compute fleet. See [environment types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment.types) for more information and valid values.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("environmentType")]
        public string? EnvironmentType;

        /// <summary>
        /// The service role associated with the compute fleet.
        /// </summary>
        [Input("fleetServiceRole")]
        public string? FleetServiceRole;

        /// <summary>
        /// The Amazon Machine Image (AMI) of the compute fleet.
        /// </summary>
        [Input("imageId")]
        public string? ImageId;

        /// <summary>
        /// Last modification time of the fleet.
        /// </summary>
        [Input("lastModified")]
        public string? LastModified;

        /// <summary>
        /// Fleet name.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Overflow behavior for compute fleet. Valid values: `ON_DEMAND`, `QUEUE`.
        /// </summary>
        [Input("overflowBehavior")]
        public string? OverflowBehavior;

        /// <summary>
        /// Configuration block. This option is only valid when your overflow behavior is `QUEUE`. See `scaling_configuration` below.
        /// </summary>
        [Input("scalingConfiguration")]
        public FleetScalingConfiguration? ScalingConfiguration;

        /// <summary>
        /// Nested attribute containing information about the current status of the fleet.
        /// </summary>
        [Input("statuses")]
        public List<FleetStatus>? Statuses;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Configuration block. See `vpc_config` below.
        /// </summary>
        [Input("vpcConfigs")]
        public List<FleetVpcConfig>? VpcConfigs;
    }
}
