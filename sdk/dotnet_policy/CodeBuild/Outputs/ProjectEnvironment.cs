// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeBuild.Outputs
{
    public sealed class ProjectEnvironment
    {
        /// <summary>
        /// ARN of the S3 bucket, path prefix and object key that contains the PEM-encoded certificate.
        /// </summary>
        [Input("certificate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mCertificate;

        public string? Certificate => _mCertificate.GetValue("certificate");

        /// <summary>
        /// Information about the compute resources the build project will use. Valid values:
        /// `BUILD_GENERAL1_SMALL`, `BUILD_GENERAL1_MEDIUM`, `BUILD_GENERAL1_LARGE`, `BUILD_GENERAL1_2XLARGE`, `BUILD_LAMBDA_1GB`,
        /// `BUILD_LAMBDA_2GB`, `BUILD_LAMBDA_4GB`, `BUILD_LAMBDA_8GB`, `BUILD_LAMBDA_10GB`. `BUILD_GENERAL1_SMALL` is only valid
        /// if `type` is set to `LINUX_CONTAINER`. When `type` is set to `LINUX_GPU_CONTAINER`, `compute_type` must be
        /// `BUILD_GENERAL1_LARGE`. When `type` is set to `LINUX_LAMBDA_CONTAINER` or `ARM_LAMBDA_CONTAINER`, `compute_type` must
        /// be `BUILD_LAMBDA_XGB`.`
        /// </summary>
        [Input("computeType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mComputeType;

        public string? ComputeType => _mComputeType.GetValue("computeType");

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [Input("environmentVariables")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Outputs.ProjectEnvironmentEnvironmentVariable>> _mEnvironmentVariables;

        public List<Outputs.ProjectEnvironmentEnvironmentVariable>? EnvironmentVariables => _mEnvironmentVariables.GetValue("environmentVariables");

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [Input("fleet")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.ProjectEnvironmentFleet> _mFleet;

        public Outputs.ProjectEnvironmentFleet? Fleet => _mFleet.GetValue("fleet");

        /// <summary>
        /// Docker image to use for this build project. Valid values
        /// include [Docker images provided by CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html) (
        /// e.g `aws/codebuild/amazonlinux2-x86_64-standard:4.0`), [Docker Hub images](https://hub.docker.com/) (e.g.,
        /// `pulumi/pulumi:latest`), and full Docker repository URIs such as those for ECR (e.g.,
        /// `137112412989.dkr.ecr.us-west-2.amazonaws.com/amazonlinux:latest`).
        /// </summary>
        [Input("image")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mImage;

        public string? Image => _mImage.GetValue("image");

        /// <summary>
        /// Type of credentials AWS CodeBuild uses to pull images in your build. Valid
        /// values: `CODEBUILD`, `SERVICE_ROLE`. When you use a cross-account or private registry image, you must use SERVICE_ROLE
        /// credentials. When you use an AWS CodeBuild curated image, you must use CodeBuild credentials. Defaults to `CODEBUILD`.
        /// </summary>
        [Input("imagePullCredentialsType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mImagePullCredentialsType;

        public string? ImagePullCredentialsType => _mImagePullCredentialsType.GetValue("imagePullCredentialsType");

        /// <summary>
        /// Whether to enable running the Docker daemon inside a Docker container. Defaults to
        /// `false`.
        /// </summary>
        [Input("privilegedMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mPrivilegedMode;

        public bool? PrivilegedMode => _mPrivilegedMode.GetValue("privilegedMode");

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [Input("registryCredential")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.ProjectEnvironmentRegistryCredential> _mRegistryCredential;

        public Outputs.ProjectEnvironmentRegistryCredential? RegistryCredential => _mRegistryCredential.GetValue("registryCredential");

        /// <summary>
        /// Type of build environment to use for related builds. Valid values: `LINUX_CONTAINER`,
        /// `LINUX_GPU_CONTAINER`, `WINDOWS_CONTAINER` (deprecated), `WINDOWS_SERVER_2019_CONTAINER`, `ARM_CONTAINER`,
        /// `LINUX_LAMBDA_CONTAINER`, `ARM_LAMBDA_CONTAINER`. For additional information, see
        /// the [CodeBuild User Guide](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html).
        /// </summary>
        [Input("type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mType;

        public string? Type => _mType.GetValue("type");
    }
}
