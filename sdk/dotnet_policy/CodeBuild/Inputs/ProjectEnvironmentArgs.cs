// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeBuild.Inputs
{
    public sealed class ProjectEnvironmentArgs
    {
        /// <summary>
        /// ARN of the S3 bucket, path prefix and object key that contains the PEM-encoded certificate.
        /// </summary>
        [PolicyResourceProperty("certificate", "_mUnknown_Certificate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Certificate;
        private bool _mUnknown_Certificate;
        public string? Certificate
        {
            get
            {
                if (!_mUnknown_Certificate) return _mValue_Certificate;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.Certificate' is not present");
            }
        }

        /// <summary>
        /// Information about the compute resources the build project will use. Valid values:
        /// `BUILD_GENERAL1_SMALL`, `BUILD_GENERAL1_MEDIUM`, `BUILD_GENERAL1_LARGE`, `BUILD_GENERAL1_2XLARGE`, `BUILD_LAMBDA_1GB`,
        /// `BUILD_LAMBDA_2GB`, `BUILD_LAMBDA_4GB`, `BUILD_LAMBDA_8GB`, `BUILD_LAMBDA_10GB`. `BUILD_GENERAL1_SMALL` is only valid
        /// if `type` is set to `LINUX_CONTAINER`. When `type` is set to `LINUX_GPU_CONTAINER`, `compute_type` must be
        /// `BUILD_GENERAL1_LARGE`. When `type` is set to `LINUX_LAMBDA_CONTAINER` or `ARM_LAMBDA_CONTAINER`, `compute_type` must
        /// be `BUILD_LAMBDA_XGB`.`
        /// </summary>
        [PolicyResourceProperty("computeType", "_mUnknown_ComputeType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ComputeType;
        private bool _mUnknown_ComputeType;
        public string? ComputeType
        {
            get
            {
                if (!_mUnknown_ComputeType) return _mValue_ComputeType;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.ComputeType' is not present");
            }
        }

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [PolicyResourceProperty("environmentVariables", "_mUnknown_EnvironmentVariables")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ProjectEnvironmentEnvironmentVariableArgs>? _mValue_EnvironmentVariables;
        private bool _mUnknown_EnvironmentVariables;
        public List<Inputs.ProjectEnvironmentEnvironmentVariableArgs>? EnvironmentVariables
        {
            get
            {
                if (!_mUnknown_EnvironmentVariables) return _mValue_EnvironmentVariables;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.EnvironmentVariables' is not present");
            }
        }

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [PolicyResourceProperty("fleet", "_mUnknown_Fleet")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ProjectEnvironmentFleetArgs? _mValue_Fleet;
        private bool _mUnknown_Fleet;
        public Inputs.ProjectEnvironmentFleetArgs? Fleet
        {
            get
            {
                if (!_mUnknown_Fleet) return _mValue_Fleet;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.Fleet' is not present");
            }
        }

        /// <summary>
        /// Docker image to use for this build project. Valid values
        /// include [Docker images provided by CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html) (
        /// e.g `aws/codebuild/amazonlinux2-x86_64-standard:4.0`), [Docker Hub images](https://hub.docker.com/) (e.g.,
        /// `pulumi/pulumi:latest`), and full Docker repository URIs such as those for ECR (e.g.,
        /// `137112412989.dkr.ecr.us-west-2.amazonaws.com/amazonlinux:latest`).
        /// </summary>
        [PolicyResourceProperty("image", "_mUnknown_Image")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Image;
        private bool _mUnknown_Image;
        public string? Image
        {
            get
            {
                if (!_mUnknown_Image) return _mValue_Image;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.Image' is not present");
            }
        }

        /// <summary>
        /// Type of credentials AWS CodeBuild uses to pull images in your build. Valid
        /// values: `CODEBUILD`, `SERVICE_ROLE`. When you use a cross-account or private registry image, you must use SERVICE_ROLE
        /// credentials. When you use an AWS CodeBuild curated image, you must use CodeBuild credentials. Defaults to `CODEBUILD`.
        /// </summary>
        [PolicyResourceProperty("imagePullCredentialsType", "_mUnknown_ImagePullCredentialsType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImagePullCredentialsType;
        private bool _mUnknown_ImagePullCredentialsType;
        public string? ImagePullCredentialsType
        {
            get
            {
                if (!_mUnknown_ImagePullCredentialsType) return _mValue_ImagePullCredentialsType;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.ImagePullCredentialsType' is not present");
            }
        }

        /// <summary>
        /// Whether to enable running the Docker daemon inside a Docker container. Defaults to
        /// `false`.
        /// </summary>
        [PolicyResourceProperty("privilegedMode", "_mUnknown_PrivilegedMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PrivilegedMode;
        private bool _mUnknown_PrivilegedMode;
        public bool? PrivilegedMode
        {
            get
            {
                if (!_mUnknown_PrivilegedMode) return _mValue_PrivilegedMode;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.PrivilegedMode' is not present");
            }
        }

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [PolicyResourceProperty("registryCredential", "_mUnknown_RegistryCredential")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ProjectEnvironmentRegistryCredentialArgs? _mValue_RegistryCredential;
        private bool _mUnknown_RegistryCredential;
        public Inputs.ProjectEnvironmentRegistryCredentialArgs? RegistryCredential
        {
            get
            {
                if (!_mUnknown_RegistryCredential) return _mValue_RegistryCredential;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.RegistryCredential' is not present");
            }
        }

        /// <summary>
        /// Type of build environment to use for related builds. Valid values: `LINUX_CONTAINER`,
        /// `LINUX_GPU_CONTAINER`, `WINDOWS_CONTAINER` (deprecated), `WINDOWS_SERVER_2019_CONTAINER`, `ARM_CONTAINER`,
        /// `LINUX_LAMBDA_CONTAINER`, `ARM_LAMBDA_CONTAINER`. For additional information, see
        /// the [CodeBuild User Guide](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html).
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'ProjectEnvironmentArgs.Type' is not present");
            }
        }
    }
}
