// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeBuild.Inputs
{
    public sealed class ProjectLogsConfigS3LogsArgs
    {
        /// <summary>
        /// Specifies the bucket owner's access for objects that another account uploads to
        /// their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these
        /// objects. This property allows you to give the bucket owner access to these objects. Valid values are `NONE`,
        /// `READ_ONLY`, and `FULL`. your CodeBuild service role must have the `s3:PutBucketAcl` permission. This permission
        /// allows CodeBuild to modify the access control list for the bucket.
        /// </summary>
        [PolicyResourceProperty("bucketOwnerAccess", "_mUnknown_BucketOwnerAccess")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BucketOwnerAccess;
        private bool _mUnknown_BucketOwnerAccess;
        public string? BucketOwnerAccess
        {
            get
            {
                if (!_mUnknown_BucketOwnerAccess) return _mValue_BucketOwnerAccess;
                throw new UndeferrableValueException("Value 'ProjectLogsConfigS3LogsArgs.BucketOwnerAccess' is not present");
            }
        }

        /// <summary>
        /// Whether to disable encrypting S3 logs. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("encryptionDisabled", "_mUnknown_EncryptionDisabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EncryptionDisabled;
        private bool _mUnknown_EncryptionDisabled;
        public bool? EncryptionDisabled
        {
            get
            {
                if (!_mUnknown_EncryptionDisabled) return _mValue_EncryptionDisabled;
                throw new UndeferrableValueException("Value 'ProjectLogsConfigS3LogsArgs.EncryptionDisabled' is not present");
            }
        }

        /// <summary>
        /// Name of the S3 bucket and the path prefix for S3 logs. Must be set if status is `ENABLED`,
        /// otherwise it must be empty.
        /// </summary>
        [PolicyResourceProperty("location", "_mUnknown_Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Location;
        private bool _mUnknown_Location;
        public string? Location
        {
            get
            {
                if (!_mUnknown_Location) return _mValue_Location;
                throw new UndeferrableValueException("Value 'ProjectLogsConfigS3LogsArgs.Location' is not present");
            }
        }

        /// <summary>
        /// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults
        /// to `DISABLED`.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'ProjectLogsConfigS3LogsArgs.Status' is not present");
            }
        }
    }
}
