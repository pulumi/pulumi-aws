// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeBuild.Inputs
{
    public sealed class FleetScalingConfigurationArgs
    {
        [PolicyResourceProperty("desiredCapacity", "_mUnknown_DesiredCapacity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_DesiredCapacity;
        private bool _mUnknown_DesiredCapacity;
        public int? DesiredCapacity
        {
            get
            {
                if (!_mUnknown_DesiredCapacity) return _mValue_DesiredCapacity;
                throw new UndeferrableValueException("Value 'FleetScalingConfigurationArgs.DesiredCapacity' is not present");
            }
        }

        /// <summary>
        /// Maximum number of instances in the ï¬‚eet when auto-scaling.
        /// </summary>
        [PolicyResourceProperty("maxCapacity", "_mUnknown_MaxCapacity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxCapacity;
        private bool _mUnknown_MaxCapacity;
        public int? MaxCapacity
        {
            get
            {
                if (!_mUnknown_MaxCapacity) return _mValue_MaxCapacity;
                throw new UndeferrableValueException("Value 'FleetScalingConfigurationArgs.MaxCapacity' is not present");
            }
        }

        /// <summary>
        /// Scaling type for a compute fleet. Valid value: `TARGET_TRACKING_SCALING`.
        /// </summary>
        [PolicyResourceProperty("scalingType", "_mUnknown_ScalingType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ScalingType;
        private bool _mUnknown_ScalingType;
        public string? ScalingType
        {
            get
            {
                if (!_mUnknown_ScalingType) return _mValue_ScalingType;
                throw new UndeferrableValueException("Value 'FleetScalingConfigurationArgs.ScalingType' is not present");
            }
        }

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [PolicyResourceProperty("targetTrackingScalingConfigs", "_mUnknown_TargetTrackingScalingConfigs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.FleetScalingConfigurationTargetTrackingScalingConfigArgs>? _mValue_TargetTrackingScalingConfigs;
        private bool _mUnknown_TargetTrackingScalingConfigs;
        public List<Inputs.FleetScalingConfigurationTargetTrackingScalingConfigArgs>? TargetTrackingScalingConfigs
        {
            get
            {
                if (!_mUnknown_TargetTrackingScalingConfigs) return _mValue_TargetTrackingScalingConfigs;
                throw new UndeferrableValueException("Value 'FleetScalingConfigurationArgs.TargetTrackingScalingConfigs' is not present");
            }
        }
    }
}
