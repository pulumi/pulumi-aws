// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeBuild
{
    [PolicyResourceType("aws:codebuild/webhook:Webhook")]
    public sealed class Webhook : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// A regular expression used to determine which branches get built. Default is all branches are built. We recommend using `filter_group` over `branch_filter`.
        /// </summary>
        [Input("branchFilter")]
        public string? BranchFilter;

        /// <summary>
        /// The type of build this webhook will trigger. Valid values for this parameter are: `BUILD`, `BUILD_BATCH`.
        /// </summary>
        [Input("buildType")]
        public string? BuildType;

        /// <summary>
        /// Information about the webhook's trigger. Filter group blocks are documented below.
        /// </summary>
        [Input("filterGroups")]
        public List<WebhookFilterGroup>? FilterGroups;

        /// <summary>
        /// The CodeBuild endpoint where webhook events are sent.
        /// </summary>
        [Input("payloadUrl")]
        public string? PayloadUrl;

        /// <summary>
        /// The name of the build project.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName;

        /// <summary>
        /// Scope configuration for global or organization webhooks. Scope configuration blocks are documented below.
        /// </summary>
        [Input("scopeConfiguration")]
        public WebhookScopeConfiguration? ScopeConfiguration;

        /// <summary>
        /// The secret token of the associated repository. Not returned by the CodeBuild API for all source types.
        /// </summary>
        [Input("secret")]
        public string? Secret;

        /// <summary>
        /// The URL to the webhook.
        /// </summary>
        [Input("url")]
        public string? Url;
    }
}
