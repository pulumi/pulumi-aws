// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeBuild
{
    [PolicyResourceType("aws:codebuild/webhook:Webhook")]
    public sealed class Webhook : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// A regular expression used to determine which branches get built. Default is all branches are built. We recommend using `filter_group` over `branch_filter`.
        /// </summary>
        [PolicyResourceProperty("branchFilter", "_mUnknown_BranchFilter")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BranchFilter;
        private bool _mUnknown_BranchFilter;
        public string? BranchFilter
        {
            get
            {
                if (!_mUnknown_BranchFilter) return _mValue_BranchFilter;
                throw new UndeferrableValueException("Value 'Webhook.BranchFilter' is not present");
            }
        }

        /// <summary>
        /// The type of build this webhook will trigger. Valid values for this parameter are: `BUILD`, `BUILD_BATCH`.
        /// </summary>
        [PolicyResourceProperty("buildType", "_mUnknown_BuildType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BuildType;
        private bool _mUnknown_BuildType;
        public string? BuildType
        {
            get
            {
                if (!_mUnknown_BuildType) return _mValue_BuildType;
                throw new UndeferrableValueException("Value 'Webhook.BuildType' is not present");
            }
        }

        /// <summary>
        /// Information about the webhook's trigger. Filter group blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("filterGroups", "_mUnknown_FilterGroups")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.WebhookFilterGroup>? _mValue_FilterGroups;
        private bool _mUnknown_FilterGroups;
        public List<Outputs.WebhookFilterGroup>? FilterGroups
        {
            get
            {
                if (!_mUnknown_FilterGroups) return _mValue_FilterGroups;
                throw new UndeferrableValueException("Value 'Webhook.FilterGroups' is not present");
            }
        }

        /// <summary>
        /// The CodeBuild endpoint where webhook events are sent.
        /// </summary>
        [PolicyResourceProperty("payloadUrl", "_mUnknown_PayloadUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PayloadUrl;
        private bool _mUnknown_PayloadUrl;
        public string? PayloadUrl
        {
            get
            {
                if (!_mUnknown_PayloadUrl) return _mValue_PayloadUrl;
                throw new UndeferrableValueException("Value 'Webhook.PayloadUrl' is not present");
            }
        }

        /// <summary>
        /// The name of the build project.
        /// </summary>
        [PolicyResourceProperty("projectName", "_mUnknown_ProjectName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProjectName;
        private bool _mUnknown_ProjectName;
        public string? ProjectName
        {
            get
            {
                if (!_mUnknown_ProjectName) return _mValue_ProjectName;
                throw new UndeferrableValueException("Value 'Webhook.ProjectName' is not present");
            }
        }

        /// <summary>
        /// Scope configuration for global or organization webhooks. Scope configuration blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("scopeConfiguration", "_mUnknown_ScopeConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WebhookScopeConfiguration? _mValue_ScopeConfiguration;
        private bool _mUnknown_ScopeConfiguration;
        public Outputs.WebhookScopeConfiguration? ScopeConfiguration
        {
            get
            {
                if (!_mUnknown_ScopeConfiguration) return _mValue_ScopeConfiguration;
                throw new UndeferrableValueException("Value 'Webhook.ScopeConfiguration' is not present");
            }
        }

        /// <summary>
        /// The secret token of the associated repository. Not returned by the CodeBuild API for all source types.
        /// </summary>
        [PolicyResourceProperty("secret", "_mUnknown_Secret")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Secret;
        private bool _mUnknown_Secret;
        public string? Secret
        {
            get
            {
                if (!_mUnknown_Secret) return _mValue_Secret;
                throw new UndeferrableValueException("Value 'Webhook.Secret' is not present");
            }
        }

        /// <summary>
        /// The URL to the webhook.
        /// </summary>
        [PolicyResourceProperty("url", "_mUnknown_Url")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Url;
        private bool _mUnknown_Url;
        public string? Url
        {
            get
            {
                if (!_mUnknown_Url) return _mValue_Url;
                throw new UndeferrableValueException("Value 'Webhook.Url' is not present");
            }
        }
    }

    [PolicyResourceType("aws:codebuild/webhook:Webhook")]
    public sealed class WebhookArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A regular expression used to determine which branches get built. Default is all branches are built. We recommend using `filter_group` over `branch_filter`.
        /// </summary>
        [PolicyResourceProperty("branchFilter", "_mUnknown_BranchFilter")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BranchFilter;
        private bool _mUnknown_BranchFilter;
        public string? BranchFilter
        {
            get
            {
                if (!_mUnknown_BranchFilter) return _mValue_BranchFilter;
                throw new UndeferrableValueException("Value 'WebhookArgs.BranchFilter' is not present");
            }
        }

        /// <summary>
        /// The type of build this webhook will trigger. Valid values for this parameter are: `BUILD`, `BUILD_BATCH`.
        /// </summary>
        [PolicyResourceProperty("buildType", "_mUnknown_BuildType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BuildType;
        private bool _mUnknown_BuildType;
        public string? BuildType
        {
            get
            {
                if (!_mUnknown_BuildType) return _mValue_BuildType;
                throw new UndeferrableValueException("Value 'WebhookArgs.BuildType' is not present");
            }
        }

        /// <summary>
        /// Information about the webhook's trigger. Filter group blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("filterGroups", "_mUnknown_FilterGroups")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.WebhookFilterGroupArgs>? _mValue_FilterGroups;
        private bool _mUnknown_FilterGroups;
        public List<Inputs.WebhookFilterGroupArgs>? FilterGroups
        {
            get
            {
                if (!_mUnknown_FilterGroups) return _mValue_FilterGroups;
                throw new UndeferrableValueException("Value 'WebhookArgs.FilterGroups' is not present");
            }
        }

        /// <summary>
        /// The name of the build project.
        /// </summary>
        [PolicyResourceProperty("projectName", "_mUnknown_ProjectName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProjectName;
        private bool _mUnknown_ProjectName;
        public string? ProjectName
        {
            get
            {
                if (!_mUnknown_ProjectName) return _mValue_ProjectName;
                throw new UndeferrableValueException("Value 'WebhookArgs.ProjectName' is not present");
            }
        }

        /// <summary>
        /// Scope configuration for global or organization webhooks. Scope configuration blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("scopeConfiguration", "_mUnknown_ScopeConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.WebhookScopeConfigurationArgs? _mValue_ScopeConfiguration;
        private bool _mUnknown_ScopeConfiguration;
        public Inputs.WebhookScopeConfigurationArgs? ScopeConfiguration
        {
            get
            {
                if (!_mUnknown_ScopeConfiguration) return _mValue_ScopeConfiguration;
                throw new UndeferrableValueException("Value 'WebhookArgs.ScopeConfiguration' is not present");
            }
        }
    }
}
