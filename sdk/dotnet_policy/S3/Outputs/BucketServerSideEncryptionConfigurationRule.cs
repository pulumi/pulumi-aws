// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.S3.Outputs
{
    public sealed class BucketServerSideEncryptionConfigurationRule
    {
        /// <summary>
        /// A single object for setting server-side encryption by default. (documented below)
        /// </summary>
        [PolicyResourceProperty("applyServerSideEncryptionByDefault", "_mUnknown_ApplyServerSideEncryptionByDefault")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault? _mValue_ApplyServerSideEncryptionByDefault;
        private bool _mUnknown_ApplyServerSideEncryptionByDefault;
        public Outputs.BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault? ApplyServerSideEncryptionByDefault
        {
            get
            {
                if (!_mUnknown_ApplyServerSideEncryptionByDefault) return _mValue_ApplyServerSideEncryptionByDefault;
                throw new UndeferrableValueException("Value 'BucketServerSideEncryptionConfigurationRule.ApplyServerSideEncryptionByDefault' is not present");
            }
        }

        /// <summary>
        /// Whether or not to use [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) for SSE-KMS.
        /// </summary>
        [PolicyResourceProperty("bucketKeyEnabled", "_mUnknown_BucketKeyEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_BucketKeyEnabled;
        private bool _mUnknown_BucketKeyEnabled;
        public bool? BucketKeyEnabled
        {
            get
            {
                if (!_mUnknown_BucketKeyEnabled) return _mValue_BucketKeyEnabled;
                throw new UndeferrableValueException("Value 'BucketServerSideEncryptionConfigurationRule.BucketKeyEnabled' is not present");
            }
        }
    }
}
