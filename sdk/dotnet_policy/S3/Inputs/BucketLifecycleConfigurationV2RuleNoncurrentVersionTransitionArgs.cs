// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.S3.Inputs
{
    public sealed class BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs
    {
        /// <summary>
        /// Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
        /// </summary>
        [PolicyResourceProperty("newerNoncurrentVersions", "_mUnknown_NewerNoncurrentVersions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NewerNoncurrentVersions;
        private bool _mUnknown_NewerNoncurrentVersions;
        public int? NewerNoncurrentVersions
        {
            get
            {
                if (!_mUnknown_NewerNoncurrentVersions) return _mValue_NewerNoncurrentVersions;
                throw new UndeferrableValueException("Value 'BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs.NewerNoncurrentVersions' is not present");
            }
        }

        /// <summary>
        /// Number of days an object is noncurrent before Amazon S3 can perform the associated action.
        /// </summary>
        [PolicyResourceProperty("noncurrentDays", "_mUnknown_NoncurrentDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NoncurrentDays;
        private bool _mUnknown_NoncurrentDays;
        public int? NoncurrentDays
        {
            get
            {
                if (!_mUnknown_NoncurrentDays) return _mValue_NoncurrentDays;
                throw new UndeferrableValueException("Value 'BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs.NoncurrentDays' is not present");
            }
        }

        /// <summary>
        /// Class of storage used to store the object. Valid Values: `GLACIER`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `DEEP_ARCHIVE`, `GLACIER_IR`.
        /// </summary>
        [PolicyResourceProperty("storageClass", "_mUnknown_StorageClass")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StorageClass;
        private bool _mUnknown_StorageClass;
        public string? StorageClass
        {
            get
            {
                if (!_mUnknown_StorageClass) return _mValue_StorageClass;
                throw new UndeferrableValueException("Value 'BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs.StorageClass' is not present");
            }
        }
    }
}
