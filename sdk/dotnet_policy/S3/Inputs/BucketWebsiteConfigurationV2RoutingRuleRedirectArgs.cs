// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.S3.Inputs
{
    public sealed class BucketWebsiteConfigurationV2RoutingRuleRedirectArgs
    {
        /// <summary>
        /// Host name to use in the redirect request.
        /// </summary>
        [PolicyResourceProperty("hostName", "_mUnknown_HostName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostName;
        private bool _mUnknown_HostName;
        public string? HostName
        {
            get
            {
                if (!_mUnknown_HostName) return _mValue_HostName;
                throw new UndeferrableValueException("Value 'BucketWebsiteConfigurationV2RoutingRuleRedirectArgs.HostName' is not present");
            }
        }

        /// <summary>
        /// HTTP redirect code to use on the response.
        /// </summary>
        [PolicyResourceProperty("httpRedirectCode", "_mUnknown_HttpRedirectCode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HttpRedirectCode;
        private bool _mUnknown_HttpRedirectCode;
        public string? HttpRedirectCode
        {
            get
            {
                if (!_mUnknown_HttpRedirectCode) return _mValue_HttpRedirectCode;
                throw new UndeferrableValueException("Value 'BucketWebsiteConfigurationV2RoutingRuleRedirectArgs.HttpRedirectCode' is not present");
            }
        }

        /// <summary>
        /// Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: `http`, `https`.
        /// </summary>
        [PolicyResourceProperty("protocol", "_mUnknown_Protocol")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Protocol;
        private bool _mUnknown_Protocol;
        public string? Protocol
        {
            get
            {
                if (!_mUnknown_Protocol) return _mValue_Protocol;
                throw new UndeferrableValueException("Value 'BucketWebsiteConfigurationV2RoutingRuleRedirectArgs.Protocol' is not present");
            }
        }

        /// <summary>
        /// Object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix `docs/` (objects in the `docs/` folder) to `documents/`, you can set a `condition` block with `key_prefix_equals` set to `docs/` and in the `redirect` set `replace_key_prefix_with` to `/documents`.
        /// </summary>
        [PolicyResourceProperty("replaceKeyPrefixWith", "_mUnknown_ReplaceKeyPrefixWith")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplaceKeyPrefixWith;
        private bool _mUnknown_ReplaceKeyPrefixWith;
        public string? ReplaceKeyPrefixWith
        {
            get
            {
                if (!_mUnknown_ReplaceKeyPrefixWith) return _mValue_ReplaceKeyPrefixWith;
                throw new UndeferrableValueException("Value 'BucketWebsiteConfigurationV2RoutingRuleRedirectArgs.ReplaceKeyPrefixWith' is not present");
            }
        }

        /// <summary>
        /// Specific object key to use in the redirect request. For example, redirect request to `error.html`.
        /// </summary>
        [PolicyResourceProperty("replaceKeyWith", "_mUnknown_ReplaceKeyWith")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplaceKeyWith;
        private bool _mUnknown_ReplaceKeyWith;
        public string? ReplaceKeyWith
        {
            get
            {
                if (!_mUnknown_ReplaceKeyWith) return _mValue_ReplaceKeyWith;
                throw new UndeferrableValueException("Value 'BucketWebsiteConfigurationV2RoutingRuleRedirectArgs.ReplaceKeyWith' is not present");
            }
        }
    }
}
