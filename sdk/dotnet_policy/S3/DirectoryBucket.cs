// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.S3
{
    [PolicyResourceType("aws:s3/directoryBucket:DirectoryBucket")]
    public sealed class DirectoryBucket : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the bucket.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'DirectoryBucket.Arn' is not present");
            }
        }

        /// <summary>
        /// Name of the bucket. The name must be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.BucketV2` resource to manage general purpose buckets.
        /// </summary>
        [PolicyResourceProperty("bucket", "_mUnknown_Bucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Bucket;
        private bool _mUnknown_Bucket;
        public string? Bucket
        {
            get
            {
                if (!_mUnknown_Bucket) return _mValue_Bucket;
                throw new UndeferrableValueException("Value 'DirectoryBucket.Bucket' is not present");
            }
        }

        /// <summary>
        /// Data redundancy. Valid values: `SingleAvailabilityZone`, `SingleLocalZone`. The default value depends on the value of the `location.type` attribute.
        /// </summary>
        [PolicyResourceProperty("dataRedundancy", "_mUnknown_DataRedundancy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataRedundancy;
        private bool _mUnknown_DataRedundancy;
        public string? DataRedundancy
        {
            get
            {
                if (!_mUnknown_DataRedundancy) return _mValue_DataRedundancy;
                throw new UndeferrableValueException("Value 'DirectoryBucket.DataRedundancy' is not present");
            }
        }

        /// <summary>
        /// Boolean that indicates all objects should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [PolicyResourceProperty("forceDestroy", "_mUnknown_ForceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceDestroy;
        private bool _mUnknown_ForceDestroy;
        public bool? ForceDestroy
        {
            get
            {
                if (!_mUnknown_ForceDestroy) return _mValue_ForceDestroy;
                throw new UndeferrableValueException("Value 'DirectoryBucket.ForceDestroy' is not present");
            }
        }

        /// <summary>
        /// Bucket location. See Location below for more details.
        /// </summary>
        [PolicyResourceProperty("location", "_mUnknown_Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DirectoryBucketLocation? _mValue_Location;
        private bool _mUnknown_Location;
        public Outputs.DirectoryBucketLocation? Location
        {
            get
            {
                if (!_mUnknown_Location) return _mValue_Location;
                throw new UndeferrableValueException("Value 'DirectoryBucket.Location' is not present");
            }
        }

        /// <summary>
        /// Bucket type. Valid values: `Directory`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'DirectoryBucket.Type' is not present");
            }
        }
    }

    [PolicyResourceType("aws:s3/directoryBucket:DirectoryBucket")]
    public sealed class DirectoryBucketArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the bucket. The name must be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.BucketV2` resource to manage general purpose buckets.
        /// </summary>
        [PolicyResourceProperty("bucket", "_mUnknown_Bucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Bucket;
        private bool _mUnknown_Bucket;
        public string? Bucket
        {
            get
            {
                if (!_mUnknown_Bucket) return _mValue_Bucket;
                throw new UndeferrableValueException("Value 'DirectoryBucketArgs.Bucket' is not present");
            }
        }

        /// <summary>
        /// Data redundancy. Valid values: `SingleAvailabilityZone`, `SingleLocalZone`. The default value depends on the value of the `location.type` attribute.
        /// </summary>
        [PolicyResourceProperty("dataRedundancy", "_mUnknown_DataRedundancy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataRedundancy;
        private bool _mUnknown_DataRedundancy;
        public string? DataRedundancy
        {
            get
            {
                if (!_mUnknown_DataRedundancy) return _mValue_DataRedundancy;
                throw new UndeferrableValueException("Value 'DirectoryBucketArgs.DataRedundancy' is not present");
            }
        }

        /// <summary>
        /// Boolean that indicates all objects should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [PolicyResourceProperty("forceDestroy", "_mUnknown_ForceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceDestroy;
        private bool _mUnknown_ForceDestroy;
        public bool? ForceDestroy
        {
            get
            {
                if (!_mUnknown_ForceDestroy) return _mValue_ForceDestroy;
                throw new UndeferrableValueException("Value 'DirectoryBucketArgs.ForceDestroy' is not present");
            }
        }

        /// <summary>
        /// Bucket location. See Location below for more details.
        /// </summary>
        [PolicyResourceProperty("location", "_mUnknown_Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DirectoryBucketLocationArgs? _mValue_Location;
        private bool _mUnknown_Location;
        public Inputs.DirectoryBucketLocationArgs? Location
        {
            get
            {
                if (!_mUnknown_Location) return _mValue_Location;
                throw new UndeferrableValueException("Value 'DirectoryBucketArgs.Location' is not present");
            }
        }

        /// <summary>
        /// Bucket type. Valid values: `Directory`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'DirectoryBucketArgs.Type' is not present");
            }
        }
    }
}
