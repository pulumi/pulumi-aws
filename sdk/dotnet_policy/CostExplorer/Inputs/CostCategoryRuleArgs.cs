// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CostExplorer.Inputs
{
    public sealed class CostCategoryRuleArgs
    {
        /// <summary>
        /// Configuration block for the value the line item is categorized as if the line item contains the matched dimension. See below.
        /// </summary>
        [Input("inheritedValue")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.CostCategoryRuleInheritedValueArgs> _mInheritedValue;

        public Inputs.CostCategoryRuleInheritedValueArgs? InheritedValue => _mInheritedValue.GetValue("inheritedValue");

        /// <summary>
        /// Configuration block for the `Expression` object used to categorize costs. See below.
        /// </summary>
        [Input("rule")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.CostCategoryRuleRuleArgs> _mRule;

        public Inputs.CostCategoryRuleRuleArgs? Rule => _mRule.GetValue("rule");

        /// <summary>
        /// You can define the CostCategoryRule rule type as either `REGULAR` or `INHERITED_VALUE`.
        /// </summary>
        [Input("type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mType;

        public string? Type => _mType.GetValue("type");

        /// <summary>
        /// Default value for the cost category.
        /// </summary>
        [Input("value")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mValue;

        public string? Value => _mValue.GetValue("value");
    }
}
