// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CostExplorer.Outputs
{
    public sealed class AnomalySubscriptionThresholdExpressionOr
    {
        /// <summary>
        /// Configuration block for the filter that's based on  values. See Cost Category below.
        /// </summary>
        [PolicyResourceProperty("costCategory", "_mUnknown_CostCategory")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.AnomalySubscriptionThresholdExpressionOrCostCategory? _mValue_CostCategory;
        private bool _mUnknown_CostCategory;
        public Outputs.AnomalySubscriptionThresholdExpressionOrCostCategory? CostCategory
        {
            get
            {
                if (!_mUnknown_CostCategory) return _mValue_CostCategory;
                throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionOr.CostCategory' is not present");
            }
        }

        /// <summary>
        /// Configuration block for the specific Dimension to use for.
        /// </summary>
        [PolicyResourceProperty("dimension", "_mUnknown_Dimension")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.AnomalySubscriptionThresholdExpressionOrDimension? _mValue_Dimension;
        private bool _mUnknown_Dimension;
        public Outputs.AnomalySubscriptionThresholdExpressionOrDimension? Dimension
        {
            get
            {
                if (!_mUnknown_Dimension) return _mValue_Dimension;
                throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionOr.Dimension' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.AnomalySubscriptionThresholdExpressionOrTags? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Outputs.AnomalySubscriptionThresholdExpressionOrTags? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionOr.Tags' is not present");
            }
        }
    }
}
