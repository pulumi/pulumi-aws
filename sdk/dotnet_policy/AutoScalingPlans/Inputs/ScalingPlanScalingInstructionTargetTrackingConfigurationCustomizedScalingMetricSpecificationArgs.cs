// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AutoScalingPlans.Inputs
{
    public sealed class ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs
    {
        /// <summary>
        /// Dimensions of the metric.
        /// </summary>
        [PolicyResourceProperty("dimensions", "_mUnknown_Dimensions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Dimensions;
        private bool _mUnknown_Dimensions;
        public Dictionary<string, string>? Dimensions
        {
            get
            {
                if (!_mUnknown_Dimensions) return _mValue_Dimensions;
                throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs.Dimensions' is not present");
            }
        }

        /// <summary>
        /// Name of the metric.
        /// </summary>
        [PolicyResourceProperty("metricName", "_mUnknown_MetricName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricName;
        private bool _mUnknown_MetricName;
        public string? MetricName
        {
            get
            {
                if (!_mUnknown_MetricName) return _mValue_MetricName;
                throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs.MetricName' is not present");
            }
        }

        /// <summary>
        /// Namespace of the metric.
        /// </summary>
        [PolicyResourceProperty("namespace", "_mUnknown_Namespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Namespace;
        private bool _mUnknown_Namespace;
        public string? Namespace
        {
            get
            {
                if (!_mUnknown_Namespace) return _mValue_Namespace;
                throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs.Namespace' is not present");
            }
        }

        /// <summary>
        /// Statistic of the metric. Valid values: `Average`, `Maximum`, `Minimum`, `SampleCount`, `Sum`.
        /// </summary>
        [PolicyResourceProperty("statistic", "_mUnknown_Statistic")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Statistic;
        private bool _mUnknown_Statistic;
        public string? Statistic
        {
            get
            {
                if (!_mUnknown_Statistic) return _mValue_Statistic;
                throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs.Statistic' is not present");
            }
        }

        /// <summary>
        /// Unit of the metric.
        /// </summary>
        [PolicyResourceProperty("unit", "_mUnknown_Unit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Unit;
        private bool _mUnknown_Unit;
        public string? Unit
        {
            get
            {
                if (!_mUnknown_Unit) return _mValue_Unit;
                throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs.Unit' is not present");
            }
        }
    }
}
