// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AutoScalingPlans
{
    [PolicyResourceType("aws:autoscalingplans/ScalingPlanScalingInstruction:ScalingPlanScalingInstruction")]
    public sealed class ScalingPlanScalingInstruction
    {
        /// <summary>
        /// Customized load metric to use for predictive scaling. You must specify either `customized_load_metric_specification` or `predefined_load_metric_specification` when configuring predictive scaling.
        /// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedLoadMetricSpecification.html).
        /// </summary>
        [Input("customizedLoadMetricSpecification")]
        public ScalingPlanScalingInstructionCustomizedLoadMetricSpecification? CustomizedLoadMetricSpecification;

        /// <summary>
        /// Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to `false`.
        /// </summary>
        [Input("disableDynamicScaling")]
        public bool? DisableDynamicScaling;

        /// <summary>
        /// Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for `predictive_scaling_max_capacity_behavior`.
        /// </summary>
        [Input("maxCapacity")]
        public int? MaxCapacity;

        /// <summary>
        /// Minimum capacity of the resource.
        /// </summary>
        [Input("minCapacity")]
        public int? MinCapacity;

        /// <summary>
        /// Predefined load metric to use for predictive scaling. You must specify either `predefined_load_metric_specification` or `customized_load_metric_specification` when configuring predictive scaling.
        /// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedLoadMetricSpecification.html).
        /// </summary>
        [Input("predefinedLoadMetricSpecification")]
        public ScalingPlanScalingInstructionPredefinedLoadMetricSpecification? PredefinedLoadMetricSpecification;

        /// <summary>
        /// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
        /// Valid values: `SetForecastCapacityToMaxCapacity`, `SetMaxCapacityAboveForecastCapacity`, `SetMaxCapacityToForecastCapacity`.
        /// </summary>
        [Input("predictiveScalingMaxCapacityBehavior")]
        public string? PredictiveScalingMaxCapacityBehavior;

        /// <summary>
        /// Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
        /// </summary>
        [Input("predictiveScalingMaxCapacityBuffer")]
        public int? PredictiveScalingMaxCapacityBuffer;

        /// <summary>
        /// Predictive scaling mode. Valid values: `ForecastAndScale`, `ForecastOnly`.
        /// </summary>
        [Input("predictiveScalingMode")]
        public string? PredictiveScalingMode;

        /// <summary>
        /// ID of the resource. This string consists of the resource type and unique identifier.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId;

        /// <summary>
        /// Scalable dimension associated with the resource. Valid values: `autoscaling:autoScalingGroup:DesiredCapacity`, `dynamodb:index:ReadCapacityUnits`, `dynamodb:index:WriteCapacityUnits`, `dynamodb:table:ReadCapacityUnits`, `dynamodb:table:WriteCapacityUnits`, `ecs:service:DesiredCount`, `ec2:spot-fleet-request:TargetCapacity`, `rds:cluster:ReadReplicaCount`.
        /// </summary>
        [Input("scalableDimension")]
        public string? ScalableDimension;

        /// <summary>
        /// Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: `KeepExternalPolicies`, `ReplaceExternalPolicies`. Defaults to `KeepExternalPolicies`.
        /// </summary>
        [Input("scalingPolicyUpdateBehavior")]
        public string? ScalingPolicyUpdateBehavior;

        /// <summary>
        /// Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
        /// </summary>
        [Input("scheduledActionBufferTime")]
        public int? ScheduledActionBufferTime;

        /// <summary>
        /// Namespace of the AWS service. Valid values: `autoscaling`, `dynamodb`, `ecs`, `ec2`, `rds`.
        /// </summary>
        [Input("serviceNamespace")]
        public string? ServiceNamespace;

        /// <summary>
        /// Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
        /// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_TargetTrackingConfiguration.html).
        /// </summary>
        [Input("targetTrackingConfigurations")]
        public List<ScalingPlanScalingInstructionTargetTrackingConfiguration>? TargetTrackingConfigurations;
    }
}
