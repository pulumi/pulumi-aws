// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeDeploy.Outputs
{
    public sealed class DeploymentConfigZonalConfig
    {
        /// <summary>
        /// The period of time, in seconds, that CodeDeploy must wait after completing a deployment to the first Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the second Availability Zone. If you don't specify a value for `first_zone_monitor_duration_in_seconds`, then CodeDeploy uses the `monitor_duration_in_seconds` value for the first Availability Zone.
        /// </summary>
        [PolicyResourceProperty("firstZoneMonitorDurationInSeconds", "_mUnknown_FirstZoneMonitorDurationInSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_FirstZoneMonitorDurationInSeconds;
        private bool _mUnknown_FirstZoneMonitorDurationInSeconds;
        public int? FirstZoneMonitorDurationInSeconds
        {
            get
            {
                if (!_mUnknown_FirstZoneMonitorDurationInSeconds) return _mValue_FirstZoneMonitorDurationInSeconds;
                throw new UndeferrableValueException("Value 'DeploymentConfigZonalConfig.FirstZoneMonitorDurationInSeconds' is not present");
            }
        }

        /// <summary>
        /// The number or percentage of instances that must remain available per Availability Zone during a deployment. If you don't specify a value under `minimum_healthy_hosts_per_zone`, then CodeDeploy uses a default value of 0 percent. This block is more documented below.
        /// </summary>
        [PolicyResourceProperty("minimumHealthyHostsPerZone", "_mUnknown_MinimumHealthyHostsPerZone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DeploymentConfigZonalConfigMinimumHealthyHostsPerZone? _mValue_MinimumHealthyHostsPerZone;
        private bool _mUnknown_MinimumHealthyHostsPerZone;
        public Outputs.DeploymentConfigZonalConfigMinimumHealthyHostsPerZone? MinimumHealthyHostsPerZone
        {
            get
            {
                if (!_mUnknown_MinimumHealthyHostsPerZone) return _mValue_MinimumHealthyHostsPerZone;
                throw new UndeferrableValueException("Value 'DeploymentConfigZonalConfig.MinimumHealthyHostsPerZone' is not present");
            }
        }

        /// <summary>
        /// The period of time, in seconds, that CodeDeploy must wait after completing a deployment to an Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the next Availability Zone. If you don't specify a `monitor_duration_in_seconds`, CodeDeploy starts deploying to the next Availability Zone immediately.
        /// </summary>
        [PolicyResourceProperty("monitorDurationInSeconds", "_mUnknown_MonitorDurationInSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MonitorDurationInSeconds;
        private bool _mUnknown_MonitorDurationInSeconds;
        public int? MonitorDurationInSeconds
        {
            get
            {
                if (!_mUnknown_MonitorDurationInSeconds) return _mValue_MonitorDurationInSeconds;
                throw new UndeferrableValueException("Value 'DeploymentConfigZonalConfig.MonitorDurationInSeconds' is not present");
            }
        }
    }
}
