// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeDeploy
{
    [PolicyResourceType("aws:codedeploy/deploymentConfig:DeploymentConfig")]
    public sealed class DeploymentConfig : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the deployment config.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'DeploymentConfig.Arn' is not present");
            }
        }

        /// <summary>
        /// The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
        /// </summary>
        [PolicyResourceProperty("computePlatform", "_mUnknown_ComputePlatform")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ComputePlatform;
        private bool _mUnknown_ComputePlatform;
        public string? ComputePlatform
        {
            get
            {
                if (!_mUnknown_ComputePlatform) return _mValue_ComputePlatform;
                throw new UndeferrableValueException("Value 'DeploymentConfig.ComputePlatform' is not present");
            }
        }

        /// <summary>
        /// The AWS Assigned deployment config id
        /// </summary>
        [PolicyResourceProperty("deploymentConfigId", "_mUnknown_DeploymentConfigId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeploymentConfigId;
        private bool _mUnknown_DeploymentConfigId;
        public string? DeploymentConfigId
        {
            get
            {
                if (!_mUnknown_DeploymentConfigId) return _mValue_DeploymentConfigId;
                throw new UndeferrableValueException("Value 'DeploymentConfig.DeploymentConfigId' is not present");
            }
        }

        /// <summary>
        /// The name of the deployment config.
        /// </summary>
        [PolicyResourceProperty("deploymentConfigName", "_mUnknown_DeploymentConfigName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeploymentConfigName;
        private bool _mUnknown_DeploymentConfigName;
        public string? DeploymentConfigName
        {
            get
            {
                if (!_mUnknown_DeploymentConfigName) return _mValue_DeploymentConfigName;
                throw new UndeferrableValueException("Value 'DeploymentConfig.DeploymentConfigName' is not present");
            }
        }

        /// <summary>
        /// A minimum_healthy_hosts block. Required for `Server` compute platform. Minimum Healthy Hosts are documented below.
        /// </summary>
        [PolicyResourceProperty("minimumHealthyHosts", "_mUnknown_MinimumHealthyHosts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DeploymentConfigMinimumHealthyHosts? _mValue_MinimumHealthyHosts;
        private bool _mUnknown_MinimumHealthyHosts;
        public Outputs.DeploymentConfigMinimumHealthyHosts? MinimumHealthyHosts
        {
            get
            {
                if (!_mUnknown_MinimumHealthyHosts) return _mValue_MinimumHealthyHosts;
                throw new UndeferrableValueException("Value 'DeploymentConfig.MinimumHealthyHosts' is not present");
            }
        }

        /// <summary>
        /// A traffic_routing_config block. Traffic Routing Config is documented below.
        /// </summary>
        [PolicyResourceProperty("trafficRoutingConfig", "_mUnknown_TrafficRoutingConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DeploymentConfigTrafficRoutingConfig? _mValue_TrafficRoutingConfig;
        private bool _mUnknown_TrafficRoutingConfig;
        public Outputs.DeploymentConfigTrafficRoutingConfig? TrafficRoutingConfig
        {
            get
            {
                if (!_mUnknown_TrafficRoutingConfig) return _mValue_TrafficRoutingConfig;
                throw new UndeferrableValueException("Value 'DeploymentConfig.TrafficRoutingConfig' is not present");
            }
        }

        /// <summary>
        /// A zonal_config block. Zonal Config is documented below.
        /// </summary>
        [PolicyResourceProperty("zonalConfig", "_mUnknown_ZonalConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DeploymentConfigZonalConfig? _mValue_ZonalConfig;
        private bool _mUnknown_ZonalConfig;
        public Outputs.DeploymentConfigZonalConfig? ZonalConfig
        {
            get
            {
                if (!_mUnknown_ZonalConfig) return _mValue_ZonalConfig;
                throw new UndeferrableValueException("Value 'DeploymentConfig.ZonalConfig' is not present");
            }
        }
    }

    [PolicyResourceType("aws:codedeploy/deploymentConfig:DeploymentConfig")]
    public sealed class DeploymentConfigArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
        /// </summary>
        [PolicyResourceProperty("computePlatform", "_mUnknown_ComputePlatform")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ComputePlatform;
        private bool _mUnknown_ComputePlatform;
        public string? ComputePlatform
        {
            get
            {
                if (!_mUnknown_ComputePlatform) return _mValue_ComputePlatform;
                throw new UndeferrableValueException("Value 'DeploymentConfigArgs.ComputePlatform' is not present");
            }
        }

        /// <summary>
        /// The name of the deployment config.
        /// </summary>
        [PolicyResourceProperty("deploymentConfigName", "_mUnknown_DeploymentConfigName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeploymentConfigName;
        private bool _mUnknown_DeploymentConfigName;
        public string? DeploymentConfigName
        {
            get
            {
                if (!_mUnknown_DeploymentConfigName) return _mValue_DeploymentConfigName;
                throw new UndeferrableValueException("Value 'DeploymentConfigArgs.DeploymentConfigName' is not present");
            }
        }

        /// <summary>
        /// A minimum_healthy_hosts block. Required for `Server` compute platform. Minimum Healthy Hosts are documented below.
        /// </summary>
        [PolicyResourceProperty("minimumHealthyHosts", "_mUnknown_MinimumHealthyHosts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DeploymentConfigMinimumHealthyHostsArgs? _mValue_MinimumHealthyHosts;
        private bool _mUnknown_MinimumHealthyHosts;
        public Inputs.DeploymentConfigMinimumHealthyHostsArgs? MinimumHealthyHosts
        {
            get
            {
                if (!_mUnknown_MinimumHealthyHosts) return _mValue_MinimumHealthyHosts;
                throw new UndeferrableValueException("Value 'DeploymentConfigArgs.MinimumHealthyHosts' is not present");
            }
        }

        /// <summary>
        /// A traffic_routing_config block. Traffic Routing Config is documented below.
        /// </summary>
        [PolicyResourceProperty("trafficRoutingConfig", "_mUnknown_TrafficRoutingConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DeploymentConfigTrafficRoutingConfigArgs? _mValue_TrafficRoutingConfig;
        private bool _mUnknown_TrafficRoutingConfig;
        public Inputs.DeploymentConfigTrafficRoutingConfigArgs? TrafficRoutingConfig
        {
            get
            {
                if (!_mUnknown_TrafficRoutingConfig) return _mValue_TrafficRoutingConfig;
                throw new UndeferrableValueException("Value 'DeploymentConfigArgs.TrafficRoutingConfig' is not present");
            }
        }

        /// <summary>
        /// A zonal_config block. Zonal Config is documented below.
        /// </summary>
        [PolicyResourceProperty("zonalConfig", "_mUnknown_ZonalConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DeploymentConfigZonalConfigArgs? _mValue_ZonalConfig;
        private bool _mUnknown_ZonalConfig;
        public Inputs.DeploymentConfigZonalConfigArgs? ZonalConfig
        {
            get
            {
                if (!_mUnknown_ZonalConfig) return _mValue_ZonalConfig;
                throw new UndeferrableValueException("Value 'DeploymentConfigArgs.ZonalConfig' is not present");
            }
        }
    }
}
