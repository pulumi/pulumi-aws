// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeCatalyst
{
    [PolicyResourceType("aws:codecatalyst/devEnvironment:DevEnvironment")]
    public sealed class DevEnvironment : global::Pulumi.PolicyResource
    {
        [Input("alias")]
        public string? Alias;

        /// <summary>
        /// Information about the integrated development environment (IDE) configured for a Dev Environment.
        /// </summary>
        [Input("ides")]
        public DevEnvironmentIdes? Ides;

        /// <summary>
        /// The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
        /// </summary>
        [Input("inactivityTimeoutMinutes")]
        public int? InactivityTimeoutMinutes;

        /// <summary>
        /// The Amazon EC2 instace type to use for the Dev Environment. Valid values include dev.standard1.small,dev.standard1.medium,dev.standard1.large,dev.standard1.xlarge
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType;

        /// <summary>
        /// Information about the amount of storage allocated to the Dev Environment.
        /// </summary>
        [Input("persistentStorage")]
        public DevEnvironmentPersistentStorage? PersistentStorage;

        /// <summary>
        /// The name of the project in the space.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName;

        /// <summary>
        /// The source repository that contains the branch to clone into the Dev Environment.
        /// </summary>
        [Input("repositories")]
        public List<DevEnvironmentRepository>? Repositories;

        /// <summary>
        /// The name of the space.
        /// </summary>
        [Input("spaceName")]
        public string? SpaceName;
    }
}
