// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeCatalyst
{
    [PolicyResourceType("aws:codecatalyst/devEnvironment:DevEnvironment")]
    public sealed class DevEnvironment : global::Pulumi.PolicyResourceOutput
    {
        [PolicyResourceProperty("alias", "_mUnknown_Alias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Alias;
        private bool _mUnknown_Alias;
        public string? Alias
        {
            get
            {
                if (!_mUnknown_Alias) return _mValue_Alias;
                throw new UndeferrableValueException("Value 'DevEnvironment.Alias' is not present");
            }
        }

        /// <summary>
        /// Information about the integrated development environment (IDE) configured for a Dev Environment.
        /// </summary>
        [PolicyResourceProperty("ides", "_mUnknown_Ides")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DevEnvironmentIdes? _mValue_Ides;
        private bool _mUnknown_Ides;
        public Outputs.DevEnvironmentIdes? Ides
        {
            get
            {
                if (!_mUnknown_Ides) return _mValue_Ides;
                throw new UndeferrableValueException("Value 'DevEnvironment.Ides' is not present");
            }
        }

        /// <summary>
        /// The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
        /// </summary>
        [PolicyResourceProperty("inactivityTimeoutMinutes", "_mUnknown_InactivityTimeoutMinutes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_InactivityTimeoutMinutes;
        private bool _mUnknown_InactivityTimeoutMinutes;
        public int? InactivityTimeoutMinutes
        {
            get
            {
                if (!_mUnknown_InactivityTimeoutMinutes) return _mValue_InactivityTimeoutMinutes;
                throw new UndeferrableValueException("Value 'DevEnvironment.InactivityTimeoutMinutes' is not present");
            }
        }

        /// <summary>
        /// The Amazon EC2 instace type to use for the Dev Environment. Valid values include dev.standard1.small,dev.standard1.medium,dev.standard1.large,dev.standard1.xlarge
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("instanceType", "_mUnknown_InstanceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceType;
        private bool _mUnknown_InstanceType;
        public string? InstanceType
        {
            get
            {
                if (!_mUnknown_InstanceType) return _mValue_InstanceType;
                throw new UndeferrableValueException("Value 'DevEnvironment.InstanceType' is not present");
            }
        }

        /// <summary>
        /// Information about the amount of storage allocated to the Dev Environment.
        /// </summary>
        [PolicyResourceProperty("persistentStorage", "_mUnknown_PersistentStorage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DevEnvironmentPersistentStorage? _mValue_PersistentStorage;
        private bool _mUnknown_PersistentStorage;
        public Outputs.DevEnvironmentPersistentStorage? PersistentStorage
        {
            get
            {
                if (!_mUnknown_PersistentStorage) return _mValue_PersistentStorage;
                throw new UndeferrableValueException("Value 'DevEnvironment.PersistentStorage' is not present");
            }
        }

        /// <summary>
        /// The name of the project in the space.
        /// </summary>
        [PolicyResourceProperty("projectName", "_mUnknown_ProjectName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProjectName;
        private bool _mUnknown_ProjectName;
        public string? ProjectName
        {
            get
            {
                if (!_mUnknown_ProjectName) return _mValue_ProjectName;
                throw new UndeferrableValueException("Value 'DevEnvironment.ProjectName' is not present");
            }
        }

        /// <summary>
        /// The source repository that contains the branch to clone into the Dev Environment.
        /// </summary>
        [PolicyResourceProperty("repositories", "_mUnknown_Repositories")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.DevEnvironmentRepository>? _mValue_Repositories;
        private bool _mUnknown_Repositories;
        public List<Outputs.DevEnvironmentRepository>? Repositories
        {
            get
            {
                if (!_mUnknown_Repositories) return _mValue_Repositories;
                throw new UndeferrableValueException("Value 'DevEnvironment.Repositories' is not present");
            }
        }

        /// <summary>
        /// The name of the space.
        /// </summary>
        [PolicyResourceProperty("spaceName", "_mUnknown_SpaceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SpaceName;
        private bool _mUnknown_SpaceName;
        public string? SpaceName
        {
            get
            {
                if (!_mUnknown_SpaceName) return _mValue_SpaceName;
                throw new UndeferrableValueException("Value 'DevEnvironment.SpaceName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:codecatalyst/devEnvironment:DevEnvironment")]
    public sealed class DevEnvironmentArgs : global::Pulumi.PolicyResourceInput
    {
        [PolicyResourceProperty("alias", "_mUnknown_Alias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Alias;
        private bool _mUnknown_Alias;
        public string? Alias
        {
            get
            {
                if (!_mUnknown_Alias) return _mValue_Alias;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.Alias' is not present");
            }
        }

        /// <summary>
        /// Information about the integrated development environment (IDE) configured for a Dev Environment.
        /// </summary>
        [PolicyResourceProperty("ides", "_mUnknown_Ides")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DevEnvironmentIdesArgs? _mValue_Ides;
        private bool _mUnknown_Ides;
        public Inputs.DevEnvironmentIdesArgs? Ides
        {
            get
            {
                if (!_mUnknown_Ides) return _mValue_Ides;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.Ides' is not present");
            }
        }

        /// <summary>
        /// The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
        /// </summary>
        [PolicyResourceProperty("inactivityTimeoutMinutes", "_mUnknown_InactivityTimeoutMinutes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_InactivityTimeoutMinutes;
        private bool _mUnknown_InactivityTimeoutMinutes;
        public int? InactivityTimeoutMinutes
        {
            get
            {
                if (!_mUnknown_InactivityTimeoutMinutes) return _mValue_InactivityTimeoutMinutes;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.InactivityTimeoutMinutes' is not present");
            }
        }

        /// <summary>
        /// The Amazon EC2 instace type to use for the Dev Environment. Valid values include dev.standard1.small,dev.standard1.medium,dev.standard1.large,dev.standard1.xlarge
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("instanceType", "_mUnknown_InstanceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceType;
        private bool _mUnknown_InstanceType;
        public string? InstanceType
        {
            get
            {
                if (!_mUnknown_InstanceType) return _mValue_InstanceType;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.InstanceType' is not present");
            }
        }

        /// <summary>
        /// Information about the amount of storage allocated to the Dev Environment.
        /// </summary>
        [PolicyResourceProperty("persistentStorage", "_mUnknown_PersistentStorage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DevEnvironmentPersistentStorageArgs? _mValue_PersistentStorage;
        private bool _mUnknown_PersistentStorage;
        public Inputs.DevEnvironmentPersistentStorageArgs? PersistentStorage
        {
            get
            {
                if (!_mUnknown_PersistentStorage) return _mValue_PersistentStorage;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.PersistentStorage' is not present");
            }
        }

        /// <summary>
        /// The name of the project in the space.
        /// </summary>
        [PolicyResourceProperty("projectName", "_mUnknown_ProjectName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProjectName;
        private bool _mUnknown_ProjectName;
        public string? ProjectName
        {
            get
            {
                if (!_mUnknown_ProjectName) return _mValue_ProjectName;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.ProjectName' is not present");
            }
        }

        /// <summary>
        /// The source repository that contains the branch to clone into the Dev Environment.
        /// </summary>
        [PolicyResourceProperty("repositories", "_mUnknown_Repositories")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.DevEnvironmentRepositoryArgs>? _mValue_Repositories;
        private bool _mUnknown_Repositories;
        public List<Inputs.DevEnvironmentRepositoryArgs>? Repositories
        {
            get
            {
                if (!_mUnknown_Repositories) return _mValue_Repositories;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.Repositories' is not present");
            }
        }

        /// <summary>
        /// The name of the space.
        /// </summary>
        [PolicyResourceProperty("spaceName", "_mUnknown_SpaceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SpaceName;
        private bool _mUnknown_SpaceName;
        public string? SpaceName
        {
            get
            {
                if (!_mUnknown_SpaceName) return _mValue_SpaceName;
                throw new UndeferrableValueException("Value 'DevEnvironmentArgs.SpaceName' is not present");
            }
        }
    }
}
