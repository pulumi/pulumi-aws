// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.TimestreamQuery.Inputs
{
    public sealed class ScheduledQueryTargetConfigurationTimestreamConfigurationArgs
    {
        /// <summary>
        /// Name of Timestream database to which the query result will be written.
        /// </summary>
        [Input("databaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDatabaseName;

        public string? DatabaseName => _mDatabaseName.GetValue("databaseName");

        /// <summary>
        /// Configuration block for mapping of column(s) from the query result to the dimension in the destination table. See below.
        /// </summary>
        [Input("dimensionMappings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs>> _mDimensionMappings;

        public List<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs>? DimensionMappings => _mDimensionMappings.GetValue("dimensionMappings");

        /// <summary>
        /// Name of the measure column.
        /// </summary>
        [Input("measureNameColumn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mMeasureNameColumn;

        public string? MeasureNameColumn => _mMeasureNameColumn.GetValue("measureNameColumn");

        /// <summary>
        /// Configuration block for how to map measures to multi-measure records. See below.
        /// </summary>
        [Input("mixedMeasureMappings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs>> _mMixedMeasureMappings;

        public List<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs>? MixedMeasureMappings => _mMixedMeasureMappings.GetValue("mixedMeasureMappings");

        /// <summary>
        /// Configuration block for multi-measure mappings. Only one of `mixed_measure_mappings` or `multi_measure_mappings` can be provided. `multi_measure_mappings` can be used to ingest data as multi measures in the derived table. See below.
        /// </summary>
        [Input("multiMeasureMappings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs> _mMultiMeasureMappings;

        public Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs? MultiMeasureMappings => _mMultiMeasureMappings.GetValue("multiMeasureMappings");

        /// <summary>
        /// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
        /// </summary>
        [Input("tableName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mTableName;

        public string? TableName => _mTableName.GetValue("tableName");

        /// <summary>
        /// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
        /// </summary>
        [Input("timeColumn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mTimeColumn;

        public string? TimeColumn => _mTimeColumn.GetValue("timeColumn");
    }
}
