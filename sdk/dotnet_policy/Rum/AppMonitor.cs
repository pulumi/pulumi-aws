// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rum
{
    [PolicyResourceType("aws:rum/appMonitor:AppMonitor")]
    public sealed class AppMonitor : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// configuration data for the app monitor. See app_monitor_configuration below.
        /// </summary>
        [Input("appMonitorConfiguration")]
        public AppMonitorAppMonitorConfiguration? AppMonitorConfiguration;

        /// <summary>
        /// The unique ID of the app monitor. Useful for JS templates.
        /// </summary>
        [Input("appMonitorId")]
        public string? AppMonitorId;

        /// <summary>
        /// The Amazon Resource Name (ARN) specifying the app monitor.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Specifies whether this app monitor allows the web client to define and send custom events. If you omit this parameter, custom events are `DISABLED`. See custom_events below.
        /// </summary>
        [Input("customEvents")]
        public AppMonitorCustomEvents? CustomEvents;

        /// <summary>
        /// Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter  specifies whether RUM sends a copy of this telemetry data to Amazon CloudWatch Logs in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur Amazon CloudWatch Logs charges. Default value is `false`.
        /// </summary>
        [Input("cwLogEnabled")]
        public bool? CwLogEnabled;

        /// <summary>
        /// The name of the log group where the copies are stored.
        /// </summary>
        [Input("cwLogGroup")]
        public string? CwLogGroup;

        /// <summary>
        /// The top-level internet domain name for which your application has administrative authority.
        /// </summary>
        [Input("domain")]
        public string? Domain;

        /// <summary>
        /// The name of the log stream.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
