// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cognito
{
    [PolicyResourceType("aws:cognito/managedUserPoolClient:ManagedUserPoolClient")]
    public sealed class ManagedUserPoolClient : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
        /// </summary>
        [PolicyResourceProperty("accessTokenValidity", "_mUnknown_AccessTokenValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AccessTokenValidity;
        private bool _mUnknown_AccessTokenValidity;
        public int? AccessTokenValidity
        {
            get
            {
                if (!_mUnknown_AccessTokenValidity) return _mValue_AccessTokenValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.AccessTokenValidity' is not present");
            }
        }

        /// <summary>
        /// List of allowed OAuth flows, including `code`, `implicit`, and `client_credentials`. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("allowedOauthFlows", "_mUnknown_AllowedOauthFlows")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedOauthFlows;
        private bool _mUnknown_AllowedOauthFlows;
        public List<string>? AllowedOauthFlows
        {
            get
            {
                if (!_mUnknown_AllowedOauthFlows) return _mValue_AllowedOauthFlows;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.AllowedOauthFlows' is not present");
            }
        }

        /// <summary>
        /// Whether the client is allowed to use OAuth 2.0 features. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure the following arguments: `callback_urls`, `logout_urls`, `allowed_oauth_scopes` and `allowed_oauth_flows`.
        /// </summary>
        [PolicyResourceProperty("allowedOauthFlowsUserPoolClient", "_mUnknown_AllowedOauthFlowsUserPoolClient")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllowedOauthFlowsUserPoolClient;
        private bool _mUnknown_AllowedOauthFlowsUserPoolClient;
        public bool? AllowedOauthFlowsUserPoolClient
        {
            get
            {
                if (!_mUnknown_AllowedOauthFlowsUserPoolClient) return _mValue_AllowedOauthFlowsUserPoolClient;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.AllowedOauthFlowsUserPoolClient' is not present");
            }
        }

        /// <summary>
        /// List of allowed OAuth scopes, including `phone`, `email`, `openid`, `profile`, and `aws.cognito.signin.user.admin`. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("allowedOauthScopes", "_mUnknown_AllowedOauthScopes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedOauthScopes;
        private bool _mUnknown_AllowedOauthScopes;
        public List<string>? AllowedOauthScopes
        {
            get
            {
                if (!_mUnknown_AllowedOauthScopes) return _mValue_AllowedOauthScopes;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.AllowedOauthScopes' is not present");
            }
        }

        /// <summary>
        /// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
        /// </summary>
        [PolicyResourceProperty("analyticsConfiguration", "_mUnknown_AnalyticsConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ManagedUserPoolClientAnalyticsConfiguration? _mValue_AnalyticsConfiguration;
        private bool _mUnknown_AnalyticsConfiguration;
        public Outputs.ManagedUserPoolClientAnalyticsConfiguration? AnalyticsConfiguration
        {
            get
            {
                if (!_mUnknown_AnalyticsConfiguration) return _mValue_AnalyticsConfiguration;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.AnalyticsConfiguration' is not present");
            }
        }

        /// <summary>
        /// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `auth_session_validity` are between `3` and `15`, with a default value of `3`.
        /// </summary>
        [PolicyResourceProperty("authSessionValidity", "_mUnknown_AuthSessionValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AuthSessionValidity;
        private bool _mUnknown_AuthSessionValidity;
        public int? AuthSessionValidity
        {
            get
            {
                if (!_mUnknown_AuthSessionValidity) return _mValue_AuthSessionValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.AuthSessionValidity' is not present");
            }
        }

        /// <summary>
        /// List of allowed callback URLs for the identity providers. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("callbackUrls", "_mUnknown_CallbackUrls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_CallbackUrls;
        private bool _mUnknown_CallbackUrls;
        public List<string>? CallbackUrls
        {
            get
            {
                if (!_mUnknown_CallbackUrls) return _mValue_CallbackUrls;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.CallbackUrls' is not present");
            }
        }

        /// <summary>
        /// Client secret of the user pool client.
        /// </summary>
        [PolicyResourceProperty("clientSecret", "_mUnknown_ClientSecret")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClientSecret;
        private bool _mUnknown_ClientSecret;
        public string? ClientSecret
        {
            get
            {
                if (!_mUnknown_ClientSecret) return _mValue_ClientSecret;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.ClientSecret' is not present");
            }
        }

        /// <summary>
        /// Default redirect URI and must be included in the list of callback URLs.
        /// </summary>
        [PolicyResourceProperty("defaultRedirectUri", "_mUnknown_DefaultRedirectUri")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultRedirectUri;
        private bool _mUnknown_DefaultRedirectUri;
        public string? DefaultRedirectUri
        {
            get
            {
                if (!_mUnknown_DefaultRedirectUri) return _mValue_DefaultRedirectUri;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.DefaultRedirectUri' is not present");
            }
        }

        /// <summary>
        /// Enables the propagation of additional user context data.
        /// </summary>
        [PolicyResourceProperty("enablePropagateAdditionalUserContextData", "_mUnknown_EnablePropagateAdditionalUserContextData")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnablePropagateAdditionalUserContextData;
        private bool _mUnknown_EnablePropagateAdditionalUserContextData;
        public bool? EnablePropagateAdditionalUserContextData
        {
            get
            {
                if (!_mUnknown_EnablePropagateAdditionalUserContextData) return _mValue_EnablePropagateAdditionalUserContextData;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.EnablePropagateAdditionalUserContextData' is not present");
            }
        }

        /// <summary>
        /// Enables or disables token revocation.
        /// </summary>
        [PolicyResourceProperty("enableTokenRevocation", "_mUnknown_EnableTokenRevocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableTokenRevocation;
        private bool _mUnknown_EnableTokenRevocation;
        public bool? EnableTokenRevocation
        {
            get
            {
                if (!_mUnknown_EnableTokenRevocation) return _mValue_EnableTokenRevocation;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.EnableTokenRevocation' is not present");
            }
        }

        /// <summary>
        /// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
        /// </summary>
        [PolicyResourceProperty("explicitAuthFlows", "_mUnknown_ExplicitAuthFlows")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ExplicitAuthFlows;
        private bool _mUnknown_ExplicitAuthFlows;
        public List<string>? ExplicitAuthFlows
        {
            get
            {
                if (!_mUnknown_ExplicitAuthFlows) return _mValue_ExplicitAuthFlows;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.ExplicitAuthFlows' is not present");
            }
        }

        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
        /// </summary>
        [PolicyResourceProperty("idTokenValidity", "_mUnknown_IdTokenValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_IdTokenValidity;
        private bool _mUnknown_IdTokenValidity;
        public int? IdTokenValidity
        {
            get
            {
                if (!_mUnknown_IdTokenValidity) return _mValue_IdTokenValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.IdTokenValidity' is not present");
            }
        }

        /// <summary>
        /// List of allowed logout URLs for the identity providers. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("logoutUrls", "_mUnknown_LogoutUrls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_LogoutUrls;
        private bool _mUnknown_LogoutUrls;
        public List<string>? LogoutUrls
        {
            get
            {
                if (!_mUnknown_LogoutUrls) return _mValue_LogoutUrls;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.LogoutUrls' is not present");
            }
        }

        /// <summary>
        /// Name of the user pool client.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.Name' is not present");
            }
        }

        /// <summary>
        /// Regular expression that matches the name of the existing User Pool Client to be managed. It must only match one User Pool Client.
        /// </summary>
        [PolicyResourceProperty("namePattern", "_mUnknown_NamePattern")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePattern;
        private bool _mUnknown_NamePattern;
        public string? NamePattern
        {
            get
            {
                if (!_mUnknown_NamePattern) return _mValue_NamePattern;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.NamePattern' is not present");
            }
        }

        /// <summary>
        /// String that matches the beginning of the name of the  existing User Pool Client to be managed. It must match only one User Pool Client.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
        /// </summary>
        [PolicyResourceProperty("preventUserExistenceErrors", "_mUnknown_PreventUserExistenceErrors")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PreventUserExistenceErrors;
        private bool _mUnknown_PreventUserExistenceErrors;
        public string? PreventUserExistenceErrors
        {
            get
            {
                if (!_mUnknown_PreventUserExistenceErrors) return _mValue_PreventUserExistenceErrors;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.PreventUserExistenceErrors' is not present");
            }
        }

        /// <summary>
        /// List of user pool attributes that the application client can read from.
        /// </summary>
        [PolicyResourceProperty("readAttributes", "_mUnknown_ReadAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ReadAttributes;
        private bool _mUnknown_ReadAttributes;
        public List<string>? ReadAttributes
        {
            get
            {
                if (!_mUnknown_ReadAttributes) return _mValue_ReadAttributes;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.ReadAttributes' is not present");
            }
        }

        /// <summary>
        /// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
        /// </summary>
        [PolicyResourceProperty("refreshTokenValidity", "_mUnknown_RefreshTokenValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RefreshTokenValidity;
        private bool _mUnknown_RefreshTokenValidity;
        public int? RefreshTokenValidity
        {
            get
            {
                if (!_mUnknown_RefreshTokenValidity) return _mValue_RefreshTokenValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.RefreshTokenValidity' is not present");
            }
        }

        /// <summary>
        /// List of provider names for the identity providers that are supported on this client. It uses the `provider_name` attribute of the `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
        /// </summary>
        [PolicyResourceProperty("supportedIdentityProviders", "_mUnknown_SupportedIdentityProviders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SupportedIdentityProviders;
        private bool _mUnknown_SupportedIdentityProviders;
        public List<string>? SupportedIdentityProviders
        {
            get
            {
                if (!_mUnknown_SupportedIdentityProviders) return _mValue_SupportedIdentityProviders;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.SupportedIdentityProviders' is not present");
            }
        }

        /// <summary>
        /// Configuration block for representing the validity times in units. See details below. Detailed below.
        /// </summary>
        [PolicyResourceProperty("tokenValidityUnits", "_mUnknown_TokenValidityUnits")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ManagedUserPoolClientTokenValidityUnits? _mValue_TokenValidityUnits;
        private bool _mUnknown_TokenValidityUnits;
        public Outputs.ManagedUserPoolClientTokenValidityUnits? TokenValidityUnits
        {
            get
            {
                if (!_mUnknown_TokenValidityUnits) return _mValue_TokenValidityUnits;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.TokenValidityUnits' is not present");
            }
        }

        /// <summary>
        /// User pool that the client belongs to.
        /// </summary>
        [PolicyResourceProperty("userPoolId", "_mUnknown_UserPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserPoolId;
        private bool _mUnknown_UserPoolId;
        public string? UserPoolId
        {
            get
            {
                if (!_mUnknown_UserPoolId) return _mValue_UserPoolId;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.UserPoolId' is not present");
            }
        }

        /// <summary>
        /// List of user pool attributes that the application client can write to.
        /// </summary>
        [PolicyResourceProperty("writeAttributes", "_mUnknown_WriteAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_WriteAttributes;
        private bool _mUnknown_WriteAttributes;
        public List<string>? WriteAttributes
        {
            get
            {
                if (!_mUnknown_WriteAttributes) return _mValue_WriteAttributes;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClient.WriteAttributes' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cognito/managedUserPoolClient:ManagedUserPoolClient")]
    public sealed class ManagedUserPoolClientArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
        /// </summary>
        [PolicyResourceProperty("accessTokenValidity", "_mUnknown_AccessTokenValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AccessTokenValidity;
        private bool _mUnknown_AccessTokenValidity;
        public int? AccessTokenValidity
        {
            get
            {
                if (!_mUnknown_AccessTokenValidity) return _mValue_AccessTokenValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.AccessTokenValidity' is not present");
            }
        }

        /// <summary>
        /// List of allowed OAuth flows, including `code`, `implicit`, and `client_credentials`. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("allowedOauthFlows", "_mUnknown_AllowedOauthFlows")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedOauthFlows;
        private bool _mUnknown_AllowedOauthFlows;
        public List<string>? AllowedOauthFlows
        {
            get
            {
                if (!_mUnknown_AllowedOauthFlows) return _mValue_AllowedOauthFlows;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.AllowedOauthFlows' is not present");
            }
        }

        /// <summary>
        /// Whether the client is allowed to use OAuth 2.0 features. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure the following arguments: `callback_urls`, `logout_urls`, `allowed_oauth_scopes` and `allowed_oauth_flows`.
        /// </summary>
        [PolicyResourceProperty("allowedOauthFlowsUserPoolClient", "_mUnknown_AllowedOauthFlowsUserPoolClient")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllowedOauthFlowsUserPoolClient;
        private bool _mUnknown_AllowedOauthFlowsUserPoolClient;
        public bool? AllowedOauthFlowsUserPoolClient
        {
            get
            {
                if (!_mUnknown_AllowedOauthFlowsUserPoolClient) return _mValue_AllowedOauthFlowsUserPoolClient;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.AllowedOauthFlowsUserPoolClient' is not present");
            }
        }

        /// <summary>
        /// List of allowed OAuth scopes, including `phone`, `email`, `openid`, `profile`, and `aws.cognito.signin.user.admin`. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("allowedOauthScopes", "_mUnknown_AllowedOauthScopes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedOauthScopes;
        private bool _mUnknown_AllowedOauthScopes;
        public List<string>? AllowedOauthScopes
        {
            get
            {
                if (!_mUnknown_AllowedOauthScopes) return _mValue_AllowedOauthScopes;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.AllowedOauthScopes' is not present");
            }
        }

        /// <summary>
        /// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
        /// </summary>
        [PolicyResourceProperty("analyticsConfiguration", "_mUnknown_AnalyticsConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ManagedUserPoolClientAnalyticsConfigurationArgs? _mValue_AnalyticsConfiguration;
        private bool _mUnknown_AnalyticsConfiguration;
        public Inputs.ManagedUserPoolClientAnalyticsConfigurationArgs? AnalyticsConfiguration
        {
            get
            {
                if (!_mUnknown_AnalyticsConfiguration) return _mValue_AnalyticsConfiguration;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.AnalyticsConfiguration' is not present");
            }
        }

        /// <summary>
        /// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `auth_session_validity` are between `3` and `15`, with a default value of `3`.
        /// </summary>
        [PolicyResourceProperty("authSessionValidity", "_mUnknown_AuthSessionValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AuthSessionValidity;
        private bool _mUnknown_AuthSessionValidity;
        public int? AuthSessionValidity
        {
            get
            {
                if (!_mUnknown_AuthSessionValidity) return _mValue_AuthSessionValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.AuthSessionValidity' is not present");
            }
        }

        /// <summary>
        /// List of allowed callback URLs for the identity providers. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("callbackUrls", "_mUnknown_CallbackUrls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_CallbackUrls;
        private bool _mUnknown_CallbackUrls;
        public List<string>? CallbackUrls
        {
            get
            {
                if (!_mUnknown_CallbackUrls) return _mValue_CallbackUrls;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.CallbackUrls' is not present");
            }
        }

        /// <summary>
        /// Default redirect URI and must be included in the list of callback URLs.
        /// </summary>
        [PolicyResourceProperty("defaultRedirectUri", "_mUnknown_DefaultRedirectUri")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultRedirectUri;
        private bool _mUnknown_DefaultRedirectUri;
        public string? DefaultRedirectUri
        {
            get
            {
                if (!_mUnknown_DefaultRedirectUri) return _mValue_DefaultRedirectUri;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.DefaultRedirectUri' is not present");
            }
        }

        /// <summary>
        /// Enables the propagation of additional user context data.
        /// </summary>
        [PolicyResourceProperty("enablePropagateAdditionalUserContextData", "_mUnknown_EnablePropagateAdditionalUserContextData")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnablePropagateAdditionalUserContextData;
        private bool _mUnknown_EnablePropagateAdditionalUserContextData;
        public bool? EnablePropagateAdditionalUserContextData
        {
            get
            {
                if (!_mUnknown_EnablePropagateAdditionalUserContextData) return _mValue_EnablePropagateAdditionalUserContextData;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.EnablePropagateAdditionalUserContextData' is not present");
            }
        }

        /// <summary>
        /// Enables or disables token revocation.
        /// </summary>
        [PolicyResourceProperty("enableTokenRevocation", "_mUnknown_EnableTokenRevocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableTokenRevocation;
        private bool _mUnknown_EnableTokenRevocation;
        public bool? EnableTokenRevocation
        {
            get
            {
                if (!_mUnknown_EnableTokenRevocation) return _mValue_EnableTokenRevocation;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.EnableTokenRevocation' is not present");
            }
        }

        /// <summary>
        /// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
        /// </summary>
        [PolicyResourceProperty("explicitAuthFlows", "_mUnknown_ExplicitAuthFlows")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ExplicitAuthFlows;
        private bool _mUnknown_ExplicitAuthFlows;
        public List<string>? ExplicitAuthFlows
        {
            get
            {
                if (!_mUnknown_ExplicitAuthFlows) return _mValue_ExplicitAuthFlows;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.ExplicitAuthFlows' is not present");
            }
        }

        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
        /// </summary>
        [PolicyResourceProperty("idTokenValidity", "_mUnknown_IdTokenValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_IdTokenValidity;
        private bool _mUnknown_IdTokenValidity;
        public int? IdTokenValidity
        {
            get
            {
                if (!_mUnknown_IdTokenValidity) return _mValue_IdTokenValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.IdTokenValidity' is not present");
            }
        }

        /// <summary>
        /// List of allowed logout URLs for the identity providers. `allowed_oauth_flows_user_pool_client` must be set to `true` before you can configure this option.
        /// </summary>
        [PolicyResourceProperty("logoutUrls", "_mUnknown_LogoutUrls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_LogoutUrls;
        private bool _mUnknown_LogoutUrls;
        public List<string>? LogoutUrls
        {
            get
            {
                if (!_mUnknown_LogoutUrls) return _mValue_LogoutUrls;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.LogoutUrls' is not present");
            }
        }

        /// <summary>
        /// Regular expression that matches the name of the existing User Pool Client to be managed. It must only match one User Pool Client.
        /// </summary>
        [PolicyResourceProperty("namePattern", "_mUnknown_NamePattern")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePattern;
        private bool _mUnknown_NamePattern;
        public string? NamePattern
        {
            get
            {
                if (!_mUnknown_NamePattern) return _mValue_NamePattern;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.NamePattern' is not present");
            }
        }

        /// <summary>
        /// String that matches the beginning of the name of the  existing User Pool Client to be managed. It must match only one User Pool Client.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
        /// </summary>
        [PolicyResourceProperty("preventUserExistenceErrors", "_mUnknown_PreventUserExistenceErrors")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PreventUserExistenceErrors;
        private bool _mUnknown_PreventUserExistenceErrors;
        public string? PreventUserExistenceErrors
        {
            get
            {
                if (!_mUnknown_PreventUserExistenceErrors) return _mValue_PreventUserExistenceErrors;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.PreventUserExistenceErrors' is not present");
            }
        }

        /// <summary>
        /// List of user pool attributes that the application client can read from.
        /// </summary>
        [PolicyResourceProperty("readAttributes", "_mUnknown_ReadAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ReadAttributes;
        private bool _mUnknown_ReadAttributes;
        public List<string>? ReadAttributes
        {
            get
            {
                if (!_mUnknown_ReadAttributes) return _mValue_ReadAttributes;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.ReadAttributes' is not present");
            }
        }

        /// <summary>
        /// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
        /// </summary>
        [PolicyResourceProperty("refreshTokenValidity", "_mUnknown_RefreshTokenValidity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RefreshTokenValidity;
        private bool _mUnknown_RefreshTokenValidity;
        public int? RefreshTokenValidity
        {
            get
            {
                if (!_mUnknown_RefreshTokenValidity) return _mValue_RefreshTokenValidity;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.RefreshTokenValidity' is not present");
            }
        }

        /// <summary>
        /// List of provider names for the identity providers that are supported on this client. It uses the `provider_name` attribute of the `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
        /// </summary>
        [PolicyResourceProperty("supportedIdentityProviders", "_mUnknown_SupportedIdentityProviders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SupportedIdentityProviders;
        private bool _mUnknown_SupportedIdentityProviders;
        public List<string>? SupportedIdentityProviders
        {
            get
            {
                if (!_mUnknown_SupportedIdentityProviders) return _mValue_SupportedIdentityProviders;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.SupportedIdentityProviders' is not present");
            }
        }

        /// <summary>
        /// Configuration block for representing the validity times in units. See details below. Detailed below.
        /// </summary>
        [PolicyResourceProperty("tokenValidityUnits", "_mUnknown_TokenValidityUnits")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ManagedUserPoolClientTokenValidityUnitsArgs? _mValue_TokenValidityUnits;
        private bool _mUnknown_TokenValidityUnits;
        public Inputs.ManagedUserPoolClientTokenValidityUnitsArgs? TokenValidityUnits
        {
            get
            {
                if (!_mUnknown_TokenValidityUnits) return _mValue_TokenValidityUnits;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.TokenValidityUnits' is not present");
            }
        }

        /// <summary>
        /// User pool that the client belongs to.
        /// </summary>
        [PolicyResourceProperty("userPoolId", "_mUnknown_UserPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserPoolId;
        private bool _mUnknown_UserPoolId;
        public string? UserPoolId
        {
            get
            {
                if (!_mUnknown_UserPoolId) return _mValue_UserPoolId;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.UserPoolId' is not present");
            }
        }

        /// <summary>
        /// List of user pool attributes that the application client can write to.
        /// </summary>
        [PolicyResourceProperty("writeAttributes", "_mUnknown_WriteAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_WriteAttributes;
        private bool _mUnknown_WriteAttributes;
        public List<string>? WriteAttributes
        {
            get
            {
                if (!_mUnknown_WriteAttributes) return _mValue_WriteAttributes;
                throw new UndeferrableValueException("Value 'ManagedUserPoolClientArgs.WriteAttributes' is not present");
            }
        }
    }
}
