// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cognito
{
    [PolicyResourceType("aws:cognito/userPool:UserPool")]
    public sealed class UserPool : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Configuration block to define which verified available method a user can use to recover their forgotten password. Detailed below.
        /// </summary>
        [Input("accountRecoverySetting")]
        public UserPoolAccountRecoverySetting? AccountRecoverySetting;

        /// <summary>
        /// Configuration block for creating a new user profile. Detailed below.
        /// </summary>
        [Input("adminCreateUserConfig")]
        public UserPoolAdminCreateUserConfig? AdminCreateUserConfig;

        /// <summary>
        /// Attributes supported as an alias for this user pool. Valid values: `phone_number`, `email`, or `preferred_username`. Conflicts with `username_attributes`.
        /// </summary>
        [Input("aliasAttributes")]
        public List<string>? AliasAttributes;

        /// <summary>
        /// ARN of the user pool.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Attributes to be auto-verified. Valid values: `email`, `phone_number`.
        /// </summary>
        [Input("autoVerifiedAttributes")]
        public List<string>? AutoVerifiedAttributes;

        /// <summary>
        /// Date the user pool was created.
        /// </summary>
        [Input("creationDate")]
        public string? CreationDate;

        /// <summary>
        /// A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. For example: `auth.example.com`.
        /// </summary>
        [Input("customDomain")]
        public string? CustomDomain;

        /// <summary>
        /// When active, DeletionProtection prevents accidental deletion of your user pool. Before you can delete a user pool that you have protected against deletion, you must deactivate this feature. Valid values are `ACTIVE` and `INACTIVE`, Default value is `INACTIVE`.
        /// </summary>
        [Input("deletionProtection")]
        public string? DeletionProtection;

        /// <summary>
        /// Configuration block for the user pool's device tracking. Detailed below.
        /// </summary>
        [Input("deviceConfiguration")]
        public UserPoolDeviceConfiguration? DeviceConfiguration;

        /// <summary>
        /// Holds the domain prefix if the user pool has a domain associated with it.
        /// </summary>
        [Input("domain")]
        public string? Domain;

        /// <summary>
        /// Configuration block for configuring email. Detailed below.
        /// </summary>
        [Input("emailConfiguration")]
        public UserPoolEmailConfiguration? EmailConfiguration;

        /// <summary>
        /// Configuration block for configuring email Multi-Factor Authentication (MFA); requires at least 2 `account_recovery_setting` entries; requires an `email_configuration` configuration block. Detailed below.
        /// </summary>
        [Input("emailMfaConfiguration")]
        public UserPoolEmailMfaConfiguration? EmailMfaConfiguration;

        /// <summary>
        /// String representing the email verification message. Conflicts with `verification_message_template` configuration block `email_message` argument.
        /// </summary>
        [Input("emailVerificationMessage")]
        public string? EmailVerificationMessage;

        /// <summary>
        /// String representing the email verification subject. Conflicts with `verification_message_template` configuration block `email_subject` argument.
        /// </summary>
        [Input("emailVerificationSubject")]
        public string? EmailVerificationSubject;

        /// <summary>
        /// Endpoint name of the user pool. Example format: `cognito-idp.REGION.amazonaws.com/xxxx_yyyyy`
        /// </summary>
        [Input("endpoint")]
        public string? Endpoint;

        /// <summary>
        /// A number estimating the size of the user pool.
        /// </summary>
        [Input("estimatedNumberOfUsers")]
        public int? EstimatedNumberOfUsers;

        /// <summary>
        /// Configuration block for the AWS Lambda triggers associated with the user pool. Detailed below.
        /// </summary>
        [Input("lambdaConfig")]
        public UserPoolLambdaConfig? LambdaConfig;

        /// <summary>
        /// Date the user pool was last modified.
        /// </summary>
        [Input("lastModifiedDate")]
        public string? LastModifiedDate;

        /// <summary>
        /// Multi-Factor Authentication (MFA) configuration for the User Pool. Defaults of `OFF`. Valid values are `OFF` (MFA Tokens are not required), `ON` (MFA is required for all users to sign in; requires at least one of `sms_configuration` or `software_token_mfa_configuration` to be configured), or `OPTIONAL` (MFA Will be required only for individual users who have MFA Enabled; requires at least one of `sms_configuration` or `software_token_mfa_configuration` to be configured).
        /// </summary>
        [Input("mfaConfiguration")]
        public string? MfaConfiguration;

        /// <summary>
        /// Name of the user pool.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Configuration block for information about the user pool password policy. Detailed below.
        /// </summary>
        [Input("passwordPolicy")]
        public UserPoolPasswordPolicy? PasswordPolicy;

        /// <summary>
        /// Configuration block for the schema attributes of a user pool. Detailed below. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Attributes can be added, but not modified or removed. Maximum of 50 attributes.
        /// </summary>
        [Input("schemas")]
        public List<UserPoolSchema>? Schemas;

        /// <summary>
        /// Configuration block for information about the user pool sign in policy. Detailed below.
        /// </summary>
        [Input("signInPolicy")]
        public UserPoolSignInPolicy? SignInPolicy;

        /// <summary>
        /// String representing the SMS authentication message. The Message must contain the `{####}` placeholder, which will be replaced with the code.
        /// </summary>
        [Input("smsAuthenticationMessage")]
        public string? SmsAuthenticationMessage;

        /// <summary>
        /// Configuration block for Short Message Service (SMS) settings. Detailed below. These settings apply to SMS user verification and SMS Multi-Factor Authentication (MFA). Due to Cognito API restrictions, the SMS configuration cannot be removed without recreating the Cognito User Pool. For user data safety, this resource will ignore the removal of this configuration by disabling drift detection. To force resource recreation after this configuration has been applied, see the `taint` command.
        /// </summary>
        [Input("smsConfiguration")]
        public UserPoolSmsConfiguration? SmsConfiguration;

        /// <summary>
        /// String representing the SMS verification message. Conflicts with `verification_message_template` configuration block `sms_message` argument.
        /// </summary>
        [Input("smsVerificationMessage")]
        public string? SmsVerificationMessage;

        /// <summary>
        /// Configuration block for software token Mult-Factor Authentication (MFA) settings. Detailed below.
        /// </summary>
        [Input("softwareTokenMfaConfiguration")]
        public UserPoolSoftwareTokenMfaConfiguration? SoftwareTokenMfaConfiguration;

        /// <summary>
        /// Map of tags to assign to the User Pool. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Configuration block for user attribute update settings. Detailed below.
        /// </summary>
        [Input("userAttributeUpdateSettings")]
        public UserPoolUserAttributeUpdateSettings? UserAttributeUpdateSettings;

        /// <summary>
        /// Configuration block for user pool add-ons to enable user pool advanced security mode features. Detailed below.
        /// </summary>
        [Input("userPoolAddOns")]
        public UserPoolUserPoolAddOns? UserPoolAddOns;

        /// <summary>
        /// The user pool [feature plan](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-sign-in-feature-plans.html), or tier. Valid values: `LITE`, `ESSENTIALS`, `PLUS`.
        /// </summary>
        [Input("userPoolTier")]
        public string? UserPoolTier;

        /// <summary>
        /// Whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `alias_attributes`.
        /// </summary>
        [Input("usernameAttributes")]
        public List<string>? UsernameAttributes;

        /// <summary>
        /// Configuration block for username configuration. Detailed below.
        /// </summary>
        [Input("usernameConfiguration")]
        public UserPoolUsernameConfiguration? UsernameConfiguration;

        /// <summary>
        /// Configuration block for verification message templates. Detailed below.
        /// </summary>
        [Input("verificationMessageTemplate")]
        public UserPoolVerificationMessageTemplate? VerificationMessageTemplate;

        /// <summary>
        /// Configuration block for web authn configuration. Detailed below.
        /// </summary>
        [Input("webAuthnConfiguration")]
        public UserPoolWebAuthnConfiguration? WebAuthnConfiguration;
    }
}
