// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cognito.Inputs
{
    public sealed class RiskConfigurationCompromisedCredentialsRiskConfigurationArgs
    {
        /// <summary>
        /// The compromised credentials risk configuration actions. See details below.
        /// </summary>
        [PolicyResourceProperty("actions", "_mUnknown_Actions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs? _mValue_Actions;
        private bool _mUnknown_Actions;
        public Inputs.RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs? Actions
        {
            get
            {
                if (!_mUnknown_Actions) return _mValue_Actions;
                throw new UndeferrableValueException("Value 'RiskConfigurationCompromisedCredentialsRiskConfigurationArgs.Actions' is not present");
            }
        }

        /// <summary>
        /// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are `SIGN_IN`, `PASSWORD_CHANGE`, and `SIGN_UP`.
        /// </summary>
        [PolicyResourceProperty("eventFilters", "_mUnknown_EventFilters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_EventFilters;
        private bool _mUnknown_EventFilters;
        public List<string>? EventFilters
        {
            get
            {
                if (!_mUnknown_EventFilters) return _mValue_EventFilters;
                throw new UndeferrableValueException("Value 'RiskConfigurationCompromisedCredentialsRiskConfigurationArgs.EventFilters' is not present");
            }
        }
    }
}
