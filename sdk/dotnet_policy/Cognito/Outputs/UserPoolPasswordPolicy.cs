// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cognito.Outputs
{
    public sealed class UserPoolPasswordPolicy
    {
        /// <summary>
        /// Minimum length of the password policy that you have set.
        /// </summary>
        [Input("minimumLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mMinimumLength;

        public int? MinimumLength => _mMinimumLength.GetValue("minimumLength");

        /// <summary>
        /// Number of previous passwords that you want Amazon Cognito to restrict each user from reusing. Users can't set a password that matches any of number of previous passwords specified by this argument. A value of 0 means that password history is not enforced. Valid values are between 0 and 24.
        /// 
        /// **Note:** This argument requires advanced security features to be active in the user pool.
        /// </summary>
        [Input("passwordHistorySize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mPasswordHistorySize;

        public int? PasswordHistorySize => _mPasswordHistorySize.GetValue("passwordHistorySize");

        /// <summary>
        /// Whether you have required users to use at least one lowercase letter in their password.
        /// </summary>
        [Input("requireLowercase")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mRequireLowercase;

        public bool? RequireLowercase => _mRequireLowercase.GetValue("requireLowercase");

        /// <summary>
        /// Whether you have required users to use at least one number in their password.
        /// </summary>
        [Input("requireNumbers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mRequireNumbers;

        public bool? RequireNumbers => _mRequireNumbers.GetValue("requireNumbers");

        /// <summary>
        /// Whether you have required users to use at least one symbol in their password.
        /// </summary>
        [Input("requireSymbols")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mRequireSymbols;

        public bool? RequireSymbols => _mRequireSymbols.GetValue("requireSymbols");

        /// <summary>
        /// Whether you have required users to use at least one uppercase letter in their password.
        /// </summary>
        [Input("requireUppercase")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mRequireUppercase;

        public bool? RequireUppercase => _mRequireUppercase.GetValue("requireUppercase");

        /// <summary>
        /// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
        /// </summary>
        [Input("temporaryPasswordValidityDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mTemporaryPasswordValidityDays;

        public int? TemporaryPasswordValidityDays => _mTemporaryPasswordValidityDays.GetValue("temporaryPasswordValidityDays");
    }
}
