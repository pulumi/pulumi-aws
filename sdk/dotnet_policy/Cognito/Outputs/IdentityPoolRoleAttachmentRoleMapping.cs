// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cognito.Outputs
{
    public sealed class IdentityPoolRoleAttachmentRoleMapping
    {
        /// <summary>
        /// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
        /// </summary>
        [PolicyResourceProperty("ambiguousRoleResolution", "_mUnknown_AmbiguousRoleResolution")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmbiguousRoleResolution;
        private bool _mUnknown_AmbiguousRoleResolution;
        public string? AmbiguousRoleResolution
        {
            get
            {
                if (!_mUnknown_AmbiguousRoleResolution) return _mValue_AmbiguousRoleResolution;
                throw new UndeferrableValueException("Value 'IdentityPoolRoleAttachmentRoleMapping.AmbiguousRoleResolution' is not present");
            }
        }

        /// <summary>
        /// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on `cognito_identity_providers` set on `aws.cognito.IdentityPool` resource or a `aws.cognito.IdentityProvider` resource.
        /// </summary>
        [PolicyResourceProperty("identityProvider", "_mUnknown_IdentityProvider")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdentityProvider;
        private bool _mUnknown_IdentityProvider;
        public string? IdentityProvider
        {
            get
            {
                if (!_mUnknown_IdentityProvider) return _mValue_IdentityProvider;
                throw new UndeferrableValueException("Value 'IdentityPoolRoleAttachmentRoleMapping.IdentityProvider' is not present");
            }
        }

        /// <summary>
        /// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
        /// </summary>
        [PolicyResourceProperty("mappingRules", "_mUnknown_MappingRules")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.IdentityPoolRoleAttachmentRoleMappingMappingRule>? _mValue_MappingRules;
        private bool _mUnknown_MappingRules;
        public List<Outputs.IdentityPoolRoleAttachmentRoleMappingMappingRule>? MappingRules
        {
            get
            {
                if (!_mUnknown_MappingRules) return _mValue_MappingRules;
                throw new UndeferrableValueException("Value 'IdentityPoolRoleAttachmentRoleMapping.MappingRules' is not present");
            }
        }

        /// <summary>
        /// The role mapping type.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'IdentityPoolRoleAttachmentRoleMapping.Type' is not present");
            }
        }
    }
}
