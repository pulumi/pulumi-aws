// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cognito
{
    [PolicyResourceType("aws:cognito/userPoolDomain:UserPoolDomain")]
    public sealed class UserPoolDomain : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The AWS account ID for the user pool owner.
        /// </summary>
        [PolicyResourceProperty("awsAccountId", "_mUnknown_AwsAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsAccountId;
        private bool _mUnknown_AwsAccountId;
        public string? AwsAccountId
        {
            get
            {
                if (!_mUnknown_AwsAccountId) return _mValue_AwsAccountId;
                throw new UndeferrableValueException("Value 'UserPoolDomain.AwsAccountId' is not present");
            }
        }

        /// <summary>
        /// The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
        /// </summary>
        [PolicyResourceProperty("certificateArn", "_mUnknown_CertificateArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CertificateArn;
        private bool _mUnknown_CertificateArn;
        public string? CertificateArn
        {
            get
            {
                if (!_mUnknown_CertificateArn) return _mValue_CertificateArn;
                throw new UndeferrableValueException("Value 'UserPoolDomain.CertificateArn' is not present");
            }
        }

        /// <summary>
        /// The Amazon CloudFront endpoint (e.g. `dpp0gtxikpq3y.cloudfront.net`) that you use as the target of the alias that you set up with your Domain Name Service (DNS) provider.
        /// </summary>
        [PolicyResourceProperty("cloudfrontDistribution", "_mUnknown_CloudfrontDistribution")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CloudfrontDistribution;
        private bool _mUnknown_CloudfrontDistribution;
        public string? CloudfrontDistribution
        {
            get
            {
                if (!_mUnknown_CloudfrontDistribution) return _mValue_CloudfrontDistribution;
                throw new UndeferrableValueException("Value 'UserPoolDomain.CloudfrontDistribution' is not present");
            }
        }

        /// <summary>
        /// The URL of the CloudFront distribution. This is required to generate the ALIAS `aws.route53.Record`
        /// </summary>
        [PolicyResourceProperty("cloudfrontDistributionArn", "_mUnknown_CloudfrontDistributionArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CloudfrontDistributionArn;
        private bool _mUnknown_CloudfrontDistributionArn;
        public string? CloudfrontDistributionArn
        {
            get
            {
                if (!_mUnknown_CloudfrontDistributionArn) return _mValue_CloudfrontDistributionArn;
                throw new UndeferrableValueException("Value 'UserPoolDomain.CloudfrontDistributionArn' is not present");
            }
        }

        /// <summary>
        /// The Route 53 hosted zone ID of the CloudFront distribution.
        /// </summary>
        [PolicyResourceProperty("cloudfrontDistributionZoneId", "_mUnknown_CloudfrontDistributionZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CloudfrontDistributionZoneId;
        private bool _mUnknown_CloudfrontDistributionZoneId;
        public string? CloudfrontDistributionZoneId
        {
            get
            {
                if (!_mUnknown_CloudfrontDistributionZoneId) return _mValue_CloudfrontDistributionZoneId;
                throw new UndeferrableValueException("Value 'UserPoolDomain.CloudfrontDistributionZoneId' is not present");
            }
        }

        /// <summary>
        /// For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.
        /// </summary>
        [PolicyResourceProperty("domain", "_mUnknown_Domain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Domain;
        private bool _mUnknown_Domain;
        public string? Domain
        {
            get
            {
                if (!_mUnknown_Domain) return _mValue_Domain;
                throw new UndeferrableValueException("Value 'UserPoolDomain.Domain' is not present");
            }
        }

        /// <summary>
        /// The S3 bucket where the static files for this domain are stored.
        /// </summary>
        [PolicyResourceProperty("s3Bucket", "_mUnknown_S3Bucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_S3Bucket;
        private bool _mUnknown_S3Bucket;
        public string? S3Bucket
        {
            get
            {
                if (!_mUnknown_S3Bucket) return _mValue_S3Bucket;
                throw new UndeferrableValueException("Value 'UserPoolDomain.S3Bucket' is not present");
            }
        }

        /// <summary>
        /// The user pool ID.
        /// </summary>
        [PolicyResourceProperty("userPoolId", "_mUnknown_UserPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserPoolId;
        private bool _mUnknown_UserPoolId;
        public string? UserPoolId
        {
            get
            {
                if (!_mUnknown_UserPoolId) return _mValue_UserPoolId;
                throw new UndeferrableValueException("Value 'UserPoolDomain.UserPoolId' is not present");
            }
        }

        /// <summary>
        /// The app version.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'UserPoolDomain.Version' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cognito/userPoolDomain:UserPoolDomain")]
    public sealed class UserPoolDomainArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
        /// </summary>
        [PolicyResourceProperty("certificateArn", "_mUnknown_CertificateArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CertificateArn;
        private bool _mUnknown_CertificateArn;
        public string? CertificateArn
        {
            get
            {
                if (!_mUnknown_CertificateArn) return _mValue_CertificateArn;
                throw new UndeferrableValueException("Value 'UserPoolDomainArgs.CertificateArn' is not present");
            }
        }

        /// <summary>
        /// For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.
        /// </summary>
        [PolicyResourceProperty("domain", "_mUnknown_Domain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Domain;
        private bool _mUnknown_Domain;
        public string? Domain
        {
            get
            {
                if (!_mUnknown_Domain) return _mValue_Domain;
                throw new UndeferrableValueException("Value 'UserPoolDomainArgs.Domain' is not present");
            }
        }

        /// <summary>
        /// The user pool ID.
        /// </summary>
        [PolicyResourceProperty("userPoolId", "_mUnknown_UserPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserPoolId;
        private bool _mUnknown_UserPoolId;
        public string? UserPoolId
        {
            get
            {
                if (!_mUnknown_UserPoolId) return _mValue_UserPoolId;
                throw new UndeferrableValueException("Value 'UserPoolDomainArgs.UserPoolId' is not present");
            }
        }
    }
}
