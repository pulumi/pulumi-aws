// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cognito
{
    [PolicyResourceType("aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag")]
    public sealed class IdentityPoolProviderPrincipalTag : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// An identity pool ID.
        /// </summary>
        [PolicyResourceProperty("identityPoolId", "_mUnknown_IdentityPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdentityPoolId;
        private bool _mUnknown_IdentityPoolId;
        public string? IdentityPoolId
        {
            get
            {
                if (!_mUnknown_IdentityPoolId) return _mValue_IdentityPoolId;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTag.IdentityPoolId' is not present");
            }
        }

        /// <summary>
        /// The name of the identity provider.
        /// </summary>
        [PolicyResourceProperty("identityProviderName", "_mUnknown_IdentityProviderName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdentityProviderName;
        private bool _mUnknown_IdentityProviderName;
        public string? IdentityProviderName
        {
            get
            {
                if (!_mUnknown_IdentityProviderName) return _mValue_IdentityProviderName;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTag.IdentityProviderName' is not present");
            }
        }

        /// <summary>
        /// String to string map of variables.
        /// </summary>
        [PolicyResourceProperty("principalTags", "_mUnknown_PrincipalTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_PrincipalTags;
        private bool _mUnknown_PrincipalTags;
        public Dictionary<string, string>? PrincipalTags
        {
            get
            {
                if (!_mUnknown_PrincipalTags) return _mValue_PrincipalTags;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTag.PrincipalTags' is not present");
            }
        }

        /// <summary>
        /// use default (username and clientID) attribute mappings.
        /// </summary>
        [PolicyResourceProperty("useDefaults", "_mUnknown_UseDefaults")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_UseDefaults;
        private bool _mUnknown_UseDefaults;
        public bool? UseDefaults
        {
            get
            {
                if (!_mUnknown_UseDefaults) return _mValue_UseDefaults;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTag.UseDefaults' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag")]
    public sealed class IdentityPoolProviderPrincipalTagArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// An identity pool ID.
        /// </summary>
        [PolicyResourceProperty("identityPoolId", "_mUnknown_IdentityPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdentityPoolId;
        private bool _mUnknown_IdentityPoolId;
        public string? IdentityPoolId
        {
            get
            {
                if (!_mUnknown_IdentityPoolId) return _mValue_IdentityPoolId;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTagArgs.IdentityPoolId' is not present");
            }
        }

        /// <summary>
        /// The name of the identity provider.
        /// </summary>
        [PolicyResourceProperty("identityProviderName", "_mUnknown_IdentityProviderName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdentityProviderName;
        private bool _mUnknown_IdentityProviderName;
        public string? IdentityProviderName
        {
            get
            {
                if (!_mUnknown_IdentityProviderName) return _mValue_IdentityProviderName;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTagArgs.IdentityProviderName' is not present");
            }
        }

        /// <summary>
        /// String to string map of variables.
        /// </summary>
        [PolicyResourceProperty("principalTags", "_mUnknown_PrincipalTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_PrincipalTags;
        private bool _mUnknown_PrincipalTags;
        public Dictionary<string, string>? PrincipalTags
        {
            get
            {
                if (!_mUnknown_PrincipalTags) return _mValue_PrincipalTags;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTagArgs.PrincipalTags' is not present");
            }
        }

        /// <summary>
        /// use default (username and clientID) attribute mappings.
        /// </summary>
        [PolicyResourceProperty("useDefaults", "_mUnknown_UseDefaults")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_UseDefaults;
        private bool _mUnknown_UseDefaults;
        public bool? UseDefaults
        {
            get
            {
                if (!_mUnknown_UseDefaults) return _mValue_UseDefaults;
                throw new UndeferrableValueException("Value 'IdentityPoolProviderPrincipalTagArgs.UseDefaults' is not present");
            }
        }
    }
}
