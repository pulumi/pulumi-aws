// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedshiftServerless
{
    [PolicyResourceType("aws:redshiftserverless/workgroup:Workgroup")]
    public sealed class Workgroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Redshift Serverless Workgroup.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The base data warehouse capacity of the workgroup in Redshift Processing Units (RPUs).
        /// </summary>
        [Input("baseCapacity")]
        public int? BaseCapacity;

        /// <summary>
        /// An array of parameters to set for more control over a serverless database. See `Config Parameter` below.
        /// </summary>
        [Input("configParameters")]
        public List<WorkgroupConfigParameter>? ConfigParameters;

        /// <summary>
        /// The endpoint that is created from the workgroup. See `Endpoint` below.
        /// </summary>
        [Input("endpoints")]
        public List<WorkgroupEndpoint>? Endpoints;

        /// <summary>
        /// The value that specifies whether to turn on enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC instead of over the internet.
        /// </summary>
        [Input("enhancedVpcRouting")]
        public bool? EnhancedVpcRouting;

        /// <summary>
        /// The maximum data-warehouse capacity Amazon Redshift Serverless uses to serve queries, specified in Redshift Processing Units (RPUs).
        /// </summary>
        [Input("maxCapacity")]
        public int? MaxCapacity;

        /// <summary>
        /// The name of the namespace.
        /// </summary>
        [Input("namespaceName")]
        public string? NamespaceName;

        /// <summary>
        /// The port number on which the cluster accepts incoming connections.
        /// </summary>
        [Input("port")]
        public int? Port;

        /// <summary>
        /// A value that specifies whether the workgroup can be accessed from a public network.
        /// </summary>
        [Input("publiclyAccessible")]
        public bool? PubliclyAccessible;

        /// <summary>
        /// An array of security group IDs to associate with the workgroup.
        /// </summary>
        [Input("securityGroupIds")]
        public List<string>? SecurityGroupIds;

        /// <summary>
        /// An array of VPC subnet IDs to associate with the workgroup. When set, must contain at least three subnets spanning three Availability Zones. A minimum number of IP addresses is required and scales with the Base Capacity. For more information, see the following [AWS document](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-known-issues.html).
        /// </summary>
        [Input("subnetIds")]
        public List<string>? SubnetIds;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The Redshift Workgroup ID.
        /// </summary>
        [Input("workgroupId")]
        public string? WorkgroupId;

        /// <summary>
        /// The name of the workgroup.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("workgroupName")]
        public string? WorkgroupName;
    }
}
