// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedshiftServerless
{
    [PolicyResourceType("aws:redshiftserverless/customDomainAssociation:CustomDomainAssociation")]
    public sealed class CustomDomainAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the certificate for the custom domain association.
        /// </summary>
        [PolicyResourceProperty("customDomainCertificateArn", "_mUnknown_CustomDomainCertificateArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomDomainCertificateArn;
        private bool _mUnknown_CustomDomainCertificateArn;
        public string? CustomDomainCertificateArn
        {
            get
            {
                if (!_mUnknown_CustomDomainCertificateArn) return _mValue_CustomDomainCertificateArn;
                throw new UndeferrableValueException("Value 'CustomDomainAssociation.CustomDomainCertificateArn' is not present");
            }
        }

        /// <summary>
        /// Expiration time for the certificate.
        /// </summary>
        [PolicyResourceProperty("customDomainCertificateExpiryTime", "_mUnknown_CustomDomainCertificateExpiryTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomDomainCertificateExpiryTime;
        private bool _mUnknown_CustomDomainCertificateExpiryTime;
        public string? CustomDomainCertificateExpiryTime
        {
            get
            {
                if (!_mUnknown_CustomDomainCertificateExpiryTime) return _mValue_CustomDomainCertificateExpiryTime;
                throw new UndeferrableValueException("Value 'CustomDomainAssociation.CustomDomainCertificateExpiryTime' is not present");
            }
        }

        /// <summary>
        /// Custom domain to associate with the workgroup.
        /// </summary>
        [PolicyResourceProperty("customDomainName", "_mUnknown_CustomDomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomDomainName;
        private bool _mUnknown_CustomDomainName;
        public string? CustomDomainName
        {
            get
            {
                if (!_mUnknown_CustomDomainName) return _mValue_CustomDomainName;
                throw new UndeferrableValueException("Value 'CustomDomainAssociation.CustomDomainName' is not present");
            }
        }

        /// <summary>
        /// Name of the workgroup.
        /// </summary>
        [PolicyResourceProperty("workgroupName", "_mUnknown_WorkgroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkgroupName;
        private bool _mUnknown_WorkgroupName;
        public string? WorkgroupName
        {
            get
            {
                if (!_mUnknown_WorkgroupName) return _mValue_WorkgroupName;
                throw new UndeferrableValueException("Value 'CustomDomainAssociation.WorkgroupName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:redshiftserverless/customDomainAssociation:CustomDomainAssociation")]
    public sealed class CustomDomainAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// ARN of the certificate for the custom domain association.
        /// </summary>
        [PolicyResourceProperty("customDomainCertificateArn", "_mUnknown_CustomDomainCertificateArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomDomainCertificateArn;
        private bool _mUnknown_CustomDomainCertificateArn;
        public string? CustomDomainCertificateArn
        {
            get
            {
                if (!_mUnknown_CustomDomainCertificateArn) return _mValue_CustomDomainCertificateArn;
                throw new UndeferrableValueException("Value 'CustomDomainAssociationArgs.CustomDomainCertificateArn' is not present");
            }
        }

        /// <summary>
        /// Custom domain to associate with the workgroup.
        /// </summary>
        [PolicyResourceProperty("customDomainName", "_mUnknown_CustomDomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomDomainName;
        private bool _mUnknown_CustomDomainName;
        public string? CustomDomainName
        {
            get
            {
                if (!_mUnknown_CustomDomainName) return _mValue_CustomDomainName;
                throw new UndeferrableValueException("Value 'CustomDomainAssociationArgs.CustomDomainName' is not present");
            }
        }

        /// <summary>
        /// Name of the workgroup.
        /// </summary>
        [PolicyResourceProperty("workgroupName", "_mUnknown_WorkgroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkgroupName;
        private bool _mUnknown_WorkgroupName;
        public string? WorkgroupName
        {
            get
            {
                if (!_mUnknown_WorkgroupName) return _mValue_WorkgroupName;
                throw new UndeferrableValueException("Value 'CustomDomainAssociationArgs.WorkgroupName' is not present");
            }
        }
    }
}
