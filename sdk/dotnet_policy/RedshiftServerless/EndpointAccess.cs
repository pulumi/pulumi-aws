// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedshiftServerless
{
    [PolicyResourceType("aws:redshiftserverless/endpointAccess:EndpointAccess")]
    public sealed class EndpointAccess : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The DNS address of the VPC endpoint.
        /// </summary>
        [PolicyResourceProperty("address", "_mUnknown_Address")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Address;
        private bool _mUnknown_Address;
        public string? Address
        {
            get
            {
                if (!_mUnknown_Address) return _mValue_Address;
                throw new UndeferrableValueException("Value 'EndpointAccess.Address' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the Redshift Serverless Endpoint Access.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'EndpointAccess.Arn' is not present");
            }
        }

        /// <summary>
        /// The name of the endpoint.
        /// </summary>
        [PolicyResourceProperty("endpointName", "_mUnknown_EndpointName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EndpointName;
        private bool _mUnknown_EndpointName;
        public string? EndpointName
        {
            get
            {
                if (!_mUnknown_EndpointName) return _mValue_EndpointName;
                throw new UndeferrableValueException("Value 'EndpointAccess.EndpointName' is not present");
            }
        }

        /// <summary>
        /// The owner Amazon Web Services account for the Amazon Redshift Serverless workgroup.
        /// </summary>
        [PolicyResourceProperty("ownerAccount", "_mUnknown_OwnerAccount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerAccount;
        private bool _mUnknown_OwnerAccount;
        public string? OwnerAccount
        {
            get
            {
                if (!_mUnknown_OwnerAccount) return _mValue_OwnerAccount;
                throw new UndeferrableValueException("Value 'EndpointAccess.OwnerAccount' is not present");
            }
        }

        /// <summary>
        /// The port that Amazon Redshift Serverless listens on.
        /// </summary>
        [PolicyResourceProperty("port", "_mUnknown_Port")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Port;
        private bool _mUnknown_Port;
        public int? Port
        {
            get
            {
                if (!_mUnknown_Port) return _mValue_Port;
                throw new UndeferrableValueException("Value 'EndpointAccess.Port' is not present");
            }
        }

        /// <summary>
        /// An array of VPC subnet IDs to associate with the endpoint.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'EndpointAccess.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
        /// </summary>
        [PolicyResourceProperty("vpcEndpoints", "_mUnknown_VpcEndpoints")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.EndpointAccessVpcEndpoint>? _mValue_VpcEndpoints;
        private bool _mUnknown_VpcEndpoints;
        public List<Outputs.EndpointAccessVpcEndpoint>? VpcEndpoints
        {
            get
            {
                if (!_mUnknown_VpcEndpoints) return _mValue_VpcEndpoints;
                throw new UndeferrableValueException("Value 'EndpointAccess.VpcEndpoints' is not present");
            }
        }

        /// <summary>
        /// An array of security group IDs to associate with the workgroup.
        /// </summary>
        [PolicyResourceProperty("vpcSecurityGroupIds", "_mUnknown_VpcSecurityGroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_VpcSecurityGroupIds;
        private bool _mUnknown_VpcSecurityGroupIds;
        public List<string>? VpcSecurityGroupIds
        {
            get
            {
                if (!_mUnknown_VpcSecurityGroupIds) return _mValue_VpcSecurityGroupIds;
                throw new UndeferrableValueException("Value 'EndpointAccess.VpcSecurityGroupIds' is not present");
            }
        }

        /// <summary>
        /// The name of the workgroup.
        /// </summary>
        [PolicyResourceProperty("workgroupName", "_mUnknown_WorkgroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkgroupName;
        private bool _mUnknown_WorkgroupName;
        public string? WorkgroupName
        {
            get
            {
                if (!_mUnknown_WorkgroupName) return _mValue_WorkgroupName;
                throw new UndeferrableValueException("Value 'EndpointAccess.WorkgroupName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:redshiftserverless/endpointAccess:EndpointAccess")]
    public sealed class EndpointAccessArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The name of the endpoint.
        /// </summary>
        [PolicyResourceProperty("endpointName", "_mUnknown_EndpointName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EndpointName;
        private bool _mUnknown_EndpointName;
        public string? EndpointName
        {
            get
            {
                if (!_mUnknown_EndpointName) return _mValue_EndpointName;
                throw new UndeferrableValueException("Value 'EndpointAccessArgs.EndpointName' is not present");
            }
        }

        /// <summary>
        /// The owner Amazon Web Services account for the Amazon Redshift Serverless workgroup.
        /// </summary>
        [PolicyResourceProperty("ownerAccount", "_mUnknown_OwnerAccount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerAccount;
        private bool _mUnknown_OwnerAccount;
        public string? OwnerAccount
        {
            get
            {
                if (!_mUnknown_OwnerAccount) return _mValue_OwnerAccount;
                throw new UndeferrableValueException("Value 'EndpointAccessArgs.OwnerAccount' is not present");
            }
        }

        /// <summary>
        /// An array of VPC subnet IDs to associate with the endpoint.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'EndpointAccessArgs.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// An array of security group IDs to associate with the workgroup.
        /// </summary>
        [PolicyResourceProperty("vpcSecurityGroupIds", "_mUnknown_VpcSecurityGroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_VpcSecurityGroupIds;
        private bool _mUnknown_VpcSecurityGroupIds;
        public List<string>? VpcSecurityGroupIds
        {
            get
            {
                if (!_mUnknown_VpcSecurityGroupIds) return _mValue_VpcSecurityGroupIds;
                throw new UndeferrableValueException("Value 'EndpointAccessArgs.VpcSecurityGroupIds' is not present");
            }
        }

        /// <summary>
        /// The name of the workgroup.
        /// </summary>
        [PolicyResourceProperty("workgroupName", "_mUnknown_WorkgroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkgroupName;
        private bool _mUnknown_WorkgroupName;
        public string? WorkgroupName
        {
            get
            {
                if (!_mUnknown_WorkgroupName) return _mValue_WorkgroupName;
                throw new UndeferrableValueException("Value 'EndpointAccessArgs.WorkgroupName' is not present");
            }
        }
    }
}
