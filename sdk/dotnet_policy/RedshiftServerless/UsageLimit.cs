// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.RedshiftServerless
{
    [PolicyResourceType("aws:redshiftserverless/usageLimit:UsageLimit")]
    public sealed class UsageLimit : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The limit amount. If time-based, this amount is in Redshift Processing Units (RPU) consumed per hour. If data-based, this amount is in terabytes (TB) of data transferred between Regions in cross-account sharing. The value must be a positive number.
        /// </summary>
        [Input("amount")]
        public int? Amount;

        /// <summary>
        /// Amazon Resource Name (ARN) of the Redshift Serverless Usage Limit.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The action that Amazon Redshift Serverless takes when the limit is reached. Valid values are `log`, `emit-metric`, and `deactivate`. The default is `log`.
        /// </summary>
        [Input("breachAction")]
        public string? BreachAction;

        /// <summary>
        /// The time period that the amount applies to. A weekly period begins on Sunday. Valid values are `daily`, `weekly`, and `monthly`. The default is `monthly`.
        /// </summary>
        [Input("period")]
        public string? Period;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon Redshift Serverless resource to create the usage limit for.
        /// </summary>
        [Input("resourceArn")]
        public string? ResourceArn;

        /// <summary>
        /// The type of Amazon Redshift Serverless usage to create a usage limit for. Valid values are `serverless-compute` or `cross-region-datasharing`.
        /// </summary>
        [Input("usageType")]
        public string? UsageType;
    }
}
