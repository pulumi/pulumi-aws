// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecr.Outputs
{
    public sealed class RegistryScanningConfigurationRule
    {
        /// <summary>
        /// One or more repository filter blocks, containing a `filter` (required string filtering repositories, see pattern regex [here](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_ScanningRepositoryFilter.html)) and a `filter_type` (required string, currently only `WILDCARD` is supported).
        /// </summary>
        [PolicyResourceProperty("repositoryFilters", "_mUnknown_RepositoryFilters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RegistryScanningConfigurationRuleRepositoryFilter>? _mValue_RepositoryFilters;
        private bool _mUnknown_RepositoryFilters;
        public List<Outputs.RegistryScanningConfigurationRuleRepositoryFilter>? RepositoryFilters
        {
            get
            {
                if (!_mUnknown_RepositoryFilters) return _mValue_RepositoryFilters;
                throw new UndeferrableValueException("Value 'RegistryScanningConfigurationRule.RepositoryFilters' is not present");
            }
        }

        /// <summary>
        /// The frequency that scans are performed at for a private registry. Can be `SCAN_ON_PUSH`, `CONTINUOUS_SCAN`, or `MANUAL`.
        /// </summary>
        [PolicyResourceProperty("scanFrequency", "_mUnknown_ScanFrequency")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ScanFrequency;
        private bool _mUnknown_ScanFrequency;
        public string? ScanFrequency
        {
            get
            {
                if (!_mUnknown_ScanFrequency) return _mValue_ScanFrequency;
                throw new UndeferrableValueException("Value 'RegistryScanningConfigurationRule.ScanFrequency' is not present");
            }
        }
    }
}
