// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecr.Outputs
{
    public sealed class ReplicationConfigurationReplicationConfigurationRule
    {
        /// <summary>
        /// the details of a replication destination. A maximum of 25 are allowed per `rule`. See Destination.
        /// </summary>
        [PolicyResourceProperty("destinations", "_mUnknown_Destinations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ReplicationConfigurationReplicationConfigurationRuleDestination>? _mValue_Destinations;
        private bool _mUnknown_Destinations;
        public List<Outputs.ReplicationConfigurationReplicationConfigurationRuleDestination>? Destinations
        {
            get
            {
                if (!_mUnknown_Destinations) return _mValue_Destinations;
                throw new UndeferrableValueException("Value 'ReplicationConfigurationReplicationConfigurationRule.Destinations' is not present");
            }
        }

        /// <summary>
        /// filters for a replication rule. See Repository Filter.
        /// </summary>
        [PolicyResourceProperty("repositoryFilters", "_mUnknown_RepositoryFilters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter>? _mValue_RepositoryFilters;
        private bool _mUnknown_RepositoryFilters;
        public List<Outputs.ReplicationConfigurationReplicationConfigurationRuleRepositoryFilter>? RepositoryFilters
        {
            get
            {
                if (!_mUnknown_RepositoryFilters) return _mValue_RepositoryFilters;
                throw new UndeferrableValueException("Value 'ReplicationConfigurationReplicationConfigurationRule.RepositoryFilters' is not present");
            }
        }
    }
}
