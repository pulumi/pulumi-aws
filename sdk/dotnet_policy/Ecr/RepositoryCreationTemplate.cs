// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ecr
{
    [PolicyResourceType("aws:ecr/repositoryCreationTemplate:RepositoryCreationTemplate")]
    public sealed class RepositoryCreationTemplate : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Which features this template applies to. Must contain one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
        /// </summary>
        [Input("appliedFors")]
        public List<string>? AppliedFors;

        /// <summary>
        /// A custom IAM role to use for repository creation. Required if using repository tags or KMS encryption.
        /// </summary>
        [Input("customRoleArn")]
        public string? CustomRoleArn;

        /// <summary>
        /// The description for this template.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Encryption configuration for any created repositories. See below for schema.
        /// </summary>
        [Input("encryptionConfigurations")]
        public List<RepositoryCreationTemplateEncryptionConfiguration>? EncryptionConfigurations;

        /// <summary>
        /// The tag mutability setting for any created repositories. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
        /// </summary>
        [Input("imageTagMutability")]
        public string? ImageTagMutability;

        /// <summary>
        /// The lifecycle policy document to apply to any created repositories. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs. Consider using the `aws.ecr.getLifecyclePolicyDocument` data_source to generate/manage the JSON document used for the `lifecycle_policy` argument.
        /// </summary>
        [Input("lifecyclePolicy")]
        public string? LifecyclePolicy;

        /// <summary>
        /// The repository name prefix to match against. Use `ROOT` to match any prefix that doesn't explicitly match another template.
        /// </summary>
        [Input("prefix")]
        public string? Prefix;

        /// <summary>
        /// The registry ID the repository creation template applies to.
        /// </summary>
        [Input("registryId")]
        public string? RegistryId;

        [Input("repositoryPolicy")]
        public string? RepositoryPolicy;

        /// <summary>
        /// A map of tags to assign to any created repositories.
        /// </summary>
        [Input("resourceTags")]
        public Dictionary<string, string>? ResourceTags;
    }
}
