// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Account
{
    [PolicyResourceType("aws:account/region:Region")]
    public sealed class Region : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted. To use this parameter, the caller must be an identity in the organization's management account or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have all features enabled, and the organization must have trusted access enabled for the Account Management service, and optionally a delegated admin account assigned.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'Region.AccountId' is not present");
            }
        }

        /// <summary>
        /// Whether the region is enabled.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'Region.Enabled' is not present");
            }
        }

        /// <summary>
        /// The region opt status.
        /// </summary>
        [PolicyResourceProperty("optStatus", "_mUnknown_OptStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OptStatus;
        private bool _mUnknown_OptStatus;
        public string? OptStatus
        {
            get
            {
                if (!_mUnknown_OptStatus) return _mValue_OptStatus;
                throw new UndeferrableValueException("Value 'Region.OptStatus' is not present");
            }
        }

        /// <summary>
        /// The region name to manage.
        /// </summary>
        [PolicyResourceProperty("regionName", "_mUnknown_RegionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RegionName;
        private bool _mUnknown_RegionName;
        public string? RegionName
        {
            get
            {
                if (!_mUnknown_RegionName) return _mValue_RegionName;
                throw new UndeferrableValueException("Value 'Region.RegionName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:account/region:Region")]
    public sealed class RegionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted. To use this parameter, the caller must be an identity in the organization's management account or a delegated administrator account. The specified account ID must also be a member account in the same organization. The organization must have all features enabled, and the organization must have trusted access enabled for the Account Management service, and optionally a delegated admin account assigned.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'RegionArgs.AccountId' is not present");
            }
        }

        /// <summary>
        /// Whether the region is enabled.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'RegionArgs.Enabled' is not present");
            }
        }

        /// <summary>
        /// The region name to manage.
        /// </summary>
        [PolicyResourceProperty("regionName", "_mUnknown_RegionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RegionName;
        private bool _mUnknown_RegionName;
        public string? RegionName
        {
            get
            {
                if (!_mUnknown_RegionName) return _mValue_RegionName;
                throw new UndeferrableValueException("Value 'RegionArgs.RegionName' is not present");
            }
        }
    }
}
