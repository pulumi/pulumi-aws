// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppSync
{
    [PolicyResourceType("aws:appsync/domainName:DomainName")]
    public sealed class DomainName : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Domain name that AppSync provides.
        /// </summary>
        [PolicyResourceProperty("appsyncDomainName", "_mUnknown_AppsyncDomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AppsyncDomainName;
        private bool _mUnknown_AppsyncDomainName;
        public string? AppsyncDomainName
        {
            get
            {
                if (!_mUnknown_AppsyncDomainName) return _mValue_AppsyncDomainName;
                throw new UndeferrableValueException("Value 'DomainName.AppsyncDomainName' is not present");
            }
        }

        /// <summary>
        /// ARN of the certificate. This can be an Certificate Manager (ACM) certificate or an Identity and Access Management (IAM) server certificate. The certifiacte must reside in us-east-1.
        /// </summary>
        [PolicyResourceProperty("certificateArn", "_mUnknown_CertificateArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CertificateArn;
        private bool _mUnknown_CertificateArn;
        public string? CertificateArn
        {
            get
            {
                if (!_mUnknown_CertificateArn) return _mValue_CertificateArn;
                throw new UndeferrableValueException("Value 'DomainName.CertificateArn' is not present");
            }
        }

        /// <summary>
        /// A description of the Domain Name.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'DomainName.Description' is not present");
            }
        }

        /// <summary>
        /// Domain name.
        /// </summary>
        [PolicyResourceProperty("domainName", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'DomainName.Name' is not present");
            }
        }

        /// <summary>
        /// ID of your Amazon Route 53 hosted zone.
        /// </summary>
        [PolicyResourceProperty("hostedZoneId", "_mUnknown_HostedZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostedZoneId;
        private bool _mUnknown_HostedZoneId;
        public string? HostedZoneId
        {
            get
            {
                if (!_mUnknown_HostedZoneId) return _mValue_HostedZoneId;
                throw new UndeferrableValueException("Value 'DomainName.HostedZoneId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:appsync/domainName:DomainName")]
    public sealed class DomainNameArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// ARN of the certificate. This can be an Certificate Manager (ACM) certificate or an Identity and Access Management (IAM) server certificate. The certifiacte must reside in us-east-1.
        /// </summary>
        [PolicyResourceProperty("certificateArn", "_mUnknown_CertificateArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CertificateArn;
        private bool _mUnknown_CertificateArn;
        public string? CertificateArn
        {
            get
            {
                if (!_mUnknown_CertificateArn) return _mValue_CertificateArn;
                throw new UndeferrableValueException("Value 'DomainNameArgs.CertificateArn' is not present");
            }
        }

        /// <summary>
        /// A description of the Domain Name.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'DomainNameArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Domain name.
        /// </summary>
        [PolicyResourceProperty("domainName", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'DomainNameArgs.Name' is not present");
            }
        }
    }
}
