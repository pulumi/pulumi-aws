// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppSync.Outputs
{
    public sealed class DataSourceDynamodbConfig
    {
        /// <summary>
        /// The DeltaSyncConfig for a versioned data source. See `delta_sync_config` Block for details.
        /// </summary>
        [PolicyResourceProperty("deltaSyncConfig", "_mUnknown_DeltaSyncConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataSourceDynamodbConfigDeltaSyncConfig? _mValue_DeltaSyncConfig;
        private bool _mUnknown_DeltaSyncConfig;
        public Outputs.DataSourceDynamodbConfigDeltaSyncConfig? DeltaSyncConfig
        {
            get
            {
                if (!_mUnknown_DeltaSyncConfig) return _mValue_DeltaSyncConfig;
                throw new UndeferrableValueException("Value 'DataSourceDynamodbConfig.DeltaSyncConfig' is not present");
            }
        }

        /// <summary>
        /// AWS region of the DynamoDB table. Defaults to current region.
        /// </summary>
        [PolicyResourceProperty("region", "_mUnknown_Region")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Region;
        private bool _mUnknown_Region;
        public string? Region
        {
            get
            {
                if (!_mUnknown_Region) return _mValue_Region;
                throw new UndeferrableValueException("Value 'DataSourceDynamodbConfig.Region' is not present");
            }
        }

        /// <summary>
        /// Name of the DynamoDB table.
        /// </summary>
        [PolicyResourceProperty("tableName", "_mUnknown_TableName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TableName;
        private bool _mUnknown_TableName;
        public string? TableName
        {
            get
            {
                if (!_mUnknown_TableName) return _mValue_TableName;
                throw new UndeferrableValueException("Value 'DataSourceDynamodbConfig.TableName' is not present");
            }
        }

        /// <summary>
        /// Set to `true` to use Amazon Cognito credentials with this data source.
        /// </summary>
        [PolicyResourceProperty("useCallerCredentials", "_mUnknown_UseCallerCredentials")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_UseCallerCredentials;
        private bool _mUnknown_UseCallerCredentials;
        public bool? UseCallerCredentials
        {
            get
            {
                if (!_mUnknown_UseCallerCredentials) return _mValue_UseCallerCredentials;
                throw new UndeferrableValueException("Value 'DataSourceDynamodbConfig.UseCallerCredentials' is not present");
            }
        }

        /// <summary>
        /// Detects Conflict Detection and Resolution with this data source.
        /// </summary>
        [PolicyResourceProperty("versioned", "_mUnknown_Versioned")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Versioned;
        private bool _mUnknown_Versioned;
        public bool? Versioned
        {
            get
            {
                if (!_mUnknown_Versioned) return _mValue_Versioned;
                throw new UndeferrableValueException("Value 'DataSourceDynamodbConfig.Versioned' is not present");
            }
        }
    }
}
