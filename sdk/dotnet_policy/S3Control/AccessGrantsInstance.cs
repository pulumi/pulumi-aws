// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.S3Control
{
    [PolicyResourceType("aws:s3control/accessGrantsInstance:AccessGrantsInstance")]
    public sealed class AccessGrantsInstance : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the S3 Access Grants instance.
        /// </summary>
        [Input("accessGrantsInstanceArn")]
        public string? AccessGrantsInstanceArn;

        /// <summary>
        /// Unique ID of the S3 Access Grants instance.
        /// </summary>
        [Input("accessGrantsInstanceId")]
        public string? AccessGrantsInstanceId;

        [Input("accountId")]
        public string? AccountId;

        /// <summary>
        /// The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
        /// </summary>
        [Input("identityCenterApplicationArn")]
        public string? IdentityCenterApplicationArn;

        /// <summary>
        /// The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
        /// </summary>
        [Input("identityCenterArn")]
        public string? IdentityCenterArn;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
