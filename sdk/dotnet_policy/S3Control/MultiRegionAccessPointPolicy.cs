// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.S3Control
{
    [PolicyResourceType("aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy")]
    public sealed class MultiRegionAccessPointPolicy : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'MultiRegionAccessPointPolicy.AccountId' is not present");
            }
        }

        /// <summary>
        /// A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
        /// </summary>
        [PolicyResourceProperty("details", "_mUnknown_Details")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.MultiRegionAccessPointPolicyDetails? _mValue_Details;
        private bool _mUnknown_Details;
        public Outputs.MultiRegionAccessPointPolicyDetails? Details
        {
            get
            {
                if (!_mUnknown_Details) return _mValue_Details;
                throw new UndeferrableValueException("Value 'MultiRegionAccessPointPolicy.Details' is not present");
            }
        }

        /// <summary>
        /// The last established policy for the Multi-Region Access Point.
        /// </summary>
        [PolicyResourceProperty("established", "_mUnknown_Established")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Established;
        private bool _mUnknown_Established;
        public string? Established
        {
            get
            {
                if (!_mUnknown_Established) return _mValue_Established;
                throw new UndeferrableValueException("Value 'MultiRegionAccessPointPolicy.Established' is not present");
            }
        }

        /// <summary>
        /// The proposed policy for the Multi-Region Access Point.
        /// </summary>
        [PolicyResourceProperty("proposed", "_mUnknown_Proposed")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Proposed;
        private bool _mUnknown_Proposed;
        public string? Proposed
        {
            get
            {
                if (!_mUnknown_Proposed) return _mValue_Proposed;
                throw new UndeferrableValueException("Value 'MultiRegionAccessPointPolicy.Proposed' is not present");
            }
        }
    }

    [PolicyResourceType("aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy")]
    public sealed class MultiRegionAccessPointPolicyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'MultiRegionAccessPointPolicyArgs.AccountId' is not present");
            }
        }

        /// <summary>
        /// A configuration block containing details about the policy for the Multi-Region Access Point. See Details Configuration Block below for more details
        /// </summary>
        [PolicyResourceProperty("details", "_mUnknown_Details")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.MultiRegionAccessPointPolicyDetailsArgs? _mValue_Details;
        private bool _mUnknown_Details;
        public Inputs.MultiRegionAccessPointPolicyDetailsArgs? Details
        {
            get
            {
                if (!_mUnknown_Details) return _mValue_Details;
                throw new UndeferrableValueException("Value 'MultiRegionAccessPointPolicyArgs.Details' is not present");
            }
        }
    }
}
