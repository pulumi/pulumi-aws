// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AutoScaling.Outputs
{
    public sealed class GroupInstanceRefresh
    {
        /// <summary>
        /// Override default parameters for Instance Refresh.
        /// </summary>
        [PolicyResourceProperty("preferences", "_mUnknown_Preferences")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GroupInstanceRefreshPreferences? _mValue_Preferences;
        private bool _mUnknown_Preferences;
        public Outputs.GroupInstanceRefreshPreferences? Preferences
        {
            get
            {
                if (!_mUnknown_Preferences) return _mValue_Preferences;
                throw new UndeferrableValueException("Value 'GroupInstanceRefresh.Preferences' is not present");
            }
        }

        /// <summary>
        /// Strategy to use for instance refresh. The only allowed value is `Rolling`. See [StartInstanceRefresh Action](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_StartInstanceRefresh.html#API_StartInstanceRefresh_RequestParameters) for more information.
        /// </summary>
        [PolicyResourceProperty("strategy", "_mUnknown_Strategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Strategy;
        private bool _mUnknown_Strategy;
        public string? Strategy
        {
            get
            {
                if (!_mUnknown_Strategy) return _mValue_Strategy;
                throw new UndeferrableValueException("Value 'GroupInstanceRefresh.Strategy' is not present");
            }
        }

        /// <summary>
        /// Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of `launch_configuration`, `launch_template`, or `mixed_instances_policy`.
        /// 
        /// &gt; **NOTE:** A refresh is started when any of the following Auto Scaling Group properties change: `launch_configuration`, `launch_template`, `mixed_instances_policy`. Additional properties can be specified in the `triggers` property of `instance_refresh`.
        /// 
        /// &gt; **NOTE:** A refresh will not start when `version = "$Latest"` is configured in the `launch_template` block. To trigger the instance refresh when a launch template is changed, configure `version` to use the `latest_version` attribute of the `aws.ec2.LaunchTemplate` resource.
        /// 
        /// &gt; **NOTE:** Auto Scaling Groups support up to one active instance refresh at a time. When this resource is updated, any existing refresh is cancelled.
        /// 
        /// &gt; **NOTE:** Depending on health check settings and group size, an instance refresh may take a long time or fail. This resource does not wait for the instance refresh to complete.
        /// </summary>
        [PolicyResourceProperty("triggers", "_mUnknown_Triggers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Triggers;
        private bool _mUnknown_Triggers;
        public List<string>? Triggers
        {
            get
            {
                if (!_mUnknown_Triggers) return _mValue_Triggers;
                throw new UndeferrableValueException("Value 'GroupInstanceRefresh.Triggers' is not present");
            }
        }
    }
}
