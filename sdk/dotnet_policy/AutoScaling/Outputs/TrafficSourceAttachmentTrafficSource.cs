// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AutoScaling.Outputs
{
    public sealed class TrafficSourceAttachmentTrafficSource
    {
        /// <summary>
        /// Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.
        /// </summary>
        [PolicyResourceProperty("identifier", "_mUnknown_Identifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Identifier;
        private bool _mUnknown_Identifier;
        public string? Identifier
        {
            get
            {
                if (!_mUnknown_Identifier) return _mValue_Identifier;
                throw new UndeferrableValueException("Value 'TrafficSourceAttachmentTrafficSource.Identifier' is not present");
            }
        }

        /// <summary>
        /// Provides additional context for the value of `identifier`.
        /// The following lists the valid values:
        /// `elb` if `identifier` is the name of a Classic Load Balancer.
        /// `elbv2` if `identifier` is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.
        /// `vpc-lattice` if `identifier` is the ARN of a VPC Lattice target group.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'TrafficSourceAttachmentTrafficSource.Type' is not present");
            }
        }
    }
}
