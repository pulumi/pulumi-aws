// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AutoScaling.Outputs
{
    public sealed class GetGroupMixedInstancesPolicyInstancesDistributionResult
    {
        /// <summary>
        /// Strategy used when launching on-demand instances.
        /// </summary>
        [PolicyResourceProperty("onDemandAllocationStrategy", "_mUnknown_OnDemandAllocationStrategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OnDemandAllocationStrategy;
        private bool _mUnknown_OnDemandAllocationStrategy;
        public string? OnDemandAllocationStrategy
        {
            get
            {
                if (!_mUnknown_OnDemandAllocationStrategy) return _mValue_OnDemandAllocationStrategy;
                throw new UndeferrableValueException("Value 'GetGroupMixedInstancesPolicyInstancesDistributionResult.OnDemandAllocationStrategy' is not present");
            }
        }

        /// <summary>
        /// Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances.
        /// </summary>
        [PolicyResourceProperty("onDemandBaseCapacity", "_mUnknown_OnDemandBaseCapacity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_OnDemandBaseCapacity;
        private bool _mUnknown_OnDemandBaseCapacity;
        public int? OnDemandBaseCapacity
        {
            get
            {
                if (!_mUnknown_OnDemandBaseCapacity) return _mValue_OnDemandBaseCapacity;
                throw new UndeferrableValueException("Value 'GetGroupMixedInstancesPolicyInstancesDistributionResult.OnDemandBaseCapacity' is not present");
            }
        }

        [PolicyResourceProperty("onDemandPercentageAboveBaseCapacity", "_mUnknown_OnDemandPercentageAboveBaseCapacity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_OnDemandPercentageAboveBaseCapacity;
        private bool _mUnknown_OnDemandPercentageAboveBaseCapacity;
        public int? OnDemandPercentageAboveBaseCapacity
        {
            get
            {
                if (!_mUnknown_OnDemandPercentageAboveBaseCapacity) return _mValue_OnDemandPercentageAboveBaseCapacity;
                throw new UndeferrableValueException("Value 'GetGroupMixedInstancesPolicyInstancesDistributionResult.OnDemandPercentageAboveBaseCapacity' is not present");
            }
        }

        /// <summary>
        /// Strategy used when launching Spot instances.
        /// </summary>
        [PolicyResourceProperty("spotAllocationStrategy", "_mUnknown_SpotAllocationStrategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SpotAllocationStrategy;
        private bool _mUnknown_SpotAllocationStrategy;
        public string? SpotAllocationStrategy
        {
            get
            {
                if (!_mUnknown_SpotAllocationStrategy) return _mValue_SpotAllocationStrategy;
                throw new UndeferrableValueException("Value 'GetGroupMixedInstancesPolicyInstancesDistributionResult.SpotAllocationStrategy' is not present");
            }
        }

        /// <summary>
        /// Number of Spot pools per availability zone to allocate capacity.
        /// </summary>
        [PolicyResourceProperty("spotInstancePools", "_mUnknown_SpotInstancePools")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_SpotInstancePools;
        private bool _mUnknown_SpotInstancePools;
        public int? SpotInstancePools
        {
            get
            {
                if (!_mUnknown_SpotInstancePools) return _mValue_SpotInstancePools;
                throw new UndeferrableValueException("Value 'GetGroupMixedInstancesPolicyInstancesDistributionResult.SpotInstancePools' is not present");
            }
        }

        /// <summary>
        /// Maximum price per unit hour that the user is willing to pay for the Spot instances.
        /// </summary>
        [PolicyResourceProperty("spotMaxPrice", "_mUnknown_SpotMaxPrice")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SpotMaxPrice;
        private bool _mUnknown_SpotMaxPrice;
        public string? SpotMaxPrice
        {
            get
            {
                if (!_mUnknown_SpotMaxPrice) return _mValue_SpotMaxPrice;
                throw new UndeferrableValueException("Value 'GetGroupMixedInstancesPolicyInstancesDistributionResult.SpotMaxPrice' is not present");
            }
        }
    }
}
