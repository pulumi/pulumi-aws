// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AutoScaling
{
    [PolicyResourceType("aws:autoscaling/notification:Notification")]
    public sealed class Notification : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// List of AutoScaling Group Names
        /// </summary>
        [PolicyResourceProperty("groupNames", "_mUnknown_GroupNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_GroupNames;
        private bool _mUnknown_GroupNames;
        public List<string>? GroupNames
        {
            get
            {
                if (!_mUnknown_GroupNames) return _mValue_GroupNames;
                throw new UndeferrableValueException("Value 'Notification.GroupNames' is not present");
            }
        }

        /// <summary>
        /// List of Notification Types that trigger
        /// notifications. Acceptable values are documented [in the AWS documentation here](https://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_NotificationConfiguration.html)
        /// </summary>
        [PolicyResourceProperty("notifications", "_mUnknown_Notifications")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Notifications;
        private bool _mUnknown_Notifications;
        public List<string>? Notifications
        {
            get
            {
                if (!_mUnknown_Notifications) return _mValue_Notifications;
                throw new UndeferrableValueException("Value 'Notification.Notifications' is not present");
            }
        }

        /// <summary>
        /// Topic ARN for notifications to be sent through
        /// </summary>
        [PolicyResourceProperty("topicArn", "_mUnknown_TopicArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TopicArn;
        private bool _mUnknown_TopicArn;
        public string? TopicArn
        {
            get
            {
                if (!_mUnknown_TopicArn) return _mValue_TopicArn;
                throw new UndeferrableValueException("Value 'Notification.TopicArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:autoscaling/notification:Notification")]
    public sealed class NotificationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// List of AutoScaling Group Names
        /// </summary>
        [PolicyResourceProperty("groupNames", "_mUnknown_GroupNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_GroupNames;
        private bool _mUnknown_GroupNames;
        public List<string>? GroupNames
        {
            get
            {
                if (!_mUnknown_GroupNames) return _mValue_GroupNames;
                throw new UndeferrableValueException("Value 'NotificationArgs.GroupNames' is not present");
            }
        }

        /// <summary>
        /// List of Notification Types that trigger
        /// notifications. Acceptable values are documented [in the AWS documentation here](https://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_NotificationConfiguration.html)
        /// </summary>
        [PolicyResourceProperty("notifications", "_mUnknown_Notifications")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Notifications;
        private bool _mUnknown_Notifications;
        public List<string>? Notifications
        {
            get
            {
                if (!_mUnknown_Notifications) return _mValue_Notifications;
                throw new UndeferrableValueException("Value 'NotificationArgs.Notifications' is not present");
            }
        }

        /// <summary>
        /// Topic ARN for notifications to be sent through
        /// </summary>
        [PolicyResourceProperty("topicArn", "_mUnknown_TopicArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TopicArn;
        private bool _mUnknown_TopicArn;
        public string? TopicArn
        {
            get
            {
                if (!_mUnknown_TopicArn) return _mValue_TopicArn;
                throw new UndeferrableValueException("Value 'NotificationArgs.TopicArn' is not present");
            }
        }
    }
}
