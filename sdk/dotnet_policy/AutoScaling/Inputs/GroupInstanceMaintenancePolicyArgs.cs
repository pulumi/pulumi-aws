// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AutoScaling.Inputs
{
    public sealed class GroupInstanceMaintenancePolicyArgs
    {
        /// <summary>
        /// Specifies the upper limit on the number of instances that are in the InService or Pending state with a healthy status during an instance replacement activity.
        /// </summary>
        [PolicyResourceProperty("maxHealthyPercentage", "_mUnknown_MaxHealthyPercentage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxHealthyPercentage;
        private bool _mUnknown_MaxHealthyPercentage;
        public int? MaxHealthyPercentage
        {
            get
            {
                if (!_mUnknown_MaxHealthyPercentage) return _mValue_MaxHealthyPercentage;
                throw new UndeferrableValueException("Value 'GroupInstanceMaintenancePolicyArgs.MaxHealthyPercentage' is not present");
            }
        }

        /// <summary>
        /// Specifies the lower limit on the number of instances that must be in the InService state with a healthy status during an instance replacement activity.
        /// </summary>
        [PolicyResourceProperty("minHealthyPercentage", "_mUnknown_MinHealthyPercentage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MinHealthyPercentage;
        private bool _mUnknown_MinHealthyPercentage;
        public int? MinHealthyPercentage
        {
            get
            {
                if (!_mUnknown_MinHealthyPercentage) return _mValue_MinHealthyPercentage;
                throw new UndeferrableValueException("Value 'GroupInstanceMaintenancePolicyArgs.MinHealthyPercentage' is not present");
            }
        }
    }
}
