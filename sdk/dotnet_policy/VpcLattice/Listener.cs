// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VpcLattice
{
    [PolicyResourceType("aws:vpclattice/listener:Listener")]
    public sealed class Listener : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the listener.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Listener.Arn' is not present");
            }
        }

        /// <summary>
        /// Date and time that the listener was created, specified in ISO-8601 format.
        /// </summary>
        [PolicyResourceProperty("createdAt", "_mUnknown_CreatedAt")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreatedAt;
        private bool _mUnknown_CreatedAt;
        public string? CreatedAt
        {
            get
            {
                if (!_mUnknown_CreatedAt) return _mValue_CreatedAt;
                throw new UndeferrableValueException("Value 'Listener.CreatedAt' is not present");
            }
        }

        /// <summary>
        /// Default action block for the default listener rule. Default action blocks are defined below.
        /// </summary>
        [PolicyResourceProperty("defaultAction", "_mUnknown_DefaultAction")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ListenerDefaultAction? _mValue_DefaultAction;
        private bool _mUnknown_DefaultAction;
        public Outputs.ListenerDefaultAction? DefaultAction
        {
            get
            {
                if (!_mUnknown_DefaultAction) return _mValue_DefaultAction;
                throw new UndeferrableValueException("Value 'Listener.DefaultAction' is not present");
            }
        }

        [PolicyResourceProperty("lastUpdatedAt", "_mUnknown_LastUpdatedAt")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastUpdatedAt;
        private bool _mUnknown_LastUpdatedAt;
        public string? LastUpdatedAt
        {
            get
            {
                if (!_mUnknown_LastUpdatedAt) return _mValue_LastUpdatedAt;
                throw new UndeferrableValueException("Value 'Listener.LastUpdatedAt' is not present");
            }
        }

        /// <summary>
        /// Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
        /// </summary>
        [PolicyResourceProperty("listenerId", "_mUnknown_ListenerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ListenerId;
        private bool _mUnknown_ListenerId;
        public string? ListenerId
        {
            get
            {
                if (!_mUnknown_ListenerId) return _mValue_ListenerId;
                throw new UndeferrableValueException("Value 'Listener.ListenerId' is not present");
            }
        }

        /// <summary>
        /// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Listener.Name' is not present");
            }
        }

        /// <summary>
        /// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
        /// </summary>
        [PolicyResourceProperty("port", "_mUnknown_Port")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Port;
        private bool _mUnknown_Port;
        public int? Port
        {
            get
            {
                if (!_mUnknown_Port) return _mValue_Port;
                throw new UndeferrableValueException("Value 'Listener.Port' is not present");
            }
        }

        /// <summary>
        /// Protocol for the listener. Supported values are `HTTP`, `HTTPS` or `TLS_PASSTHROUGH`
        /// </summary>
        [PolicyResourceProperty("protocol", "_mUnknown_Protocol")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Protocol;
        private bool _mUnknown_Protocol;
        public string? Protocol
        {
            get
            {
                if (!_mUnknown_Protocol) return _mValue_Protocol;
                throw new UndeferrableValueException("Value 'Listener.Protocol' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// </summary>
        [PolicyResourceProperty("serviceArn", "_mUnknown_ServiceArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceArn;
        private bool _mUnknown_ServiceArn;
        public string? ServiceArn
        {
            get
            {
                if (!_mUnknown_ServiceArn) return _mValue_ServiceArn;
                throw new UndeferrableValueException("Value 'Listener.ServiceArn' is not present");
            }
        }

        /// <summary>
        /// ID of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// &gt; **NOTE:** You must specify one of the following arguments: `service_arn` or `service_identifier`.
        /// </summary>
        [PolicyResourceProperty("serviceIdentifier", "_mUnknown_ServiceIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceIdentifier;
        private bool _mUnknown_ServiceIdentifier;
        public string? ServiceIdentifier
        {
            get
            {
                if (!_mUnknown_ServiceIdentifier) return _mValue_ServiceIdentifier;
                throw new UndeferrableValueException("Value 'Listener.ServiceIdentifier' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Listener.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Listener.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:vpclattice/listener:Listener")]
    public sealed class ListenerArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Default action block for the default listener rule. Default action blocks are defined below.
        /// </summary>
        [PolicyResourceProperty("defaultAction", "_mUnknown_DefaultAction")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ListenerDefaultActionArgs? _mValue_DefaultAction;
        private bool _mUnknown_DefaultAction;
        public Inputs.ListenerDefaultActionArgs? DefaultAction
        {
            get
            {
                if (!_mUnknown_DefaultAction) return _mValue_DefaultAction;
                throw new UndeferrableValueException("Value 'ListenerArgs.DefaultAction' is not present");
            }
        }

        /// <summary>
        /// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ListenerArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
        /// </summary>
        [PolicyResourceProperty("port", "_mUnknown_Port")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Port;
        private bool _mUnknown_Port;
        public int? Port
        {
            get
            {
                if (!_mUnknown_Port) return _mValue_Port;
                throw new UndeferrableValueException("Value 'ListenerArgs.Port' is not present");
            }
        }

        /// <summary>
        /// Protocol for the listener. Supported values are `HTTP`, `HTTPS` or `TLS_PASSTHROUGH`
        /// </summary>
        [PolicyResourceProperty("protocol", "_mUnknown_Protocol")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Protocol;
        private bool _mUnknown_Protocol;
        public string? Protocol
        {
            get
            {
                if (!_mUnknown_Protocol) return _mValue_Protocol;
                throw new UndeferrableValueException("Value 'ListenerArgs.Protocol' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// </summary>
        [PolicyResourceProperty("serviceArn", "_mUnknown_ServiceArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceArn;
        private bool _mUnknown_ServiceArn;
        public string? ServiceArn
        {
            get
            {
                if (!_mUnknown_ServiceArn) return _mValue_ServiceArn;
                throw new UndeferrableValueException("Value 'ListenerArgs.ServiceArn' is not present");
            }
        }

        /// <summary>
        /// ID of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// &gt; **NOTE:** You must specify one of the following arguments: `service_arn` or `service_identifier`.
        /// </summary>
        [PolicyResourceProperty("serviceIdentifier", "_mUnknown_ServiceIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceIdentifier;
        private bool _mUnknown_ServiceIdentifier;
        public string? ServiceIdentifier
        {
            get
            {
                if (!_mUnknown_ServiceIdentifier) return _mValue_ServiceIdentifier;
                throw new UndeferrableValueException("Value 'ListenerArgs.ServiceIdentifier' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ListenerArgs.Tags' is not present");
            }
        }
    }
}
