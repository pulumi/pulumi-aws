// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VpcLattice
{
    [PolicyResourceType("aws:vpclattice/listenerRule:ListenerRule")]
    public sealed class ListenerRule : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The action for the listener rule.
        /// </summary>
        [PolicyResourceProperty("action", "_mUnknown_Action")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ListenerRuleAction? _mValue_Action;
        private bool _mUnknown_Action;
        public Outputs.ListenerRuleAction? Action
        {
            get
            {
                if (!_mUnknown_Action) return _mValue_Action;
                throw new UndeferrableValueException("Value 'ListenerRule.Action' is not present");
            }
        }

        /// <summary>
        /// The ARN for the listener rule.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ListenerRule.Arn' is not present");
            }
        }

        /// <summary>
        /// The ID or Amazon Resource Name (ARN) of the listener.
        /// </summary>
        [PolicyResourceProperty("listenerIdentifier", "_mUnknown_ListenerIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ListenerIdentifier;
        private bool _mUnknown_ListenerIdentifier;
        public string? ListenerIdentifier
        {
            get
            {
                if (!_mUnknown_ListenerIdentifier) return _mValue_ListenerIdentifier;
                throw new UndeferrableValueException("Value 'ListenerRule.ListenerIdentifier' is not present");
            }
        }

        /// <summary>
        /// The rule match.
        /// </summary>
        [PolicyResourceProperty("match", "_mUnknown_Match")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ListenerRuleMatch? _mValue_Match;
        private bool _mUnknown_Match;
        public Outputs.ListenerRuleMatch? Match
        {
            get
            {
                if (!_mUnknown_Match) return _mValue_Match;
                throw new UndeferrableValueException("Value 'ListenerRule.Match' is not present");
            }
        }

        /// <summary>
        /// The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ListenerRule.Name' is not present");
            }
        }

        /// <summary>
        /// The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("priority", "_mUnknown_Priority")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Priority;
        private bool _mUnknown_Priority;
        public int? Priority
        {
            get
            {
                if (!_mUnknown_Priority) return _mValue_Priority;
                throw new UndeferrableValueException("Value 'ListenerRule.Priority' is not present");
            }
        }

        /// <summary>
        /// Unique identifier for the listener rule.
        /// </summary>
        [PolicyResourceProperty("ruleId", "_mUnknown_RuleId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RuleId;
        private bool _mUnknown_RuleId;
        public string? RuleId
        {
            get
            {
                if (!_mUnknown_RuleId) return _mValue_RuleId;
                throw new UndeferrableValueException("Value 'ListenerRule.RuleId' is not present");
            }
        }

        /// <summary>
        /// The ID or Amazon Resource Identifier (ARN) of the service.
        /// </summary>
        [PolicyResourceProperty("serviceIdentifier", "_mUnknown_ServiceIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceIdentifier;
        private bool _mUnknown_ServiceIdentifier;
        public string? ServiceIdentifier
        {
            get
            {
                if (!_mUnknown_ServiceIdentifier) return _mValue_ServiceIdentifier;
                throw new UndeferrableValueException("Value 'ListenerRule.ServiceIdentifier' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ListenerRule.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ListenerRule.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:vpclattice/listenerRule:ListenerRule")]
    public sealed class ListenerRuleArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The action for the listener rule.
        /// </summary>
        [PolicyResourceProperty("action", "_mUnknown_Action")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ListenerRuleActionArgs? _mValue_Action;
        private bool _mUnknown_Action;
        public Inputs.ListenerRuleActionArgs? Action
        {
            get
            {
                if (!_mUnknown_Action) return _mValue_Action;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Action' is not present");
            }
        }

        /// <summary>
        /// The ID or Amazon Resource Name (ARN) of the listener.
        /// </summary>
        [PolicyResourceProperty("listenerIdentifier", "_mUnknown_ListenerIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ListenerIdentifier;
        private bool _mUnknown_ListenerIdentifier;
        public string? ListenerIdentifier
        {
            get
            {
                if (!_mUnknown_ListenerIdentifier) return _mValue_ListenerIdentifier;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.ListenerIdentifier' is not present");
            }
        }

        /// <summary>
        /// The rule match.
        /// </summary>
        [PolicyResourceProperty("match", "_mUnknown_Match")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ListenerRuleMatchArgs? _mValue_Match;
        private bool _mUnknown_Match;
        public Inputs.ListenerRuleMatchArgs? Match
        {
            get
            {
                if (!_mUnknown_Match) return _mValue_Match;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Match' is not present");
            }
        }

        /// <summary>
        /// The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("priority", "_mUnknown_Priority")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Priority;
        private bool _mUnknown_Priority;
        public int? Priority
        {
            get
            {
                if (!_mUnknown_Priority) return _mValue_Priority;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Priority' is not present");
            }
        }

        /// <summary>
        /// The ID or Amazon Resource Identifier (ARN) of the service.
        /// </summary>
        [PolicyResourceProperty("serviceIdentifier", "_mUnknown_ServiceIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceIdentifier;
        private bool _mUnknown_ServiceIdentifier;
        public string? ServiceIdentifier
        {
            get
            {
                if (!_mUnknown_ServiceIdentifier) return _mValue_ServiceIdentifier;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.ServiceIdentifier' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Tags' is not present");
            }
        }
    }
}
