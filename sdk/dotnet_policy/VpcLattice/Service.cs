// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VpcLattice
{
    [PolicyResourceType("aws:vpclattice/service:Service")]
    public sealed class Service : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the service.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Type of IAM policy. Either `NONE` or `AWS_IAM`.
        /// </summary>
        [Input("authType")]
        public string? AuthType;

        /// <summary>
        /// Amazon Resource Name (ARN) of the certificate.
        /// </summary>
        [Input("certificateArn")]
        public string? CertificateArn;

        /// <summary>
        /// Custom domain name of the service.
        /// </summary>
        [Input("customDomainName")]
        public string? CustomDomainName;

        /// <summary>
        /// DNS name of the service.
        /// </summary>
        [Input("dnsEntries")]
        public List<ServiceDnsEntry>? DnsEntries;

        /// <summary>
        /// Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Status of the service.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
