// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VpcLattice
{
    [PolicyResourceType("aws:vpclattice/targetGroup:TargetGroup")]
    public sealed class TargetGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the target group.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'TargetGroup.Arn' is not present");
            }
        }

        /// <summary>
        /// The target group configuration.
        /// </summary>
        [PolicyResourceProperty("config", "_mUnknown_Config")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.TargetGroupConfig? _mValue_Config;
        private bool _mUnknown_Config;
        public Outputs.TargetGroupConfig? Config
        {
            get
            {
                if (!_mUnknown_Config) return _mValue_Config;
                throw new UndeferrableValueException("Value 'TargetGroup.Config' is not present");
            }
        }

        /// <summary>
        /// The name of the target group. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'TargetGroup.Name' is not present");
            }
        }

        /// <summary>
        /// Status of the target group.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'TargetGroup.Status' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'TargetGroup.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'TargetGroup.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The type of target group. Valid Values are `IP` | `LAMBDA` | `INSTANCE` | `ALB`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'TargetGroup.Type' is not present");
            }
        }
    }

    [PolicyResourceType("aws:vpclattice/targetGroup:TargetGroup")]
    public sealed class TargetGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The target group configuration.
        /// </summary>
        [PolicyResourceProperty("config", "_mUnknown_Config")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.TargetGroupConfigArgs? _mValue_Config;
        private bool _mUnknown_Config;
        public Inputs.TargetGroupConfigArgs? Config
        {
            get
            {
                if (!_mUnknown_Config) return _mValue_Config;
                throw new UndeferrableValueException("Value 'TargetGroupArgs.Config' is not present");
            }
        }

        /// <summary>
        /// The name of the target group. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'TargetGroupArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'TargetGroupArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The type of target group. Valid Values are `IP` | `LAMBDA` | `INSTANCE` | `ALB`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'TargetGroupArgs.Type' is not present");
            }
        }
    }
}
