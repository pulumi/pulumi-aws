// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue
{
    [PolicyResourceType("aws:glue/trigger:Trigger")]
    public sealed class Trigger : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// List of actions initiated by this trigger when it fires. See Actions Below.
        /// </summary>
        [Input("actions")]
        public List<TriggerAction>? Actions;

        /// <summary>
        /// Amazon Resource Name (ARN) of Glue Trigger
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A description of the new trigger.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Start the trigger. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled;

        /// <summary>
        /// Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires. See Event Batching Condition.
        /// </summary>
        [Input("eventBatchingConditions")]
        public List<TriggerEventBatchingCondition>? EventBatchingConditions;

        /// <summary>
        /// The name of the trigger.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// A predicate to specify when the new trigger should fire. Required when trigger type is `CONDITIONAL`. See Predicate Below.
        /// </summary>
        [Input("predicate")]
        public TriggerPredicate? Predicate;

        /// <summary>
        /// A cron expression used to specify the schedule. [Time-Based Schedules for Jobs and Crawlers](https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html)
        /// </summary>
        [Input("schedule")]
        public string? Schedule;

        /// <summary>
        /// Set to true to start `SCHEDULED` and `CONDITIONAL` triggers when created. True is not supported for `ON_DEMAND` triggers.
        /// </summary>
        [Input("startOnCreation")]
        public bool? StartOnCreation;

        /// <summary>
        /// The current state of the trigger.
        /// </summary>
        [Input("state")]
        public string? State;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The type of trigger. Valid values are `CONDITIONAL`, `EVENT`, `ON_DEMAND`, and `SCHEDULED`.
        /// </summary>
        [Input("type")]
        public string? Type;

        /// <summary>
        /// A workflow to which the trigger should be associated to. Every workflow graph (DAG) needs a starting trigger (`ON_DEMAND` or `SCHEDULED` type) and can contain multiple additional `CONDITIONAL` triggers.
        /// </summary>
        [Input("workflowName")]
        public string? WorkflowName;
    }
}
