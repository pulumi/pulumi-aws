// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue
{
    [PolicyResourceType("aws:glue/schema:Schema")]
    public sealed class Schema : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the schema.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The compatibility mode of the schema. Values values are: `NONE`, `DISABLED`, `BACKWARD`, `BACKWARD_ALL`, `FORWARD`, `FORWARD_ALL`, `FULL`, and `FULL_ALL`.
        /// </summary>
        [Input("compatibility")]
        public string? Compatibility;

        /// <summary>
        /// The data format of the schema definition. Valid values are `AVRO`, `JSON` and `PROTOBUF`.
        /// </summary>
        [Input("dataFormat")]
        public string? DataFormat;

        /// <summary>
        /// A description of the schema.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The latest version of the schema associated with the returned schema definition.
        /// </summary>
        [Input("latestSchemaVersion")]
        public int? LatestSchemaVersion;

        /// <summary>
        /// The next version of the schema associated with the returned schema definition.
        /// </summary>
        [Input("nextSchemaVersion")]
        public int? NextSchemaVersion;

        /// <summary>
        /// The ARN of the Glue Registry to create the schema in.
        /// </summary>
        [Input("registryArn")]
        public string? RegistryArn;

        /// <summary>
        /// The name of the Glue Registry.
        /// </summary>
        [Input("registryName")]
        public string? RegistryName;

        /// <summary>
        /// The version number of the checkpoint (the last time the compatibility mode was changed).
        /// </summary>
        [Input("schemaCheckpoint")]
        public int? SchemaCheckpoint;

        /// <summary>
        /// The schema definition using the `data_format` setting for `schema_name`.
        /// </summary>
        [Input("schemaDefinition")]
        public string? SchemaDefinition;

        /// <summary>
        /// The Name of the schema.
        /// </summary>
        [Input("schemaName")]
        public string? SchemaName;

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
