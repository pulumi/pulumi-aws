// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue
{
    [PolicyResourceType("aws:glue/classifier:Classifier")]
    public sealed class Classifier : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// A classifier for CSV content. Defined below.
        /// </summary>
        [PolicyResourceProperty("csvClassifier", "_mUnknown_CsvClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ClassifierCsvClassifier? _mValue_CsvClassifier;
        private bool _mUnknown_CsvClassifier;
        public Outputs.ClassifierCsvClassifier? CsvClassifier
        {
            get
            {
                if (!_mUnknown_CsvClassifier) return _mValue_CsvClassifier;
                throw new UndeferrableValueException("Value 'Classifier.CsvClassifier' is not present");
            }
        }

        /// <summary>
        /// A classifier that uses grok patterns. Defined below.
        /// </summary>
        [PolicyResourceProperty("grokClassifier", "_mUnknown_GrokClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ClassifierGrokClassifier? _mValue_GrokClassifier;
        private bool _mUnknown_GrokClassifier;
        public Outputs.ClassifierGrokClassifier? GrokClassifier
        {
            get
            {
                if (!_mUnknown_GrokClassifier) return _mValue_GrokClassifier;
                throw new UndeferrableValueException("Value 'Classifier.GrokClassifier' is not present");
            }
        }

        /// <summary>
        /// A classifier for JSON content. Defined below.
        /// </summary>
        [PolicyResourceProperty("jsonClassifier", "_mUnknown_JsonClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ClassifierJsonClassifier? _mValue_JsonClassifier;
        private bool _mUnknown_JsonClassifier;
        public Outputs.ClassifierJsonClassifier? JsonClassifier
        {
            get
            {
                if (!_mUnknown_JsonClassifier) return _mValue_JsonClassifier;
                throw new UndeferrableValueException("Value 'Classifier.JsonClassifier' is not present");
            }
        }

        /// <summary>
        /// The name of the classifier.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Classifier.Name' is not present");
            }
        }

        /// <summary>
        /// A classifier for XML content. Defined below.
        /// </summary>
        [PolicyResourceProperty("xmlClassifier", "_mUnknown_XmlClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ClassifierXmlClassifier? _mValue_XmlClassifier;
        private bool _mUnknown_XmlClassifier;
        public Outputs.ClassifierXmlClassifier? XmlClassifier
        {
            get
            {
                if (!_mUnknown_XmlClassifier) return _mValue_XmlClassifier;
                throw new UndeferrableValueException("Value 'Classifier.XmlClassifier' is not present");
            }
        }
    }

    [PolicyResourceType("aws:glue/classifier:Classifier")]
    public sealed class ClassifierArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A classifier for CSV content. Defined below.
        /// </summary>
        [PolicyResourceProperty("csvClassifier", "_mUnknown_CsvClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ClassifierCsvClassifierArgs? _mValue_CsvClassifier;
        private bool _mUnknown_CsvClassifier;
        public Inputs.ClassifierCsvClassifierArgs? CsvClassifier
        {
            get
            {
                if (!_mUnknown_CsvClassifier) return _mValue_CsvClassifier;
                throw new UndeferrableValueException("Value 'ClassifierArgs.CsvClassifier' is not present");
            }
        }

        /// <summary>
        /// A classifier that uses grok patterns. Defined below.
        /// </summary>
        [PolicyResourceProperty("grokClassifier", "_mUnknown_GrokClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ClassifierGrokClassifierArgs? _mValue_GrokClassifier;
        private bool _mUnknown_GrokClassifier;
        public Inputs.ClassifierGrokClassifierArgs? GrokClassifier
        {
            get
            {
                if (!_mUnknown_GrokClassifier) return _mValue_GrokClassifier;
                throw new UndeferrableValueException("Value 'ClassifierArgs.GrokClassifier' is not present");
            }
        }

        /// <summary>
        /// A classifier for JSON content. Defined below.
        /// </summary>
        [PolicyResourceProperty("jsonClassifier", "_mUnknown_JsonClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ClassifierJsonClassifierArgs? _mValue_JsonClassifier;
        private bool _mUnknown_JsonClassifier;
        public Inputs.ClassifierJsonClassifierArgs? JsonClassifier
        {
            get
            {
                if (!_mUnknown_JsonClassifier) return _mValue_JsonClassifier;
                throw new UndeferrableValueException("Value 'ClassifierArgs.JsonClassifier' is not present");
            }
        }

        /// <summary>
        /// The name of the classifier.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ClassifierArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A classifier for XML content. Defined below.
        /// </summary>
        [PolicyResourceProperty("xmlClassifier", "_mUnknown_XmlClassifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ClassifierXmlClassifierArgs? _mValue_XmlClassifier;
        private bool _mUnknown_XmlClassifier;
        public Inputs.ClassifierXmlClassifierArgs? XmlClassifier
        {
            get
            {
                if (!_mUnknown_XmlClassifier) return _mValue_XmlClassifier;
                throw new UndeferrableValueException("Value 'ClassifierArgs.XmlClassifier' is not present");
            }
        }
    }
}
