// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue.Outputs
{
    public sealed class JobSourceControlDetails
    {
        /// <summary>
        /// The type of authentication, which can be an authentication token stored in Amazon Web Services Secrets Manager, or a personal access token. Valid values are: `PERSONAL_ACCESS_TOKEN` and `AWS_SECRETS_MANAGER`.
        /// </summary>
        [PolicyResourceProperty("authStrategy", "_mUnknown_AuthStrategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuthStrategy;
        private bool _mUnknown_AuthStrategy;
        public string? AuthStrategy
        {
            get
            {
                if (!_mUnknown_AuthStrategy) return _mValue_AuthStrategy;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.AuthStrategy' is not present");
            }
        }

        /// <summary>
        /// The value of an authorization token.
        /// </summary>
        [PolicyResourceProperty("authToken", "_mUnknown_AuthToken")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuthToken;
        private bool _mUnknown_AuthToken;
        public string? AuthToken
        {
            get
            {
                if (!_mUnknown_AuthToken) return _mValue_AuthToken;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.AuthToken' is not present");
            }
        }

        /// <summary>
        /// A branch in the remote repository.
        /// </summary>
        [PolicyResourceProperty("branch", "_mUnknown_Branch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Branch;
        private bool _mUnknown_Branch;
        public string? Branch
        {
            get
            {
                if (!_mUnknown_Branch) return _mValue_Branch;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.Branch' is not present");
            }
        }

        /// <summary>
        /// A folder in the remote repository.
        /// </summary>
        [PolicyResourceProperty("folder", "_mUnknown_Folder")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Folder;
        private bool _mUnknown_Folder;
        public string? Folder
        {
            get
            {
                if (!_mUnknown_Folder) return _mValue_Folder;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.Folder' is not present");
            }
        }

        /// <summary>
        /// The last commit ID for a commit in the remote repository.
        /// </summary>
        [PolicyResourceProperty("lastCommitId", "_mUnknown_LastCommitId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastCommitId;
        private bool _mUnknown_LastCommitId;
        public string? LastCommitId
        {
            get
            {
                if (!_mUnknown_LastCommitId) return _mValue_LastCommitId;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.LastCommitId' is not present");
            }
        }

        /// <summary>
        /// The owner of the remote repository that contains the job artifacts.
        /// </summary>
        [PolicyResourceProperty("owner", "_mUnknown_Owner")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Owner;
        private bool _mUnknown_Owner;
        public string? Owner
        {
            get
            {
                if (!_mUnknown_Owner) return _mValue_Owner;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.Owner' is not present");
            }
        }

        /// <summary>
        /// The provider for the remote repository. Valid values are: `GITHUB`, `GITLAB`, `BITBUCKET`, and `AWS_CODE_COMMIT`.
        /// </summary>
        [PolicyResourceProperty("provider", "_mUnknown_Provider")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Provider;
        private bool _mUnknown_Provider;
        public string? Provider
        {
            get
            {
                if (!_mUnknown_Provider) return _mValue_Provider;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.Provider' is not present");
            }
        }

        /// <summary>
        /// The name of the remote repository that contains the job artifacts.
        /// </summary>
        [PolicyResourceProperty("repository", "_mUnknown_Repository")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Repository;
        private bool _mUnknown_Repository;
        public string? Repository
        {
            get
            {
                if (!_mUnknown_Repository) return _mValue_Repository;
                throw new UndeferrableValueException("Value 'JobSourceControlDetails.Repository' is not present");
            }
        }
    }
}
