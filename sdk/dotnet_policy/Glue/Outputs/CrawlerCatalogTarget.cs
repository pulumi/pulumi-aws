// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue.Outputs
{
    public sealed class CrawlerCatalogTarget
    {
        /// <summary>
        /// The name of the connection for an Amazon S3-backed Data Catalog table to be a target of the crawl when using a Catalog connection type paired with a `NETWORK` Connection type.
        /// </summary>
        [PolicyResourceProperty("connectionName", "_mUnknown_ConnectionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConnectionName;
        private bool _mUnknown_ConnectionName;
        public string? ConnectionName
        {
            get
            {
                if (!_mUnknown_ConnectionName) return _mValue_ConnectionName;
                throw new UndeferrableValueException("Value 'CrawlerCatalogTarget.ConnectionName' is not present");
            }
        }

        /// <summary>
        /// The name of the Glue database to be synchronized.
        /// </summary>
        [PolicyResourceProperty("databaseName", "_mUnknown_DatabaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DatabaseName;
        private bool _mUnknown_DatabaseName;
        public string? DatabaseName
        {
            get
            {
                if (!_mUnknown_DatabaseName) return _mValue_DatabaseName;
                throw new UndeferrableValueException("Value 'CrawlerCatalogTarget.DatabaseName' is not present");
            }
        }

        /// <summary>
        /// A valid Amazon SQS ARN.
        /// 
        /// &gt; **Note:** `deletion_behavior` of catalog target doesn't support `DEPRECATE_IN_DATABASE`.
        /// 
        /// &gt; **Note:** `configuration` for catalog target crawlers will have `{ ... "Grouping": { "TableGroupingPolicy": "CombineCompatibleSchemas"} }` by default.
        /// </summary>
        [PolicyResourceProperty("dlqEventQueueArn", "_mUnknown_DlqEventQueueArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DlqEventQueueArn;
        private bool _mUnknown_DlqEventQueueArn;
        public string? DlqEventQueueArn
        {
            get
            {
                if (!_mUnknown_DlqEventQueueArn) return _mValue_DlqEventQueueArn;
                throw new UndeferrableValueException("Value 'CrawlerCatalogTarget.DlqEventQueueArn' is not present");
            }
        }

        /// <summary>
        /// A valid Amazon SQS ARN.
        /// </summary>
        [PolicyResourceProperty("eventQueueArn", "_mUnknown_EventQueueArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EventQueueArn;
        private bool _mUnknown_EventQueueArn;
        public string? EventQueueArn
        {
            get
            {
                if (!_mUnknown_EventQueueArn) return _mValue_EventQueueArn;
                throw new UndeferrableValueException("Value 'CrawlerCatalogTarget.EventQueueArn' is not present");
            }
        }

        /// <summary>
        /// A list of catalog tables to be synchronized.
        /// </summary>
        [PolicyResourceProperty("tables", "_mUnknown_Tables")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Tables;
        private bool _mUnknown_Tables;
        public List<string>? Tables
        {
            get
            {
                if (!_mUnknown_Tables) return _mValue_Tables;
                throw new UndeferrableValueException("Value 'CrawlerCatalogTarget.Tables' is not present");
            }
        }
    }
}
