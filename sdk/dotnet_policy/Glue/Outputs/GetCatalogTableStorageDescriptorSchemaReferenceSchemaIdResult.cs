// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue.Outputs
{
    public sealed class GetCatalogTableStorageDescriptorSchemaReferenceSchemaIdResult
    {
        /// <summary>
        /// Name of the schema registry that contains the schema.
        /// </summary>
        [PolicyResourceProperty("registryName", "_mUnknown_RegistryName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RegistryName;
        private bool _mUnknown_RegistryName;
        public string? RegistryName
        {
            get
            {
                if (!_mUnknown_RegistryName) return _mValue_RegistryName;
                throw new UndeferrableValueException("Value 'GetCatalogTableStorageDescriptorSchemaReferenceSchemaIdResult.RegistryName' is not present");
            }
        }

        /// <summary>
        /// ARN of the schema.
        /// </summary>
        [PolicyResourceProperty("schemaArn", "_mUnknown_SchemaArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SchemaArn;
        private bool _mUnknown_SchemaArn;
        public string? SchemaArn
        {
            get
            {
                if (!_mUnknown_SchemaArn) return _mValue_SchemaArn;
                throw new UndeferrableValueException("Value 'GetCatalogTableStorageDescriptorSchemaReferenceSchemaIdResult.SchemaArn' is not present");
            }
        }

        /// <summary>
        /// Name of the schema.
        /// </summary>
        [PolicyResourceProperty("schemaName", "_mUnknown_SchemaName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SchemaName;
        private bool _mUnknown_SchemaName;
        public string? SchemaName
        {
            get
            {
                if (!_mUnknown_SchemaName) return _mValue_SchemaName;
                throw new UndeferrableValueException("Value 'GetCatalogTableStorageDescriptorSchemaReferenceSchemaIdResult.SchemaName' is not present");
            }
        }
    }
}
