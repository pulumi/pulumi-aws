// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue.Outputs
{
    public sealed class CrawlerDynamodbTarget
    {
        /// <summary>
        /// The name of the DynamoDB table to crawl.
        /// </summary>
        [PolicyResourceProperty("path", "_mUnknown_Path")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Path;
        private bool _mUnknown_Path;
        public string? Path
        {
            get
            {
                if (!_mUnknown_Path) return _mValue_Path;
                throw new UndeferrableValueException("Value 'CrawlerDynamodbTarget.Path' is not present");
            }
        }

        /// <summary>
        /// Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to `true`.
        /// </summary>
        [PolicyResourceProperty("scanAll", "_mUnknown_ScanAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ScanAll;
        private bool _mUnknown_ScanAll;
        public bool? ScanAll
        {
            get
            {
                if (!_mUnknown_ScanAll) return _mValue_ScanAll;
                throw new UndeferrableValueException("Value 'CrawlerDynamodbTarget.ScanAll' is not present");
            }
        }

        /// <summary>
        /// The percentage of the configured read capacity units to use by the AWS Glue crawler. The valid values are null or a value between 0.1 to 1.5.
        /// </summary>
        [PolicyResourceProperty("scanRate", "_mUnknown_ScanRate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_ScanRate;
        private bool _mUnknown_ScanRate;
        public double? ScanRate
        {
            get
            {
                if (!_mUnknown_ScanRate) return _mValue_ScanRate;
                throw new UndeferrableValueException("Value 'CrawlerDynamodbTarget.ScanRate' is not present");
            }
        }
    }
}
