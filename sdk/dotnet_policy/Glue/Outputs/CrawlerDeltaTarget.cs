// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue.Outputs
{
    public sealed class CrawlerDeltaTarget
    {
        /// <summary>
        /// The name of the connection to use to connect to the Delta table target.
        /// </summary>
        [PolicyResourceProperty("connectionName", "_mUnknown_ConnectionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConnectionName;
        private bool _mUnknown_ConnectionName;
        public string? ConnectionName
        {
            get
            {
                if (!_mUnknown_ConnectionName) return _mValue_ConnectionName;
                throw new UndeferrableValueException("Value 'CrawlerDeltaTarget.ConnectionName' is not present");
            }
        }

        /// <summary>
        /// Specifies whether the crawler will create native tables, to allow integration with query engines that support querying of the Delta transaction log directly.
        /// </summary>
        [PolicyResourceProperty("createNativeDeltaTable", "_mUnknown_CreateNativeDeltaTable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_CreateNativeDeltaTable;
        private bool _mUnknown_CreateNativeDeltaTable;
        public bool? CreateNativeDeltaTable
        {
            get
            {
                if (!_mUnknown_CreateNativeDeltaTable) return _mValue_CreateNativeDeltaTable;
                throw new UndeferrableValueException("Value 'CrawlerDeltaTarget.CreateNativeDeltaTable' is not present");
            }
        }

        /// <summary>
        /// A list of the Amazon S3 paths to the Delta tables.
        /// </summary>
        [PolicyResourceProperty("deltaTables", "_mUnknown_DeltaTables")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DeltaTables;
        private bool _mUnknown_DeltaTables;
        public List<string>? DeltaTables
        {
            get
            {
                if (!_mUnknown_DeltaTables) return _mValue_DeltaTables;
                throw new UndeferrableValueException("Value 'CrawlerDeltaTarget.DeltaTables' is not present");
            }
        }

        /// <summary>
        /// Specifies whether to write the manifest files to the Delta table path.
        /// </summary>
        [PolicyResourceProperty("writeManifest", "_mUnknown_WriteManifest")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_WriteManifest;
        private bool _mUnknown_WriteManifest;
        public bool? WriteManifest
        {
            get
            {
                if (!_mUnknown_WriteManifest) return _mValue_WriteManifest;
                throw new UndeferrableValueException("Value 'CrawlerDeltaTarget.WriteManifest' is not present");
            }
        }
    }
}
