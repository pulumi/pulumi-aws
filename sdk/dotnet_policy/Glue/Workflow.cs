// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue
{
    [PolicyResourceType("aws:glue/workflow:Workflow")]
    public sealed class Workflow : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of Glue Workflow
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A map of default run properties for this workflow. These properties are passed to all jobs associated to the workflow.
        /// </summary>
        [Input("defaultRunProperties")]
        public Dictionary<string, string>? DefaultRunProperties;

        /// <summary>
        /// Description of the workflow.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Prevents exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.
        /// </summary>
        [Input("maxConcurrentRuns")]
        public int? MaxConcurrentRuns;

        /// <summary>
        /// The name you assign to this workflow.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
