// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue
{
    [PolicyResourceType("aws:glue/ClassifierCsvClassifier:ClassifierCsvClassifier")]
    public sealed class ClassifierCsvClassifier
    {
        /// <summary>
        /// Enables the processing of files that contain only one column.
        /// </summary>
        [Input("allowSingleColumn")]
        public bool? AllowSingleColumn;

        /// <summary>
        /// Indicates whether the CSV file contains a header. This can be one of "ABSENT", "PRESENT", or "UNKNOWN".
        /// </summary>
        [Input("containsHeader")]
        public string? ContainsHeader;

        /// <summary>
        /// Enables the custom datatype to be configured.
        /// </summary>
        [Input("customDatatypeConfigured")]
        public bool? CustomDatatypeConfigured;

        /// <summary>
        /// A list of supported custom datatypes. Valid values are `BINARY`, `BOOLEAN`, `DATE`, `DECIMAL`, `DOUBLE`, `FLOAT`, `INT`, `LONG`, `SHORT`, `STRING`, `TIMESTAMP`.
        /// </summary>
        [Input("customDatatypes")]
        public List<string>? CustomDatatypes;

        /// <summary>
        /// The delimiter used in the CSV to separate columns.
        /// </summary>
        [Input("delimiter")]
        public string? Delimiter;

        /// <summary>
        /// Specifies whether to trim column values.
        /// </summary>
        [Input("disableValueTrimming")]
        public bool? DisableValueTrimming;

        /// <summary>
        /// A list of strings representing column names.
        /// </summary>
        [Input("headers")]
        public List<string>? Headers;

        /// <summary>
        /// A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.
        /// </summary>
        [Input("quoteSymbol")]
        public string? QuoteSymbol;

        /// <summary>
        /// The SerDe for processing CSV. Valid values are `OpenCSVSerDe`, `LazySimpleSerDe`, `None`.
        /// </summary>
        [Input("serde")]
        public string? Serde;
    }
}
