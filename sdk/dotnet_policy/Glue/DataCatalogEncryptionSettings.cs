// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Glue
{
    [PolicyResourceType("aws:glue/dataCatalogEncryptionSettings:DataCatalogEncryptionSettings")]
    public sealed class DataCatalogEncryptionSettings : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ID of the Data Catalog to set the security configuration for. If none is provided, the AWS account ID is used by default.
        /// </summary>
        [PolicyResourceProperty("catalogId", "_mUnknown_CatalogId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CatalogId;
        private bool _mUnknown_CatalogId;
        public string? CatalogId
        {
            get
            {
                if (!_mUnknown_CatalogId) return _mValue_CatalogId;
                throw new UndeferrableValueException("Value 'DataCatalogEncryptionSettings.CatalogId' is not present");
            }
        }

        /// <summary>
        /// The security configuration to set. see Data Catalog Encryption Settings.
        /// </summary>
        [PolicyResourceProperty("dataCatalogEncryptionSettings", "_mUnknown_DataCatalogEncryptionSettingsConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DataCatalogEncryptionSettingsDataCatalogEncryptionSettings? _mValue_DataCatalogEncryptionSettingsConfig;
        private bool _mUnknown_DataCatalogEncryptionSettingsConfig;
        public Outputs.DataCatalogEncryptionSettingsDataCatalogEncryptionSettings? DataCatalogEncryptionSettingsConfig
        {
            get
            {
                if (!_mUnknown_DataCatalogEncryptionSettingsConfig) return _mValue_DataCatalogEncryptionSettingsConfig;
                throw new UndeferrableValueException("Value 'DataCatalogEncryptionSettings.DataCatalogEncryptionSettingsConfig' is not present");
            }
        }
    }

    [PolicyResourceType("aws:glue/dataCatalogEncryptionSettings:DataCatalogEncryptionSettings")]
    public sealed class DataCatalogEncryptionSettingsArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the Data Catalog to set the security configuration for. If none is provided, the AWS account ID is used by default.
        /// </summary>
        [PolicyResourceProperty("catalogId", "_mUnknown_CatalogId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CatalogId;
        private bool _mUnknown_CatalogId;
        public string? CatalogId
        {
            get
            {
                if (!_mUnknown_CatalogId) return _mValue_CatalogId;
                throw new UndeferrableValueException("Value 'DataCatalogEncryptionSettingsArgs.CatalogId' is not present");
            }
        }

        /// <summary>
        /// The security configuration to set. see Data Catalog Encryption Settings.
        /// </summary>
        [PolicyResourceProperty("dataCatalogEncryptionSettings", "_mUnknown_DataCatalogEncryptionSettingsConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs? _mValue_DataCatalogEncryptionSettingsConfig;
        private bool _mUnknown_DataCatalogEncryptionSettingsConfig;
        public Inputs.DataCatalogEncryptionSettingsDataCatalogEncryptionSettingsArgs? DataCatalogEncryptionSettingsConfig
        {
            get
            {
                if (!_mUnknown_DataCatalogEncryptionSettingsConfig) return _mValue_DataCatalogEncryptionSettingsConfig;
                throw new UndeferrableValueException("Value 'DataCatalogEncryptionSettingsArgs.DataCatalogEncryptionSettingsConfig' is not present");
            }
        }
    }
}
