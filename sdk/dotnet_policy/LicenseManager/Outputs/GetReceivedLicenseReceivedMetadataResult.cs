// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LicenseManager.Outputs
{
    public sealed class GetReceivedLicenseReceivedMetadataResult
    {
        /// <summary>
        /// A list of allowed operations.
        /// </summary>
        [PolicyResourceProperty("allowedOperations", "_mUnknown_AllowedOperations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AllowedOperations;
        private bool _mUnknown_AllowedOperations;
        public List<string>? AllowedOperations
        {
            get
            {
                if (!_mUnknown_AllowedOperations) return _mValue_AllowedOperations;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseReceivedMetadataResult.AllowedOperations' is not present");
            }
        }

        /// <summary>
        /// Received status.
        /// </summary>
        [PolicyResourceProperty("receivedStatus", "_mUnknown_ReceivedStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReceivedStatus;
        private bool _mUnknown_ReceivedStatus;
        public string? ReceivedStatus
        {
            get
            {
                if (!_mUnknown_ReceivedStatus) return _mValue_ReceivedStatus;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseReceivedMetadataResult.ReceivedStatus' is not present");
            }
        }

        /// <summary>
        /// Received status reason.
        /// </summary>
        [PolicyResourceProperty("receivedStatusReason", "_mUnknown_ReceivedStatusReason")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReceivedStatusReason;
        private bool _mUnknown_ReceivedStatusReason;
        public string? ReceivedStatusReason
        {
            get
            {
                if (!_mUnknown_ReceivedStatusReason) return _mValue_ReceivedStatusReason;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseReceivedMetadataResult.ReceivedStatusReason' is not present");
            }
        }
    }
}
