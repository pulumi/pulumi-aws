// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LicenseManager.Outputs
{
    public sealed class GetReceivedLicenseIssuerResult
    {
        /// <summary>
        /// Issuer key fingerprint.
        /// </summary>
        [PolicyResourceProperty("keyFingerprint", "_mUnknown_KeyFingerprint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KeyFingerprint;
        private bool _mUnknown_KeyFingerprint;
        public string? KeyFingerprint
        {
            get
            {
                if (!_mUnknown_KeyFingerprint) return _mValue_KeyFingerprint;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseIssuerResult.KeyFingerprint' is not present");
            }
        }

        /// <summary>
        /// The key name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseIssuerResult.Name' is not present");
            }
        }

        /// <summary>
        /// Asymmetric KMS key from AWS Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.
        /// </summary>
        [PolicyResourceProperty("signKey", "_mUnknown_SignKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SignKey;
        private bool _mUnknown_SignKey;
        public string? SignKey
        {
            get
            {
                if (!_mUnknown_SignKey) return _mValue_SignKey;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseIssuerResult.SignKey' is not present");
            }
        }
    }
}
