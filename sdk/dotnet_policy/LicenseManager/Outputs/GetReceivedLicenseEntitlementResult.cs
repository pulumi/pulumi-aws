// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LicenseManager.Outputs
{
    public sealed class GetReceivedLicenseEntitlementResult
    {
        /// <summary>
        /// Indicates whether check-ins are allowed.
        /// </summary>
        [PolicyResourceProperty("allowCheckIn", "_mUnknown_AllowCheckIn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllowCheckIn;
        private bool _mUnknown_AllowCheckIn;
        public bool? AllowCheckIn
        {
            get
            {
                if (!_mUnknown_AllowCheckIn) return _mValue_AllowCheckIn;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseEntitlementResult.AllowCheckIn' is not present");
            }
        }

        /// <summary>
        /// Maximum entitlement count. Use if the unit is not None.
        /// </summary>
        [PolicyResourceProperty("maxCount", "_mUnknown_MaxCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxCount;
        private bool _mUnknown_MaxCount;
        public int? MaxCount
        {
            get
            {
                if (!_mUnknown_MaxCount) return _mValue_MaxCount;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseEntitlementResult.MaxCount' is not present");
            }
        }

        /// <summary>
        /// The key name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseEntitlementResult.Name' is not present");
            }
        }

        /// <summary>
        /// Indicates whether overages are allowed.
        /// </summary>
        [PolicyResourceProperty("overage", "_mUnknown_Overage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Overage;
        private bool _mUnknown_Overage;
        public bool? Overage
        {
            get
            {
                if (!_mUnknown_Overage) return _mValue_Overage;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseEntitlementResult.Overage' is not present");
            }
        }

        /// <summary>
        /// Entitlement unit.
        /// </summary>
        [PolicyResourceProperty("unit", "_mUnknown_Unit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Unit;
        private bool _mUnknown_Unit;
        public string? Unit
        {
            get
            {
                if (!_mUnknown_Unit) return _mValue_Unit;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseEntitlementResult.Unit' is not present");
            }
        }

        /// <summary>
        /// The value.
        /// </summary>
        [PolicyResourceProperty("value", "_mUnknown_Value")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Value;
        private bool _mUnknown_Value;
        public string? Value
        {
            get
            {
                if (!_mUnknown_Value) return _mValue_Value;
                throw new UndeferrableValueException("Value 'GetReceivedLicenseEntitlementResult.Value' is not present");
            }
        }
    }
}
