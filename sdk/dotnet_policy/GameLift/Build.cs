// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GameLift
{
    [PolicyResourceType("aws:gamelift/build:Build")]
    public sealed class Build : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// GameLift Build ARN.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Build.Arn' is not present");
            }
        }

        /// <summary>
        /// Name of the build
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Build.Name' is not present");
            }
        }

        /// <summary>
        /// Operating system that the game server binaries are built to run on. Valid values: `WINDOWS_2012`, `AMAZON_LINUX`, `AMAZON_LINUX_2`, `WINDOWS_2016`, `AMAZON_LINUX_2023`.
        /// </summary>
        [PolicyResourceProperty("operatingSystem", "_mUnknown_OperatingSystem")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OperatingSystem;
        private bool _mUnknown_OperatingSystem;
        public string? OperatingSystem
        {
            get
            {
                if (!_mUnknown_OperatingSystem) return _mValue_OperatingSystem;
                throw new UndeferrableValueException("Value 'Build.OperatingSystem' is not present");
            }
        }

        /// <summary>
        /// Information indicating where your game build files are stored. See below.
        /// </summary>
        [PolicyResourceProperty("storageLocation", "_mUnknown_StorageLocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.BuildStorageLocation? _mValue_StorageLocation;
        private bool _mUnknown_StorageLocation;
        public Outputs.BuildStorageLocation? StorageLocation
        {
            get
            {
                if (!_mUnknown_StorageLocation) return _mValue_StorageLocation;
                throw new UndeferrableValueException("Value 'Build.StorageLocation' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Build.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Build.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Version that is associated with this build.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'Build.Version' is not present");
            }
        }
    }

    [PolicyResourceType("aws:gamelift/build:Build")]
    public sealed class BuildArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the build
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'BuildArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Operating system that the game server binaries are built to run on. Valid values: `WINDOWS_2012`, `AMAZON_LINUX`, `AMAZON_LINUX_2`, `WINDOWS_2016`, `AMAZON_LINUX_2023`.
        /// </summary>
        [PolicyResourceProperty("operatingSystem", "_mUnknown_OperatingSystem")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OperatingSystem;
        private bool _mUnknown_OperatingSystem;
        public string? OperatingSystem
        {
            get
            {
                if (!_mUnknown_OperatingSystem) return _mValue_OperatingSystem;
                throw new UndeferrableValueException("Value 'BuildArgs.OperatingSystem' is not present");
            }
        }

        /// <summary>
        /// Information indicating where your game build files are stored. See below.
        /// </summary>
        [PolicyResourceProperty("storageLocation", "_mUnknown_StorageLocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.BuildStorageLocationArgs? _mValue_StorageLocation;
        private bool _mUnknown_StorageLocation;
        public Inputs.BuildStorageLocationArgs? StorageLocation
        {
            get
            {
                if (!_mUnknown_StorageLocation) return _mValue_StorageLocation;
                throw new UndeferrableValueException("Value 'BuildArgs.StorageLocation' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'BuildArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Version that is associated with this build.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'BuildArgs.Version' is not present");
            }
        }
    }
}
