// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GameLift.Inputs
{
    public sealed class FleetRuntimeConfigurationServerProcessArgs
    {
        /// <summary>
        /// Number of server processes using this configuration to run concurrently on an instance.
        /// </summary>
        [PolicyResourceProperty("concurrentExecutions", "_mUnknown_ConcurrentExecutions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ConcurrentExecutions;
        private bool _mUnknown_ConcurrentExecutions;
        public int? ConcurrentExecutions
        {
            get
            {
                if (!_mUnknown_ConcurrentExecutions) return _mValue_ConcurrentExecutions;
                throw new UndeferrableValueException("Value 'FleetRuntimeConfigurationServerProcessArgs.ConcurrentExecutions' is not present");
            }
        }

        /// <summary>
        /// Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\game`, and for Linux instances `/local/game`.
        /// </summary>
        [PolicyResourceProperty("launchPath", "_mUnknown_LaunchPath")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LaunchPath;
        private bool _mUnknown_LaunchPath;
        public string? LaunchPath
        {
            get
            {
                if (!_mUnknown_LaunchPath) return _mValue_LaunchPath;
                throw new UndeferrableValueException("Value 'FleetRuntimeConfigurationServerProcessArgs.LaunchPath' is not present");
            }
        }

        /// <summary>
        /// Optional list of parameters to pass to the server executable on launch.
        /// </summary>
        [PolicyResourceProperty("parameters", "_mUnknown_Parameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Parameters;
        private bool _mUnknown_Parameters;
        public string? Parameters
        {
            get
            {
                if (!_mUnknown_Parameters) return _mValue_Parameters;
                throw new UndeferrableValueException("Value 'FleetRuntimeConfigurationServerProcessArgs.Parameters' is not present");
            }
        }
    }
}
