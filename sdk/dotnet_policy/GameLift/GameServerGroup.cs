// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GameLift
{
    [PolicyResourceType("aws:gamelift/gameServerGroup:GameServerGroup")]
    public sealed class GameServerGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the GameLift Game Server Group.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'GameServerGroup.Arn' is not present");
            }
        }

        /// <summary>
        /// The ARN of the created EC2 Auto Scaling group.
        /// </summary>
        [PolicyResourceProperty("autoScalingGroupArn", "_mUnknown_AutoScalingGroupArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoScalingGroupArn;
        private bool _mUnknown_AutoScalingGroupArn;
        public string? AutoScalingGroupArn
        {
            get
            {
                if (!_mUnknown_AutoScalingGroupArn) return _mValue_AutoScalingGroupArn;
                throw new UndeferrableValueException("Value 'GameServerGroup.AutoScalingGroupArn' is not present");
            }
        }

        [PolicyResourceProperty("autoScalingPolicy", "_mUnknown_AutoScalingPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GameServerGroupAutoScalingPolicy? _mValue_AutoScalingPolicy;
        private bool _mUnknown_AutoScalingPolicy;
        public Outputs.GameServerGroupAutoScalingPolicy? AutoScalingPolicy
        {
            get
            {
                if (!_mUnknown_AutoScalingPolicy) return _mValue_AutoScalingPolicy;
                throw new UndeferrableValueException("Value 'GameServerGroup.AutoScalingPolicy' is not present");
            }
        }

        /// <summary>
        /// Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances.
        /// Valid values: `SPOT_ONLY`, `SPOT_PREFERRED`, `ON_DEMAND_ONLY`. Defaults to `SPOT_PREFERRED`.
        /// </summary>
        [PolicyResourceProperty("balancingStrategy", "_mUnknown_BalancingStrategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BalancingStrategy;
        private bool _mUnknown_BalancingStrategy;
        public string? BalancingStrategy
        {
            get
            {
                if (!_mUnknown_BalancingStrategy) return _mValue_BalancingStrategy;
                throw new UndeferrableValueException("Value 'GameServerGroup.BalancingStrategy' is not present");
            }
        }

        /// <summary>
        /// Name of the game server group.
        /// This value is used to generate unique ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server group.
        /// </summary>
        [PolicyResourceProperty("gameServerGroupName", "_mUnknown_GameServerGroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GameServerGroupName;
        private bool _mUnknown_GameServerGroupName;
        public string? GameServerGroupName
        {
            get
            {
                if (!_mUnknown_GameServerGroupName) return _mValue_GameServerGroupName;
                throw new UndeferrableValueException("Value 'GameServerGroup.GameServerGroupName' is not present");
            }
        }

        /// <summary>
        /// Indicates whether instances in the game server group are protected from early termination.
        /// Unprotected instances that have active game servers running might be terminated during a scale-down event,
        /// causing players to be dropped from the game.
        /// Protected instances cannot be terminated while there are active game servers running except in the event
        /// of a forced game server group deletion.
        /// Valid values: `NO_PROTECTION`, `FULL_PROTECTION`. Defaults to `NO_PROTECTION`.
        /// </summary>
        [PolicyResourceProperty("gameServerProtectionPolicy", "_mUnknown_GameServerProtectionPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GameServerProtectionPolicy;
        private bool _mUnknown_GameServerProtectionPolicy;
        public string? GameServerProtectionPolicy
        {
            get
            {
                if (!_mUnknown_GameServerProtectionPolicy) return _mValue_GameServerProtectionPolicy;
                throw new UndeferrableValueException("Value 'GameServerGroup.GameServerProtectionPolicy' is not present");
            }
        }

        [PolicyResourceProperty("instanceDefinitions", "_mUnknown_InstanceDefinitions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GameServerGroupInstanceDefinition>? _mValue_InstanceDefinitions;
        private bool _mUnknown_InstanceDefinitions;
        public List<Outputs.GameServerGroupInstanceDefinition>? InstanceDefinitions
        {
            get
            {
                if (!_mUnknown_InstanceDefinitions) return _mValue_InstanceDefinitions;
                throw new UndeferrableValueException("Value 'GameServerGroup.InstanceDefinitions' is not present");
            }
        }

        [PolicyResourceProperty("launchTemplate", "_mUnknown_LaunchTemplate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GameServerGroupLaunchTemplate? _mValue_LaunchTemplate;
        private bool _mUnknown_LaunchTemplate;
        public Outputs.GameServerGroupLaunchTemplate? LaunchTemplate
        {
            get
            {
                if (!_mUnknown_LaunchTemplate) return _mValue_LaunchTemplate;
                throw new UndeferrableValueException("Value 'GameServerGroup.LaunchTemplate' is not present");
            }
        }

        /// <summary>
        /// The maximum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.
        /// </summary>
        [PolicyResourceProperty("maxSize", "_mUnknown_MaxSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxSize;
        private bool _mUnknown_MaxSize;
        public int? MaxSize
        {
            get
            {
                if (!_mUnknown_MaxSize) return _mValue_MaxSize;
                throw new UndeferrableValueException("Value 'GameServerGroup.MaxSize' is not present");
            }
        }

        /// <summary>
        /// The minimum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale down the group below this minimum.
        /// </summary>
        [PolicyResourceProperty("minSize", "_mUnknown_MinSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MinSize;
        private bool _mUnknown_MinSize;
        public int? MinSize
        {
            get
            {
                if (!_mUnknown_MinSize) return _mValue_MinSize;
                throw new UndeferrableValueException("Value 'GameServerGroup.MinSize' is not present");
            }
        }

        /// <summary>
        /// ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'GameServerGroup.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'GameServerGroup.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'GameServerGroup.TagsAll' is not present");
            }
        }

        /// <summary>
        /// A list of VPC subnets to use with instances in the game server group.
        /// By default, all GameLift FleetIQ-supported Availability Zones are used.
        /// </summary>
        [PolicyResourceProperty("vpcSubnets", "_mUnknown_VpcSubnets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_VpcSubnets;
        private bool _mUnknown_VpcSubnets;
        public List<string>? VpcSubnets
        {
            get
            {
                if (!_mUnknown_VpcSubnets) return _mValue_VpcSubnets;
                throw new UndeferrableValueException("Value 'GameServerGroup.VpcSubnets' is not present");
            }
        }
    }

    [PolicyResourceType("aws:gamelift/gameServerGroup:GameServerGroup")]
    public sealed class GameServerGroupArgs : global::Pulumi.PolicyResourceInput
    {
        [PolicyResourceProperty("autoScalingPolicy", "_mUnknown_AutoScalingPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GameServerGroupAutoScalingPolicyArgs? _mValue_AutoScalingPolicy;
        private bool _mUnknown_AutoScalingPolicy;
        public Inputs.GameServerGroupAutoScalingPolicyArgs? AutoScalingPolicy
        {
            get
            {
                if (!_mUnknown_AutoScalingPolicy) return _mValue_AutoScalingPolicy;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.AutoScalingPolicy' is not present");
            }
        }

        /// <summary>
        /// Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances.
        /// Valid values: `SPOT_ONLY`, `SPOT_PREFERRED`, `ON_DEMAND_ONLY`. Defaults to `SPOT_PREFERRED`.
        /// </summary>
        [PolicyResourceProperty("balancingStrategy", "_mUnknown_BalancingStrategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BalancingStrategy;
        private bool _mUnknown_BalancingStrategy;
        public string? BalancingStrategy
        {
            get
            {
                if (!_mUnknown_BalancingStrategy) return _mValue_BalancingStrategy;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.BalancingStrategy' is not present");
            }
        }

        /// <summary>
        /// Name of the game server group.
        /// This value is used to generate unique ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server group.
        /// </summary>
        [PolicyResourceProperty("gameServerGroupName", "_mUnknown_GameServerGroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GameServerGroupName;
        private bool _mUnknown_GameServerGroupName;
        public string? GameServerGroupName
        {
            get
            {
                if (!_mUnknown_GameServerGroupName) return _mValue_GameServerGroupName;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.GameServerGroupName' is not present");
            }
        }

        /// <summary>
        /// Indicates whether instances in the game server group are protected from early termination.
        /// Unprotected instances that have active game servers running might be terminated during a scale-down event,
        /// causing players to be dropped from the game.
        /// Protected instances cannot be terminated while there are active game servers running except in the event
        /// of a forced game server group deletion.
        /// Valid values: `NO_PROTECTION`, `FULL_PROTECTION`. Defaults to `NO_PROTECTION`.
        /// </summary>
        [PolicyResourceProperty("gameServerProtectionPolicy", "_mUnknown_GameServerProtectionPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GameServerProtectionPolicy;
        private bool _mUnknown_GameServerProtectionPolicy;
        public string? GameServerProtectionPolicy
        {
            get
            {
                if (!_mUnknown_GameServerProtectionPolicy) return _mValue_GameServerProtectionPolicy;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.GameServerProtectionPolicy' is not present");
            }
        }

        [PolicyResourceProperty("instanceDefinitions", "_mUnknown_InstanceDefinitions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.GameServerGroupInstanceDefinitionArgs>? _mValue_InstanceDefinitions;
        private bool _mUnknown_InstanceDefinitions;
        public List<Inputs.GameServerGroupInstanceDefinitionArgs>? InstanceDefinitions
        {
            get
            {
                if (!_mUnknown_InstanceDefinitions) return _mValue_InstanceDefinitions;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.InstanceDefinitions' is not present");
            }
        }

        [PolicyResourceProperty("launchTemplate", "_mUnknown_LaunchTemplate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GameServerGroupLaunchTemplateArgs? _mValue_LaunchTemplate;
        private bool _mUnknown_LaunchTemplate;
        public Inputs.GameServerGroupLaunchTemplateArgs? LaunchTemplate
        {
            get
            {
                if (!_mUnknown_LaunchTemplate) return _mValue_LaunchTemplate;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.LaunchTemplate' is not present");
            }
        }

        /// <summary>
        /// The maximum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.
        /// </summary>
        [PolicyResourceProperty("maxSize", "_mUnknown_MaxSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxSize;
        private bool _mUnknown_MaxSize;
        public int? MaxSize
        {
            get
            {
                if (!_mUnknown_MaxSize) return _mValue_MaxSize;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.MaxSize' is not present");
            }
        }

        /// <summary>
        /// The minimum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale down the group below this minimum.
        /// </summary>
        [PolicyResourceProperty("minSize", "_mUnknown_MinSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MinSize;
        private bool _mUnknown_MinSize;
        public int? MinSize
        {
            get
            {
                if (!_mUnknown_MinSize) return _mValue_MinSize;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.MinSize' is not present");
            }
        }

        /// <summary>
        /// ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// A list of VPC subnets to use with instances in the game server group.
        /// By default, all GameLift FleetIQ-supported Availability Zones are used.
        /// </summary>
        [PolicyResourceProperty("vpcSubnets", "_mUnknown_VpcSubnets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_VpcSubnets;
        private bool _mUnknown_VpcSubnets;
        public List<string>? VpcSubnets
        {
            get
            {
                if (!_mUnknown_VpcSubnets) return _mValue_VpcSubnets;
                throw new UndeferrableValueException("Value 'GameServerGroupArgs.VpcSubnets' is not present");
            }
        }
    }
}
