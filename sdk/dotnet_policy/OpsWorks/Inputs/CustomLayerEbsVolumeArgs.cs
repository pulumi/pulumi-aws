// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpsWorks.Inputs
{
    public sealed class CustomLayerEbsVolumeArgs
    {
        /// <summary>
        /// Encrypt the volume.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public bool? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'CustomLayerEbsVolumeArgs.Encrypted' is not present");
            }
        }

        /// <summary>
        /// For PIOPS volumes, the IOPS per disk.
        /// </summary>
        [PolicyResourceProperty("iops", "_mUnknown_Iops")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Iops;
        private bool _mUnknown_Iops;
        public int? Iops
        {
            get
            {
                if (!_mUnknown_Iops) return _mValue_Iops;
                throw new UndeferrableValueException("Value 'CustomLayerEbsVolumeArgs.Iops' is not present");
            }
        }

        /// <summary>
        /// The path to mount the EBS volume on the layer's instances.
        /// </summary>
        [PolicyResourceProperty("mountPoint", "_mUnknown_MountPoint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MountPoint;
        private bool _mUnknown_MountPoint;
        public string? MountPoint
        {
            get
            {
                if (!_mUnknown_MountPoint) return _mValue_MountPoint;
                throw new UndeferrableValueException("Value 'CustomLayerEbsVolumeArgs.MountPoint' is not present");
            }
        }

        /// <summary>
        /// The number of disks to use for the EBS volume.
        /// </summary>
        [PolicyResourceProperty("numberOfDisks", "_mUnknown_NumberOfDisks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NumberOfDisks;
        private bool _mUnknown_NumberOfDisks;
        public int? NumberOfDisks
        {
            get
            {
                if (!_mUnknown_NumberOfDisks) return _mValue_NumberOfDisks;
                throw new UndeferrableValueException("Value 'CustomLayerEbsVolumeArgs.NumberOfDisks' is not present");
            }
        }

        /// <summary>
        /// The RAID level to use for the volume.
        /// </summary>
        [PolicyResourceProperty("raidLevel", "_mUnknown_RaidLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RaidLevel;
        private bool _mUnknown_RaidLevel;
        public string? RaidLevel
        {
            get
            {
                if (!_mUnknown_RaidLevel) return _mValue_RaidLevel;
                throw new UndeferrableValueException("Value 'CustomLayerEbsVolumeArgs.RaidLevel' is not present");
            }
        }

        /// <summary>
        /// The size of the volume in gigabytes.
        /// </summary>
        [PolicyResourceProperty("size", "_mUnknown_Size")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Size;
        private bool _mUnknown_Size;
        public int? Size
        {
            get
            {
                if (!_mUnknown_Size) return _mValue_Size;
                throw new UndeferrableValueException("Value 'CustomLayerEbsVolumeArgs.Size' is not present");
            }
        }

        /// <summary>
        /// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'CustomLayerEbsVolumeArgs.Type' is not present");
            }
        }
    }
}
