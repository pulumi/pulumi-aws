// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpsWorks.Outputs
{
    public sealed class MysqlLayerEbsVolume
    {
        [Input("encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mEncrypted;

        public bool? Encrypted => _mEncrypted.GetValue("encrypted");

        /// <summary>
        /// For PIOPS volumes, the IOPS per disk.
        /// </summary>
        [Input("iops")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mIops;

        public int? Iops => _mIops.GetValue("iops");

        /// <summary>
        /// The path to mount the EBS volume on the layer's instances.
        /// </summary>
        [Input("mountPoint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mMountPoint;

        public string? MountPoint => _mMountPoint.GetValue("mountPoint");

        /// <summary>
        /// The number of disks to use for the EBS volume.
        /// </summary>
        [Input("numberOfDisks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mNumberOfDisks;

        public int? NumberOfDisks => _mNumberOfDisks.GetValue("numberOfDisks");

        /// <summary>
        /// The RAID level to use for the volume.
        /// </summary>
        [Input("raidLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mRaidLevel;

        public string? RaidLevel => _mRaidLevel.GetValue("raidLevel");

        /// <summary>
        /// The size of the volume in gigabytes.
        /// </summary>
        [Input("size")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mSize;

        public int? Size => _mSize.GetValue("size");

        /// <summary>
        /// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
        /// </summary>
        [Input("type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mType;

        public string? Type => _mType.GetValue("type");
    }
}
