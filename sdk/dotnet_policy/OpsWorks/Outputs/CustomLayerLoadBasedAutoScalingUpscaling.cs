// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpsWorks.Outputs
{
    public sealed class CustomLayerLoadBasedAutoScalingUpscaling
    {
        /// <summary>
        /// Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
        /// </summary>
        [PolicyResourceProperty("alarms", "_mUnknown_Alarms")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Alarms;
        private bool _mUnknown_Alarms;
        public List<string>? Alarms
        {
            get
            {
                if (!_mUnknown_Alarms) return _mValue_Alarms;
                throw new UndeferrableValueException("Value 'CustomLayerLoadBasedAutoScalingUpscaling.Alarms' is not present");
            }
        }

        /// <summary>
        /// The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
        /// </summary>
        [PolicyResourceProperty("cpuThreshold", "_mUnknown_CpuThreshold")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_CpuThreshold;
        private bool _mUnknown_CpuThreshold;
        public double? CpuThreshold
        {
            get
            {
                if (!_mUnknown_CpuThreshold) return _mValue_CpuThreshold;
                throw new UndeferrableValueException("Value 'CustomLayerLoadBasedAutoScalingUpscaling.CpuThreshold' is not present");
            }
        }

        /// <summary>
        /// The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
        /// </summary>
        [PolicyResourceProperty("ignoreMetricsTime", "_mUnknown_IgnoreMetricsTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_IgnoreMetricsTime;
        private bool _mUnknown_IgnoreMetricsTime;
        public int? IgnoreMetricsTime
        {
            get
            {
                if (!_mUnknown_IgnoreMetricsTime) return _mValue_IgnoreMetricsTime;
                throw new UndeferrableValueException("Value 'CustomLayerLoadBasedAutoScalingUpscaling.IgnoreMetricsTime' is not present");
            }
        }

        /// <summary>
        /// The number of instances to add or remove when the load exceeds a threshold.
        /// </summary>
        [PolicyResourceProperty("instanceCount", "_mUnknown_InstanceCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_InstanceCount;
        private bool _mUnknown_InstanceCount;
        public int? InstanceCount
        {
            get
            {
                if (!_mUnknown_InstanceCount) return _mValue_InstanceCount;
                throw new UndeferrableValueException("Value 'CustomLayerLoadBasedAutoScalingUpscaling.InstanceCount' is not present");
            }
        }

        /// <summary>
        /// The load threshold. A value of -1 disables the threshold.
        /// </summary>
        [PolicyResourceProperty("loadThreshold", "_mUnknown_LoadThreshold")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_LoadThreshold;
        private bool _mUnknown_LoadThreshold;
        public double? LoadThreshold
        {
            get
            {
                if (!_mUnknown_LoadThreshold) return _mValue_LoadThreshold;
                throw new UndeferrableValueException("Value 'CustomLayerLoadBasedAutoScalingUpscaling.LoadThreshold' is not present");
            }
        }

        /// <summary>
        /// The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
        /// </summary>
        [PolicyResourceProperty("memoryThreshold", "_mUnknown_MemoryThreshold")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_MemoryThreshold;
        private bool _mUnknown_MemoryThreshold;
        public double? MemoryThreshold
        {
            get
            {
                if (!_mUnknown_MemoryThreshold) return _mValue_MemoryThreshold;
                throw new UndeferrableValueException("Value 'CustomLayerLoadBasedAutoScalingUpscaling.MemoryThreshold' is not present");
            }
        }

        /// <summary>
        /// The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
        /// </summary>
        [PolicyResourceProperty("thresholdsWaitTime", "_mUnknown_ThresholdsWaitTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ThresholdsWaitTime;
        private bool _mUnknown_ThresholdsWaitTime;
        public int? ThresholdsWaitTime
        {
            get
            {
                if (!_mUnknown_ThresholdsWaitTime) return _mValue_ThresholdsWaitTime;
                throw new UndeferrableValueException("Value 'CustomLayerLoadBasedAutoScalingUpscaling.ThresholdsWaitTime' is not present");
            }
        }
    }
}
