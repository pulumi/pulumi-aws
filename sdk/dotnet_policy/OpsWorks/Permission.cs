// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpsWorks
{
    [PolicyResourceType("aws:opsworks/permission:Permission")]
    public sealed class Permission : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Whether the user is allowed to use SSH to communicate with the instance
        /// </summary>
        [PolicyResourceProperty("allowSsh", "_mUnknown_AllowSsh")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllowSsh;
        private bool _mUnknown_AllowSsh;
        public bool? AllowSsh
        {
            get
            {
                if (!_mUnknown_AllowSsh) return _mValue_AllowSsh;
                throw new UndeferrableValueException("Value 'Permission.AllowSsh' is not present");
            }
        }

        /// <summary>
        /// Whether the user is allowed to use sudo to elevate privileges
        /// </summary>
        [PolicyResourceProperty("allowSudo", "_mUnknown_AllowSudo")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllowSudo;
        private bool _mUnknown_AllowSudo;
        public bool? AllowSudo
        {
            get
            {
                if (!_mUnknown_AllowSudo) return _mValue_AllowSudo;
                throw new UndeferrableValueException("Value 'Permission.AllowSudo' is not present");
            }
        }

        /// <summary>
        /// The users permission level. Mus be one of `deny`, `show`, `deploy`, `manage`, `iam_only`
        /// </summary>
        [PolicyResourceProperty("level", "_mUnknown_Level")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Level;
        private bool _mUnknown_Level;
        public string? Level
        {
            get
            {
                if (!_mUnknown_Level) return _mValue_Level;
                throw new UndeferrableValueException("Value 'Permission.Level' is not present");
            }
        }

        /// <summary>
        /// The stack to set the permissions for
        /// </summary>
        [PolicyResourceProperty("stackId", "_mUnknown_StackId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StackId;
        private bool _mUnknown_StackId;
        public string? StackId
        {
            get
            {
                if (!_mUnknown_StackId) return _mValue_StackId;
                throw new UndeferrableValueException("Value 'Permission.StackId' is not present");
            }
        }

        /// <summary>
        /// The user's IAM ARN to set permissions for
        /// </summary>
        [PolicyResourceProperty("userArn", "_mUnknown_UserArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserArn;
        private bool _mUnknown_UserArn;
        public string? UserArn
        {
            get
            {
                if (!_mUnknown_UserArn) return _mValue_UserArn;
                throw new UndeferrableValueException("Value 'Permission.UserArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:opsworks/permission:Permission")]
    public sealed class PermissionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Whether the user is allowed to use SSH to communicate with the instance
        /// </summary>
        [PolicyResourceProperty("allowSsh", "_mUnknown_AllowSsh")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllowSsh;
        private bool _mUnknown_AllowSsh;
        public bool? AllowSsh
        {
            get
            {
                if (!_mUnknown_AllowSsh) return _mValue_AllowSsh;
                throw new UndeferrableValueException("Value 'PermissionArgs.AllowSsh' is not present");
            }
        }

        /// <summary>
        /// Whether the user is allowed to use sudo to elevate privileges
        /// </summary>
        [PolicyResourceProperty("allowSudo", "_mUnknown_AllowSudo")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllowSudo;
        private bool _mUnknown_AllowSudo;
        public bool? AllowSudo
        {
            get
            {
                if (!_mUnknown_AllowSudo) return _mValue_AllowSudo;
                throw new UndeferrableValueException("Value 'PermissionArgs.AllowSudo' is not present");
            }
        }

        /// <summary>
        /// The users permission level. Mus be one of `deny`, `show`, `deploy`, `manage`, `iam_only`
        /// </summary>
        [PolicyResourceProperty("level", "_mUnknown_Level")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Level;
        private bool _mUnknown_Level;
        public string? Level
        {
            get
            {
                if (!_mUnknown_Level) return _mValue_Level;
                throw new UndeferrableValueException("Value 'PermissionArgs.Level' is not present");
            }
        }

        /// <summary>
        /// The stack to set the permissions for
        /// </summary>
        [PolicyResourceProperty("stackId", "_mUnknown_StackId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StackId;
        private bool _mUnknown_StackId;
        public string? StackId
        {
            get
            {
                if (!_mUnknown_StackId) return _mValue_StackId;
                throw new UndeferrableValueException("Value 'PermissionArgs.StackId' is not present");
            }
        }

        /// <summary>
        /// The user's IAM ARN to set permissions for
        /// </summary>
        [PolicyResourceProperty("userArn", "_mUnknown_UserArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserArn;
        private bool _mUnknown_UserArn;
        public string? UserArn
        {
            get
            {
                if (!_mUnknown_UserArn) return _mValue_UserArn;
                throw new UndeferrableValueException("Value 'PermissionArgs.UserArn' is not present");
            }
        }
    }
}
