// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpsWorks
{
    [PolicyResourceType("aws:opsworks/instance:Instance")]
    public sealed class Instance : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// OpsWorks agent to install. Default is `INHERIT`.
        /// </summary>
        [Input("agentVersion")]
        public string? AgentVersion;

        /// <summary>
        /// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
        /// </summary>
        [Input("amiId")]
        public string? AmiId;

        /// <summary>
        /// Machine architecture for created instances.  Valid values are `x86_64` or `i386`. The default is `x86_64`.
        /// </summary>
        [Input("architecture")]
        public string? Architecture;

        /// <summary>
        /// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
        /// </summary>
        [Input("autoScalingType")]
        public string? AutoScalingType;

        /// <summary>
        /// Name of the availability zone where instances will be created by default.
        /// </summary>
        [Input("availabilityZone")]
        public string? AvailabilityZone;

        /// <summary>
        /// Time that the instance was created.
        /// </summary>
        [Input("createdAt")]
        public string? CreatedAt;

        /// <summary>
        /// Whether to delete EBS volume on deletion. Default is `true`.
        /// </summary>
        [Input("deleteEbs")]
        public bool? DeleteEbs;

        /// <summary>
        /// Whether to delete the Elastic IP on deletion.
        /// </summary>
        [Input("deleteEip")]
        public bool? DeleteEip;

        /// <summary>
        /// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
        /// </summary>
        [Input("ebsBlockDevices")]
        public List<InstanceEbsBlockDevice>? EbsBlockDevices;

        /// <summary>
        /// Whether the launched EC2 instance will be EBS-optimized.
        /// </summary>
        [Input("ebsOptimized")]
        public bool? EbsOptimized;

        /// <summary>
        /// EC2 instance ID.
        /// </summary>
        [Input("ec2InstanceId")]
        public string? Ec2InstanceId;

        /// <summary>
        /// ECS cluster's ARN for container instances.
        /// </summary>
        [Input("ecsClusterArn")]
        public string? EcsClusterArn;

        /// <summary>
        /// Instance Elastic IP address.
        /// </summary>
        [Input("elasticIp")]
        public string? ElasticIp;

        /// <summary>
        /// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
        /// </summary>
        [Input("ephemeralBlockDevices")]
        public List<InstanceEphemeralBlockDevice>? EphemeralBlockDevices;

        /// <summary>
        /// Instance's host name.
        /// </summary>
        [Input("hostname")]
        public string? Hostname;

        /// <summary>
        /// For registered instances, infrastructure class: ec2 or on-premises.
        /// </summary>
        [Input("infrastructureClass")]
        public string? InfrastructureClass;

        /// <summary>
        /// Controls where to install OS and package updates when the instance boots.  Default is `true`.
        /// </summary>
        [Input("installUpdatesOnBoot")]
        public bool? InstallUpdatesOnBoot;

        /// <summary>
        /// ARN of the instance's IAM profile.
        /// </summary>
        [Input("instanceProfileArn")]
        public string? InstanceProfileArn;

        /// <summary>
        /// Type of instance to start.
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType;

        /// <summary>
        /// ID of the last service error.
        /// </summary>
        [Input("lastServiceErrorId")]
        public string? LastServiceErrorId;

        /// <summary>
        /// List of the layers the instance will belong to.
        /// </summary>
        [Input("layerIds")]
        public List<string>? LayerIds;

        /// <summary>
        /// Name of operating system that will be installed.
        /// </summary>
        [Input("os")]
        public string? Os;

        /// <summary>
        /// Instance's platform.
        /// </summary>
        [Input("platform")]
        public string? Platform;

        /// <summary>
        /// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
        /// </summary>
        [Input("privateDns")]
        public string? PrivateDns;

        /// <summary>
        /// Private IP address assigned to the instance.
        /// </summary>
        [Input("privateIp")]
        public string? PrivateIp;

        /// <summary>
        /// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
        /// </summary>
        [Input("publicDns")]
        public string? PublicDns;

        /// <summary>
        /// Public IP address assigned to the instance, if applicable.
        /// </summary>
        [Input("publicIp")]
        public string? PublicIp;

        /// <summary>
        /// For registered instances, who performed the registration.
        /// </summary>
        [Input("registeredBy")]
        public string? RegisteredBy;

        /// <summary>
        /// Instance's reported AWS OpsWorks Stacks agent version.
        /// </summary>
        [Input("reportedAgentVersion")]
        public string? ReportedAgentVersion;

        /// <summary>
        /// For registered instances, the reported operating system family.
        /// </summary>
        [Input("reportedOsFamily")]
        public string? ReportedOsFamily;

        /// <summary>
        /// For registered instances, the reported operating system name.
        /// </summary>
        [Input("reportedOsName")]
        public string? ReportedOsName;

        /// <summary>
        /// For registered instances, the reported operating system version.
        /// </summary>
        [Input("reportedOsVersion")]
        public string? ReportedOsVersion;

        /// <summary>
        /// Configuration block for the root block device of the instance. See Block Devices below.
        /// </summary>
        [Input("rootBlockDevices")]
        public List<InstanceRootBlockDevice>? RootBlockDevices;

        /// <summary>
        /// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
        /// </summary>
        [Input("rootDeviceType")]
        public string? RootDeviceType;

        /// <summary>
        /// Root device volume ID.
        /// </summary>
        [Input("rootDeviceVolumeId")]
        public string? RootDeviceVolumeId;

        /// <summary>
        /// Associated security groups.
        /// </summary>
        [Input("securityGroupIds")]
        public List<string>? SecurityGroupIds;

        /// <summary>
        /// SSH key's Deep Security Agent (DSA) fingerprint.
        /// </summary>
        [Input("sshHostDsaKeyFingerprint")]
        public string? SshHostDsaKeyFingerprint;

        /// <summary>
        /// SSH key's RSA fingerprint.
        /// </summary>
        [Input("sshHostRsaKeyFingerprint")]
        public string? SshHostRsaKeyFingerprint;

        /// <summary>
        /// Name of the SSH keypair that instances will have by default.
        /// </summary>
        [Input("sshKeyName")]
        public string? SshKeyName;

        /// <summary>
        /// Identifier of the stack the instance will belong to.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("stackId")]
        public string? StackId;

        /// <summary>
        /// Desired state of the instance. Valid values are `running` or `stopped`.
        /// </summary>
        [Input("state")]
        public string? State;

        /// <summary>
        /// Instance status. Will be one of `booting`, `connection_lost`, `online`, `pending`, `rebooting`, `requested`, `running_setup`, `setup_failed`, `shutting_down`, `start_failed`, `stop_failed`, `stopped`, `stopping`, `terminated`, or `terminating`.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Subnet ID to attach to.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId;

        /// <summary>
        /// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
        /// </summary>
        [Input("tenancy")]
        public string? Tenancy;

        /// <summary>
        /// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
        /// </summary>
        [Input("virtualizationType")]
        public string? VirtualizationType;
    }
}
