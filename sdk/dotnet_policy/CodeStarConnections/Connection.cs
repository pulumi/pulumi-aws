// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeStarConnections
{
    [PolicyResourceType("aws:codestarconnections/connection:Connection")]
    public sealed class Connection : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The codestar connection ARN.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The codestar connection status. Possible values are `PENDING`, `AVAILABLE` and `ERROR`.
        /// </summary>
        [Input("connectionStatus")]
        public string? ConnectionStatus;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the host associated with the connection. Conflicts with `provider_type`
        /// </summary>
        [Input("hostArn")]
        public string? HostArn;

        /// <summary>
        /// The name of the connection to be created. The name must be unique in the calling AWS account. Changing `name` will create a new resource.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The name of the external provider where your third-party code repository is configured. Valid values are `Bitbucket`, `GitHub`, `GitHubEnterpriseServer`, `GitLab` or `GitLabSelfManaged`. Changing `provider_type` will create a new resource. Conflicts with `host_arn`
        /// </summary>
        [Input("providerType")]
        public string? ProviderType;

        /// <summary>
        /// Map of key-value resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
