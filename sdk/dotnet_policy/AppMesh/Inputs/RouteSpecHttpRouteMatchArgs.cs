// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppMesh.Inputs
{
    public sealed class RouteSpecHttpRouteMatchArgs
    {
        /// <summary>
        /// Client request headers to match on.
        /// </summary>
        [PolicyResourceProperty("headers", "_mUnknown_Headers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.RouteSpecHttpRouteMatchHeaderArgs>? _mValue_Headers;
        private bool _mUnknown_Headers;
        public List<Inputs.RouteSpecHttpRouteMatchHeaderArgs>? Headers
        {
            get
            {
                if (!_mUnknown_Headers) return _mValue_Headers;
                throw new UndeferrableValueException("Value 'RouteSpecHttpRouteMatchArgs.Headers' is not present");
            }
        }

        /// <summary>
        /// Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.
        /// </summary>
        [PolicyResourceProperty("method", "_mUnknown_Method")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Method;
        private bool _mUnknown_Method;
        public string? Method
        {
            get
            {
                if (!_mUnknown_Method) return _mValue_Method;
                throw new UndeferrableValueException("Value 'RouteSpecHttpRouteMatchArgs.Method' is not present");
            }
        }

        /// <summary>
        /// Client request path to match on.
        /// </summary>
        [PolicyResourceProperty("path", "_mUnknown_Path")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.RouteSpecHttpRouteMatchPathArgs? _mValue_Path;
        private bool _mUnknown_Path;
        public Inputs.RouteSpecHttpRouteMatchPathArgs? Path
        {
            get
            {
                if (!_mUnknown_Path) return _mValue_Path;
                throw new UndeferrableValueException("Value 'RouteSpecHttpRouteMatchArgs.Path' is not present");
            }
        }

        /// <summary>
        /// The port number to match from the request.
        /// </summary>
        [PolicyResourceProperty("port", "_mUnknown_Port")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Port;
        private bool _mUnknown_Port;
        public int? Port
        {
            get
            {
                if (!_mUnknown_Port) return _mValue_Port;
                throw new UndeferrableValueException("Value 'RouteSpecHttpRouteMatchArgs.Port' is not present");
            }
        }

        /// <summary>
        /// Path with which to match requests.
        /// This parameter must always start with /, which by itself matches all requests to the virtual router service name.
        /// </summary>
        [PolicyResourceProperty("prefix", "_mUnknown_Prefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Prefix;
        private bool _mUnknown_Prefix;
        public string? Prefix
        {
            get
            {
                if (!_mUnknown_Prefix) return _mValue_Prefix;
                throw new UndeferrableValueException("Value 'RouteSpecHttpRouteMatchArgs.Prefix' is not present");
            }
        }

        /// <summary>
        /// Client request query parameters to match on.
        /// </summary>
        [PolicyResourceProperty("queryParameters", "_mUnknown_QueryParameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.RouteSpecHttpRouteMatchQueryParameterArgs>? _mValue_QueryParameters;
        private bool _mUnknown_QueryParameters;
        public List<Inputs.RouteSpecHttpRouteMatchQueryParameterArgs>? QueryParameters
        {
            get
            {
                if (!_mUnknown_QueryParameters) return _mValue_QueryParameters;
                throw new UndeferrableValueException("Value 'RouteSpecHttpRouteMatchArgs.QueryParameters' is not present");
            }
        }

        /// <summary>
        /// Client request header scheme to match on. Valid values: `http`, `https`.
        /// </summary>
        [PolicyResourceProperty("scheme", "_mUnknown_Scheme")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Scheme;
        private bool _mUnknown_Scheme;
        public string? Scheme
        {
            get
            {
                if (!_mUnknown_Scheme) return _mValue_Scheme;
                throw new UndeferrableValueException("Value 'RouteSpecHttpRouteMatchArgs.Scheme' is not present");
            }
        }
    }
}
