// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppMesh.Inputs
{
    public sealed class RouteSpecGrpcRouteRetryPolicyArgs
    {
        /// <summary>
        /// List of gRPC retry events.
        /// Valid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.
        /// </summary>
        [PolicyResourceProperty("grpcRetryEvents", "_mUnknown_GrpcRetryEvents")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_GrpcRetryEvents;
        private bool _mUnknown_GrpcRetryEvents;
        public List<string>? GrpcRetryEvents
        {
            get
            {
                if (!_mUnknown_GrpcRetryEvents) return _mValue_GrpcRetryEvents;
                throw new UndeferrableValueException("Value 'RouteSpecGrpcRouteRetryPolicyArgs.GrpcRetryEvents' is not present");
            }
        }

        /// <summary>
        /// List of HTTP retry events.
        /// Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
        /// </summary>
        [PolicyResourceProperty("httpRetryEvents", "_mUnknown_HttpRetryEvents")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_HttpRetryEvents;
        private bool _mUnknown_HttpRetryEvents;
        public List<string>? HttpRetryEvents
        {
            get
            {
                if (!_mUnknown_HttpRetryEvents) return _mValue_HttpRetryEvents;
                throw new UndeferrableValueException("Value 'RouteSpecGrpcRouteRetryPolicyArgs.HttpRetryEvents' is not present");
            }
        }

        /// <summary>
        /// Maximum number of retries.
        /// </summary>
        [PolicyResourceProperty("maxRetries", "_mUnknown_MaxRetries")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxRetries;
        private bool _mUnknown_MaxRetries;
        public int? MaxRetries
        {
            get
            {
                if (!_mUnknown_MaxRetries) return _mValue_MaxRetries;
                throw new UndeferrableValueException("Value 'RouteSpecGrpcRouteRetryPolicyArgs.MaxRetries' is not present");
            }
        }

        /// <summary>
        /// Per-retry timeout.
        /// </summary>
        [PolicyResourceProperty("perRetryTimeout", "_mUnknown_PerRetryTimeout")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs? _mValue_PerRetryTimeout;
        private bool _mUnknown_PerRetryTimeout;
        public Inputs.RouteSpecGrpcRouteRetryPolicyPerRetryTimeoutArgs? PerRetryTimeout
        {
            get
            {
                if (!_mUnknown_PerRetryTimeout) return _mValue_PerRetryTimeout;
                throw new UndeferrableValueException("Value 'RouteSpecGrpcRouteRetryPolicyArgs.PerRetryTimeout' is not present");
            }
        }

        /// <summary>
        /// List of TCP retry events. The only valid value is `connection-error`.
        /// </summary>
        [PolicyResourceProperty("tcpRetryEvents", "_mUnknown_TcpRetryEvents")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_TcpRetryEvents;
        private bool _mUnknown_TcpRetryEvents;
        public List<string>? TcpRetryEvents
        {
            get
            {
                if (!_mUnknown_TcpRetryEvents) return _mValue_TcpRetryEvents;
                throw new UndeferrableValueException("Value 'RouteSpecGrpcRouteRetryPolicyArgs.TcpRetryEvents' is not present");
            }
        }
    }
}
