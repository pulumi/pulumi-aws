// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppMesh
{
    [PolicyResourceType("aws:appmesh/mesh:Mesh")]
    public sealed class Mesh : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the service mesh.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Creation date of the service mesh.
        /// </summary>
        [Input("createdDate")]
        public string? CreatedDate;

        /// <summary>
        /// Last update date of the service mesh.
        /// </summary>
        [Input("lastUpdatedDate")]
        public string? LastUpdatedDate;

        /// <summary>
        /// AWS account ID of the service mesh's owner.
        /// </summary>
        [Input("meshOwner")]
        public string? MeshOwner;

        /// <summary>
        /// Name to use for the service mesh. Must be between 1 and 255 characters in length.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Resource owner's AWS account ID.
        /// </summary>
        [Input("resourceOwner")]
        public string? ResourceOwner;

        /// <summary>
        /// Service mesh specification to apply.
        /// </summary>
        [Input("spec")]
        public MeshSpec? Spec;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
