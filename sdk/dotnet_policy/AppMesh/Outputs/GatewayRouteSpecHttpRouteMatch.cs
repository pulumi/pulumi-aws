// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppMesh.Outputs
{
    public sealed class GatewayRouteSpecHttpRouteMatch
    {
        /// <summary>
        /// Client request headers to match on.
        /// </summary>
        [PolicyResourceProperty("headers", "_mUnknown_Headers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GatewayRouteSpecHttpRouteMatchHeader>? _mValue_Headers;
        private bool _mUnknown_Headers;
        public List<Outputs.GatewayRouteSpecHttpRouteMatchHeader>? Headers
        {
            get
            {
                if (!_mUnknown_Headers) return _mValue_Headers;
                throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatch.Headers' is not present");
            }
        }

        /// <summary>
        /// Host name to match on.
        /// </summary>
        [PolicyResourceProperty("hostname", "_mUnknown_Hostname")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GatewayRouteSpecHttpRouteMatchHostname? _mValue_Hostname;
        private bool _mUnknown_Hostname;
        public Outputs.GatewayRouteSpecHttpRouteMatchHostname? Hostname
        {
            get
            {
                if (!_mUnknown_Hostname) return _mValue_Hostname;
                throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatch.Hostname' is not present");
            }
        }

        /// <summary>
        /// Client request path to match on.
        /// </summary>
        [PolicyResourceProperty("path", "_mUnknown_Path")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.GatewayRouteSpecHttpRouteMatchPath? _mValue_Path;
        private bool _mUnknown_Path;
        public Outputs.GatewayRouteSpecHttpRouteMatchPath? Path
        {
            get
            {
                if (!_mUnknown_Path) return _mValue_Path;
                throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatch.Path' is not present");
            }
        }

        /// <summary>
        /// The port number to match from the request.
        /// </summary>
        [PolicyResourceProperty("port", "_mUnknown_Port")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Port;
        private bool _mUnknown_Port;
        public int? Port
        {
            get
            {
                if (!_mUnknown_Port) return _mValue_Port;
                throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatch.Port' is not present");
            }
        }

        /// <summary>
        /// Path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
        /// </summary>
        [PolicyResourceProperty("prefix", "_mUnknown_Prefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Prefix;
        private bool _mUnknown_Prefix;
        public string? Prefix
        {
            get
            {
                if (!_mUnknown_Prefix) return _mValue_Prefix;
                throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatch.Prefix' is not present");
            }
        }

        /// <summary>
        /// Client request query parameters to match on.
        /// </summary>
        [PolicyResourceProperty("queryParameters", "_mUnknown_QueryParameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GatewayRouteSpecHttpRouteMatchQueryParameter>? _mValue_QueryParameters;
        private bool _mUnknown_QueryParameters;
        public List<Outputs.GatewayRouteSpecHttpRouteMatchQueryParameter>? QueryParameters
        {
            get
            {
                if (!_mUnknown_QueryParameters) return _mValue_QueryParameters;
                throw new UndeferrableValueException("Value 'GatewayRouteSpecHttpRouteMatch.QueryParameters' is not present");
            }
        }
    }
}
