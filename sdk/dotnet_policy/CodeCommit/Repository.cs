// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeCommit
{
    [PolicyResourceType("aws:codecommit/repository:Repository")]
    public sealed class Repository : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the repository
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The URL to use for cloning the repository over HTTPS.
        /// </summary>
        [Input("cloneUrlHttp")]
        public string? CloneUrlHttp;

        /// <summary>
        /// The URL to use for cloning the repository over SSH.
        /// </summary>
        [Input("cloneUrlSsh")]
        public string? CloneUrlSsh;

        /// <summary>
        /// The default branch of the repository. The branch specified here needs to exist.
        /// </summary>
        [Input("defaultBranch")]
        public string? DefaultBranch;

        /// <summary>
        /// The description of the repository. This needs to be less than 1000 characters
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The ARN of the encryption key. If no key is specified, the default `aws/codecommit` Amazon Web Services managed key is used.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId;

        /// <summary>
        /// The ID of the repository
        /// </summary>
        [Input("repositoryId")]
        public string? RepositoryId;

        /// <summary>
        /// The name for the repository. This needs to be less than 100 characters.
        /// </summary>
        [Input("repositoryName")]
        public string? RepositoryName;

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
