// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.GlobalAccelerator
{
    [PolicyResourceType("aws:globalaccelerator/accelerator:Accelerator")]
    public sealed class Accelerator : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the accelerator.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Accelerator.Arn' is not present");
            }
        }

        /// <summary>
        /// The attributes of the accelerator. Fields documented below.
        /// </summary>
        [PolicyResourceProperty("attributes", "_mUnknown_Attributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.AcceleratorAttributes? _mValue_Attributes;
        private bool _mUnknown_Attributes;
        public Outputs.AcceleratorAttributes? Attributes
        {
            get
            {
                if (!_mUnknown_Attributes) return _mValue_Attributes;
                throw new UndeferrableValueException("Value 'Accelerator.Attributes' is not present");
            }
        }

        /// <summary>
        /// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
        /// </summary>
        [PolicyResourceProperty("dnsName", "_mUnknown_DnsName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DnsName;
        private bool _mUnknown_DnsName;
        public string? DnsName
        {
            get
            {
                if (!_mUnknown_DnsName) return _mValue_DnsName;
                throw new UndeferrableValueException("Value 'Accelerator.DnsName' is not present");
            }
        }

        /// <summary>
        /// The Domain Name System (DNS) name that Global Accelerator creates that points to a dual-stack accelerator's four static IP addresses: two IPv4 addresses and two IPv6 addresses. For example, `a1234567890abcdef.dualstack.awsglobalaccelerator.com`.
        /// </summary>
        [PolicyResourceProperty("dualStackDnsName", "_mUnknown_DualStackDnsName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DualStackDnsName;
        private bool _mUnknown_DualStackDnsName;
        public string? DualStackDnsName
        {
            get
            {
                if (!_mUnknown_DualStackDnsName) return _mValue_DualStackDnsName;
                throw new UndeferrableValueException("Value 'Accelerator.DualStackDnsName' is not present");
            }
        }

        /// <summary>
        /// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'Accelerator.Enabled' is not present");
            }
        }

        /// <summary>
        /// -  The Global Accelerator Route 53 zone ID that can be used to
        /// route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
        /// is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
        /// </summary>
        [PolicyResourceProperty("hostedZoneId", "_mUnknown_HostedZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostedZoneId;
        private bool _mUnknown_HostedZoneId;
        public string? HostedZoneId
        {
            get
            {
                if (!_mUnknown_HostedZoneId) return _mValue_HostedZoneId;
                throw new UndeferrableValueException("Value 'Accelerator.HostedZoneId' is not present");
            }
        }

        /// <summary>
        /// The value for the address type. Defaults to `IPV4`. Valid values: `IPV4`, `DUAL_STACK`.
        /// </summary>
        [PolicyResourceProperty("ipAddressType", "_mUnknown_IpAddressType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpAddressType;
        private bool _mUnknown_IpAddressType;
        public string? IpAddressType
        {
            get
            {
                if (!_mUnknown_IpAddressType) return _mValue_IpAddressType;
                throw new UndeferrableValueException("Value 'Accelerator.IpAddressType' is not present");
            }
        }

        /// <summary>
        /// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
        /// </summary>
        [PolicyResourceProperty("ipAddresses", "_mUnknown_IpAddresses")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_IpAddresses;
        private bool _mUnknown_IpAddresses;
        public List<string>? IpAddresses
        {
            get
            {
                if (!_mUnknown_IpAddresses) return _mValue_IpAddresses;
                throw new UndeferrableValueException("Value 'Accelerator.IpAddresses' is not present");
            }
        }

        /// <summary>
        /// IP address set associated with the accelerator.
        /// </summary>
        [PolicyResourceProperty("ipSets", "_mUnknown_IpSets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.AcceleratorIpSet>? _mValue_IpSets;
        private bool _mUnknown_IpSets;
        public List<Outputs.AcceleratorIpSet>? IpSets
        {
            get
            {
                if (!_mUnknown_IpSets) return _mValue_IpSets;
                throw new UndeferrableValueException("Value 'Accelerator.IpSets' is not present");
            }
        }

        /// <summary>
        /// The name of the accelerator.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Accelerator.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Accelerator.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Accelerator.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:globalaccelerator/accelerator:Accelerator")]
    public sealed class AcceleratorArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The attributes of the accelerator. Fields documented below.
        /// </summary>
        [PolicyResourceProperty("attributes", "_mUnknown_Attributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.AcceleratorAttributesArgs? _mValue_Attributes;
        private bool _mUnknown_Attributes;
        public Inputs.AcceleratorAttributesArgs? Attributes
        {
            get
            {
                if (!_mUnknown_Attributes) return _mValue_Attributes;
                throw new UndeferrableValueException("Value 'AcceleratorArgs.Attributes' is not present");
            }
        }

        /// <summary>
        /// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'AcceleratorArgs.Enabled' is not present");
            }
        }

        /// <summary>
        /// The value for the address type. Defaults to `IPV4`. Valid values: `IPV4`, `DUAL_STACK`.
        /// </summary>
        [PolicyResourceProperty("ipAddressType", "_mUnknown_IpAddressType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpAddressType;
        private bool _mUnknown_IpAddressType;
        public string? IpAddressType
        {
            get
            {
                if (!_mUnknown_IpAddressType) return _mValue_IpAddressType;
                throw new UndeferrableValueException("Value 'AcceleratorArgs.IpAddressType' is not present");
            }
        }

        /// <summary>
        /// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
        /// </summary>
        [PolicyResourceProperty("ipAddresses", "_mUnknown_IpAddresses")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_IpAddresses;
        private bool _mUnknown_IpAddresses;
        public List<string>? IpAddresses
        {
            get
            {
                if (!_mUnknown_IpAddresses) return _mValue_IpAddresses;
                throw new UndeferrableValueException("Value 'AcceleratorArgs.IpAddresses' is not present");
            }
        }

        /// <summary>
        /// The name of the accelerator.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'AcceleratorArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'AcceleratorArgs.Tags' is not present");
            }
        }
    }
}
