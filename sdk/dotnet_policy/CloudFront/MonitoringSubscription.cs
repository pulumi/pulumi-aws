// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudFront
{
    [PolicyResourceType("aws:cloudfront/monitoringSubscription:MonitoringSubscription")]
    public sealed class MonitoringSubscription : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ID of the distribution that you are enabling metrics for.
        /// </summary>
        [PolicyResourceProperty("distributionId", "_mUnknown_DistributionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DistributionId;
        private bool _mUnknown_DistributionId;
        public string? DistributionId
        {
            get
            {
                if (!_mUnknown_DistributionId) return _mValue_DistributionId;
                throw new UndeferrableValueException("Value 'MonitoringSubscription.DistributionId' is not present");
            }
        }

        /// <summary>
        /// A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
        /// </summary>
        [PolicyResourceProperty("monitoringSubscription", "_mUnknown_MonitoringSubscriptionDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.MonitoringSubscriptionMonitoringSubscription? _mValue_MonitoringSubscriptionDetails;
        private bool _mUnknown_MonitoringSubscriptionDetails;
        public Outputs.MonitoringSubscriptionMonitoringSubscription? MonitoringSubscriptionDetails
        {
            get
            {
                if (!_mUnknown_MonitoringSubscriptionDetails) return _mValue_MonitoringSubscriptionDetails;
                throw new UndeferrableValueException("Value 'MonitoringSubscription.MonitoringSubscriptionDetails' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cloudfront/monitoringSubscription:MonitoringSubscription")]
    public sealed class MonitoringSubscriptionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the distribution that you are enabling metrics for.
        /// </summary>
        [PolicyResourceProperty("distributionId", "_mUnknown_DistributionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DistributionId;
        private bool _mUnknown_DistributionId;
        public string? DistributionId
        {
            get
            {
                if (!_mUnknown_DistributionId) return _mValue_DistributionId;
                throw new UndeferrableValueException("Value 'MonitoringSubscriptionArgs.DistributionId' is not present");
            }
        }

        /// <summary>
        /// A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
        /// </summary>
        [PolicyResourceProperty("monitoringSubscription", "_mUnknown_MonitoringSubscriptionDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.MonitoringSubscriptionMonitoringSubscriptionArgs? _mValue_MonitoringSubscriptionDetails;
        private bool _mUnknown_MonitoringSubscriptionDetails;
        public Inputs.MonitoringSubscriptionMonitoringSubscriptionArgs? MonitoringSubscriptionDetails
        {
            get
            {
                if (!_mUnknown_MonitoringSubscriptionDetails) return _mValue_MonitoringSubscriptionDetails;
                throw new UndeferrableValueException("Value 'MonitoringSubscriptionArgs.MonitoringSubscriptionDetails' is not present");
            }
        }
    }
}
