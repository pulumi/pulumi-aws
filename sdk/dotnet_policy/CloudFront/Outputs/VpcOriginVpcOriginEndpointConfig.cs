// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudFront.Outputs
{
    public sealed class VpcOriginVpcOriginEndpointConfig
    {
        /// <summary>
        /// The VPC origin ARN.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'VpcOriginVpcOriginEndpointConfig.Arn' is not present");
            }
        }

        /// <summary>
        /// The HTTP port for the CloudFront VPC origin endpoint configuration.
        /// </summary>
        [PolicyResourceProperty("httpPort", "_mUnknown_HttpPort")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_HttpPort;
        private bool _mUnknown_HttpPort;
        public int? HttpPort
        {
            get
            {
                if (!_mUnknown_HttpPort) return _mValue_HttpPort;
                throw new UndeferrableValueException("Value 'VpcOriginVpcOriginEndpointConfig.HttpPort' is not present");
            }
        }

        /// <summary>
        /// The HTTPS port for the CloudFront VPC origin endpoint configuration.
        /// </summary>
        [PolicyResourceProperty("httpsPort", "_mUnknown_HttpsPort")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_HttpsPort;
        private bool _mUnknown_HttpsPort;
        public int? HttpsPort
        {
            get
            {
                if (!_mUnknown_HttpsPort) return _mValue_HttpsPort;
                throw new UndeferrableValueException("Value 'VpcOriginVpcOriginEndpointConfig.HttpsPort' is not present");
            }
        }

        /// <summary>
        /// The name of the CloudFront VPC origin endpoint configuration.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'VpcOriginVpcOriginEndpointConfig.Name' is not present");
            }
        }

        /// <summary>
        /// The origin protocol policy for the CloudFront VPC origin endpoint configuration.
        /// </summary>
        [PolicyResourceProperty("originProtocolPolicy", "_mUnknown_OriginProtocolPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OriginProtocolPolicy;
        private bool _mUnknown_OriginProtocolPolicy;
        public string? OriginProtocolPolicy
        {
            get
            {
                if (!_mUnknown_OriginProtocolPolicy) return _mValue_OriginProtocolPolicy;
                throw new UndeferrableValueException("Value 'VpcOriginVpcOriginEndpointConfig.OriginProtocolPolicy' is not present");
            }
        }

        /// <summary>
        /// A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.
        /// </summary>
        [PolicyResourceProperty("originSslProtocols", "_mUnknown_OriginSslProtocols")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.VpcOriginVpcOriginEndpointConfigOriginSslProtocols? _mValue_OriginSslProtocols;
        private bool _mUnknown_OriginSslProtocols;
        public Outputs.VpcOriginVpcOriginEndpointConfigOriginSslProtocols? OriginSslProtocols
        {
            get
            {
                if (!_mUnknown_OriginSslProtocols) return _mValue_OriginSslProtocols;
                throw new UndeferrableValueException("Value 'VpcOriginVpcOriginEndpointConfig.OriginSslProtocols' is not present");
            }
        }
    }
}
