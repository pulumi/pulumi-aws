// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudFront
{
    [PolicyResourceType("aws:cloudfront/cachePolicy:CachePolicy")]
    public sealed class CachePolicy : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The cache policy ARN.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Description for the cache policy.
        /// </summary>
        [Input("comment")]
        public string? Comment;

        /// <summary>
        /// Amount of time, in seconds, that objects are allowed to remain in the CloudFront cache before CloudFront sends a new request to the origin server to check if the object has been updated.
        /// </summary>
        [Input("defaultTtl")]
        public int? DefaultTtl;

        /// <summary>
        /// Current version of the cache policy.
        /// </summary>
        [Input("etag")]
        public string? Etag;

        /// <summary>
        /// Maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Input("maxTtl")]
        public int? MaxTtl;

        /// <summary>
        /// Minimum amount of time, in seconds, that objects should remain in the CloudFront cache before a new request is sent to the origin to check for updates.
        /// </summary>
        [Input("minTtl")]
        public int? MinTtl;

        /// <summary>
        /// Unique name used to identify the cache policy.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Configuration for including HTTP headers, cookies, and URL query strings in the cache key. For more information, refer to the Parameters In Cache Key And Forwarded To Origin section.
        /// </summary>
        [Input("parametersInCacheKeyAndForwardedToOrigin")]
        public CachePolicyParametersInCacheKeyAndForwardedToOrigin? ParametersInCacheKeyAndForwardedToOrigin;
    }
}
