// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CloudFront
{
    [PolicyResourceType("aws:cloudfront/continuousDeploymentPolicy:ContinuousDeploymentPolicy")]
    public sealed class ContinuousDeploymentPolicy : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The continuous deployment policy ARN.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicy.Arn' is not present");
            }
        }

        /// <summary>
        /// Whether this continuous deployment policy is enabled.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicy.Enabled' is not present");
            }
        }

        /// <summary>
        /// Current version of the continuous distribution policy.
        /// </summary>
        [PolicyResourceProperty("etag", "_mUnknown_Etag")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Etag;
        private bool _mUnknown_Etag;
        public string? Etag
        {
            get
            {
                if (!_mUnknown_Etag) return _mValue_Etag;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicy.Etag' is not present");
            }
        }

        /// <summary>
        /// Date and time the continuous deployment policy was last modified.
        /// </summary>
        [PolicyResourceProperty("lastModifiedTime", "_mUnknown_LastModifiedTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastModifiedTime;
        private bool _mUnknown_LastModifiedTime;
        public string? LastModifiedTime
        {
            get
            {
                if (!_mUnknown_LastModifiedTime) return _mValue_LastModifiedTime;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicy.LastModifiedTime' is not present");
            }
        }

        /// <summary>
        /// CloudFront domain name of the staging distribution. See `staging_distribution_dns_names`.
        /// </summary>
        [PolicyResourceProperty("stagingDistributionDnsNames", "_mUnknown_StagingDistributionDnsNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ContinuousDeploymentPolicyStagingDistributionDnsNames? _mValue_StagingDistributionDnsNames;
        private bool _mUnknown_StagingDistributionDnsNames;
        public Outputs.ContinuousDeploymentPolicyStagingDistributionDnsNames? StagingDistributionDnsNames
        {
            get
            {
                if (!_mUnknown_StagingDistributionDnsNames) return _mValue_StagingDistributionDnsNames;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicy.StagingDistributionDnsNames' is not present");
            }
        }

        /// <summary>
        /// Parameters for routing production traffic from primary to staging distributions. See `traffic_config`.
        /// </summary>
        [PolicyResourceProperty("trafficConfig", "_mUnknown_TrafficConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ContinuousDeploymentPolicyTrafficConfig? _mValue_TrafficConfig;
        private bool _mUnknown_TrafficConfig;
        public Outputs.ContinuousDeploymentPolicyTrafficConfig? TrafficConfig
        {
            get
            {
                if (!_mUnknown_TrafficConfig) return _mValue_TrafficConfig;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicy.TrafficConfig' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cloudfront/continuousDeploymentPolicy:ContinuousDeploymentPolicy")]
    public sealed class ContinuousDeploymentPolicyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Whether this continuous deployment policy is enabled.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicyArgs.Enabled' is not present");
            }
        }

        /// <summary>
        /// CloudFront domain name of the staging distribution. See `staging_distribution_dns_names`.
        /// </summary>
        [PolicyResourceProperty("stagingDistributionDnsNames", "_mUnknown_StagingDistributionDnsNames")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs? _mValue_StagingDistributionDnsNames;
        private bool _mUnknown_StagingDistributionDnsNames;
        public Inputs.ContinuousDeploymentPolicyStagingDistributionDnsNamesArgs? StagingDistributionDnsNames
        {
            get
            {
                if (!_mUnknown_StagingDistributionDnsNames) return _mValue_StagingDistributionDnsNames;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicyArgs.StagingDistributionDnsNames' is not present");
            }
        }

        /// <summary>
        /// Parameters for routing production traffic from primary to staging distributions. See `traffic_config`.
        /// </summary>
        [PolicyResourceProperty("trafficConfig", "_mUnknown_TrafficConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ContinuousDeploymentPolicyTrafficConfigArgs? _mValue_TrafficConfig;
        private bool _mUnknown_TrafficConfig;
        public Inputs.ContinuousDeploymentPolicyTrafficConfigArgs? TrafficConfig
        {
            get
            {
                if (!_mUnknown_TrafficConfig) return _mValue_TrafficConfig;
                throw new UndeferrableValueException("Value 'ContinuousDeploymentPolicyArgs.TrafficConfig' is not present");
            }
        }
    }
}
