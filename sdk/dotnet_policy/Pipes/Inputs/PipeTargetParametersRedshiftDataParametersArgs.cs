// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Pipes.Inputs
{
    public sealed class PipeTargetParametersRedshiftDataParametersArgs
    {
        /// <summary>
        /// The name of the database. Required when authenticating using temporary credentials.
        /// </summary>
        [Input("database")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDatabase;

        public string? Database => _mDatabase.GetValue("database");

        /// <summary>
        /// The database user name. Required when authenticating using temporary credentials.
        /// </summary>
        [Input("dbUser")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDbUser;

        public string? DbUser => _mDbUser.GetValue("dbUser");

        /// <summary>
        /// The name or ARN of the secret that enables access to the database. Required when authenticating using Secrets Manager.
        /// </summary>
        [Input("secretManagerArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mSecretManagerArn;

        public string? SecretManagerArn => _mSecretManagerArn.GetValue("secretManagerArn");

        /// <summary>
        /// List of SQL statements text to run, each of maximum length of 100,000.
        /// </summary>
        [Input("sqls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<string>> _mSqls;

        public List<string>? Sqls => _mSqls.GetValue("sqls");

        /// <summary>
        /// The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
        /// </summary>
        [Input("statementName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mStatementName;

        public string? StatementName => _mStatementName.GetValue("statementName");

        /// <summary>
        /// Indicates whether to send an event back to EventBridge after the SQL statement runs.
        /// </summary>
        [Input("withEvent")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mWithEvent;

        public bool? WithEvent => _mWithEvent.GetValue("withEvent");
    }
}
