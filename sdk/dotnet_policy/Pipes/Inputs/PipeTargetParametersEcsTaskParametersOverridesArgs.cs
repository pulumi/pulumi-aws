// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Pipes.Inputs
{
    public sealed class PipeTargetParametersEcsTaskParametersOverridesArgs
    {
        /// <summary>
        /// One or more container overrides that are sent to a task. Detailed below.
        /// </summary>
        [PolicyResourceProperty("containerOverrides", "_mUnknown_ContainerOverrides")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideArgs>? _mValue_ContainerOverrides;
        private bool _mUnknown_ContainerOverrides;
        public List<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideArgs>? ContainerOverrides
        {
            get
            {
                if (!_mUnknown_ContainerOverrides) return _mValue_ContainerOverrides;
                throw new UndeferrableValueException("Value 'PipeTargetParametersEcsTaskParametersOverridesArgs.ContainerOverrides' is not present");
            }
        }

        /// <summary>
        /// The number of cpu units reserved for the container, instead of the default value from the task definition. You must also specify a container name.
        /// </summary>
        [PolicyResourceProperty("cpu", "_mUnknown_Cpu")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Cpu;
        private bool _mUnknown_Cpu;
        public string? Cpu
        {
            get
            {
                if (!_mUnknown_Cpu) return _mValue_Cpu;
                throw new UndeferrableValueException("Value 'PipeTargetParametersEcsTaskParametersOverridesArgs.Cpu' is not present");
            }
        }

        /// <summary>
        /// The ephemeral storage setting override for the task.  Detailed below.
        /// </summary>
        [PolicyResourceProperty("ephemeralStorage", "_mUnknown_EphemeralStorage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PipeTargetParametersEcsTaskParametersOverridesEphemeralStorageArgs? _mValue_EphemeralStorage;
        private bool _mUnknown_EphemeralStorage;
        public Inputs.PipeTargetParametersEcsTaskParametersOverridesEphemeralStorageArgs? EphemeralStorage
        {
            get
            {
                if (!_mUnknown_EphemeralStorage) return _mValue_EphemeralStorage;
                throw new UndeferrableValueException("Value 'PipeTargetParametersEcsTaskParametersOverridesArgs.EphemeralStorage' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the task execution IAM role override for the task.
        /// </summary>
        [PolicyResourceProperty("executionRoleArn", "_mUnknown_ExecutionRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ExecutionRoleArn;
        private bool _mUnknown_ExecutionRoleArn;
        public string? ExecutionRoleArn
        {
            get
            {
                if (!_mUnknown_ExecutionRoleArn) return _mValue_ExecutionRoleArn;
                throw new UndeferrableValueException("Value 'PipeTargetParametersEcsTaskParametersOverridesArgs.ExecutionRoleArn' is not present");
            }
        }

        /// <summary>
        /// List of Elastic Inference accelerator overrides for the task. Detailed below.
        /// </summary>
        [PolicyResourceProperty("inferenceAcceleratorOverrides", "_mUnknown_InferenceAcceleratorOverrides")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PipeTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideArgs>? _mValue_InferenceAcceleratorOverrides;
        private bool _mUnknown_InferenceAcceleratorOverrides;
        public List<Inputs.PipeTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideArgs>? InferenceAcceleratorOverrides
        {
            get
            {
                if (!_mUnknown_InferenceAcceleratorOverrides) return _mValue_InferenceAcceleratorOverrides;
                throw new UndeferrableValueException("Value 'PipeTargetParametersEcsTaskParametersOverridesArgs.InferenceAcceleratorOverrides' is not present");
            }
        }

        /// <summary>
        /// The hard limit (in MiB) of memory to present to the container, instead of the default value from the task definition. If your container attempts to exceed the memory specified here, the container is killed. You must also specify a container name.
        /// </summary>
        [PolicyResourceProperty("memory", "_mUnknown_Memory")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Memory;
        private bool _mUnknown_Memory;
        public string? Memory
        {
            get
            {
                if (!_mUnknown_Memory) return _mValue_Memory;
                throw new UndeferrableValueException("Value 'PipeTargetParametersEcsTaskParametersOverridesArgs.Memory' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role.
        /// </summary>
        [PolicyResourceProperty("taskRoleArn", "_mUnknown_TaskRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TaskRoleArn;
        private bool _mUnknown_TaskRoleArn;
        public string? TaskRoleArn
        {
            get
            {
                if (!_mUnknown_TaskRoleArn) return _mValue_TaskRoleArn;
                throw new UndeferrableValueException("Value 'PipeTargetParametersEcsTaskParametersOverridesArgs.TaskRoleArn' is not present");
            }
        }
    }
}
