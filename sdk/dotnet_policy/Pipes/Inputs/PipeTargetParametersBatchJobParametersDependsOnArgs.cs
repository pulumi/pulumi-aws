// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Pipes.Inputs
{
    public sealed class PipeTargetParametersBatchJobParametersDependsOnArgs
    {
        /// <summary>
        /// The job ID of the AWS Batch job that's associated with this dependency.
        /// </summary>
        [PolicyResourceProperty("jobId", "_mUnknown_JobId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_JobId;
        private bool _mUnknown_JobId;
        public string? JobId
        {
            get
            {
                if (!_mUnknown_JobId) return _mValue_JobId;
                throw new UndeferrableValueException("Value 'PipeTargetParametersBatchJobParametersDependsOnArgs.JobId' is not present");
            }
        }

        /// <summary>
        /// The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task). Valid Values: random, spread, binpack.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'PipeTargetParametersBatchJobParametersDependsOnArgs.Type' is not present");
            }
        }
    }
}
