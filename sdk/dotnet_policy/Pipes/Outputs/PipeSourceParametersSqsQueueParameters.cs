// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Pipes.Outputs
{
    public sealed class PipeSourceParametersSqsQueueParameters
    {
        /// <summary>
        /// The maximum number of records to include in each batch. Maximum value of 10000.
        /// </summary>
        [PolicyResourceProperty("batchSize", "_mUnknown_BatchSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_BatchSize;
        private bool _mUnknown_BatchSize;
        public int? BatchSize
        {
            get
            {
                if (!_mUnknown_BatchSize) return _mValue_BatchSize;
                throw new UndeferrableValueException("Value 'PipeSourceParametersSqsQueueParameters.BatchSize' is not present");
            }
        }

        /// <summary>
        /// The maximum length of a time to wait for events. Maximum value of 300.
        /// </summary>
        [PolicyResourceProperty("maximumBatchingWindowInSeconds", "_mUnknown_MaximumBatchingWindowInSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumBatchingWindowInSeconds;
        private bool _mUnknown_MaximumBatchingWindowInSeconds;
        public int? MaximumBatchingWindowInSeconds
        {
            get
            {
                if (!_mUnknown_MaximumBatchingWindowInSeconds) return _mValue_MaximumBatchingWindowInSeconds;
                throw new UndeferrableValueException("Value 'PipeSourceParametersSqsQueueParameters.MaximumBatchingWindowInSeconds' is not present");
            }
        }
    }
}
