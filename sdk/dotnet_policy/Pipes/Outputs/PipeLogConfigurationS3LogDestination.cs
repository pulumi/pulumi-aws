// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Pipes.Outputs
{
    public sealed class PipeLogConfigurationS3LogDestination
    {
        /// <summary>
        /// Name of the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
        /// </summary>
        [PolicyResourceProperty("bucketName", "_mUnknown_BucketName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BucketName;
        private bool _mUnknown_BucketName;
        public string? BucketName
        {
            get
            {
                if (!_mUnknown_BucketName) return _mValue_BucketName;
                throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.BucketName' is not present");
            }
        }

        /// <summary>
        /// Amazon Web Services account that owns the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
        /// </summary>
        [PolicyResourceProperty("bucketOwner", "_mUnknown_BucketOwner")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BucketOwner;
        private bool _mUnknown_BucketOwner;
        public string? BucketOwner
        {
            get
            {
                if (!_mUnknown_BucketOwner) return _mValue_BucketOwner;
                throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.BucketOwner' is not present");
            }
        }

        /// <summary>
        /// EventBridge format for the log records. Valid values `json`, `plain` and `w3c`.
        /// </summary>
        [PolicyResourceProperty("outputFormat", "_mUnknown_OutputFormat")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutputFormat;
        private bool _mUnknown_OutputFormat;
        public string? OutputFormat
        {
            get
            {
                if (!_mUnknown_OutputFormat) return _mValue_OutputFormat;
                throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.OutputFormat' is not present");
            }
        }

        /// <summary>
        /// Prefix text with which to begin Amazon S3 log object names.
        /// </summary>
        [PolicyResourceProperty("prefix", "_mUnknown_Prefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Prefix;
        private bool _mUnknown_Prefix;
        public string? Prefix
        {
            get
            {
                if (!_mUnknown_Prefix) return _mValue_Prefix;
                throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.Prefix' is not present");
            }
        }
    }
}
