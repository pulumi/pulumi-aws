// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.SsoAdmin.Outputs
{
    public sealed class TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration
    {
        /// <summary>
        /// Specifies the path of the source attribute in the JWT from the trusted token issuer.
        /// </summary>
        [PolicyResourceProperty("claimAttributePath", "_mUnknown_ClaimAttributePath")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClaimAttributePath;
        private bool _mUnknown_ClaimAttributePath;
        public string? ClaimAttributePath
        {
            get
            {
                if (!_mUnknown_ClaimAttributePath) return _mValue_ClaimAttributePath;
                throw new UndeferrableValueException("Value 'TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration.ClaimAttributePath' is not present");
            }
        }

        /// <summary>
        /// Specifies path of the destination attribute in a JWT from IAM Identity Center. The attribute mapped by this JMESPath expression is compared against the attribute mapped by `claim_attribute_path` when a trusted token issuer token is exchanged for an IAM Identity Center token.
        /// </summary>
        [PolicyResourceProperty("identityStoreAttributePath", "_mUnknown_IdentityStoreAttributePath")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdentityStoreAttributePath;
        private bool _mUnknown_IdentityStoreAttributePath;
        public string? IdentityStoreAttributePath
        {
            get
            {
                if (!_mUnknown_IdentityStoreAttributePath) return _mValue_IdentityStoreAttributePath;
                throw new UndeferrableValueException("Value 'TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration.IdentityStoreAttributePath' is not present");
            }
        }

        /// <summary>
        /// Specifies the URL that IAM Identity Center uses for OpenID Discovery. OpenID Discovery is used to obtain the information required to verify the tokens that the trusted token issuer generates.
        /// </summary>
        [PolicyResourceProperty("issuerUrl", "_mUnknown_IssuerUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IssuerUrl;
        private bool _mUnknown_IssuerUrl;
        public string? IssuerUrl
        {
            get
            {
                if (!_mUnknown_IssuerUrl) return _mValue_IssuerUrl;
                throw new UndeferrableValueException("Value 'TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration.IssuerUrl' is not present");
            }
        }

        /// <summary>
        /// The method that the trusted token issuer can use to retrieve the JSON Web Key Set used to verify a JWT. Valid values are `OPEN_ID_DISCOVERY`
        /// </summary>
        [PolicyResourceProperty("jwksRetrievalOption", "_mUnknown_JwksRetrievalOption")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_JwksRetrievalOption;
        private bool _mUnknown_JwksRetrievalOption;
        public string? JwksRetrievalOption
        {
            get
            {
                if (!_mUnknown_JwksRetrievalOption) return _mValue_JwksRetrievalOption;
                throw new UndeferrableValueException("Value 'TrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration.JwksRetrievalOption' is not present");
            }
        }
    }
}
