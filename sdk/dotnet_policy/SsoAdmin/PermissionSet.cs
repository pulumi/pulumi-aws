// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.SsoAdmin
{
    [PolicyResourceType("aws:ssoadmin/permissionSet:PermissionSet")]
    public sealed class PermissionSet : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Permission Set.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'PermissionSet.Arn' is not present");
            }
        }

        /// <summary>
        /// The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [PolicyResourceProperty("createdDate", "_mUnknown_CreatedDate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreatedDate;
        private bool _mUnknown_CreatedDate;
        public string? CreatedDate
        {
            get
            {
                if (!_mUnknown_CreatedDate) return _mValue_CreatedDate;
                throw new UndeferrableValueException("Value 'PermissionSet.CreatedDate' is not present");
            }
        }

        /// <summary>
        /// The description of the Permission Set.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'PermissionSet.Description' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
        /// </summary>
        [PolicyResourceProperty("instanceArn", "_mUnknown_InstanceArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceArn;
        private bool _mUnknown_InstanceArn;
        public string? InstanceArn
        {
            get
            {
                if (!_mUnknown_InstanceArn) return _mValue_InstanceArn;
                throw new UndeferrableValueException("Value 'PermissionSet.InstanceArn' is not present");
            }
        }

        /// <summary>
        /// The name of the Permission Set.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'PermissionSet.Name' is not present");
            }
        }

        /// <summary>
        /// The relay state URL used to redirect users within the application during the federation authentication process.
        /// </summary>
        [PolicyResourceProperty("relayState", "_mUnknown_RelayState")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RelayState;
        private bool _mUnknown_RelayState;
        public string? RelayState
        {
            get
            {
                if (!_mUnknown_RelayState) return _mValue_RelayState;
                throw new UndeferrableValueException("Value 'PermissionSet.RelayState' is not present");
            }
        }

        /// <summary>
        /// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
        /// </summary>
        [PolicyResourceProperty("sessionDuration", "_mUnknown_SessionDuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SessionDuration;
        private bool _mUnknown_SessionDuration;
        public string? SessionDuration
        {
            get
            {
                if (!_mUnknown_SessionDuration) return _mValue_SessionDuration;
                throw new UndeferrableValueException("Value 'PermissionSet.SessionDuration' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'PermissionSet.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'PermissionSet.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ssoadmin/permissionSet:PermissionSet")]
    public sealed class PermissionSetArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The description of the Permission Set.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'PermissionSetArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
        /// </summary>
        [PolicyResourceProperty("instanceArn", "_mUnknown_InstanceArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceArn;
        private bool _mUnknown_InstanceArn;
        public string? InstanceArn
        {
            get
            {
                if (!_mUnknown_InstanceArn) return _mValue_InstanceArn;
                throw new UndeferrableValueException("Value 'PermissionSetArgs.InstanceArn' is not present");
            }
        }

        /// <summary>
        /// The name of the Permission Set.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'PermissionSetArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The relay state URL used to redirect users within the application during the federation authentication process.
        /// </summary>
        [PolicyResourceProperty("relayState", "_mUnknown_RelayState")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RelayState;
        private bool _mUnknown_RelayState;
        public string? RelayState
        {
            get
            {
                if (!_mUnknown_RelayState) return _mValue_RelayState;
                throw new UndeferrableValueException("Value 'PermissionSetArgs.RelayState' is not present");
            }
        }

        /// <summary>
        /// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
        /// </summary>
        [PolicyResourceProperty("sessionDuration", "_mUnknown_SessionDuration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SessionDuration;
        private bool _mUnknown_SessionDuration;
        public string? SessionDuration
        {
            get
            {
                if (!_mUnknown_SessionDuration) return _mValue_SessionDuration;
                throw new UndeferrableValueException("Value 'PermissionSetArgs.SessionDuration' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'PermissionSetArgs.Tags' is not present");
            }
        }
    }
}
