// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Signer
{
    [PolicyResourceType("aws:signer/signingProfilePermission:SigningProfilePermission")]
    public sealed class SigningProfilePermission : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// An AWS Signer action permitted as part of cross-account permissions. Valid values: `signer:StartSigningJob`, `signer:GetSigningProfile`, `signer:RevokeSignature`, or `signer:SignPayload`.
        /// </summary>
        [PolicyResourceProperty("action", "_mUnknown_Action")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Action;
        private bool _mUnknown_Action;
        public string? Action
        {
            get
            {
                if (!_mUnknown_Action) return _mValue_Action;
                throw new UndeferrableValueException("Value 'SigningProfilePermission.Action' is not present");
            }
        }

        /// <summary>
        /// The AWS principal to be granted a cross-account permission.
        /// </summary>
        [PolicyResourceProperty("principal", "_mUnknown_Principal")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Principal;
        private bool _mUnknown_Principal;
        public string? Principal
        {
            get
            {
                if (!_mUnknown_Principal) return _mValue_Principal;
                throw new UndeferrableValueException("Value 'SigningProfilePermission.Principal' is not present");
            }
        }

        /// <summary>
        /// Name of the signing profile to add the cross-account permissions.
        /// </summary>
        [PolicyResourceProperty("profileName", "_mUnknown_ProfileName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProfileName;
        private bool _mUnknown_ProfileName;
        public string? ProfileName
        {
            get
            {
                if (!_mUnknown_ProfileName) return _mValue_ProfileName;
                throw new UndeferrableValueException("Value 'SigningProfilePermission.ProfileName' is not present");
            }
        }

        /// <summary>
        /// The signing profile version that a permission applies to.
        /// </summary>
        [PolicyResourceProperty("profileVersion", "_mUnknown_ProfileVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProfileVersion;
        private bool _mUnknown_ProfileVersion;
        public string? ProfileVersion
        {
            get
            {
                if (!_mUnknown_ProfileVersion) return _mValue_ProfileVersion;
                throw new UndeferrableValueException("Value 'SigningProfilePermission.ProfileVersion' is not present");
            }
        }

        /// <summary>
        /// A unique statement identifier. By default generated by the provider.
        /// </summary>
        [PolicyResourceProperty("statementId", "_mUnknown_StatementId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatementId;
        private bool _mUnknown_StatementId;
        public string? StatementId
        {
            get
            {
                if (!_mUnknown_StatementId) return _mValue_StatementId;
                throw new UndeferrableValueException("Value 'SigningProfilePermission.StatementId' is not present");
            }
        }

        /// <summary>
        /// A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.
        /// </summary>
        [PolicyResourceProperty("statementIdPrefix", "_mUnknown_StatementIdPrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatementIdPrefix;
        private bool _mUnknown_StatementIdPrefix;
        public string? StatementIdPrefix
        {
            get
            {
                if (!_mUnknown_StatementIdPrefix) return _mValue_StatementIdPrefix;
                throw new UndeferrableValueException("Value 'SigningProfilePermission.StatementIdPrefix' is not present");
            }
        }
    }

    [PolicyResourceType("aws:signer/signingProfilePermission:SigningProfilePermission")]
    public sealed class SigningProfilePermissionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// An AWS Signer action permitted as part of cross-account permissions. Valid values: `signer:StartSigningJob`, `signer:GetSigningProfile`, `signer:RevokeSignature`, or `signer:SignPayload`.
        /// </summary>
        [PolicyResourceProperty("action", "_mUnknown_Action")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Action;
        private bool _mUnknown_Action;
        public string? Action
        {
            get
            {
                if (!_mUnknown_Action) return _mValue_Action;
                throw new UndeferrableValueException("Value 'SigningProfilePermissionArgs.Action' is not present");
            }
        }

        /// <summary>
        /// The AWS principal to be granted a cross-account permission.
        /// </summary>
        [PolicyResourceProperty("principal", "_mUnknown_Principal")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Principal;
        private bool _mUnknown_Principal;
        public string? Principal
        {
            get
            {
                if (!_mUnknown_Principal) return _mValue_Principal;
                throw new UndeferrableValueException("Value 'SigningProfilePermissionArgs.Principal' is not present");
            }
        }

        /// <summary>
        /// Name of the signing profile to add the cross-account permissions.
        /// </summary>
        [PolicyResourceProperty("profileName", "_mUnknown_ProfileName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProfileName;
        private bool _mUnknown_ProfileName;
        public string? ProfileName
        {
            get
            {
                if (!_mUnknown_ProfileName) return _mValue_ProfileName;
                throw new UndeferrableValueException("Value 'SigningProfilePermissionArgs.ProfileName' is not present");
            }
        }

        /// <summary>
        /// The signing profile version that a permission applies to.
        /// </summary>
        [PolicyResourceProperty("profileVersion", "_mUnknown_ProfileVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProfileVersion;
        private bool _mUnknown_ProfileVersion;
        public string? ProfileVersion
        {
            get
            {
                if (!_mUnknown_ProfileVersion) return _mValue_ProfileVersion;
                throw new UndeferrableValueException("Value 'SigningProfilePermissionArgs.ProfileVersion' is not present");
            }
        }

        /// <summary>
        /// A unique statement identifier. By default generated by the provider.
        /// </summary>
        [PolicyResourceProperty("statementId", "_mUnknown_StatementId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatementId;
        private bool _mUnknown_StatementId;
        public string? StatementId
        {
            get
            {
                if (!_mUnknown_StatementId) return _mValue_StatementId;
                throw new UndeferrableValueException("Value 'SigningProfilePermissionArgs.StatementId' is not present");
            }
        }

        /// <summary>
        /// A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.
        /// </summary>
        [PolicyResourceProperty("statementIdPrefix", "_mUnknown_StatementIdPrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatementIdPrefix;
        private bool _mUnknown_StatementIdPrefix;
        public string? StatementIdPrefix
        {
            get
            {
                if (!_mUnknown_StatementIdPrefix) return _mValue_StatementIdPrefix;
                throw new UndeferrableValueException("Value 'SigningProfilePermissionArgs.StatementIdPrefix' is not present");
            }
        }
    }
}
