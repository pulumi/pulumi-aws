// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Signer
{
    [PolicyResourceType("aws:signer/signingJob:SigningJob")]
    public sealed class SigningJob : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
        /// </summary>
        [Input("completedAt")]
        public string? CompletedAt;

        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
        /// </summary>
        [Input("createdAt")]
        public string? CreatedAt;

        /// <summary>
        /// The S3 bucket in which to save your signed object. See Destination below for details.
        /// </summary>
        [Input("destination")]
        public SigningJobDestination? Destination;

        /// <summary>
        /// Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
        /// </summary>
        [Input("ignoreSigningJobFailure")]
        public bool? IgnoreSigningJobFailure;

        /// <summary>
        /// The ID of the signing job on output.
        /// </summary>
        [Input("jobId")]
        public string? JobId;

        /// <summary>
        /// The IAM entity that initiated the signing job.
        /// </summary>
        [Input("jobInvoker")]
        public string? JobInvoker;

        /// <summary>
        /// The AWS account ID of the job owner.
        /// </summary>
        [Input("jobOwner")]
        public string? JobOwner;

        /// <summary>
        /// A human-readable name for the signing platform associated with the signing job.
        /// </summary>
        [Input("platformDisplayName")]
        public string? PlatformDisplayName;

        /// <summary>
        /// The platform to which your signed code image will be distributed.
        /// </summary>
        [Input("platformId")]
        public string? PlatformId;

        /// <summary>
        /// The name of the profile to initiate the signing operation.
        /// </summary>
        [Input("profileName")]
        public string? ProfileName;

        /// <summary>
        /// The version of the signing profile used to initiate the signing job.
        /// </summary>
        [Input("profileVersion")]
        public string? ProfileVersion;

        /// <summary>
        /// The IAM principal that requested the signing job.
        /// </summary>
        [Input("requestedBy")]
        public string? RequestedBy;

        /// <summary>
        /// A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
        /// </summary>
        [Input("revocationRecords")]
        public List<SigningJobRevocationRecord>? RevocationRecords;

        /// <summary>
        /// The time when the signature of a signing job expires.
        /// </summary>
        [Input("signatureExpiresAt")]
        public string? SignatureExpiresAt;

        /// <summary>
        /// Name of the S3 bucket where the signed code image is saved by code signing.
        /// </summary>
        [Input("signedObjects")]
        public List<SigningJobSignedObject>? SignedObjects;

        /// <summary>
        /// The S3 bucket that contains the object to sign. See Source below for details.
        /// </summary>
        [Input("source")]
        public SigningJobSource? Source;

        /// <summary>
        /// Status of the signing job.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// String value that contains the status reason.
        /// </summary>
        [Input("statusReason")]
        public string? StatusReason;
    }
}
