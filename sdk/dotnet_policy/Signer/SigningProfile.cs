// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Signer
{
    [PolicyResourceType("aws:signer/signingProfile:SigningProfile")]
    public sealed class SigningProfile : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the signing profile.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'SigningProfile.Arn' is not present");
            }
        }

        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'SigningProfile.Name' is not present");
            }
        }

        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'SigningProfile.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// A human-readable name for the signing platform associated with the signing profile.
        /// </summary>
        [PolicyResourceProperty("platformDisplayName", "_mUnknown_PlatformDisplayName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PlatformDisplayName;
        private bool _mUnknown_PlatformDisplayName;
        public string? PlatformDisplayName
        {
            get
            {
                if (!_mUnknown_PlatformDisplayName) return _mValue_PlatformDisplayName;
                throw new UndeferrableValueException("Value 'SigningProfile.PlatformDisplayName' is not present");
            }
        }

        /// <summary>
        /// The ID of the platform that is used by the target signing profile.
        /// </summary>
        [PolicyResourceProperty("platformId", "_mUnknown_PlatformId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PlatformId;
        private bool _mUnknown_PlatformId;
        public string? PlatformId
        {
            get
            {
                if (!_mUnknown_PlatformId) return _mValue_PlatformId;
                throw new UndeferrableValueException("Value 'SigningProfile.PlatformId' is not present");
            }
        }

        /// <summary>
        /// Revocation information for a signing profile. See `revocation_record` Block below for details.
        /// </summary>
        [PolicyResourceProperty("revocationRecords", "_mUnknown_RevocationRecords")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.SigningProfileRevocationRecord>? _mValue_RevocationRecords;
        private bool _mUnknown_RevocationRecords;
        public List<Outputs.SigningProfileRevocationRecord>? RevocationRecords
        {
            get
            {
                if (!_mUnknown_RevocationRecords) return _mValue_RevocationRecords;
                throw new UndeferrableValueException("Value 'SigningProfile.RevocationRecords' is not present");
            }
        }

        /// <summary>
        /// The validity period for a signing job. See `signature_validity_period` Block below for details.
        /// </summary>
        [PolicyResourceProperty("signatureValidityPeriod", "_mUnknown_SignatureValidityPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.SigningProfileSignatureValidityPeriod? _mValue_SignatureValidityPeriod;
        private bool _mUnknown_SignatureValidityPeriod;
        public Outputs.SigningProfileSignatureValidityPeriod? SignatureValidityPeriod
        {
            get
            {
                if (!_mUnknown_SignatureValidityPeriod) return _mValue_SignatureValidityPeriod;
                throw new UndeferrableValueException("Value 'SigningProfile.SignatureValidityPeriod' is not present");
            }
        }

        /// <summary>
        /// The AWS Certificate Manager certificate that will be used to sign code with the new signing profile. See `signing_material` Block below for details.
        /// </summary>
        [PolicyResourceProperty("signingMaterial", "_mUnknown_SigningMaterial")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.SigningProfileSigningMaterial? _mValue_SigningMaterial;
        private bool _mUnknown_SigningMaterial;
        public Outputs.SigningProfileSigningMaterial? SigningMaterial
        {
            get
            {
                if (!_mUnknown_SigningMaterial) return _mValue_SigningMaterial;
                throw new UndeferrableValueException("Value 'SigningProfile.SigningMaterial' is not present");
            }
        }

        /// <summary>
        /// The status of the target signing profile.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'SigningProfile.Status' is not present");
            }
        }

        /// <summary>
        /// A list of tags associated with the signing profile. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'SigningProfile.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'SigningProfile.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The current version of the signing profile.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'SigningProfile.Version' is not present");
            }
        }

        /// <summary>
        /// The signing profile ARN, including the profile version.
        /// </summary>
        [PolicyResourceProperty("versionArn", "_mUnknown_VersionArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VersionArn;
        private bool _mUnknown_VersionArn;
        public string? VersionArn
        {
            get
            {
                if (!_mUnknown_VersionArn) return _mValue_VersionArn;
                throw new UndeferrableValueException("Value 'SigningProfile.VersionArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:signer/signingProfile:SigningProfile")]
    public sealed class SigningProfileArgs : global::Pulumi.PolicyResourceInput
    {
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'SigningProfileArgs.Name' is not present");
            }
        }

        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'SigningProfileArgs.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// The ID of the platform that is used by the target signing profile.
        /// </summary>
        [PolicyResourceProperty("platformId", "_mUnknown_PlatformId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PlatformId;
        private bool _mUnknown_PlatformId;
        public string? PlatformId
        {
            get
            {
                if (!_mUnknown_PlatformId) return _mValue_PlatformId;
                throw new UndeferrableValueException("Value 'SigningProfileArgs.PlatformId' is not present");
            }
        }

        /// <summary>
        /// The validity period for a signing job. See `signature_validity_period` Block below for details.
        /// </summary>
        [PolicyResourceProperty("signatureValidityPeriod", "_mUnknown_SignatureValidityPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.SigningProfileSignatureValidityPeriodArgs? _mValue_SignatureValidityPeriod;
        private bool _mUnknown_SignatureValidityPeriod;
        public Inputs.SigningProfileSignatureValidityPeriodArgs? SignatureValidityPeriod
        {
            get
            {
                if (!_mUnknown_SignatureValidityPeriod) return _mValue_SignatureValidityPeriod;
                throw new UndeferrableValueException("Value 'SigningProfileArgs.SignatureValidityPeriod' is not present");
            }
        }

        /// <summary>
        /// The AWS Certificate Manager certificate that will be used to sign code with the new signing profile. See `signing_material` Block below for details.
        /// </summary>
        [PolicyResourceProperty("signingMaterial", "_mUnknown_SigningMaterial")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.SigningProfileSigningMaterialArgs? _mValue_SigningMaterial;
        private bool _mUnknown_SigningMaterial;
        public Inputs.SigningProfileSigningMaterialArgs? SigningMaterial
        {
            get
            {
                if (!_mUnknown_SigningMaterial) return _mValue_SigningMaterial;
                throw new UndeferrableValueException("Value 'SigningProfileArgs.SigningMaterial' is not present");
            }
        }

        /// <summary>
        /// A list of tags associated with the signing profile. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'SigningProfileArgs.Tags' is not present");
            }
        }
    }
}
