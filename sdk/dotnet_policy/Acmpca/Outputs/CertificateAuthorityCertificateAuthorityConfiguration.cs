// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Acmpca.Outputs
{
    public sealed class CertificateAuthorityCertificateAuthorityConfiguration
    {
        /// <summary>
        /// Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
        /// </summary>
        [PolicyResourceProperty("keyAlgorithm", "_mUnknown_KeyAlgorithm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KeyAlgorithm;
        private bool _mUnknown_KeyAlgorithm;
        public string? KeyAlgorithm
        {
            get
            {
                if (!_mUnknown_KeyAlgorithm) return _mValue_KeyAlgorithm;
                throw new UndeferrableValueException("Value 'CertificateAuthorityCertificateAuthorityConfiguration.KeyAlgorithm' is not present");
            }
        }

        /// <summary>
        /// Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
        /// </summary>
        [PolicyResourceProperty("signingAlgorithm", "_mUnknown_SigningAlgorithm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SigningAlgorithm;
        private bool _mUnknown_SigningAlgorithm;
        public string? SigningAlgorithm
        {
            get
            {
                if (!_mUnknown_SigningAlgorithm) return _mValue_SigningAlgorithm;
                throw new UndeferrableValueException("Value 'CertificateAuthorityCertificateAuthorityConfiguration.SigningAlgorithm' is not present");
            }
        }

        /// <summary>
        /// Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
        /// </summary>
        [PolicyResourceProperty("subject", "_mUnknown_Subject")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.CertificateAuthorityCertificateAuthorityConfigurationSubject? _mValue_Subject;
        private bool _mUnknown_Subject;
        public Outputs.CertificateAuthorityCertificateAuthorityConfigurationSubject? Subject
        {
            get
            {
                if (!_mUnknown_Subject) return _mValue_Subject;
                throw new UndeferrableValueException("Value 'CertificateAuthorityCertificateAuthorityConfiguration.Subject' is not present");
            }
        }
    }
}
