// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Acmpca.Inputs
{
    public sealed class CertificateAuthorityCertificateAuthorityConfigurationArgs
    {
        /// <summary>
        /// Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
        /// </summary>
        [Input("keyAlgorithm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mKeyAlgorithm;

        public string? KeyAlgorithm => _mKeyAlgorithm.GetValue("keyAlgorithm");

        /// <summary>
        /// Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
        /// </summary>
        [Input("signingAlgorithm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mSigningAlgorithm;

        public string? SigningAlgorithm => _mSigningAlgorithm.GetValue("signingAlgorithm");

        /// <summary>
        /// Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
        /// </summary>
        [Input("subject")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs> _mSubject;

        public Inputs.CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs? Subject => _mSubject.GetValue("subject");
    }
}
