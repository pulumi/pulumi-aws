// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Acmpca.Inputs
{
    public sealed class CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs
    {
        /// <summary>
        /// Fully qualified domain name (FQDN) associated with the certificate subject. Must be less than or equal to 64 characters in length.
        /// </summary>
        [Input("commonName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mCommonName;

        public string? CommonName => _mCommonName.GetValue("commonName");

        /// <summary>
        /// Two digit code that specifies the country in which the certificate subject located. Must be less than or equal to 2 characters in length.
        /// </summary>
        [Input("country")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mCountry;

        public string? Country => _mCountry.GetValue("country");

        /// <summary>
        /// Disambiguating information for the certificate subject. Must be less than or equal to 64 characters in length.
        /// </summary>
        [Input("distinguishedNameQualifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDistinguishedNameQualifier;

        public string? DistinguishedNameQualifier => _mDistinguishedNameQualifier.GetValue("distinguishedNameQualifier");

        /// <summary>
        /// Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third. Must be less than or equal to 3 characters in length.
        /// </summary>
        [Input("generationQualifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mGenerationQualifier;

        public string? GenerationQualifier => _mGenerationQualifier.GetValue("generationQualifier");

        /// <summary>
        /// First name. Must be less than or equal to 16 characters in length.
        /// </summary>
        [Input("givenName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mGivenName;

        public string? GivenName => _mGivenName.GetValue("givenName");

        /// <summary>
        /// Concatenation that typically contains the first letter of the `given_name`, the first letter of the middle name if one exists, and the first letter of the `surname`. Must be less than or equal to 5 characters in length.
        /// </summary>
        [Input("initials")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mInitials;

        public string? Initials => _mInitials.GetValue("initials");

        /// <summary>
        /// Locality (such as a city or town) in which the certificate subject is located. Must be less than or equal to 128 characters in length.
        /// </summary>
        [Input("locality")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLocality;

        public string? Locality => _mLocality.GetValue("locality");

        /// <summary>
        /// Legal name of the organization with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
        /// </summary>
        [Input("organization")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mOrganization;

        public string? Organization => _mOrganization.GetValue("organization");

        /// <summary>
        /// Subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
        /// </summary>
        [Input("organizationalUnit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mOrganizationalUnit;

        public string? OrganizationalUnit => _mOrganizationalUnit.GetValue("organizationalUnit");

        /// <summary>
        /// Typically a shortened version of a longer `given_name`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza. Must be less than or equal to 128 characters in length.
        /// </summary>
        [Input("pseudonym")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mPseudonym;

        public string? Pseudonym => _mPseudonym.GetValue("pseudonym");

        /// <summary>
        /// State in which the subject of the certificate is located. Must be less than or equal to 128 characters in length.
        /// </summary>
        [Input("state")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mState;

        public string? State => _mState.GetValue("state");

        /// <summary>
        /// Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first. Must be less than or equal to 40 characters in length.
        /// </summary>
        [Input("surname")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mSurname;

        public string? Surname => _mSurname.GetValue("surname");

        /// <summary>
        /// Title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject. Must be less than or equal to 64 characters in length.
        /// </summary>
        [Input("title")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mTitle;

        public string? Title => _mTitle.GetValue("title");
    }
}
