// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws
{
    [PolicyResourceType("aws:index/ProviderAssumeRole:ProviderAssumeRole")]
    public sealed class ProviderAssumeRole
    {
        /// <summary>
        /// The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or Âµs), ms, s, h, or m.
        /// </summary>
        [Input("duration")]
        public string? Duration;

        /// <summary>
        /// A unique identifier that might be required when you assume a role in another account.
        /// </summary>
        [Input("externalId")]
        public string? ExternalId;

        /// <summary>
        /// IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
        /// </summary>
        [Input("policy")]
        public string? Policy;

        /// <summary>
        /// Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
        /// </summary>
        [Input("policyArns")]
        public List<string>? PolicyArns;

        /// <summary>
        /// Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
        /// </summary>
        [Input("roleArn")]
        public string? RoleArn;

        /// <summary>
        /// An identifier for the assumed role session.
        /// </summary>
        [Input("sessionName")]
        public string? SessionName;

        /// <summary>
        /// Source identity specified by the principal assuming the role.
        /// </summary>
        [Input("sourceIdentity")]
        public string? SourceIdentity;

        /// <summary>
        /// Assume role session tags.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Assume role session tag keys to pass to any subsequent sessions.
        /// </summary>
        [Input("transitiveTagKeys")]
        public List<string>? TransitiveTagKeys;
    }
}
