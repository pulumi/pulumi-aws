// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.EcrPublic
{
    [PolicyResourceType("aws:ecrpublic/repositoryPolicy:RepositoryPolicy")]
    public sealed class RepositoryPolicy : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The policy document. This is a JSON formatted string.
        /// </summary>
        [PolicyResourceProperty("policy", "_mUnknown_Policy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Policy;
        private bool _mUnknown_Policy;
        public string? Policy
        {
            get
            {
                if (!_mUnknown_Policy) return _mValue_Policy;
                throw new UndeferrableValueException("Value 'RepositoryPolicy.Policy' is not present");
            }
        }

        /// <summary>
        /// The registry ID where the repository was created.
        /// </summary>
        [PolicyResourceProperty("registryId", "_mUnknown_RegistryId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RegistryId;
        private bool _mUnknown_RegistryId;
        public string? RegistryId
        {
            get
            {
                if (!_mUnknown_RegistryId) return _mValue_RegistryId;
                throw new UndeferrableValueException("Value 'RepositoryPolicy.RegistryId' is not present");
            }
        }

        /// <summary>
        /// Name of the repository to apply the policy.
        /// </summary>
        [PolicyResourceProperty("repositoryName", "_mUnknown_RepositoryName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RepositoryName;
        private bool _mUnknown_RepositoryName;
        public string? RepositoryName
        {
            get
            {
                if (!_mUnknown_RepositoryName) return _mValue_RepositoryName;
                throw new UndeferrableValueException("Value 'RepositoryPolicy.RepositoryName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ecrpublic/repositoryPolicy:RepositoryPolicy")]
    public sealed class RepositoryPolicyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The policy document. This is a JSON formatted string.
        /// </summary>
        [PolicyResourceProperty("policy", "_mUnknown_Policy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Policy;
        private bool _mUnknown_Policy;
        public string? Policy
        {
            get
            {
                if (!_mUnknown_Policy) return _mValue_Policy;
                throw new UndeferrableValueException("Value 'RepositoryPolicyArgs.Policy' is not present");
            }
        }

        /// <summary>
        /// Name of the repository to apply the policy.
        /// </summary>
        [PolicyResourceProperty("repositoryName", "_mUnknown_RepositoryName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RepositoryName;
        private bool _mUnknown_RepositoryName;
        public string? RepositoryName
        {
            get
            {
                if (!_mUnknown_RepositoryName) return _mValue_RepositoryName;
                throw new UndeferrableValueException("Value 'RepositoryPolicyArgs.RepositoryName' is not present");
            }
        }
    }
}
