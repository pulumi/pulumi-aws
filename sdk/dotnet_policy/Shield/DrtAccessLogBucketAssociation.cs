// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Shield
{
    [PolicyResourceType("aws:shield/drtAccessLogBucketAssociation:DrtAccessLogBucketAssociation")]
    public sealed class DrtAccessLogBucketAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon S3 bucket that contains the logs that you want to share.
        /// </summary>
        [PolicyResourceProperty("logBucket", "_mUnknown_LogBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogBucket;
        private bool _mUnknown_LogBucket;
        public string? LogBucket
        {
            get
            {
                if (!_mUnknown_LogBucket) return _mValue_LogBucket;
                throw new UndeferrableValueException("Value 'DrtAccessLogBucketAssociation.LogBucket' is not present");
            }
        }

        /// <summary>
        /// The ID of the Role Arn association used for allowing Shield DRT Access.
        /// </summary>
        [PolicyResourceProperty("roleArnAssociationId", "_mUnknown_RoleArnAssociationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArnAssociationId;
        private bool _mUnknown_RoleArnAssociationId;
        public string? RoleArnAssociationId
        {
            get
            {
                if (!_mUnknown_RoleArnAssociationId) return _mValue_RoleArnAssociationId;
                throw new UndeferrableValueException("Value 'DrtAccessLogBucketAssociation.RoleArnAssociationId' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.DrtAccessLogBucketAssociationTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.DrtAccessLogBucketAssociationTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'DrtAccessLogBucketAssociation.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:shield/drtAccessLogBucketAssociation:DrtAccessLogBucketAssociation")]
    public sealed class DrtAccessLogBucketAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon S3 bucket that contains the logs that you want to share.
        /// </summary>
        [PolicyResourceProperty("logBucket", "_mUnknown_LogBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogBucket;
        private bool _mUnknown_LogBucket;
        public string? LogBucket
        {
            get
            {
                if (!_mUnknown_LogBucket) return _mValue_LogBucket;
                throw new UndeferrableValueException("Value 'DrtAccessLogBucketAssociationArgs.LogBucket' is not present");
            }
        }

        /// <summary>
        /// The ID of the Role Arn association used for allowing Shield DRT Access.
        /// </summary>
        [PolicyResourceProperty("roleArnAssociationId", "_mUnknown_RoleArnAssociationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArnAssociationId;
        private bool _mUnknown_RoleArnAssociationId;
        public string? RoleArnAssociationId
        {
            get
            {
                if (!_mUnknown_RoleArnAssociationId) return _mValue_RoleArnAssociationId;
                throw new UndeferrableValueException("Value 'DrtAccessLogBucketAssociationArgs.RoleArnAssociationId' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DrtAccessLogBucketAssociationTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.DrtAccessLogBucketAssociationTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'DrtAccessLogBucketAssociationArgs.Timeouts' is not present");
            }
        }
    }
}
