// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53RecoveryReadiness
{
    [PolicyResourceType("aws:route53recoveryreadiness/readinessCheck:ReadinessCheck")]
    public sealed class ReadinessCheck : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the readiness_check
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ReadinessCheck.Arn' is not present");
            }
        }

        /// <summary>
        /// Unique name describing the readiness check.
        /// </summary>
        [PolicyResourceProperty("readinessCheckName", "_mUnknown_ReadinessCheckName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReadinessCheckName;
        private bool _mUnknown_ReadinessCheckName;
        public string? ReadinessCheckName
        {
            get
            {
                if (!_mUnknown_ReadinessCheckName) return _mValue_ReadinessCheckName;
                throw new UndeferrableValueException("Value 'ReadinessCheck.ReadinessCheckName' is not present");
            }
        }

        /// <summary>
        /// Name describing the resource set that will be monitored for readiness.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("resourceSetName", "_mUnknown_ResourceSetName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceSetName;
        private bool _mUnknown_ResourceSetName;
        public string? ResourceSetName
        {
            get
            {
                if (!_mUnknown_ResourceSetName) return _mValue_ResourceSetName;
                throw new UndeferrableValueException("Value 'ReadinessCheck.ResourceSetName' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ReadinessCheck.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ReadinessCheck.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:route53recoveryreadiness/readinessCheck:ReadinessCheck")]
    public sealed class ReadinessCheckArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Unique name describing the readiness check.
        /// </summary>
        [PolicyResourceProperty("readinessCheckName", "_mUnknown_ReadinessCheckName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReadinessCheckName;
        private bool _mUnknown_ReadinessCheckName;
        public string? ReadinessCheckName
        {
            get
            {
                if (!_mUnknown_ReadinessCheckName) return _mValue_ReadinessCheckName;
                throw new UndeferrableValueException("Value 'ReadinessCheckArgs.ReadinessCheckName' is not present");
            }
        }

        /// <summary>
        /// Name describing the resource set that will be monitored for readiness.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("resourceSetName", "_mUnknown_ResourceSetName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceSetName;
        private bool _mUnknown_ResourceSetName;
        public string? ResourceSetName
        {
            get
            {
                if (!_mUnknown_ResourceSetName) return _mValue_ResourceSetName;
                throw new UndeferrableValueException("Value 'ReadinessCheckArgs.ResourceSetName' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ReadinessCheckArgs.Tags' is not present");
            }
        }
    }
}
