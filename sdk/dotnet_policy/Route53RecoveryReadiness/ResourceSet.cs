// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Route53RecoveryReadiness
{
    [PolicyResourceType("aws:route53recoveryreadiness/resourceSet:ResourceSet")]
    public sealed class ResourceSet : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the resource set
        /// * `resources.#.component_id` - Unique identified for DNS Target Resources, use for readiness checks.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ResourceSet.Arn' is not present");
            }
        }

        /// <summary>
        /// Unique name describing the resource set.
        /// </summary>
        [PolicyResourceProperty("resourceSetName", "_mUnknown_ResourceSetName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceSetName;
        private bool _mUnknown_ResourceSetName;
        public string? ResourceSetName
        {
            get
            {
                if (!_mUnknown_ResourceSetName) return _mValue_ResourceSetName;
                throw new UndeferrableValueException("Value 'ResourceSet.ResourceSetName' is not present");
            }
        }

        /// <summary>
        /// Type of the resources in the resource set.
        /// </summary>
        [PolicyResourceProperty("resourceSetType", "_mUnknown_ResourceSetType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceSetType;
        private bool _mUnknown_ResourceSetType;
        public string? ResourceSetType
        {
            get
            {
                if (!_mUnknown_ResourceSetType) return _mValue_ResourceSetType;
                throw new UndeferrableValueException("Value 'ResourceSet.ResourceSetType' is not present");
            }
        }

        /// <summary>
        /// List of resources to add to this resource set. See below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("resources", "_mUnknown_Resources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ResourceSetResource>? _mValue_Resources;
        private bool _mUnknown_Resources;
        public List<Outputs.ResourceSetResource>? Resources
        {
            get
            {
                if (!_mUnknown_Resources) return _mValue_Resources;
                throw new UndeferrableValueException("Value 'ResourceSet.Resources' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ResourceSet.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ResourceSet.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:route53recoveryreadiness/resourceSet:ResourceSet")]
    public sealed class ResourceSetArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Unique name describing the resource set.
        /// </summary>
        [PolicyResourceProperty("resourceSetName", "_mUnknown_ResourceSetName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceSetName;
        private bool _mUnknown_ResourceSetName;
        public string? ResourceSetName
        {
            get
            {
                if (!_mUnknown_ResourceSetName) return _mValue_ResourceSetName;
                throw new UndeferrableValueException("Value 'ResourceSetArgs.ResourceSetName' is not present");
            }
        }

        /// <summary>
        /// Type of the resources in the resource set.
        /// </summary>
        [PolicyResourceProperty("resourceSetType", "_mUnknown_ResourceSetType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceSetType;
        private bool _mUnknown_ResourceSetType;
        public string? ResourceSetType
        {
            get
            {
                if (!_mUnknown_ResourceSetType) return _mValue_ResourceSetType;
                throw new UndeferrableValueException("Value 'ResourceSetArgs.ResourceSetType' is not present");
            }
        }

        /// <summary>
        /// List of resources to add to this resource set. See below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("resources", "_mUnknown_Resources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ResourceSetResourceArgs>? _mValue_Resources;
        private bool _mUnknown_Resources;
        public List<Inputs.ResourceSetResourceArgs>? Resources
        {
            get
            {
                if (!_mUnknown_Resources) return _mValue_Resources;
                throw new UndeferrableValueException("Value 'ResourceSetArgs.Resources' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ResourceSetArgs.Tags' is not present");
            }
        }
    }
}
