// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DataSync
{
    [PolicyResourceType("aws:datasync/s3Location:S3Location")]
    public sealed class S3Location : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// (Amazon S3 on Outposts only) Amazon Resource Name (ARN) of the DataSync agent on the Outpost.
        /// </summary>
        [Input("agentArns")]
        public List<string>? AgentArns;

        /// <summary>
        /// Amazon Resource Name (ARN) of the DataSync Location.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Amazon Resource Name (ARN) of the S3 bucket, or the Amazon S3 access point if the S3 bucket is located on an AWS Outposts resource.
        /// </summary>
        [Input("s3BucketArn")]
        public string? S3BucketArn;

        /// <summary>
        /// Configuration block containing information for connecting to S3.
        /// </summary>
        [Input("s3Config")]
        public S3LocationS3Config? S3Config;

        /// <summary>
        /// Amazon S3 storage class that you want to store your files in when this location is used as a task destination. [Valid values](https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes)
        /// </summary>
        [Input("s3StorageClass")]
        public string? S3StorageClass;

        /// <summary>
        /// Prefix to perform actions as source or destination.
        /// </summary>
        [Input("subdirectory")]
        public string? Subdirectory;

        /// <summary>
        /// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("uri")]
        public string? Uri;
    }
}
