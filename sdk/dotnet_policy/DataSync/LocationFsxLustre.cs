// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DataSync
{
    [PolicyResourceType("aws:datasync/locationFsxLustre:LocationFsxLustre")]
    public sealed class LocationFsxLustre : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the DataSync Location.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.Arn' is not present");
            }
        }

        /// <summary>
        /// The time that the FSx for Lustre location was created.
        /// </summary>
        [PolicyResourceProperty("creationTime", "_mUnknown_CreationTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreationTime;
        private bool _mUnknown_CreationTime;
        public string? CreationTime
        {
            get
            {
                if (!_mUnknown_CreationTime) return _mValue_CreationTime;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.CreationTime' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) for the FSx for Lustre file system.
        /// </summary>
        [PolicyResourceProperty("fsxFilesystemArn", "_mUnknown_FsxFilesystemArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FsxFilesystemArn;
        private bool _mUnknown_FsxFilesystemArn;
        public string? FsxFilesystemArn
        {
            get
            {
                if (!_mUnknown_FsxFilesystemArn) return _mValue_FsxFilesystemArn;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.FsxFilesystemArn' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Names (ARNs) of the security groups that are to use to configure the FSx for Lustre file system.
        /// </summary>
        [PolicyResourceProperty("securityGroupArns", "_mUnknown_SecurityGroupArns")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroupArns;
        private bool _mUnknown_SecurityGroupArns;
        public List<string>? SecurityGroupArns
        {
            get
            {
                if (!_mUnknown_SecurityGroupArns) return _mValue_SecurityGroupArns;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.SecurityGroupArns' is not present");
            }
        }

        /// <summary>
        /// Subdirectory to perform actions as source or destination.
        /// </summary>
        [PolicyResourceProperty("subdirectory", "_mUnknown_Subdirectory")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Subdirectory;
        private bool _mUnknown_Subdirectory;
        public string? Subdirectory
        {
            get
            {
                if (!_mUnknown_Subdirectory) return _mValue_Subdirectory;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.Subdirectory' is not present");
            }
        }

        /// <summary>
        /// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The URL of the FSx for Lustre location that was described.
        /// </summary>
        [PolicyResourceProperty("uri", "_mUnknown_Uri")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Uri;
        private bool _mUnknown_Uri;
        public string? Uri
        {
            get
            {
                if (!_mUnknown_Uri) return _mValue_Uri;
                throw new UndeferrableValueException("Value 'LocationFsxLustre.Uri' is not present");
            }
        }
    }

    [PolicyResourceType("aws:datasync/locationFsxLustre:LocationFsxLustre")]
    public sealed class LocationFsxLustreArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the FSx for Lustre file system.
        /// </summary>
        [PolicyResourceProperty("fsxFilesystemArn", "_mUnknown_FsxFilesystemArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FsxFilesystemArn;
        private bool _mUnknown_FsxFilesystemArn;
        public string? FsxFilesystemArn
        {
            get
            {
                if (!_mUnknown_FsxFilesystemArn) return _mValue_FsxFilesystemArn;
                throw new UndeferrableValueException("Value 'LocationFsxLustreArgs.FsxFilesystemArn' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Names (ARNs) of the security groups that are to use to configure the FSx for Lustre file system.
        /// </summary>
        [PolicyResourceProperty("securityGroupArns", "_mUnknown_SecurityGroupArns")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroupArns;
        private bool _mUnknown_SecurityGroupArns;
        public List<string>? SecurityGroupArns
        {
            get
            {
                if (!_mUnknown_SecurityGroupArns) return _mValue_SecurityGroupArns;
                throw new UndeferrableValueException("Value 'LocationFsxLustreArgs.SecurityGroupArns' is not present");
            }
        }

        /// <summary>
        /// Subdirectory to perform actions as source or destination.
        /// </summary>
        [PolicyResourceProperty("subdirectory", "_mUnknown_Subdirectory")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Subdirectory;
        private bool _mUnknown_Subdirectory;
        public string? Subdirectory
        {
            get
            {
                if (!_mUnknown_Subdirectory) return _mValue_Subdirectory;
                throw new UndeferrableValueException("Value 'LocationFsxLustreArgs.Subdirectory' is not present");
            }
        }

        /// <summary>
        /// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'LocationFsxLustreArgs.Tags' is not present");
            }
        }
    }
}
