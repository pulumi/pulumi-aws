// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodeConnections
{
    [PolicyResourceType("aws:codeconnections/connection:Connection")]
    public sealed class Connection : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The codeconnections connection ARN.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Connection.Arn' is not present");
            }
        }

        /// <summary>
        /// The codeconnections connection status. Possible values are `PENDING`, `AVAILABLE` and `ERROR`.
        /// </summary>
        [PolicyResourceProperty("connectionStatus", "_mUnknown_ConnectionStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConnectionStatus;
        private bool _mUnknown_ConnectionStatus;
        public string? ConnectionStatus
        {
            get
            {
                if (!_mUnknown_ConnectionStatus) return _mValue_ConnectionStatus;
                throw new UndeferrableValueException("Value 'Connection.ConnectionStatus' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the host associated with the connection. Conflicts with `provider_type`
        /// </summary>
        [PolicyResourceProperty("hostArn", "_mUnknown_HostArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostArn;
        private bool _mUnknown_HostArn;
        public string? HostArn
        {
            get
            {
                if (!_mUnknown_HostArn) return _mValue_HostArn;
                throw new UndeferrableValueException("Value 'Connection.HostArn' is not present");
            }
        }

        /// <summary>
        /// The name of the connection to be created. The name must be unique in the calling AWS account. Changing `name` will create a new resource.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Connection.Name' is not present");
            }
        }

        [PolicyResourceProperty("ownerAccountId", "_mUnknown_OwnerAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerAccountId;
        private bool _mUnknown_OwnerAccountId;
        public string? OwnerAccountId
        {
            get
            {
                if (!_mUnknown_OwnerAccountId) return _mValue_OwnerAccountId;
                throw new UndeferrableValueException("Value 'Connection.OwnerAccountId' is not present");
            }
        }

        /// <summary>
        /// The name of the external provider where your third-party code repository is configured. Changing `provider_type` will create a new resource. Conflicts with `host_arn`.
        /// </summary>
        [PolicyResourceProperty("providerType", "_mUnknown_ProviderType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProviderType;
        private bool _mUnknown_ProviderType;
        public string? ProviderType
        {
            get
            {
                if (!_mUnknown_ProviderType) return _mValue_ProviderType;
                throw new UndeferrableValueException("Value 'Connection.ProviderType' is not present");
            }
        }

        /// <summary>
        /// Map of key-value resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Connection.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Connection.TagsAll' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ConnectionTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.ConnectionTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'Connection.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:codeconnections/connection:Connection")]
    public sealed class ConnectionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the host associated with the connection. Conflicts with `provider_type`
        /// </summary>
        [PolicyResourceProperty("hostArn", "_mUnknown_HostArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostArn;
        private bool _mUnknown_HostArn;
        public string? HostArn
        {
            get
            {
                if (!_mUnknown_HostArn) return _mValue_HostArn;
                throw new UndeferrableValueException("Value 'ConnectionArgs.HostArn' is not present");
            }
        }

        /// <summary>
        /// The name of the connection to be created. The name must be unique in the calling AWS account. Changing `name` will create a new resource.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ConnectionArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The name of the external provider where your third-party code repository is configured. Changing `provider_type` will create a new resource. Conflicts with `host_arn`.
        /// </summary>
        [PolicyResourceProperty("providerType", "_mUnknown_ProviderType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProviderType;
        private bool _mUnknown_ProviderType;
        public string? ProviderType
        {
            get
            {
                if (!_mUnknown_ProviderType) return _mValue_ProviderType;
                throw new UndeferrableValueException("Value 'ConnectionArgs.ProviderType' is not present");
            }
        }

        /// <summary>
        /// Map of key-value resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ConnectionArgs.Tags' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ConnectionTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.ConnectionTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ConnectionArgs.Timeouts' is not present");
            }
        }
    }
}
