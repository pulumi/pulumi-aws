// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.SecurityHub.Outputs
{
    public sealed class InsightFiltersFindingProviderFieldsCriticality
    {
        /// <summary>
        /// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
        /// </summary>
        [PolicyResourceProperty("eq", "_mUnknown_Eq")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Eq;
        private bool _mUnknown_Eq;
        public string? Eq
        {
            get
            {
                if (!_mUnknown_Eq) return _mValue_Eq;
                throw new UndeferrableValueException("Value 'InsightFiltersFindingProviderFieldsCriticality.Eq' is not present");
            }
        }

        /// <summary>
        /// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
        /// </summary>
        [PolicyResourceProperty("gte", "_mUnknown_Gte")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Gte;
        private bool _mUnknown_Gte;
        public string? Gte
        {
            get
            {
                if (!_mUnknown_Gte) return _mValue_Gte;
                throw new UndeferrableValueException("Value 'InsightFiltersFindingProviderFieldsCriticality.Gte' is not present");
            }
        }

        /// <summary>
        /// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
        /// </summary>
        [PolicyResourceProperty("lte", "_mUnknown_Lte")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Lte;
        private bool _mUnknown_Lte;
        public string? Lte
        {
            get
            {
                if (!_mUnknown_Lte) return _mValue_Lte;
                throw new UndeferrableValueException("Value 'InsightFiltersFindingProviderFieldsCriticality.Lte' is not present");
            }
        }
    }
}
