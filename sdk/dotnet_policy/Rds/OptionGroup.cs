// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rds
{
    [PolicyResourceType("aws:rds/optionGroup:OptionGroup")]
    public sealed class OptionGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the DB option group.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'OptionGroup.Arn' is not present");
            }
        }

        /// <summary>
        /// Specifies the name of the engine that this option group should be associated with.
        /// </summary>
        [PolicyResourceProperty("engineName", "_mUnknown_EngineName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineName;
        private bool _mUnknown_EngineName;
        public string? EngineName
        {
            get
            {
                if (!_mUnknown_EngineName) return _mValue_EngineName;
                throw new UndeferrableValueException("Value 'OptionGroup.EngineName' is not present");
            }
        }

        /// <summary>
        /// Specifies the major version of the engine that this option group should be associated with.
        /// </summary>
        [PolicyResourceProperty("majorEngineVersion", "_mUnknown_MajorEngineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MajorEngineVersion;
        private bool _mUnknown_MajorEngineVersion;
        public string? MajorEngineVersion
        {
            get
            {
                if (!_mUnknown_MajorEngineVersion) return _mValue_MajorEngineVersion;
                throw new UndeferrableValueException("Value 'OptionGroup.MajorEngineVersion' is not present");
            }
        }

        /// <summary>
        /// Name of the option group. If omitted, the provider will assign a random, unique name. Must be lowercase, to match as it is stored in AWS.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'OptionGroup.Name' is not present");
            }
        }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`. Must be lowercase, to match as it is stored in AWS.
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'OptionGroup.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// Description of the option group. Defaults to "Managed by Pulumi".
        /// </summary>
        [PolicyResourceProperty("optionGroupDescription", "_mUnknown_OptionGroupDescription")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OptionGroupDescription;
        private bool _mUnknown_OptionGroupDescription;
        public string? OptionGroupDescription
        {
            get
            {
                if (!_mUnknown_OptionGroupDescription) return _mValue_OptionGroupDescription;
                throw new UndeferrableValueException("Value 'OptionGroup.OptionGroupDescription' is not present");
            }
        }

        /// <summary>
        /// The options to apply. See `option` Block below for more details.
        /// </summary>
        [PolicyResourceProperty("options", "_mUnknown_Options")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.OptionGroupOption>? _mValue_Options;
        private bool _mUnknown_Options;
        public List<Outputs.OptionGroupOption>? Options
        {
            get
            {
                if (!_mUnknown_Options) return _mValue_Options;
                throw new UndeferrableValueException("Value 'OptionGroup.Options' is not present");
            }
        }

        /// <summary>
        /// Set to true if you do not wish the option group to be deleted at destroy time, and instead just remove the option group from the Pulumi state.
        /// </summary>
        [PolicyResourceProperty("skipDestroy", "_mUnknown_SkipDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_SkipDestroy;
        private bool _mUnknown_SkipDestroy;
        public bool? SkipDestroy
        {
            get
            {
                if (!_mUnknown_SkipDestroy) return _mValue_SkipDestroy;
                throw new UndeferrableValueException("Value 'OptionGroup.SkipDestroy' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'OptionGroup.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'OptionGroup.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:rds/optionGroup:OptionGroup")]
    public sealed class OptionGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies the name of the engine that this option group should be associated with.
        /// </summary>
        [PolicyResourceProperty("engineName", "_mUnknown_EngineName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineName;
        private bool _mUnknown_EngineName;
        public string? EngineName
        {
            get
            {
                if (!_mUnknown_EngineName) return _mValue_EngineName;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.EngineName' is not present");
            }
        }

        /// <summary>
        /// Specifies the major version of the engine that this option group should be associated with.
        /// </summary>
        [PolicyResourceProperty("majorEngineVersion", "_mUnknown_MajorEngineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MajorEngineVersion;
        private bool _mUnknown_MajorEngineVersion;
        public string? MajorEngineVersion
        {
            get
            {
                if (!_mUnknown_MajorEngineVersion) return _mValue_MajorEngineVersion;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.MajorEngineVersion' is not present");
            }
        }

        /// <summary>
        /// Name of the option group. If omitted, the provider will assign a random, unique name. Must be lowercase, to match as it is stored in AWS.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`. Must be lowercase, to match as it is stored in AWS.
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// Description of the option group. Defaults to "Managed by Pulumi".
        /// </summary>
        [PolicyResourceProperty("optionGroupDescription", "_mUnknown_OptionGroupDescription")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OptionGroupDescription;
        private bool _mUnknown_OptionGroupDescription;
        public string? OptionGroupDescription
        {
            get
            {
                if (!_mUnknown_OptionGroupDescription) return _mValue_OptionGroupDescription;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.OptionGroupDescription' is not present");
            }
        }

        /// <summary>
        /// The options to apply. See `option` Block below for more details.
        /// </summary>
        [PolicyResourceProperty("options", "_mUnknown_Options")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.OptionGroupOptionArgs>? _mValue_Options;
        private bool _mUnknown_Options;
        public List<Inputs.OptionGroupOptionArgs>? Options
        {
            get
            {
                if (!_mUnknown_Options) return _mValue_Options;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.Options' is not present");
            }
        }

        /// <summary>
        /// Set to true if you do not wish the option group to be deleted at destroy time, and instead just remove the option group from the Pulumi state.
        /// </summary>
        [PolicyResourceProperty("skipDestroy", "_mUnknown_SkipDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_SkipDestroy;
        private bool _mUnknown_SkipDestroy;
        public bool? SkipDestroy
        {
            get
            {
                if (!_mUnknown_SkipDestroy) return _mValue_SkipDestroy;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.SkipDestroy' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'OptionGroupArgs.Tags' is not present");
            }
        }
    }
}
