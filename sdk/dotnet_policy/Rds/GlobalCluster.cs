// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rds
{
    [PolicyResourceType("aws:rds/globalCluster:GlobalCluster")]
    public sealed class GlobalCluster : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// RDS Global Cluster Amazon Resource Name (ARN).
        /// </summary>
        [Input("arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mArn;

        public string? Arn => _mArn.GetValue("arn");

        /// <summary>
        /// Name for an automatically created database on cluster creation. Pulumi will only perform drift detection if a configuration value is provided.
        /// </summary>
        [Input("databaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDatabaseName;

        public string? DatabaseName => _mDatabaseName.GetValue("databaseName");

        /// <summary>
        /// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
        /// </summary>
        [Input("deletionProtection")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mDeletionProtection;

        public bool? DeletionProtection => _mDeletionProtection.GetValue("deletionProtection");

        /// <summary>
        /// Writer endpoint for the new global database cluster. This endpoint always points to the writer DB instance in the current primary cluster.
        /// </summary>
        [Input("endpoint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEndpoint;

        public string? Endpoint => _mEndpoint.GetValue("endpoint");

        /// <summary>
        /// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Valid values: `aurora`, `aurora-mysql`, `aurora-postgresql`. Defaults to `aurora`. Conflicts with `source_db_cluster_identifier`.
        /// </summary>
        [Input("engine")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEngine;

        public string? Engine => _mEngine.GetValue("engine");

        /// <summary>
        /// The life cycle type for this DB instance. This setting applies only to Aurora PostgreSQL-based global databases. Valid values are `open-source-rds-extended-support`, `open-source-rds-extended-support-disabled`. Default value is `open-source-rds-extended-support`. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
        /// </summary>
        [Input("engineLifecycleSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEngineLifecycleSupport;

        public string? EngineLifecycleSupport => _mEngineLifecycleSupport.GetValue("engineLifecycleSupport");

        /// <summary>
        /// Engine version of the Aurora global database. The `engine`, `engine_version`, and `instance_class` (on the `aws.rds.ClusterInstance`) must together support global databases. See [Using Amazon Aurora global databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) for more information. By upgrading the engine version, the provider will upgrade cluster members. **NOTE:** To avoid an `inconsistent final plan` error while upgrading, use the `lifecycle` `ignore_changes` for `engine_version` meta argument on the associated `aws.rds.Cluster` resource as shown above in Upgrading Engine Versions example.
        /// </summary>
        [Input("engineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEngineVersion;

        public string? EngineVersion => _mEngineVersion.GetValue("engineVersion");

        [Input("engineVersionActual")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEngineVersionActual;

        public string? EngineVersionActual => _mEngineVersionActual.GetValue("engineVersionActual");

        /// <summary>
        /// Enable to remove DB Cluster members from Global Cluster on destroy. Required with `source_db_cluster_identifier`.
        /// </summary>
        [Input("forceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mForceDestroy;

        public bool? ForceDestroy => _mForceDestroy.GetValue("forceDestroy");

        /// <summary>
        /// Global cluster identifier.
        /// </summary>
        [Input("globalClusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mGlobalClusterIdentifier;

        public string? GlobalClusterIdentifier => _mGlobalClusterIdentifier.GetValue("globalClusterIdentifier");

        /// <summary>
        /// Set of objects containing Global Cluster members.
        /// </summary>
        [Input("globalClusterMembers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Outputs.GlobalClusterGlobalClusterMember>> _mGlobalClusterMembers;

        public List<Outputs.GlobalClusterGlobalClusterMember>? GlobalClusterMembers => _mGlobalClusterMembers.GetValue("globalClusterMembers");

        /// <summary>
        /// AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
        /// </summary>
        [Input("globalClusterResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mGlobalClusterResourceId;

        public string? GlobalClusterResourceId => _mGlobalClusterResourceId.GetValue("globalClusterResourceId");

        /// <summary>
        /// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value. **NOTE:** After initial creation, this argument can be removed and replaced with `engine` and `engine_version`. This allows upgrading the engine version of the Global Cluster.
        /// </summary>
        [Input("sourceDbClusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mSourceDbClusterIdentifier;

        public string? SourceDbClusterIdentifier => _mSourceDbClusterIdentifier.GetValue("sourceDbClusterIdentifier");

        /// <summary>
        /// Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
        /// </summary>
        [Input("storageEncrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mStorageEncrypted;

        public bool? StorageEncrypted => _mStorageEncrypted.GetValue("storageEncrypted");

        /// <summary>
        /// A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTags;

        public Dictionary<string, string>? Tags => _mTags.GetValue("tags");

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTagsAll;

        public Dictionary<string, string>? TagsAll => _mTagsAll.GetValue("tagsAll");
    }

    [PolicyResourceType("aws:rds/globalCluster:GlobalCluster")]
    public sealed class GlobalClusterArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name for an automatically created database on cluster creation. Pulumi will only perform drift detection if a configuration value is provided.
        /// </summary>
        [Input("databaseName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDatabaseName;

        public string? DatabaseName => _mDatabaseName.GetValue("databaseName");

        /// <summary>
        /// If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
        /// </summary>
        [Input("deletionProtection")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mDeletionProtection;

        public bool? DeletionProtection => _mDeletionProtection.GetValue("deletionProtection");

        /// <summary>
        /// Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Valid values: `aurora`, `aurora-mysql`, `aurora-postgresql`. Defaults to `aurora`. Conflicts with `source_db_cluster_identifier`.
        /// </summary>
        [Input("engine")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEngine;

        public string? Engine => _mEngine.GetValue("engine");

        /// <summary>
        /// The life cycle type for this DB instance. This setting applies only to Aurora PostgreSQL-based global databases. Valid values are `open-source-rds-extended-support`, `open-source-rds-extended-support-disabled`. Default value is `open-source-rds-extended-support`. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
        /// </summary>
        [Input("engineLifecycleSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEngineLifecycleSupport;

        public string? EngineLifecycleSupport => _mEngineLifecycleSupport.GetValue("engineLifecycleSupport");

        /// <summary>
        /// Engine version of the Aurora global database. The `engine`, `engine_version`, and `instance_class` (on the `aws.rds.ClusterInstance`) must together support global databases. See [Using Amazon Aurora global databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) for more information. By upgrading the engine version, the provider will upgrade cluster members. **NOTE:** To avoid an `inconsistent final plan` error while upgrading, use the `lifecycle` `ignore_changes` for `engine_version` meta argument on the associated `aws.rds.Cluster` resource as shown above in Upgrading Engine Versions example.
        /// </summary>
        [Input("engineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEngineVersion;

        public string? EngineVersion => _mEngineVersion.GetValue("engineVersion");

        /// <summary>
        /// Enable to remove DB Cluster members from Global Cluster on destroy. Required with `source_db_cluster_identifier`.
        /// </summary>
        [Input("forceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mForceDestroy;

        public bool? ForceDestroy => _mForceDestroy.GetValue("forceDestroy");

        /// <summary>
        /// Global cluster identifier.
        /// </summary>
        [Input("globalClusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mGlobalClusterIdentifier;

        public string? GlobalClusterIdentifier => _mGlobalClusterIdentifier.GetValue("globalClusterIdentifier");

        /// <summary>
        /// Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value. **NOTE:** After initial creation, this argument can be removed and replaced with `engine` and `engine_version`. This allows upgrading the engine version of the Global Cluster.
        /// </summary>
        [Input("sourceDbClusterIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mSourceDbClusterIdentifier;

        public string? SourceDbClusterIdentifier => _mSourceDbClusterIdentifier.GetValue("sourceDbClusterIdentifier");

        /// <summary>
        /// Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
        /// </summary>
        [Input("storageEncrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mStorageEncrypted;

        public bool? StorageEncrypted => _mStorageEncrypted.GetValue("storageEncrypted");

        /// <summary>
        /// A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mTags;

        public Dictionary<string, string>? Tags => _mTags.GetValue("tags");
    }
}
