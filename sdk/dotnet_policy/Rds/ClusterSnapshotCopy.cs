// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rds
{
    [PolicyResourceType("aws:rds/clusterSnapshotCopy:ClusterSnapshotCopy")]
    public sealed class ClusterSnapshotCopy : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Specifies the allocated storage size in gigabytes (GB).
        /// </summary>
        [PolicyResourceProperty("allocatedStorage", "_mUnknown_AllocatedStorage")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AllocatedStorage;
        private bool _mUnknown_AllocatedStorage;
        public int? AllocatedStorage
        {
            get
            {
                if (!_mUnknown_AllocatedStorage) return _mValue_AllocatedStorage;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.AllocatedStorage' is not present");
            }
        }

        /// <summary>
        /// Whether to copy existing tags. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("copyTags", "_mUnknown_CopyTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_CopyTags;
        private bool _mUnknown_CopyTags;
        public bool? CopyTags
        {
            get
            {
                if (!_mUnknown_CopyTags) return _mValue_CopyTags;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.CopyTags' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) for the DB cluster snapshot.
        /// </summary>
        [PolicyResourceProperty("dbClusterSnapshotArn", "_mUnknown_DbClusterSnapshotArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DbClusterSnapshotArn;
        private bool _mUnknown_DbClusterSnapshotArn;
        public string? DbClusterSnapshotArn
        {
            get
            {
                if (!_mUnknown_DbClusterSnapshotArn) return _mValue_DbClusterSnapshotArn;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.DbClusterSnapshotArn' is not present");
            }
        }

        /// <summary>
        /// The Destination region to place snapshot copy.
        /// </summary>
        [PolicyResourceProperty("destinationRegion", "_mUnknown_DestinationRegion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationRegion;
        private bool _mUnknown_DestinationRegion;
        public string? DestinationRegion
        {
            get
            {
                if (!_mUnknown_DestinationRegion) return _mValue_DestinationRegion;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.DestinationRegion' is not present");
            }
        }

        /// <summary>
        /// Specifies the name of the database engine.
        /// </summary>
        [PolicyResourceProperty("engine", "_mUnknown_Engine")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Engine;
        private bool _mUnknown_Engine;
        public string? Engine
        {
            get
            {
                if (!_mUnknown_Engine) return _mValue_Engine;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.Engine' is not present");
            }
        }

        /// <summary>
        /// Specifies the version of the database engine.
        /// </summary>
        [PolicyResourceProperty("engineVersion", "_mUnknown_EngineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineVersion;
        private bool _mUnknown_EngineVersion;
        public string? EngineVersion
        {
            get
            {
                if (!_mUnknown_EngineVersion) return _mValue_EngineVersion;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.EngineVersion' is not present");
            }
        }

        /// <summary>
        /// KMS key ID.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// License model information for the restored DB instance.
        /// </summary>
        [PolicyResourceProperty("licenseModel", "_mUnknown_LicenseModel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LicenseModel;
        private bool _mUnknown_LicenseModel;
        public string? LicenseModel
        {
            get
            {
                if (!_mUnknown_LicenseModel) return _mValue_LicenseModel;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.LicenseModel' is not present");
            }
        }

        /// <summary>
        /// URL that contains a Signature Version 4 signed request.
        /// </summary>
        [PolicyResourceProperty("presignedUrl", "_mUnknown_PresignedUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PresignedUrl;
        private bool _mUnknown_PresignedUrl;
        public string? PresignedUrl
        {
            get
            {
                if (!_mUnknown_PresignedUrl) return _mValue_PresignedUrl;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.PresignedUrl' is not present");
            }
        }

        /// <summary>
        /// List of AWS Account IDs to share the snapshot with. Use `all` to make the snapshot public.
        /// </summary>
        [PolicyResourceProperty("sharedAccounts", "_mUnknown_SharedAccounts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SharedAccounts;
        private bool _mUnknown_SharedAccounts;
        public List<string>? SharedAccounts
        {
            get
            {
                if (!_mUnknown_SharedAccounts) return _mValue_SharedAccounts;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.SharedAccounts' is not present");
            }
        }

        [PolicyResourceProperty("snapshotType", "_mUnknown_SnapshotType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SnapshotType;
        private bool _mUnknown_SnapshotType;
        public string? SnapshotType
        {
            get
            {
                if (!_mUnknown_SnapshotType) return _mValue_SnapshotType;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.SnapshotType' is not present");
            }
        }

        /// <summary>
        /// Identifier of the source snapshot.
        /// </summary>
        [PolicyResourceProperty("sourceDbClusterSnapshotIdentifier", "_mUnknown_SourceDbClusterSnapshotIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceDbClusterSnapshotIdentifier;
        private bool _mUnknown_SourceDbClusterSnapshotIdentifier;
        public string? SourceDbClusterSnapshotIdentifier
        {
            get
            {
                if (!_mUnknown_SourceDbClusterSnapshotIdentifier) return _mValue_SourceDbClusterSnapshotIdentifier;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.SourceDbClusterSnapshotIdentifier' is not present");
            }
        }

        /// <summary>
        /// Specifies whether the DB cluster snapshot is encrypted.
        /// </summary>
        [PolicyResourceProperty("storageEncrypted", "_mUnknown_StorageEncrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_StorageEncrypted;
        private bool _mUnknown_StorageEncrypted;
        public bool? StorageEncrypted
        {
            get
            {
                if (!_mUnknown_StorageEncrypted) return _mValue_StorageEncrypted;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.StorageEncrypted' is not present");
            }
        }

        /// <summary>
        /// Specifies the storage type associated with DB cluster snapshot.
        /// </summary>
        [PolicyResourceProperty("storageType", "_mUnknown_StorageType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StorageType;
        private bool _mUnknown_StorageType;
        public string? StorageType
        {
            get
            {
                if (!_mUnknown_StorageType) return _mValue_StorageType;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.StorageType' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Identifier for the snapshot.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("targetDbClusterSnapshotIdentifier", "_mUnknown_TargetDbClusterSnapshotIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetDbClusterSnapshotIdentifier;
        private bool _mUnknown_TargetDbClusterSnapshotIdentifier;
        public string? TargetDbClusterSnapshotIdentifier
        {
            get
            {
                if (!_mUnknown_TargetDbClusterSnapshotIdentifier) return _mValue_TargetDbClusterSnapshotIdentifier;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.TargetDbClusterSnapshotIdentifier' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ClusterSnapshotCopyTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.ClusterSnapshotCopyTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.Timeouts' is not present");
            }
        }

        /// <summary>
        /// Provides the VPC ID associated with the DB cluster snapshot.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopy.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:rds/clusterSnapshotCopy:ClusterSnapshotCopy")]
    public sealed class ClusterSnapshotCopyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Whether to copy existing tags. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("copyTags", "_mUnknown_CopyTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_CopyTags;
        private bool _mUnknown_CopyTags;
        public bool? CopyTags
        {
            get
            {
                if (!_mUnknown_CopyTags) return _mValue_CopyTags;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.CopyTags' is not present");
            }
        }

        /// <summary>
        /// The Destination region to place snapshot copy.
        /// </summary>
        [PolicyResourceProperty("destinationRegion", "_mUnknown_DestinationRegion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationRegion;
        private bool _mUnknown_DestinationRegion;
        public string? DestinationRegion
        {
            get
            {
                if (!_mUnknown_DestinationRegion) return _mValue_DestinationRegion;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.DestinationRegion' is not present");
            }
        }

        /// <summary>
        /// KMS key ID.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// URL that contains a Signature Version 4 signed request.
        /// </summary>
        [PolicyResourceProperty("presignedUrl", "_mUnknown_PresignedUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PresignedUrl;
        private bool _mUnknown_PresignedUrl;
        public string? PresignedUrl
        {
            get
            {
                if (!_mUnknown_PresignedUrl) return _mValue_PresignedUrl;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.PresignedUrl' is not present");
            }
        }

        /// <summary>
        /// List of AWS Account IDs to share the snapshot with. Use `all` to make the snapshot public.
        /// </summary>
        [PolicyResourceProperty("sharedAccounts", "_mUnknown_SharedAccounts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SharedAccounts;
        private bool _mUnknown_SharedAccounts;
        public List<string>? SharedAccounts
        {
            get
            {
                if (!_mUnknown_SharedAccounts) return _mValue_SharedAccounts;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.SharedAccounts' is not present");
            }
        }

        /// <summary>
        /// Identifier of the source snapshot.
        /// </summary>
        [PolicyResourceProperty("sourceDbClusterSnapshotIdentifier", "_mUnknown_SourceDbClusterSnapshotIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceDbClusterSnapshotIdentifier;
        private bool _mUnknown_SourceDbClusterSnapshotIdentifier;
        public string? SourceDbClusterSnapshotIdentifier
        {
            get
            {
                if (!_mUnknown_SourceDbClusterSnapshotIdentifier) return _mValue_SourceDbClusterSnapshotIdentifier;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.SourceDbClusterSnapshotIdentifier' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Identifier for the snapshot.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("targetDbClusterSnapshotIdentifier", "_mUnknown_TargetDbClusterSnapshotIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetDbClusterSnapshotIdentifier;
        private bool _mUnknown_TargetDbClusterSnapshotIdentifier;
        public string? TargetDbClusterSnapshotIdentifier
        {
            get
            {
                if (!_mUnknown_TargetDbClusterSnapshotIdentifier) return _mValue_TargetDbClusterSnapshotIdentifier;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.TargetDbClusterSnapshotIdentifier' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ClusterSnapshotCopyTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.ClusterSnapshotCopyTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ClusterSnapshotCopyArgs.Timeouts' is not present");
            }
        }
    }
}
