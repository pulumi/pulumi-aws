// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rds
{
    [PolicyResourceType("aws:rds/customDbEngineVersion:CustomDbEngineVersion")]
    public sealed class CustomDbEngineVersion : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the custom engine version.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The date and time that the CEV was created.
        /// </summary>
        [Input("createTime")]
        public string? CreateTime;

        /// <summary>
        /// The name of the Amazon S3 bucket that contains the database installation files.
        /// </summary>
        [Input("databaseInstallationFilesS3BucketName")]
        public string? DatabaseInstallationFilesS3BucketName;

        /// <summary>
        /// The prefix for the Amazon S3 bucket that contains the database installation files.
        /// </summary>
        [Input("databaseInstallationFilesS3Prefix")]
        public string? DatabaseInstallationFilesS3Prefix;

        /// <summary>
        /// The name of the DB parameter group family for the CEV.
        /// </summary>
        [Input("dbParameterGroupFamily")]
        public string? DbParameterGroupFamily;

        /// <summary>
        /// The description of the CEV.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The name of the database engine. Valid values are `custom-oracle*`, `custom-sqlserver*`.
        /// </summary>
        [Input("engine")]
        public string? Engine;

        /// <summary>
        /// The version of the database engine.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion;

        /// <summary>
        /// The name of the manifest file within the local filesystem. Conflicts with `manifest`.
        /// </summary>
        [Input("filename")]
        public string? Filename;

        /// <summary>
        /// The ID of the AMI that was created with the CEV.
        /// </summary>
        [Input("imageId")]
        public string? ImageId;

        /// <summary>
        /// The ARN of the AWS KMS key that is used to encrypt the database installation files. Required for RDS Custom for Oracle.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId;

        /// <summary>
        /// The major version of the database engine.
        /// </summary>
        [Input("majorEngineVersion")]
        public string? MajorEngineVersion;

        /// <summary>
        /// The manifest file, in JSON format, that contains the list of database installation files. Conflicts with `filename`.
        /// </summary>
        [Input("manifest")]
        public string? Manifest;

        /// <summary>
        /// The returned manifest file, in JSON format, service generated and often different from input `manifest`.
        /// </summary>
        [Input("manifestComputed")]
        public string? ManifestComputed;

        /// <summary>
        /// Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the manifest source specified with `filename`. The usual way to set this is filebase64sha256("manifest.json") where "manifest.json" is the local filename of the manifest source.
        /// </summary>
        [Input("manifestHash")]
        public string? ManifestHash;

        /// <summary>
        /// The ID of the AMI to create the CEV from. Required for RDS Custom for SQL Server. For RDS Custom for Oracle, you can specify an AMI ID that was used in a different Oracle CEV.
        /// </summary>
        [Input("sourceImageId")]
        public string? SourceImageId;

        /// <summary>
        /// The status of the CEV. Valid values are `available`, `inactive`, `inactive-except-restore`.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
