// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rds
{
    [PolicyResourceType("aws:rds/reservedInstance:ReservedInstance")]
    public sealed class ReservedInstance : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN for the reserved DB instance.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Currency code for the reserved DB instance.
        /// </summary>
        [Input("currencyCode")]
        public string? CurrencyCode;

        /// <summary>
        /// DB instance class for the reserved DB instance.
        /// </summary>
        [Input("dbInstanceClass")]
        public string? DbInstanceClass;

        /// <summary>
        /// Duration of the reservation in seconds.
        /// </summary>
        [Input("duration")]
        public int? Duration;

        /// <summary>
        /// Fixed price charged for this reserved DB instance.
        /// </summary>
        [Input("fixedPrice")]
        public double? FixedPrice;

        /// <summary>
        /// Number of instances to reserve. Default value is `1`.
        /// </summary>
        [Input("instanceCount")]
        public int? InstanceCount;

        /// <summary>
        /// Unique identifier for the lease associated with the reserved DB instance. Amazon Web Services Support might request the lease ID for an issue related to a reserved DB instance.
        /// </summary>
        [Input("leaseId")]
        public string? LeaseId;

        /// <summary>
        /// Whether the reservation applies to Multi-AZ deployments.
        /// </summary>
        [Input("multiAz")]
        public bool? MultiAz;

        /// <summary>
        /// ID of the Reserved DB instance offering to purchase. To determine an `offering_id`, see the `aws.rds.getReservedInstanceOffering` data source.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("offeringId")]
        public string? OfferingId;

        /// <summary>
        /// Offering type of this reserved DB instance.
        /// </summary>
        [Input("offeringType")]
        public string? OfferingType;

        /// <summary>
        /// Description of the reserved DB instance.
        /// </summary>
        [Input("productDescription")]
        public string? ProductDescription;

        /// <summary>
        /// Recurring price charged to run this reserved DB instance.
        /// </summary>
        [Input("recurringCharges")]
        public List<ReservedInstanceRecurringCharge>? RecurringCharges;

        /// <summary>
        /// Customer-specified identifier to track this reservation.
        /// </summary>
        [Input("reservationId")]
        public string? ReservationId;

        /// <summary>
        /// Time the reservation started.
        /// </summary>
        [Input("startTime")]
        public string? StartTime;

        /// <summary>
        /// State of the reserved DB instance.
        /// </summary>
        [Input("state")]
        public string? State;

        /// <summary>
        /// Map of tags to assign to the DB reservation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Hourly price charged for this reserved DB instance.
        /// </summary>
        [Input("usagePrice")]
        public double? UsagePrice;
    }
}
