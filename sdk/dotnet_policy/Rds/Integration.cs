// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rds
{
    [PolicyResourceType("aws:rds/integration:Integration")]
    public sealed class Integration : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Set of non-secret keyâ€“value pairs that contains additional contextual information about the data.
        /// For more information, see the [User Guide](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context).
        /// You can only include this parameter if you specify the `kms_key_id` parameter.
        /// </summary>
        [Input("additionalEncryptionContext")]
        public Dictionary<string, string>? AdditionalEncryptionContext;

        /// <summary>
        /// ARN of the Integration.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Data filters for the integration.
        /// These filters determine which tables from the source database are sent to the target Amazon Redshift data warehouse.
        /// The value should match the syntax from the AWS CLI which includes an `include:` or `exclude:` prefix before a filter expression.
        /// Multiple expressions are separated by a comma.
        /// See the [Amazon RDS data filtering guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/zero-etl.filtering.html) for additional details.
        /// </summary>
        [Input("dataFilter")]
        public string? DataFilter;

        /// <summary>
        /// Name of the integration.
        /// </summary>
        [Input("integrationName")]
        public string? IntegrationName;

        /// <summary>
        /// KMS key identifier for the key to use to encrypt the integration.
        /// If you don't specify an encryption key, RDS uses a default AWS owned key.
        /// If you use the default AWS owned key, you should ignore `kms_key_id` parameter by using `lifecycle` parameter to avoid unintended change after the first creation.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId;

        /// <summary>
        /// ARN of the database to use as the source for replication.
        /// </summary>
        [Input("sourceArn")]
        public string? SourceArn;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// ARN of the Redshift data warehouse to use as the target for replication.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("targetArn")]
        public string? TargetArn;

        [Input("timeouts")]
        public IntegrationTimeouts? Timeouts;
    }
}
