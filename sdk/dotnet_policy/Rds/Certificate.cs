// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rds
{
    [PolicyResourceType("aws:rds/certificate:Certificate")]
    public sealed class Certificate : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Certificate identifier. For example, `rds-ca-rsa4096-g1`. Refer to [AWS RDS (Relational Database) Certificate Identifier](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html#UsingWithRDS.SSL.CertificateIdentifier) for more information.
        /// </summary>
        [PolicyResourceProperty("certificateIdentifier", "_mUnknown_CertificateIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CertificateIdentifier;
        private bool _mUnknown_CertificateIdentifier;
        public string? CertificateIdentifier
        {
            get
            {
                if (!_mUnknown_CertificateIdentifier) return _mValue_CertificateIdentifier;
                throw new UndeferrableValueException("Value 'Certificate.CertificateIdentifier' is not present");
            }
        }
    }

    [PolicyResourceType("aws:rds/certificate:Certificate")]
    public sealed class CertificateArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Certificate identifier. For example, `rds-ca-rsa4096-g1`. Refer to [AWS RDS (Relational Database) Certificate Identifier](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html#UsingWithRDS.SSL.CertificateIdentifier) for more information.
        /// </summary>
        [PolicyResourceProperty("certificateIdentifier", "_mUnknown_CertificateIdentifier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CertificateIdentifier;
        private bool _mUnknown_CertificateIdentifier;
        public string? CertificateIdentifier
        {
            get
            {
                if (!_mUnknown_CertificateIdentifier) return _mValue_CertificateIdentifier;
                throw new UndeferrableValueException("Value 'CertificateArgs.CertificateIdentifier' is not present");
            }
        }
    }
}
