// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Emr
{
    [PolicyResourceType("aws:emr/instanceGroup:InstanceGroup")]
    public sealed class InstanceGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
        /// </summary>
        [PolicyResourceProperty("autoscalingPolicy", "_mUnknown_AutoscalingPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoscalingPolicy;
        private bool _mUnknown_AutoscalingPolicy;
        public string? AutoscalingPolicy
        {
            get
            {
                if (!_mUnknown_AutoscalingPolicy) return _mValue_AutoscalingPolicy;
                throw new UndeferrableValueException("Value 'InstanceGroup.AutoscalingPolicy' is not present");
            }
        }

        /// <summary>
        /// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
        /// </summary>
        [PolicyResourceProperty("bidPrice", "_mUnknown_BidPrice")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BidPrice;
        private bool _mUnknown_BidPrice;
        public string? BidPrice
        {
            get
            {
                if (!_mUnknown_BidPrice) return _mValue_BidPrice;
                throw new UndeferrableValueException("Value 'InstanceGroup.BidPrice' is not present");
            }
        }

        /// <summary>
        /// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("clusterId", "_mUnknown_ClusterId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterId;
        private bool _mUnknown_ClusterId;
        public string? ClusterId
        {
            get
            {
                if (!_mUnknown_ClusterId) return _mValue_ClusterId;
                throw new UndeferrableValueException("Value 'InstanceGroup.ClusterId' is not present");
            }
        }

        /// <summary>
        /// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var task = new Aws.Emr.InstanceGroup("task", new()
        ///     {
        ///         ConfigurationsJson = @"[
        /// {
        /// ""Classification"": ""hadoop-env"",
        /// ""Configurations"": [
        /// {
        /// ""Classification"": ""export"",
        /// ""Properties"": {
        /// ""JAVA_HOME"": ""/usr/lib/jvm/java-1.8.0""
        /// }
        /// }
        /// ],
        /// ""Properties"": {}
        /// }
        /// ]
        /// ",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        [PolicyResourceProperty("configurationsJson", "_mUnknown_ConfigurationsJson")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConfigurationsJson;
        private bool _mUnknown_ConfigurationsJson;
        public string? ConfigurationsJson
        {
            get
            {
                if (!_mUnknown_ConfigurationsJson) return _mValue_ConfigurationsJson;
                throw new UndeferrableValueException("Value 'InstanceGroup.ConfigurationsJson' is not present");
            }
        }

        /// <summary>
        /// One or more `ebs_config` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("ebsConfigs", "_mUnknown_EbsConfigs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.InstanceGroupEbsConfig>? _mValue_EbsConfigs;
        private bool _mUnknown_EbsConfigs;
        public List<Outputs.InstanceGroupEbsConfig>? EbsConfigs
        {
            get
            {
                if (!_mUnknown_EbsConfigs) return _mValue_EbsConfigs;
                throw new UndeferrableValueException("Value 'InstanceGroup.EbsConfigs' is not present");
            }
        }

        /// <summary>
        /// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("ebsOptimized", "_mUnknown_EbsOptimized")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EbsOptimized;
        private bool _mUnknown_EbsOptimized;
        public bool? EbsOptimized
        {
            get
            {
                if (!_mUnknown_EbsOptimized) return _mValue_EbsOptimized;
                throw new UndeferrableValueException("Value 'InstanceGroup.EbsOptimized' is not present");
            }
        }

        /// <summary>
        /// target number of instances for the instance group. defaults to 0.
        /// </summary>
        [PolicyResourceProperty("instanceCount", "_mUnknown_InstanceCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_InstanceCount;
        private bool _mUnknown_InstanceCount;
        public int? InstanceCount
        {
            get
            {
                if (!_mUnknown_InstanceCount) return _mValue_InstanceCount;
                throw new UndeferrableValueException("Value 'InstanceGroup.InstanceCount' is not present");
            }
        }

        /// <summary>
        /// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("instanceType", "_mUnknown_InstanceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceType;
        private bool _mUnknown_InstanceType;
        public string? InstanceType
        {
            get
            {
                if (!_mUnknown_InstanceType) return _mValue_InstanceType;
                throw new UndeferrableValueException("Value 'InstanceGroup.InstanceType' is not present");
            }
        }

        /// <summary>
        /// Human friendly name given to the instance group. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'InstanceGroup.Name' is not present");
            }
        }

        /// <summary>
        /// The number of instances currently running in this instance group.
        /// </summary>
        [PolicyResourceProperty("runningInstanceCount", "_mUnknown_RunningInstanceCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RunningInstanceCount;
        private bool _mUnknown_RunningInstanceCount;
        public int? RunningInstanceCount
        {
            get
            {
                if (!_mUnknown_RunningInstanceCount) return _mValue_RunningInstanceCount;
                throw new UndeferrableValueException("Value 'InstanceGroup.RunningInstanceCount' is not present");
            }
        }

        /// <summary>
        /// The current status of the instance group.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'InstanceGroup.Status' is not present");
            }
        }
    }

    [PolicyResourceType("aws:emr/instanceGroup:InstanceGroup")]
    public sealed class InstanceGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
        /// </summary>
        [PolicyResourceProperty("autoscalingPolicy", "_mUnknown_AutoscalingPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoscalingPolicy;
        private bool _mUnknown_AutoscalingPolicy;
        public string? AutoscalingPolicy
        {
            get
            {
                if (!_mUnknown_AutoscalingPolicy) return _mValue_AutoscalingPolicy;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.AutoscalingPolicy' is not present");
            }
        }

        /// <summary>
        /// If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
        /// </summary>
        [PolicyResourceProperty("bidPrice", "_mUnknown_BidPrice")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BidPrice;
        private bool _mUnknown_BidPrice;
        public string? BidPrice
        {
            get
            {
                if (!_mUnknown_BidPrice) return _mValue_BidPrice;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.BidPrice' is not present");
            }
        }

        /// <summary>
        /// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("clusterId", "_mUnknown_ClusterId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClusterId;
        private bool _mUnknown_ClusterId;
        public string? ClusterId
        {
            get
            {
                if (!_mUnknown_ClusterId) return _mValue_ClusterId;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.ClusterId' is not present");
            }
        }

        /// <summary>
        /// A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var task = new Aws.Emr.InstanceGroup("task", new()
        ///     {
        ///         ConfigurationsJson = @"[
        /// {
        /// ""Classification"": ""hadoop-env"",
        /// ""Configurations"": [
        /// {
        /// ""Classification"": ""export"",
        /// ""Properties"": {
        /// ""JAVA_HOME"": ""/usr/lib/jvm/java-1.8.0""
        /// }
        /// }
        /// ],
        /// ""Properties"": {}
        /// }
        /// ]
        /// ",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        [PolicyResourceProperty("configurationsJson", "_mUnknown_ConfigurationsJson")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConfigurationsJson;
        private bool _mUnknown_ConfigurationsJson;
        public string? ConfigurationsJson
        {
            get
            {
                if (!_mUnknown_ConfigurationsJson) return _mValue_ConfigurationsJson;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.ConfigurationsJson' is not present");
            }
        }

        /// <summary>
        /// One or more `ebs_config` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("ebsConfigs", "_mUnknown_EbsConfigs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.InstanceGroupEbsConfigArgs>? _mValue_EbsConfigs;
        private bool _mUnknown_EbsConfigs;
        public List<Inputs.InstanceGroupEbsConfigArgs>? EbsConfigs
        {
            get
            {
                if (!_mUnknown_EbsConfigs) return _mValue_EbsConfigs;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.EbsConfigs' is not present");
            }
        }

        /// <summary>
        /// Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("ebsOptimized", "_mUnknown_EbsOptimized")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EbsOptimized;
        private bool _mUnknown_EbsOptimized;
        public bool? EbsOptimized
        {
            get
            {
                if (!_mUnknown_EbsOptimized) return _mValue_EbsOptimized;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.EbsOptimized' is not present");
            }
        }

        /// <summary>
        /// target number of instances for the instance group. defaults to 0.
        /// </summary>
        [PolicyResourceProperty("instanceCount", "_mUnknown_InstanceCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_InstanceCount;
        private bool _mUnknown_InstanceCount;
        public int? InstanceCount
        {
            get
            {
                if (!_mUnknown_InstanceCount) return _mValue_InstanceCount;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.InstanceCount' is not present");
            }
        }

        /// <summary>
        /// The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("instanceType", "_mUnknown_InstanceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceType;
        private bool _mUnknown_InstanceType;
        public string? InstanceType
        {
            get
            {
                if (!_mUnknown_InstanceType) return _mValue_InstanceType;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.InstanceType' is not present");
            }
        }

        /// <summary>
        /// Human friendly name given to the instance group. Changing this forces a new resource to be created.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'InstanceGroupArgs.Name' is not present");
            }
        }
    }
}
