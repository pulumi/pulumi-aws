// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Emr.Outputs
{
    public sealed class ClusterKerberosAttributes
    {
        /// <summary>
        /// Active Directory password for `ad_domain_join_user`. This provider cannot perform drift detection of this configuration.
        /// </summary>
        [Input("adDomainJoinPassword")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mAdDomainJoinPassword;

        public string? AdDomainJoinPassword => _mAdDomainJoinPassword.GetValue("adDomainJoinPassword");

        /// <summary>
        /// Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain. This provider cannot perform drift detection of this configuration.
        /// </summary>
        [Input("adDomainJoinUser")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mAdDomainJoinUser;

        public string? AdDomainJoinUser => _mAdDomainJoinUser.GetValue("adDomainJoinUser");

        /// <summary>
        /// Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms. This provider cannot perform drift detection of this configuration.
        /// </summary>
        [Input("crossRealmTrustPrincipalPassword")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mCrossRealmTrustPrincipalPassword;

        public string? CrossRealmTrustPrincipalPassword => _mCrossRealmTrustPrincipalPassword.GetValue("crossRealmTrustPrincipalPassword");

        /// <summary>
        /// Password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster. This provider cannot perform drift detection of this configuration.
        /// </summary>
        [Input("kdcAdminPassword")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mKdcAdminPassword;

        public string? KdcAdminPassword => _mKdcAdminPassword.GetValue("kdcAdminPassword");

        /// <summary>
        /// Name of the Kerberos realm to which all nodes in a cluster belong. For example, `EC2.INTERNAL`
        /// </summary>
        [Input("realm")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mRealm;

        public string? Realm => _mRealm.GetValue("realm");
    }
}
