// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Emr
{
    [PolicyResourceType("aws:emr/studio:Studio")]
    public sealed class Studio : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the studio.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Studio.Arn' is not present");
            }
        }

        /// <summary>
        /// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
        /// </summary>
        [PolicyResourceProperty("authMode", "_mUnknown_AuthMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuthMode;
        private bool _mUnknown_AuthMode;
        public string? AuthMode
        {
            get
            {
                if (!_mUnknown_AuthMode) return _mValue_AuthMode;
                throw new UndeferrableValueException("Value 'Studio.AuthMode' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
        /// </summary>
        [PolicyResourceProperty("defaultS3Location", "_mUnknown_DefaultS3Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultS3Location;
        private bool _mUnknown_DefaultS3Location;
        public string? DefaultS3Location
        {
            get
            {
                if (!_mUnknown_DefaultS3Location) return _mValue_DefaultS3Location;
                throw new UndeferrableValueException("Value 'Studio.DefaultS3Location' is not present");
            }
        }

        /// <summary>
        /// A detailed description of the Amazon EMR Studio.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Studio.Description' is not present");
            }
        }

        /// <summary>
        /// The AWS KMS key identifier (ARN) used to encrypt Amazon EMR Studio workspace and notebook files when backed up to Amazon S3.
        /// </summary>
        [PolicyResourceProperty("encryptionKeyArn", "_mUnknown_EncryptionKeyArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EncryptionKeyArn;
        private bool _mUnknown_EncryptionKeyArn;
        public string? EncryptionKeyArn
        {
            get
            {
                if (!_mUnknown_EncryptionKeyArn) return _mValue_EncryptionKeyArn;
                throw new UndeferrableValueException("Value 'Studio.EncryptionKeyArn' is not present");
            }
        }

        /// <summary>
        /// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpc_id`.
        /// </summary>
        [PolicyResourceProperty("engineSecurityGroupId", "_mUnknown_EngineSecurityGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineSecurityGroupId;
        private bool _mUnknown_EngineSecurityGroupId;
        public string? EngineSecurityGroupId
        {
            get
            {
                if (!_mUnknown_EngineSecurityGroupId) return _mValue_EngineSecurityGroupId;
                throw new UndeferrableValueException("Value 'Studio.EngineSecurityGroupId' is not present");
            }
        }

        /// <summary>
        /// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
        /// </summary>
        [PolicyResourceProperty("idpAuthUrl", "_mUnknown_IdpAuthUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdpAuthUrl;
        private bool _mUnknown_IdpAuthUrl;
        public string? IdpAuthUrl
        {
            get
            {
                if (!_mUnknown_IdpAuthUrl) return _mValue_IdpAuthUrl;
                throw new UndeferrableValueException("Value 'Studio.IdpAuthUrl' is not present");
            }
        }

        /// <summary>
        /// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
        /// </summary>
        [PolicyResourceProperty("idpRelayStateParameterName", "_mUnknown_IdpRelayStateParameterName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdpRelayStateParameterName;
        private bool _mUnknown_IdpRelayStateParameterName;
        public string? IdpRelayStateParameterName
        {
            get
            {
                if (!_mUnknown_IdpRelayStateParameterName) return _mValue_IdpRelayStateParameterName;
                throw new UndeferrableValueException("Value 'Studio.IdpRelayStateParameterName' is not present");
            }
        }

        /// <summary>
        /// A descriptive name for the Amazon EMR Studio.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Studio.Name' is not present");
            }
        }

        /// <summary>
        /// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
        /// </summary>
        [PolicyResourceProperty("serviceRole", "_mUnknown_ServiceRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceRole;
        private bool _mUnknown_ServiceRole;
        public string? ServiceRole
        {
            get
            {
                if (!_mUnknown_ServiceRole) return _mValue_ServiceRole;
                throw new UndeferrableValueException("Value 'Studio.ServiceRole' is not present");
            }
        }

        /// <summary>
        /// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpc_id`. Studio users can create a Workspace in any of the specified subnets.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'Studio.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Studio.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Studio.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The unique access URL of the Amazon EMR Studio.
        /// </summary>
        [PolicyResourceProperty("url", "_mUnknown_Url")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Url;
        private bool _mUnknown_Url;
        public string? Url
        {
            get
            {
                if (!_mUnknown_Url) return _mValue_Url;
                throw new UndeferrableValueException("Value 'Studio.Url' is not present");
            }
        }

        /// <summary>
        /// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
        /// </summary>
        [PolicyResourceProperty("userRole", "_mUnknown_UserRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserRole;
        private bool _mUnknown_UserRole;
        public string? UserRole
        {
            get
            {
                if (!_mUnknown_UserRole) return _mValue_UserRole;
                throw new UndeferrableValueException("Value 'Studio.UserRole' is not present");
            }
        }

        /// <summary>
        /// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'Studio.VpcId' is not present");
            }
        }

        /// <summary>
        /// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpc_id`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("workspaceSecurityGroupId", "_mUnknown_WorkspaceSecurityGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkspaceSecurityGroupId;
        private bool _mUnknown_WorkspaceSecurityGroupId;
        public string? WorkspaceSecurityGroupId
        {
            get
            {
                if (!_mUnknown_WorkspaceSecurityGroupId) return _mValue_WorkspaceSecurityGroupId;
                throw new UndeferrableValueException("Value 'Studio.WorkspaceSecurityGroupId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:emr/studio:Studio")]
    public sealed class StudioArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
        /// </summary>
        [PolicyResourceProperty("authMode", "_mUnknown_AuthMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AuthMode;
        private bool _mUnknown_AuthMode;
        public string? AuthMode
        {
            get
            {
                if (!_mUnknown_AuthMode) return _mValue_AuthMode;
                throw new UndeferrableValueException("Value 'StudioArgs.AuthMode' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
        /// </summary>
        [PolicyResourceProperty("defaultS3Location", "_mUnknown_DefaultS3Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultS3Location;
        private bool _mUnknown_DefaultS3Location;
        public string? DefaultS3Location
        {
            get
            {
                if (!_mUnknown_DefaultS3Location) return _mValue_DefaultS3Location;
                throw new UndeferrableValueException("Value 'StudioArgs.DefaultS3Location' is not present");
            }
        }

        /// <summary>
        /// A detailed description of the Amazon EMR Studio.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'StudioArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The AWS KMS key identifier (ARN) used to encrypt Amazon EMR Studio workspace and notebook files when backed up to Amazon S3.
        /// </summary>
        [PolicyResourceProperty("encryptionKeyArn", "_mUnknown_EncryptionKeyArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EncryptionKeyArn;
        private bool _mUnknown_EncryptionKeyArn;
        public string? EncryptionKeyArn
        {
            get
            {
                if (!_mUnknown_EncryptionKeyArn) return _mValue_EncryptionKeyArn;
                throw new UndeferrableValueException("Value 'StudioArgs.EncryptionKeyArn' is not present");
            }
        }

        /// <summary>
        /// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpc_id`.
        /// </summary>
        [PolicyResourceProperty("engineSecurityGroupId", "_mUnknown_EngineSecurityGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineSecurityGroupId;
        private bool _mUnknown_EngineSecurityGroupId;
        public string? EngineSecurityGroupId
        {
            get
            {
                if (!_mUnknown_EngineSecurityGroupId) return _mValue_EngineSecurityGroupId;
                throw new UndeferrableValueException("Value 'StudioArgs.EngineSecurityGroupId' is not present");
            }
        }

        /// <summary>
        /// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
        /// </summary>
        [PolicyResourceProperty("idpAuthUrl", "_mUnknown_IdpAuthUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdpAuthUrl;
        private bool _mUnknown_IdpAuthUrl;
        public string? IdpAuthUrl
        {
            get
            {
                if (!_mUnknown_IdpAuthUrl) return _mValue_IdpAuthUrl;
                throw new UndeferrableValueException("Value 'StudioArgs.IdpAuthUrl' is not present");
            }
        }

        /// <summary>
        /// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
        /// </summary>
        [PolicyResourceProperty("idpRelayStateParameterName", "_mUnknown_IdpRelayStateParameterName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdpRelayStateParameterName;
        private bool _mUnknown_IdpRelayStateParameterName;
        public string? IdpRelayStateParameterName
        {
            get
            {
                if (!_mUnknown_IdpRelayStateParameterName) return _mValue_IdpRelayStateParameterName;
                throw new UndeferrableValueException("Value 'StudioArgs.IdpRelayStateParameterName' is not present");
            }
        }

        /// <summary>
        /// A descriptive name for the Amazon EMR Studio.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'StudioArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
        /// </summary>
        [PolicyResourceProperty("serviceRole", "_mUnknown_ServiceRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceRole;
        private bool _mUnknown_ServiceRole;
        public string? ServiceRole
        {
            get
            {
                if (!_mUnknown_ServiceRole) return _mValue_ServiceRole;
                throw new UndeferrableValueException("Value 'StudioArgs.ServiceRole' is not present");
            }
        }

        /// <summary>
        /// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpc_id`. Studio users can create a Workspace in any of the specified subnets.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'StudioArgs.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'StudioArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
        /// </summary>
        [PolicyResourceProperty("userRole", "_mUnknown_UserRole")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserRole;
        private bool _mUnknown_UserRole;
        public string? UserRole
        {
            get
            {
                if (!_mUnknown_UserRole) return _mValue_UserRole;
                throw new UndeferrableValueException("Value 'StudioArgs.UserRole' is not present");
            }
        }

        /// <summary>
        /// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'StudioArgs.VpcId' is not present");
            }
        }

        /// <summary>
        /// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpc_id`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("workspaceSecurityGroupId", "_mUnknown_WorkspaceSecurityGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkspaceSecurityGroupId;
        private bool _mUnknown_WorkspaceSecurityGroupId;
        public string? WorkspaceSecurityGroupId
        {
            get
            {
                if (!_mUnknown_WorkspaceSecurityGroupId) return _mValue_WorkspaceSecurityGroupId;
                throw new UndeferrableValueException("Value 'StudioArgs.WorkspaceSecurityGroupId' is not present");
            }
        }
    }
}
