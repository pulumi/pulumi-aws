// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Emr.Inputs
{
    public sealed class GetSupportedInstanceTypesSupportedInstanceTypeArgs
    {
        /// <summary>
        /// CPU architecture.
        /// </summary>
        [PolicyResourceProperty("architecture", "_mUnknown_Architecture")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Architecture;
        private bool _mUnknown_Architecture;
        public string? Architecture
        {
            get
            {
                if (!_mUnknown_Architecture) return _mValue_Architecture;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.Architecture' is not present");
            }
        }

        /// <summary>
        /// Indicates whether the instance type supports Amazon EBS optimization.
        /// </summary>
        [PolicyResourceProperty("ebsOptimizedAvailable", "_mUnknown_EbsOptimizedAvailable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EbsOptimizedAvailable;
        private bool _mUnknown_EbsOptimizedAvailable;
        public bool? EbsOptimizedAvailable
        {
            get
            {
                if (!_mUnknown_EbsOptimizedAvailable) return _mValue_EbsOptimizedAvailable;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.EbsOptimizedAvailable' is not present");
            }
        }

        /// <summary>
        /// Indicates whether the instance type uses Amazon EBS optimization by default.
        /// </summary>
        [PolicyResourceProperty("ebsOptimizedByDefault", "_mUnknown_EbsOptimizedByDefault")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EbsOptimizedByDefault;
        private bool _mUnknown_EbsOptimizedByDefault;
        public bool? EbsOptimizedByDefault
        {
            get
            {
                if (!_mUnknown_EbsOptimizedByDefault) return _mValue_EbsOptimizedByDefault;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.EbsOptimizedByDefault' is not present");
            }
        }

        /// <summary>
        /// Indicates whether the instance type only supports Amazon EBS.
        /// </summary>
        [PolicyResourceProperty("ebsStorageOnly", "_mUnknown_EbsStorageOnly")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EbsStorageOnly;
        private bool _mUnknown_EbsStorageOnly;
        public bool? EbsStorageOnly
        {
            get
            {
                if (!_mUnknown_EbsStorageOnly) return _mValue_EbsStorageOnly;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.EbsStorageOnly' is not present");
            }
        }

        /// <summary>
        /// The Amazon EC2 family and generation for the instance type.
        /// </summary>
        [PolicyResourceProperty("instanceFamilyId", "_mUnknown_InstanceFamilyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceFamilyId;
        private bool _mUnknown_InstanceFamilyId;
        public string? InstanceFamilyId
        {
            get
            {
                if (!_mUnknown_InstanceFamilyId) return _mValue_InstanceFamilyId;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.InstanceFamilyId' is not present");
            }
        }

        /// <summary>
        /// Indicates whether the instance type only supports 64-bit architecture.
        /// </summary>
        [PolicyResourceProperty("is64BitsOnly", "_mUnknown_Is64BitsOnly")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Is64BitsOnly;
        private bool _mUnknown_Is64BitsOnly;
        public bool? Is64BitsOnly
        {
            get
            {
                if (!_mUnknown_Is64BitsOnly) return _mValue_Is64BitsOnly;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.Is64BitsOnly' is not present");
            }
        }

        /// <summary>
        /// Memory that is available to Amazon EMR from the instance type.
        /// </summary>
        [PolicyResourceProperty("memoryGb", "_mUnknown_MemoryGb")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_MemoryGb;
        private bool _mUnknown_MemoryGb;
        public double? MemoryGb
        {
            get
            {
                if (!_mUnknown_MemoryGb) return _mValue_MemoryGb;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.MemoryGb' is not present");
            }
        }

        /// <summary>
        /// Number of disks for the instance type.
        /// </summary>
        [PolicyResourceProperty("numberOfDisks", "_mUnknown_NumberOfDisks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NumberOfDisks;
        private bool _mUnknown_NumberOfDisks;
        public int? NumberOfDisks
        {
            get
            {
                if (!_mUnknown_NumberOfDisks) return _mValue_NumberOfDisks;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.NumberOfDisks' is not present");
            }
        }

        /// <summary>
        /// Storage capacity of the instance type.
        /// </summary>
        [PolicyResourceProperty("storageGb", "_mUnknown_StorageGb")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_StorageGb;
        private bool _mUnknown_StorageGb;
        public int? StorageGb
        {
            get
            {
                if (!_mUnknown_StorageGb) return _mValue_StorageGb;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.StorageGb' is not present");
            }
        }

        /// <summary>
        /// Amazon EC2 instance type. For example, `m5.xlarge`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.Type' is not present");
            }
        }

        /// <summary>
        /// The number of vCPUs available for the instance type.
        /// </summary>
        [PolicyResourceProperty("vcpu", "_mUnknown_Vcpu")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Vcpu;
        private bool _mUnknown_Vcpu;
        public int? Vcpu
        {
            get
            {
                if (!_mUnknown_Vcpu) return _mValue_Vcpu;
                throw new UndeferrableValueException("Value 'GetSupportedInstanceTypesSupportedInstanceTypeArgs.Vcpu' is not present");
            }
        }
    }
}
