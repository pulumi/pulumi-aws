// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Emr
{
    [PolicyResourceType("aws:emr/cluster:Cluster")]
    public sealed class Cluster : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
        /// </summary>
        [Input("additionalInfo")]
        public string? AdditionalInfo;

        /// <summary>
        /// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
        /// </summary>
        [Input("applications")]
        public List<string>? Applications;

        /// <summary>
        /// ARN of the cluster.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
        /// </summary>
        [Input("autoTerminationPolicy")]
        public ClusterAutoTerminationPolicy? AutoTerminationPolicy;

        /// <summary>
        /// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
        /// </summary>
        [Input("autoscalingRole")]
        public string? AutoscalingRole;

        /// <summary>
        /// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
        /// </summary>
        [Input("bootstrapActions")]
        public List<ClusterBootstrapAction>? BootstrapActions;

        [Input("clusterState")]
        public string? State;

        /// <summary>
        /// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
        /// </summary>
        [Input("configurations")]
        public string? Configurations;

        /// <summary>
        /// JSON string for supplying list of configurations for the EMR cluster.
        /// 
        /// &gt; **NOTE on `configurations_json`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `"Configurations": []`.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var cluster = new Aws.Emr.Cluster("cluster", new()
        ///     {
        ///         ConfigurationsJson = @"[
        /// {
        /// ""Classification"": ""hadoop-env"",
        /// ""Configurations"": [
        /// {
        /// ""Classification"": ""export"",
        /// ""Properties"": {
        /// ""JAVA_HOME"": ""/usr/lib/jvm/java-1.8.0""
        /// }
        /// }
        /// ],
        /// ""Properties"": {}
        /// }
        /// ]
        /// ",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        [Input("configurationsJson")]
        public string? ConfigurationsJson;

        /// <summary>
        /// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `core_instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Input("coreInstanceFleet")]
        public ClusterCoreInstanceFleet? CoreInstanceFleet;

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
        /// </summary>
        [Input("coreInstanceGroup")]
        public ClusterCoreInstanceGroup? CoreInstanceGroup;

        /// <summary>
        /// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
        /// </summary>
        [Input("customAmiId")]
        public string? CustomAmiId;

        /// <summary>
        /// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
        /// </summary>
        [Input("ebsRootVolumeSize")]
        public int? EbsRootVolumeSize;

        /// <summary>
        /// Attributes for the EC2 instances running the job flow. See below.
        /// </summary>
        [Input("ec2Attributes")]
        public ClusterEc2Attributes? Ec2Attributes;

        /// <summary>
        /// Switch on/off run cluster with no steps or when all steps are complete (default is on)
        /// </summary>
        [Input("keepJobFlowAliveWhenNoSteps")]
        public bool? KeepJobFlowAliveWhenNoSteps;

        /// <summary>
        /// Kerberos configuration for the cluster. See below.
        /// </summary>
        [Input("kerberosAttributes")]
        public ClusterKerberosAttributes? KerberosAttributes;

        /// <summary>
        /// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
        /// </summary>
        [Input("listStepsStates")]
        public List<string>? ListStepsStates;

        /// <summary>
        /// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
        /// </summary>
        [Input("logEncryptionKmsKeyId")]
        public string? LogEncryptionKmsKeyId;

        /// <summary>
        /// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
        /// </summary>
        [Input("logUri")]
        public string? LogUri;

        /// <summary>
        /// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `master_instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Input("masterInstanceFleet")]
        public ClusterMasterInstanceFleet? MasterInstanceFleet;

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
        /// </summary>
        [Input("masterInstanceGroup")]
        public ClusterMasterInstanceGroup? MasterInstanceGroup;

        /// <summary>
        /// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
        /// </summary>
        [Input("masterPublicDns")]
        public string? MasterPublicDns;

        /// <summary>
        /// Name of the job flow.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The specified placement group configuration for an Amazon EMR cluster.
        /// </summary>
        [Input("placementGroupConfigs")]
        public List<ClusterPlacementGroupConfig>? PlacementGroupConfigs;

        /// <summary>
        /// Release label for the Amazon EMR release.
        /// </summary>
        [Input("releaseLabel")]
        public string? ReleaseLabel;

        /// <summary>
        /// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
        /// </summary>
        [Input("scaleDownBehavior")]
        public string? ScaleDownBehavior;

        /// <summary>
        /// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater.
        /// </summary>
        [Input("securityConfiguration")]
        public string? SecurityConfiguration;

        /// <summary>
        /// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("serviceRole")]
        public string? ServiceRole;

        /// <summary>
        /// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater (default is 1).
        /// </summary>
        [Input("stepConcurrencyLevel")]
        public int? StepConcurrencyLevel;

        /// <summary>
        /// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
        /// </summary>
        [Input("steps")]
        public List<ClusterStep>? Steps;

        /// <summary>
        /// list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
        /// </summary>
        [Input("terminationProtection")]
        public bool? TerminationProtection;

        /// <summary>
        /// Whether whether Amazon EMR should gracefully replace core nodes that have degraded within the cluster. Default value is `false`.
        /// </summary>
        [Input("unhealthyNodeReplacement")]
        public bool? UnhealthyNodeReplacement;

        /// <summary>
        /// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
        /// </summary>
        [Input("visibleToAllUsers")]
        public bool? VisibleToAllUsers;
    }
}
