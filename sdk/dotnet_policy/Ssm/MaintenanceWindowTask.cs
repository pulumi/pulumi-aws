// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ssm
{
    [PolicyResourceType("aws:ssm/maintenanceWindowTask:MaintenanceWindowTask")]
    public sealed class MaintenanceWindowTask : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the maintenance window task.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached. Valid values are `CONTINUE_TASK` and `CANCEL_TASK`.
        /// </summary>
        [Input("cutoffBehavior")]
        public string? CutoffBehavior;

        /// <summary>
        /// The description of the maintenance window task.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The maximum number of targets this task can be run for in parallel.
        /// </summary>
        [Input("maxConcurrency")]
        public string? MaxConcurrency;

        /// <summary>
        /// The maximum number of errors allowed before this task stops being scheduled.
        /// </summary>
        [Input("maxErrors")]
        public string? MaxErrors;

        /// <summary>
        /// The name of the maintenance window task.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.
        /// </summary>
        [Input("priority")]
        public int? Priority;

        /// <summary>
        /// The role that should be assumed when executing the task. If a role is not provided, Systems Manager uses your account's service-linked role. If no service-linked role for Systems Manager exists in your account, it is created for you.
        /// </summary>
        [Input("serviceRoleArn")]
        public string? ServiceRoleArn;

        /// <summary>
        /// The targets (either instances or window target ids). Instances are specified using Key=InstanceIds,Values=instanceid1,instanceid2. Window target ids are specified using Key=WindowTargetIds,Values=window target id1, window target id2.
        /// </summary>
        [Input("targets")]
        public List<MaintenanceWindowTaskTarget>? Targets;

        /// <summary>
        /// The ARN of the task to execute.
        /// </summary>
        [Input("taskArn")]
        public string? TaskArn;

        /// <summary>
        /// Configuration block with parameters for task execution.
        /// </summary>
        [Input("taskInvocationParameters")]
        public MaintenanceWindowTaskTaskInvocationParameters? TaskInvocationParameters;

        /// <summary>
        /// The type of task being registered. Valid values: `AUTOMATION`, `LAMBDA`, `RUN_COMMAND` or `STEP_FUNCTIONS`.
        /// </summary>
        [Input("taskType")]
        public string? TaskType;

        /// <summary>
        /// The Id of the maintenance window to register the task with.
        /// </summary>
        [Input("windowId")]
        public string? WindowId;

        /// <summary>
        /// The ID of the maintenance window task.
        /// </summary>
        [Input("windowTaskId")]
        public string? WindowTaskId;
    }
}
