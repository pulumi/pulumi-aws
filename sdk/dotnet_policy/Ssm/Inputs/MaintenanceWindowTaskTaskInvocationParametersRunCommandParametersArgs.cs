// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ssm.Inputs
{
    public sealed class MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs
    {
        /// <summary>
        /// Configuration options for sending command output to CloudWatch Logs. Documented below.
        /// </summary>
        [PolicyResourceProperty("cloudwatchConfig", "_mUnknown_CloudwatchConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs? _mValue_CloudwatchConfig;
        private bool _mUnknown_CloudwatchConfig;
        public Inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs? CloudwatchConfig
        {
            get
            {
                if (!_mUnknown_CloudwatchConfig) return _mValue_CloudwatchConfig;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.CloudwatchConfig' is not present");
            }
        }

        /// <summary>
        /// Information about the command(s) to execute.
        /// </summary>
        [PolicyResourceProperty("comment", "_mUnknown_Comment")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Comment;
        private bool _mUnknown_Comment;
        public string? Comment
        {
            get
            {
                if (!_mUnknown_Comment) return _mValue_Comment;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.Comment' is not present");
            }
        }

        /// <summary>
        /// The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
        /// </summary>
        [PolicyResourceProperty("documentHash", "_mUnknown_DocumentHash")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DocumentHash;
        private bool _mUnknown_DocumentHash;
        public string? DocumentHash
        {
            get
            {
                if (!_mUnknown_DocumentHash) return _mValue_DocumentHash;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.DocumentHash' is not present");
            }
        }

        /// <summary>
        /// SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
        /// </summary>
        [PolicyResourceProperty("documentHashType", "_mUnknown_DocumentHashType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DocumentHashType;
        private bool _mUnknown_DocumentHashType;
        public string? DocumentHashType
        {
            get
            {
                if (!_mUnknown_DocumentHashType) return _mValue_DocumentHashType;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.DocumentHashType' is not present");
            }
        }

        /// <summary>
        /// The version of an Automation document to use during task execution.
        /// </summary>
        [PolicyResourceProperty("documentVersion", "_mUnknown_DocumentVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DocumentVersion;
        private bool _mUnknown_DocumentVersion;
        public string? DocumentVersion
        {
            get
            {
                if (!_mUnknown_DocumentVersion) return _mValue_DocumentVersion;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.DocumentVersion' is not present");
            }
        }

        /// <summary>
        /// Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
        /// </summary>
        [PolicyResourceProperty("notificationConfig", "_mUnknown_NotificationConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs? _mValue_NotificationConfig;
        private bool _mUnknown_NotificationConfig;
        public Inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs? NotificationConfig
        {
            get
            {
                if (!_mUnknown_NotificationConfig) return _mValue_NotificationConfig;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.NotificationConfig' is not present");
            }
        }

        /// <summary>
        /// The name of the Amazon S3 bucket.
        /// </summary>
        [PolicyResourceProperty("outputS3Bucket", "_mUnknown_OutputS3Bucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutputS3Bucket;
        private bool _mUnknown_OutputS3Bucket;
        public string? OutputS3Bucket
        {
            get
            {
                if (!_mUnknown_OutputS3Bucket) return _mValue_OutputS3Bucket;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.OutputS3Bucket' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 bucket subfolder.
        /// </summary>
        [PolicyResourceProperty("outputS3KeyPrefix", "_mUnknown_OutputS3KeyPrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutputS3KeyPrefix;
        private bool _mUnknown_OutputS3KeyPrefix;
        public string? OutputS3KeyPrefix
        {
            get
            {
                if (!_mUnknown_OutputS3KeyPrefix) return _mValue_OutputS3KeyPrefix;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.OutputS3KeyPrefix' is not present");
            }
        }

        /// <summary>
        /// The parameters for the RUN_COMMAND task execution. Documented below.
        /// </summary>
        [PolicyResourceProperty("parameters", "_mUnknown_Parameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs>? _mValue_Parameters;
        private bool _mUnknown_Parameters;
        public List<Inputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs>? Parameters
        {
            get
            {
                if (!_mUnknown_Parameters) return _mValue_Parameters;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.Parameters' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.
        /// </summary>
        [PolicyResourceProperty("serviceRoleArn", "_mUnknown_ServiceRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceRoleArn;
        private bool _mUnknown_ServiceRoleArn;
        public string? ServiceRoleArn
        {
            get
            {
                if (!_mUnknown_ServiceRoleArn) return _mValue_ServiceRoleArn;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.ServiceRoleArn' is not present");
            }
        }

        /// <summary>
        /// If this time is reached and the command has not already started executing, it doesn't run.
        /// </summary>
        [PolicyResourceProperty("timeoutSeconds", "_mUnknown_TimeoutSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_TimeoutSeconds;
        private bool _mUnknown_TimeoutSeconds;
        public int? TimeoutSeconds
        {
            get
            {
                if (!_mUnknown_TimeoutSeconds) return _mValue_TimeoutSeconds;
                throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs.TimeoutSeconds' is not present");
            }
        }
    }
}
