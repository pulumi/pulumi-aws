// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedAccess
{
    [PolicyResourceType("aws:verifiedaccess/trustProvider:TrustProvider")]
    public sealed class TrustProvider : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// A description for the AWS Verified Access trust provider.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// A block of options for device identity based trust providers.
        /// </summary>
        [Input("deviceOptions")]
        public TrustProviderDeviceOptions? DeviceOptions;

        /// <summary>
        /// The type of device-based trust provider.
        /// </summary>
        [Input("deviceTrustProviderType")]
        public string? DeviceTrustProviderType;

        /// <summary>
        /// The OpenID Connect details for an Native Application OIDC, user-identity based trust provider.
        /// </summary>
        [Input("nativeApplicationOidcOptions")]
        public TrustProviderNativeApplicationOidcOptions? NativeApplicationOidcOptions;

        /// <summary>
        /// The OpenID Connect details for an oidc-type, user-identity based trust provider.
        /// </summary>
        [Input("oidcOptions")]
        public TrustProviderOidcOptions? OidcOptions;

        /// <summary>
        /// The identifier to be used when working with policy rules.
        /// </summary>
        [Input("policyReferenceName")]
        public string? PolicyReferenceName;

        [Input("sseSpecification")]
        public TrustProviderSseSpecification? SseSpecification;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The type of trust provider can be either user or device-based.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("trustProviderType")]
        public string? TrustProviderType;

        /// <summary>
        /// The type of user-based trust provider.
        /// </summary>
        [Input("userTrustProviderType")]
        public string? UserTrustProviderType;
    }
}
