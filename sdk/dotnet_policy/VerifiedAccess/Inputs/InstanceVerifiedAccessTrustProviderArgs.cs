// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedAccess.Inputs
{
    public sealed class InstanceVerifiedAccessTrustProviderArgs
    {
        /// <summary>
        /// A description for the AWS Verified Access Instance.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'InstanceVerifiedAccessTrustProviderArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The type of device-based trust provider.
        /// </summary>
        [PolicyResourceProperty("deviceTrustProviderType", "_mUnknown_DeviceTrustProviderType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeviceTrustProviderType;
        private bool _mUnknown_DeviceTrustProviderType;
        public string? DeviceTrustProviderType
        {
            get
            {
                if (!_mUnknown_DeviceTrustProviderType) return _mValue_DeviceTrustProviderType;
                throw new UndeferrableValueException("Value 'InstanceVerifiedAccessTrustProviderArgs.DeviceTrustProviderType' is not present");
            }
        }

        /// <summary>
        /// The type of trust provider (user- or device-based).
        /// </summary>
        [PolicyResourceProperty("trustProviderType", "_mUnknown_TrustProviderType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TrustProviderType;
        private bool _mUnknown_TrustProviderType;
        public string? TrustProviderType
        {
            get
            {
                if (!_mUnknown_TrustProviderType) return _mValue_TrustProviderType;
                throw new UndeferrableValueException("Value 'InstanceVerifiedAccessTrustProviderArgs.TrustProviderType' is not present");
            }
        }

        /// <summary>
        /// The type of user-based trust provider.
        /// </summary>
        [PolicyResourceProperty("userTrustProviderType", "_mUnknown_UserTrustProviderType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UserTrustProviderType;
        private bool _mUnknown_UserTrustProviderType;
        public string? UserTrustProviderType
        {
            get
            {
                if (!_mUnknown_UserTrustProviderType) return _mValue_UserTrustProviderType;
                throw new UndeferrableValueException("Value 'InstanceVerifiedAccessTrustProviderArgs.UserTrustProviderType' is not present");
            }
        }

        /// <summary>
        /// The ID of the trust provider.
        /// </summary>
        [PolicyResourceProperty("verifiedAccessTrustProviderId", "_mUnknown_VerifiedAccessTrustProviderId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VerifiedAccessTrustProviderId;
        private bool _mUnknown_VerifiedAccessTrustProviderId;
        public string? VerifiedAccessTrustProviderId
        {
            get
            {
                if (!_mUnknown_VerifiedAccessTrustProviderId) return _mValue_VerifiedAccessTrustProviderId;
                throw new UndeferrableValueException("Value 'InstanceVerifiedAccessTrustProviderArgs.VerifiedAccessTrustProviderId' is not present");
            }
        }
    }
}
