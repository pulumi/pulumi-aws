// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedAccess
{
    [PolicyResourceType("aws:verifiedaccess/instance:Instance")]
    public sealed class Instance : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The custom subdomain for the CIDR endpoints.
        /// </summary>
        [PolicyResourceProperty("cidrEndpointsCustomSubdomain", "_mUnknown_CidrEndpointsCustomSubdomain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrEndpointsCustomSubdomain;
        private bool _mUnknown_CidrEndpointsCustomSubdomain;
        public string? CidrEndpointsCustomSubdomain
        {
            get
            {
                if (!_mUnknown_CidrEndpointsCustomSubdomain) return _mValue_CidrEndpointsCustomSubdomain;
                throw new UndeferrableValueException("Value 'Instance.CidrEndpointsCustomSubdomain' is not present");
            }
        }

        /// <summary>
        /// The time that the Verified Access Instance was created.
        /// </summary>
        [PolicyResourceProperty("creationTime", "_mUnknown_CreationTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreationTime;
        private bool _mUnknown_CreationTime;
        public string? CreationTime
        {
            get
            {
                if (!_mUnknown_CreationTime) return _mValue_CreationTime;
                throw new UndeferrableValueException("Value 'Instance.CreationTime' is not present");
            }
        }

        /// <summary>
        /// A description for the AWS Verified Access Instance.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Instance.Description' is not present");
            }
        }

        /// <summary>
        /// Enable or disable support for Federal Information Processing Standards (FIPS) on the AWS Verified Access Instance.
        /// </summary>
        [PolicyResourceProperty("fipsEnabled", "_mUnknown_FipsEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_FipsEnabled;
        private bool _mUnknown_FipsEnabled;
        public bool? FipsEnabled
        {
            get
            {
                if (!_mUnknown_FipsEnabled) return _mValue_FipsEnabled;
                throw new UndeferrableValueException("Value 'Instance.FipsEnabled' is not present");
            }
        }

        /// <summary>
        /// The time that the Verified Access Instance was last updated.
        /// </summary>
        [PolicyResourceProperty("lastUpdatedTime", "_mUnknown_LastUpdatedTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastUpdatedTime;
        private bool _mUnknown_LastUpdatedTime;
        public string? LastUpdatedTime
        {
            get
            {
                if (!_mUnknown_LastUpdatedTime) return _mValue_LastUpdatedTime;
                throw new UndeferrableValueException("Value 'Instance.LastUpdatedTime' is not present");
            }
        }

        [PolicyResourceProperty("nameServers", "_mUnknown_NameServers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_NameServers;
        private bool _mUnknown_NameServers;
        public List<string>? NameServers
        {
            get
            {
                if (!_mUnknown_NameServers) return _mValue_NameServers;
                throw new UndeferrableValueException("Value 'Instance.NameServers' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Instance.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Instance.TagsAll' is not present");
            }
        }

        /// <summary>
        /// One or more blocks of providing information about the AWS Verified Access Trust Providers. See verified_access_trust_providers below for details.One or more blocks
        /// </summary>
        [PolicyResourceProperty("verifiedAccessTrustProviders", "_mUnknown_VerifiedAccessTrustProviders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.InstanceVerifiedAccessTrustProvider>? _mValue_VerifiedAccessTrustProviders;
        private bool _mUnknown_VerifiedAccessTrustProviders;
        public List<Outputs.InstanceVerifiedAccessTrustProvider>? VerifiedAccessTrustProviders
        {
            get
            {
                if (!_mUnknown_VerifiedAccessTrustProviders) return _mValue_VerifiedAccessTrustProviders;
                throw new UndeferrableValueException("Value 'Instance.VerifiedAccessTrustProviders' is not present");
            }
        }
    }

    [PolicyResourceType("aws:verifiedaccess/instance:Instance")]
    public sealed class InstanceArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The custom subdomain for the CIDR endpoints.
        /// </summary>
        [PolicyResourceProperty("cidrEndpointsCustomSubdomain", "_mUnknown_CidrEndpointsCustomSubdomain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrEndpointsCustomSubdomain;
        private bool _mUnknown_CidrEndpointsCustomSubdomain;
        public string? CidrEndpointsCustomSubdomain
        {
            get
            {
                if (!_mUnknown_CidrEndpointsCustomSubdomain) return _mValue_CidrEndpointsCustomSubdomain;
                throw new UndeferrableValueException("Value 'InstanceArgs.CidrEndpointsCustomSubdomain' is not present");
            }
        }

        /// <summary>
        /// A description for the AWS Verified Access Instance.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'InstanceArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Enable or disable support for Federal Information Processing Standards (FIPS) on the AWS Verified Access Instance.
        /// </summary>
        [PolicyResourceProperty("fipsEnabled", "_mUnknown_FipsEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_FipsEnabled;
        private bool _mUnknown_FipsEnabled;
        public bool? FipsEnabled
        {
            get
            {
                if (!_mUnknown_FipsEnabled) return _mValue_FipsEnabled;
                throw new UndeferrableValueException("Value 'InstanceArgs.FipsEnabled' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'InstanceArgs.Tags' is not present");
            }
        }
    }
}
