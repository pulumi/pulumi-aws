// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedAccess
{
    [PolicyResourceType("aws:verifiedaccess/instanceTrustProviderAttachment:InstanceTrustProviderAttachment")]
    public sealed class InstanceTrustProviderAttachment : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ID of the Verified Access instance to attach the Trust Provider to.
        /// </summary>
        [PolicyResourceProperty("verifiedaccessInstanceId", "_mUnknown_VerifiedaccessInstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VerifiedaccessInstanceId;
        private bool _mUnknown_VerifiedaccessInstanceId;
        public string? VerifiedaccessInstanceId
        {
            get
            {
                if (!_mUnknown_VerifiedaccessInstanceId) return _mValue_VerifiedaccessInstanceId;
                throw new UndeferrableValueException("Value 'InstanceTrustProviderAttachment.VerifiedaccessInstanceId' is not present");
            }
        }

        /// <summary>
        /// The ID of the Verified Access trust provider.
        /// </summary>
        [PolicyResourceProperty("verifiedaccessTrustProviderId", "_mUnknown_VerifiedaccessTrustProviderId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VerifiedaccessTrustProviderId;
        private bool _mUnknown_VerifiedaccessTrustProviderId;
        public string? VerifiedaccessTrustProviderId
        {
            get
            {
                if (!_mUnknown_VerifiedaccessTrustProviderId) return _mValue_VerifiedaccessTrustProviderId;
                throw new UndeferrableValueException("Value 'InstanceTrustProviderAttachment.VerifiedaccessTrustProviderId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:verifiedaccess/instanceTrustProviderAttachment:InstanceTrustProviderAttachment")]
    public sealed class InstanceTrustProviderAttachmentArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the Verified Access instance to attach the Trust Provider to.
        /// </summary>
        [PolicyResourceProperty("verifiedaccessInstanceId", "_mUnknown_VerifiedaccessInstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VerifiedaccessInstanceId;
        private bool _mUnknown_VerifiedaccessInstanceId;
        public string? VerifiedaccessInstanceId
        {
            get
            {
                if (!_mUnknown_VerifiedaccessInstanceId) return _mValue_VerifiedaccessInstanceId;
                throw new UndeferrableValueException("Value 'InstanceTrustProviderAttachmentArgs.VerifiedaccessInstanceId' is not present");
            }
        }

        /// <summary>
        /// The ID of the Verified Access trust provider.
        /// </summary>
        [PolicyResourceProperty("verifiedaccessTrustProviderId", "_mUnknown_VerifiedaccessTrustProviderId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VerifiedaccessTrustProviderId;
        private bool _mUnknown_VerifiedaccessTrustProviderId;
        public string? VerifiedaccessTrustProviderId
        {
            get
            {
                if (!_mUnknown_VerifiedaccessTrustProviderId) return _mValue_VerifiedaccessTrustProviderId;
                throw new UndeferrableValueException("Value 'InstanceTrustProviderAttachmentArgs.VerifiedaccessTrustProviderId' is not present");
            }
        }
    }
}
