// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedAccess
{
    [PolicyResourceType("aws:verifiedaccess/endpoint:Endpoint")]
    public sealed class Endpoint : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The DNS name for users to reach your application. This parameter is required if the endpoint type is `load-balancer` or `network-interface`.
        /// </summary>
        [Input("applicationDomain")]
        public string? ApplicationDomain;

        /// <summary>
        /// The type of attachment. Currently, only `vpc` is supported.
        /// </summary>
        [Input("attachmentType")]
        public string? AttachmentType;

        /// <summary>
        /// The CIDR block details. This parameter is required if the endpoint type is `cidr`.
        /// </summary>
        [Input("cidrOptions")]
        public EndpointCidrOptions? CidrOptions;

        /// <summary>
        /// A description for the Verified Access endpoint.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Returned if endpoint has a device trust provider attached.
        /// </summary>
        [Input("deviceValidationDomain")]
        public string? DeviceValidationDomain;

        /// <summary>
        /// The ARN of the public TLS/SSL certificate in AWS Certificate Manager to associate with the endpoint. The CN in the certificate must match the DNS name your end users will use to reach your application. This parameter is required if the endpoint type is `load-balancer` or `network-interface`.
        /// </summary>
        [Input("domainCertificateArn")]
        public string? DomainCertificateArn;

        /// <summary>
        /// A DNS name that is generated for the endpoint.
        /// </summary>
        [Input("endpointDomain")]
        public string? EndpointDomain;

        /// <summary>
        /// A custom identifier that is prepended to the DNS name that is generated for the endpoint.
        /// </summary>
        [Input("endpointDomainPrefix")]
        public string? EndpointDomainPrefix;

        /// <summary>
        /// The type of Verified Access endpoint to create. Currently `load-balancer` or `network-interface` are supported.
        /// </summary>
        [Input("endpointType")]
        public string? EndpointType;

        /// <summary>
        /// The load balancer details. This parameter is required if the endpoint type is `load-balancer`.
        /// </summary>
        [Input("loadBalancerOptions")]
        public EndpointLoadBalancerOptions? LoadBalancerOptions;

        /// <summary>
        /// The network interface details. This parameter is required if the endpoint type is `network-interface`.
        /// </summary>
        [Input("networkInterfaceOptions")]
        public EndpointNetworkInterfaceOptions? NetworkInterfaceOptions;

        /// <summary>
        /// The policy document that is associated with this resource.
        /// </summary>
        [Input("policyDocument")]
        public string? PolicyDocument;

        [Input("rdsOptions")]
        public EndpointRdsOptions? RdsOptions;

        /// <summary>
        /// List of the the security groups IDs to associate with the Verified Access endpoint.
        /// </summary>
        [Input("securityGroupIds")]
        public List<string>? SecurityGroupIds;

        /// <summary>
        /// The options in use for server side encryption.
        /// </summary>
        [Input("sseSpecification")]
        public EndpointSseSpecification? SseSpecification;

        /// <summary>
        /// Key-value tags for the Verified Access Endpoint. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The ID of the Verified Access group to associate the endpoint with.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("verifiedAccessGroupId")]
        public string? VerifiedAccessGroupId;

        [Input("verifiedAccessInstanceId")]
        public string? VerifiedAccessInstanceId;
    }
}
