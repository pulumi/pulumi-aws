// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Mq
{
    [PolicyResourceType("aws:mq/configuration:Configuration")]
    public sealed class Configuration : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the configuration.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.
        /// </summary>
        [Input("authenticationStrategy")]
        public string? AuthenticationStrategy;

        /// <summary>
        /// Broker configuration in XML format for `ActiveMQ` or [Cuttlefish](https://github.com/Kyorai/cuttlefish) format for `RabbitMQ`. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.
        /// </summary>
        [Input("data")]
        public string? Data;

        /// <summary>
        /// Description of the configuration.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.
        /// </summary>
        [Input("engineType")]
        public string? EngineType;

        /// <summary>
        /// Version of the broker engine.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion;

        /// <summary>
        /// Latest revision of the configuration.
        /// </summary>
        [Input("latestRevision")]
        public int? LatestRevision;

        /// <summary>
        /// Name of the configuration.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
