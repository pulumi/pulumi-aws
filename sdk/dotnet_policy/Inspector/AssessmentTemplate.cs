// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Inspector
{
    [PolicyResourceType("aws:inspector/assessmentTemplate:AssessmentTemplate")]
    public sealed class AssessmentTemplate : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The template assessment ARN.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The duration of the inspector run.
        /// </summary>
        [Input("duration")]
        public int? Duration;

        /// <summary>
        /// A block that enables sending notifications about a specified assessment template event to a designated SNS topic. See Event Subscriptions for details.
        /// </summary>
        [Input("eventSubscriptions")]
        public List<AssessmentTemplateEventSubscription>? EventSubscriptions;

        /// <summary>
        /// The name of the assessment template.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The rules to be used during the run.
        /// </summary>
        [Input("rulesPackageArns")]
        public List<string>? RulesPackageArns;

        /// <summary>
        /// Key-value map of tags for the Inspector assessment template. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The assessment target ARN to attach the template to.
        /// </summary>
        [Input("targetArn")]
        public string? TargetArn;
    }
}
