// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.DeviceFarm
{
    [PolicyResourceType("aws:devicefarm/devicePool:DevicePool")]
    public sealed class DevicePool : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name of this Device Pool
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The device pool's description.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The number of devices that Device Farm can add to your device pool.
        /// </summary>
        [Input("maxDevices")]
        public int? MaxDevices;

        /// <summary>
        /// The name of the Device Pool
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The ARN of the project for the device pool.
        /// </summary>
        [Input("projectArn")]
        public string? ProjectArn;

        /// <summary>
        /// The device pool's rules. See Rule.
        /// </summary>
        [Input("rules")]
        public List<DevicePoolRule>? Rules;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("type")]
        public string? Type;
    }
}
