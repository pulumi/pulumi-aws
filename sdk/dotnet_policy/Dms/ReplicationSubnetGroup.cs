// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Dms
{
    [PolicyResourceType("aws:dms/replicationSubnetGroup:ReplicationSubnetGroup")]
    public sealed class ReplicationSubnetGroup : global::Pulumi.PolicyResourceOutput
    {
        [PolicyResourceProperty("replicationSubnetGroupArn", "_mUnknown_ReplicationSubnetGroupArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplicationSubnetGroupArn;
        private bool _mUnknown_ReplicationSubnetGroupArn;
        public string? ReplicationSubnetGroupArn
        {
            get
            {
                if (!_mUnknown_ReplicationSubnetGroupArn) return _mValue_ReplicationSubnetGroupArn;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroup.ReplicationSubnetGroupArn' is not present");
            }
        }

        /// <summary>
        /// Description for the subnet group.
        /// </summary>
        [PolicyResourceProperty("replicationSubnetGroupDescription", "_mUnknown_ReplicationSubnetGroupDescription")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplicationSubnetGroupDescription;
        private bool _mUnknown_ReplicationSubnetGroupDescription;
        public string? ReplicationSubnetGroupDescription
        {
            get
            {
                if (!_mUnknown_ReplicationSubnetGroupDescription) return _mValue_ReplicationSubnetGroupDescription;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroup.ReplicationSubnetGroupDescription' is not present");
            }
        }

        /// <summary>
        /// Name for the replication subnet group. This value is stored as a lowercase string. It must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens and cannot be `default`.
        /// </summary>
        [PolicyResourceProperty("replicationSubnetGroupId", "_mUnknown_ReplicationSubnetGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplicationSubnetGroupId;
        private bool _mUnknown_ReplicationSubnetGroupId;
        public string? ReplicationSubnetGroupId
        {
            get
            {
                if (!_mUnknown_ReplicationSubnetGroupId) return _mValue_ReplicationSubnetGroupId;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroup.ReplicationSubnetGroupId' is not present");
            }
        }

        /// <summary>
        /// List of at least 2 EC2 subnet IDs for the subnet group. The subnets must cover at least 2 availability zones.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroup.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroup.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroup.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The ID of the VPC the subnet group is in.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroup.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:dms/replicationSubnetGroup:ReplicationSubnetGroup")]
    public sealed class ReplicationSubnetGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Description for the subnet group.
        /// </summary>
        [PolicyResourceProperty("replicationSubnetGroupDescription", "_mUnknown_ReplicationSubnetGroupDescription")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplicationSubnetGroupDescription;
        private bool _mUnknown_ReplicationSubnetGroupDescription;
        public string? ReplicationSubnetGroupDescription
        {
            get
            {
                if (!_mUnknown_ReplicationSubnetGroupDescription) return _mValue_ReplicationSubnetGroupDescription;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroupArgs.ReplicationSubnetGroupDescription' is not present");
            }
        }

        /// <summary>
        /// Name for the replication subnet group. This value is stored as a lowercase string. It must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens and cannot be `default`.
        /// </summary>
        [PolicyResourceProperty("replicationSubnetGroupId", "_mUnknown_ReplicationSubnetGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplicationSubnetGroupId;
        private bool _mUnknown_ReplicationSubnetGroupId;
        public string? ReplicationSubnetGroupId
        {
            get
            {
                if (!_mUnknown_ReplicationSubnetGroupId) return _mValue_ReplicationSubnetGroupId;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroupArgs.ReplicationSubnetGroupId' is not present");
            }
        }

        /// <summary>
        /// List of at least 2 EC2 subnet IDs for the subnet group. The subnets must cover at least 2 availability zones.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroupArgs.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ReplicationSubnetGroupArgs.Tags' is not present");
            }
        }
    }
}
