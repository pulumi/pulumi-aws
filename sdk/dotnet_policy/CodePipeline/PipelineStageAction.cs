// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodePipeline
{
    [PolicyResourceType("aws:codepipeline/PipelineStageAction:PipelineStageAction")]
    public sealed class PipelineStageAction
    {
        /// <summary>
        /// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
        /// </summary>
        [Input("category")]
        public string? Category;

        /// <summary>
        /// A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation. Note: The `DetectChanges` parameter (optional, default value is true) in the `configuration` section causes CodePipeline to automatically start your pipeline upon new commits. Please refer to AWS Documentation for more details: https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodestarConnectionSource.html#action-reference-CodestarConnectionSource-config.
        /// </summary>
        [Input("configuration")]
        public Dictionary<string, string>? Configuration;

        /// <summary>
        /// A list of artifact names to be worked on.
        /// </summary>
        [Input("inputArtifacts")]
        public List<string>? InputArtifacts;

        /// <summary>
        /// The action declaration's name.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The namespace all output variables will be accessed from.
        /// </summary>
        [Input("namespace")]
        public string? Namespace;

        /// <summary>
        /// A list of artifact names to output. Output artifact names must be unique within a pipeline.
        /// </summary>
        [Input("outputArtifacts")]
        public List<string>? OutputArtifacts;

        /// <summary>
        /// The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
        /// </summary>
        [Input("owner")]
        public string? Owner;

        /// <summary>
        /// The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
        /// </summary>
        [Input("provider")]
        public string? Provider;

        /// <summary>
        /// The region in which to run the action.
        /// </summary>
        [Input("region")]
        public string? Region;

        /// <summary>
        /// The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
        /// </summary>
        [Input("roleArn")]
        public string? RoleArn;

        /// <summary>
        /// The order in which actions are run.
        /// </summary>
        [Input("runOrder")]
        public int? RunOrder;

        /// <summary>
        /// The action timeout for the rule.
        /// </summary>
        [Input("timeoutInMinutes")]
        public int? TimeoutInMinutes;

        /// <summary>
        /// A string that identifies the action type.
        /// </summary>
        [Input("version")]
        public string? Version;
    }
}
