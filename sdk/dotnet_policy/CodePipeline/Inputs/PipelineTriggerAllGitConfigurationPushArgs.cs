// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodePipeline.Inputs
{
    public sealed class PipelineTriggerAllGitConfigurationPushArgs
    {
        /// <summary>
        /// The field that specifies to filter on branches for the push trigger configuration. A `branches` block is documented below.
        /// </summary>
        [Input("branches")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Inputs.PipelineTriggerAllGitConfigurationPushBranchArgs>> _mBranches;

        public List<Inputs.PipelineTriggerAllGitConfigurationPushBranchArgs>? Branches => _mBranches.GetValue("branches");

        /// <summary>
        /// The field that specifies to filter on file paths for the push trigger configuration. A `file_paths` block is documented below.
        /// </summary>
        [Input("filePaths")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Inputs.PipelineTriggerAllGitConfigurationPushFilePathArgs>> _mFilePaths;

        public List<Inputs.PipelineTriggerAllGitConfigurationPushFilePathArgs>? FilePaths => _mFilePaths.GetValue("filePaths");

        /// <summary>
        /// The field that contains the details for the Git tags trigger configuration. A `tags` block is documented below.
        /// </summary>
        [Input("tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Inputs.PipelineTriggerAllGitConfigurationPushTagArgs>> _mTags;

        public List<Inputs.PipelineTriggerAllGitConfigurationPushTagArgs>? Tags => _mTags.GetValue("tags");
    }
}
