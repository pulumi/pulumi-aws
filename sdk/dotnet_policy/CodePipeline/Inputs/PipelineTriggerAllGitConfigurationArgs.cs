// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CodePipeline.Inputs
{
    public sealed class PipelineTriggerAllGitConfigurationArgs
    {
        /// <summary>
        /// The field where the repository event that will start the pipeline is specified as pull requests. A `pull_request` block is documented below.
        /// </summary>
        [PolicyResourceProperty("pullRequests", "_mUnknown_PullRequests")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PipelineTriggerAllGitConfigurationPullRequestArgs>? _mValue_PullRequests;
        private bool _mUnknown_PullRequests;
        public List<Inputs.PipelineTriggerAllGitConfigurationPullRequestArgs>? PullRequests
        {
            get
            {
                if (!_mUnknown_PullRequests) return _mValue_PullRequests;
                throw new UndeferrableValueException("Value 'PipelineTriggerAllGitConfigurationArgs.PullRequests' is not present");
            }
        }

        /// <summary>
        /// The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A `push` block is documented below.
        /// </summary>
        [PolicyResourceProperty("pushes", "_mUnknown_Pushes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PipelineTriggerAllGitConfigurationPushArgs>? _mValue_Pushes;
        private bool _mUnknown_Pushes;
        public List<Inputs.PipelineTriggerAllGitConfigurationPushArgs>? Pushes
        {
            get
            {
                if (!_mUnknown_Pushes) return _mValue_Pushes;
                throw new UndeferrableValueException("Value 'PipelineTriggerAllGitConfigurationArgs.Pushes' is not present");
            }
        }

        /// <summary>
        /// The name of the pipeline source action where the trigger configuration, such as Git tags, is specified. The trigger configuration will start the pipeline upon the specified change only.
        /// </summary>
        [PolicyResourceProperty("sourceActionName", "_mUnknown_SourceActionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceActionName;
        private bool _mUnknown_SourceActionName;
        public string? SourceActionName
        {
            get
            {
                if (!_mUnknown_SourceActionName) return _mValue_SourceActionName;
                throw new UndeferrableValueException("Value 'PipelineTriggerAllGitConfigurationArgs.SourceActionName' is not present");
            }
        }
    }
}
