// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LB
{
    [PolicyResourceType("aws:lb/listenerRule:ListenerRule")]
    public sealed class ListenerRule : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// An Action block. Action blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("actions", "_mUnknown_Actions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ListenerRuleAction>? _mValue_Actions;
        private bool _mUnknown_Actions;
        public List<Outputs.ListenerRuleAction>? Actions
        {
            get
            {
                if (!_mUnknown_Actions) return _mValue_Actions;
                throw new UndeferrableValueException("Value 'ListenerRule.Actions' is not present");
            }
        }

        /// <summary>
        /// The ARN of the rule (matches `id`)
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'ListenerRule.Arn' is not present");
            }
        }

        /// <summary>
        /// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("conditions", "_mUnknown_Conditions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ListenerRuleCondition>? _mValue_Conditions;
        private bool _mUnknown_Conditions;
        public List<Outputs.ListenerRuleCondition>? Conditions
        {
            get
            {
                if (!_mUnknown_Conditions) return _mValue_Conditions;
                throw new UndeferrableValueException("Value 'ListenerRule.Conditions' is not present");
            }
        }

        /// <summary>
        /// The ARN of the listener to which to attach the rule.
        /// </summary>
        [PolicyResourceProperty("listenerArn", "_mUnknown_ListenerArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ListenerArn;
        private bool _mUnknown_ListenerArn;
        public string? ListenerArn
        {
            get
            {
                if (!_mUnknown_ListenerArn) return _mValue_ListenerArn;
                throw new UndeferrableValueException("Value 'ListenerRule.ListenerArn' is not present");
            }
        }

        /// <summary>
        /// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
        /// </summary>
        [PolicyResourceProperty("priority", "_mUnknown_Priority")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Priority;
        private bool _mUnknown_Priority;
        public int? Priority
        {
            get
            {
                if (!_mUnknown_Priority) return _mValue_Priority;
                throw new UndeferrableValueException("Value 'ListenerRule.Priority' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ListenerRule.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ListenerRule.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:lb/listenerRule:ListenerRule")]
    public sealed class ListenerRuleArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// An Action block. Action blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("actions", "_mUnknown_Actions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ListenerRuleActionArgs>? _mValue_Actions;
        private bool _mUnknown_Actions;
        public List<Inputs.ListenerRuleActionArgs>? Actions
        {
            get
            {
                if (!_mUnknown_Actions) return _mValue_Actions;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Actions' is not present");
            }
        }

        /// <summary>
        /// A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.
        /// </summary>
        [PolicyResourceProperty("conditions", "_mUnknown_Conditions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ListenerRuleConditionArgs>? _mValue_Conditions;
        private bool _mUnknown_Conditions;
        public List<Inputs.ListenerRuleConditionArgs>? Conditions
        {
            get
            {
                if (!_mUnknown_Conditions) return _mValue_Conditions;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Conditions' is not present");
            }
        }

        /// <summary>
        /// The ARN of the listener to which to attach the rule.
        /// </summary>
        [PolicyResourceProperty("listenerArn", "_mUnknown_ListenerArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ListenerArn;
        private bool _mUnknown_ListenerArn;
        public string? ListenerArn
        {
            get
            {
                if (!_mUnknown_ListenerArn) return _mValue_ListenerArn;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.ListenerArn' is not present");
            }
        }

        /// <summary>
        /// The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
        /// </summary>
        [PolicyResourceProperty("priority", "_mUnknown_Priority")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Priority;
        private bool _mUnknown_Priority;
        public int? Priority
        {
            get
            {
                if (!_mUnknown_Priority) return _mValue_Priority;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Priority' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ListenerRuleArgs.Tags' is not present");
            }
        }
    }
}
