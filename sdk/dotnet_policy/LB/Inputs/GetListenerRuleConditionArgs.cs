// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LB.Inputs
{
    public sealed class GetListenerRuleConditionInputArgs
    {
        /// <summary>
        /// Contains a single attribute `values`, which contains a set of host names.
        /// </summary>
        [PolicyResourceProperty("hostHeader", "_mUnknown_HostHeader")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetListenerRuleConditionHostHeaderInputArgs? _mValue_HostHeader;
        private bool _mUnknown_HostHeader;
        public Inputs.GetListenerRuleConditionHostHeaderInputArgs? HostHeader
        {
            get
            {
                if (!_mUnknown_HostHeader) return _mValue_HostHeader;
                throw new UndeferrableValueException("Value 'GetListenerRuleConditionInputArgs.HostHeader' is not present");
            }
        }

        /// <summary>
        /// HTTP header and values to match.
        /// Detailed below.
        /// </summary>
        [PolicyResourceProperty("httpHeader", "_mUnknown_HttpHeader")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetListenerRuleConditionHttpHeaderInputArgs? _mValue_HttpHeader;
        private bool _mUnknown_HttpHeader;
        public Inputs.GetListenerRuleConditionHttpHeaderInputArgs? HttpHeader
        {
            get
            {
                if (!_mUnknown_HttpHeader) return _mValue_HttpHeader;
                throw new UndeferrableValueException("Value 'GetListenerRuleConditionInputArgs.HttpHeader' is not present");
            }
        }

        /// <summary>
        /// Contains a single attribute `values`, which contains a set of HTTP request methods.
        /// </summary>
        [PolicyResourceProperty("httpRequestMethod", "_mUnknown_HttpRequestMethod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetListenerRuleConditionHttpRequestMethodInputArgs? _mValue_HttpRequestMethod;
        private bool _mUnknown_HttpRequestMethod;
        public Inputs.GetListenerRuleConditionHttpRequestMethodInputArgs? HttpRequestMethod
        {
            get
            {
                if (!_mUnknown_HttpRequestMethod) return _mValue_HttpRequestMethod;
                throw new UndeferrableValueException("Value 'GetListenerRuleConditionInputArgs.HttpRequestMethod' is not present");
            }
        }

        /// <summary>
        /// Contains a single attribute `values`, which contains a set of path patterns to compare against the request URL.
        /// </summary>
        [PolicyResourceProperty("pathPattern", "_mUnknown_PathPattern")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetListenerRuleConditionPathPatternInputArgs? _mValue_PathPattern;
        private bool _mUnknown_PathPattern;
        public Inputs.GetListenerRuleConditionPathPatternInputArgs? PathPattern
        {
            get
            {
                if (!_mUnknown_PathPattern) return _mValue_PathPattern;
                throw new UndeferrableValueException("Value 'GetListenerRuleConditionInputArgs.PathPattern' is not present");
            }
        }

        /// <summary>
        /// Query string parameters to match.
        /// Detailed below.
        /// </summary>
        [PolicyResourceProperty("queryString", "_mUnknown_QueryString")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetListenerRuleConditionQueryStringInputArgs? _mValue_QueryString;
        private bool _mUnknown_QueryString;
        public Inputs.GetListenerRuleConditionQueryStringInputArgs? QueryString
        {
            get
            {
                if (!_mUnknown_QueryString) return _mValue_QueryString;
                throw new UndeferrableValueException("Value 'GetListenerRuleConditionInputArgs.QueryString' is not present");
            }
        }

        /// <summary>
        /// Contains a single attribute `values`, which contains a set of source IPs in CIDR notation.
        /// </summary>
        [PolicyResourceProperty("sourceIp", "_mUnknown_SourceIp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetListenerRuleConditionSourceIpInputArgs? _mValue_SourceIp;
        private bool _mUnknown_SourceIp;
        public Inputs.GetListenerRuleConditionSourceIpInputArgs? SourceIp
        {
            get
            {
                if (!_mUnknown_SourceIp) return _mValue_SourceIp;
                throw new UndeferrableValueException("Value 'GetListenerRuleConditionInputArgs.SourceIp' is not present");
            }
        }
    }
}
