// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LB.Outputs
{
    public sealed class LoadBalancerSubnetMapping
    {
        /// <summary>
        /// Allocation ID of the Elastic IP address for an internet-facing load balancer.
        /// </summary>
        [PolicyResourceProperty("allocationId", "_mUnknown_AllocationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AllocationId;
        private bool _mUnknown_AllocationId;
        public string? AllocationId
        {
            get
            {
                if (!_mUnknown_AllocationId) return _mValue_AllocationId;
                throw new UndeferrableValueException("Value 'LoadBalancerSubnetMapping.AllocationId' is not present");
            }
        }

        /// <summary>
        /// IPv6 address. You associate IPv6 CIDR blocks with your VPC and choose the subnets where you launch both internet-facing and internal Application Load Balancers or Network Load Balancers.
        /// </summary>
        [PolicyResourceProperty("ipv6Address", "_mUnknown_Ipv6Address")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv6Address;
        private bool _mUnknown_Ipv6Address;
        public string? Ipv6Address
        {
            get
            {
                if (!_mUnknown_Ipv6Address) return _mValue_Ipv6Address;
                throw new UndeferrableValueException("Value 'LoadBalancerSubnetMapping.Ipv6Address' is not present");
            }
        }

        [PolicyResourceProperty("outpostId", "_mUnknown_OutpostId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutpostId;
        private bool _mUnknown_OutpostId;
        public string? OutpostId
        {
            get
            {
                if (!_mUnknown_OutpostId) return _mValue_OutpostId;
                throw new UndeferrableValueException("Value 'LoadBalancerSubnetMapping.OutpostId' is not present");
            }
        }

        /// <summary>
        /// Private IPv4 address for an internal load balancer.
        /// </summary>
        [PolicyResourceProperty("privateIpv4Address", "_mUnknown_PrivateIpv4Address")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PrivateIpv4Address;
        private bool _mUnknown_PrivateIpv4Address;
        public string? PrivateIpv4Address
        {
            get
            {
                if (!_mUnknown_PrivateIpv4Address) return _mValue_PrivateIpv4Address;
                throw new UndeferrableValueException("Value 'LoadBalancerSubnetMapping.PrivateIpv4Address' is not present");
            }
        }

        /// <summary>
        /// ID of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
        /// </summary>
        [PolicyResourceProperty("subnetId", "_mUnknown_SubnetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SubnetId;
        private bool _mUnknown_SubnetId;
        public string? SubnetId
        {
            get
            {
                if (!_mUnknown_SubnetId) return _mValue_SubnetId;
                throw new UndeferrableValueException("Value 'LoadBalancerSubnetMapping.SubnetId' is not present");
            }
        }
    }
}
