// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.LB
{
    [PolicyResourceType("aws:lb/loadBalancer:LoadBalancer")]
    public sealed class LoadBalancer : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Access Logs block. See below.
        /// </summary>
        [Input("accessLogs")]
        public LoadBalancerAccessLogs? AccessLogs;

        /// <summary>
        /// ARN of the load balancer (matches `id`).
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// ARN suffix for use with CloudWatch Metrics.
        /// </summary>
        [Input("arnSuffix")]
        public string? ArnSuffix;

        /// <summary>
        /// Client keep alive value in seconds. The valid range is 60-604800 seconds. The default is 3600 seconds.
        /// </summary>
        [Input("clientKeepAlive")]
        public int? ClientKeepAlive;

        /// <summary>
        /// Connection Logs block. See below. Only valid for Load Balancers of type `application`.
        /// </summary>
        [Input("connectionLogs")]
        public LoadBalancerConnectionLogs? ConnectionLogs;

        /// <summary>
        /// ID of the customer owned ipv4 pool to use for this load balancer.
        /// </summary>
        [Input("customerOwnedIpv4Pool")]
        public string? CustomerOwnedIpv4Pool;

        /// <summary>
        /// How the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are `monitor`, `defensive` (default), `strictest`.
        /// </summary>
        [Input("desyncMitigationMode")]
        public string? DesyncMitigationMode;

        /// <summary>
        /// DNS name of the load balancer.
        /// </summary>
        [Input("dnsName")]
        public string? DnsName;

        /// <summary>
        /// How traffic is distributed among the load balancer Availability Zones. Possible values are `any_availability_zone` (default), `availability_zone_affinity`, or `partial_availability_zone_affinity`. See   [Availability Zone DNS affinity](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#zonal-dns-affinity) for additional details. Only valid for `network` type load balancers.
        /// </summary>
        [Input("dnsRecordClientRoutingPolicy")]
        public string? DnsRecordClientRoutingPolicy;

        /// <summary>
        /// Whether HTTP headers with header fields that are not valid are removed by the load balancer (true) or routed to targets (false). The default is false. Elastic Load Balancing requires that message header names contain only alphanumeric characters and hyphens. Only valid for Load Balancers of type `application`.
        /// </summary>
        [Input("dropInvalidHeaderFields")]
        public bool? DropInvalidHeaderFields;

        /// <summary>
        /// If true, cross-zone load balancing of the load balancer will be enabled. For `network` and `gateway` type load balancers, this feature is disabled by default (`false`). For `application` load balancer this feature is always enabled (`true`) and cannot be disabled. Defaults to `false`.
        /// </summary>
        [Input("enableCrossZoneLoadBalancing")]
        public bool? EnableCrossZoneLoadBalancing;

        /// <summary>
        /// If true, deletion of the load balancer will be disabled via the AWS API. This will prevent this provider from deleting the load balancer. Defaults to `false`.
        /// </summary>
        [Input("enableDeletionProtection")]
        public bool? EnableDeletionProtection;

        /// <summary>
        /// Whether HTTP/2 is enabled in `application` load balancers. Defaults to `true`.
        /// </summary>
        [Input("enableHttp2")]
        public bool? EnableHttp2;

        /// <summary>
        /// Whether the two headers (`x-amzn-tls-version` and `x-amzn-tls-cipher-suite`), which contain information about the negotiated TLS version and cipher suite, are added to the client request before sending it to the target. Only valid for Load Balancers of type `application`. Defaults to `false`
        /// </summary>
        [Input("enableTlsVersionAndCipherSuiteHeaders")]
        public bool? EnableTlsVersionAndCipherSuiteHeaders;

        /// <summary>
        /// Whether to allow a WAF-enabled load balancer to route requests to targets if it is unable to forward the request to AWS WAF. Defaults to `false`.
        /// </summary>
        [Input("enableWafFailOpen")]
        public bool? EnableWafFailOpen;

        /// <summary>
        /// Whether the X-Forwarded-For header should preserve the source port that the client used to connect to the load balancer in `application` load balancers. Defaults to `false`.
        /// </summary>
        [Input("enableXffClientPort")]
        public bool? EnableXffClientPort;

        /// <summary>
        /// Whether zonal shift is enabled. Defaults to `false`.
        /// </summary>
        [Input("enableZonalShift")]
        public bool? EnableZonalShift;

        /// <summary>
        /// Whether inbound security group rules are enforced for traffic originating from a PrivateLink. Only valid for Load Balancers of type `network`. The possible values are `on` and `off`.
        /// </summary>
        [Input("enforceSecurityGroupInboundRulesOnPrivateLinkTraffic")]
        public string? EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic;

        /// <summary>
        /// Time in seconds that the connection is allowed to be idle. Only valid for Load Balancers of type `application`. Default: 60.
        /// </summary>
        [Input("idleTimeout")]
        public int? IdleTimeout;

        /// <summary>
        /// If true, the LB will be internal. Defaults to `false`.
        /// </summary>
        [Input("internal")]
        public bool? Internal;

        /// <summary>
        /// Type of IP addresses used by the subnets for your load balancer. The possible values depend upon the load balancer type: `ipv4` (all load balancer types), `dualstack` (all load balancer types), and `dualstack-without-public-ipv4` (type `application` only).
        /// </summary>
        [Input("ipAddressType")]
        public string? IpAddressType;

        /// <summary>
        /// . The IPAM pools to use with the load balancer.  Only valid for Load Balancers of type `application`. See ipam_pools for more information.
        /// </summary>
        [Input("ipamPools")]
        public LoadBalancerIpamPools? IpamPools;

        /// <summary>
        /// Type of load balancer to create. Possible values are `application`, `gateway`, or `network`. The default value is `application`.
        /// </summary>
        [Input("loadBalancerType")]
        public string? LoadBalancerType;

        /// <summary>
        /// Name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified, this provider will autogenerate a name beginning with `tf-lb`.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
        /// </summary>
        [Input("namePrefix")]
        public string? NamePrefix;

        /// <summary>
        /// Whether the Application Load Balancer should preserve the Host header in the HTTP request and send it to the target without any change. Defaults to `false`.
        /// </summary>
        [Input("preserveHostHeader")]
        public bool? PreserveHostHeader;

        /// <summary>
        /// List of security group IDs to assign to the LB. Only valid for Load Balancers of type `application` or `network`. For load balancers of type `network` security groups cannot be added if none are currently present, and cannot all be removed once added. If either of these conditions are met, this will force a recreation of the resource.
        /// </summary>
        [Input("securityGroups")]
        public List<string>? SecurityGroups;

        /// <summary>
        /// Subnet mapping block. See below. For Load Balancers of type `network` subnet mappings can only be added.
        /// </summary>
        [Input("subnetMappings")]
        public List<LoadBalancerSubnetMapping>? SubnetMappings;

        /// <summary>
        /// List of subnet IDs to attach to the LB. For Load Balancers of type `network` subnets can only be added (see [Availability Zones](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#availability-zones)), deleting a subnet for load balancers of type `network` will force a recreation of the resource.
        /// </summary>
        [Input("subnets")]
        public List<string>? Subnets;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("vpcId")]
        public string? VpcId;

        /// <summary>
        /// Determines how the load balancer modifies the `X-Forwarded-For` header in the HTTP request before sending the request to the target. The possible values are `append`, `preserve`, and `remove`. Only valid for Load Balancers of type `application`. The default is `append`.
        /// </summary>
        [Input("xffHeaderProcessingMode")]
        public string? XffHeaderProcessingMode;

        /// <summary>
        /// Canonical hosted zone ID of the load balancer (to be used in a Route 53 Alias record).
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId;
    }
}
