// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cfg
{
    [PolicyResourceType("aws:cfg/organizationCustomPolicyRule:OrganizationCustomPolicyRule")]
    public sealed class OrganizationCustomPolicyRule : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the rule
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.Arn' is not present");
            }
        }

        /// <summary>
        /// List of AWS account identifiers to exclude from the rule
        /// </summary>
        [PolicyResourceProperty("debugLogDeliveryAccounts", "_mUnknown_DebugLogDeliveryAccounts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DebugLogDeliveryAccounts;
        private bool _mUnknown_DebugLogDeliveryAccounts;
        public List<string>? DebugLogDeliveryAccounts
        {
            get
            {
                if (!_mUnknown_DebugLogDeliveryAccounts) return _mValue_DebugLogDeliveryAccounts;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.DebugLogDeliveryAccounts' is not present");
            }
        }

        /// <summary>
        /// Description of the rule
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.Description' is not present");
            }
        }

        /// <summary>
        /// List of AWS account identifiers to exclude from the rule
        /// </summary>
        [PolicyResourceProperty("excludedAccounts", "_mUnknown_ExcludedAccounts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ExcludedAccounts;
        private bool _mUnknown_ExcludedAccounts;
        public List<string>? ExcludedAccounts
        {
            get
            {
                if (!_mUnknown_ExcludedAccounts) return _mValue_ExcludedAccounts;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.ExcludedAccounts' is not present");
            }
        }

        /// <summary>
        /// A string in JSON format that is passed to the AWS Config Rule Lambda Function
        /// </summary>
        [PolicyResourceProperty("inputParameters", "_mUnknown_InputParameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InputParameters;
        private bool _mUnknown_InputParameters;
        public string? InputParameters
        {
            get
            {
                if (!_mUnknown_InputParameters) return _mValue_InputParameters;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.InputParameters' is not present");
            }
        }

        /// <summary>
        /// Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
        /// </summary>
        [PolicyResourceProperty("maximumExecutionFrequency", "_mUnknown_MaximumExecutionFrequency")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MaximumExecutionFrequency;
        private bool _mUnknown_MaximumExecutionFrequency;
        public string? MaximumExecutionFrequency
        {
            get
            {
                if (!_mUnknown_MaximumExecutionFrequency) return _mValue_MaximumExecutionFrequency;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.MaximumExecutionFrequency' is not present");
            }
        }

        /// <summary>
        /// name of the rule
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.Name' is not present");
            }
        }

        /// <summary>
        /// runtime system for your organization AWS Config Custom Policy rules
        /// </summary>
        [PolicyResourceProperty("policyRuntime", "_mUnknown_PolicyRuntime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyRuntime;
        private bool _mUnknown_PolicyRuntime;
        public string? PolicyRuntime
        {
            get
            {
                if (!_mUnknown_PolicyRuntime) return _mValue_PolicyRuntime;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.PolicyRuntime' is not present");
            }
        }

        /// <summary>
        /// policy definition containing the logic for your organization AWS Config Custom Policy rule
        /// </summary>
        [PolicyResourceProperty("policyText", "_mUnknown_PolicyText")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyText;
        private bool _mUnknown_PolicyText;
        public string? PolicyText
        {
            get
            {
                if (!_mUnknown_PolicyText) return _mValue_PolicyText;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.PolicyText' is not present");
            }
        }

        /// <summary>
        /// Identifier of the AWS resource to evaluate
        /// </summary>
        [PolicyResourceProperty("resourceIdScope", "_mUnknown_ResourceIdScope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceIdScope;
        private bool _mUnknown_ResourceIdScope;
        public string? ResourceIdScope
        {
            get
            {
                if (!_mUnknown_ResourceIdScope) return _mValue_ResourceIdScope;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.ResourceIdScope' is not present");
            }
        }

        /// <summary>
        /// List of types of AWS resources to evaluate
        /// </summary>
        [PolicyResourceProperty("resourceTypesScopes", "_mUnknown_ResourceTypesScopes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ResourceTypesScopes;
        private bool _mUnknown_ResourceTypesScopes;
        public List<string>? ResourceTypesScopes
        {
            get
            {
                if (!_mUnknown_ResourceTypesScopes) return _mValue_ResourceTypesScopes;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.ResourceTypesScopes' is not present");
            }
        }

        /// <summary>
        /// Tag key of AWS resources to evaluate
        /// </summary>
        [PolicyResourceProperty("tagKeyScope", "_mUnknown_TagKeyScope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TagKeyScope;
        private bool _mUnknown_TagKeyScope;
        public string? TagKeyScope
        {
            get
            {
                if (!_mUnknown_TagKeyScope) return _mValue_TagKeyScope;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.TagKeyScope' is not present");
            }
        }

        /// <summary>
        /// Tag value of AWS resources to evaluate
        /// </summary>
        [PolicyResourceProperty("tagValueScope", "_mUnknown_TagValueScope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TagValueScope;
        private bool _mUnknown_TagValueScope;
        public string? TagValueScope
        {
            get
            {
                if (!_mUnknown_TagValueScope) return _mValue_TagValueScope;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.TagValueScope' is not present");
            }
        }

        /// <summary>
        /// List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("triggerTypes", "_mUnknown_TriggerTypes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_TriggerTypes;
        private bool _mUnknown_TriggerTypes;
        public List<string>? TriggerTypes
        {
            get
            {
                if (!_mUnknown_TriggerTypes) return _mValue_TriggerTypes;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.TriggerTypes' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cfg/organizationCustomPolicyRule:OrganizationCustomPolicyRule")]
    public sealed class OrganizationCustomPolicyRuleArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// List of AWS account identifiers to exclude from the rule
        /// </summary>
        [PolicyResourceProperty("debugLogDeliveryAccounts", "_mUnknown_DebugLogDeliveryAccounts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DebugLogDeliveryAccounts;
        private bool _mUnknown_DebugLogDeliveryAccounts;
        public List<string>? DebugLogDeliveryAccounts
        {
            get
            {
                if (!_mUnknown_DebugLogDeliveryAccounts) return _mValue_DebugLogDeliveryAccounts;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.DebugLogDeliveryAccounts' is not present");
            }
        }

        /// <summary>
        /// Description of the rule
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.Description' is not present");
            }
        }

        /// <summary>
        /// List of AWS account identifiers to exclude from the rule
        /// </summary>
        [PolicyResourceProperty("excludedAccounts", "_mUnknown_ExcludedAccounts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ExcludedAccounts;
        private bool _mUnknown_ExcludedAccounts;
        public List<string>? ExcludedAccounts
        {
            get
            {
                if (!_mUnknown_ExcludedAccounts) return _mValue_ExcludedAccounts;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.ExcludedAccounts' is not present");
            }
        }

        /// <summary>
        /// A string in JSON format that is passed to the AWS Config Rule Lambda Function
        /// </summary>
        [PolicyResourceProperty("inputParameters", "_mUnknown_InputParameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InputParameters;
        private bool _mUnknown_InputParameters;
        public string? InputParameters
        {
            get
            {
                if (!_mUnknown_InputParameters) return _mValue_InputParameters;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.InputParameters' is not present");
            }
        }

        /// <summary>
        /// Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
        /// </summary>
        [PolicyResourceProperty("maximumExecutionFrequency", "_mUnknown_MaximumExecutionFrequency")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MaximumExecutionFrequency;
        private bool _mUnknown_MaximumExecutionFrequency;
        public string? MaximumExecutionFrequency
        {
            get
            {
                if (!_mUnknown_MaximumExecutionFrequency) return _mValue_MaximumExecutionFrequency;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.MaximumExecutionFrequency' is not present");
            }
        }

        /// <summary>
        /// name of the rule
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.Name' is not present");
            }
        }

        /// <summary>
        /// runtime system for your organization AWS Config Custom Policy rules
        /// </summary>
        [PolicyResourceProperty("policyRuntime", "_mUnknown_PolicyRuntime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyRuntime;
        private bool _mUnknown_PolicyRuntime;
        public string? PolicyRuntime
        {
            get
            {
                if (!_mUnknown_PolicyRuntime) return _mValue_PolicyRuntime;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.PolicyRuntime' is not present");
            }
        }

        /// <summary>
        /// policy definition containing the logic for your organization AWS Config Custom Policy rule
        /// </summary>
        [PolicyResourceProperty("policyText", "_mUnknown_PolicyText")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyText;
        private bool _mUnknown_PolicyText;
        public string? PolicyText
        {
            get
            {
                if (!_mUnknown_PolicyText) return _mValue_PolicyText;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.PolicyText' is not present");
            }
        }

        /// <summary>
        /// Identifier of the AWS resource to evaluate
        /// </summary>
        [PolicyResourceProperty("resourceIdScope", "_mUnknown_ResourceIdScope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceIdScope;
        private bool _mUnknown_ResourceIdScope;
        public string? ResourceIdScope
        {
            get
            {
                if (!_mUnknown_ResourceIdScope) return _mValue_ResourceIdScope;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.ResourceIdScope' is not present");
            }
        }

        /// <summary>
        /// List of types of AWS resources to evaluate
        /// </summary>
        [PolicyResourceProperty("resourceTypesScopes", "_mUnknown_ResourceTypesScopes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ResourceTypesScopes;
        private bool _mUnknown_ResourceTypesScopes;
        public List<string>? ResourceTypesScopes
        {
            get
            {
                if (!_mUnknown_ResourceTypesScopes) return _mValue_ResourceTypesScopes;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.ResourceTypesScopes' is not present");
            }
        }

        /// <summary>
        /// Tag key of AWS resources to evaluate
        /// </summary>
        [PolicyResourceProperty("tagKeyScope", "_mUnknown_TagKeyScope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TagKeyScope;
        private bool _mUnknown_TagKeyScope;
        public string? TagKeyScope
        {
            get
            {
                if (!_mUnknown_TagKeyScope) return _mValue_TagKeyScope;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.TagKeyScope' is not present");
            }
        }

        /// <summary>
        /// Tag value of AWS resources to evaluate
        /// </summary>
        [PolicyResourceProperty("tagValueScope", "_mUnknown_TagValueScope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TagValueScope;
        private bool _mUnknown_TagValueScope;
        public string? TagValueScope
        {
            get
            {
                if (!_mUnknown_TagValueScope) return _mValue_TagValueScope;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.TagValueScope' is not present");
            }
        }

        /// <summary>
        /// List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("triggerTypes", "_mUnknown_TriggerTypes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_TriggerTypes;
        private bool _mUnknown_TriggerTypes;
        public List<string>? TriggerTypes
        {
            get
            {
                if (!_mUnknown_TriggerTypes) return _mValue_TriggerTypes;
                throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRuleArgs.TriggerTypes' is not present");
            }
        }
    }
}
