// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cfg
{
    [PolicyResourceType("aws:cfg/remediationConfiguration:RemediationConfiguration")]
    public sealed class RemediationConfiguration : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Config Remediation Configuration.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.Arn' is not present");
            }
        }

        /// <summary>
        /// Remediation is triggered automatically if `true`.
        /// </summary>
        [PolicyResourceProperty("automatic", "_mUnknown_Automatic")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Automatic;
        private bool _mUnknown_Automatic;
        public bool? Automatic
        {
            get
            {
                if (!_mUnknown_Automatic) return _mValue_Automatic;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.Automatic' is not present");
            }
        }

        /// <summary>
        /// Name of the AWS Config rule.
        /// </summary>
        [PolicyResourceProperty("configRuleName", "_mUnknown_ConfigRuleName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConfigRuleName;
        private bool _mUnknown_ConfigRuleName;
        public string? ConfigRuleName
        {
            get
            {
                if (!_mUnknown_ConfigRuleName) return _mValue_ConfigRuleName;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.ConfigRuleName' is not present");
            }
        }

        /// <summary>
        /// Configuration block for execution controls. See below.
        /// </summary>
        [PolicyResourceProperty("executionControls", "_mUnknown_ExecutionControls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.RemediationConfigurationExecutionControls? _mValue_ExecutionControls;
        private bool _mUnknown_ExecutionControls;
        public Outputs.RemediationConfigurationExecutionControls? ExecutionControls
        {
            get
            {
                if (!_mUnknown_ExecutionControls) return _mValue_ExecutionControls;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.ExecutionControls' is not present");
            }
        }

        /// <summary>
        /// Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
        /// </summary>
        [PolicyResourceProperty("maximumAutomaticAttempts", "_mUnknown_MaximumAutomaticAttempts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumAutomaticAttempts;
        private bool _mUnknown_MaximumAutomaticAttempts;
        public int? MaximumAutomaticAttempts
        {
            get
            {
                if (!_mUnknown_MaximumAutomaticAttempts) return _mValue_MaximumAutomaticAttempts;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.MaximumAutomaticAttempts' is not present");
            }
        }

        /// <summary>
        /// Can be specified multiple times for each parameter. Each parameter block supports arguments below.
        /// </summary>
        [PolicyResourceProperty("parameters", "_mUnknown_Parameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RemediationConfigurationParameter>? _mValue_Parameters;
        private bool _mUnknown_Parameters;
        public List<Outputs.RemediationConfigurationParameter>? Parameters
        {
            get
            {
                if (!_mUnknown_Parameters) return _mValue_Parameters;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.Parameters' is not present");
            }
        }

        /// <summary>
        /// Type of resource.
        /// </summary>
        [PolicyResourceProperty("resourceType", "_mUnknown_ResourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceType;
        private bool _mUnknown_ResourceType;
        public string? ResourceType
        {
            get
            {
                if (!_mUnknown_ResourceType) return _mValue_ResourceType;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.ResourceType' is not present");
            }
        }

        /// <summary>
        /// Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
        /// </summary>
        [PolicyResourceProperty("retryAttemptSeconds", "_mUnknown_RetryAttemptSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RetryAttemptSeconds;
        private bool _mUnknown_RetryAttemptSeconds;
        public int? RetryAttemptSeconds
        {
            get
            {
                if (!_mUnknown_RetryAttemptSeconds) return _mValue_RetryAttemptSeconds;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.RetryAttemptSeconds' is not present");
            }
        }

        /// <summary>
        /// Target ID is the name of the public document.
        /// </summary>
        [PolicyResourceProperty("targetId", "_mUnknown_TargetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetId;
        private bool _mUnknown_TargetId;
        public string? TargetId
        {
            get
            {
                if (!_mUnknown_TargetId) return _mValue_TargetId;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.TargetId' is not present");
            }
        }

        /// <summary>
        /// Type of the target. Target executes remediation. For example, SSM document.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("targetType", "_mUnknown_TargetType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetType;
        private bool _mUnknown_TargetType;
        public string? TargetType
        {
            get
            {
                if (!_mUnknown_TargetType) return _mValue_TargetType;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.TargetType' is not present");
            }
        }

        /// <summary>
        /// Version of the target. For example, version of the SSM document
        /// </summary>
        [PolicyResourceProperty("targetVersion", "_mUnknown_TargetVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetVersion;
        private bool _mUnknown_TargetVersion;
        public string? TargetVersion
        {
            get
            {
                if (!_mUnknown_TargetVersion) return _mValue_TargetVersion;
                throw new UndeferrableValueException("Value 'RemediationConfiguration.TargetVersion' is not present");
            }
        }
    }

    [PolicyResourceType("aws:cfg/remediationConfiguration:RemediationConfiguration")]
    public sealed class RemediationConfigurationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Remediation is triggered automatically if `true`.
        /// </summary>
        [PolicyResourceProperty("automatic", "_mUnknown_Automatic")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Automatic;
        private bool _mUnknown_Automatic;
        public bool? Automatic
        {
            get
            {
                if (!_mUnknown_Automatic) return _mValue_Automatic;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.Automatic' is not present");
            }
        }

        /// <summary>
        /// Name of the AWS Config rule.
        /// </summary>
        [PolicyResourceProperty("configRuleName", "_mUnknown_ConfigRuleName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConfigRuleName;
        private bool _mUnknown_ConfigRuleName;
        public string? ConfigRuleName
        {
            get
            {
                if (!_mUnknown_ConfigRuleName) return _mValue_ConfigRuleName;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.ConfigRuleName' is not present");
            }
        }

        /// <summary>
        /// Configuration block for execution controls. See below.
        /// </summary>
        [PolicyResourceProperty("executionControls", "_mUnknown_ExecutionControls")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.RemediationConfigurationExecutionControlsArgs? _mValue_ExecutionControls;
        private bool _mUnknown_ExecutionControls;
        public Inputs.RemediationConfigurationExecutionControlsArgs? ExecutionControls
        {
            get
            {
                if (!_mUnknown_ExecutionControls) return _mValue_ExecutionControls;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.ExecutionControls' is not present");
            }
        }

        /// <summary>
        /// Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
        /// </summary>
        [PolicyResourceProperty("maximumAutomaticAttempts", "_mUnknown_MaximumAutomaticAttempts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaximumAutomaticAttempts;
        private bool _mUnknown_MaximumAutomaticAttempts;
        public int? MaximumAutomaticAttempts
        {
            get
            {
                if (!_mUnknown_MaximumAutomaticAttempts) return _mValue_MaximumAutomaticAttempts;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.MaximumAutomaticAttempts' is not present");
            }
        }

        /// <summary>
        /// Can be specified multiple times for each parameter. Each parameter block supports arguments below.
        /// </summary>
        [PolicyResourceProperty("parameters", "_mUnknown_Parameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.RemediationConfigurationParameterArgs>? _mValue_Parameters;
        private bool _mUnknown_Parameters;
        public List<Inputs.RemediationConfigurationParameterArgs>? Parameters
        {
            get
            {
                if (!_mUnknown_Parameters) return _mValue_Parameters;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.Parameters' is not present");
            }
        }

        /// <summary>
        /// Type of resource.
        /// </summary>
        [PolicyResourceProperty("resourceType", "_mUnknown_ResourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceType;
        private bool _mUnknown_ResourceType;
        public string? ResourceType
        {
            get
            {
                if (!_mUnknown_ResourceType) return _mValue_ResourceType;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.ResourceType' is not present");
            }
        }

        /// <summary>
        /// Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
        /// </summary>
        [PolicyResourceProperty("retryAttemptSeconds", "_mUnknown_RetryAttemptSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RetryAttemptSeconds;
        private bool _mUnknown_RetryAttemptSeconds;
        public int? RetryAttemptSeconds
        {
            get
            {
                if (!_mUnknown_RetryAttemptSeconds) return _mValue_RetryAttemptSeconds;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.RetryAttemptSeconds' is not present");
            }
        }

        /// <summary>
        /// Target ID is the name of the public document.
        /// </summary>
        [PolicyResourceProperty("targetId", "_mUnknown_TargetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetId;
        private bool _mUnknown_TargetId;
        public string? TargetId
        {
            get
            {
                if (!_mUnknown_TargetId) return _mValue_TargetId;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.TargetId' is not present");
            }
        }

        /// <summary>
        /// Type of the target. Target executes remediation. For example, SSM document.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("targetType", "_mUnknown_TargetType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetType;
        private bool _mUnknown_TargetType;
        public string? TargetType
        {
            get
            {
                if (!_mUnknown_TargetType) return _mValue_TargetType;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.TargetType' is not present");
            }
        }

        /// <summary>
        /// Version of the target. For example, version of the SSM document
        /// </summary>
        [PolicyResourceProperty("targetVersion", "_mUnknown_TargetVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetVersion;
        private bool _mUnknown_TargetVersion;
        public string? TargetVersion
        {
            get
            {
                if (!_mUnknown_TargetVersion) return _mValue_TargetVersion;
                throw new UndeferrableValueException("Value 'RemediationConfigurationArgs.TargetVersion' is not present");
            }
        }
    }
}
