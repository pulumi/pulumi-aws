// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Cfg.Outputs
{
    public sealed class RecorderRecordingGroup
    {
        /// <summary>
        /// Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resource_types`. Defaults to `true`.
        /// </summary>
        [PolicyResourceProperty("allSupported", "_mUnknown_AllSupported")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AllSupported;
        private bool _mUnknown_AllSupported;
        public bool? AllSupported
        {
            get
            {
                if (!_mUnknown_AllSupported) return _mValue_AllSupported;
                throw new UndeferrableValueException("Value 'RecorderRecordingGroup.AllSupported' is not present");
            }
        }

        /// <summary>
        /// An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to `EXCLUSION_BY_RESOURCE_TYPES` Requires `all_supported = false`. Conflicts with `resource_types`.
        /// </summary>
        [PolicyResourceProperty("exclusionByResourceTypes", "_mUnknown_ExclusionByResourceTypes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RecorderRecordingGroupExclusionByResourceType>? _mValue_ExclusionByResourceTypes;
        private bool _mUnknown_ExclusionByResourceTypes;
        public List<Outputs.RecorderRecordingGroupExclusionByResourceType>? ExclusionByResourceTypes
        {
            get
            {
                if (!_mUnknown_ExclusionByResourceTypes) return _mValue_ExclusionByResourceTypes;
                throw new UndeferrableValueException("Value 'RecorderRecordingGroup.ExclusionByResourceTypes' is not present");
            }
        }

        /// <summary>
        /// Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.
        /// </summary>
        [PolicyResourceProperty("includeGlobalResourceTypes", "_mUnknown_IncludeGlobalResourceTypes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_IncludeGlobalResourceTypes;
        private bool _mUnknown_IncludeGlobalResourceTypes;
        public bool? IncludeGlobalResourceTypes
        {
            get
            {
                if (!_mUnknown_IncludeGlobalResourceTypes) return _mValue_IncludeGlobalResourceTypes;
                throw new UndeferrableValueException("Value 'RecorderRecordingGroup.IncludeGlobalResourceTypes' is not present");
            }
        }

        /// <summary>
        /// Recording Strategy. Detailed below.
        /// </summary>
        [PolicyResourceProperty("recordingStrategies", "_mUnknown_RecordingStrategies")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RecorderRecordingGroupRecordingStrategy>? _mValue_RecordingStrategies;
        private bool _mUnknown_RecordingStrategies;
        public List<Outputs.RecorderRecordingGroupRecordingStrategy>? RecordingStrategies
        {
            get
            {
                if (!_mUnknown_RecordingStrategies) return _mValue_RecordingStrategies;
                throw new UndeferrableValueException("Value 'RecorderRecordingGroup.RecordingStrategies' is not present");
            }
        }

        /// <summary>
        /// A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.
        /// </summary>
        [PolicyResourceProperty("resourceTypes", "_mUnknown_ResourceTypes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ResourceTypes;
        private bool _mUnknown_ResourceTypes;
        public List<string>? ResourceTypes
        {
            get
            {
                if (!_mUnknown_ResourceTypes) return _mValue_ResourceTypes;
                throw new UndeferrableValueException("Value 'RecorderRecordingGroup.ResourceTypes' is not present");
            }
        }
    }
}
