// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Backup
{
    [PolicyResourceType("aws:backup/vaultLockConfiguration:VaultLockConfiguration")]
    public sealed class VaultLockConfiguration : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the vault.
        /// </summary>
        [PolicyResourceProperty("backupVaultArn", "_mUnknown_BackupVaultArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BackupVaultArn;
        private bool _mUnknown_BackupVaultArn;
        public string? BackupVaultArn
        {
            get
            {
                if (!_mUnknown_BackupVaultArn) return _mValue_BackupVaultArn;
                throw new UndeferrableValueException("Value 'VaultLockConfiguration.BackupVaultArn' is not present");
            }
        }

        /// <summary>
        /// Name of the backup vault to add a lock configuration for.
        /// </summary>
        [PolicyResourceProperty("backupVaultName", "_mUnknown_BackupVaultName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BackupVaultName;
        private bool _mUnknown_BackupVaultName;
        public string? BackupVaultName
        {
            get
            {
                if (!_mUnknown_BackupVaultName) return _mValue_BackupVaultName;
                throw new UndeferrableValueException("Value 'VaultLockConfiguration.BackupVaultName' is not present");
            }
        }

        /// <summary>
        /// The number of days before the lock date. If omitted creates a vault lock in `governance` mode, otherwise it will create a vault lock in `compliance` mode.
        /// </summary>
        [PolicyResourceProperty("changeableForDays", "_mUnknown_ChangeableForDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ChangeableForDays;
        private bool _mUnknown_ChangeableForDays;
        public int? ChangeableForDays
        {
            get
            {
                if (!_mUnknown_ChangeableForDays) return _mValue_ChangeableForDays;
                throw new UndeferrableValueException("Value 'VaultLockConfiguration.ChangeableForDays' is not present");
            }
        }

        /// <summary>
        /// The maximum retention period that the vault retains its recovery points.
        /// </summary>
        [PolicyResourceProperty("maxRetentionDays", "_mUnknown_MaxRetentionDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxRetentionDays;
        private bool _mUnknown_MaxRetentionDays;
        public int? MaxRetentionDays
        {
            get
            {
                if (!_mUnknown_MaxRetentionDays) return _mValue_MaxRetentionDays;
                throw new UndeferrableValueException("Value 'VaultLockConfiguration.MaxRetentionDays' is not present");
            }
        }

        /// <summary>
        /// The minimum retention period that the vault retains its recovery points.
        /// </summary>
        [PolicyResourceProperty("minRetentionDays", "_mUnknown_MinRetentionDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MinRetentionDays;
        private bool _mUnknown_MinRetentionDays;
        public int? MinRetentionDays
        {
            get
            {
                if (!_mUnknown_MinRetentionDays) return _mValue_MinRetentionDays;
                throw new UndeferrableValueException("Value 'VaultLockConfiguration.MinRetentionDays' is not present");
            }
        }
    }

    [PolicyResourceType("aws:backup/vaultLockConfiguration:VaultLockConfiguration")]
    public sealed class VaultLockConfigurationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the backup vault to add a lock configuration for.
        /// </summary>
        [PolicyResourceProperty("backupVaultName", "_mUnknown_BackupVaultName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BackupVaultName;
        private bool _mUnknown_BackupVaultName;
        public string? BackupVaultName
        {
            get
            {
                if (!_mUnknown_BackupVaultName) return _mValue_BackupVaultName;
                throw new UndeferrableValueException("Value 'VaultLockConfigurationArgs.BackupVaultName' is not present");
            }
        }

        /// <summary>
        /// The number of days before the lock date. If omitted creates a vault lock in `governance` mode, otherwise it will create a vault lock in `compliance` mode.
        /// </summary>
        [PolicyResourceProperty("changeableForDays", "_mUnknown_ChangeableForDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_ChangeableForDays;
        private bool _mUnknown_ChangeableForDays;
        public int? ChangeableForDays
        {
            get
            {
                if (!_mUnknown_ChangeableForDays) return _mValue_ChangeableForDays;
                throw new UndeferrableValueException("Value 'VaultLockConfigurationArgs.ChangeableForDays' is not present");
            }
        }

        /// <summary>
        /// The maximum retention period that the vault retains its recovery points.
        /// </summary>
        [PolicyResourceProperty("maxRetentionDays", "_mUnknown_MaxRetentionDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MaxRetentionDays;
        private bool _mUnknown_MaxRetentionDays;
        public int? MaxRetentionDays
        {
            get
            {
                if (!_mUnknown_MaxRetentionDays) return _mValue_MaxRetentionDays;
                throw new UndeferrableValueException("Value 'VaultLockConfigurationArgs.MaxRetentionDays' is not present");
            }
        }

        /// <summary>
        /// The minimum retention period that the vault retains its recovery points.
        /// </summary>
        [PolicyResourceProperty("minRetentionDays", "_mUnknown_MinRetentionDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MinRetentionDays;
        private bool _mUnknown_MinRetentionDays;
        public int? MinRetentionDays
        {
            get
            {
                if (!_mUnknown_MinRetentionDays) return _mValue_MinRetentionDays;
                throw new UndeferrableValueException("Value 'VaultLockConfigurationArgs.MinRetentionDays' is not present");
            }
        }
    }
}
