// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Backup.Outputs
{
    public sealed class SelectionCondition
    {
        /// <summary>
        /// Filters the values of your tagged resources for only those resources that you tagged with the same value. Also called "exact matching". See below for details.
        /// </summary>
        [PolicyResourceProperty("stringEquals", "_mUnknown_StringEquals")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.SelectionConditionStringEqual>? _mValue_StringEquals;
        private bool _mUnknown_StringEquals;
        public List<Outputs.SelectionConditionStringEqual>? StringEquals
        {
            get
            {
                if (!_mUnknown_StringEquals) return _mValue_StringEquals;
                throw new UndeferrableValueException("Value 'SelectionCondition.StringEquals' is not present");
            }
        }

        /// <summary>
        /// Filters the values of your tagged resources for matching tag values with the use of a wildcard character (`*`) anywhere in the string. For example, `prod*` or `*rod*` matches the tag value `production`. See below for details.
        /// </summary>
        [PolicyResourceProperty("stringLikes", "_mUnknown_StringLikes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.SelectionConditionStringLike>? _mValue_StringLikes;
        private bool _mUnknown_StringLikes;
        public List<Outputs.SelectionConditionStringLike>? StringLikes
        {
            get
            {
                if (!_mUnknown_StringLikes) return _mValue_StringLikes;
                throw new UndeferrableValueException("Value 'SelectionCondition.StringLikes' is not present");
            }
        }

        /// <summary>
        /// Filters the values of your tagged resources for only those resources that you tagged that do not have the same value. Also called "negated matching". See below for details.
        /// </summary>
        [PolicyResourceProperty("stringNotEquals", "_mUnknown_StringNotEquals")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.SelectionConditionStringNotEqual>? _mValue_StringNotEquals;
        private bool _mUnknown_StringNotEquals;
        public List<Outputs.SelectionConditionStringNotEqual>? StringNotEquals
        {
            get
            {
                if (!_mUnknown_StringNotEquals) return _mValue_StringNotEquals;
                throw new UndeferrableValueException("Value 'SelectionCondition.StringNotEquals' is not present");
            }
        }

        /// <summary>
        /// Filters the values of your tagged resources for non-matching tag values with the use of a wildcard character (`*`) anywhere in the string. See below for details.
        /// </summary>
        [PolicyResourceProperty("stringNotLikes", "_mUnknown_StringNotLikes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.SelectionConditionStringNotLike>? _mValue_StringNotLikes;
        private bool _mUnknown_StringNotLikes;
        public List<Outputs.SelectionConditionStringNotLike>? StringNotLikes
        {
            get
            {
                if (!_mUnknown_StringNotLikes) return _mValue_StringNotLikes;
                throw new UndeferrableValueException("Value 'SelectionCondition.StringNotLikes' is not present");
            }
        }
    }
}
