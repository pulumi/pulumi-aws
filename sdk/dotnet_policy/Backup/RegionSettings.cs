// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Backup
{
    [PolicyResourceType("aws:backup/regionSettings:RegionSettings")]
    public sealed class RegionSettings : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
        /// </summary>
        [PolicyResourceProperty("resourceTypeManagementPreference", "_mUnknown_ResourceTypeManagementPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, bool>? _mValue_ResourceTypeManagementPreference;
        private bool _mUnknown_ResourceTypeManagementPreference;
        public Dictionary<string, bool>? ResourceTypeManagementPreference
        {
            get
            {
                if (!_mUnknown_ResourceTypeManagementPreference) return _mValue_ResourceTypeManagementPreference;
                throw new UndeferrableValueException("Value 'RegionSettings.ResourceTypeManagementPreference' is not present");
            }
        }

        /// <summary>
        /// A map of services along with the opt-in preferences for the Region.
        /// </summary>
        [PolicyResourceProperty("resourceTypeOptInPreference", "_mUnknown_ResourceTypeOptInPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, bool>? _mValue_ResourceTypeOptInPreference;
        private bool _mUnknown_ResourceTypeOptInPreference;
        public Dictionary<string, bool>? ResourceTypeOptInPreference
        {
            get
            {
                if (!_mUnknown_ResourceTypeOptInPreference) return _mValue_ResourceTypeOptInPreference;
                throw new UndeferrableValueException("Value 'RegionSettings.ResourceTypeOptInPreference' is not present");
            }
        }
    }

    [PolicyResourceType("aws:backup/regionSettings:RegionSettings")]
    public sealed class RegionSettingsArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
        /// </summary>
        [PolicyResourceProperty("resourceTypeManagementPreference", "_mUnknown_ResourceTypeManagementPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, bool>? _mValue_ResourceTypeManagementPreference;
        private bool _mUnknown_ResourceTypeManagementPreference;
        public Dictionary<string, bool>? ResourceTypeManagementPreference
        {
            get
            {
                if (!_mUnknown_ResourceTypeManagementPreference) return _mValue_ResourceTypeManagementPreference;
                throw new UndeferrableValueException("Value 'RegionSettingsArgs.ResourceTypeManagementPreference' is not present");
            }
        }

        /// <summary>
        /// A map of services along with the opt-in preferences for the Region.
        /// </summary>
        [PolicyResourceProperty("resourceTypeOptInPreference", "_mUnknown_ResourceTypeOptInPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, bool>? _mValue_ResourceTypeOptInPreference;
        private bool _mUnknown_ResourceTypeOptInPreference;
        public Dictionary<string, bool>? ResourceTypeOptInPreference
        {
            get
            {
                if (!_mUnknown_ResourceTypeOptInPreference) return _mValue_ResourceTypeOptInPreference;
                throw new UndeferrableValueException("Value 'RegionSettingsArgs.ResourceTypeOptInPreference' is not present");
            }
        }
    }
}
