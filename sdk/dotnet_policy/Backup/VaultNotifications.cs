// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Backup
{
    [PolicyResourceType("aws:backup/vaultNotifications:VaultNotifications")]
    public sealed class VaultNotifications : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the vault.
        /// </summary>
        [PolicyResourceProperty("backupVaultArn", "_mUnknown_BackupVaultArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BackupVaultArn;
        private bool _mUnknown_BackupVaultArn;
        public string? BackupVaultArn
        {
            get
            {
                if (!_mUnknown_BackupVaultArn) return _mValue_BackupVaultArn;
                throw new UndeferrableValueException("Value 'VaultNotifications.BackupVaultArn' is not present");
            }
        }

        /// <summary>
        /// An array of events that indicate the status of jobs to back up resources to the backup vault.
        /// </summary>
        [PolicyResourceProperty("backupVaultEvents", "_mUnknown_BackupVaultEvents")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_BackupVaultEvents;
        private bool _mUnknown_BackupVaultEvents;
        public List<string>? BackupVaultEvents
        {
            get
            {
                if (!_mUnknown_BackupVaultEvents) return _mValue_BackupVaultEvents;
                throw new UndeferrableValueException("Value 'VaultNotifications.BackupVaultEvents' is not present");
            }
        }

        /// <summary>
        /// Name of the backup vault to add notifications for.
        /// </summary>
        [PolicyResourceProperty("backupVaultName", "_mUnknown_BackupVaultName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BackupVaultName;
        private bool _mUnknown_BackupVaultName;
        public string? BackupVaultName
        {
            get
            {
                if (!_mUnknown_BackupVaultName) return _mValue_BackupVaultName;
                throw new UndeferrableValueException("Value 'VaultNotifications.BackupVaultName' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
        /// </summary>
        [PolicyResourceProperty("snsTopicArn", "_mUnknown_SnsTopicArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SnsTopicArn;
        private bool _mUnknown_SnsTopicArn;
        public string? SnsTopicArn
        {
            get
            {
                if (!_mUnknown_SnsTopicArn) return _mValue_SnsTopicArn;
                throw new UndeferrableValueException("Value 'VaultNotifications.SnsTopicArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:backup/vaultNotifications:VaultNotifications")]
    public sealed class VaultNotificationsArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// An array of events that indicate the status of jobs to back up resources to the backup vault.
        /// </summary>
        [PolicyResourceProperty("backupVaultEvents", "_mUnknown_BackupVaultEvents")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_BackupVaultEvents;
        private bool _mUnknown_BackupVaultEvents;
        public List<string>? BackupVaultEvents
        {
            get
            {
                if (!_mUnknown_BackupVaultEvents) return _mValue_BackupVaultEvents;
                throw new UndeferrableValueException("Value 'VaultNotificationsArgs.BackupVaultEvents' is not present");
            }
        }

        /// <summary>
        /// Name of the backup vault to add notifications for.
        /// </summary>
        [PolicyResourceProperty("backupVaultName", "_mUnknown_BackupVaultName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BackupVaultName;
        private bool _mUnknown_BackupVaultName;
        public string? BackupVaultName
        {
            get
            {
                if (!_mUnknown_BackupVaultName) return _mValue_BackupVaultName;
                throw new UndeferrableValueException("Value 'VaultNotificationsArgs.BackupVaultName' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events
        /// </summary>
        [PolicyResourceProperty("snsTopicArn", "_mUnknown_SnsTopicArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SnsTopicArn;
        private bool _mUnknown_SnsTopicArn;
        public string? SnsTopicArn
        {
            get
            {
                if (!_mUnknown_SnsTopicArn) return _mValue_SnsTopicArn;
                throw new UndeferrableValueException("Value 'VaultNotificationsArgs.SnsTopicArn' is not present");
            }
        }
    }
}
