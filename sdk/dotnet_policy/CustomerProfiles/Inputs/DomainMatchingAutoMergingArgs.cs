// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CustomerProfiles.Inputs
{
    public sealed class DomainMatchingAutoMergingArgs
    {
        /// <summary>
        /// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
        /// </summary>
        [PolicyResourceProperty("conflictResolution", "_mUnknown_ConflictResolution")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DomainMatchingAutoMergingConflictResolutionArgs? _mValue_ConflictResolution;
        private bool _mUnknown_ConflictResolution;
        public Inputs.DomainMatchingAutoMergingConflictResolutionArgs? ConflictResolution
        {
            get
            {
                if (!_mUnknown_ConflictResolution) return _mValue_ConflictResolution;
                throw new UndeferrableValueException("Value 'DomainMatchingAutoMergingArgs.ConflictResolution' is not present");
            }
        }

        /// <summary>
        /// A block that specifies a list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged. Documented below.
        /// * `min_allowed_confidence_score_for_merging ` - (Optional) A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles.
        /// </summary>
        [PolicyResourceProperty("consolidation", "_mUnknown_Consolidation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.DomainMatchingAutoMergingConsolidationArgs? _mValue_Consolidation;
        private bool _mUnknown_Consolidation;
        public Inputs.DomainMatchingAutoMergingConsolidationArgs? Consolidation
        {
            get
            {
                if (!_mUnknown_Consolidation) return _mValue_Consolidation;
                throw new UndeferrableValueException("Value 'DomainMatchingAutoMergingArgs.Consolidation' is not present");
            }
        }

        /// <summary>
        /// The flag that enables the auto-merging of duplicate profiles.
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'DomainMatchingAutoMergingArgs.Enabled' is not present");
            }
        }

        [PolicyResourceProperty("minAllowedConfidenceScoreForMerging", "_mUnknown_MinAllowedConfidenceScoreForMerging")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_MinAllowedConfidenceScoreForMerging;
        private bool _mUnknown_MinAllowedConfidenceScoreForMerging;
        public double? MinAllowedConfidenceScoreForMerging
        {
            get
            {
                if (!_mUnknown_MinAllowedConfidenceScoreForMerging) return _mValue_MinAllowedConfidenceScoreForMerging;
                throw new UndeferrableValueException("Value 'DomainMatchingAutoMergingArgs.MinAllowedConfidenceScoreForMerging' is not present");
            }
        }
    }
}
