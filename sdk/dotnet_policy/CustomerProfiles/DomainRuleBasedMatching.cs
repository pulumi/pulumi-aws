// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.CustomerProfiles
{
    [PolicyResourceType("aws:customerprofiles/DomainRuleBasedMatching:DomainRuleBasedMatching")]
    public sealed class DomainRuleBasedMatching
    {
        /// <summary>
        /// A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
        /// </summary>
        [Input("attributeTypesSelector")]
        public DomainRuleBasedMatchingAttributeTypesSelector? AttributeTypesSelector;

        /// <summary>
        /// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
        /// </summary>
        [Input("conflictResolution")]
        public DomainRuleBasedMatchingConflictResolution? ConflictResolution;

        /// <summary>
        /// The flag that enables the rule-based matching process of duplicate profiles.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled;

        /// <summary>
        /// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
        /// </summary>
        [Input("exportingConfig")]
        public DomainRuleBasedMatchingExportingConfig? ExportingConfig;

        /// <summary>
        /// A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natching_rules`. Documented below.
        /// </summary>
        [Input("matchingRules")]
        public List<DomainRuleBasedMatchingMatchingRule>? MatchingRules;

        /// <summary>
        /// Indicates the maximum allowed rule level for matching.
        /// </summary>
        [Input("maxAllowedRuleLevelForMatching")]
        public int? MaxAllowedRuleLevelForMatching;

        /// <summary>
        /// Indicates the maximum allowed rule level for merging.
        /// </summary>
        [Input("maxAllowedRuleLevelForMerging")]
        public int? MaxAllowedRuleLevelForMerging;

        [Input("status")]
        public string? Status;
    }
}
