// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGatewayV2
{
    [PolicyResourceType("aws:apigatewayv2/authorizer:Authorizer")]
    public sealed class Authorizer : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// API identifier.
        /// </summary>
        [Input("apiId")]
        public string? ApiId;

        /// <summary>
        /// Required credentials as an IAM role for API Gateway to invoke the authorizer.
        /// Supported only for `REQUEST` authorizers.
        /// </summary>
        [Input("authorizerCredentialsArn")]
        public string? AuthorizerCredentialsArn;

        /// <summary>
        /// Format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.
        /// Valid values: `1.0`, `2.0`.
        /// </summary>
        [Input("authorizerPayloadFormatVersion")]
        public string? AuthorizerPayloadFormatVersion;

        /// <summary>
        /// Time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.
        /// If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to `300`.
        /// Supported only for HTTP API Lambda authorizers.
        /// </summary>
        [Input("authorizerResultTtlInSeconds")]
        public int? AuthorizerResultTtlInSeconds;

        /// <summary>
        /// Authorizer type. Valid values: `JWT`, `REQUEST`.
        /// Specify `REQUEST` for a Lambda function using incoming request parameters.
        /// For HTTP APIs, specify `JWT` to use JSON Web Tokens.
        /// </summary>
        [Input("authorizerType")]
        public string? AuthorizerType;

        /// <summary>
        /// Authorizer's Uniform Resource Identifier (URI).
        /// For `REQUEST` authorizers this must be a well-formed Lambda function URI, such as the `invoke_arn` attribute of the `aws.lambda.Function` resource.
        /// Supported only for `REQUEST` authorizers. Must be between 1 and 2048 characters in length.
        /// </summary>
        [Input("authorizerUri")]
        public string? AuthorizerUri;

        /// <summary>
        /// Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.
        /// Supported only for HTTP APIs.
        /// </summary>
        [Input("enableSimpleResponses")]
        public bool? EnableSimpleResponses;

        /// <summary>
        /// Identity sources for which authorization is requested.
        /// For `REQUEST` authorizers the value is a list of one or more mapping expressions of the specified request parameters.
        /// For `JWT` authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.
        /// </summary>
        [Input("identitySources")]
        public List<string>? IdentitySources;

        /// <summary>
        /// Configuration of a JWT authorizer. Required for the `JWT` authorizer type.
        /// Supported only for HTTP APIs.
        /// </summary>
        [Input("jwtConfiguration")]
        public AuthorizerJwtConfiguration? JwtConfiguration;

        /// <summary>
        /// Name of the authorizer. Must be between 1 and 128 characters in length.
        /// </summary>
        [Input("name")]
        public string? Name;
    }
}
