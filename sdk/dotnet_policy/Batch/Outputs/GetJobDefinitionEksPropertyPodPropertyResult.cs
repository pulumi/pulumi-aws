// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Batch.Outputs
{
    public sealed class GetJobDefinitionEksPropertyPodPropertyResult
    {
        /// <summary>
        /// The properties of the container that's used on the Amazon EKS pod. See containers below.
        /// </summary>
        [PolicyResourceProperty("containers", "_mUnknown_Containers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetJobDefinitionEksPropertyPodPropertyContainerResult>? _mValue_Containers;
        private bool _mUnknown_Containers;
        public List<Outputs.GetJobDefinitionEksPropertyPodPropertyContainerResult>? Containers
        {
            get
            {
                if (!_mUnknown_Containers) return _mValue_Containers;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.Containers' is not present");
            }
        }

        /// <summary>
        /// The DNS policy for the pod. The default value is ClusterFirst. If the hostNetwork parameter is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node.
        /// </summary>
        [PolicyResourceProperty("dnsPolicy", "_mUnknown_DnsPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DnsPolicy;
        private bool _mUnknown_DnsPolicy;
        public string? DnsPolicy
        {
            get
            {
                if (!_mUnknown_DnsPolicy) return _mValue_DnsPolicy;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.DnsPolicy' is not present");
            }
        }

        /// <summary>
        /// Indicates if the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
        /// </summary>
        [PolicyResourceProperty("hostNetwork", "_mUnknown_HostNetwork")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_HostNetwork;
        private bool _mUnknown_HostNetwork;
        public bool? HostNetwork
        {
            get
            {
                if (!_mUnknown_HostNetwork) return _mValue_HostNetwork;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.HostNetwork' is not present");
            }
        }

        [PolicyResourceProperty("imagePullSecrets", "_mUnknown_ImagePullSecrets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetJobDefinitionEksPropertyPodPropertyImagePullSecretResult>? _mValue_ImagePullSecrets;
        private bool _mUnknown_ImagePullSecrets;
        public List<Outputs.GetJobDefinitionEksPropertyPodPropertyImagePullSecretResult>? ImagePullSecrets
        {
            get
            {
                if (!_mUnknown_ImagePullSecrets) return _mValue_ImagePullSecrets;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.ImagePullSecrets' is not present");
            }
        }

        /// <summary>
        /// Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
        /// </summary>
        [PolicyResourceProperty("initContainers", "_mUnknown_InitContainers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerResult>? _mValue_InitContainers;
        private bool _mUnknown_InitContainers;
        public List<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerResult>? InitContainers
        {
            get
            {
                if (!_mUnknown_InitContainers) return _mValue_InitContainers;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.InitContainers' is not present");
            }
        }

        /// <summary>
        /// Metadata about the Kubernetes pod.
        /// </summary>
        [PolicyResourceProperty("metadatas", "_mUnknown_Metadatas")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetJobDefinitionEksPropertyPodPropertyMetadataResult>? _mValue_Metadatas;
        private bool _mUnknown_Metadatas;
        public List<Outputs.GetJobDefinitionEksPropertyPodPropertyMetadataResult>? Metadatas
        {
            get
            {
                if (!_mUnknown_Metadatas) return _mValue_Metadatas;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.Metadatas' is not present");
            }
        }

        /// <summary>
        /// The name of the service account that's used to run the pod.
        /// </summary>
        [PolicyResourceProperty("serviceAccountName", "_mUnknown_ServiceAccountName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceAccountName;
        private bool _mUnknown_ServiceAccountName;
        public string? ServiceAccountName
        {
            get
            {
                if (!_mUnknown_ServiceAccountName) return _mValue_ServiceAccountName;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.ServiceAccountName' is not present");
            }
        }

        /// <summary>
        /// (Optional) Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
        /// </summary>
        [PolicyResourceProperty("shareProcessNamespace", "_mUnknown_ShareProcessNamespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ShareProcessNamespace;
        private bool _mUnknown_ShareProcessNamespace;
        public bool? ShareProcessNamespace
        {
            get
            {
                if (!_mUnknown_ShareProcessNamespace) return _mValue_ShareProcessNamespace;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.ShareProcessNamespace' is not present");
            }
        }

        /// <summary>
        /// A list of data volumes used in a job.
        /// </summary>
        [PolicyResourceProperty("volumes", "_mUnknown_Volumes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.GetJobDefinitionEksPropertyPodPropertyVolumeResult>? _mValue_Volumes;
        private bool _mUnknown_Volumes;
        public List<Outputs.GetJobDefinitionEksPropertyPodPropertyVolumeResult>? Volumes
        {
            get
            {
                if (!_mUnknown_Volumes) return _mValue_Volumes;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyResult.Volumes' is not present");
            }
        }
    }
}
