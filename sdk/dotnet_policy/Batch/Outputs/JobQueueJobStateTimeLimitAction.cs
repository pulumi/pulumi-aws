// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Batch.Outputs
{
    public sealed class JobQueueJobStateTimeLimitAction
    {
        /// <summary>
        /// The action to take when a job is at the head of the job queue in the specified state for the specified period of time. Valid values include `"CANCEL"`
        /// </summary>
        [Input("action")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mAction;

        public string? Action => _mAction.GetValue("action");

        /// <summary>
        /// The approximate amount of time, in seconds, that must pass with the job in the specified state before the action is taken. Valid values include integers between `600` &amp; `86400`
        /// </summary>
        [Input("maxTimeSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mMaxTimeSeconds;

        public int? MaxTimeSeconds => _mMaxTimeSeconds.GetValue("maxTimeSeconds");

        /// <summary>
        /// The reason to log for the action being taken.
        /// </summary>
        [Input("reason")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mReason;

        public string? Reason => _mReason.GetValue("reason");

        /// <summary>
        /// The state of the job needed to trigger the action. Valid values include `"RUNNABLE"`.
        /// </summary>
        [Input("state")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mState;

        public string? State => _mState.GetValue("state");
    }
}
