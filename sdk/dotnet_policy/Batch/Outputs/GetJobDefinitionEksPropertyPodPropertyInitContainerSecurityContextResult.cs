// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Batch.Outputs
{
    public sealed class GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult
    {
        /// <summary>
        /// When this parameter is true, the container is given elevated permissions on the host container instance (similar to the root user).
        /// </summary>
        [PolicyResourceProperty("privileged", "_mUnknown_Privileged")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Privileged;
        private bool _mUnknown_Privileged;
        public bool? Privileged
        {
            get
            {
                if (!_mUnknown_Privileged) return _mValue_Privileged;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult.Privileged' is not present");
            }
        }

        [PolicyResourceProperty("readOnlyRootFileSystem", "_mUnknown_ReadOnlyRootFileSystem")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ReadOnlyRootFileSystem;
        private bool _mUnknown_ReadOnlyRootFileSystem;
        public bool? ReadOnlyRootFileSystem
        {
            get
            {
                if (!_mUnknown_ReadOnlyRootFileSystem) return _mValue_ReadOnlyRootFileSystem;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult.ReadOnlyRootFileSystem' is not present");
            }
        }

        /// <summary>
        /// When this parameter is specified, the container is run as the specified group ID (gid). If this parameter isn't specified, the default is the group that's specified in the image metadata.
        /// </summary>
        [PolicyResourceProperty("runAsGroup", "_mUnknown_RunAsGroup")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RunAsGroup;
        private bool _mUnknown_RunAsGroup;
        public int? RunAsGroup
        {
            get
            {
                if (!_mUnknown_RunAsGroup) return _mValue_RunAsGroup;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult.RunAsGroup' is not present");
            }
        }

        /// <summary>
        /// When this parameter is specified, the container is run as a user with a uid other than 0. If this parameter isn't specified, so such rule is enforced.
        /// </summary>
        [PolicyResourceProperty("runAsNonRoot", "_mUnknown_RunAsNonRoot")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_RunAsNonRoot;
        private bool _mUnknown_RunAsNonRoot;
        public bool? RunAsNonRoot
        {
            get
            {
                if (!_mUnknown_RunAsNonRoot) return _mValue_RunAsNonRoot;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult.RunAsNonRoot' is not present");
            }
        }

        /// <summary>
        /// When this parameter is specified, the container is run as the specified user ID (uid). If this parameter isn't specified, the default is the user that's specified in the image metadata.
        /// </summary>
        [PolicyResourceProperty("runAsUser", "_mUnknown_RunAsUser")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RunAsUser;
        private bool _mUnknown_RunAsUser;
        public int? RunAsUser
        {
            get
            {
                if (!_mUnknown_RunAsUser) return _mValue_RunAsUser;
                throw new UndeferrableValueException("Value 'GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult.RunAsUser' is not present");
            }
        }
    }
}
