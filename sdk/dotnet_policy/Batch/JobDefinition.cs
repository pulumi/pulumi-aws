// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Batch
{
    [PolicyResourceType("aws:batch/jobDefinition:JobDefinition")]
    public sealed class JobDefinition : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of the job definition, includes revision (`:#`).
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// ARN without the revision number.
        /// </summary>
        [Input("arnPrefix")]
        public string? ArnPrefix;

        /// <summary>
        /// Valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html) provided as a single valid JSON document. This parameter is only valid if the `type` parameter is `container`.
        /// </summary>
        [Input("containerProperties")]
        public string? ContainerProperties;

        /// <summary>
        /// When updating a job definition a new revision is created. This parameter determines if the previous version is `deregistered` (`INACTIVE`) or left  `ACTIVE`. Defaults to `true`.
        /// </summary>
        [Input("deregisterOnNewRevision")]
        public bool? DeregisterOnNewRevision;

        /// <summary>
        /// Valid [ECS properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html) provided as a single valid JSON document. This parameter is only valid if the `type` parameter is `container`.
        /// </summary>
        [Input("ecsProperties")]
        public string? EcsProperties;

        /// <summary>
        /// Valid eks properties. This parameter is only valid if the `type` parameter is `container`.
        /// </summary>
        [Input("eksProperties")]
        public JobDefinitionEksProperties? EksProperties;

        /// <summary>
        /// Name of the job definition.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Valid [node properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html) provided as a single valid JSON document. This parameter is required if the `type` parameter is `multinode`.
        /// </summary>
        [Input("nodeProperties")]
        public string? NodeProperties;

        /// <summary>
        /// Parameter substitution placeholders to set in the job definition.
        /// </summary>
        [Input("parameters")]
        public Dictionary<string, string>? Parameters;

        /// <summary>
        /// Platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.
        /// </summary>
        [Input("platformCapabilities")]
        public List<string>? PlatformCapabilities;

        /// <summary>
        /// Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is `false`.
        /// </summary>
        [Input("propagateTags")]
        public bool? PropagateTags;

        /// <summary>
        /// Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of `retry_strategy` is `1`.  Defined below.
        /// </summary>
        [Input("retryStrategy")]
        public JobDefinitionRetryStrategy? RetryStrategy;

        /// <summary>
        /// Revision of the job definition.
        /// </summary>
        [Input("revision")]
        public int? Revision;

        /// <summary>
        /// Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values `0` through `9999`.
        /// </summary>
        [Input("schedulingPriority")]
        public int? SchedulingPriority;

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
        /// </summary>
        [Input("timeout")]
        public JobDefinitionTimeout? Timeout;

        /// <summary>
        /// Type of job definition. Must be `container` or `multinode`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("type")]
        public string? Type;
    }
}
