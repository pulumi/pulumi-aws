// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Batch.Inputs
{
    public sealed class JobDefinitionRetryStrategyArgs
    {
        /// <summary>
        /// Number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.
        /// </summary>
        [PolicyResourceProperty("attempts", "_mUnknown_Attempts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Attempts;
        private bool _mUnknown_Attempts;
        public int? Attempts
        {
            get
            {
                if (!_mUnknown_Attempts) return _mValue_Attempts;
                throw new UndeferrableValueException("Value 'JobDefinitionRetryStrategyArgs.Attempts' is not present");
            }
        }

        /// <summary>
        /// Evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.
        /// </summary>
        [PolicyResourceProperty("evaluateOnExits", "_mUnknown_EvaluateOnExits")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.JobDefinitionRetryStrategyEvaluateOnExitArgs>? _mValue_EvaluateOnExits;
        private bool _mUnknown_EvaluateOnExits;
        public List<Inputs.JobDefinitionRetryStrategyEvaluateOnExitArgs>? EvaluateOnExits
        {
            get
            {
                if (!_mUnknown_EvaluateOnExits) return _mValue_EvaluateOnExits;
                throw new UndeferrableValueException("Value 'JobDefinitionRetryStrategyArgs.EvaluateOnExits' is not present");
            }
        }
    }
}
