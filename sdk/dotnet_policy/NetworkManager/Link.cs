// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkManager
{
    [PolicyResourceType("aws:networkmanager/link:Link")]
    public sealed class Link : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Link Amazon Resource Name (ARN).
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Link.Arn' is not present");
            }
        }

        /// <summary>
        /// The upload speed and download speed in Mbps. Documented below.
        /// </summary>
        [PolicyResourceProperty("bandwidth", "_mUnknown_Bandwidth")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.LinkBandwidth? _mValue_Bandwidth;
        private bool _mUnknown_Bandwidth;
        public Outputs.LinkBandwidth? Bandwidth
        {
            get
            {
                if (!_mUnknown_Bandwidth) return _mValue_Bandwidth;
                throw new UndeferrableValueException("Value 'Link.Bandwidth' is not present");
            }
        }

        /// <summary>
        /// A description of the link.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Link.Description' is not present");
            }
        }

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [PolicyResourceProperty("globalNetworkId", "_mUnknown_GlobalNetworkId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GlobalNetworkId;
        private bool _mUnknown_GlobalNetworkId;
        public string? GlobalNetworkId
        {
            get
            {
                if (!_mUnknown_GlobalNetworkId) return _mValue_GlobalNetworkId;
                throw new UndeferrableValueException("Value 'Link.GlobalNetworkId' is not present");
            }
        }

        /// <summary>
        /// The provider of the link.
        /// </summary>
        [PolicyResourceProperty("providerName", "_mUnknown_ProviderName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProviderName;
        private bool _mUnknown_ProviderName;
        public string? ProviderName
        {
            get
            {
                if (!_mUnknown_ProviderName) return _mValue_ProviderName;
                throw new UndeferrableValueException("Value 'Link.ProviderName' is not present");
            }
        }

        /// <summary>
        /// The ID of the site.
        /// </summary>
        [PolicyResourceProperty("siteId", "_mUnknown_SiteId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SiteId;
        private bool _mUnknown_SiteId;
        public string? SiteId
        {
            get
            {
                if (!_mUnknown_SiteId) return _mValue_SiteId;
                throw new UndeferrableValueException("Value 'Link.SiteId' is not present");
            }
        }

        /// <summary>
        /// Key-value tags for the link. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Link.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Link.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The type of the link.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'Link.Type' is not present");
            }
        }
    }

    [PolicyResourceType("aws:networkmanager/link:Link")]
    public sealed class LinkArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The upload speed and download speed in Mbps. Documented below.
        /// </summary>
        [PolicyResourceProperty("bandwidth", "_mUnknown_Bandwidth")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.LinkBandwidthArgs? _mValue_Bandwidth;
        private bool _mUnknown_Bandwidth;
        public Inputs.LinkBandwidthArgs? Bandwidth
        {
            get
            {
                if (!_mUnknown_Bandwidth) return _mValue_Bandwidth;
                throw new UndeferrableValueException("Value 'LinkArgs.Bandwidth' is not present");
            }
        }

        /// <summary>
        /// A description of the link.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'LinkArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [PolicyResourceProperty("globalNetworkId", "_mUnknown_GlobalNetworkId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GlobalNetworkId;
        private bool _mUnknown_GlobalNetworkId;
        public string? GlobalNetworkId
        {
            get
            {
                if (!_mUnknown_GlobalNetworkId) return _mValue_GlobalNetworkId;
                throw new UndeferrableValueException("Value 'LinkArgs.GlobalNetworkId' is not present");
            }
        }

        /// <summary>
        /// The provider of the link.
        /// </summary>
        [PolicyResourceProperty("providerName", "_mUnknown_ProviderName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProviderName;
        private bool _mUnknown_ProviderName;
        public string? ProviderName
        {
            get
            {
                if (!_mUnknown_ProviderName) return _mValue_ProviderName;
                throw new UndeferrableValueException("Value 'LinkArgs.ProviderName' is not present");
            }
        }

        /// <summary>
        /// The ID of the site.
        /// </summary>
        [PolicyResourceProperty("siteId", "_mUnknown_SiteId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SiteId;
        private bool _mUnknown_SiteId;
        public string? SiteId
        {
            get
            {
                if (!_mUnknown_SiteId) return _mValue_SiteId;
                throw new UndeferrableValueException("Value 'LinkArgs.SiteId' is not present");
            }
        }

        /// <summary>
        /// Key-value tags for the link. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'LinkArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The type of the link.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'LinkArgs.Type' is not present");
            }
        }
    }
}
