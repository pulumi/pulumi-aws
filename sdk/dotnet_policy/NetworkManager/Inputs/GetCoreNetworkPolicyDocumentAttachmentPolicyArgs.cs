// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.NetworkManager.Inputs
{
    public sealed class GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs
    {
        /// <summary>
        /// Action to take when a condition is true. Detailed Below.
        /// </summary>
        [PolicyResourceProperty("action", "_mUnknown_Action")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyActionInputArgs? _mValue_Action;
        private bool _mUnknown_Action;
        public Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyActionInputArgs? Action
        {
            get
            {
                if (!_mUnknown_Action) return _mValue_Action;
                throw new UndeferrableValueException("Value 'GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs.Action' is not present");
            }
        }

        /// <summary>
        /// Valid values include `and` or `or`. This is a mandatory parameter only if you have more than one condition. The `condition_logic` apply to all of the conditions for a rule, which also means nested conditions of `and` or `or` are not supported. Use `or` if you want to associate the attachment with the segment by either the segment name or attachment tag value, or by the chosen conditions. Use `and` if you want to associate the attachment with the segment by either the segment name or attachment tag value and by the chosen conditions. Detailed Below.
        /// </summary>
        [PolicyResourceProperty("conditionLogic", "_mUnknown_ConditionLogic")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConditionLogic;
        private bool _mUnknown_ConditionLogic;
        public string? ConditionLogic
        {
            get
            {
                if (!_mUnknown_ConditionLogic) return _mValue_ConditionLogic;
                throw new UndeferrableValueException("Value 'GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs.ConditionLogic' is not present");
            }
        }

        /// <summary>
        /// A block argument. Detailed Below.
        /// </summary>
        [PolicyResourceProperty("conditions", "_mUnknown_Conditions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyConditionInputArgs>? _mValue_Conditions;
        private bool _mUnknown_Conditions;
        public List<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyConditionInputArgs>? Conditions
        {
            get
            {
                if (!_mUnknown_Conditions) return _mValue_Conditions;
                throw new UndeferrableValueException("Value 'GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs.Conditions' is not present");
            }
        }

        /// <summary>
        /// A user-defined description that further helps identify the rule.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs.Description' is not present");
            }
        }

        /// <summary>
        /// An integer from `1` to `65535` indicating the rule's order number. Rules are processed in order from the lowest numbered rule to the highest. Rules stop processing when a rule is matched. It's important to make sure that you number your rules in the exact order that you want them processed.
        /// </summary>
        [PolicyResourceProperty("ruleNumber", "_mUnknown_RuleNumber")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_RuleNumber;
        private bool _mUnknown_RuleNumber;
        public int? RuleNumber
        {
            get
            {
                if (!_mUnknown_RuleNumber) return _mValue_RuleNumber;
                throw new UndeferrableValueException("Value 'GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs.RuleNumber' is not present");
            }
        }
    }
}
