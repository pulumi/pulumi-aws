// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.SesV2
{
    [PolicyResourceType("aws:sesv2/emailIdentity:EmailIdentity")]
    public sealed class EmailIdentity : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Email Identity.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'EmailIdentity.Arn' is not present");
            }
        }

        /// <summary>
        /// The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
        /// </summary>
        [PolicyResourceProperty("configurationSetName", "_mUnknown_ConfigurationSetName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConfigurationSetName;
        private bool _mUnknown_ConfigurationSetName;
        public string? ConfigurationSetName
        {
            get
            {
                if (!_mUnknown_ConfigurationSetName) return _mValue_ConfigurationSetName;
                throw new UndeferrableValueException("Value 'EmailIdentity.ConfigurationSetName' is not present");
            }
        }

        /// <summary>
        /// The configuration of the DKIM authentication settings for an email domain identity.
        /// </summary>
        [PolicyResourceProperty("dkimSigningAttributes", "_mUnknown_DkimSigningAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.EmailIdentityDkimSigningAttributes? _mValue_DkimSigningAttributes;
        private bool _mUnknown_DkimSigningAttributes;
        public Outputs.EmailIdentityDkimSigningAttributes? DkimSigningAttributes
        {
            get
            {
                if (!_mUnknown_DkimSigningAttributes) return _mValue_DkimSigningAttributes;
                throw new UndeferrableValueException("Value 'EmailIdentity.DkimSigningAttributes' is not present");
            }
        }

        /// <summary>
        /// The email address or domain to verify.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("emailIdentity", "_mUnknown_EmailIdentityDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EmailIdentityDetails;
        private bool _mUnknown_EmailIdentityDetails;
        public string? EmailIdentityDetails
        {
            get
            {
                if (!_mUnknown_EmailIdentityDetails) return _mValue_EmailIdentityDetails;
                throw new UndeferrableValueException("Value 'EmailIdentity.EmailIdentityDetails' is not present");
            }
        }

        /// <summary>
        /// The email identity type. Valid values: `EMAIL_ADDRESS`, `DOMAIN`.
        /// </summary>
        [PolicyResourceProperty("identityType", "_mUnknown_IdentityType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IdentityType;
        private bool _mUnknown_IdentityType;
        public string? IdentityType
        {
            get
            {
                if (!_mUnknown_IdentityType) return _mValue_IdentityType;
                throw new UndeferrableValueException("Value 'EmailIdentity.IdentityType' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'EmailIdentity.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'EmailIdentity.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Specifies whether or not the identity is verified.
        /// </summary>
        [PolicyResourceProperty("verifiedForSendingStatus", "_mUnknown_VerifiedForSendingStatus")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_VerifiedForSendingStatus;
        private bool _mUnknown_VerifiedForSendingStatus;
        public bool? VerifiedForSendingStatus
        {
            get
            {
                if (!_mUnknown_VerifiedForSendingStatus) return _mValue_VerifiedForSendingStatus;
                throw new UndeferrableValueException("Value 'EmailIdentity.VerifiedForSendingStatus' is not present");
            }
        }
    }

    [PolicyResourceType("aws:sesv2/emailIdentity:EmailIdentity")]
    public sealed class EmailIdentityArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
        /// </summary>
        [PolicyResourceProperty("configurationSetName", "_mUnknown_ConfigurationSetName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConfigurationSetName;
        private bool _mUnknown_ConfigurationSetName;
        public string? ConfigurationSetName
        {
            get
            {
                if (!_mUnknown_ConfigurationSetName) return _mValue_ConfigurationSetName;
                throw new UndeferrableValueException("Value 'EmailIdentityArgs.ConfigurationSetName' is not present");
            }
        }

        /// <summary>
        /// The configuration of the DKIM authentication settings for an email domain identity.
        /// </summary>
        [PolicyResourceProperty("dkimSigningAttributes", "_mUnknown_DkimSigningAttributes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.EmailIdentityDkimSigningAttributesArgs? _mValue_DkimSigningAttributes;
        private bool _mUnknown_DkimSigningAttributes;
        public Inputs.EmailIdentityDkimSigningAttributesArgs? DkimSigningAttributes
        {
            get
            {
                if (!_mUnknown_DkimSigningAttributes) return _mValue_DkimSigningAttributes;
                throw new UndeferrableValueException("Value 'EmailIdentityArgs.DkimSigningAttributes' is not present");
            }
        }

        /// <summary>
        /// The email address or domain to verify.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("emailIdentity", "_mUnknown_EmailIdentityDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EmailIdentityDetails;
        private bool _mUnknown_EmailIdentityDetails;
        public string? EmailIdentityDetails
        {
            get
            {
                if (!_mUnknown_EmailIdentityDetails) return _mValue_EmailIdentityDetails;
                throw new UndeferrableValueException("Value 'EmailIdentityArgs.EmailIdentityDetails' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'EmailIdentityArgs.Tags' is not present");
            }
        }
    }
}
