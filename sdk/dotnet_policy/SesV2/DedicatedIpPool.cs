// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.SesV2
{
    [PolicyResourceType("aws:sesv2/dedicatedIpPool:DedicatedIpPool")]
    public sealed class DedicatedIpPool : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Dedicated IP Pool.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'DedicatedIpPool.Arn' is not present");
            }
        }

        /// <summary>
        /// Name of the dedicated IP pool.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("poolName", "_mUnknown_PoolName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PoolName;
        private bool _mUnknown_PoolName;
        public string? PoolName
        {
            get
            {
                if (!_mUnknown_PoolName) return _mValue_PoolName;
                throw new UndeferrableValueException("Value 'DedicatedIpPool.PoolName' is not present");
            }
        }

        /// <summary>
        /// IP pool scaling mode. Valid values: `STANDARD`, `MANAGED`. If omitted, the AWS API will default to a standard pool.
        /// </summary>
        [PolicyResourceProperty("scalingMode", "_mUnknown_ScalingMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ScalingMode;
        private bool _mUnknown_ScalingMode;
        public string? ScalingMode
        {
            get
            {
                if (!_mUnknown_ScalingMode) return _mValue_ScalingMode;
                throw new UndeferrableValueException("Value 'DedicatedIpPool.ScalingMode' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the pool. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DedicatedIpPool.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'DedicatedIpPool.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:sesv2/dedicatedIpPool:DedicatedIpPool")]
    public sealed class DedicatedIpPoolArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the dedicated IP pool.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("poolName", "_mUnknown_PoolName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PoolName;
        private bool _mUnknown_PoolName;
        public string? PoolName
        {
            get
            {
                if (!_mUnknown_PoolName) return _mValue_PoolName;
                throw new UndeferrableValueException("Value 'DedicatedIpPoolArgs.PoolName' is not present");
            }
        }

        /// <summary>
        /// IP pool scaling mode. Valid values: `STANDARD`, `MANAGED`. If omitted, the AWS API will default to a standard pool.
        /// </summary>
        [PolicyResourceProperty("scalingMode", "_mUnknown_ScalingMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ScalingMode;
        private bool _mUnknown_ScalingMode;
        public string? ScalingMode
        {
            get
            {
                if (!_mUnknown_ScalingMode) return _mValue_ScalingMode;
                throw new UndeferrableValueException("Value 'DedicatedIpPoolArgs.ScalingMode' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the pool. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DedicatedIpPoolArgs.Tags' is not present");
            }
        }
    }
}
