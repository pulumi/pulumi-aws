// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rekognition
{
    [PolicyResourceType("aws:rekognition/streamProcessor:StreamProcessor")]
    public sealed class StreamProcessor : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Stream Processor.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'StreamProcessor.Arn' is not present");
            }
        }

        /// <summary>
        /// See `data_sharing_preference`.
        /// </summary>
        [PolicyResourceProperty("dataSharingPreference", "_mUnknown_DataSharingPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.StreamProcessorDataSharingPreference? _mValue_DataSharingPreference;
        private bool _mUnknown_DataSharingPreference;
        public Outputs.StreamProcessorDataSharingPreference? DataSharingPreference
        {
            get
            {
                if (!_mUnknown_DataSharingPreference) return _mValue_DataSharingPreference;
                throw new UndeferrableValueException("Value 'StreamProcessor.DataSharingPreference' is not present");
            }
        }

        /// <summary>
        /// Input video stream. See `input`.
        /// </summary>
        [PolicyResourceProperty("input", "_mUnknown_Input")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.StreamProcessorInput? _mValue_Input;
        private bool _mUnknown_Input;
        public Outputs.StreamProcessorInput? Input
        {
            get
            {
                if (!_mUnknown_Input) return _mValue_Input;
                throw new UndeferrableValueException("Value 'StreamProcessor.Input' is not present");
            }
        }

        /// <summary>
        /// Optional parameter for label detection stream processors.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'StreamProcessor.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// The name of the Stream Processor.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'StreamProcessor.Name' is not present");
            }
        }

        /// <summary>
        /// The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the completion status. See `notification_channel`.
        /// </summary>
        [PolicyResourceProperty("notificationChannel", "_mUnknown_NotificationChannel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.StreamProcessorNotificationChannel? _mValue_NotificationChannel;
        private bool _mUnknown_NotificationChannel;
        public Outputs.StreamProcessorNotificationChannel? NotificationChannel
        {
            get
            {
                if (!_mUnknown_NotificationChannel) return _mValue_NotificationChannel;
                throw new UndeferrableValueException("Value 'StreamProcessor.NotificationChannel' is not present");
            }
        }

        /// <summary>
        /// Kinesis data stream stream or Amazon S3 bucket location to which Amazon Rekognition Video puts the analysis results. See `output`.
        /// </summary>
        [PolicyResourceProperty("output", "_mUnknown_Output")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.StreamProcessorOutput? _mValue_Output;
        private bool _mUnknown_Output;
        public Outputs.StreamProcessorOutput? Output
        {
            get
            {
                if (!_mUnknown_Output) return _mValue_Output;
                throw new UndeferrableValueException("Value 'StreamProcessor.Output' is not present");
            }
        }

        /// <summary>
        /// Specifies locations in the frames where Amazon Rekognition checks for objects or people. See `regions_of_interest`.
        /// </summary>
        [PolicyResourceProperty("regionsOfInterests", "_mUnknown_RegionsOfInterests")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.StreamProcessorRegionsOfInterest>? _mValue_RegionsOfInterests;
        private bool _mUnknown_RegionsOfInterests;
        public List<Outputs.StreamProcessorRegionsOfInterest>? RegionsOfInterests
        {
            get
            {
                if (!_mUnknown_RegionsOfInterests) return _mValue_RegionsOfInterests;
                throw new UndeferrableValueException("Value 'StreamProcessor.RegionsOfInterests' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Number (ARN) of the IAM role that allows access to the stream processor. The IAM role provides Rekognition read permissions for a Kinesis stream. It also provides write permissions to an Amazon S3 bucket and Amazon Simple Notification Service topic for a label detection stream processor. This is required for both face search and label detection stream processors.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'StreamProcessor.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Input parameters used in a streaming video analyzed by a stream processor. See `settings`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("settings", "_mUnknown_Settings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.StreamProcessorSettings? _mValue_Settings;
        private bool _mUnknown_Settings;
        public Outputs.StreamProcessorSettings? Settings
        {
            get
            {
                if (!_mUnknown_Settings) return _mValue_Settings;
                throw new UndeferrableValueException("Value 'StreamProcessor.Settings' is not present");
            }
        }

        /// <summary>
        /// (**Deprecated**) ARN of the Stream Processor.
        /// Use `arn` instead.
        /// </summary>
        [PolicyResourceProperty("streamProcessorArn", "_mUnknown_StreamProcessorArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StreamProcessorArn;
        private bool _mUnknown_StreamProcessorArn;
        public string? StreamProcessorArn
        {
            get
            {
                if (!_mUnknown_StreamProcessorArn) return _mValue_StreamProcessorArn;
                throw new UndeferrableValueException("Value 'StreamProcessor.StreamProcessorArn' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'StreamProcessor.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'StreamProcessor.TagsAll' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.StreamProcessorTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.StreamProcessorTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'StreamProcessor.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:rekognition/streamProcessor:StreamProcessor")]
    public sealed class StreamProcessorArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// See `data_sharing_preference`.
        /// </summary>
        [PolicyResourceProperty("dataSharingPreference", "_mUnknown_DataSharingPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.StreamProcessorDataSharingPreferenceArgs? _mValue_DataSharingPreference;
        private bool _mUnknown_DataSharingPreference;
        public Inputs.StreamProcessorDataSharingPreferenceArgs? DataSharingPreference
        {
            get
            {
                if (!_mUnknown_DataSharingPreference) return _mValue_DataSharingPreference;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.DataSharingPreference' is not present");
            }
        }

        /// <summary>
        /// Input video stream. See `input`.
        /// </summary>
        [PolicyResourceProperty("input", "_mUnknown_Input")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.StreamProcessorInputArgs? _mValue_Input;
        private bool _mUnknown_Input;
        public Inputs.StreamProcessorInputArgs? Input
        {
            get
            {
                if (!_mUnknown_Input) return _mValue_Input;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.Input' is not present");
            }
        }

        /// <summary>
        /// Optional parameter for label detection stream processors.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// The name of the Stream Processor.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the completion status. See `notification_channel`.
        /// </summary>
        [PolicyResourceProperty("notificationChannel", "_mUnknown_NotificationChannel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.StreamProcessorNotificationChannelArgs? _mValue_NotificationChannel;
        private bool _mUnknown_NotificationChannel;
        public Inputs.StreamProcessorNotificationChannelArgs? NotificationChannel
        {
            get
            {
                if (!_mUnknown_NotificationChannel) return _mValue_NotificationChannel;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.NotificationChannel' is not present");
            }
        }

        /// <summary>
        /// Kinesis data stream stream or Amazon S3 bucket location to which Amazon Rekognition Video puts the analysis results. See `output`.
        /// </summary>
        [PolicyResourceProperty("output", "_mUnknown_Output")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.StreamProcessorOutputArgs? _mValue_Output;
        private bool _mUnknown_Output;
        public Inputs.StreamProcessorOutputArgs? Output
        {
            get
            {
                if (!_mUnknown_Output) return _mValue_Output;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.Output' is not present");
            }
        }

        /// <summary>
        /// Specifies locations in the frames where Amazon Rekognition checks for objects or people. See `regions_of_interest`.
        /// </summary>
        [PolicyResourceProperty("regionsOfInterests", "_mUnknown_RegionsOfInterests")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.StreamProcessorRegionsOfInterestArgs>? _mValue_RegionsOfInterests;
        private bool _mUnknown_RegionsOfInterests;
        public List<Inputs.StreamProcessorRegionsOfInterestArgs>? RegionsOfInterests
        {
            get
            {
                if (!_mUnknown_RegionsOfInterests) return _mValue_RegionsOfInterests;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.RegionsOfInterests' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Number (ARN) of the IAM role that allows access to the stream processor. The IAM role provides Rekognition read permissions for a Kinesis stream. It also provides write permissions to an Amazon S3 bucket and Amazon Simple Notification Service topic for a label detection stream processor. This is required for both face search and label detection stream processors.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Input parameters used in a streaming video analyzed by a stream processor. See `settings`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("settings", "_mUnknown_Settings")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.StreamProcessorSettingsArgs? _mValue_Settings;
        private bool _mUnknown_Settings;
        public Inputs.StreamProcessorSettingsArgs? Settings
        {
            get
            {
                if (!_mUnknown_Settings) return _mValue_Settings;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.Settings' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.Tags' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.StreamProcessorTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.StreamProcessorTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'StreamProcessorArgs.Timeouts' is not present");
            }
        }
    }
}
