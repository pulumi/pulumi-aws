// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Rekognition
{
    [PolicyResourceType("aws:rekognition/project:Project")]
    public sealed class Project : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Project.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Project.Arn' is not present");
            }
        }

        /// <summary>
        /// Specify if automatic retraining should occur. Valid values are `ENABLED` or `DISABLED`. Defaults to `DISABLED`.
        /// </summary>
        [PolicyResourceProperty("autoUpdate", "_mUnknown_AutoUpdate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoUpdate;
        private bool _mUnknown_AutoUpdate;
        public string? AutoUpdate
        {
            get
            {
                if (!_mUnknown_AutoUpdate) return _mValue_AutoUpdate;
                throw new UndeferrableValueException("Value 'Project.AutoUpdate' is not present");
            }
        }

        /// <summary>
        /// Specify the feature being customized. Valid values are `CONTENT_MODERATION` or `CUSTOM_LABELS`. Defaults to `CUSTOM_LABELS`.
        /// </summary>
        [PolicyResourceProperty("feature", "_mUnknown_Feature")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Feature;
        private bool _mUnknown_Feature;
        public string? Feature
        {
            get
            {
                if (!_mUnknown_Feature) return _mValue_Feature;
                throw new UndeferrableValueException("Value 'Project.Feature' is not present");
            }
        }

        /// <summary>
        /// Desired name of the project.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Project.Name' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Project.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Project.TagsAll' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ProjectTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.ProjectTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'Project.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:rekognition/project:Project")]
    public sealed class ProjectArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specify if automatic retraining should occur. Valid values are `ENABLED` or `DISABLED`. Defaults to `DISABLED`.
        /// </summary>
        [PolicyResourceProperty("autoUpdate", "_mUnknown_AutoUpdate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AutoUpdate;
        private bool _mUnknown_AutoUpdate;
        public string? AutoUpdate
        {
            get
            {
                if (!_mUnknown_AutoUpdate) return _mValue_AutoUpdate;
                throw new UndeferrableValueException("Value 'ProjectArgs.AutoUpdate' is not present");
            }
        }

        /// <summary>
        /// Specify the feature being customized. Valid values are `CONTENT_MODERATION` or `CUSTOM_LABELS`. Defaults to `CUSTOM_LABELS`.
        /// </summary>
        [PolicyResourceProperty("feature", "_mUnknown_Feature")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Feature;
        private bool _mUnknown_Feature;
        public string? Feature
        {
            get
            {
                if (!_mUnknown_Feature) return _mValue_Feature;
                throw new UndeferrableValueException("Value 'ProjectArgs.Feature' is not present");
            }
        }

        /// <summary>
        /// Desired name of the project.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ProjectArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ProjectArgs.Tags' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ProjectTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.ProjectTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ProjectArgs.Timeouts' is not present");
            }
        }
    }
}
