// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Workspaces
{
    [PolicyResourceType("aws:workspaces/connectionAlias:ConnectionAlias")]
    public sealed class ConnectionAlias : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
        /// </summary>
        [PolicyResourceProperty("connectionString", "_mUnknown_ConnectionString")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConnectionString;
        private bool _mUnknown_ConnectionString;
        public string? ConnectionString
        {
            get
            {
                if (!_mUnknown_ConnectionString) return _mValue_ConnectionString;
                throw new UndeferrableValueException("Value 'ConnectionAlias.ConnectionString' is not present");
            }
        }

        /// <summary>
        /// The identifier of the Amazon Web Services account that owns the connection alias.
        /// </summary>
        [PolicyResourceProperty("ownerAccountId", "_mUnknown_OwnerAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerAccountId;
        private bool _mUnknown_OwnerAccountId;
        public string? OwnerAccountId
        {
            get
            {
                if (!_mUnknown_OwnerAccountId) return _mValue_OwnerAccountId;
                throw new UndeferrableValueException("Value 'ConnectionAlias.OwnerAccountId' is not present");
            }
        }

        /// <summary>
        /// The current state of the connection alias.
        /// </summary>
        [PolicyResourceProperty("state", "_mUnknown_State")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_State;
        private bool _mUnknown_State;
        public string? State
        {
            get
            {
                if (!_mUnknown_State) return _mValue_State;
                throw new UndeferrableValueException("Value 'ConnectionAlias.State' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ConnectionAlias.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'ConnectionAlias.TagsAll' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ConnectionAliasTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.ConnectionAliasTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ConnectionAlias.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:workspaces/connectionAlias:ConnectionAlias")]
    public sealed class ConnectionAliasArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
        /// </summary>
        [PolicyResourceProperty("connectionString", "_mUnknown_ConnectionString")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConnectionString;
        private bool _mUnknown_ConnectionString;
        public string? ConnectionString
        {
            get
            {
                if (!_mUnknown_ConnectionString) return _mValue_ConnectionString;
                throw new UndeferrableValueException("Value 'ConnectionAliasArgs.ConnectionString' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ConnectionAliasArgs.Tags' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ConnectionAliasTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.ConnectionAliasTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ConnectionAliasArgs.Timeouts' is not present");
            }
        }
    }
}
