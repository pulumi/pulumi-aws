// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Workspaces.Outputs
{
    public sealed class GetDirectoryWorkspaceCreationPropertyResult
    {
        /// <summary>
        /// The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.
        /// </summary>
        [PolicyResourceProperty("customSecurityGroupId", "_mUnknown_CustomSecurityGroupId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomSecurityGroupId;
        private bool _mUnknown_CustomSecurityGroupId;
        public string? CustomSecurityGroupId
        {
            get
            {
                if (!_mUnknown_CustomSecurityGroupId) return _mValue_CustomSecurityGroupId;
                throw new UndeferrableValueException("Value 'GetDirectoryWorkspaceCreationPropertyResult.CustomSecurityGroupId' is not present");
            }
        }

        /// <summary>
        /// The default organizational unit (OU) for your WorkSpace directories.
        /// </summary>
        [PolicyResourceProperty("defaultOu", "_mUnknown_DefaultOu")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultOu;
        private bool _mUnknown_DefaultOu;
        public string? DefaultOu
        {
            get
            {
                if (!_mUnknown_DefaultOu) return _mValue_DefaultOu;
                throw new UndeferrableValueException("Value 'GetDirectoryWorkspaceCreationPropertyResult.DefaultOu' is not present");
            }
        }

        /// <summary>
        /// Indicates whether internet access is enabled for your WorkSpaces.
        /// </summary>
        [PolicyResourceProperty("enableInternetAccess", "_mUnknown_EnableInternetAccess")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableInternetAccess;
        private bool _mUnknown_EnableInternetAccess;
        public bool? EnableInternetAccess
        {
            get
            {
                if (!_mUnknown_EnableInternetAccess) return _mValue_EnableInternetAccess;
                throw new UndeferrableValueException("Value 'GetDirectoryWorkspaceCreationPropertyResult.EnableInternetAccess' is not present");
            }
        }

        /// <summary>
        /// Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html).
        /// </summary>
        [PolicyResourceProperty("enableMaintenanceMode", "_mUnknown_EnableMaintenanceMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableMaintenanceMode;
        private bool _mUnknown_EnableMaintenanceMode;
        public bool? EnableMaintenanceMode
        {
            get
            {
                if (!_mUnknown_EnableMaintenanceMode) return _mValue_EnableMaintenanceMode;
                throw new UndeferrableValueException("Value 'GetDirectoryWorkspaceCreationPropertyResult.EnableMaintenanceMode' is not present");
            }
        }

        /// <summary>
        /// Indicates whether users are local administrators of their WorkSpaces.
        /// </summary>
        [PolicyResourceProperty("userEnabledAsLocalAdministrator", "_mUnknown_UserEnabledAsLocalAdministrator")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_UserEnabledAsLocalAdministrator;
        private bool _mUnknown_UserEnabledAsLocalAdministrator;
        public bool? UserEnabledAsLocalAdministrator
        {
            get
            {
                if (!_mUnknown_UserEnabledAsLocalAdministrator) return _mValue_UserEnabledAsLocalAdministrator;
                throw new UndeferrableValueException("Value 'GetDirectoryWorkspaceCreationPropertyResult.UserEnabledAsLocalAdministrator' is not present");
            }
        }
    }
}
