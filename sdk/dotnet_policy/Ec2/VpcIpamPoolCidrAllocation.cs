// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation")]
    public sealed class VpcIpamPoolCidrAllocation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The CIDR you want to assign to the pool.
        /// </summary>
        [PolicyResourceProperty("cidr", "_mUnknown_Cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Cidr;
        private bool _mUnknown_Cidr;
        public string? Cidr
        {
            get
            {
                if (!_mUnknown_Cidr) return _mValue_Cidr;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.Cidr' is not present");
            }
        }

        /// <summary>
        /// The description for the allocation.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.Description' is not present");
            }
        }

        /// <summary>
        /// Exclude a particular CIDR range from being returned by the pool.
        /// </summary>
        [PolicyResourceProperty("disallowedCidrs", "_mUnknown_DisallowedCidrs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DisallowedCidrs;
        private bool _mUnknown_DisallowedCidrs;
        public List<string>? DisallowedCidrs
        {
            get
            {
                if (!_mUnknown_DisallowedCidrs) return _mValue_DisallowedCidrs;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.DisallowedCidrs' is not present");
            }
        }

        [PolicyResourceProperty("ipamPoolAllocationId", "_mUnknown_IpamPoolAllocationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolAllocationId;
        private bool _mUnknown_IpamPoolAllocationId;
        public string? IpamPoolAllocationId
        {
            get
            {
                if (!_mUnknown_IpamPoolAllocationId) return _mValue_IpamPoolAllocationId;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.IpamPoolAllocationId' is not present");
            }
        }

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [PolicyResourceProperty("ipamPoolId", "_mUnknown_IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolId;
        private bool _mUnknown_IpamPoolId;
        public string? IpamPoolId
        {
            get
            {
                if (!_mUnknown_IpamPoolId) return _mValue_IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// The netmask length of the CIDR you would like to allocate to the IPAM pool. Valid Values: `0-128`.
        /// </summary>
        [PolicyResourceProperty("netmaskLength", "_mUnknown_NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NetmaskLength;
        private bool _mUnknown_NetmaskLength;
        public int? NetmaskLength
        {
            get
            {
                if (!_mUnknown_NetmaskLength) return _mValue_NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.NetmaskLength' is not present");
            }
        }

        /// <summary>
        /// The ID of the resource.
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.ResourceId' is not present");
            }
        }

        /// <summary>
        /// The owner of the resource.
        /// </summary>
        [PolicyResourceProperty("resourceOwner", "_mUnknown_ResourceOwner")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceOwner;
        private bool _mUnknown_ResourceOwner;
        public string? ResourceOwner
        {
            get
            {
                if (!_mUnknown_ResourceOwner) return _mValue_ResourceOwner;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.ResourceOwner' is not present");
            }
        }

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [PolicyResourceProperty("resourceType", "_mUnknown_ResourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceType;
        private bool _mUnknown_ResourceType;
        public string? ResourceType
        {
            get
            {
                if (!_mUnknown_ResourceType) return _mValue_ResourceType;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.ResourceType' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation")]
    public sealed class VpcIpamPoolCidrAllocationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The CIDR you want to assign to the pool.
        /// </summary>
        [PolicyResourceProperty("cidr", "_mUnknown_Cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Cidr;
        private bool _mUnknown_Cidr;
        public string? Cidr
        {
            get
            {
                if (!_mUnknown_Cidr) return _mValue_Cidr;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocationArgs.Cidr' is not present");
            }
        }

        /// <summary>
        /// The description for the allocation.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocationArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Exclude a particular CIDR range from being returned by the pool.
        /// </summary>
        [PolicyResourceProperty("disallowedCidrs", "_mUnknown_DisallowedCidrs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DisallowedCidrs;
        private bool _mUnknown_DisallowedCidrs;
        public List<string>? DisallowedCidrs
        {
            get
            {
                if (!_mUnknown_DisallowedCidrs) return _mValue_DisallowedCidrs;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocationArgs.DisallowedCidrs' is not present");
            }
        }

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [PolicyResourceProperty("ipamPoolId", "_mUnknown_IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolId;
        private bool _mUnknown_IpamPoolId;
        public string? IpamPoolId
        {
            get
            {
                if (!_mUnknown_IpamPoolId) return _mValue_IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocationArgs.IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// The netmask length of the CIDR you would like to allocate to the IPAM pool. Valid Values: `0-128`.
        /// </summary>
        [PolicyResourceProperty("netmaskLength", "_mUnknown_NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NetmaskLength;
        private bool _mUnknown_NetmaskLength;
        public int? NetmaskLength
        {
            get
            {
                if (!_mUnknown_NetmaskLength) return _mValue_NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocationArgs.NetmaskLength' is not present");
            }
        }
    }
}
