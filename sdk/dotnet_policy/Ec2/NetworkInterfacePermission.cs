// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/networkInterfacePermission:NetworkInterfacePermission")]
    public sealed class NetworkInterfacePermission : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Web Services account ID.
        /// </summary>
        [PolicyResourceProperty("awsAccountId", "_mUnknown_AwsAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsAccountId;
        private bool _mUnknown_AwsAccountId;
        public string? AwsAccountId
        {
            get
            {
                if (!_mUnknown_AwsAccountId) return _mValue_AwsAccountId;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermission.AwsAccountId' is not present");
            }
        }

        /// <summary>
        /// The ID of the network interface.
        /// </summary>
        [PolicyResourceProperty("networkInterfaceId", "_mUnknown_NetworkInterfaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NetworkInterfaceId;
        private bool _mUnknown_NetworkInterfaceId;
        public string? NetworkInterfaceId
        {
            get
            {
                if (!_mUnknown_NetworkInterfaceId) return _mValue_NetworkInterfaceId;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermission.NetworkInterfaceId' is not present");
            }
        }

        /// <summary>
        /// ENI permission ID.
        /// </summary>
        [PolicyResourceProperty("networkInterfacePermissionId", "_mUnknown_NetworkInterfacePermissionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NetworkInterfacePermissionId;
        private bool _mUnknown_NetworkInterfacePermissionId;
        public string? NetworkInterfacePermissionId
        {
            get
            {
                if (!_mUnknown_NetworkInterfacePermissionId) return _mValue_NetworkInterfacePermissionId;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermission.NetworkInterfacePermissionId' is not present");
            }
        }

        /// <summary>
        /// The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
        /// </summary>
        [PolicyResourceProperty("permission", "_mUnknown_Permission")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Permission;
        private bool _mUnknown_Permission;
        public string? Permission
        {
            get
            {
                if (!_mUnknown_Permission) return _mValue_Permission;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermission.Permission' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.NetworkInterfacePermissionTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.NetworkInterfacePermissionTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermission.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/networkInterfacePermission:NetworkInterfacePermission")]
    public sealed class NetworkInterfacePermissionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Amazon Web Services account ID.
        /// </summary>
        [PolicyResourceProperty("awsAccountId", "_mUnknown_AwsAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsAccountId;
        private bool _mUnknown_AwsAccountId;
        public string? AwsAccountId
        {
            get
            {
                if (!_mUnknown_AwsAccountId) return _mValue_AwsAccountId;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.AwsAccountId' is not present");
            }
        }

        /// <summary>
        /// The ID of the network interface.
        /// </summary>
        [PolicyResourceProperty("networkInterfaceId", "_mUnknown_NetworkInterfaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NetworkInterfaceId;
        private bool _mUnknown_NetworkInterfaceId;
        public string? NetworkInterfaceId
        {
            get
            {
                if (!_mUnknown_NetworkInterfaceId) return _mValue_NetworkInterfaceId;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.NetworkInterfaceId' is not present");
            }
        }

        /// <summary>
        /// The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
        /// </summary>
        [PolicyResourceProperty("permission", "_mUnknown_Permission")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Permission;
        private bool _mUnknown_Permission;
        public string? Permission
        {
            get
            {
                if (!_mUnknown_Permission) return _mValue_Permission;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.Permission' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.NetworkInterfacePermissionTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.NetworkInterfacePermissionTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.Timeouts' is not present");
            }
        }
    }
}
