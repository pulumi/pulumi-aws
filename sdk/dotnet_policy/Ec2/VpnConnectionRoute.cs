// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpnConnectionRoute:VpnConnectionRoute")]
    public sealed class VpnConnectionRoute : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The CIDR block associated with the local subnet of the customer network.
        /// </summary>
        [PolicyResourceProperty("destinationCidrBlock", "_mUnknown_DestinationCidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationCidrBlock;
        private bool _mUnknown_DestinationCidrBlock;
        public string? DestinationCidrBlock
        {
            get
            {
                if (!_mUnknown_DestinationCidrBlock) return _mValue_DestinationCidrBlock;
                throw new UndeferrableValueException("Value 'VpnConnectionRoute.DestinationCidrBlock' is not present");
            }
        }

        /// <summary>
        /// The ID of the VPN connection.
        /// </summary>
        [PolicyResourceProperty("vpnConnectionId", "_mUnknown_VpnConnectionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpnConnectionId;
        private bool _mUnknown_VpnConnectionId;
        public string? VpnConnectionId
        {
            get
            {
                if (!_mUnknown_VpnConnectionId) return _mValue_VpnConnectionId;
                throw new UndeferrableValueException("Value 'VpnConnectionRoute.VpnConnectionId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/vpnConnectionRoute:VpnConnectionRoute")]
    public sealed class VpnConnectionRouteArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The CIDR block associated with the local subnet of the customer network.
        /// </summary>
        [PolicyResourceProperty("destinationCidrBlock", "_mUnknown_DestinationCidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationCidrBlock;
        private bool _mUnknown_DestinationCidrBlock;
        public string? DestinationCidrBlock
        {
            get
            {
                if (!_mUnknown_DestinationCidrBlock) return _mValue_DestinationCidrBlock;
                throw new UndeferrableValueException("Value 'VpnConnectionRouteArgs.DestinationCidrBlock' is not present");
            }
        }

        /// <summary>
        /// The ID of the VPN connection.
        /// </summary>
        [PolicyResourceProperty("vpnConnectionId", "_mUnknown_VpnConnectionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpnConnectionId;
        private bool _mUnknown_VpnConnectionId;
        public string? VpnConnectionId
        {
            get
            {
                if (!_mUnknown_VpnConnectionId) return _mValue_VpnConnectionId;
                throw new UndeferrableValueException("Value 'VpnConnectionRouteArgs.VpnConnectionId' is not present");
            }
        }
    }
}
