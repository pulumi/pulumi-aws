// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Outputs
{
    public sealed class GetAmiBlockDeviceMappingResult
    {
        /// <summary>
        /// Physical name of the device.
        /// </summary>
        [Input("deviceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDeviceName;

        public string? DeviceName => _mDeviceName.GetValue("deviceName");

        /// <summary>
        /// Map containing EBS information, if the device is EBS based. Unlike most object attributes, these are accessed directly (e.g., `ebs.volume_size` or `ebs["volume_size"]`) rather than accessed through the first element of a list (e.g., `ebs[0].volume_size`).
        /// </summary>
        [Input("ebs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mEbs;

        public Dictionary<string, string>? Ebs => _mEbs.GetValue("ebs");

        /// <summary>
        /// Suppresses the specified device included in the block device mapping of the AMI.
        /// </summary>
        [Input("noDevice")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mNoDevice;

        public string? NoDevice => _mNoDevice.GetValue("noDevice");

        /// <summary>
        /// Virtual device name (for instance stores).
        /// </summary>
        [Input("virtualName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mVirtualName;

        public string? VirtualName => _mVirtualName.GetValue("virtualName");
    }
}
