// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Outputs
{
    public sealed class GetVpcIamPoolsIpamPoolResult
    {
        /// <summary>
        /// IP protocol assigned to this pool.
        /// </summary>
        [PolicyResourceProperty("addressFamily", "_mUnknown_AddressFamily")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AddressFamily;
        private bool _mUnknown_AddressFamily;
        public string? AddressFamily
        {
            get
            {
                if (!_mUnknown_AddressFamily) return _mValue_AddressFamily;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.AddressFamily' is not present");
            }
        }

        /// <summary>
        /// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
        /// </summary>
        [PolicyResourceProperty("allocationDefaultNetmaskLength", "_mUnknown_AllocationDefaultNetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AllocationDefaultNetmaskLength;
        private bool _mUnknown_AllocationDefaultNetmaskLength;
        public int? AllocationDefaultNetmaskLength
        {
            get
            {
                if (!_mUnknown_AllocationDefaultNetmaskLength) return _mValue_AllocationDefaultNetmaskLength;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.AllocationDefaultNetmaskLength' is not present");
            }
        }

        /// <summary>
        /// The maximum netmask length that will be required for CIDR allocations in this pool.
        /// </summary>
        [PolicyResourceProperty("allocationMaxNetmaskLength", "_mUnknown_AllocationMaxNetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AllocationMaxNetmaskLength;
        private bool _mUnknown_AllocationMaxNetmaskLength;
        public int? AllocationMaxNetmaskLength
        {
            get
            {
                if (!_mUnknown_AllocationMaxNetmaskLength) return _mValue_AllocationMaxNetmaskLength;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.AllocationMaxNetmaskLength' is not present");
            }
        }

        /// <summary>
        /// The minimum netmask length that will be required for CIDR allocations in this pool.
        /// </summary>
        [PolicyResourceProperty("allocationMinNetmaskLength", "_mUnknown_AllocationMinNetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AllocationMinNetmaskLength;
        private bool _mUnknown_AllocationMinNetmaskLength;
        public int? AllocationMinNetmaskLength
        {
            get
            {
                if (!_mUnknown_AllocationMinNetmaskLength) return _mValue_AllocationMinNetmaskLength;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.AllocationMinNetmaskLength' is not present");
            }
        }

        /// <summary>
        /// Tags that are required to create resources in using this pool.
        /// </summary>
        [PolicyResourceProperty("allocationResourceTags", "_mUnknown_AllocationResourceTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_AllocationResourceTags;
        private bool _mUnknown_AllocationResourceTags;
        public Dictionary<string, string>? AllocationResourceTags
        {
            get
            {
                if (!_mUnknown_AllocationResourceTags) return _mValue_AllocationResourceTags;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.AllocationResourceTags' is not present");
            }
        }

        /// <summary>
        /// ARN of the pool
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.Arn' is not present");
            }
        }

        /// <summary>
        /// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
        /// </summary>
        [PolicyResourceProperty("autoImport", "_mUnknown_AutoImport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AutoImport;
        private bool _mUnknown_AutoImport;
        public bool? AutoImport
        {
            get
            {
                if (!_mUnknown_AutoImport) return _mValue_AutoImport;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.AutoImport' is not present");
            }
        }

        /// <summary>
        /// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
        /// </summary>
        [PolicyResourceProperty("awsService", "_mUnknown_AwsService")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsService;
        private bool _mUnknown_AwsService;
        public string? AwsService
        {
            get
            {
                if (!_mUnknown_AwsService) return _mValue_AwsService;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.AwsService' is not present");
            }
        }

        /// <summary>
        /// Description for the IPAM pool.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.Description' is not present");
            }
        }

        /// <summary>
        /// ID of the IPAM pool.
        /// </summary>
        [PolicyResourceProperty("id", "_mUnknown_Id")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Id;
        private bool _mUnknown_Id;
        public string? Id
        {
            get
            {
                if (!_mUnknown_Id) return _mValue_Id;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.Id' is not present");
            }
        }

        /// <summary>
        /// ID of the scope the pool belongs to.
        /// </summary>
        [PolicyResourceProperty("ipamScopeId", "_mUnknown_IpamScopeId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamScopeId;
        private bool _mUnknown_IpamScopeId;
        public string? IpamScopeId
        {
            get
            {
                if (!_mUnknown_IpamScopeId) return _mValue_IpamScopeId;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.IpamScopeId' is not present");
            }
        }

        [PolicyResourceProperty("ipamScopeType", "_mUnknown_IpamScopeType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamScopeType;
        private bool _mUnknown_IpamScopeType;
        public string? IpamScopeType
        {
            get
            {
                if (!_mUnknown_IpamScopeType) return _mValue_IpamScopeType;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.IpamScopeType' is not present");
            }
        }

        /// <summary>
        /// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
        /// </summary>
        [PolicyResourceProperty("locale", "_mUnknown_Locale")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Locale;
        private bool _mUnknown_Locale;
        public string? Locale
        {
            get
            {
                if (!_mUnknown_Locale) return _mValue_Locale;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.Locale' is not present");
            }
        }

        [PolicyResourceProperty("poolDepth", "_mUnknown_PoolDepth")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_PoolDepth;
        private bool _mUnknown_PoolDepth;
        public int? PoolDepth
        {
            get
            {
                if (!_mUnknown_PoolDepth) return _mValue_PoolDepth;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.PoolDepth' is not present");
            }
        }

        /// <summary>
        /// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
        /// </summary>
        [PolicyResourceProperty("publiclyAdvertisable", "_mUnknown_PubliclyAdvertisable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PubliclyAdvertisable;
        private bool _mUnknown_PubliclyAdvertisable;
        public bool? PubliclyAdvertisable
        {
            get
            {
                if (!_mUnknown_PubliclyAdvertisable) return _mValue_PubliclyAdvertisable;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.PubliclyAdvertisable' is not present");
            }
        }

        /// <summary>
        /// ID of the source IPAM pool.
        /// </summary>
        [PolicyResourceProperty("sourceIpamPoolId", "_mUnknown_SourceIpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceIpamPoolId;
        private bool _mUnknown_SourceIpamPoolId;
        public string? SourceIpamPoolId
        {
            get
            {
                if (!_mUnknown_SourceIpamPoolId) return _mValue_SourceIpamPoolId;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.SourceIpamPoolId' is not present");
            }
        }

        [PolicyResourceProperty("state", "_mUnknown_State")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_State;
        private bool _mUnknown_State;
        public string? State
        {
            get
            {
                if (!_mUnknown_State) return _mValue_State;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.State' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assigned to the resource.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'GetVpcIamPoolsIpamPoolResult.Tags' is not present");
            }
        }
    }
}
