// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Outputs
{
    public sealed class GetRouteTableRouteResult
    {
        /// <summary>
        /// ID of the Carrier Gateway.
        /// </summary>
        [PolicyResourceProperty("carrierGatewayId", "_mUnknown_CarrierGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CarrierGatewayId;
        private bool _mUnknown_CarrierGatewayId;
        public string? CarrierGatewayId
        {
            get
            {
                if (!_mUnknown_CarrierGatewayId) return _mValue_CarrierGatewayId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.CarrierGatewayId' is not present");
            }
        }

        /// <summary>
        /// CIDR block of the route.
        /// </summary>
        [PolicyResourceProperty("cidrBlock", "_mUnknown_CidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrBlock;
        private bool _mUnknown_CidrBlock;
        public string? CidrBlock
        {
            get
            {
                if (!_mUnknown_CidrBlock) return _mValue_CidrBlock;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.CidrBlock' is not present");
            }
        }

        /// <summary>
        /// ARN of the core network.
        /// </summary>
        [PolicyResourceProperty("coreNetworkArn", "_mUnknown_CoreNetworkArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CoreNetworkArn;
        private bool _mUnknown_CoreNetworkArn;
        public string? CoreNetworkArn
        {
            get
            {
                if (!_mUnknown_CoreNetworkArn) return _mValue_CoreNetworkArn;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.CoreNetworkArn' is not present");
            }
        }

        /// <summary>
        /// The ID of a managed prefix list destination of the route.
        /// </summary>
        [PolicyResourceProperty("destinationPrefixListId", "_mUnknown_DestinationPrefixListId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DestinationPrefixListId;
        private bool _mUnknown_DestinationPrefixListId;
        public string? DestinationPrefixListId
        {
            get
            {
                if (!_mUnknown_DestinationPrefixListId) return _mValue_DestinationPrefixListId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.DestinationPrefixListId' is not present");
            }
        }

        /// <summary>
        /// ID of the Egress Only Internet Gateway.
        /// </summary>
        [PolicyResourceProperty("egressOnlyGatewayId", "_mUnknown_EgressOnlyGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EgressOnlyGatewayId;
        private bool _mUnknown_EgressOnlyGatewayId;
        public string? EgressOnlyGatewayId
        {
            get
            {
                if (!_mUnknown_EgressOnlyGatewayId) return _mValue_EgressOnlyGatewayId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.EgressOnlyGatewayId' is not present");
            }
        }

        /// <summary>
        /// ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
        /// </summary>
        [PolicyResourceProperty("gatewayId", "_mUnknown_GatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GatewayId;
        private bool _mUnknown_GatewayId;
        public string? GatewayId
        {
            get
            {
                if (!_mUnknown_GatewayId) return _mValue_GatewayId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.GatewayId' is not present");
            }
        }

        /// <summary>
        /// EC2 instance ID.
        /// </summary>
        [PolicyResourceProperty("instanceId", "_mUnknown_InstanceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceId;
        private bool _mUnknown_InstanceId;
        public string? InstanceId
        {
            get
            {
                if (!_mUnknown_InstanceId) return _mValue_InstanceId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.InstanceId' is not present");
            }
        }

        /// <summary>
        /// IPv6 CIDR block of the route.
        /// </summary>
        [PolicyResourceProperty("ipv6CidrBlock", "_mUnknown_Ipv6CidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv6CidrBlock;
        private bool _mUnknown_Ipv6CidrBlock;
        public string? Ipv6CidrBlock
        {
            get
            {
                if (!_mUnknown_Ipv6CidrBlock) return _mValue_Ipv6CidrBlock;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.Ipv6CidrBlock' is not present");
            }
        }

        /// <summary>
        /// Local Gateway ID.
        /// </summary>
        [PolicyResourceProperty("localGatewayId", "_mUnknown_LocalGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LocalGatewayId;
        private bool _mUnknown_LocalGatewayId;
        public string? LocalGatewayId
        {
            get
            {
                if (!_mUnknown_LocalGatewayId) return _mValue_LocalGatewayId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.LocalGatewayId' is not present");
            }
        }

        /// <summary>
        /// NAT Gateway ID.
        /// </summary>
        [PolicyResourceProperty("natGatewayId", "_mUnknown_NatGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NatGatewayId;
        private bool _mUnknown_NatGatewayId;
        public string? NatGatewayId
        {
            get
            {
                if (!_mUnknown_NatGatewayId) return _mValue_NatGatewayId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.NatGatewayId' is not present");
            }
        }

        /// <summary>
        /// ID of the elastic network interface (eni) to use.
        /// </summary>
        [PolicyResourceProperty("networkInterfaceId", "_mUnknown_NetworkInterfaceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NetworkInterfaceId;
        private bool _mUnknown_NetworkInterfaceId;
        public string? NetworkInterfaceId
        {
            get
            {
                if (!_mUnknown_NetworkInterfaceId) return _mValue_NetworkInterfaceId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.NetworkInterfaceId' is not present");
            }
        }

        /// <summary>
        /// EC2 Transit Gateway ID.
        /// </summary>
        [PolicyResourceProperty("transitGatewayId", "_mUnknown_TransitGatewayId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TransitGatewayId;
        private bool _mUnknown_TransitGatewayId;
        public string? TransitGatewayId
        {
            get
            {
                if (!_mUnknown_TransitGatewayId) return _mValue_TransitGatewayId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.TransitGatewayId' is not present");
            }
        }

        /// <summary>
        /// VPC Endpoint ID.
        /// </summary>
        [PolicyResourceProperty("vpcEndpointId", "_mUnknown_VpcEndpointId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcEndpointId;
        private bool _mUnknown_VpcEndpointId;
        public string? VpcEndpointId
        {
            get
            {
                if (!_mUnknown_VpcEndpointId) return _mValue_VpcEndpointId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.VpcEndpointId' is not present");
            }
        }

        /// <summary>
        /// VPC Peering ID.
        /// </summary>
        [PolicyResourceProperty("vpcPeeringConnectionId", "_mUnknown_VpcPeeringConnectionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcPeeringConnectionId;
        private bool _mUnknown_VpcPeeringConnectionId;
        public string? VpcPeeringConnectionId
        {
            get
            {
                if (!_mUnknown_VpcPeeringConnectionId) return _mValue_VpcPeeringConnectionId;
                throw new UndeferrableValueException("Value 'GetRouteTableRouteResult.VpcPeeringConnectionId' is not present");
            }
        }
    }
}
