// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Outputs
{
    public sealed class LaunchTemplateBlockDeviceMappingEbs
    {
        /// <summary>
        /// Whether the volume should be destroyed on instance termination.
        /// See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/preserving-volumes-on-termination.html) for more information.
        /// </summary>
        [PolicyResourceProperty("deleteOnTermination", "_mUnknown_DeleteOnTermination")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeleteOnTermination;
        private bool _mUnknown_DeleteOnTermination;
        public string? DeleteOnTermination
        {
            get
            {
                if (!_mUnknown_DeleteOnTermination) return _mValue_DeleteOnTermination;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.DeleteOnTermination' is not present");
            }
        }

        /// <summary>
        /// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.
        /// Cannot be used with `snapshot_id`.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public string? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.Encrypted' is not present");
            }
        }

        /// <summary>
        /// The amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
        /// This must be set with a `volume_type` of `"io1/io2/gp3"`.
        /// </summary>
        [PolicyResourceProperty("iops", "_mUnknown_Iops")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Iops;
        private bool _mUnknown_Iops;
        public int? Iops
        {
            get
            {
                if (!_mUnknown_Iops) return _mValue_Iops;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.Iops' is not present");
            }
        }

        /// <summary>
        /// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
        /// `encrypted` must be set to `true` when this is set.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// The Snapshot ID to mount.
        /// </summary>
        [PolicyResourceProperty("snapshotId", "_mUnknown_SnapshotId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SnapshotId;
        private bool _mUnknown_SnapshotId;
        public string? SnapshotId
        {
            get
            {
                if (!_mUnknown_SnapshotId) return _mValue_SnapshotId;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.SnapshotId' is not present");
            }
        }

        /// <summary>
        /// The throughput to provision for a `gp3` volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
        /// </summary>
        [PolicyResourceProperty("throughput", "_mUnknown_Throughput")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Throughput;
        private bool _mUnknown_Throughput;
        public int? Throughput
        {
            get
            {
                if (!_mUnknown_Throughput) return _mValue_Throughput;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.Throughput' is not present");
            }
        }

        /// <summary>
        /// The size of the volume in gigabytes.
        /// </summary>
        [PolicyResourceProperty("volumeSize", "_mUnknown_VolumeSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_VolumeSize;
        private bool _mUnknown_VolumeSize;
        public int? VolumeSize
        {
            get
            {
                if (!_mUnknown_VolumeSize) return _mValue_VolumeSize;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.VolumeSize' is not present");
            }
        }

        /// <summary>
        /// The volume type.
        /// Can be one of `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1`.
        /// </summary>
        [PolicyResourceProperty("volumeType", "_mUnknown_VolumeType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VolumeType;
        private bool _mUnknown_VolumeType;
        public string? VolumeType
        {
            get
            {
                if (!_mUnknown_VolumeType) return _mValue_VolumeType;
                throw new UndeferrableValueException("Value 'LaunchTemplateBlockDeviceMappingEbs.VolumeType' is not present");
            }
        }
    }
}
