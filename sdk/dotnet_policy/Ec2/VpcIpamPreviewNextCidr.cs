// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcIpamPreviewNextCidr:VpcIpamPreviewNextCidr")]
    public sealed class VpcIpamPreviewNextCidr : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The previewed CIDR from the pool.
        /// </summary>
        [PolicyResourceProperty("cidr", "_mUnknown_Cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Cidr;
        private bool _mUnknown_Cidr;
        public string? Cidr
        {
            get
            {
                if (!_mUnknown_Cidr) return _mValue_Cidr;
                throw new UndeferrableValueException("Value 'VpcIpamPreviewNextCidr.Cidr' is not present");
            }
        }

        /// <summary>
        /// Exclude a particular CIDR range from being returned by the pool.
        /// </summary>
        [PolicyResourceProperty("disallowedCidrs", "_mUnknown_DisallowedCidrs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DisallowedCidrs;
        private bool _mUnknown_DisallowedCidrs;
        public List<string>? DisallowedCidrs
        {
            get
            {
                if (!_mUnknown_DisallowedCidrs) return _mValue_DisallowedCidrs;
                throw new UndeferrableValueException("Value 'VpcIpamPreviewNextCidr.DisallowedCidrs' is not present");
            }
        }

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [PolicyResourceProperty("ipamPoolId", "_mUnknown_IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolId;
        private bool _mUnknown_IpamPoolId;
        public string? IpamPoolId
        {
            get
            {
                if (!_mUnknown_IpamPoolId) return _mValue_IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpamPreviewNextCidr.IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// The netmask length of the CIDR you would like to preview from the IPAM pool.
        /// </summary>
        [PolicyResourceProperty("netmaskLength", "_mUnknown_NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NetmaskLength;
        private bool _mUnknown_NetmaskLength;
        public int? NetmaskLength
        {
            get
            {
                if (!_mUnknown_NetmaskLength) return _mValue_NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpamPreviewNextCidr.NetmaskLength' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/vpcIpamPreviewNextCidr:VpcIpamPreviewNextCidr")]
    public sealed class VpcIpamPreviewNextCidrArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Exclude a particular CIDR range from being returned by the pool.
        /// </summary>
        [PolicyResourceProperty("disallowedCidrs", "_mUnknown_DisallowedCidrs")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DisallowedCidrs;
        private bool _mUnknown_DisallowedCidrs;
        public List<string>? DisallowedCidrs
        {
            get
            {
                if (!_mUnknown_DisallowedCidrs) return _mValue_DisallowedCidrs;
                throw new UndeferrableValueException("Value 'VpcIpamPreviewNextCidrArgs.DisallowedCidrs' is not present");
            }
        }

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [PolicyResourceProperty("ipamPoolId", "_mUnknown_IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolId;
        private bool _mUnknown_IpamPoolId;
        public string? IpamPoolId
        {
            get
            {
                if (!_mUnknown_IpamPoolId) return _mValue_IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpamPreviewNextCidrArgs.IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// The netmask length of the CIDR you would like to preview from the IPAM pool.
        /// </summary>
        [PolicyResourceProperty("netmaskLength", "_mUnknown_NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NetmaskLength;
        private bool _mUnknown_NetmaskLength;
        public int? NetmaskLength
        {
            get
            {
                if (!_mUnknown_NetmaskLength) return _mValue_NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpamPreviewNextCidrArgs.NetmaskLength' is not present");
            }
        }
    }
}
