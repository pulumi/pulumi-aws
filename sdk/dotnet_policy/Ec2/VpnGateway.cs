// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpnGateway:VpnGateway")]
    public sealed class VpnGateway : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Autonomous System Number (ASN) for the Amazon side of the gateway. If you don't specify an ASN, the virtual private gateway is created with the default ASN.
        /// </summary>
        [PolicyResourceProperty("amazonSideAsn", "_mUnknown_AmazonSideAsn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmazonSideAsn;
        private bool _mUnknown_AmazonSideAsn;
        public string? AmazonSideAsn
        {
            get
            {
                if (!_mUnknown_AmazonSideAsn) return _mValue_AmazonSideAsn;
                throw new UndeferrableValueException("Value 'VpnGateway.AmazonSideAsn' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the VPN Gateway.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'VpnGateway.Arn' is not present");
            }
        }

        /// <summary>
        /// The Availability Zone for the virtual private gateway.
        /// </summary>
        [PolicyResourceProperty("availabilityZone", "_mUnknown_AvailabilityZone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZone;
        private bool _mUnknown_AvailabilityZone;
        public string? AvailabilityZone
        {
            get
            {
                if (!_mUnknown_AvailabilityZone) return _mValue_AvailabilityZone;
                throw new UndeferrableValueException("Value 'VpnGateway.AvailabilityZone' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'VpnGateway.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'VpnGateway.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The VPC ID to create in.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'VpnGateway.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/vpnGateway:VpnGateway")]
    public sealed class VpnGatewayArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The Autonomous System Number (ASN) for the Amazon side of the gateway. If you don't specify an ASN, the virtual private gateway is created with the default ASN.
        /// </summary>
        [PolicyResourceProperty("amazonSideAsn", "_mUnknown_AmazonSideAsn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AmazonSideAsn;
        private bool _mUnknown_AmazonSideAsn;
        public string? AmazonSideAsn
        {
            get
            {
                if (!_mUnknown_AmazonSideAsn) return _mValue_AmazonSideAsn;
                throw new UndeferrableValueException("Value 'VpnGatewayArgs.AmazonSideAsn' is not present");
            }
        }

        /// <summary>
        /// The Availability Zone for the virtual private gateway.
        /// </summary>
        [PolicyResourceProperty("availabilityZone", "_mUnknown_AvailabilityZone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZone;
        private bool _mUnknown_AvailabilityZone;
        public string? AvailabilityZone
        {
            get
            {
                if (!_mUnknown_AvailabilityZone) return _mValue_AvailabilityZone;
                throw new UndeferrableValueException("Value 'VpnGatewayArgs.AvailabilityZone' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'VpnGatewayArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The VPC ID to create in.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'VpnGatewayArgs.VpcId' is not present");
            }
        }
    }
}
