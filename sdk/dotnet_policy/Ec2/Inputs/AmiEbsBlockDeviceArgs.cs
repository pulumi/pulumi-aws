// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Inputs
{
    public sealed class AmiEbsBlockDeviceArgs
    {
        /// <summary>
        /// Boolean controlling whether the EBS volumes created to
        /// support each created instance will be deleted once that instance is terminated.
        /// </summary>
        [PolicyResourceProperty("deleteOnTermination", "_mUnknown_DeleteOnTermination")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_DeleteOnTermination;
        private bool _mUnknown_DeleteOnTermination;
        public bool? DeleteOnTermination
        {
            get
            {
                if (!_mUnknown_DeleteOnTermination) return _mValue_DeleteOnTermination;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.DeleteOnTermination' is not present");
            }
        }

        /// <summary>
        /// Path at which the device is exposed to created instances.
        /// </summary>
        [PolicyResourceProperty("deviceName", "_mUnknown_DeviceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeviceName;
        private bool _mUnknown_DeviceName;
        public string? DeviceName
        {
            get
            {
                if (!_mUnknown_DeviceName) return _mValue_DeviceName;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.DeviceName' is not present");
            }
        }

        /// <summary>
        /// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public bool? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.Encrypted' is not present");
            }
        }

        /// <summary>
        /// Number of I/O operations per second the
        /// created volumes will support.
        /// </summary>
        [PolicyResourceProperty("iops", "_mUnknown_Iops")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Iops;
        private bool _mUnknown_Iops;
        public int? Iops
        {
            get
            {
                if (!_mUnknown_Iops) return _mValue_Iops;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.Iops' is not present");
            }
        }

        /// <summary>
        /// ARN of the Outpost on which the snapshot is stored.
        /// 
        /// &gt; **Note:** You can specify `encrypted` or `snapshot_id` but not both.
        /// </summary>
        [PolicyResourceProperty("outpostArn", "_mUnknown_OutpostArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutpostArn;
        private bool _mUnknown_OutpostArn;
        public string? OutpostArn
        {
            get
            {
                if (!_mUnknown_OutpostArn) return _mValue_OutpostArn;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.OutpostArn' is not present");
            }
        }

        /// <summary>
        /// ID of an EBS snapshot that will be used to initialize the created
        /// EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
        /// snapshot.
        /// </summary>
        [PolicyResourceProperty("snapshotId", "_mUnknown_SnapshotId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SnapshotId;
        private bool _mUnknown_SnapshotId;
        public string? SnapshotId
        {
            get
            {
                if (!_mUnknown_SnapshotId) return _mValue_SnapshotId;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.SnapshotId' is not present");
            }
        }

        /// <summary>
        /// Throughput that the EBS volume supports, in MiB/s. Only valid for `volume_type` of `gp3`.
        /// </summary>
        [PolicyResourceProperty("throughput", "_mUnknown_Throughput")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Throughput;
        private bool _mUnknown_Throughput;
        public int? Throughput
        {
            get
            {
                if (!_mUnknown_Throughput) return _mValue_Throughput;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.Throughput' is not present");
            }
        }

        /// <summary>
        /// Size of created volumes in GiB.
        /// If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
        /// as the selected snapshot.
        /// </summary>
        [PolicyResourceProperty("volumeSize", "_mUnknown_VolumeSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_VolumeSize;
        private bool _mUnknown_VolumeSize;
        public int? VolumeSize
        {
            get
            {
                if (!_mUnknown_VolumeSize) return _mValue_VolumeSize;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.VolumeSize' is not present");
            }
        }

        /// <summary>
        /// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
        /// </summary>
        [PolicyResourceProperty("volumeType", "_mUnknown_VolumeType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VolumeType;
        private bool _mUnknown_VolumeType;
        public string? VolumeType
        {
            get
            {
                if (!_mUnknown_VolumeType) return _mValue_VolumeType;
                throw new UndeferrableValueException("Value 'AmiEbsBlockDeviceArgs.VolumeType' is not present");
            }
        }
    }
}
