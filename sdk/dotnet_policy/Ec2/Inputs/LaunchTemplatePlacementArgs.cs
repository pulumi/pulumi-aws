// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Inputs
{
    public sealed class LaunchTemplatePlacementArgs
    {
        /// <summary>
        /// The affinity setting for an instance on a Dedicated Host.
        /// </summary>
        [PolicyResourceProperty("affinity", "_mUnknown_Affinity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Affinity;
        private bool _mUnknown_Affinity;
        public string? Affinity
        {
            get
            {
                if (!_mUnknown_Affinity) return _mValue_Affinity;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.Affinity' is not present");
            }
        }

        /// <summary>
        /// The Availability Zone for the instance.
        /// </summary>
        [PolicyResourceProperty("availabilityZone", "_mUnknown_AvailabilityZone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZone;
        private bool _mUnknown_AvailabilityZone;
        public string? AvailabilityZone
        {
            get
            {
                if (!_mUnknown_AvailabilityZone) return _mValue_AvailabilityZone;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.AvailabilityZone' is not present");
            }
        }

        /// <summary>
        /// The name of the placement group for the instance.
        /// </summary>
        [PolicyResourceProperty("groupName", "_mUnknown_GroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GroupName;
        private bool _mUnknown_GroupName;
        public string? GroupName
        {
            get
            {
                if (!_mUnknown_GroupName) return _mValue_GroupName;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.GroupName' is not present");
            }
        }

        /// <summary>
        /// The ID of the Dedicated Host for the instance.
        /// </summary>
        [PolicyResourceProperty("hostId", "_mUnknown_HostId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostId;
        private bool _mUnknown_HostId;
        public string? HostId
        {
            get
            {
                if (!_mUnknown_HostId) return _mValue_HostId;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.HostId' is not present");
            }
        }

        /// <summary>
        /// The ARN of the Host Resource Group in which to launch instances.
        /// </summary>
        [PolicyResourceProperty("hostResourceGroupArn", "_mUnknown_HostResourceGroupArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostResourceGroupArn;
        private bool _mUnknown_HostResourceGroupArn;
        public string? HostResourceGroupArn
        {
            get
            {
                if (!_mUnknown_HostResourceGroupArn) return _mValue_HostResourceGroupArn;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.HostResourceGroupArn' is not present");
            }
        }

        /// <summary>
        /// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
        /// </summary>
        [PolicyResourceProperty("partitionNumber", "_mUnknown_PartitionNumber")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_PartitionNumber;
        private bool _mUnknown_PartitionNumber;
        public int? PartitionNumber
        {
            get
            {
                if (!_mUnknown_PartitionNumber) return _mValue_PartitionNumber;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.PartitionNumber' is not present");
            }
        }

        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [PolicyResourceProperty("spreadDomain", "_mUnknown_SpreadDomain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SpreadDomain;
        private bool _mUnknown_SpreadDomain;
        public string? SpreadDomain
        {
            get
            {
                if (!_mUnknown_SpreadDomain) return _mValue_SpreadDomain;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.SpreadDomain' is not present");
            }
        }

        /// <summary>
        /// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
        /// </summary>
        [PolicyResourceProperty("tenancy", "_mUnknown_Tenancy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Tenancy;
        private bool _mUnknown_Tenancy;
        public string? Tenancy
        {
            get
            {
                if (!_mUnknown_Tenancy) return _mValue_Tenancy;
                throw new UndeferrableValueException("Value 'LaunchTemplatePlacementArgs.Tenancy' is not present");
            }
        }
    }
}
