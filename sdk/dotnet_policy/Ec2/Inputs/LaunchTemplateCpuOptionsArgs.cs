// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Inputs
{
    public sealed class LaunchTemplateCpuOptionsArgs
    {
        /// <summary>
        /// Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are `enabled` and `disabled`.
        /// </summary>
        [Input("amdSevSnp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mAmdSevSnp;

        public string? AmdSevSnp => _mAmdSevSnp.GetValue("amdSevSnp");

        /// <summary>
        /// The number of CPU cores for the instance.
        /// </summary>
        [Input("coreCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mCoreCount;

        public int? CoreCount => _mCoreCount.GetValue("coreCount");

        /// <summary>
        /// The number of threads per CPU core.
        /// To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
        /// Otherwise, specify the default value of 2.
        /// 
        /// Both number of CPU cores and threads per core must be specified. Valid number of CPU cores and threads per core for the instance type can be found in the [CPU Options Documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html?shortFooter=true#cpu-options-supported-instances-values)
        /// </summary>
        [Input("threadsPerCore")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mThreadsPerCore;

        public int? ThreadsPerCore => _mThreadsPerCore.GetValue("threadsPerCore");
    }
}
