// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Inputs
{
    public sealed class LaunchTemplatePrivateDnsNameOptionsArgs
    {
        /// <summary>
        /// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
        /// </summary>
        [Input("enableResourceNameDnsARecord")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mEnableResourceNameDnsARecord;

        public bool? EnableResourceNameDnsARecord => _mEnableResourceNameDnsARecord.GetValue("enableResourceNameDnsARecord");

        /// <summary>
        /// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
        /// </summary>
        [Input("enableResourceNameDnsAaaaRecord")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mEnableResourceNameDnsAaaaRecord;

        public bool? EnableResourceNameDnsAaaaRecord => _mEnableResourceNameDnsAaaaRecord.GetValue("enableResourceNameDnsAaaaRecord");

        /// <summary>
        /// The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name` and `resource-name`.
        /// </summary>
        [Input("hostnameType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mHostnameType;

        public string? HostnameType => _mHostnameType.GetValue("hostnameType");
    }
}
