// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2.Inputs
{
    public sealed class SpotInstanceRequestMetadataOptionsArgs
    {
        /// <summary>
        /// Whether the metadata service is available. Valid values include `enabled` or `disabled`. Defaults to `enabled`.
        /// </summary>
        [PolicyResourceProperty("httpEndpoint", "_mUnknown_HttpEndpoint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HttpEndpoint;
        private bool _mUnknown_HttpEndpoint;
        public string? HttpEndpoint
        {
            get
            {
                if (!_mUnknown_HttpEndpoint) return _mValue_HttpEndpoint;
                throw new UndeferrableValueException("Value 'SpotInstanceRequestMetadataOptionsArgs.HttpEndpoint' is not present");
            }
        }

        /// <summary>
        /// Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to `disabled`.
        /// </summary>
        [PolicyResourceProperty("httpProtocolIpv6", "_mUnknown_HttpProtocolIpv6")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HttpProtocolIpv6;
        private bool _mUnknown_HttpProtocolIpv6;
        public string? HttpProtocolIpv6
        {
            get
            {
                if (!_mUnknown_HttpProtocolIpv6) return _mValue_HttpProtocolIpv6;
                throw new UndeferrableValueException("Value 'SpotInstanceRequestMetadataOptionsArgs.HttpProtocolIpv6' is not present");
            }
        }

        /// <summary>
        /// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from `1` to `64`. Defaults to `1`.
        /// </summary>
        [PolicyResourceProperty("httpPutResponseHopLimit", "_mUnknown_HttpPutResponseHopLimit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_HttpPutResponseHopLimit;
        private bool _mUnknown_HttpPutResponseHopLimit;
        public int? HttpPutResponseHopLimit
        {
            get
            {
                if (!_mUnknown_HttpPutResponseHopLimit) return _mValue_HttpPutResponseHopLimit;
                throw new UndeferrableValueException("Value 'SpotInstanceRequestMetadataOptionsArgs.HttpPutResponseHopLimit' is not present");
            }
        }

        /// <summary>
        /// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Valid values include `optional` or `required`.
        /// </summary>
        [PolicyResourceProperty("httpTokens", "_mUnknown_HttpTokens")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HttpTokens;
        private bool _mUnknown_HttpTokens;
        public string? HttpTokens
        {
            get
            {
                if (!_mUnknown_HttpTokens) return _mValue_HttpTokens;
                throw new UndeferrableValueException("Value 'SpotInstanceRequestMetadataOptionsArgs.HttpTokens' is not present");
            }
        }

        /// <summary>
        /// Enables or disables access to instance tags from the instance metadata service. Valid values include `enabled` or `disabled`. Defaults to `disabled`.
        /// 
        /// For more information, see the documentation on the [Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
        /// </summary>
        [PolicyResourceProperty("instanceMetadataTags", "_mUnknown_InstanceMetadataTags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceMetadataTags;
        private bool _mUnknown_InstanceMetadataTags;
        public string? InstanceMetadataTags
        {
            get
            {
                if (!_mUnknown_InstanceMetadataTags) return _mValue_InstanceMetadataTags;
                throw new UndeferrableValueException("Value 'SpotInstanceRequestMetadataOptionsArgs.InstanceMetadataTags' is not present");
            }
        }
    }
}
