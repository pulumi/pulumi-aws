// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/launchConfiguration:LaunchConfiguration")]
    public sealed class LaunchConfiguration : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name of the launch configuration.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Associate a public ip address with an instance in a VPC.
        /// </summary>
        [Input("associatePublicIpAddress")]
        public bool? AssociatePublicIpAddress;

        /// <summary>
        /// Additional EBS block devices to attach to the instance. See Block Devices below for details.
        /// </summary>
        [Input("ebsBlockDevices")]
        public List<LaunchConfigurationEbsBlockDevice>? EbsBlockDevices;

        /// <summary>
        /// If true, the launched EC2 instance will be EBS-optimized.
        /// </summary>
        [Input("ebsOptimized")]
        public bool? EbsOptimized;

        /// <summary>
        /// Enables/disables detailed monitoring. This is enabled by default.
        /// </summary>
        [Input("enableMonitoring")]
        public bool? EnableMonitoring;

        /// <summary>
        /// Customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details.
        /// </summary>
        [Input("ephemeralBlockDevices")]
        public List<LaunchConfigurationEphemeralBlockDevice>? EphemeralBlockDevices;

        /// <summary>
        /// The name attribute of the IAM instance profile to associate with launched instances.
        /// </summary>
        [Input("iamInstanceProfile")]
        public string? IamInstanceProfile;

        /// <summary>
        /// The EC2 image ID to launch.
        /// </summary>
        [Input("imageId")]
        public string? ImageId;

        /// <summary>
        /// The size of instance to launch.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType;

        /// <summary>
        /// The key name that should be used for the instance.
        /// </summary>
        [Input("keyName")]
        public string? KeyName;

        /// <summary>
        /// The metadata options for the instance.
        /// </summary>
        [Input("metadataOptions")]
        public LaunchConfigurationMetadataOptions? MetadataOptions;

        /// <summary>
        /// The name of the launch configuration. If you leave this blank, this provider will auto-generate a unique name. Conflicts with `name_prefix`.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
        /// </summary>
        [Input("namePrefix")]
        public string? NamePrefix;

        /// <summary>
        /// The tenancy of the instance. Valid values are `default` or `dedicated`, see [AWS's Create Launch Configuration](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_CreateLaunchConfiguration.html) for more details.
        /// </summary>
        [Input("placementTenancy")]
        public string? PlacementTenancy;

        /// <summary>
        /// Customize details about the root block device of the instance. See Block Devices below for details.
        /// </summary>
        [Input("rootBlockDevice")]
        public LaunchConfigurationRootBlockDevice? RootBlockDevice;

        /// <summary>
        /// A list of associated security group IDS.
        /// </summary>
        [Input("securityGroups")]
        public List<string>? SecurityGroups;

        /// <summary>
        /// The maximum price to use for reserving spot instances.
        /// </summary>
        [Input("spotPrice")]
        public string? SpotPrice;

        /// <summary>
        /// The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.
        /// </summary>
        [Input("userData")]
        public string? UserData;

        /// <summary>
        /// Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.
        /// </summary>
        [Input("userDataBase64")]
        public string? UserDataBase64;
    }
}
