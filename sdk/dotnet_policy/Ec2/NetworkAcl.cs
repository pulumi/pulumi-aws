// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/networkAcl:NetworkAcl")]
    public sealed class NetworkAcl : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the network ACL
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'NetworkAcl.Arn' is not present");
            }
        }

        /// <summary>
        /// Specifies an egress rule. Parameters defined below.
        /// </summary>
        [PolicyResourceProperty("egress", "_mUnknown_Egress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.NetworkAclEgress>? _mValue_Egress;
        private bool _mUnknown_Egress;
        public List<Outputs.NetworkAclEgress>? Egress
        {
            get
            {
                if (!_mUnknown_Egress) return _mValue_Egress;
                throw new UndeferrableValueException("Value 'NetworkAcl.Egress' is not present");
            }
        }

        /// <summary>
        /// Specifies an ingress rule. Parameters defined below.
        /// </summary>
        [PolicyResourceProperty("ingress", "_mUnknown_Ingress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.NetworkAclIngress>? _mValue_Ingress;
        private bool _mUnknown_Ingress;
        public List<Outputs.NetworkAclIngress>? Ingress
        {
            get
            {
                if (!_mUnknown_Ingress) return _mValue_Ingress;
                throw new UndeferrableValueException("Value 'NetworkAcl.Ingress' is not present");
            }
        }

        /// <summary>
        /// The ID of the AWS account that owns the network ACL.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'NetworkAcl.OwnerId' is not present");
            }
        }

        /// <summary>
        /// A list of Subnet IDs to apply the ACL to
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'NetworkAcl.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'NetworkAcl.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'NetworkAcl.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The ID of the associated VPC.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'NetworkAcl.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/networkAcl:NetworkAcl")]
    public sealed class NetworkAclArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies an egress rule. Parameters defined below.
        /// </summary>
        [PolicyResourceProperty("egress", "_mUnknown_Egress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.NetworkAclEgressArgs>? _mValue_Egress;
        private bool _mUnknown_Egress;
        public List<Inputs.NetworkAclEgressArgs>? Egress
        {
            get
            {
                if (!_mUnknown_Egress) return _mValue_Egress;
                throw new UndeferrableValueException("Value 'NetworkAclArgs.Egress' is not present");
            }
        }

        /// <summary>
        /// Specifies an ingress rule. Parameters defined below.
        /// </summary>
        [PolicyResourceProperty("ingress", "_mUnknown_Ingress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.NetworkAclIngressArgs>? _mValue_Ingress;
        private bool _mUnknown_Ingress;
        public List<Inputs.NetworkAclIngressArgs>? Ingress
        {
            get
            {
                if (!_mUnknown_Ingress) return _mValue_Ingress;
                throw new UndeferrableValueException("Value 'NetworkAclArgs.Ingress' is not present");
            }
        }

        /// <summary>
        /// A list of Subnet IDs to apply the ACL to
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'NetworkAclArgs.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'NetworkAclArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The ID of the associated VPC.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'NetworkAclArgs.VpcId' is not present");
            }
        }
    }
}
