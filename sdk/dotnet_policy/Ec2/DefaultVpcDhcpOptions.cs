// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/defaultVpcDhcpOptions:DefaultVpcDhcpOptions")]
    public sealed class DefaultVpcDhcpOptions : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the DHCP Options Set.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.Arn' is not present");
            }
        }

        [PolicyResourceProperty("domainName", "_mUnknown_DomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainName;
        private bool _mUnknown_DomainName;
        public string? DomainName
        {
            get
            {
                if (!_mUnknown_DomainName) return _mValue_DomainName;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.DomainName' is not present");
            }
        }

        [PolicyResourceProperty("domainNameServers", "_mUnknown_DomainNameServers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainNameServers;
        private bool _mUnknown_DomainNameServers;
        public string? DomainNameServers
        {
            get
            {
                if (!_mUnknown_DomainNameServers) return _mValue_DomainNameServers;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.DomainNameServers' is not present");
            }
        }

        [PolicyResourceProperty("ipv6AddressPreferredLeaseTime", "_mUnknown_Ipv6AddressPreferredLeaseTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv6AddressPreferredLeaseTime;
        private bool _mUnknown_Ipv6AddressPreferredLeaseTime;
        public string? Ipv6AddressPreferredLeaseTime
        {
            get
            {
                if (!_mUnknown_Ipv6AddressPreferredLeaseTime) return _mValue_Ipv6AddressPreferredLeaseTime;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.Ipv6AddressPreferredLeaseTime' is not present");
            }
        }

        /// <summary>
        /// List of NETBIOS name servers.
        /// </summary>
        [PolicyResourceProperty("netbiosNameServers", "_mUnknown_NetbiosNameServers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NetbiosNameServers;
        private bool _mUnknown_NetbiosNameServers;
        public string? NetbiosNameServers
        {
            get
            {
                if (!_mUnknown_NetbiosNameServers) return _mValue_NetbiosNameServers;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.NetbiosNameServers' is not present");
            }
        }

        /// <summary>
        /// The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see [RFC 2132](http://www.ietf.org/rfc/rfc2132.txt).
        /// </summary>
        [PolicyResourceProperty("netbiosNodeType", "_mUnknown_NetbiosNodeType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NetbiosNodeType;
        private bool _mUnknown_NetbiosNodeType;
        public string? NetbiosNodeType
        {
            get
            {
                if (!_mUnknown_NetbiosNodeType) return _mValue_NetbiosNodeType;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.NetbiosNodeType' is not present");
            }
        }

        [PolicyResourceProperty("ntpServers", "_mUnknown_NtpServers")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NtpServers;
        private bool _mUnknown_NtpServers;
        public string? NtpServers
        {
            get
            {
                if (!_mUnknown_NtpServers) return _mValue_NtpServers;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.NtpServers' is not present");
            }
        }

        /// <summary>
        /// The ID of the AWS account that owns the DHCP options set.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.OwnerId' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptions.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/defaultVpcDhcpOptions:DefaultVpcDhcpOptions")]
    public sealed class DefaultVpcDhcpOptionsArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The ID of the AWS account that owns the DHCP options set.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptionsArgs.OwnerId' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DefaultVpcDhcpOptionsArgs.Tags' is not present");
            }
        }
    }
}
