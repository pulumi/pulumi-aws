// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcIpv4CidrBlockAssociation:VpcIpv4CidrBlockAssociation")]
    public sealed class VpcIpv4CidrBlockAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length`.
        /// </summary>
        [PolicyResourceProperty("cidrBlock", "_mUnknown_CidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrBlock;
        private bool _mUnknown_CidrBlock;
        public string? CidrBlock
        {
            get
            {
                if (!_mUnknown_CidrBlock) return _mValue_CidrBlock;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociation.CidrBlock' is not present");
            }
        }

        /// <summary>
        /// The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.
        /// </summary>
        [PolicyResourceProperty("ipv4IpamPoolId", "_mUnknown_Ipv4IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv4IpamPoolId;
        private bool _mUnknown_Ipv4IpamPoolId;
        public string? Ipv4IpamPoolId
        {
            get
            {
                if (!_mUnknown_Ipv4IpamPoolId) return _mValue_Ipv4IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociation.Ipv4IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a `ipv4_ipam_pool_id`.
        /// </summary>
        [PolicyResourceProperty("ipv4NetmaskLength", "_mUnknown_Ipv4NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Ipv4NetmaskLength;
        private bool _mUnknown_Ipv4NetmaskLength;
        public int? Ipv4NetmaskLength
        {
            get
            {
                if (!_mUnknown_Ipv4NetmaskLength) return _mValue_Ipv4NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociation.Ipv4NetmaskLength' is not present");
            }
        }

        /// <summary>
        /// The ID of the VPC to make the association with.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociation.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/vpcIpv4CidrBlockAssociation:VpcIpv4CidrBlockAssociation")]
    public sealed class VpcIpv4CidrBlockAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length`.
        /// </summary>
        [PolicyResourceProperty("cidrBlock", "_mUnknown_CidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrBlock;
        private bool _mUnknown_CidrBlock;
        public string? CidrBlock
        {
            get
            {
                if (!_mUnknown_CidrBlock) return _mValue_CidrBlock;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociationArgs.CidrBlock' is not present");
            }
        }

        /// <summary>
        /// The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.
        /// </summary>
        [PolicyResourceProperty("ipv4IpamPoolId", "_mUnknown_Ipv4IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv4IpamPoolId;
        private bool _mUnknown_Ipv4IpamPoolId;
        public string? Ipv4IpamPoolId
        {
            get
            {
                if (!_mUnknown_Ipv4IpamPoolId) return _mValue_Ipv4IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociationArgs.Ipv4IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a `ipv4_ipam_pool_id`.
        /// </summary>
        [PolicyResourceProperty("ipv4NetmaskLength", "_mUnknown_Ipv4NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Ipv4NetmaskLength;
        private bool _mUnknown_Ipv4NetmaskLength;
        public int? Ipv4NetmaskLength
        {
            get
            {
                if (!_mUnknown_Ipv4NetmaskLength) return _mValue_Ipv4NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociationArgs.Ipv4NetmaskLength' is not present");
            }
        }

        /// <summary>
        /// The ID of the VPC to make the association with.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'VpcIpv4CidrBlockAssociationArgs.VpcId' is not present");
            }
        }
    }
}
