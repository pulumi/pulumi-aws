// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/amiLaunchPermission:AmiLaunchPermission")]
    public sealed class AmiLaunchPermission : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// AWS account ID for the launch permission.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'AmiLaunchPermission.AccountId' is not present");
            }
        }

        /// <summary>
        /// Name of the group for the launch permission. Valid values: `"all"`.
        /// </summary>
        [PolicyResourceProperty("group", "_mUnknown_Group")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Group;
        private bool _mUnknown_Group;
        public string? Group
        {
            get
            {
                if (!_mUnknown_Group) return _mValue_Group;
                throw new UndeferrableValueException("Value 'AmiLaunchPermission.Group' is not present");
            }
        }

        /// <summary>
        /// ID of the AMI.
        /// </summary>
        [PolicyResourceProperty("imageId", "_mUnknown_ImageId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageId;
        private bool _mUnknown_ImageId;
        public string? ImageId
        {
            get
            {
                if (!_mUnknown_ImageId) return _mValue_ImageId;
                throw new UndeferrableValueException("Value 'AmiLaunchPermission.ImageId' is not present");
            }
        }

        /// <summary>
        /// ARN of an organization for the launch permission.
        /// </summary>
        [PolicyResourceProperty("organizationArn", "_mUnknown_OrganizationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OrganizationArn;
        private bool _mUnknown_OrganizationArn;
        public string? OrganizationArn
        {
            get
            {
                if (!_mUnknown_OrganizationArn) return _mValue_OrganizationArn;
                throw new UndeferrableValueException("Value 'AmiLaunchPermission.OrganizationArn' is not present");
            }
        }

        /// <summary>
        /// ARN of an organizational unit for the launch permission.
        /// </summary>
        [PolicyResourceProperty("organizationalUnitArn", "_mUnknown_OrganizationalUnitArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OrganizationalUnitArn;
        private bool _mUnknown_OrganizationalUnitArn;
        public string? OrganizationalUnitArn
        {
            get
            {
                if (!_mUnknown_OrganizationalUnitArn) return _mValue_OrganizationalUnitArn;
                throw new UndeferrableValueException("Value 'AmiLaunchPermission.OrganizationalUnitArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/amiLaunchPermission:AmiLaunchPermission")]
    public sealed class AmiLaunchPermissionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// AWS account ID for the launch permission.
        /// </summary>
        [PolicyResourceProperty("accountId", "_mUnknown_AccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccountId;
        private bool _mUnknown_AccountId;
        public string? AccountId
        {
            get
            {
                if (!_mUnknown_AccountId) return _mValue_AccountId;
                throw new UndeferrableValueException("Value 'AmiLaunchPermissionArgs.AccountId' is not present");
            }
        }

        /// <summary>
        /// Name of the group for the launch permission. Valid values: `"all"`.
        /// </summary>
        [PolicyResourceProperty("group", "_mUnknown_Group")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Group;
        private bool _mUnknown_Group;
        public string? Group
        {
            get
            {
                if (!_mUnknown_Group) return _mValue_Group;
                throw new UndeferrableValueException("Value 'AmiLaunchPermissionArgs.Group' is not present");
            }
        }

        /// <summary>
        /// ID of the AMI.
        /// </summary>
        [PolicyResourceProperty("imageId", "_mUnknown_ImageId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageId;
        private bool _mUnknown_ImageId;
        public string? ImageId
        {
            get
            {
                if (!_mUnknown_ImageId) return _mValue_ImageId;
                throw new UndeferrableValueException("Value 'AmiLaunchPermissionArgs.ImageId' is not present");
            }
        }

        /// <summary>
        /// ARN of an organization for the launch permission.
        /// </summary>
        [PolicyResourceProperty("organizationArn", "_mUnknown_OrganizationArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OrganizationArn;
        private bool _mUnknown_OrganizationArn;
        public string? OrganizationArn
        {
            get
            {
                if (!_mUnknown_OrganizationArn) return _mValue_OrganizationArn;
                throw new UndeferrableValueException("Value 'AmiLaunchPermissionArgs.OrganizationArn' is not present");
            }
        }

        /// <summary>
        /// ARN of an organizational unit for the launch permission.
        /// </summary>
        [PolicyResourceProperty("organizationalUnitArn", "_mUnknown_OrganizationalUnitArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OrganizationalUnitArn;
        private bool _mUnknown_OrganizationalUnitArn;
        public string? OrganizationalUnitArn
        {
            get
            {
                if (!_mUnknown_OrganizationalUnitArn) return _mValue_OrganizationalUnitArn;
                throw new UndeferrableValueException("Value 'AmiLaunchPermissionArgs.OrganizationalUnitArn' is not present");
            }
        }
    }
}
