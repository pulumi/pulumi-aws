// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcIpamResourceDiscovery:VpcIpamResourceDiscovery")]
    public sealed class VpcIpamResourceDiscovery : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of IPAM Resource Discovery
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.Arn' is not present");
            }
        }

        /// <summary>
        /// A description for the IPAM Resource Discovery.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.Description' is not present");
            }
        }

        /// <summary>
        /// The home region of the Resource Discovery
        /// </summary>
        [PolicyResourceProperty("ipamResourceDiscoveryRegion", "_mUnknown_IpamResourceDiscoveryRegion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamResourceDiscoveryRegion;
        private bool _mUnknown_IpamResourceDiscoveryRegion;
        public string? IpamResourceDiscoveryRegion
        {
            get
            {
                if (!_mUnknown_IpamResourceDiscoveryRegion) return _mValue_IpamResourceDiscoveryRegion;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.IpamResourceDiscoveryRegion' is not present");
            }
        }

        /// <summary>
        /// A boolean to identify if the Resource Discovery is the accounts default resource discovery
        /// </summary>
        [PolicyResourceProperty("isDefault", "_mUnknown_IsDefault")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_IsDefault;
        private bool _mUnknown_IsDefault;
        public bool? IsDefault
        {
            get
            {
                if (!_mUnknown_IsDefault) return _mValue_IsDefault;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.IsDefault' is not present");
            }
        }

        /// <summary>
        /// Determines which regions the Resource Discovery will enable IPAM features for usage and monitoring. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM Resource Discovery. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. **You must set your provider block region as an operating_region.**
        /// </summary>
        [PolicyResourceProperty("operatingRegions", "_mUnknown_OperatingRegions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.VpcIpamResourceDiscoveryOperatingRegion>? _mValue_OperatingRegions;
        private bool _mUnknown_OperatingRegions;
        public List<Outputs.VpcIpamResourceDiscoveryOperatingRegion>? OperatingRegions
        {
            get
            {
                if (!_mUnknown_OperatingRegions) return _mValue_OperatingRegions;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.OperatingRegions' is not present");
            }
        }

        /// <summary>
        /// The account ID for the account that manages the Resource Discovery
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.OwnerId' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscovery.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/vpcIpamResourceDiscovery:VpcIpamResourceDiscovery")]
    public sealed class VpcIpamResourceDiscoveryArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A description for the IPAM Resource Discovery.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscoveryArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Determines which regions the Resource Discovery will enable IPAM features for usage and monitoring. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM Resource Discovery. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. **You must set your provider block region as an operating_region.**
        /// </summary>
        [PolicyResourceProperty("operatingRegions", "_mUnknown_OperatingRegions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.VpcIpamResourceDiscoveryOperatingRegionArgs>? _mValue_OperatingRegions;
        private bool _mUnknown_OperatingRegions;
        public List<Inputs.VpcIpamResourceDiscoveryOperatingRegionArgs>? OperatingRegions
        {
            get
            {
                if (!_mUnknown_OperatingRegions) return _mValue_OperatingRegions;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscoveryArgs.OperatingRegions' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'VpcIpamResourceDiscoveryArgs.Tags' is not present");
            }
        }
    }
}
