// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/ami:Ami")]
    public sealed class Ami : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Machine architecture for created instances. Defaults to `x86_64`.
        /// </summary>
        [PolicyResourceProperty("architecture", "_mUnknown_Architecture")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Architecture;
        private bool _mUnknown_Architecture;
        public string? Architecture
        {
            get
            {
                if (!_mUnknown_Architecture) return _mValue_Architecture;
                throw new UndeferrableValueException("Value 'Ami.Architecture' is not present");
            }
        }

        /// <summary>
        /// ARN of the AMI.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Ami.Arn' is not present");
            }
        }

        /// <summary>
        /// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
        /// </summary>
        [PolicyResourceProperty("bootMode", "_mUnknown_BootMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BootMode;
        private bool _mUnknown_BootMode;
        public string? BootMode
        {
            get
            {
                if (!_mUnknown_BootMode) return _mValue_BootMode;
                throw new UndeferrableValueException("Value 'Ami.BootMode' is not present");
            }
        }

        /// <summary>
        /// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
        /// </summary>
        [PolicyResourceProperty("deprecationTime", "_mUnknown_DeprecationTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeprecationTime;
        private bool _mUnknown_DeprecationTime;
        public string? DeprecationTime
        {
            get
            {
                if (!_mUnknown_DeprecationTime) return _mValue_DeprecationTime;
                throw new UndeferrableValueException("Value 'Ami.DeprecationTime' is not present");
            }
        }

        /// <summary>
        /// Longer, human-readable description for the AMI.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Ami.Description' is not present");
            }
        }

        /// <summary>
        /// Nested block describing an EBS block device that should be
        /// attached to created instances. The structure of this block is described below.
        /// </summary>
        [PolicyResourceProperty("ebsBlockDevices", "_mUnknown_EbsBlockDevices")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.AmiEbsBlockDevice>? _mValue_EbsBlockDevices;
        private bool _mUnknown_EbsBlockDevices;
        public List<Outputs.AmiEbsBlockDevice>? EbsBlockDevices
        {
            get
            {
                if (!_mUnknown_EbsBlockDevices) return _mValue_EbsBlockDevices;
                throw new UndeferrableValueException("Value 'Ami.EbsBlockDevices' is not present");
            }
        }

        /// <summary>
        /// Whether enhanced networking with ENA is enabled. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("enaSupport", "_mUnknown_EnaSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnaSupport;
        private bool _mUnknown_EnaSupport;
        public bool? EnaSupport
        {
            get
            {
                if (!_mUnknown_EnaSupport) return _mValue_EnaSupport;
                throw new UndeferrableValueException("Value 'Ami.EnaSupport' is not present");
            }
        }

        /// <summary>
        /// Nested block describing an ephemeral block device that
        /// should be attached to created instances. The structure of this block is described below.
        /// </summary>
        [PolicyResourceProperty("ephemeralBlockDevices", "_mUnknown_EphemeralBlockDevices")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.AmiEphemeralBlockDevice>? _mValue_EphemeralBlockDevices;
        private bool _mUnknown_EphemeralBlockDevices;
        public List<Outputs.AmiEphemeralBlockDevice>? EphemeralBlockDevices
        {
            get
            {
                if (!_mUnknown_EphemeralBlockDevices) return _mValue_EphemeralBlockDevices;
                throw new UndeferrableValueException("Value 'Ami.EphemeralBlockDevices' is not present");
            }
        }

        /// <summary>
        /// Hypervisor type of the image.
        /// </summary>
        [PolicyResourceProperty("hypervisor", "_mUnknown_Hypervisor")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Hypervisor;
        private bool _mUnknown_Hypervisor;
        public string? Hypervisor
        {
            get
            {
                if (!_mUnknown_Hypervisor) return _mValue_Hypervisor;
                throw new UndeferrableValueException("Value 'Ami.Hypervisor' is not present");
            }
        }

        [PolicyResourceProperty("imageLocation", "_mUnknown_ImageLocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageLocation;
        private bool _mUnknown_ImageLocation;
        public string? ImageLocation
        {
            get
            {
                if (!_mUnknown_ImageLocation) return _mValue_ImageLocation;
                throw new UndeferrableValueException("Value 'Ami.ImageLocation' is not present");
            }
        }

        /// <summary>
        /// AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
        /// </summary>
        [PolicyResourceProperty("imageOwnerAlias", "_mUnknown_ImageOwnerAlias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageOwnerAlias;
        private bool _mUnknown_ImageOwnerAlias;
        public string? ImageOwnerAlias
        {
            get
            {
                if (!_mUnknown_ImageOwnerAlias) return _mValue_ImageOwnerAlias;
                throw new UndeferrableValueException("Value 'Ami.ImageOwnerAlias' is not present");
            }
        }

        /// <summary>
        /// Type of image.
        /// </summary>
        [PolicyResourceProperty("imageType", "_mUnknown_ImageType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageType;
        private bool _mUnknown_ImageType;
        public string? ImageType
        {
            get
            {
                if (!_mUnknown_ImageType) return _mValue_ImageType;
                throw new UndeferrableValueException("Value 'Ami.ImageType' is not present");
            }
        }

        /// <summary>
        /// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
        /// </summary>
        [PolicyResourceProperty("imdsSupport", "_mUnknown_ImdsSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImdsSupport;
        private bool _mUnknown_ImdsSupport;
        public string? ImdsSupport
        {
            get
            {
                if (!_mUnknown_ImdsSupport) return _mValue_ImdsSupport;
                throw new UndeferrableValueException("Value 'Ami.ImdsSupport' is not present");
            }
        }

        [PolicyResourceProperty("kernelId", "_mUnknown_KernelId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KernelId;
        private bool _mUnknown_KernelId;
        public string? KernelId
        {
            get
            {
                if (!_mUnknown_KernelId) return _mValue_KernelId;
                throw new UndeferrableValueException("Value 'Ami.KernelId' is not present");
            }
        }

        /// <summary>
        /// Date and time, in ISO 8601 date-time format , when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported. For more information, see the following [AWS document](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-last-launched-time.html).
        /// </summary>
        [PolicyResourceProperty("lastLaunchedTime", "_mUnknown_LastLaunchedTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastLaunchedTime;
        private bool _mUnknown_LastLaunchedTime;
        public string? LastLaunchedTime
        {
            get
            {
                if (!_mUnknown_LastLaunchedTime) return _mValue_LastLaunchedTime;
                throw new UndeferrableValueException("Value 'Ami.LastLaunchedTime' is not present");
            }
        }

        [PolicyResourceProperty("manageEbsSnapshots", "_mUnknown_ManageEbsSnapshots")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ManageEbsSnapshots;
        private bool _mUnknown_ManageEbsSnapshots;
        public bool? ManageEbsSnapshots
        {
            get
            {
                if (!_mUnknown_ManageEbsSnapshots) return _mValue_ManageEbsSnapshots;
                throw new UndeferrableValueException("Value 'Ami.ManageEbsSnapshots' is not present");
            }
        }

        /// <summary>
        /// Region-unique name for the AMI.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Ami.Name' is not present");
            }
        }

        /// <summary>
        /// AWS account ID of the image owner.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'Ami.OwnerId' is not present");
            }
        }

        /// <summary>
        /// This value is set to windows for Windows AMIs; otherwise, it is blank.
        /// </summary>
        [PolicyResourceProperty("platform", "_mUnknown_Platform")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Platform;
        private bool _mUnknown_Platform;
        public string? Platform
        {
            get
            {
                if (!_mUnknown_Platform) return _mValue_Platform;
                throw new UndeferrableValueException("Value 'Ami.Platform' is not present");
            }
        }

        /// <summary>
        /// Platform details associated with the billing code of the AMI.
        /// </summary>
        [PolicyResourceProperty("platformDetails", "_mUnknown_PlatformDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PlatformDetails;
        private bool _mUnknown_PlatformDetails;
        public string? PlatformDetails
        {
            get
            {
                if (!_mUnknown_PlatformDetails) return _mValue_PlatformDetails;
                throw new UndeferrableValueException("Value 'Ami.PlatformDetails' is not present");
            }
        }

        /// <summary>
        /// Whether the image has public launch permissions.
        /// </summary>
        [PolicyResourceProperty("public", "_mUnknown_Public")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Public;
        private bool _mUnknown_Public;
        public bool? Public
        {
            get
            {
                if (!_mUnknown_Public) return _mValue_Public;
                throw new UndeferrableValueException("Value 'Ami.Public' is not present");
            }
        }

        [PolicyResourceProperty("ramdiskId", "_mUnknown_RamdiskId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RamdiskId;
        private bool _mUnknown_RamdiskId;
        public string? RamdiskId
        {
            get
            {
                if (!_mUnknown_RamdiskId) return _mValue_RamdiskId;
                throw new UndeferrableValueException("Value 'Ami.RamdiskId' is not present");
            }
        }

        /// <summary>
        /// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
        /// </summary>
        [PolicyResourceProperty("rootDeviceName", "_mUnknown_RootDeviceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RootDeviceName;
        private bool _mUnknown_RootDeviceName;
        public string? RootDeviceName
        {
            get
            {
                if (!_mUnknown_RootDeviceName) return _mValue_RootDeviceName;
                throw new UndeferrableValueException("Value 'Ami.RootDeviceName' is not present");
            }
        }

        /// <summary>
        /// Snapshot ID for the root volume (for EBS-backed AMIs)
        /// </summary>
        [PolicyResourceProperty("rootSnapshotId", "_mUnknown_RootSnapshotId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RootSnapshotId;
        private bool _mUnknown_RootSnapshotId;
        public string? RootSnapshotId
        {
            get
            {
                if (!_mUnknown_RootSnapshotId) return _mValue_RootSnapshotId;
                throw new UndeferrableValueException("Value 'Ami.RootSnapshotId' is not present");
            }
        }

        [PolicyResourceProperty("sriovNetSupport", "_mUnknown_SriovNetSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SriovNetSupport;
        private bool _mUnknown_SriovNetSupport;
        public string? SriovNetSupport
        {
            get
            {
                if (!_mUnknown_SriovNetSupport) return _mValue_SriovNetSupport;
                throw new UndeferrableValueException("Value 'Ami.SriovNetSupport' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Ami.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Ami.TagsAll' is not present");
            }
        }

        /// <summary>
        /// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
        /// </summary>
        [PolicyResourceProperty("tpmSupport", "_mUnknown_TpmSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TpmSupport;
        private bool _mUnknown_TpmSupport;
        public string? TpmSupport
        {
            get
            {
                if (!_mUnknown_TpmSupport) return _mValue_TpmSupport;
                throw new UndeferrableValueException("Value 'Ami.TpmSupport' is not present");
            }
        }

        /// <summary>
        /// Base64 representation of the non-volatile UEFI variable store.
        /// </summary>
        [PolicyResourceProperty("uefiData", "_mUnknown_UefiData")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UefiData;
        private bool _mUnknown_UefiData;
        public string? UefiData
        {
            get
            {
                if (!_mUnknown_UefiData) return _mValue_UefiData;
                throw new UndeferrableValueException("Value 'Ami.UefiData' is not present");
            }
        }

        /// <summary>
        /// Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
        /// </summary>
        [PolicyResourceProperty("usageOperation", "_mUnknown_UsageOperation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UsageOperation;
        private bool _mUnknown_UsageOperation;
        public string? UsageOperation
        {
            get
            {
                if (!_mUnknown_UsageOperation) return _mValue_UsageOperation;
                throw new UndeferrableValueException("Value 'Ami.UsageOperation' is not present");
            }
        }

        /// <summary>
        /// Keyword to choose what virtualization mode created instances
        /// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
        /// changes the set of further arguments that are required, as described below.
        /// </summary>
        [PolicyResourceProperty("virtualizationType", "_mUnknown_VirtualizationType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VirtualizationType;
        private bool _mUnknown_VirtualizationType;
        public string? VirtualizationType
        {
            get
            {
                if (!_mUnknown_VirtualizationType) return _mValue_VirtualizationType;
                throw new UndeferrableValueException("Value 'Ami.VirtualizationType' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/ami:Ami")]
    public sealed class AmiArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Machine architecture for created instances. Defaults to `x86_64`.
        /// </summary>
        [PolicyResourceProperty("architecture", "_mUnknown_Architecture")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Architecture;
        private bool _mUnknown_Architecture;
        public string? Architecture
        {
            get
            {
                if (!_mUnknown_Architecture) return _mValue_Architecture;
                throw new UndeferrableValueException("Value 'AmiArgs.Architecture' is not present");
            }
        }

        /// <summary>
        /// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
        /// </summary>
        [PolicyResourceProperty("bootMode", "_mUnknown_BootMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_BootMode;
        private bool _mUnknown_BootMode;
        public string? BootMode
        {
            get
            {
                if (!_mUnknown_BootMode) return _mValue_BootMode;
                throw new UndeferrableValueException("Value 'AmiArgs.BootMode' is not present");
            }
        }

        /// <summary>
        /// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
        /// </summary>
        [PolicyResourceProperty("deprecationTime", "_mUnknown_DeprecationTime")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeprecationTime;
        private bool _mUnknown_DeprecationTime;
        public string? DeprecationTime
        {
            get
            {
                if (!_mUnknown_DeprecationTime) return _mValue_DeprecationTime;
                throw new UndeferrableValueException("Value 'AmiArgs.DeprecationTime' is not present");
            }
        }

        /// <summary>
        /// Longer, human-readable description for the AMI.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'AmiArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Nested block describing an EBS block device that should be
        /// attached to created instances. The structure of this block is described below.
        /// </summary>
        [PolicyResourceProperty("ebsBlockDevices", "_mUnknown_EbsBlockDevices")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.AmiEbsBlockDeviceArgs>? _mValue_EbsBlockDevices;
        private bool _mUnknown_EbsBlockDevices;
        public List<Inputs.AmiEbsBlockDeviceArgs>? EbsBlockDevices
        {
            get
            {
                if (!_mUnknown_EbsBlockDevices) return _mValue_EbsBlockDevices;
                throw new UndeferrableValueException("Value 'AmiArgs.EbsBlockDevices' is not present");
            }
        }

        /// <summary>
        /// Whether enhanced networking with ENA is enabled. Defaults to `false`.
        /// </summary>
        [PolicyResourceProperty("enaSupport", "_mUnknown_EnaSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnaSupport;
        private bool _mUnknown_EnaSupport;
        public bool? EnaSupport
        {
            get
            {
                if (!_mUnknown_EnaSupport) return _mValue_EnaSupport;
                throw new UndeferrableValueException("Value 'AmiArgs.EnaSupport' is not present");
            }
        }

        /// <summary>
        /// Nested block describing an ephemeral block device that
        /// should be attached to created instances. The structure of this block is described below.
        /// </summary>
        [PolicyResourceProperty("ephemeralBlockDevices", "_mUnknown_EphemeralBlockDevices")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.AmiEphemeralBlockDeviceArgs>? _mValue_EphemeralBlockDevices;
        private bool _mUnknown_EphemeralBlockDevices;
        public List<Inputs.AmiEphemeralBlockDeviceArgs>? EphemeralBlockDevices
        {
            get
            {
                if (!_mUnknown_EphemeralBlockDevices) return _mValue_EphemeralBlockDevices;
                throw new UndeferrableValueException("Value 'AmiArgs.EphemeralBlockDevices' is not present");
            }
        }

        [PolicyResourceProperty("imageLocation", "_mUnknown_ImageLocation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImageLocation;
        private bool _mUnknown_ImageLocation;
        public string? ImageLocation
        {
            get
            {
                if (!_mUnknown_ImageLocation) return _mValue_ImageLocation;
                throw new UndeferrableValueException("Value 'AmiArgs.ImageLocation' is not present");
            }
        }

        /// <summary>
        /// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
        /// </summary>
        [PolicyResourceProperty("imdsSupport", "_mUnknown_ImdsSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ImdsSupport;
        private bool _mUnknown_ImdsSupport;
        public string? ImdsSupport
        {
            get
            {
                if (!_mUnknown_ImdsSupport) return _mValue_ImdsSupport;
                throw new UndeferrableValueException("Value 'AmiArgs.ImdsSupport' is not present");
            }
        }

        [PolicyResourceProperty("kernelId", "_mUnknown_KernelId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KernelId;
        private bool _mUnknown_KernelId;
        public string? KernelId
        {
            get
            {
                if (!_mUnknown_KernelId) return _mValue_KernelId;
                throw new UndeferrableValueException("Value 'AmiArgs.KernelId' is not present");
            }
        }

        /// <summary>
        /// Region-unique name for the AMI.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'AmiArgs.Name' is not present");
            }
        }

        [PolicyResourceProperty("ramdiskId", "_mUnknown_RamdiskId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RamdiskId;
        private bool _mUnknown_RamdiskId;
        public string? RamdiskId
        {
            get
            {
                if (!_mUnknown_RamdiskId) return _mValue_RamdiskId;
                throw new UndeferrableValueException("Value 'AmiArgs.RamdiskId' is not present");
            }
        }

        /// <summary>
        /// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
        /// </summary>
        [PolicyResourceProperty("rootDeviceName", "_mUnknown_RootDeviceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RootDeviceName;
        private bool _mUnknown_RootDeviceName;
        public string? RootDeviceName
        {
            get
            {
                if (!_mUnknown_RootDeviceName) return _mValue_RootDeviceName;
                throw new UndeferrableValueException("Value 'AmiArgs.RootDeviceName' is not present");
            }
        }

        [PolicyResourceProperty("sriovNetSupport", "_mUnknown_SriovNetSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SriovNetSupport;
        private bool _mUnknown_SriovNetSupport;
        public string? SriovNetSupport
        {
            get
            {
                if (!_mUnknown_SriovNetSupport) return _mValue_SriovNetSupport;
                throw new UndeferrableValueException("Value 'AmiArgs.SriovNetSupport' is not present");
            }
        }

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'AmiArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
        /// </summary>
        [PolicyResourceProperty("tpmSupport", "_mUnknown_TpmSupport")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TpmSupport;
        private bool _mUnknown_TpmSupport;
        public string? TpmSupport
        {
            get
            {
                if (!_mUnknown_TpmSupport) return _mValue_TpmSupport;
                throw new UndeferrableValueException("Value 'AmiArgs.TpmSupport' is not present");
            }
        }

        /// <summary>
        /// Base64 representation of the non-volatile UEFI variable store.
        /// </summary>
        [PolicyResourceProperty("uefiData", "_mUnknown_UefiData")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_UefiData;
        private bool _mUnknown_UefiData;
        public string? UefiData
        {
            get
            {
                if (!_mUnknown_UefiData) return _mValue_UefiData;
                throw new UndeferrableValueException("Value 'AmiArgs.UefiData' is not present");
            }
        }

        /// <summary>
        /// Keyword to choose what virtualization mode created instances
        /// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
        /// changes the set of further arguments that are required, as described below.
        /// </summary>
        [PolicyResourceProperty("virtualizationType", "_mUnknown_VirtualizationType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VirtualizationType;
        private bool _mUnknown_VirtualizationType;
        public string? VirtualizationType
        {
            get
            {
                if (!_mUnknown_VirtualizationType) return _mValue_VirtualizationType;
                throw new UndeferrableValueException("Value 'AmiArgs.VirtualizationType' is not present");
            }
        }
    }
}
