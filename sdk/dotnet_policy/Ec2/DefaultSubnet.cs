// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/defaultSubnet:DefaultSubnet")]
    public sealed class DefaultSubnet : global::Pulumi.PolicyResourceOutput
    {
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'DefaultSubnet.Arn' is not present");
            }
        }

        [PolicyResourceProperty("assignIpv6AddressOnCreation", "_mUnknown_AssignIpv6AddressOnCreation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AssignIpv6AddressOnCreation;
        private bool _mUnknown_AssignIpv6AddressOnCreation;
        public bool? AssignIpv6AddressOnCreation
        {
            get
            {
                if (!_mUnknown_AssignIpv6AddressOnCreation) return _mValue_AssignIpv6AddressOnCreation;
                throw new UndeferrableValueException("Value 'DefaultSubnet.AssignIpv6AddressOnCreation' is not present");
            }
        }

        /// <summary>
        /// is required
        /// * The `availability_zone_id`, `cidr_block` and `vpc_id` arguments become computed attributes
        /// * The default value for `map_public_ip_on_launch` is `true`
        /// 
        /// This resource supports the following additional arguments:
        /// </summary>
        [PolicyResourceProperty("availabilityZone", "_mUnknown_AvailabilityZone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZone;
        private bool _mUnknown_AvailabilityZone;
        public string? AvailabilityZone
        {
            get
            {
                if (!_mUnknown_AvailabilityZone) return _mValue_AvailabilityZone;
                throw new UndeferrableValueException("Value 'DefaultSubnet.AvailabilityZone' is not present");
            }
        }

        /// <summary>
        /// The AZ ID of the subnet
        /// </summary>
        [PolicyResourceProperty("availabilityZoneId", "_mUnknown_AvailabilityZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZoneId;
        private bool _mUnknown_AvailabilityZoneId;
        public string? AvailabilityZoneId
        {
            get
            {
                if (!_mUnknown_AvailabilityZoneId) return _mValue_AvailabilityZoneId;
                throw new UndeferrableValueException("Value 'DefaultSubnet.AvailabilityZoneId' is not present");
            }
        }

        /// <summary>
        /// The IPv4 CIDR block assigned to the subnet
        /// </summary>
        [PolicyResourceProperty("cidrBlock", "_mUnknown_CidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CidrBlock;
        private bool _mUnknown_CidrBlock;
        public string? CidrBlock
        {
            get
            {
                if (!_mUnknown_CidrBlock) return _mValue_CidrBlock;
                throw new UndeferrableValueException("Value 'DefaultSubnet.CidrBlock' is not present");
            }
        }

        [PolicyResourceProperty("customerOwnedIpv4Pool", "_mUnknown_CustomerOwnedIpv4Pool")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomerOwnedIpv4Pool;
        private bool _mUnknown_CustomerOwnedIpv4Pool;
        public string? CustomerOwnedIpv4Pool
        {
            get
            {
                if (!_mUnknown_CustomerOwnedIpv4Pool) return _mValue_CustomerOwnedIpv4Pool;
                throw new UndeferrableValueException("Value 'DefaultSubnet.CustomerOwnedIpv4Pool' is not present");
            }
        }

        [PolicyResourceProperty("enableDns64", "_mUnknown_EnableDns64")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableDns64;
        private bool _mUnknown_EnableDns64;
        public bool? EnableDns64
        {
            get
            {
                if (!_mUnknown_EnableDns64) return _mValue_EnableDns64;
                throw new UndeferrableValueException("Value 'DefaultSubnet.EnableDns64' is not present");
            }
        }

        [PolicyResourceProperty("enableLniAtDeviceIndex", "_mUnknown_EnableLniAtDeviceIndex")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_EnableLniAtDeviceIndex;
        private bool _mUnknown_EnableLniAtDeviceIndex;
        public int? EnableLniAtDeviceIndex
        {
            get
            {
                if (!_mUnknown_EnableLniAtDeviceIndex) return _mValue_EnableLniAtDeviceIndex;
                throw new UndeferrableValueException("Value 'DefaultSubnet.EnableLniAtDeviceIndex' is not present");
            }
        }

        [PolicyResourceProperty("enableResourceNameDnsARecordOnLaunch", "_mUnknown_EnableResourceNameDnsARecordOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableResourceNameDnsARecordOnLaunch;
        private bool _mUnknown_EnableResourceNameDnsARecordOnLaunch;
        public bool? EnableResourceNameDnsARecordOnLaunch
        {
            get
            {
                if (!_mUnknown_EnableResourceNameDnsARecordOnLaunch) return _mValue_EnableResourceNameDnsARecordOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnet.EnableResourceNameDnsARecordOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("enableResourceNameDnsAaaaRecordOnLaunch", "_mUnknown_EnableResourceNameDnsAaaaRecordOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableResourceNameDnsAaaaRecordOnLaunch;
        private bool _mUnknown_EnableResourceNameDnsAaaaRecordOnLaunch;
        public bool? EnableResourceNameDnsAaaaRecordOnLaunch
        {
            get
            {
                if (!_mUnknown_EnableResourceNameDnsAaaaRecordOnLaunch) return _mValue_EnableResourceNameDnsAaaaRecordOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnet.EnableResourceNameDnsAaaaRecordOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("existingDefaultSubnet", "_mUnknown_ExistingDefaultSubnet")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ExistingDefaultSubnet;
        private bool _mUnknown_ExistingDefaultSubnet;
        public bool? ExistingDefaultSubnet
        {
            get
            {
                if (!_mUnknown_ExistingDefaultSubnet) return _mValue_ExistingDefaultSubnet;
                throw new UndeferrableValueException("Value 'DefaultSubnet.ExistingDefaultSubnet' is not present");
            }
        }

        /// <summary>
        /// Whether destroying the resource deletes the default subnet. Default: `false`
        /// </summary>
        [PolicyResourceProperty("forceDestroy", "_mUnknown_ForceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceDestroy;
        private bool _mUnknown_ForceDestroy;
        public bool? ForceDestroy
        {
            get
            {
                if (!_mUnknown_ForceDestroy) return _mValue_ForceDestroy;
                throw new UndeferrableValueException("Value 'DefaultSubnet.ForceDestroy' is not present");
            }
        }

        [PolicyResourceProperty("ipv6CidrBlock", "_mUnknown_Ipv6CidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv6CidrBlock;
        private bool _mUnknown_Ipv6CidrBlock;
        public string? Ipv6CidrBlock
        {
            get
            {
                if (!_mUnknown_Ipv6CidrBlock) return _mValue_Ipv6CidrBlock;
                throw new UndeferrableValueException("Value 'DefaultSubnet.Ipv6CidrBlock' is not present");
            }
        }

        [PolicyResourceProperty("ipv6CidrBlockAssociationId", "_mUnknown_Ipv6CidrBlockAssociationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv6CidrBlockAssociationId;
        private bool _mUnknown_Ipv6CidrBlockAssociationId;
        public string? Ipv6CidrBlockAssociationId
        {
            get
            {
                if (!_mUnknown_Ipv6CidrBlockAssociationId) return _mValue_Ipv6CidrBlockAssociationId;
                throw new UndeferrableValueException("Value 'DefaultSubnet.Ipv6CidrBlockAssociationId' is not present");
            }
        }

        [PolicyResourceProperty("ipv6Native", "_mUnknown_Ipv6Native")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Ipv6Native;
        private bool _mUnknown_Ipv6Native;
        public bool? Ipv6Native
        {
            get
            {
                if (!_mUnknown_Ipv6Native) return _mValue_Ipv6Native;
                throw new UndeferrableValueException("Value 'DefaultSubnet.Ipv6Native' is not present");
            }
        }

        [PolicyResourceProperty("mapCustomerOwnedIpOnLaunch", "_mUnknown_MapCustomerOwnedIpOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_MapCustomerOwnedIpOnLaunch;
        private bool _mUnknown_MapCustomerOwnedIpOnLaunch;
        public bool? MapCustomerOwnedIpOnLaunch
        {
            get
            {
                if (!_mUnknown_MapCustomerOwnedIpOnLaunch) return _mValue_MapCustomerOwnedIpOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnet.MapCustomerOwnedIpOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("mapPublicIpOnLaunch", "_mUnknown_MapPublicIpOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_MapPublicIpOnLaunch;
        private bool _mUnknown_MapPublicIpOnLaunch;
        public bool? MapPublicIpOnLaunch
        {
            get
            {
                if (!_mUnknown_MapPublicIpOnLaunch) return _mValue_MapPublicIpOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnet.MapPublicIpOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("outpostArn", "_mUnknown_OutpostArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutpostArn;
        private bool _mUnknown_OutpostArn;
        public string? OutpostArn
        {
            get
            {
                if (!_mUnknown_OutpostArn) return _mValue_OutpostArn;
                throw new UndeferrableValueException("Value 'DefaultSubnet.OutpostArn' is not present");
            }
        }

        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'DefaultSubnet.OwnerId' is not present");
            }
        }

        [PolicyResourceProperty("privateDnsHostnameTypeOnLaunch", "_mUnknown_PrivateDnsHostnameTypeOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PrivateDnsHostnameTypeOnLaunch;
        private bool _mUnknown_PrivateDnsHostnameTypeOnLaunch;
        public string? PrivateDnsHostnameTypeOnLaunch
        {
            get
            {
                if (!_mUnknown_PrivateDnsHostnameTypeOnLaunch) return _mValue_PrivateDnsHostnameTypeOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnet.PrivateDnsHostnameTypeOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DefaultSubnet.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'DefaultSubnet.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The ID of the VPC the subnet is in
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'DefaultSubnet.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/defaultSubnet:DefaultSubnet")]
    public sealed class DefaultSubnetArgs : global::Pulumi.PolicyResourceInput
    {
        [PolicyResourceProperty("assignIpv6AddressOnCreation", "_mUnknown_AssignIpv6AddressOnCreation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_AssignIpv6AddressOnCreation;
        private bool _mUnknown_AssignIpv6AddressOnCreation;
        public bool? AssignIpv6AddressOnCreation
        {
            get
            {
                if (!_mUnknown_AssignIpv6AddressOnCreation) return _mValue_AssignIpv6AddressOnCreation;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.AssignIpv6AddressOnCreation' is not present");
            }
        }

        /// <summary>
        /// is required
        /// * The `availability_zone_id`, `cidr_block` and `vpc_id` arguments become computed attributes
        /// * The default value for `map_public_ip_on_launch` is `true`
        /// 
        /// This resource supports the following additional arguments:
        /// </summary>
        [PolicyResourceProperty("availabilityZone", "_mUnknown_AvailabilityZone")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZone;
        private bool _mUnknown_AvailabilityZone;
        public string? AvailabilityZone
        {
            get
            {
                if (!_mUnknown_AvailabilityZone) return _mValue_AvailabilityZone;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.AvailabilityZone' is not present");
            }
        }

        [PolicyResourceProperty("customerOwnedIpv4Pool", "_mUnknown_CustomerOwnedIpv4Pool")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CustomerOwnedIpv4Pool;
        private bool _mUnknown_CustomerOwnedIpv4Pool;
        public string? CustomerOwnedIpv4Pool
        {
            get
            {
                if (!_mUnknown_CustomerOwnedIpv4Pool) return _mValue_CustomerOwnedIpv4Pool;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.CustomerOwnedIpv4Pool' is not present");
            }
        }

        [PolicyResourceProperty("enableDns64", "_mUnknown_EnableDns64")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableDns64;
        private bool _mUnknown_EnableDns64;
        public bool? EnableDns64
        {
            get
            {
                if (!_mUnknown_EnableDns64) return _mValue_EnableDns64;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.EnableDns64' is not present");
            }
        }

        [PolicyResourceProperty("enableResourceNameDnsARecordOnLaunch", "_mUnknown_EnableResourceNameDnsARecordOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableResourceNameDnsARecordOnLaunch;
        private bool _mUnknown_EnableResourceNameDnsARecordOnLaunch;
        public bool? EnableResourceNameDnsARecordOnLaunch
        {
            get
            {
                if (!_mUnknown_EnableResourceNameDnsARecordOnLaunch) return _mValue_EnableResourceNameDnsARecordOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.EnableResourceNameDnsARecordOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("enableResourceNameDnsAaaaRecordOnLaunch", "_mUnknown_EnableResourceNameDnsAaaaRecordOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_EnableResourceNameDnsAaaaRecordOnLaunch;
        private bool _mUnknown_EnableResourceNameDnsAaaaRecordOnLaunch;
        public bool? EnableResourceNameDnsAaaaRecordOnLaunch
        {
            get
            {
                if (!_mUnknown_EnableResourceNameDnsAaaaRecordOnLaunch) return _mValue_EnableResourceNameDnsAaaaRecordOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.EnableResourceNameDnsAaaaRecordOnLaunch' is not present");
            }
        }

        /// <summary>
        /// Whether destroying the resource deletes the default subnet. Default: `false`
        /// </summary>
        [PolicyResourceProperty("forceDestroy", "_mUnknown_ForceDestroy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceDestroy;
        private bool _mUnknown_ForceDestroy;
        public bool? ForceDestroy
        {
            get
            {
                if (!_mUnknown_ForceDestroy) return _mValue_ForceDestroy;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.ForceDestroy' is not present");
            }
        }

        [PolicyResourceProperty("ipv6CidrBlock", "_mUnknown_Ipv6CidrBlock")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Ipv6CidrBlock;
        private bool _mUnknown_Ipv6CidrBlock;
        public string? Ipv6CidrBlock
        {
            get
            {
                if (!_mUnknown_Ipv6CidrBlock) return _mValue_Ipv6CidrBlock;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.Ipv6CidrBlock' is not present");
            }
        }

        [PolicyResourceProperty("ipv6Native", "_mUnknown_Ipv6Native")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Ipv6Native;
        private bool _mUnknown_Ipv6Native;
        public bool? Ipv6Native
        {
            get
            {
                if (!_mUnknown_Ipv6Native) return _mValue_Ipv6Native;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.Ipv6Native' is not present");
            }
        }

        [PolicyResourceProperty("mapCustomerOwnedIpOnLaunch", "_mUnknown_MapCustomerOwnedIpOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_MapCustomerOwnedIpOnLaunch;
        private bool _mUnknown_MapCustomerOwnedIpOnLaunch;
        public bool? MapCustomerOwnedIpOnLaunch
        {
            get
            {
                if (!_mUnknown_MapCustomerOwnedIpOnLaunch) return _mValue_MapCustomerOwnedIpOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.MapCustomerOwnedIpOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("mapPublicIpOnLaunch", "_mUnknown_MapPublicIpOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_MapPublicIpOnLaunch;
        private bool _mUnknown_MapPublicIpOnLaunch;
        public bool? MapPublicIpOnLaunch
        {
            get
            {
                if (!_mUnknown_MapPublicIpOnLaunch) return _mValue_MapPublicIpOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.MapPublicIpOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("privateDnsHostnameTypeOnLaunch", "_mUnknown_PrivateDnsHostnameTypeOnLaunch")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PrivateDnsHostnameTypeOnLaunch;
        private bool _mUnknown_PrivateDnsHostnameTypeOnLaunch;
        public string? PrivateDnsHostnameTypeOnLaunch
        {
            get
            {
                if (!_mUnknown_PrivateDnsHostnameTypeOnLaunch) return _mValue_PrivateDnsHostnameTypeOnLaunch;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.PrivateDnsHostnameTypeOnLaunch' is not present");
            }
        }

        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DefaultSubnetArgs.Tags' is not present");
            }
        }
    }
}
