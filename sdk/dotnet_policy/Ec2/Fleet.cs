// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/fleet:Fleet")]
    public sealed class Fleet : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the fleet
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Reserved.
        /// </summary>
        [Input("context")]
        public string? Context;

        /// <summary>
        /// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
        /// </summary>
        [Input("excessCapacityTerminationPolicy")]
        public string? ExcessCapacityTerminationPolicy;

        /// <summary>
        /// Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
        /// </summary>
        [Input("fleetInstanceSets")]
        public List<FleetFleetInstanceSet>? FleetInstanceSets;

        /// <summary>
        /// The state of the EC2 Fleet.
        /// </summary>
        [Input("fleetState")]
        public string? State;

        /// <summary>
        /// The number of units fulfilled by this request compared to the set target capacity.
        /// </summary>
        [Input("fulfilledCapacity")]
        public double? FulfilledCapacity;

        /// <summary>
        /// The number of units fulfilled by this request compared to the set target On-Demand capacity.
        /// </summary>
        [Input("fulfilledOnDemandCapacity")]
        public double? FulfilledOnDemandCapacity;

        /// <summary>
        /// Nested argument containing EC2 Launch Template configurations. Defined below.
        /// </summary>
        [Input("launchTemplateConfigs")]
        public List<FleetLaunchTemplateConfig>? LaunchTemplateConfigs;

        /// <summary>
        /// Nested argument containing On-Demand configurations. Defined below.
        /// </summary>
        [Input("onDemandOptions")]
        public FleetOnDemandOptions? OnDemandOptions;

        /// <summary>
        /// Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
        /// </summary>
        [Input("replaceUnhealthyInstances")]
        public bool? ReplaceUnhealthyInstances;

        /// <summary>
        /// Nested argument containing Spot configurations. Defined below.
        /// </summary>
        [Input("spotOptions")]
        public FleetSpotOptions? SpotOptions;

        /// <summary>
        /// Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Nested argument containing target capacity configurations. Defined below.
        /// </summary>
        [Input("targetCapacitySpecification")]
        public FleetTargetCapacitySpecification? TargetCapacitySpecification;

        /// <summary>
        /// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
        /// </summary>
        [Input("terminateInstances")]
        public bool? TerminateInstances;

        /// <summary>
        /// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
        /// </summary>
        [Input("terminateInstancesWithExpiration")]
        public bool? TerminateInstancesWithExpiration;

        /// <summary>
        /// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
        /// </summary>
        [Input("type")]
        public string? Type;

        /// <summary>
        /// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
        /// </summary>
        [Input("validFrom")]
        public string? ValidFrom;

        /// <summary>
        /// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
        /// </summary>
        [Input("validUntil")]
        public string? ValidUntil;
    }
}
