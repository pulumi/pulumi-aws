// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/LaunchTemplateNetworkInterface:LaunchTemplateNetworkInterface")]
    public sealed class LaunchTemplateNetworkInterface
    {
        /// <summary>
        /// Associate a Carrier IP address with `eth0` for a new network interface. Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. Boolean value, can be left unset.
        /// </summary>
        [Input("associateCarrierIpAddress")]
        public string? AssociateCarrierIpAddress;

        /// <summary>
        /// Associate a public ip address with the network interface. Boolean value, can be left unset.
        /// </summary>
        [Input("associatePublicIpAddress")]
        public string? AssociatePublicIpAddress;

        /// <summary>
        /// The Connection Tracking Configuration for the network interface. See [Amazon EC2 security group connection tracking](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-connection-tracking.html#connection-tracking-timeouts)
        /// </summary>
        [Input("connectionTrackingSpecification")]
        public LaunchTemplateNetworkInterfaceConnectionTrackingSpecification? ConnectionTrackingSpecification;

        /// <summary>
        /// Whether the network interface should be destroyed on instance termination.
        /// </summary>
        [Input("deleteOnTermination")]
        public string? DeleteOnTermination;

        /// <summary>
        /// Description of the network interface.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The integer index of the network interface attachment.
        /// </summary>
        [Input("deviceIndex")]
        public int? DeviceIndex;

        /// <summary>
        /// Configuration for Elastic Network Adapter (ENA) Express settings. Applies to network interfaces that use the [ena Express](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking-ena-express.html) feature. See details below.
        /// </summary>
        [Input("enaSrdSpecification")]
        public LaunchTemplateNetworkInterfaceEnaSrdSpecification? EnaSrdSpecification;

        /// <summary>
        /// The type of network interface. To create an Elastic Fabric Adapter (EFA), specify `efa`.
        /// </summary>
        [Input("interfaceType")]
        public string? InterfaceType;

        /// <summary>
        /// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4_addresses`
        /// </summary>
        [Input("ipv4AddressCount")]
        public int? Ipv4AddressCount;

        /// <summary>
        /// One or more private IPv4 addresses to associate. Conflicts with `ipv4_address_count`
        /// </summary>
        [Input("ipv4Addresses")]
        public List<string>? Ipv4Addresses;

        /// <summary>
        /// The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with `ipv4_prefixes`
        /// </summary>
        [Input("ipv4PrefixCount")]
        public int? Ipv4PrefixCount;

        /// <summary>
        /// One or more IPv4 prefixes to be assigned to the network interface. Conflicts with `ipv4_prefix_count`
        /// </summary>
        [Input("ipv4Prefixes")]
        public List<string>? Ipv4Prefixes;

        /// <summary>
        /// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6_addresses`
        /// </summary>
        [Input("ipv6AddressCount")]
        public int? Ipv6AddressCount;

        /// <summary>
        /// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6_address_count`
        /// </summary>
        [Input("ipv6Addresses")]
        public List<string>? Ipv6Addresses;

        /// <summary>
        /// The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with `ipv6_prefixes`
        /// </summary>
        [Input("ipv6PrefixCount")]
        public int? Ipv6PrefixCount;

        /// <summary>
        /// One or more IPv6 prefixes to be assigned to the network interface. Conflicts with `ipv6_prefix_count`
        /// </summary>
        [Input("ipv6Prefixes")]
        public List<string>? Ipv6Prefixes;

        /// <summary>
        /// The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
        /// </summary>
        [Input("networkCardIndex")]
        public int? NetworkCardIndex;

        /// <summary>
        /// The ID of the network interface to attach.
        /// </summary>
        [Input("networkInterfaceId")]
        public string? NetworkInterfaceId;

        /// <summary>
        /// Whether the first IPv6 GUA will be made the primary IPv6 address.
        /// </summary>
        [Input("primaryIpv6")]
        public string? PrimaryIpv6;

        /// <summary>
        /// The primary private IPv4 address.
        /// </summary>
        [Input("privateIpAddress")]
        public string? PrivateIpAddress;

        /// <summary>
        /// A list of security group IDs to associate.
        /// </summary>
        [Input("securityGroups")]
        public List<string>? SecurityGroups;

        /// <summary>
        /// The VPC Subnet ID to associate.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId;
    }
}
