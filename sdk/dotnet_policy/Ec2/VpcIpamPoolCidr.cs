// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcIpamPoolCidr:VpcIpamPoolCidr")]
    public sealed class VpcIpamPoolCidr : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The CIDR you want to assign to the pool. Conflicts with `netmask_length`.
        /// </summary>
        [Input("cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mCidr;

        public string? Cidr => _mCidr.GetValue("cidr");

        /// <summary>
        /// A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.
        /// </summary>
        [Input("cidrAuthorizationContext")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.VpcIpamPoolCidrCidrAuthorizationContext> _mCidrAuthorizationContext;

        public Outputs.VpcIpamPoolCidrCidrAuthorizationContext? CidrAuthorizationContext => _mCidrAuthorizationContext.GetValue("cidrAuthorizationContext");

        /// <summary>
        /// The unique ID generated by AWS for the pool cidr. Typically this is the resource `id` but this attribute was added to the API calls after the fact and is therefore not used as the resource id.
        /// </summary>
        [Input("ipamPoolCidrId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mIpamPoolCidrId;

        public string? IpamPoolCidrId => _mIpamPoolCidrId.GetValue("ipamPoolCidrId");

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [Input("ipamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mIpamPoolId;

        public string? IpamPoolId => _mIpamPoolId.GetValue("ipamPoolId");

        /// <summary>
        /// If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.
        /// </summary>
        [Input("netmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mNetmaskLength;

        public int? NetmaskLength => _mNetmaskLength.GetValue("netmaskLength");
    }

    [PolicyResourceType("aws:ec2/vpcIpamPoolCidr:VpcIpamPoolCidr")]
    public sealed class VpcIpamPoolCidrArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The CIDR you want to assign to the pool. Conflicts with `netmask_length`.
        /// </summary>
        [Input("cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mCidr;

        public string? Cidr => _mCidr.GetValue("cidr");

        /// <summary>
        /// A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.
        /// </summary>
        [Input("cidrAuthorizationContext")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Inputs.VpcIpamPoolCidrCidrAuthorizationContextArgs> _mCidrAuthorizationContext;

        public Inputs.VpcIpamPoolCidrCidrAuthorizationContextArgs? CidrAuthorizationContext => _mCidrAuthorizationContext.GetValue("cidrAuthorizationContext");

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [Input("ipamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mIpamPoolId;

        public string? IpamPoolId => _mIpamPoolId.GetValue("ipamPoolId");

        /// <summary>
        /// If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.
        /// </summary>
        [Input("netmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mNetmaskLength;

        public int? NetmaskLength => _mNetmaskLength.GetValue("netmaskLength");
    }
}
