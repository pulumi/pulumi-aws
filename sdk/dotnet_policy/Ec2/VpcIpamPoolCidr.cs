// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcIpamPoolCidr:VpcIpamPoolCidr")]
    public sealed class VpcIpamPoolCidr : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The CIDR you want to assign to the pool. Conflicts with `netmask_length`.
        /// </summary>
        [PolicyResourceProperty("cidr", "_mUnknown_Cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Cidr;
        private bool _mUnknown_Cidr;
        public string? Cidr
        {
            get
            {
                if (!_mUnknown_Cidr) return _mValue_Cidr;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidr.Cidr' is not present");
            }
        }

        /// <summary>
        /// A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.
        /// </summary>
        [PolicyResourceProperty("cidrAuthorizationContext", "_mUnknown_CidrAuthorizationContext")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.VpcIpamPoolCidrCidrAuthorizationContext? _mValue_CidrAuthorizationContext;
        private bool _mUnknown_CidrAuthorizationContext;
        public Outputs.VpcIpamPoolCidrCidrAuthorizationContext? CidrAuthorizationContext
        {
            get
            {
                if (!_mUnknown_CidrAuthorizationContext) return _mValue_CidrAuthorizationContext;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidr.CidrAuthorizationContext' is not present");
            }
        }

        /// <summary>
        /// The unique ID generated by AWS for the pool cidr. Typically this is the resource `id` but this attribute was added to the API calls after the fact and is therefore not used as the resource id.
        /// </summary>
        [PolicyResourceProperty("ipamPoolCidrId", "_mUnknown_IpamPoolCidrId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolCidrId;
        private bool _mUnknown_IpamPoolCidrId;
        public string? IpamPoolCidrId
        {
            get
            {
                if (!_mUnknown_IpamPoolCidrId) return _mValue_IpamPoolCidrId;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidr.IpamPoolCidrId' is not present");
            }
        }

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [PolicyResourceProperty("ipamPoolId", "_mUnknown_IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolId;
        private bool _mUnknown_IpamPoolId;
        public string? IpamPoolId
        {
            get
            {
                if (!_mUnknown_IpamPoolId) return _mValue_IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidr.IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.
        /// </summary>
        [PolicyResourceProperty("netmaskLength", "_mUnknown_NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NetmaskLength;
        private bool _mUnknown_NetmaskLength;
        public int? NetmaskLength
        {
            get
            {
                if (!_mUnknown_NetmaskLength) return _mValue_NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidr.NetmaskLength' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ec2/vpcIpamPoolCidr:VpcIpamPoolCidr")]
    public sealed class VpcIpamPoolCidrArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The CIDR you want to assign to the pool. Conflicts with `netmask_length`.
        /// </summary>
        [PolicyResourceProperty("cidr", "_mUnknown_Cidr")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Cidr;
        private bool _mUnknown_Cidr;
        public string? Cidr
        {
            get
            {
                if (!_mUnknown_Cidr) return _mValue_Cidr;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrArgs.Cidr' is not present");
            }
        }

        /// <summary>
        /// A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.
        /// </summary>
        [PolicyResourceProperty("cidrAuthorizationContext", "_mUnknown_CidrAuthorizationContext")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.VpcIpamPoolCidrCidrAuthorizationContextArgs? _mValue_CidrAuthorizationContext;
        private bool _mUnknown_CidrAuthorizationContext;
        public Inputs.VpcIpamPoolCidrCidrAuthorizationContextArgs? CidrAuthorizationContext
        {
            get
            {
                if (!_mUnknown_CidrAuthorizationContext) return _mValue_CidrAuthorizationContext;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrArgs.CidrAuthorizationContext' is not present");
            }
        }

        /// <summary>
        /// The ID of the pool to which you want to assign a CIDR.
        /// </summary>
        [PolicyResourceProperty("ipamPoolId", "_mUnknown_IpamPoolId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_IpamPoolId;
        private bool _mUnknown_IpamPoolId;
        public string? IpamPoolId
        {
            get
            {
                if (!_mUnknown_IpamPoolId) return _mValue_IpamPoolId;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrArgs.IpamPoolId' is not present");
            }
        }

        /// <summary>
        /// If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.
        /// </summary>
        [PolicyResourceProperty("netmaskLength", "_mUnknown_NetmaskLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NetmaskLength;
        private bool _mUnknown_NetmaskLength;
        public int? NetmaskLength
        {
            get
            {
                if (!_mUnknown_NetmaskLength) return _mValue_NetmaskLength;
                throw new UndeferrableValueException("Value 'VpcIpamPoolCidrArgs.NetmaskLength' is not present");
            }
        }
    }
}
