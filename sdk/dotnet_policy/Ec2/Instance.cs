// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/instance:Instance")]
    public sealed class Instance : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// AMI to use for the instance. Required unless `launch_template` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
        /// </summary>
        [Input("ami")]
        public string? Ami;

        /// <summary>
        /// ARN of the instance.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Whether to associate a public IP address with an instance in a VPC.
        /// </summary>
        [Input("associatePublicIpAddress")]
        public bool? AssociatePublicIpAddress;

        /// <summary>
        /// AZ to start the instance in.
        /// </summary>
        [Input("availabilityZone")]
        public string? AvailabilityZone;

        /// <summary>
        /// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
        /// 
        /// &gt; **NOTE:** Changing `cpu_core_count` and/or `cpu_threads_per_core` will cause the resource to be destroyed and re-created.
        /// </summary>
        [Input("capacityReservationSpecification")]
        public InstanceCapacityReservationSpecification? CapacityReservationSpecification;

        /// <summary>
        /// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options [CPU Cores and Threads Per CPU Core Per Instance Type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html#cpu-options-supported-instances-values) - specifying this option for unsupported instance types will return an error from the EC2 API.
        /// </summary>
        [Input("cpuCoreCount")]
        public int? CpuCoreCount;

        /// <summary>
        /// The CPU options for the instance. See CPU Options below for more details.
        /// </summary>
        [Input("cpuOptions")]
        public InstanceCpuOptions? CpuOptions;

        /// <summary>
        /// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See [Optimizing CPU Options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) for more information.
        /// </summary>
        [Input("cpuThreadsPerCore")]
        public int? CpuThreadsPerCore;

        /// <summary>
        /// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
        /// </summary>
        [Input("creditSpecification")]
        public InstanceCreditSpecification? CreditSpecification;

        /// <summary>
        /// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
        /// </summary>
        [Input("disableApiStop")]
        public bool? DisableApiStop;

        /// <summary>
        /// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
        /// </summary>
        [Input("disableApiTermination")]
        public bool? DisableApiTermination;

        /// <summary>
        /// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        [Input("ebsBlockDevices")]
        public List<InstanceEbsBlockDevice>? EbsBlockDevices;

        /// <summary>
        /// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
        /// </summary>
        [Input("ebsOptimized")]
        public bool? EbsOptimized;

        /// <summary>
        /// Whether to assign a primary IPv6 Global Unicast Address (GUA) to the instance when launched in a dual-stack or IPv6-only subnet. A primary IPv6 address ensures a consistent IPv6 address for the instance and is automatically assigned by AWS to the ENI. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains until the instance is terminated or the ENI is detached. Disabling `enable_primary_ipv6` after it has been enabled forces recreation of the instance.
        /// </summary>
        [Input("enablePrimaryIpv6")]
        public bool? EnablePrimaryIpv6;

        /// <summary>
        /// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
        /// </summary>
        [Input("enclaveOptions")]
        public InstanceEnclaveOptions? EnclaveOptions;

        /// <summary>
        /// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        [Input("ephemeralBlockDevices")]
        public List<InstanceEphemeralBlockDevice>? EphemeralBlockDevices;

        /// <summary>
        /// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
        /// </summary>
        [Input("getPasswordData")]
        public bool? GetPasswordData;

        /// <summary>
        /// If true, the launched EC2 instance will support hibernation.
        /// </summary>
        [Input("hibernation")]
        public bool? Hibernation;

        /// <summary>
        /// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
        /// </summary>
        [Input("hostId")]
        public string? HostId;

        /// <summary>
        /// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
        /// </summary>
        [Input("hostResourceGroupArn")]
        public string? HostResourceGroupArn;

        /// <summary>
        /// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
        /// </summary>
        [Input("iamInstanceProfile")]
        public string? IamInstanceProfile;

        /// <summary>
        /// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
        /// </summary>
        [Input("instanceInitiatedShutdownBehavior")]
        public string? InstanceInitiatedShutdownBehavior;

        /// <summary>
        /// Indicates whether this is a Spot Instance or a Scheduled Instance.
        /// </summary>
        [Input("instanceLifecycle")]
        public string? InstanceLifecycle;

        /// <summary>
        /// Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
        /// </summary>
        [Input("instanceMarketOptions")]
        public InstanceInstanceMarketOptions? InstanceMarketOptions;

        /// <summary>
        /// State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.
        /// </summary>
        [Input("instanceState")]
        public string? State;

        /// <summary>
        /// Instance type to use for the instance. Required unless `launch_template` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instance_type` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType;

        /// <summary>
        /// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
        /// </summary>
        [Input("ipv6AddressCount")]
        public int? Ipv6AddressCount;

        /// <summary>
        /// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
        /// </summary>
        [Input("ipv6Addresses")]
        public List<string>? Ipv6Addresses;

        /// <summary>
        /// Key name of the Key Pair to use for the instance; which can be managed using the `aws.ec2.KeyPair` resource.
        /// </summary>
        [Input("keyName")]
        public string? KeyName;

        /// <summary>
        /// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
        /// </summary>
        [Input("launchTemplate")]
        public InstanceLaunchTemplate? LaunchTemplate;

        /// <summary>
        /// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
        /// </summary>
        [Input("maintenanceOptions")]
        public InstanceMaintenanceOptions? MaintenanceOptions;

        /// <summary>
        /// Customize the metadata options of the instance. See Metadata Options below for more details.
        /// </summary>
        [Input("metadataOptions")]
        public InstanceMetadataOptions? MetadataOptions;

        /// <summary>
        /// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
        /// </summary>
        [Input("monitoring")]
        public bool? Monitoring;

        /// <summary>
        /// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
        /// </summary>
        [Input("networkInterfaces")]
        public List<InstanceNetworkInterface>? NetworkInterfaces;

        /// <summary>
        /// ARN of the Outpost the instance is assigned to.
        /// </summary>
        [Input("outpostArn")]
        public string? OutpostArn;

        /// <summary>
        /// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `get_password_data` is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
        /// </summary>
        [Input("passwordData")]
        public string? PasswordData;

        /// <summary>
        /// Placement Group to start the instance in.
        /// </summary>
        [Input("placementGroup")]
        public string? PlacementGroup;

        /// <summary>
        /// Number of the partition the instance is in. Valid only if the `aws.ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
        /// </summary>
        [Input("placementPartitionNumber")]
        public int? PlacementPartitionNumber;

        /// <summary>
        /// ID of the instance's primary network interface.
        /// </summary>
        [Input("primaryNetworkInterfaceId")]
        public string? PrimaryNetworkInterfaceId;

        /// <summary>
        /// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
        /// </summary>
        [Input("privateDns")]
        public string? PrivateDns;

        /// <summary>
        /// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
        /// </summary>
        [Input("privateDnsNameOptions")]
        public InstancePrivateDnsNameOptions? PrivateDnsNameOptions;

        /// <summary>
        /// Private IP address to associate with the instance in a VPC.
        /// </summary>
        [Input("privateIp")]
        public string? PrivateIp;

        /// <summary>
        /// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
        /// </summary>
        [Input("publicDns")]
        public string? PublicDns;

        /// <summary>
        /// Public IP address assigned to the instance, if applicable. **NOTE**: If you are using an `aws.ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `public_ip` as this field will change after the EIP is attached.
        /// </summary>
        [Input("publicIp")]
        public string? PublicIp;

        /// <summary>
        /// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
        /// </summary>
        [Input("rootBlockDevice")]
        public InstanceRootBlockDevice? RootBlockDevice;

        /// <summary>
        /// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `network_interface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
        /// </summary>
        [Input("secondaryPrivateIps")]
        public List<string>? SecondaryPrivateIps;

        /// <summary>
        /// List of security group names to associate with.
        /// 
        /// &gt; **NOTE:** If you are creating Instances in a VPC, use `vpc_security_group_ids` instead.
        /// </summary>
        [Input("securityGroups")]
        public List<string>? SecurityGroups;

        /// <summary>
        /// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
        /// </summary>
        [Input("sourceDestCheck")]
        public bool? SourceDestCheck;

        /// <summary>
        /// If the request is a Spot Instance request, the ID of the request.
        /// </summary>
        [Input("spotInstanceRequestId")]
        public string? SpotInstanceRequestId;

        /// <summary>
        /// VPC Subnet ID to launch in.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId;

        /// <summary>
        /// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
        /// </summary>
        [Input("tenancy")]
        public string? Tenancy;

        /// <summary>
        /// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `user_data_replace_on_change` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Input("userData")]
        public string? UserData;

        /// <summary>
        /// Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `user_data_replace_on_change` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Input("userDataBase64")]
        public string? UserDataBase64;

        /// <summary>
        /// When used in combination with `user_data` or `user_data_base64` will trigger a destroy and recreate of the EC2 instance when set to `true`. Defaults to `false` if not set.
        /// </summary>
        [Input("userDataReplaceOnChange")]
        public bool? UserDataReplaceOnChange;

        /// <summary>
        /// Map of tags to assign, at instance-creation time, to root and EBS volumes.
        /// 
        /// &gt; **NOTE:** Do not use `volume_tags` if you plan to manage block device tags outside the `aws.ec2.Instance` configuration, such as using `tags` in an `aws.ebs.Volume` resource attached via `aws.ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
        /// </summary>
        [Input("volumeTags")]
        public Dictionary<string, string>? VolumeTags;

        /// <summary>
        /// List of security group IDs to associate with.
        /// </summary>
        [Input("vpcSecurityGroupIds")]
        public List<string>? VpcSecurityGroupIds;
    }
}
