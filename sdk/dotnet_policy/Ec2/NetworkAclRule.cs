// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/networkAclRule:NetworkAclRule")]
    public sealed class NetworkAclRule : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).
        /// </summary>
        [Input("cidrBlock")]
        public string? CidrBlock;

        /// <summary>
        /// Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet). Default `false`.
        /// </summary>
        [Input("egress")]
        public bool? Egress;

        /// <summary>
        /// The from port to match.
        /// </summary>
        [Input("fromPort")]
        public int? FromPort;

        /// <summary>
        /// ICMP protocol: The ICMP code. Required if specifying ICMP for the protocolE.g., -1
        /// 
        /// &gt; **NOTE:** If the value of `protocol` is `-1` or `all`, the `from_port` and `to_port` values will be ignored and the rule will apply to all ports.
        /// 
        /// &gt; **NOTE:** If the value of `icmp_type` is `-1` (which results in a wildcard ICMP type), the `icmp_code` must also be set to `-1` (wildcard ICMP code).
        /// 
        /// &gt; Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
        /// </summary>
        [Input("icmpCode")]
        public int? IcmpCode;

        /// <summary>
        /// ICMP protocol: The ICMP type. Required if specifying ICMP for the protocolE.g., -1
        /// </summary>
        [Input("icmpType")]
        public int? IcmpType;

        /// <summary>
        /// The IPv6 CIDR block to allow or deny.
        /// </summary>
        [Input("ipv6CidrBlock")]
        public string? Ipv6CidrBlock;

        /// <summary>
        /// The ID of the network ACL.
        /// </summary>
        [Input("networkAclId")]
        public string? NetworkAclId;

        /// <summary>
        /// The protocol. A value of -1 means all protocols.
        /// </summary>
        [Input("protocol")]
        public string? Protocol;

        /// <summary>
        /// Indicates whether to allow or deny the traffic that matches the rule. Accepted values: `allow` | `deny`
        /// </summary>
        [Input("ruleAction")]
        public string? RuleAction;

        /// <summary>
        /// The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.
        /// </summary>
        [Input("ruleNumber")]
        public int? RuleNumber;

        /// <summary>
        /// The to port to match.
        /// </summary>
        [Input("toPort")]
        public int? ToPort;
    }
}
