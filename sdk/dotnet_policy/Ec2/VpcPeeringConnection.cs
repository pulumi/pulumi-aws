// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcPeeringConnection:VpcPeeringConnection")]
    public sealed class VpcPeeringConnection : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The status of the VPC Peering Connection request.
        /// </summary>
        [Input("acceptStatus")]
        public string? AcceptStatus;

        /// <summary>
        /// An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that accepts
        /// the peering connection (a maximum of one).
        /// </summary>
        [Input("accepter")]
        public VpcPeeringConnectionAccepter? Accepter;

        /// <summary>
        /// Accept the peering (both VPCs need to be in the same AWS account and region).
        /// </summary>
        [Input("autoAccept")]
        public bool? AutoAccept;

        /// <summary>
        /// The AWS account ID of the target peer VPC.
        /// Defaults to the account ID the [AWS provider][1] is currently connected to, so must be managed if connecting cross-account.
        /// </summary>
        [Input("peerOwnerId")]
        public string? PeerOwnerId;

        /// <summary>
        /// The region of the accepter VPC of the VPC Peering Connection. `auto_accept` must be `false`,
        /// and use the `aws.ec2.VpcPeeringConnectionAccepter` to manage the accepter side.
        /// </summary>
        [Input("peerRegion")]
        public string? PeerRegion;

        /// <summary>
        /// The ID of the target VPC with which you are creating the VPC Peering Connection.
        /// </summary>
        [Input("peerVpcId")]
        public string? PeerVpcId;

        /// <summary>
        /// A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requests
        /// the peering connection (a maximum of one).
        /// </summary>
        [Input("requester")]
        public VpcPeeringConnectionRequester? Requester;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The ID of the requester VPC.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId;
    }
}
