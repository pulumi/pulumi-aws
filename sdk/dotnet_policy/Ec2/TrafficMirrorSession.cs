// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/trafficMirrorSession:TrafficMirrorSession")]
    public sealed class TrafficMirrorSession : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the traffic mirror session.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A description of the traffic mirror session.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// ID of the source network interface. Not all network interfaces are eligible as mirror sources. On EC2 instances only nitro based instances support mirroring.
        /// </summary>
        [Input("networkInterfaceId")]
        public string? NetworkInterfaceId;

        /// <summary>
        /// The AWS account ID of the session owner.
        /// </summary>
        [Input("ownerId")]
        public string? OwnerId;

        /// <summary>
        /// The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror.
        /// </summary>
        [Input("packetLength")]
        public int? PacketLength;

        /// <summary>
        /// The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.
        /// </summary>
        [Input("sessionNumber")]
        public int? SessionNumber;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// ID of the traffic mirror filter to be used
        /// </summary>
        [Input("trafficMirrorFilterId")]
        public string? TrafficMirrorFilterId;

        /// <summary>
        /// ID of the traffic mirror target to be used
        /// </summary>
        [Input("trafficMirrorTargetId")]
        public string? TrafficMirrorTargetId;

        /// <summary>
        /// The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see RFC 7348. If you do not specify a VirtualNetworkId, an account-wide unique id is chosen at random.
        /// </summary>
        [Input("virtualNetworkId")]
        public int? VirtualNetworkId;
    }
}
