// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/securityGroupRule:SecurityGroupRule")]
    public sealed class SecurityGroupRule : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// List of CIDR blocks. Cannot be specified with `source_security_group_id` or `self`.
        /// </summary>
        [Input("cidrBlocks")]
        public List<string>? CidrBlocks;

        /// <summary>
        /// Description of the rule.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Start port (or ICMP type number if protocol is "icmp" or "icmpv6").
        /// </summary>
        [Input("fromPort")]
        public int? FromPort;

        /// <summary>
        /// List of IPv6 CIDR blocks. Cannot be specified with `source_security_group_id` or `self`.
        /// </summary>
        [Input("ipv6CidrBlocks")]
        public List<string>? Ipv6CidrBlocks;

        /// <summary>
        /// List of Prefix List IDs.
        /// </summary>
        [Input("prefixListIds")]
        public List<string>? PrefixListIds;

        /// <summary>
        /// Protocol. If not icmp, icmpv6, tcp, udp, or all use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
        /// </summary>
        [Input("protocol")]
        public string? Protocol;

        /// <summary>
        /// Security group to apply this rule to.
        /// </summary>
        [Input("securityGroupId")]
        public string? SecurityGroupId;

        /// <summary>
        /// If the `aws.ec2.SecurityGroupRule` resource has a single source or destination then this is the AWS Security Group Rule resource ID. Otherwise it is empty.
        /// </summary>
        [Input("securityGroupRuleId")]
        public string? SecurityGroupRuleId;

        /// <summary>
        /// Whether the security group itself will be added as a source to this ingress rule. Cannot be specified with `cidr_blocks`, `ipv6_cidr_blocks`, or `source_security_group_id`.
        /// </summary>
        [Input("self")]
        public bool? Self;

        /// <summary>
        /// Security group id to allow access to/from, depending on the `type`. Cannot be specified with `cidr_blocks`, `ipv6_cidr_blocks`, or `self`.
        /// </summary>
        [Input("sourceSecurityGroupId")]
        public string? SourceSecurityGroupId;

        /// <summary>
        /// End port (or ICMP code if protocol is "icmp").
        /// </summary>
        [Input("toPort")]
        public int? ToPort;

        /// <summary>
        /// Type of rule being created. Valid options are `ingress` (inbound)
        /// or `egress` (outbound).
        /// 
        /// The following arguments are optional:
        /// 
        /// &gt; **Note** Although `cidr_blocks`, `ipv6_cidr_blocks`, `prefix_list_ids`, and `source_security_group_id` are all marked as optional, you _must_ provide one of them in order to configure the source of the traffic.
        /// </summary>
        [Input("type")]
        public string? Type;
    }
}
