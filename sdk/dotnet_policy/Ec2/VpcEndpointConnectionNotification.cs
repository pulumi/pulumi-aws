// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ec2
{
    [PolicyResourceType("aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification")]
    public sealed class VpcEndpointConnectionNotification : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.
        /// 
        /// &gt; **NOTE:** One of `vpc_endpoint_service_id` or `vpc_endpoint_id` must be specified.
        /// </summary>
        [Input("connectionEvents")]
        public List<string>? ConnectionEvents;

        /// <summary>
        /// The ARN of the SNS topic for the notifications.
        /// </summary>
        [Input("connectionNotificationArn")]
        public string? ConnectionNotificationArn;

        /// <summary>
        /// The type of notification.
        /// </summary>
        [Input("notificationType")]
        public string? NotificationType;

        /// <summary>
        /// The state of the notification.
        /// </summary>
        [Input("state")]
        public string? State;

        /// <summary>
        /// The ID of the VPC Endpoint to receive notifications for.
        /// </summary>
        [Input("vpcEndpointId")]
        public string? VpcEndpointId;

        /// <summary>
        /// The ID of the VPC Endpoint Service to receive notifications for.
        /// </summary>
        [Input("vpcEndpointServiceId")]
        public string? VpcEndpointServiceId;
    }
}
