// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpenSearch
{
    [PolicyResourceType("aws:opensearch/serverlessCollection:ServerlessCollection")]
    public sealed class ServerlessCollection : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the collection.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Collection-specific endpoint used to submit index, search, and data upload requests to an OpenSearch Serverless collection.
        /// </summary>
        [Input("collectionEndpoint")]
        public string? CollectionEndpoint;

        /// <summary>
        /// Collection-specific endpoint used to access OpenSearch Dashboards.
        /// </summary>
        [Input("dashboardEndpoint")]
        public string? DashboardEndpoint;

        /// <summary>
        /// Description of the collection.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The ARN of the Amazon Web Services KMS key used to encrypt the collection.
        /// </summary>
        [Input("kmsKeyArn")]
        public string? KmsKeyArn;

        /// <summary>
        /// Name of the collection.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Indicates whether standby replicas should be used for a collection. One of `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
        /// </summary>
        [Input("standbyReplicas")]
        public string? StandbyReplicas;

        /// <summary>
        /// A map of tags to assign to the collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("timeouts")]
        public ServerlessCollectionTimeouts? Timeouts;

        /// <summary>
        /// Type of collection. One of `SEARCH`, `TIMESERIES`, or `VECTORSEARCH`. Defaults to `TIMESERIES`.
        /// </summary>
        [Input("type")]
        public string? Type;
    }
}
