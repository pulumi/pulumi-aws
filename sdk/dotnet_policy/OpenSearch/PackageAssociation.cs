// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpenSearch
{
    [PolicyResourceType("aws:opensearch/packageAssociation:PackageAssociation")]
    public sealed class PackageAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Name of the domain to associate the package with.
        /// </summary>
        [PolicyResourceProperty("domainName", "_mUnknown_DomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainName;
        private bool _mUnknown_DomainName;
        public string? DomainName
        {
            get
            {
                if (!_mUnknown_DomainName) return _mValue_DomainName;
                throw new UndeferrableValueException("Value 'PackageAssociation.DomainName' is not present");
            }
        }

        /// <summary>
        /// Internal ID of the package to associate with a domain.
        /// </summary>
        [PolicyResourceProperty("packageId", "_mUnknown_PackageId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PackageId;
        private bool _mUnknown_PackageId;
        public string? PackageId
        {
            get
            {
                if (!_mUnknown_PackageId) return _mValue_PackageId;
                throw new UndeferrableValueException("Value 'PackageAssociation.PackageId' is not present");
            }
        }

        [PolicyResourceProperty("referencePath", "_mUnknown_ReferencePath")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReferencePath;
        private bool _mUnknown_ReferencePath;
        public string? ReferencePath
        {
            get
            {
                if (!_mUnknown_ReferencePath) return _mValue_ReferencePath;
                throw new UndeferrableValueException("Value 'PackageAssociation.ReferencePath' is not present");
            }
        }
    }

    [PolicyResourceType("aws:opensearch/packageAssociation:PackageAssociation")]
    public sealed class PackageAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the domain to associate the package with.
        /// </summary>
        [PolicyResourceProperty("domainName", "_mUnknown_DomainName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainName;
        private bool _mUnknown_DomainName;
        public string? DomainName
        {
            get
            {
                if (!_mUnknown_DomainName) return _mValue_DomainName;
                throw new UndeferrableValueException("Value 'PackageAssociationArgs.DomainName' is not present");
            }
        }

        /// <summary>
        /// Internal ID of the package to associate with a domain.
        /// </summary>
        [PolicyResourceProperty("packageId", "_mUnknown_PackageId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PackageId;
        private bool _mUnknown_PackageId;
        public string? PackageId
        {
            get
            {
                if (!_mUnknown_PackageId) return _mValue_PackageId;
                throw new UndeferrableValueException("Value 'PackageAssociationArgs.PackageId' is not present");
            }
        }
    }
}
