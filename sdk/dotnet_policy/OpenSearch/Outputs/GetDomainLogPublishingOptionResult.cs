// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpenSearch.Outputs
{
    public sealed class GetDomainLogPublishingOptionResult
    {
        /// <summary>
        /// CloudWatch Log Group where the logs are published.
        /// </summary>
        [PolicyResourceProperty("cloudwatchLogGroupArn", "_mUnknown_CloudwatchLogGroupArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CloudwatchLogGroupArn;
        private bool _mUnknown_CloudwatchLogGroupArn;
        public string? CloudwatchLogGroupArn
        {
            get
            {
                if (!_mUnknown_CloudwatchLogGroupArn) return _mValue_CloudwatchLogGroupArn;
                throw new UndeferrableValueException("Value 'GetDomainLogPublishingOptionResult.CloudwatchLogGroupArn' is not present");
            }
        }

        /// <summary>
        /// Enabled disabled toggle for off-peak update window
        /// </summary>
        [PolicyResourceProperty("enabled", "_mUnknown_Enabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Enabled;
        private bool _mUnknown_Enabled;
        public bool? Enabled
        {
            get
            {
                if (!_mUnknown_Enabled) return _mValue_Enabled;
                throw new UndeferrableValueException("Value 'GetDomainLogPublishingOptionResult.Enabled' is not present");
            }
        }

        /// <summary>
        /// Type of OpenSearch log being published.
        /// </summary>
        [PolicyResourceProperty("logType", "_mUnknown_LogType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LogType;
        private bool _mUnknown_LogType;
        public string? LogType
        {
            get
            {
                if (!_mUnknown_LogType) return _mValue_LogType;
                throw new UndeferrableValueException("Value 'GetDomainLogPublishingOptionResult.LogType' is not present");
            }
        }
    }
}
