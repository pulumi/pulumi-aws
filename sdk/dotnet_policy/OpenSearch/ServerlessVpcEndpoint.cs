// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpenSearch
{
    [PolicyResourceType("aws:opensearch/serverlessVpcEndpoint:ServerlessVpcEndpoint")]
    public sealed class ServerlessVpcEndpoint : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Name of the interface endpoint.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpoint.Name' is not present");
            }
        }

        /// <summary>
        /// One or more security groups that define the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint. Up to 5 security groups can be provided.
        /// </summary>
        [PolicyResourceProperty("securityGroupIds", "_mUnknown_SecurityGroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroupIds;
        private bool _mUnknown_SecurityGroupIds;
        public List<string>? SecurityGroupIds
        {
            get
            {
                if (!_mUnknown_SecurityGroupIds) return _mValue_SecurityGroupIds;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpoint.SecurityGroupIds' is not present");
            }
        }

        /// <summary>
        /// One or more subnet IDs from which you'll access OpenSearch Serverless. Up to 6 subnets can be provided.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpoint.SubnetIds' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ServerlessVpcEndpointTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.ServerlessVpcEndpointTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpoint.Timeouts' is not present");
            }
        }

        /// <summary>
        /// ID of the VPC from which you'll access OpenSearch Serverless.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpoint.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:opensearch/serverlessVpcEndpoint:ServerlessVpcEndpoint")]
    public sealed class ServerlessVpcEndpointArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Name of the interface endpoint.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpointArgs.Name' is not present");
            }
        }

        /// <summary>
        /// One or more security groups that define the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint. Up to 5 security groups can be provided.
        /// </summary>
        [PolicyResourceProperty("securityGroupIds", "_mUnknown_SecurityGroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroupIds;
        private bool _mUnknown_SecurityGroupIds;
        public List<string>? SecurityGroupIds
        {
            get
            {
                if (!_mUnknown_SecurityGroupIds) return _mValue_SecurityGroupIds;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpointArgs.SecurityGroupIds' is not present");
            }
        }

        /// <summary>
        /// One or more subnet IDs from which you'll access OpenSearch Serverless. Up to 6 subnets can be provided.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpointArgs.SubnetIds' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ServerlessVpcEndpointTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.ServerlessVpcEndpointTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpointArgs.Timeouts' is not present");
            }
        }

        /// <summary>
        /// ID of the VPC from which you'll access OpenSearch Serverless.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'ServerlessVpcEndpointArgs.VpcId' is not present");
            }
        }
    }
}
