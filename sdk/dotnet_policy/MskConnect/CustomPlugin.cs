// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.MskConnect
{
    [PolicyResourceType("aws:mskconnect/customPlugin:CustomPlugin")]
    public sealed class CustomPlugin : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// the Amazon Resource Name (ARN) of the custom plugin.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'CustomPlugin.Arn' is not present");
            }
        }

        /// <summary>
        /// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
        /// </summary>
        [PolicyResourceProperty("contentType", "_mUnknown_ContentType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ContentType;
        private bool _mUnknown_ContentType;
        public string? ContentType
        {
            get
            {
                if (!_mUnknown_ContentType) return _mValue_ContentType;
                throw new UndeferrableValueException("Value 'CustomPlugin.ContentType' is not present");
            }
        }

        /// <summary>
        /// A summary description of the custom plugin.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'CustomPlugin.Description' is not present");
            }
        }

        /// <summary>
        /// an ID of the latest successfully created revision of the custom plugin.
        /// </summary>
        [PolicyResourceProperty("latestRevision", "_mUnknown_LatestRevision")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_LatestRevision;
        private bool _mUnknown_LatestRevision;
        public int? LatestRevision
        {
            get
            {
                if (!_mUnknown_LatestRevision) return _mValue_LatestRevision;
                throw new UndeferrableValueException("Value 'CustomPlugin.LatestRevision' is not present");
            }
        }

        /// <summary>
        /// Information about the location of a custom plugin. See `location` Block for details.
        /// </summary>
        [PolicyResourceProperty("location", "_mUnknown_Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.CustomPluginLocation? _mValue_Location;
        private bool _mUnknown_Location;
        public Outputs.CustomPluginLocation? Location
        {
            get
            {
                if (!_mUnknown_Location) return _mValue_Location;
                throw new UndeferrableValueException("Value 'CustomPlugin.Location' is not present");
            }
        }

        /// <summary>
        /// The name of the custom plugin..
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'CustomPlugin.Name' is not present");
            }
        }

        /// <summary>
        /// the state of the custom plugin.
        /// </summary>
        [PolicyResourceProperty("state", "_mUnknown_State")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_State;
        private bool _mUnknown_State;
        public string? State
        {
            get
            {
                if (!_mUnknown_State) return _mValue_State;
                throw new UndeferrableValueException("Value 'CustomPlugin.State' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'CustomPlugin.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'CustomPlugin.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:mskconnect/customPlugin:CustomPlugin")]
    public sealed class CustomPluginArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
        /// </summary>
        [PolicyResourceProperty("contentType", "_mUnknown_ContentType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ContentType;
        private bool _mUnknown_ContentType;
        public string? ContentType
        {
            get
            {
                if (!_mUnknown_ContentType) return _mValue_ContentType;
                throw new UndeferrableValueException("Value 'CustomPluginArgs.ContentType' is not present");
            }
        }

        /// <summary>
        /// A summary description of the custom plugin.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'CustomPluginArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Information about the location of a custom plugin. See `location` Block for details.
        /// </summary>
        [PolicyResourceProperty("location", "_mUnknown_Location")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.CustomPluginLocationArgs? _mValue_Location;
        private bool _mUnknown_Location;
        public Inputs.CustomPluginLocationArgs? Location
        {
            get
            {
                if (!_mUnknown_Location) return _mValue_Location;
                throw new UndeferrableValueException("Value 'CustomPluginArgs.Location' is not present");
            }
        }

        /// <summary>
        /// The name of the custom plugin..
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'CustomPluginArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'CustomPluginArgs.Tags' is not present");
            }
        }
    }
}
