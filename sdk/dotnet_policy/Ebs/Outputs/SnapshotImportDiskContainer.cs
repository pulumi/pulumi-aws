// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ebs.Outputs
{
    public sealed class SnapshotImportDiskContainer
    {
        /// <summary>
        /// The description of the disk image being imported.
        /// </summary>
        [Input("description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDescription;

        public string? Description => _mDescription.GetValue("description");

        /// <summary>
        /// The format of the disk image being imported. One of `VHD` or `VMDK`.
        /// </summary>
        [Input("format")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mFormat;

        public string? Format => _mFormat.GetValue("format");

        /// <summary>
        /// The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..). One of `url` or `user_bucket` must be set.
        /// </summary>
        [Input("url")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mUrl;

        public string? Url => _mUrl.GetValue("url");

        /// <summary>
        /// The Amazon S3 bucket for the disk image. One of `url` or `user_bucket` must be set. Detailed below.
        /// </summary>
        [Input("userBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.SnapshotImportDiskContainerUserBucket> _mUserBucket;

        public Outputs.SnapshotImportDiskContainerUserBucket? UserBucket => _mUserBucket.GetValue("userBucket");
    }
}
