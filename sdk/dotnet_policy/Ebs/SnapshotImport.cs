// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ebs
{
    [PolicyResourceType("aws:ebs/snapshotImport:SnapshotImport")]
    public sealed class SnapshotImport : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the EBS Snapshot.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'SnapshotImport.Arn' is not present");
            }
        }

        /// <summary>
        /// The client-specific data. Detailed below.
        /// </summary>
        [PolicyResourceProperty("clientData", "_mUnknown_ClientData")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.SnapshotImportClientData? _mValue_ClientData;
        private bool _mUnknown_ClientData;
        public Outputs.SnapshotImportClientData? ClientData
        {
            get
            {
                if (!_mUnknown_ClientData) return _mValue_ClientData;
                throw new UndeferrableValueException("Value 'SnapshotImport.ClientData' is not present");
            }
        }

        /// <summary>
        /// The data encryption key identifier for the snapshot.
        /// </summary>
        [PolicyResourceProperty("dataEncryptionKeyId", "_mUnknown_DataEncryptionKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DataEncryptionKeyId;
        private bool _mUnknown_DataEncryptionKeyId;
        public string? DataEncryptionKeyId
        {
            get
            {
                if (!_mUnknown_DataEncryptionKeyId) return _mValue_DataEncryptionKeyId;
                throw new UndeferrableValueException("Value 'SnapshotImport.DataEncryptionKeyId' is not present");
            }
        }

        /// <summary>
        /// The description string for the import snapshot task.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'SnapshotImport.Description' is not present");
            }
        }

        /// <summary>
        /// Information about the disk container. Detailed below.
        /// </summary>
        [PolicyResourceProperty("diskContainer", "_mUnknown_DiskContainer")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.SnapshotImportDiskContainer? _mValue_DiskContainer;
        private bool _mUnknown_DiskContainer;
        public Outputs.SnapshotImportDiskContainer? DiskContainer
        {
            get
            {
                if (!_mUnknown_DiskContainer) return _mValue_DiskContainer;
                throw new UndeferrableValueException("Value 'SnapshotImport.DiskContainer' is not present");
            }
        }

        /// <summary>
        /// Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using KmsKeyId.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public bool? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'SnapshotImport.Encrypted' is not present");
            }
        }

        /// <summary>
        /// An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'SnapshotImport.KmsKeyId' is not present");
            }
        }

        [PolicyResourceProperty("outpostArn", "_mUnknown_OutpostArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutpostArn;
        private bool _mUnknown_OutpostArn;
        public string? OutpostArn
        {
            get
            {
                if (!_mUnknown_OutpostArn) return _mValue_OutpostArn;
                throw new UndeferrableValueException("Value 'SnapshotImport.OutpostArn' is not present");
            }
        }

        /// <summary>
        /// Value from an Amazon-maintained list (`amazon`, `aws-marketplace`, `microsoft`) of snapshot owners.
        /// </summary>
        [PolicyResourceProperty("ownerAlias", "_mUnknown_OwnerAlias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerAlias;
        private bool _mUnknown_OwnerAlias;
        public string? OwnerAlias
        {
            get
            {
                if (!_mUnknown_OwnerAlias) return _mValue_OwnerAlias;
                throw new UndeferrableValueException("Value 'SnapshotImport.OwnerAlias' is not present");
            }
        }

        /// <summary>
        /// The AWS account ID of the EBS snapshot owner.
        /// </summary>
        [PolicyResourceProperty("ownerId", "_mUnknown_OwnerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OwnerId;
        private bool _mUnknown_OwnerId;
        public string? OwnerId
        {
            get
            {
                if (!_mUnknown_OwnerId) return _mValue_OwnerId;
                throw new UndeferrableValueException("Value 'SnapshotImport.OwnerId' is not present");
            }
        }

        /// <summary>
        /// Indicates whether to permanently restore an archived snapshot.
        /// </summary>
        [PolicyResourceProperty("permanentRestore", "_mUnknown_PermanentRestore")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PermanentRestore;
        private bool _mUnknown_PermanentRestore;
        public bool? PermanentRestore
        {
            get
            {
                if (!_mUnknown_PermanentRestore) return _mValue_PermanentRestore;
                throw new UndeferrableValueException("Value 'SnapshotImport.PermanentRestore' is not present");
            }
        }

        /// <summary>
        /// The name of the IAM Role the VM Import/Export service will assume. This role needs certain permissions. See https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-role. Default: `vmimport`
        /// </summary>
        [PolicyResourceProperty("roleName", "_mUnknown_RoleName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleName;
        private bool _mUnknown_RoleName;
        public string? RoleName
        {
            get
            {
                if (!_mUnknown_RoleName) return _mValue_RoleName;
                throw new UndeferrableValueException("Value 'SnapshotImport.RoleName' is not present");
            }
        }

        /// <summary>
        /// The name of the storage tier. Valid values are `archive` and `standard`. Default value is `standard`.
        /// </summary>
        [PolicyResourceProperty("storageTier", "_mUnknown_StorageTier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StorageTier;
        private bool _mUnknown_StorageTier;
        public string? StorageTier
        {
            get
            {
                if (!_mUnknown_StorageTier) return _mValue_StorageTier;
                throw new UndeferrableValueException("Value 'SnapshotImport.StorageTier' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the snapshot.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'SnapshotImport.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'SnapshotImport.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
        /// </summary>
        [PolicyResourceProperty("temporaryRestoreDays", "_mUnknown_TemporaryRestoreDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_TemporaryRestoreDays;
        private bool _mUnknown_TemporaryRestoreDays;
        public int? TemporaryRestoreDays
        {
            get
            {
                if (!_mUnknown_TemporaryRestoreDays) return _mValue_TemporaryRestoreDays;
                throw new UndeferrableValueException("Value 'SnapshotImport.TemporaryRestoreDays' is not present");
            }
        }

        [PolicyResourceProperty("volumeId", "_mUnknown_VolumeId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VolumeId;
        private bool _mUnknown_VolumeId;
        public string? VolumeId
        {
            get
            {
                if (!_mUnknown_VolumeId) return _mValue_VolumeId;
                throw new UndeferrableValueException("Value 'SnapshotImport.VolumeId' is not present");
            }
        }

        /// <summary>
        /// The size of the drive in GiBs.
        /// </summary>
        [PolicyResourceProperty("volumeSize", "_mUnknown_VolumeSize")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_VolumeSize;
        private bool _mUnknown_VolumeSize;
        public int? VolumeSize
        {
            get
            {
                if (!_mUnknown_VolumeSize) return _mValue_VolumeSize;
                throw new UndeferrableValueException("Value 'SnapshotImport.VolumeSize' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ebs/snapshotImport:SnapshotImport")]
    public sealed class SnapshotImportArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The client-specific data. Detailed below.
        /// </summary>
        [PolicyResourceProperty("clientData", "_mUnknown_ClientData")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.SnapshotImportClientDataArgs? _mValue_ClientData;
        private bool _mUnknown_ClientData;
        public Inputs.SnapshotImportClientDataArgs? ClientData
        {
            get
            {
                if (!_mUnknown_ClientData) return _mValue_ClientData;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.ClientData' is not present");
            }
        }

        /// <summary>
        /// The description string for the import snapshot task.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Information about the disk container. Detailed below.
        /// </summary>
        [PolicyResourceProperty("diskContainer", "_mUnknown_DiskContainer")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.SnapshotImportDiskContainerArgs? _mValue_DiskContainer;
        private bool _mUnknown_DiskContainer;
        public Inputs.SnapshotImportDiskContainerArgs? DiskContainer
        {
            get
            {
                if (!_mUnknown_DiskContainer) return _mValue_DiskContainer;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.DiskContainer' is not present");
            }
        }

        /// <summary>
        /// Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using KmsKeyId.
        /// </summary>
        [PolicyResourceProperty("encrypted", "_mUnknown_Encrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_Encrypted;
        private bool _mUnknown_Encrypted;
        public bool? Encrypted
        {
            get
            {
                if (!_mUnknown_Encrypted) return _mValue_Encrypted;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.Encrypted' is not present");
            }
        }

        /// <summary>
        /// An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a KmsKeyId is specified, the Encrypted flag must also be set.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// Indicates whether to permanently restore an archived snapshot.
        /// </summary>
        [PolicyResourceProperty("permanentRestore", "_mUnknown_PermanentRestore")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PermanentRestore;
        private bool _mUnknown_PermanentRestore;
        public bool? PermanentRestore
        {
            get
            {
                if (!_mUnknown_PermanentRestore) return _mValue_PermanentRestore;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.PermanentRestore' is not present");
            }
        }

        /// <summary>
        /// The name of the IAM Role the VM Import/Export service will assume. This role needs certain permissions. See https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-role. Default: `vmimport`
        /// </summary>
        [PolicyResourceProperty("roleName", "_mUnknown_RoleName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleName;
        private bool _mUnknown_RoleName;
        public string? RoleName
        {
            get
            {
                if (!_mUnknown_RoleName) return _mValue_RoleName;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.RoleName' is not present");
            }
        }

        /// <summary>
        /// The name of the storage tier. Valid values are `archive` and `standard`. Default value is `standard`.
        /// </summary>
        [PolicyResourceProperty("storageTier", "_mUnknown_StorageTier")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StorageTier;
        private bool _mUnknown_StorageTier;
        public string? StorageTier
        {
            get
            {
                if (!_mUnknown_StorageTier) return _mValue_StorageTier;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.StorageTier' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the snapshot.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
        /// </summary>
        [PolicyResourceProperty("temporaryRestoreDays", "_mUnknown_TemporaryRestoreDays")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_TemporaryRestoreDays;
        private bool _mUnknown_TemporaryRestoreDays;
        public int? TemporaryRestoreDays
        {
            get
            {
                if (!_mUnknown_TemporaryRestoreDays) return _mValue_TemporaryRestoreDays;
                throw new UndeferrableValueException("Value 'SnapshotImportArgs.TemporaryRestoreDays' is not present");
            }
        }
    }
}
