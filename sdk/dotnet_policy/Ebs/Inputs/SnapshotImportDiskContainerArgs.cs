// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ebs.Inputs
{
    public sealed class SnapshotImportDiskContainerArgs
    {
        /// <summary>
        /// The description of the disk image being imported.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'SnapshotImportDiskContainerArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The format of the disk image being imported. One of `VHD` or `VMDK`.
        /// </summary>
        [PolicyResourceProperty("format", "_mUnknown_Format")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Format;
        private bool _mUnknown_Format;
        public string? Format
        {
            get
            {
                if (!_mUnknown_Format) return _mValue_Format;
                throw new UndeferrableValueException("Value 'SnapshotImportDiskContainerArgs.Format' is not present");
            }
        }

        /// <summary>
        /// The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..). One of `url` or `user_bucket` must be set.
        /// </summary>
        [PolicyResourceProperty("url", "_mUnknown_Url")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Url;
        private bool _mUnknown_Url;
        public string? Url
        {
            get
            {
                if (!_mUnknown_Url) return _mValue_Url;
                throw new UndeferrableValueException("Value 'SnapshotImportDiskContainerArgs.Url' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 bucket for the disk image. One of `url` or `user_bucket` must be set. Detailed below.
        /// </summary>
        [PolicyResourceProperty("userBucket", "_mUnknown_UserBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.SnapshotImportDiskContainerUserBucketArgs? _mValue_UserBucket;
        private bool _mUnknown_UserBucket;
        public Inputs.SnapshotImportDiskContainerUserBucketArgs? UserBucket
        {
            get
            {
                if (!_mUnknown_UserBucket) return _mValue_UserBucket;
                throw new UndeferrableValueException("Value 'SnapshotImportDiskContainerArgs.UserBucket' is not present");
            }
        }
    }
}
