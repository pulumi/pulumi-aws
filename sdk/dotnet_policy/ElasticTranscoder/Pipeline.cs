// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElasticTranscoder
{
    [PolicyResourceType("aws:elastictranscoder/pipeline:Pipeline")]
    public sealed class Pipeline : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The ARN of the Elastictranscoder pipeline.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Pipeline.Arn' is not present");
            }
        }

        /// <summary>
        /// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
        /// </summary>
        [PolicyResourceProperty("awsKmsKeyArn", "_mUnknown_AwsKmsKeyArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsKmsKeyArn;
        private bool _mUnknown_AwsKmsKeyArn;
        public string? AwsKmsKeyArn
        {
            get
            {
                if (!_mUnknown_AwsKmsKeyArn) return _mValue_AwsKmsKeyArn;
                throw new UndeferrableValueException("Value 'Pipeline.AwsKmsKeyArn' is not present");
            }
        }

        /// <summary>
        /// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
        /// </summary>
        [PolicyResourceProperty("contentConfig", "_mUnknown_ContentConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.PipelineContentConfig? _mValue_ContentConfig;
        private bool _mUnknown_ContentConfig;
        public Outputs.PipelineContentConfig? ContentConfig
        {
            get
            {
                if (!_mUnknown_ContentConfig) return _mValue_ContentConfig;
                throw new UndeferrableValueException("Value 'Pipeline.ContentConfig' is not present");
            }
        }

        /// <summary>
        /// The permissions for the `content_config` object. (documented below)
        /// </summary>
        [PolicyResourceProperty("contentConfigPermissions", "_mUnknown_ContentConfigPermissions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.PipelineContentConfigPermission>? _mValue_ContentConfigPermissions;
        private bool _mUnknown_ContentConfigPermissions;
        public List<Outputs.PipelineContentConfigPermission>? ContentConfigPermissions
        {
            get
            {
                if (!_mUnknown_ContentConfigPermissions) return _mValue_ContentConfigPermissions;
                throw new UndeferrableValueException("Value 'Pipeline.ContentConfigPermissions' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
        /// </summary>
        [PolicyResourceProperty("inputBucket", "_mUnknown_InputBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InputBucket;
        private bool _mUnknown_InputBucket;
        public string? InputBucket
        {
            get
            {
                if (!_mUnknown_InputBucket) return _mValue_InputBucket;
                throw new UndeferrableValueException("Value 'Pipeline.InputBucket' is not present");
            }
        }

        /// <summary>
        /// The name of the pipeline. Maximum 40 characters
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Pipeline.Name' is not present");
            }
        }

        /// <summary>
        /// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
        /// </summary>
        [PolicyResourceProperty("notifications", "_mUnknown_Notifications")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.PipelineNotifications? _mValue_Notifications;
        private bool _mUnknown_Notifications;
        public Outputs.PipelineNotifications? Notifications
        {
            get
            {
                if (!_mUnknown_Notifications) return _mValue_Notifications;
                throw new UndeferrableValueException("Value 'Pipeline.Notifications' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
        /// </summary>
        [PolicyResourceProperty("outputBucket", "_mUnknown_OutputBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutputBucket;
        private bool _mUnknown_OutputBucket;
        public string? OutputBucket
        {
            get
            {
                if (!_mUnknown_OutputBucket) return _mValue_OutputBucket;
                throw new UndeferrableValueException("Value 'Pipeline.OutputBucket' is not present");
            }
        }

        /// <summary>
        /// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
        /// </summary>
        [PolicyResourceProperty("role", "_mUnknown_Role")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Role;
        private bool _mUnknown_Role;
        public string? Role
        {
            get
            {
                if (!_mUnknown_Role) return _mValue_Role;
                throw new UndeferrableValueException("Value 'Pipeline.Role' is not present");
            }
        }

        /// <summary>
        /// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
        /// </summary>
        [PolicyResourceProperty("thumbnailConfig", "_mUnknown_ThumbnailConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.PipelineThumbnailConfig? _mValue_ThumbnailConfig;
        private bool _mUnknown_ThumbnailConfig;
        public Outputs.PipelineThumbnailConfig? ThumbnailConfig
        {
            get
            {
                if (!_mUnknown_ThumbnailConfig) return _mValue_ThumbnailConfig;
                throw new UndeferrableValueException("Value 'Pipeline.ThumbnailConfig' is not present");
            }
        }

        /// <summary>
        /// The permissions for the `thumbnail_config` object. (documented below)
        /// 
        /// The `content_config` object specifies information about the Amazon S3 bucket in
        /// which you want Elastic Transcoder to save transcoded files and playlists: which
        /// bucket to use, and the storage class that you want to assign to the files. If
        /// you specify values for `content_config`, you must also specify values for
        /// `thumbnail_config`. If you specify values for `content_config` and
        /// `thumbnail_config`, omit the `output_bucket` object.
        /// </summary>
        [PolicyResourceProperty("thumbnailConfigPermissions", "_mUnknown_ThumbnailConfigPermissions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.PipelineThumbnailConfigPermission>? _mValue_ThumbnailConfigPermissions;
        private bool _mUnknown_ThumbnailConfigPermissions;
        public List<Outputs.PipelineThumbnailConfigPermission>? ThumbnailConfigPermissions
        {
            get
            {
                if (!_mUnknown_ThumbnailConfigPermissions) return _mValue_ThumbnailConfigPermissions;
                throw new UndeferrableValueException("Value 'Pipeline.ThumbnailConfigPermissions' is not present");
            }
        }
    }

    [PolicyResourceType("aws:elastictranscoder/pipeline:Pipeline")]
    public sealed class PipelineArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
        /// </summary>
        [PolicyResourceProperty("awsKmsKeyArn", "_mUnknown_AwsKmsKeyArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AwsKmsKeyArn;
        private bool _mUnknown_AwsKmsKeyArn;
        public string? AwsKmsKeyArn
        {
            get
            {
                if (!_mUnknown_AwsKmsKeyArn) return _mValue_AwsKmsKeyArn;
                throw new UndeferrableValueException("Value 'PipelineArgs.AwsKmsKeyArn' is not present");
            }
        }

        /// <summary>
        /// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
        /// </summary>
        [PolicyResourceProperty("contentConfig", "_mUnknown_ContentConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PipelineContentConfigArgs? _mValue_ContentConfig;
        private bool _mUnknown_ContentConfig;
        public Inputs.PipelineContentConfigArgs? ContentConfig
        {
            get
            {
                if (!_mUnknown_ContentConfig) return _mValue_ContentConfig;
                throw new UndeferrableValueException("Value 'PipelineArgs.ContentConfig' is not present");
            }
        }

        /// <summary>
        /// The permissions for the `content_config` object. (documented below)
        /// </summary>
        [PolicyResourceProperty("contentConfigPermissions", "_mUnknown_ContentConfigPermissions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PipelineContentConfigPermissionArgs>? _mValue_ContentConfigPermissions;
        private bool _mUnknown_ContentConfigPermissions;
        public List<Inputs.PipelineContentConfigPermissionArgs>? ContentConfigPermissions
        {
            get
            {
                if (!_mUnknown_ContentConfigPermissions) return _mValue_ContentConfigPermissions;
                throw new UndeferrableValueException("Value 'PipelineArgs.ContentConfigPermissions' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
        /// </summary>
        [PolicyResourceProperty("inputBucket", "_mUnknown_InputBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InputBucket;
        private bool _mUnknown_InputBucket;
        public string? InputBucket
        {
            get
            {
                if (!_mUnknown_InputBucket) return _mValue_InputBucket;
                throw new UndeferrableValueException("Value 'PipelineArgs.InputBucket' is not present");
            }
        }

        /// <summary>
        /// The name of the pipeline. Maximum 40 characters
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'PipelineArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
        /// </summary>
        [PolicyResourceProperty("notifications", "_mUnknown_Notifications")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PipelineNotificationsArgs? _mValue_Notifications;
        private bool _mUnknown_Notifications;
        public Inputs.PipelineNotificationsArgs? Notifications
        {
            get
            {
                if (!_mUnknown_Notifications) return _mValue_Notifications;
                throw new UndeferrableValueException("Value 'PipelineArgs.Notifications' is not present");
            }
        }

        /// <summary>
        /// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
        /// </summary>
        [PolicyResourceProperty("outputBucket", "_mUnknown_OutputBucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_OutputBucket;
        private bool _mUnknown_OutputBucket;
        public string? OutputBucket
        {
            get
            {
                if (!_mUnknown_OutputBucket) return _mValue_OutputBucket;
                throw new UndeferrableValueException("Value 'PipelineArgs.OutputBucket' is not present");
            }
        }

        /// <summary>
        /// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
        /// </summary>
        [PolicyResourceProperty("role", "_mUnknown_Role")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Role;
        private bool _mUnknown_Role;
        public string? Role
        {
            get
            {
                if (!_mUnknown_Role) return _mValue_Role;
                throw new UndeferrableValueException("Value 'PipelineArgs.Role' is not present");
            }
        }

        /// <summary>
        /// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
        /// </summary>
        [PolicyResourceProperty("thumbnailConfig", "_mUnknown_ThumbnailConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PipelineThumbnailConfigArgs? _mValue_ThumbnailConfig;
        private bool _mUnknown_ThumbnailConfig;
        public Inputs.PipelineThumbnailConfigArgs? ThumbnailConfig
        {
            get
            {
                if (!_mUnknown_ThumbnailConfig) return _mValue_ThumbnailConfig;
                throw new UndeferrableValueException("Value 'PipelineArgs.ThumbnailConfig' is not present");
            }
        }

        /// <summary>
        /// The permissions for the `thumbnail_config` object. (documented below)
        /// 
        /// The `content_config` object specifies information about the Amazon S3 bucket in
        /// which you want Elastic Transcoder to save transcoded files and playlists: which
        /// bucket to use, and the storage class that you want to assign to the files. If
        /// you specify values for `content_config`, you must also specify values for
        /// `thumbnail_config`. If you specify values for `content_config` and
        /// `thumbnail_config`, omit the `output_bucket` object.
        /// </summary>
        [PolicyResourceProperty("thumbnailConfigPermissions", "_mUnknown_ThumbnailConfigPermissions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PipelineThumbnailConfigPermissionArgs>? _mValue_ThumbnailConfigPermissions;
        private bool _mUnknown_ThumbnailConfigPermissions;
        public List<Inputs.PipelineThumbnailConfigPermissionArgs>? ThumbnailConfigPermissions
        {
            get
            {
                if (!_mUnknown_ThumbnailConfigPermissions) return _mValue_ThumbnailConfigPermissions;
                throw new UndeferrableValueException("Value 'PipelineArgs.ThumbnailConfigPermissions' is not present");
            }
        }
    }
}
