// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElasticTranscoder.Outputs
{
    public sealed class PresetVideoWatermark
    {
        /// <summary>
        /// The horizontal position of the watermark unless you specify a nonzero value for `horzontal_offset`.
        /// </summary>
        [PolicyResourceProperty("horizontalAlign", "_mUnknown_HorizontalAlign")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HorizontalAlign;
        private bool _mUnknown_HorizontalAlign;
        public string? HorizontalAlign
        {
            get
            {
                if (!_mUnknown_HorizontalAlign) return _mValue_HorizontalAlign;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.HorizontalAlign' is not present");
            }
        }

        /// <summary>
        /// The amount by which you want the horizontal position of the watermark to be offset from the position specified by `horizontal_align`.
        /// </summary>
        [PolicyResourceProperty("horizontalOffset", "_mUnknown_HorizontalOffset")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HorizontalOffset;
        private bool _mUnknown_HorizontalOffset;
        public string? HorizontalOffset
        {
            get
            {
                if (!_mUnknown_HorizontalOffset) return _mValue_HorizontalOffset;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.HorizontalOffset' is not present");
            }
        }

        /// <summary>
        /// A unique identifier for the settings for one watermark. The value of Id can be up to 40 characters long. You can specify settings for up to four watermarks.
        /// </summary>
        [PolicyResourceProperty("id", "_mUnknown_Id")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Id;
        private bool _mUnknown_Id;
        public string? Id
        {
            get
            {
                if (!_mUnknown_Id) return _mValue_Id;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.Id' is not present");
            }
        }

        /// <summary>
        /// The maximum height of the watermark.
        /// </summary>
        [PolicyResourceProperty("maxHeight", "_mUnknown_MaxHeight")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MaxHeight;
        private bool _mUnknown_MaxHeight;
        public string? MaxHeight
        {
            get
            {
                if (!_mUnknown_MaxHeight) return _mValue_MaxHeight;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.MaxHeight' is not present");
            }
        }

        /// <summary>
        /// The maximum width of the watermark.
        /// </summary>
        [PolicyResourceProperty("maxWidth", "_mUnknown_MaxWidth")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MaxWidth;
        private bool _mUnknown_MaxWidth;
        public string? MaxWidth
        {
            get
            {
                if (!_mUnknown_MaxWidth) return _mValue_MaxWidth;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.MaxWidth' is not present");
            }
        }

        /// <summary>
        /// A percentage that indicates how much you want a watermark to obscure the video in the location where it appears.
        /// </summary>
        [PolicyResourceProperty("opacity", "_mUnknown_Opacity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Opacity;
        private bool _mUnknown_Opacity;
        public string? Opacity
        {
            get
            {
                if (!_mUnknown_Opacity) return _mValue_Opacity;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.Opacity' is not present");
            }
        }

        /// <summary>
        /// A value that controls scaling of the watermark. Valid values are: `Fit`, `Stretch`, `ShrinkToFit`
        /// </summary>
        [PolicyResourceProperty("sizingPolicy", "_mUnknown_SizingPolicy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SizingPolicy;
        private bool _mUnknown_SizingPolicy;
        public string? SizingPolicy
        {
            get
            {
                if (!_mUnknown_SizingPolicy) return _mValue_SizingPolicy;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.SizingPolicy' is not present");
            }
        }

        /// <summary>
        /// A value that determines how Elastic Transcoder interprets values that you specified for `video_watermarks.horizontal_offset`, `video_watermarks.vertical_offset`, `video_watermarks.max_width`, and `video_watermarks.max_height`. Valid values are `Content` and `Frame`.
        /// </summary>
        [PolicyResourceProperty("target", "_mUnknown_Target")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Target;
        private bool _mUnknown_Target;
        public string? Target
        {
            get
            {
                if (!_mUnknown_Target) return _mValue_Target;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.Target' is not present");
            }
        }

        /// <summary>
        /// The vertical position of the watermark unless you specify a nonzero value for `vertical_align`. Valid values are `Top`, `Bottom`, `Center`.
        /// </summary>
        [PolicyResourceProperty("verticalAlign", "_mUnknown_VerticalAlign")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VerticalAlign;
        private bool _mUnknown_VerticalAlign;
        public string? VerticalAlign
        {
            get
            {
                if (!_mUnknown_VerticalAlign) return _mValue_VerticalAlign;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.VerticalAlign' is not present");
            }
        }

        /// <summary>
        /// The amount by which you want the vertical position of the watermark to be offset from the position specified by `vertical_align`
        /// </summary>
        [PolicyResourceProperty("verticalOffset", "_mUnknown_VerticalOffset")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VerticalOffset;
        private bool _mUnknown_VerticalOffset;
        public string? VerticalOffset
        {
            get
            {
                if (!_mUnknown_VerticalOffset) return _mValue_VerticalOffset;
                throw new UndeferrableValueException("Value 'PresetVideoWatermark.VerticalOffset' is not present");
            }
        }
    }
}
