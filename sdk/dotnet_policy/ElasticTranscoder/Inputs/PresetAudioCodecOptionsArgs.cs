// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElasticTranscoder.Inputs
{
    public sealed class PresetAudioCodecOptionsArgs
    {
        /// <summary>
        /// The bit depth of a sample is how many bits of information are included in the audio samples. Valid values are `16` and `24`. (FLAC/PCM Only)
        /// </summary>
        [Input("bitDepth")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mBitDepth;

        public string? BitDepth => _mBitDepth.GetValue("bitDepth");

        /// <summary>
        /// The order the bits of a PCM sample are stored in. The supported value is LittleEndian. (PCM Only)
        /// </summary>
        [Input("bitOrder")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mBitOrder;

        public string? BitOrder => _mBitOrder.GetValue("bitOrder");

        /// <summary>
        /// If you specified AAC for Audio:Codec, choose the AAC profile for the output file.
        /// </summary>
        [Input("profile")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mProfile;

        public string? Profile => _mProfile.GetValue("profile");

        /// <summary>
        /// Whether audio samples are represented with negative and positive numbers (signed) or only positive numbers (unsigned). The supported value is Signed. (PCM Only)
        /// </summary>
        [Input("signed")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mSigned;

        public string? Signed => _mSigned.GetValue("signed");
    }
}
