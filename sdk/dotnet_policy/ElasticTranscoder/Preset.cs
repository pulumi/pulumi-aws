// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElasticTranscoder
{
    [PolicyResourceType("aws:elastictranscoder/preset:Preset")]
    public sealed class Preset : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Elastic Transcoder Preset.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Preset.Arn' is not present");
            }
        }

        /// <summary>
        /// Audio parameters object (documented below).
        /// </summary>
        [PolicyResourceProperty("audio", "_mUnknown_Audio")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.PresetAudio? _mValue_Audio;
        private bool _mUnknown_Audio;
        public Outputs.PresetAudio? Audio
        {
            get
            {
                if (!_mUnknown_Audio) return _mValue_Audio;
                throw new UndeferrableValueException("Value 'Preset.Audio' is not present");
            }
        }

        /// <summary>
        /// Codec options for the audio parameters (documented below)
        /// </summary>
        [PolicyResourceProperty("audioCodecOptions", "_mUnknown_AudioCodecOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.PresetAudioCodecOptions? _mValue_AudioCodecOptions;
        private bool _mUnknown_AudioCodecOptions;
        public Outputs.PresetAudioCodecOptions? AudioCodecOptions
        {
            get
            {
                if (!_mUnknown_AudioCodecOptions) return _mValue_AudioCodecOptions;
                throw new UndeferrableValueException("Value 'Preset.AudioCodecOptions' is not present");
            }
        }

        /// <summary>
        /// The container type for the output file. Valid values are `flac`, `flv`, `fmp4`, `gif`, `mp3`, `mp4`, `mpg`, `mxf`, `oga`, `ogg`, `ts`, and `webm`.
        /// </summary>
        [PolicyResourceProperty("container", "_mUnknown_Container")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Container;
        private bool _mUnknown_Container;
        public string? Container
        {
            get
            {
                if (!_mUnknown_Container) return _mValue_Container;
                throw new UndeferrableValueException("Value 'Preset.Container' is not present");
            }
        }

        /// <summary>
        /// A description of the preset (maximum 255 characters)
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Preset.Description' is not present");
            }
        }

        /// <summary>
        /// The name of the preset. (maximum 40 characters)
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Preset.Name' is not present");
            }
        }

        /// <summary>
        /// Thumbnail parameters object (documented below)
        /// </summary>
        [PolicyResourceProperty("thumbnails", "_mUnknown_Thumbnails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.PresetThumbnails? _mValue_Thumbnails;
        private bool _mUnknown_Thumbnails;
        public Outputs.PresetThumbnails? Thumbnails
        {
            get
            {
                if (!_mUnknown_Thumbnails) return _mValue_Thumbnails;
                throw new UndeferrableValueException("Value 'Preset.Thumbnails' is not present");
            }
        }

        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'Preset.Type' is not present");
            }
        }

        /// <summary>
        /// Video parameters object (documented below)
        /// </summary>
        [PolicyResourceProperty("video", "_mUnknown_Video")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.PresetVideo? _mValue_Video;
        private bool _mUnknown_Video;
        public Outputs.PresetVideo? Video
        {
            get
            {
                if (!_mUnknown_Video) return _mValue_Video;
                throw new UndeferrableValueException("Value 'Preset.Video' is not present");
            }
        }

        /// <summary>
        /// Codec options for the video parameters
        /// </summary>
        [PolicyResourceProperty("videoCodecOptions", "_mUnknown_VideoCodecOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_VideoCodecOptions;
        private bool _mUnknown_VideoCodecOptions;
        public Dictionary<string, string>? VideoCodecOptions
        {
            get
            {
                if (!_mUnknown_VideoCodecOptions) return _mValue_VideoCodecOptions;
                throw new UndeferrableValueException("Value 'Preset.VideoCodecOptions' is not present");
            }
        }

        /// <summary>
        /// Watermark parameters for the video parameters (documented below)
        /// </summary>
        [PolicyResourceProperty("videoWatermarks", "_mUnknown_VideoWatermarks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.PresetVideoWatermark>? _mValue_VideoWatermarks;
        private bool _mUnknown_VideoWatermarks;
        public List<Outputs.PresetVideoWatermark>? VideoWatermarks
        {
            get
            {
                if (!_mUnknown_VideoWatermarks) return _mValue_VideoWatermarks;
                throw new UndeferrableValueException("Value 'Preset.VideoWatermarks' is not present");
            }
        }
    }

    [PolicyResourceType("aws:elastictranscoder/preset:Preset")]
    public sealed class PresetArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Audio parameters object (documented below).
        /// </summary>
        [PolicyResourceProperty("audio", "_mUnknown_Audio")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PresetAudioArgs? _mValue_Audio;
        private bool _mUnknown_Audio;
        public Inputs.PresetAudioArgs? Audio
        {
            get
            {
                if (!_mUnknown_Audio) return _mValue_Audio;
                throw new UndeferrableValueException("Value 'PresetArgs.Audio' is not present");
            }
        }

        /// <summary>
        /// Codec options for the audio parameters (documented below)
        /// </summary>
        [PolicyResourceProperty("audioCodecOptions", "_mUnknown_AudioCodecOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PresetAudioCodecOptionsArgs? _mValue_AudioCodecOptions;
        private bool _mUnknown_AudioCodecOptions;
        public Inputs.PresetAudioCodecOptionsArgs? AudioCodecOptions
        {
            get
            {
                if (!_mUnknown_AudioCodecOptions) return _mValue_AudioCodecOptions;
                throw new UndeferrableValueException("Value 'PresetArgs.AudioCodecOptions' is not present");
            }
        }

        /// <summary>
        /// The container type for the output file. Valid values are `flac`, `flv`, `fmp4`, `gif`, `mp3`, `mp4`, `mpg`, `mxf`, `oga`, `ogg`, `ts`, and `webm`.
        /// </summary>
        [PolicyResourceProperty("container", "_mUnknown_Container")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Container;
        private bool _mUnknown_Container;
        public string? Container
        {
            get
            {
                if (!_mUnknown_Container) return _mValue_Container;
                throw new UndeferrableValueException("Value 'PresetArgs.Container' is not present");
            }
        }

        /// <summary>
        /// A description of the preset (maximum 255 characters)
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'PresetArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The name of the preset. (maximum 40 characters)
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'PresetArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Thumbnail parameters object (documented below)
        /// </summary>
        [PolicyResourceProperty("thumbnails", "_mUnknown_Thumbnails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PresetThumbnailsArgs? _mValue_Thumbnails;
        private bool _mUnknown_Thumbnails;
        public Inputs.PresetThumbnailsArgs? Thumbnails
        {
            get
            {
                if (!_mUnknown_Thumbnails) return _mValue_Thumbnails;
                throw new UndeferrableValueException("Value 'PresetArgs.Thumbnails' is not present");
            }
        }

        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'PresetArgs.Type' is not present");
            }
        }

        /// <summary>
        /// Video parameters object (documented below)
        /// </summary>
        [PolicyResourceProperty("video", "_mUnknown_Video")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.PresetVideoArgs? _mValue_Video;
        private bool _mUnknown_Video;
        public Inputs.PresetVideoArgs? Video
        {
            get
            {
                if (!_mUnknown_Video) return _mValue_Video;
                throw new UndeferrableValueException("Value 'PresetArgs.Video' is not present");
            }
        }

        /// <summary>
        /// Codec options for the video parameters
        /// </summary>
        [PolicyResourceProperty("videoCodecOptions", "_mUnknown_VideoCodecOptions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_VideoCodecOptions;
        private bool _mUnknown_VideoCodecOptions;
        public Dictionary<string, string>? VideoCodecOptions
        {
            get
            {
                if (!_mUnknown_VideoCodecOptions) return _mValue_VideoCodecOptions;
                throw new UndeferrableValueException("Value 'PresetArgs.VideoCodecOptions' is not present");
            }
        }

        /// <summary>
        /// Watermark parameters for the video parameters (documented below)
        /// </summary>
        [PolicyResourceProperty("videoWatermarks", "_mUnknown_VideoWatermarks")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.PresetVideoWatermarkArgs>? _mValue_VideoWatermarks;
        private bool _mUnknown_VideoWatermarks;
        public List<Inputs.PresetVideoWatermarkArgs>? VideoWatermarks
        {
            get
            {
                if (!_mUnknown_VideoWatermarks) return _mValue_VideoWatermarks;
                throw new UndeferrableValueException("Value 'PresetArgs.VideoWatermarks' is not present");
            }
        }
    }
}
