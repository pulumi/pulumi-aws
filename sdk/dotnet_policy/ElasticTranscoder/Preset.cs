// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElasticTranscoder
{
    [PolicyResourceType("aws:elastictranscoder/preset:Preset")]
    public sealed class Preset : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Elastic Transcoder Preset.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Audio parameters object (documented below).
        /// </summary>
        [Input("audio")]
        public PresetAudio? Audio;

        /// <summary>
        /// Codec options for the audio parameters (documented below)
        /// </summary>
        [Input("audioCodecOptions")]
        public PresetAudioCodecOptions? AudioCodecOptions;

        /// <summary>
        /// The container type for the output file. Valid values are `flac`, `flv`, `fmp4`, `gif`, `mp3`, `mp4`, `mpg`, `mxf`, `oga`, `ogg`, `ts`, and `webm`.
        /// </summary>
        [Input("container")]
        public string? Container;

        /// <summary>
        /// A description of the preset (maximum 255 characters)
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The name of the preset. (maximum 40 characters)
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Thumbnail parameters object (documented below)
        /// </summary>
        [Input("thumbnails")]
        public PresetThumbnails? Thumbnails;

        [Input("type")]
        public string? Type;

        /// <summary>
        /// Video parameters object (documented below)
        /// </summary>
        [Input("video")]
        public PresetVideo? Video;

        /// <summary>
        /// Codec options for the video parameters
        /// </summary>
        [Input("videoCodecOptions")]
        public Dictionary<string, string>? VideoCodecOptions;

        /// <summary>
        /// Watermark parameters for the video parameters (documented below)
        /// </summary>
        [Input("videoWatermarks")]
        public List<PresetVideoWatermark>? VideoWatermarks;
    }
}
