// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway
{
    [PolicyResourceType("aws:apigateway/documentationVersion:DocumentationVersion")]
    public sealed class DocumentationVersion : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Description of the API documentation version.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'DocumentationVersion.Description' is not present");
            }
        }

        /// <summary>
        /// ID of the associated Rest API
        /// </summary>
        [PolicyResourceProperty("restApiId", "_mUnknown_RestApiId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RestApiId;
        private bool _mUnknown_RestApiId;
        public string? RestApiId
        {
            get
            {
                if (!_mUnknown_RestApiId) return _mValue_RestApiId;
                throw new UndeferrableValueException("Value 'DocumentationVersion.RestApiId' is not present");
            }
        }

        /// <summary>
        /// Version identifier of the API documentation snapshot.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'DocumentationVersion.Version' is not present");
            }
        }
    }

    [PolicyResourceType("aws:apigateway/documentationVersion:DocumentationVersion")]
    public sealed class DocumentationVersionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Description of the API documentation version.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'DocumentationVersionArgs.Description' is not present");
            }
        }

        /// <summary>
        /// ID of the associated Rest API
        /// </summary>
        [PolicyResourceProperty("restApiId", "_mUnknown_RestApiId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RestApiId;
        private bool _mUnknown_RestApiId;
        public string? RestApiId
        {
            get
            {
                if (!_mUnknown_RestApiId) return _mValue_RestApiId;
                throw new UndeferrableValueException("Value 'DocumentationVersionArgs.RestApiId' is not present");
            }
        }

        /// <summary>
        /// Version identifier of the API documentation snapshot.
        /// </summary>
        [PolicyResourceProperty("version", "_mUnknown_Version")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Version;
        private bool _mUnknown_Version;
        public string? Version
        {
            get
            {
                if (!_mUnknown_Version) return _mValue_Version;
                throw new UndeferrableValueException("Value 'DocumentationVersionArgs.Version' is not present");
            }
        }
    }
}
