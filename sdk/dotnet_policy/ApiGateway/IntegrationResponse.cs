// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway
{
    [PolicyResourceType("aws:apigateway/integrationResponse:IntegrationResponse")]
    public sealed class IntegrationResponse : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.
        /// </summary>
        [PolicyResourceProperty("contentHandling", "_mUnknown_ContentHandling")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ContentHandling;
        private bool _mUnknown_ContentHandling;
        public string? ContentHandling
        {
            get
            {
                if (!_mUnknown_ContentHandling) return _mValue_ContentHandling;
                throw new UndeferrableValueException("Value 'IntegrationResponse.ContentHandling' is not present");
            }
        }

        /// <summary>
        /// HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
        /// </summary>
        [PolicyResourceProperty("httpMethod", "_mUnknown_HttpMethod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HttpMethod;
        private bool _mUnknown_HttpMethod;
        public string? HttpMethod
        {
            get
            {
                if (!_mUnknown_HttpMethod) return _mValue_HttpMethod;
                throw new UndeferrableValueException("Value 'IntegrationResponse.HttpMethod' is not present");
            }
        }

        /// <summary>
        /// API resource ID.
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'IntegrationResponse.ResourceId' is not present");
            }
        }

        /// <summary>
        /// Map of response parameters that can be read from the backend response. For example: `response_parameters = { "method.response.header.X-Some-Header" = "integration.response.header.X-Some-Other-Header" }`.
        /// </summary>
        [PolicyResourceProperty("responseParameters", "_mUnknown_ResponseParameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_ResponseParameters;
        private bool _mUnknown_ResponseParameters;
        public Dictionary<string, string>? ResponseParameters
        {
            get
            {
                if (!_mUnknown_ResponseParameters) return _mValue_ResponseParameters;
                throw new UndeferrableValueException("Value 'IntegrationResponse.ResponseParameters' is not present");
            }
        }

        /// <summary>
        /// Map of templates used to transform the integration response body.
        /// </summary>
        [PolicyResourceProperty("responseTemplates", "_mUnknown_ResponseTemplates")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_ResponseTemplates;
        private bool _mUnknown_ResponseTemplates;
        public Dictionary<string, string>? ResponseTemplates
        {
            get
            {
                if (!_mUnknown_ResponseTemplates) return _mValue_ResponseTemplates;
                throw new UndeferrableValueException("Value 'IntegrationResponse.ResponseTemplates' is not present");
            }
        }

        /// <summary>
        /// ID of the associated REST API.
        /// </summary>
        [PolicyResourceProperty("restApi", "_mUnknown_RestApi")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RestApi;
        private bool _mUnknown_RestApi;
        public string? RestApi
        {
            get
            {
                if (!_mUnknown_RestApi) return _mValue_RestApi;
                throw new UndeferrableValueException("Value 'IntegrationResponse.RestApi' is not present");
            }
        }

        /// <summary>
        /// Regular expression pattern used to choose an integration response based on the response from the backend. Omit configuring this to make the integration the default one. If the backend is an `AWS` Lambda function, the AWS Lambda function error header is matched. For all other `HTTP` and `AWS` backends, the HTTP status code is matched.
        /// </summary>
        [PolicyResourceProperty("selectionPattern", "_mUnknown_SelectionPattern")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SelectionPattern;
        private bool _mUnknown_SelectionPattern;
        public string? SelectionPattern
        {
            get
            {
                if (!_mUnknown_SelectionPattern) return _mValue_SelectionPattern;
                throw new UndeferrableValueException("Value 'IntegrationResponse.SelectionPattern' is not present");
            }
        }

        /// <summary>
        /// HTTP status code.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("statusCode", "_mUnknown_StatusCode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatusCode;
        private bool _mUnknown_StatusCode;
        public string? StatusCode
        {
            get
            {
                if (!_mUnknown_StatusCode) return _mValue_StatusCode;
                throw new UndeferrableValueException("Value 'IntegrationResponse.StatusCode' is not present");
            }
        }
    }

    [PolicyResourceType("aws:apigateway/integrationResponse:IntegrationResponse")]
    public sealed class IntegrationResponseArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.
        /// </summary>
        [PolicyResourceProperty("contentHandling", "_mUnknown_ContentHandling")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ContentHandling;
        private bool _mUnknown_ContentHandling;
        public string? ContentHandling
        {
            get
            {
                if (!_mUnknown_ContentHandling) return _mValue_ContentHandling;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.ContentHandling' is not present");
            }
        }

        /// <summary>
        /// HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
        /// </summary>
        [PolicyResourceProperty("httpMethod", "_mUnknown_HttpMethod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HttpMethod;
        private bool _mUnknown_HttpMethod;
        public string? HttpMethod
        {
            get
            {
                if (!_mUnknown_HttpMethod) return _mValue_HttpMethod;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.HttpMethod' is not present");
            }
        }

        /// <summary>
        /// API resource ID.
        /// </summary>
        [PolicyResourceProperty("resourceId", "_mUnknown_ResourceId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceId;
        private bool _mUnknown_ResourceId;
        public string? ResourceId
        {
            get
            {
                if (!_mUnknown_ResourceId) return _mValue_ResourceId;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.ResourceId' is not present");
            }
        }

        /// <summary>
        /// Map of response parameters that can be read from the backend response. For example: `response_parameters = { "method.response.header.X-Some-Header" = "integration.response.header.X-Some-Other-Header" }`.
        /// </summary>
        [PolicyResourceProperty("responseParameters", "_mUnknown_ResponseParameters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_ResponseParameters;
        private bool _mUnknown_ResponseParameters;
        public Dictionary<string, string>? ResponseParameters
        {
            get
            {
                if (!_mUnknown_ResponseParameters) return _mValue_ResponseParameters;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.ResponseParameters' is not present");
            }
        }

        /// <summary>
        /// Map of templates used to transform the integration response body.
        /// </summary>
        [PolicyResourceProperty("responseTemplates", "_mUnknown_ResponseTemplates")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_ResponseTemplates;
        private bool _mUnknown_ResponseTemplates;
        public Dictionary<string, string>? ResponseTemplates
        {
            get
            {
                if (!_mUnknown_ResponseTemplates) return _mValue_ResponseTemplates;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.ResponseTemplates' is not present");
            }
        }

        /// <summary>
        /// ID of the associated REST API.
        /// </summary>
        [PolicyResourceProperty("restApi", "_mUnknown_RestApi")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RestApi;
        private bool _mUnknown_RestApi;
        public string? RestApi
        {
            get
            {
                if (!_mUnknown_RestApi) return _mValue_RestApi;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.RestApi' is not present");
            }
        }

        /// <summary>
        /// Regular expression pattern used to choose an integration response based on the response from the backend. Omit configuring this to make the integration the default one. If the backend is an `AWS` Lambda function, the AWS Lambda function error header is matched. For all other `HTTP` and `AWS` backends, the HTTP status code is matched.
        /// </summary>
        [PolicyResourceProperty("selectionPattern", "_mUnknown_SelectionPattern")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SelectionPattern;
        private bool _mUnknown_SelectionPattern;
        public string? SelectionPattern
        {
            get
            {
                if (!_mUnknown_SelectionPattern) return _mValue_SelectionPattern;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.SelectionPattern' is not present");
            }
        }

        /// <summary>
        /// HTTP status code.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("statusCode", "_mUnknown_StatusCode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatusCode;
        private bool _mUnknown_StatusCode;
        public string? StatusCode
        {
            get
            {
                if (!_mUnknown_StatusCode) return _mValue_StatusCode;
                throw new UndeferrableValueException("Value 'IntegrationResponseArgs.StatusCode' is not present");
            }
        }
    }
}
