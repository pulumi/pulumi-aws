// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway
{
    [PolicyResourceType("aws:apigateway/integrationResponse:IntegrationResponse")]
    public sealed class IntegrationResponse : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// How to handle request payload content type conversions. Supported values are `CONVERT_TO_BINARY` and `CONVERT_TO_TEXT`. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.
        /// </summary>
        [Input("contentHandling")]
        public string? ContentHandling;

        /// <summary>
        /// HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
        /// </summary>
        [Input("httpMethod")]
        public string? HttpMethod;

        /// <summary>
        /// API resource ID.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId;

        /// <summary>
        /// Map of response parameters that can be read from the backend response. For example: `response_parameters = { "method.response.header.X-Some-Header" = "integration.response.header.X-Some-Other-Header" }`.
        /// </summary>
        [Input("responseParameters")]
        public Dictionary<string, string>? ResponseParameters;

        /// <summary>
        /// Map of templates used to transform the integration response body.
        /// </summary>
        [Input("responseTemplates")]
        public Dictionary<string, string>? ResponseTemplates;

        /// <summary>
        /// ID of the associated REST API.
        /// </summary>
        [Input("restApi")]
        public string? RestApi;

        /// <summary>
        /// Regular expression pattern used to choose an integration response based on the response from the backend. Omit configuring this to make the integration the default one. If the backend is an `AWS` Lambda function, the AWS Lambda function error header is matched. For all other `HTTP` and `AWS` backends, the HTTP status code is matched.
        /// </summary>
        [Input("selectionPattern")]
        public string? SelectionPattern;

        /// <summary>
        /// HTTP status code.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("statusCode")]
        public string? StatusCode;
    }
}
