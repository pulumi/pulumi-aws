// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway
{
    [PolicyResourceType("aws:apigateway/domainName:DomainName")]
    public sealed class DomainName : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN of domain name.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when an edge-optimized domain name is desired. Conflicts with `certificate_name`, `certificate_body`, `certificate_chain`, `certificate_private_key`, `regional_certificate_arn`, and `regional_certificate_name`.
        /// </summary>
        [Input("certificateArn")]
        public string? CertificateArn;

        /// <summary>
        /// Certificate issued for the domain name being registered, in PEM format. Only valid for `EDGE` endpoint configuration type. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`.
        /// </summary>
        [Input("certificateBody")]
        public string? CertificateBody;

        /// <summary>
        /// Certificate for the CA that issued the certificate, along with any intermediate CA certificates required to create an unbroken chain to a certificate trusted by the intended API clients. Only valid for `EDGE` endpoint configuration type. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`.
        /// </summary>
        [Input("certificateChain")]
        public string? CertificateChain;

        /// <summary>
        /// Unique name to use when registering this certificate as an IAM server certificate. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`. Required if `certificate_arn` is not set.
        /// </summary>
        [Input("certificateName")]
        public string? CertificateName;

        /// <summary>
        /// Private key associated with the domain certificate given in `certificate_body`. Only valid for `EDGE` endpoint configuration type. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`.
        /// </summary>
        [Input("certificatePrivateKey")]
        public string? CertificatePrivateKey;

        /// <summary>
        /// Upload date associated with the domain certificate.
        /// </summary>
        [Input("certificateUploadDate")]
        public string? CertificateUploadDate;

        /// <summary>
        /// Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.
        /// </summary>
        [Input("cloudfrontDomainName")]
        public string? CloudfrontDomainName;

        /// <summary>
        /// For convenience, the hosted zone ID (`Z2FDTNDATAQYW2`) that can be used to create a Route53 alias record for the distribution.
        /// </summary>
        [Input("cloudfrontZoneId")]
        public string? CloudfrontZoneId;

        /// <summary>
        /// Fully-qualified domain name to register.
        /// </summary>
        [Input("domainName")]
        public string? Domain;

        /// <summary>
        /// The identifier for the domain name resource. Supported only for private custom domain names.
        /// </summary>
        [Input("domainNameId")]
        public string? DomainNameId;

        /// <summary>
        /// Configuration block defining API endpoint information including type. See below.
        /// </summary>
        [Input("endpointConfiguration")]
        public DomainNameEndpointConfiguration? EndpointConfiguration;

        /// <summary>
        /// Mutual TLS authentication configuration for the domain name. See below.
        /// </summary>
        [Input("mutualTlsAuthentication")]
        public DomainNameMutualTlsAuthentication? MutualTlsAuthentication;

        /// <summary>
        /// ARN of the AWS-issued certificate used to validate custom domain ownership (when `certificate_arn` is issued via an ACM Private CA or `mutual_tls_authentication` is configured with an ACM-imported certificate.)
        /// </summary>
        [Input("ownershipVerificationCertificateArn")]
        public string? OwnershipVerificationCertificateArn;

        /// <summary>
        /// A stringified JSON policy document that applies to the execute-api service for this DomainName regardless of the caller and Method configuration. Supported only for private custom domain names.
        /// </summary>
        [Input("policy")]
        public string? Policy;

        /// <summary>
        /// ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when a regional domain name is desired. Conflicts with `certificate_arn`, `certificate_name`, `certificate_body`, `certificate_chain`, and `certificate_private_key`.
        /// 
        /// When uploading a certificate, the following arguments are supported:
        /// </summary>
        [Input("regionalCertificateArn")]
        public string? RegionalCertificateArn;

        /// <summary>
        /// User-friendly name of the certificate that will be used by regional endpoint for this domain name. Conflicts with `certificate_arn`, `certificate_name`, `certificate_body`, `certificate_chain`, and `certificate_private_key`.
        /// </summary>
        [Input("regionalCertificateName")]
        public string? RegionalCertificateName;

        /// <summary>
        /// Hostname for the custom domain's regional endpoint.
        /// </summary>
        [Input("regionalDomainName")]
        public string? RegionalDomainName;

        /// <summary>
        /// Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.
        /// </summary>
        [Input("regionalZoneId")]
        public string? RegionalZoneId;

        /// <summary>
        /// Transport Layer Security (TLS) version + cipher suite for this DomainName. Valid values are `TLS_1_0` and `TLS_1_2`. Must be configured to perform drift detection.
        /// </summary>
        [Input("securityPolicy")]
        public string? SecurityPolicy;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// When referencing an AWS-managed certificate, the following arguments are supported:
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
