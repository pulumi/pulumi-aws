// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway.Outputs
{
    public sealed class MethodSettingsSettings
    {
        /// <summary>
        /// Whether the cached responses are encrypted.
        /// </summary>
        [Input("cacheDataEncrypted")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mCacheDataEncrypted;

        public bool? CacheDataEncrypted => _mCacheDataEncrypted.GetValue("cacheDataEncrypted");

        /// <summary>
        /// Time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
        /// </summary>
        [Input("cacheTtlInSeconds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mCacheTtlInSeconds;

        public int? CacheTtlInSeconds => _mCacheTtlInSeconds.GetValue("cacheTtlInSeconds");

        /// <summary>
        /// Whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
        /// </summary>
        [Input("cachingEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mCachingEnabled;

        public bool? CachingEnabled => _mCachingEnabled.GetValue("cachingEnabled");

        /// <summary>
        /// Whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.
        /// </summary>
        [Input("dataTraceEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mDataTraceEnabled;

        public bool? DataTraceEnabled => _mDataTraceEnabled.GetValue("dataTraceEnabled");

        /// <summary>
        /// Logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are `OFF`, `ERROR`, and `INFO`.
        /// </summary>
        [Input("loggingLevel")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mLoggingLevel;

        public string? LoggingLevel => _mLoggingLevel.GetValue("loggingLevel");

        /// <summary>
        /// Whether Amazon CloudWatch metrics are enabled for this method.
        /// </summary>
        [Input("metricsEnabled")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mMetricsEnabled;

        public bool? MetricsEnabled => _mMetricsEnabled.GetValue("metricsEnabled");

        /// <summary>
        /// Whether authorization is required for a cache invalidation request.
        /// </summary>
        [Input("requireAuthorizationForCacheControl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mRequireAuthorizationForCacheControl;

        public bool? RequireAuthorizationForCacheControl => _mRequireAuthorizationForCacheControl.GetValue("requireAuthorizationForCacheControl");

        /// <summary>
        /// Throttling burst limit. Default: `-1` (throttling disabled).
        /// </summary>
        [Input("throttlingBurstLimit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<int> _mThrottlingBurstLimit;

        public int? ThrottlingBurstLimit => _mThrottlingBurstLimit.GetValue("throttlingBurstLimit");

        /// <summary>
        /// Throttling rate limit. Default: `-1` (throttling disabled).
        /// </summary>
        [Input("throttlingRateLimit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<double> _mThrottlingRateLimit;

        public double? ThrottlingRateLimit => _mThrottlingRateLimit.GetValue("throttlingRateLimit");

        /// <summary>
        /// How to handle unauthorized requests for cache invalidation. The available values are `FAIL_WITH_403`, `SUCCEED_WITH_RESPONSE_HEADER`, `SUCCEED_WITHOUT_RESPONSE_HEADER`.
        /// </summary>
        [Input("unauthorizedCacheControlHeaderStrategy")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mUnauthorizedCacheControlHeaderStrategy;

        public string? UnauthorizedCacheControlHeaderStrategy => _mUnauthorizedCacheControlHeaderStrategy.GetValue("unauthorizedCacheControlHeaderStrategy");
    }
}
