// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway
{
    [PolicyResourceType("aws:apigateway/domainNameAccessAssociation:DomainNameAccessAssociation")]
    public sealed class DomainNameAccessAssociation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.
        /// </summary>
        [PolicyResourceProperty("accessAssociationSource", "_mUnknown_AccessAssociationSource")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccessAssociationSource;
        private bool _mUnknown_AccessAssociationSource;
        public string? AccessAssociationSource
        {
            get
            {
                if (!_mUnknown_AccessAssociationSource) return _mValue_AccessAssociationSource;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.AccessAssociationSource' is not present");
            }
        }

        /// <summary>
        /// The type of the domain name access association source. Valid values are `VPCE`.
        /// </summary>
        [PolicyResourceProperty("accessAssociationSourceType", "_mUnknown_AccessAssociationSourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccessAssociationSourceType;
        private bool _mUnknown_AccessAssociationSourceType;
        public string? AccessAssociationSourceType
        {
            get
            {
                if (!_mUnknown_AccessAssociationSourceType) return _mValue_AccessAssociationSourceType;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.AccessAssociationSourceType' is not present");
            }
        }

        /// <summary>
        /// ARN of the domain name access association.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.Arn' is not present");
            }
        }

        /// <summary>
        /// The ARN of the domain name.
        /// </summary>
        [PolicyResourceProperty("domainNameArn", "_mUnknown_DomainNameArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainNameArn;
        private bool _mUnknown_DomainNameArn;
        public string? DomainNameArn
        {
            get
            {
                if (!_mUnknown_DomainNameArn) return _mValue_DomainNameArn;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.DomainNameArn' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:apigateway/domainNameAccessAssociation:DomainNameAccessAssociation")]
    public sealed class DomainNameAccessAssociationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.
        /// </summary>
        [PolicyResourceProperty("accessAssociationSource", "_mUnknown_AccessAssociationSource")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccessAssociationSource;
        private bool _mUnknown_AccessAssociationSource;
        public string? AccessAssociationSource
        {
            get
            {
                if (!_mUnknown_AccessAssociationSource) return _mValue_AccessAssociationSource;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociationArgs.AccessAssociationSource' is not present");
            }
        }

        /// <summary>
        /// The type of the domain name access association source. Valid values are `VPCE`.
        /// </summary>
        [PolicyResourceProperty("accessAssociationSourceType", "_mUnknown_AccessAssociationSourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AccessAssociationSourceType;
        private bool _mUnknown_AccessAssociationSourceType;
        public string? AccessAssociationSourceType
        {
            get
            {
                if (!_mUnknown_AccessAssociationSourceType) return _mValue_AccessAssociationSourceType;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociationArgs.AccessAssociationSourceType' is not present");
            }
        }

        /// <summary>
        /// The ARN of the domain name.
        /// </summary>
        [PolicyResourceProperty("domainNameArn", "_mUnknown_DomainNameArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DomainNameArn;
        private bool _mUnknown_DomainNameArn;
        public string? DomainNameArn
        {
            get
            {
                if (!_mUnknown_DomainNameArn) return _mValue_DomainNameArn;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociationArgs.DomainNameArn' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'DomainNameAccessAssociationArgs.Tags' is not present");
            }
        }
    }
}
