// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway
{
    [PolicyResourceType("aws:apigateway/methodResponse:MethodResponse")]
    public sealed class MethodResponse : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The HTTP verb of the method resource (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
        /// </summary>
        [Input("httpMethod")]
        public string? HttpMethod;

        /// <summary>
        /// The Resource identifier for the method resource.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId;

        /// <summary>
        /// A map specifying the model resources used for the response's content type. Response models are represented as a key/value map, with a content type as the key and a Model name as the value.
        /// </summary>
        [Input("responseModels")]
        public Dictionary<string, string>? ResponseModels;

        /// <summary>
        /// A map specifying required or optional response parameters that API Gateway can send back to the caller. A key defines a method response header name and the associated value is a boolean flag indicating whether the method response parameter is required. The method response header names must match the pattern of `method.response.header.{name}`, where `name` is a valid and unique header name.
        /// 
        /// The response parameter names defined here are available in the integration response to be mapped from an integration response header expressed in `integration.response.header.{name}`, a static value enclosed within a pair of single quotes (e.g., '`application/json'`), or a JSON expression from the back-end response payload in the form of `integration.response.body.{JSON-expression}`, where `JSON-expression` is a valid JSON expression without the `$` prefix.)
        /// </summary>
        [Input("responseParameters")]
        public Dictionary<string, bool>? ResponseParameters;

        /// <summary>
        /// The string identifier of the associated REST API.
        /// </summary>
        [Input("restApi")]
        public string? RestApi;

        /// <summary>
        /// The method response's status code.
        /// </summary>
        [Input("statusCode")]
        public string? StatusCode;
    }
}
