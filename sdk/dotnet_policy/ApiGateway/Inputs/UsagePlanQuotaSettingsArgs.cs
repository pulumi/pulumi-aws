// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway.Inputs
{
    public sealed class UsagePlanQuotaSettingsArgs
    {
        /// <summary>
        /// Maximum number of requests that can be made in a given time period.
        /// </summary>
        [PolicyResourceProperty("limit", "_mUnknown_Limit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Limit;
        private bool _mUnknown_Limit;
        public int? Limit
        {
            get
            {
                if (!_mUnknown_Limit) return _mValue_Limit;
                throw new UndeferrableValueException("Value 'UsagePlanQuotaSettingsArgs.Limit' is not present");
            }
        }

        /// <summary>
        /// Number of requests subtracted from the given limit in the initial time period.
        /// </summary>
        [PolicyResourceProperty("offset", "_mUnknown_Offset")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_Offset;
        private bool _mUnknown_Offset;
        public int? Offset
        {
            get
            {
                if (!_mUnknown_Offset) return _mValue_Offset;
                throw new UndeferrableValueException("Value 'UsagePlanQuotaSettingsArgs.Offset' is not present");
            }
        }

        /// <summary>
        /// Time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
        /// </summary>
        [PolicyResourceProperty("period", "_mUnknown_Period")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Period;
        private bool _mUnknown_Period;
        public string? Period
        {
            get
            {
                if (!_mUnknown_Period) return _mValue_Period;
                throw new UndeferrableValueException("Value 'UsagePlanQuotaSettingsArgs.Period' is not present");
            }
        }
    }
}
