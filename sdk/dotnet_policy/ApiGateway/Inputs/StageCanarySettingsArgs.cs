// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ApiGateway.Inputs
{
    public sealed class StageCanarySettingsArgs
    {
        /// <summary>
        /// ID of the deployment that the canary points to.
        /// </summary>
        [Input("deploymentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDeploymentId;

        public string? DeploymentId => _mDeploymentId.GetValue("deploymentId");

        /// <summary>
        /// Percent `0.0` - `100.0` of traffic to divert to the canary deployment.
        /// </summary>
        [Input("percentTraffic")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<double> _mPercentTraffic;

        public double? PercentTraffic => _mPercentTraffic.GetValue("percentTraffic");

        /// <summary>
        /// Map of overridden stage `variables` (including new variables) for the canary deployment.
        /// </summary>
        [Input("stageVariableOverrides")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mStageVariableOverrides;

        public Dictionary<string, string>? StageVariableOverrides => _mStageVariableOverrides.GetValue("stageVariableOverrides");

        /// <summary>
        /// Whether the canary deployment uses the stage cache. Defaults to false.
        /// </summary>
        [Input("useStageCache")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mUseStageCache;

        public bool? UseStageCache => _mUseStageCache.GetValue("useStageCache");
    }
}
