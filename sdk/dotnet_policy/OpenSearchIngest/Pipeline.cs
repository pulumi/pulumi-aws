// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.OpenSearchIngest
{
    [PolicyResourceType("aws:opensearchingest/pipeline:Pipeline")]
    public sealed class Pipeline : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Key-value pairs to configure persistent buffering for the pipeline. See `buffer_options` below.
        /// </summary>
        [Input("bufferOptions")]
        public PipelineBufferOptions? BufferOptions;

        /// <summary>
        /// Key-value pairs to configure encryption for data that is written to a persistent buffer. See `encryption_at_rest_options` below.
        /// </summary>
        [Input("encryptionAtRestOptions")]
        public PipelineEncryptionAtRestOptions? EncryptionAtRestOptions;

        /// <summary>
        /// The list of ingestion endpoints for the pipeline, which you can send data to.
        /// </summary>
        [Input("ingestEndpointUrls")]
        public List<string>? IngestEndpointUrls;

        /// <summary>
        /// Key-value pairs to configure log publishing. See `log_publishing_options` below.
        /// </summary>
        [Input("logPublishingOptions")]
        public PipelineLogPublishingOptions? LogPublishingOptions;

        /// <summary>
        /// The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
        /// </summary>
        [Input("maxUnits")]
        public int? MaxUnits;

        /// <summary>
        /// The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
        /// </summary>
        [Input("minUnits")]
        public int? MinUnits;

        /// <summary>
        /// Amazon Resource Name (ARN) of the pipeline.
        /// </summary>
        [Input("pipelineArn")]
        public string? PipelineArn;

        /// <summary>
        /// The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \n.
        /// </summary>
        [Input("pipelineConfigurationBody")]
        public string? PipelineConfigurationBody;

        /// <summary>
        /// The name of the OpenSearch Ingestion pipeline to create. Pipeline names are unique across the pipelines owned by an account within an AWS Region.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("pipelineName")]
        public string? PipelineName;

        /// <summary>
        /// A map of tags to assign to the pipeline. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("timeouts")]
        public PipelineTimeouts? Timeouts;

        /// <summary>
        /// Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See `vpc_options` below.
        /// </summary>
        [Input("vpcOptions")]
        public PipelineVpcOptions? VpcOptions;
    }
}
