// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ResilienceHub.Outputs
{
    public sealed class ResiliencyPolicyPolicy
    {
        /// <summary>
        /// Specifies Availability Zone failure policy. See `policy.az`
        /// </summary>
        [PolicyResourceProperty("az", "_mUnknown_Az")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ResiliencyPolicyPolicyAz? _mValue_Az;
        private bool _mUnknown_Az;
        public Outputs.ResiliencyPolicyPolicyAz? Az
        {
            get
            {
                if (!_mUnknown_Az) return _mValue_Az;
                throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicy.Az' is not present");
            }
        }

        /// <summary>
        /// Specifies Infrastructure failure policy. See `policy.hardware`
        /// </summary>
        [PolicyResourceProperty("hardware", "_mUnknown_Hardware")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ResiliencyPolicyPolicyHardware? _mValue_Hardware;
        private bool _mUnknown_Hardware;
        public Outputs.ResiliencyPolicyPolicyHardware? Hardware
        {
            get
            {
                if (!_mUnknown_Hardware) return _mValue_Hardware;
                throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicy.Hardware' is not present");
            }
        }

        /// <summary>
        /// Specifies Region failure policy. `policy.region`
        /// </summary>
        [PolicyResourceProperty("region", "_mUnknown_Region")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ResiliencyPolicyPolicyRegion? _mValue_Region;
        private bool _mUnknown_Region;
        public Outputs.ResiliencyPolicyPolicyRegion? Region
        {
            get
            {
                if (!_mUnknown_Region) return _mValue_Region;
                throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicy.Region' is not present");
            }
        }

        /// <summary>
        /// Specifies Application failure policy. See `policy.software`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("software", "_mUnknown_Software")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ResiliencyPolicyPolicySoftware? _mValue_Software;
        private bool _mUnknown_Software;
        public Outputs.ResiliencyPolicyPolicySoftware? Software
        {
            get
            {
                if (!_mUnknown_Software) return _mValue_Software;
                throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicy.Software' is not present");
            }
        }
    }
}
