// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kms
{
    [PolicyResourceType("aws:kms/replicaKey:ReplicaKey")]
    public sealed class ReplicaKey : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the replica key. The key ARNs of related multi-Region keys differ only in the Region value.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A flag to indicate whether to bypass the key policy lockout safety check.
        /// Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
        /// For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.
        /// The default value is `false`.
        /// </summary>
        [Input("bypassPolicyLockoutSafetyCheck")]
        public bool? BypassPolicyLockoutSafetyCheck;

        /// <summary>
        /// The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
        /// If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.
        /// </summary>
        [Input("deletionWindowInDays")]
        public int? DeletionWindowInDays;

        /// <summary>
        /// A description of the KMS key.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is `true`.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled;

        /// <summary>
        /// The key ID of the replica key. Related multi-Region keys have the same key ID.
        /// </summary>
        [Input("keyId")]
        public string? KeyId;

        /// <summary>
        /// A Boolean value that specifies whether key rotation is enabled. This is a shared property of multi-Region keys.
        /// </summary>
        [Input("keyRotationEnabled")]
        public bool? KeyRotationEnabled;

        /// <summary>
        /// The type of key material in the KMS key. This is a shared property of multi-Region keys.
        /// </summary>
        [Input("keySpec")]
        public string? KeySpec;

        /// <summary>
        /// The [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations) for which you can use the KMS key. This is a shared property of multi-Region keys.
        /// </summary>
        [Input("keyUsage")]
        public string? KeyUsage;

        /// <summary>
        /// The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) to the KMS key.
        /// </summary>
        [Input("policy")]
        public string? Policy;

        /// <summary>
        /// The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.
        /// </summary>
        [Input("primaryKeyArn")]
        public string? PrimaryKeyArn;

        /// <summary>
        /// A map of tags to assign to the replica key. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
