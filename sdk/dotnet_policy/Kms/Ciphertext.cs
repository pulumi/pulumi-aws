// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kms
{
    [PolicyResourceType("aws:kms/ciphertext:Ciphertext")]
    public sealed class Ciphertext : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Base64 encoded ciphertext
        /// </summary>
        [PolicyResourceProperty("ciphertextBlob", "_mUnknown_CiphertextBlob")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CiphertextBlob;
        private bool _mUnknown_CiphertextBlob;
        public string? CiphertextBlob
        {
            get
            {
                if (!_mUnknown_CiphertextBlob) return _mValue_CiphertextBlob;
                throw new UndeferrableValueException("Value 'Ciphertext.CiphertextBlob' is not present");
            }
        }

        /// <summary>
        /// An optional mapping that makes up the encryption context.
        /// </summary>
        [PolicyResourceProperty("context", "_mUnknown_Context")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Context;
        private bool _mUnknown_Context;
        public Dictionary<string, string>? Context
        {
            get
            {
                if (!_mUnknown_Context) return _mValue_Context;
                throw new UndeferrableValueException("Value 'Ciphertext.Context' is not present");
            }
        }

        /// <summary>
        /// Globally unique key ID for the customer master key.
        /// </summary>
        [PolicyResourceProperty("keyId", "_mUnknown_KeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KeyId;
        private bool _mUnknown_KeyId;
        public string? KeyId
        {
            get
            {
                if (!_mUnknown_KeyId) return _mValue_KeyId;
                throw new UndeferrableValueException("Value 'Ciphertext.KeyId' is not present");
            }
        }

        /// <summary>
        /// Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.
        /// </summary>
        [PolicyResourceProperty("plaintext", "_mUnknown_Plaintext")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Plaintext;
        private bool _mUnknown_Plaintext;
        public string? Plaintext
        {
            get
            {
                if (!_mUnknown_Plaintext) return _mValue_Plaintext;
                throw new UndeferrableValueException("Value 'Ciphertext.Plaintext' is not present");
            }
        }
    }

    [PolicyResourceType("aws:kms/ciphertext:Ciphertext")]
    public sealed class CiphertextArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// An optional mapping that makes up the encryption context.
        /// </summary>
        [PolicyResourceProperty("context", "_mUnknown_Context")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Context;
        private bool _mUnknown_Context;
        public Dictionary<string, string>? Context
        {
            get
            {
                if (!_mUnknown_Context) return _mValue_Context;
                throw new UndeferrableValueException("Value 'CiphertextArgs.Context' is not present");
            }
        }

        /// <summary>
        /// Globally unique key ID for the customer master key.
        /// </summary>
        [PolicyResourceProperty("keyId", "_mUnknown_KeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KeyId;
        private bool _mUnknown_KeyId;
        public string? KeyId
        {
            get
            {
                if (!_mUnknown_KeyId) return _mValue_KeyId;
                throw new UndeferrableValueException("Value 'CiphertextArgs.KeyId' is not present");
            }
        }

        /// <summary>
        /// Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.
        /// </summary>
        [PolicyResourceProperty("plaintext", "_mUnknown_Plaintext")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Plaintext;
        private bool _mUnknown_Plaintext;
        public string? Plaintext
        {
            get
            {
                if (!_mUnknown_Plaintext) return _mValue_Plaintext;
                throw new UndeferrableValueException("Value 'CiphertextArgs.Plaintext' is not present");
            }
        }
    }
}
