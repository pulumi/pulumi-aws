// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Kms.Outputs
{
    public sealed class GrantConstraint
    {
        /// <summary>
        /// A list of key-value pairs that must match the encryption context in subsequent cryptographic operation requests. The grant allows the operation only when the encryption context in the request is the same as the encryption context specified in this constraint. Conflicts with `encryption_context_subset`.
        /// </summary>
        [PolicyResourceProperty("encryptionContextEquals", "_mUnknown_EncryptionContextEquals")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_EncryptionContextEquals;
        private bool _mUnknown_EncryptionContextEquals;
        public Dictionary<string, string>? EncryptionContextEquals
        {
            get
            {
                if (!_mUnknown_EncryptionContextEquals) return _mValue_EncryptionContextEquals;
                throw new UndeferrableValueException("Value 'GrantConstraint.EncryptionContextEquals' is not present");
            }
        }

        /// <summary>
        /// A list of key-value pairs that must be included in the encryption context of subsequent cryptographic operation requests. The grant allows the cryptographic operation only when the encryption context in the request includes the key-value pairs specified in this constraint, although it can include additional key-value pairs. Conflicts with `encryption_context_equals`.
        /// </summary>
        [PolicyResourceProperty("encryptionContextSubset", "_mUnknown_EncryptionContextSubset")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_EncryptionContextSubset;
        private bool _mUnknown_EncryptionContextSubset;
        public Dictionary<string, string>? EncryptionContextSubset
        {
            get
            {
                if (!_mUnknown_EncryptionContextSubset) return _mValue_EncryptionContextSubset;
                throw new UndeferrableValueException("Value 'GrantConstraint.EncryptionContextSubset' is not present");
            }
        }
    }
}
