// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sagemaker
{
    [PolicyResourceType("aws:sagemaker/DomainDefaultUserSettings:DomainDefaultUserSettings")]
    public sealed class DomainDefaultUserSettings
    {
        /// <summary>
        /// Indicates whether auto-mounting of an EFS volume is supported for the user profile. The `DefaultAsDomain` value is only supported for user profiles. Do not use the `DefaultAsDomain` value when setting this parameter for a domain. Valid values are: `Enabled`, `Disabled`, and `DefaultAsDomain`.
        /// </summary>
        [Input("autoMountHomeEfs")]
        public string? AutoMountHomeEfs;

        /// <summary>
        /// The Canvas app settings. See `canvas_app_settings` Block below.
        /// </summary>
        [Input("canvasAppSettings")]
        public DomainDefaultUserSettingsCanvasAppSettings? CanvasAppSettings;

        /// <summary>
        /// The Code Editor application settings. See `code_editor_app_settings` Block below.
        /// </summary>
        [Input("codeEditorAppSettings")]
        public DomainDefaultUserSettingsCodeEditorAppSettings? CodeEditorAppSettings;

        /// <summary>
        /// The settings for assigning a custom file system to a user profile. Permitted users can access this file system in Amazon SageMaker AI Studio. See `custom_file_system_config` Block below.
        /// </summary>
        [Input("customFileSystemConfigs")]
        public List<DomainDefaultUserSettingsCustomFileSystemConfig>? CustomFileSystemConfigs;

        /// <summary>
        /// Details about the POSIX identity that is used for file system operations. See `custom_posix_user_config` Block below.
        /// </summary>
        [Input("customPosixUserConfig")]
        public DomainDefaultUserSettingsCustomPosixUserConfig? CustomPosixUserConfig;

        /// <summary>
        /// The default experience that the user is directed to when accessing the domain. The supported values are: `studio::`: Indicates that Studio is the default experience. This value can only be passed if StudioWebPortal is set to ENABLED. `app:JupyterServer:`: Indicates that Studio Classic is the default experience.
        /// </summary>
        [Input("defaultLandingUri")]
        public string? DefaultLandingUri;

        /// <summary>
        /// The execution role ARN for the user.
        /// </summary>
        [Input("executionRole")]
        public string? ExecutionRole;

        /// <summary>
        /// The settings for the JupyterLab application. See `jupyter_lab_app_settings` Block below.
        /// </summary>
        [Input("jupyterLabAppSettings")]
        public DomainDefaultUserSettingsJupyterLabAppSettings? JupyterLabAppSettings;

        /// <summary>
        /// The Jupyter server's app settings. See `jupyter_server_app_settings` Block below.
        /// </summary>
        [Input("jupyterServerAppSettings")]
        public DomainDefaultUserSettingsJupyterServerAppSettings? JupyterServerAppSettings;

        /// <summary>
        /// The kernel gateway app settings. See `kernel_gateway_app_settings` Block below.
        /// </summary>
        [Input("kernelGatewayAppSettings")]
        public DomainDefaultUserSettingsKernelGatewayAppSettings? KernelGatewayAppSettings;

        /// <summary>
        /// The RSession app settings. See `r_session_app_settings` Block below.
        /// </summary>
        [Input("rSessionAppSettings")]
        public DomainDefaultUserSettingsRSessionAppSettings? RSessionAppSettings;

        /// <summary>
        /// A collection of settings that configure user interaction with the RStudioServerPro app. See `r_studio_server_pro_app_settings` Block below.
        /// </summary>
        [Input("rStudioServerProAppSettings")]
        public DomainDefaultUserSettingsRStudioServerProAppSettings? RStudioServerProAppSettings;

        /// <summary>
        /// A list of security group IDs that will be attached to the user.
        /// </summary>
        [Input("securityGroups")]
        public List<string>? SecurityGroups;

        /// <summary>
        /// The sharing settings. See `sharing_settings` Block below.
        /// </summary>
        [Input("sharingSettings")]
        public DomainDefaultUserSettingsSharingSettings? SharingSettings;

        /// <summary>
        /// The storage settings for a private space. See `space_storage_settings` Block below.
        /// </summary>
        [Input("spaceStorageSettings")]
        public DomainDefaultUserSettingsSpaceStorageSettings? SpaceStorageSettings;

        /// <summary>
        /// Whether the user can access Studio. If this value is set to `DISABLED`, the user cannot access Studio, even if that is the default experience for the domain. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Input("studioWebPortal")]
        public string? StudioWebPortal;

        /// <summary>
        /// The Studio Web Portal settings. See `studio_web_portal_settings` Block below.
        /// </summary>
        [Input("studioWebPortalSettings")]
        public DomainDefaultUserSettingsStudioWebPortalSettings? StudioWebPortalSettings;

        /// <summary>
        /// The TensorBoard app settings. See `tensor_board_app_settings` Block below.
        /// </summary>
        [Input("tensorBoardAppSettings")]
        public DomainDefaultUserSettingsTensorBoardAppSettings? TensorBoardAppSettings;
    }
}
