// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sagemaker
{
    [PolicyResourceType("aws:sagemaker/model:Model")]
    public sealed class Model : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) assigned by AWS to this model.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Specifies containers in the inference pipeline. If not specified, the `primary_container` argument is required. Fields are documented below.
        /// </summary>
        [Input("containers")]
        public List<ModelContainer>? Containers;

        /// <summary>
        /// Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
        /// </summary>
        [Input("enableNetworkIsolation")]
        public bool? EnableNetworkIsolation;

        /// <summary>
        /// A role that SageMaker AI can assume to access model artifacts and docker images for deployment.
        /// </summary>
        [Input("executionRoleArn")]
        public string? ExecutionRoleArn;

        /// <summary>
        /// Specifies details of how containers in a multi-container endpoint are called. see Inference Execution Config.
        /// </summary>
        [Input("inferenceExecutionConfig")]
        public ModelInferenceExecutionConfig? InferenceExecutionConfig;

        /// <summary>
        /// The name of the model (must be unique). If omitted, this provider will assign a random, unique name.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The primary docker image containing inference code that is used when the model is deployed for predictions.  If not specified, the `container` argument is required. Fields are documented below.
        /// </summary>
        [Input("primaryContainer")]
        public ModelPrimaryContainer? PrimaryContainer;

        /// <summary>
        /// A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Specifies the VPC that you want your model to connect to. VpcConfig is used in hosting services and in batch transform.
        /// </summary>
        [Input("vpcConfig")]
        public ModelVpcConfig? VpcConfig;
    }
}
