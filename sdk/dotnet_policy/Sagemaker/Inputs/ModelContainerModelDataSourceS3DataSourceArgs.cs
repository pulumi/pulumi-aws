// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sagemaker.Inputs
{
    public sealed class ModelContainerModelDataSourceS3DataSourceArgs
    {
        /// <summary>
        /// How the model data is prepared. Allowed values are: `None` and `Gzip`.
        /// </summary>
        [PolicyResourceProperty("compressionType", "_mUnknown_CompressionType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CompressionType;
        private bool _mUnknown_CompressionType;
        public string? CompressionType
        {
            get
            {
                if (!_mUnknown_CompressionType) return _mValue_CompressionType;
                throw new UndeferrableValueException("Value 'ModelContainerModelDataSourceS3DataSourceArgs.CompressionType' is not present");
            }
        }

        /// <summary>
        /// Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [`model_access_config` configuration block]. see Model Access Config.
        /// </summary>
        [PolicyResourceProperty("modelAccessConfig", "_mUnknown_ModelAccessConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs? _mValue_ModelAccessConfig;
        private bool _mUnknown_ModelAccessConfig;
        public Inputs.ModelContainerModelDataSourceS3DataSourceModelAccessConfigArgs? ModelAccessConfig
        {
            get
            {
                if (!_mUnknown_ModelAccessConfig) return _mValue_ModelAccessConfig;
                throw new UndeferrableValueException("Value 'ModelContainerModelDataSourceS3DataSourceArgs.ModelAccessConfig' is not present");
            }
        }

        /// <summary>
        /// The type of model data to deploy. Allowed values are: `S3Object` and `S3Prefix`.
        /// </summary>
        [PolicyResourceProperty("s3DataType", "_mUnknown_S3DataType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_S3DataType;
        private bool _mUnknown_S3DataType;
        public string? S3DataType
        {
            get
            {
                if (!_mUnknown_S3DataType) return _mValue_S3DataType;
                throw new UndeferrableValueException("Value 'ModelContainerModelDataSourceS3DataSourceArgs.S3DataType' is not present");
            }
        }

        /// <summary>
        /// The S3 path of model data to deploy.
        /// </summary>
        [PolicyResourceProperty("s3Uri", "_mUnknown_S3Uri")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_S3Uri;
        private bool _mUnknown_S3Uri;
        public string? S3Uri
        {
            get
            {
                if (!_mUnknown_S3Uri) return _mValue_S3Uri;
                throw new UndeferrableValueException("Value 'ModelContainerModelDataSourceS3DataSourceArgs.S3Uri' is not present");
            }
        }
    }
}
