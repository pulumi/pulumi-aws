// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sagemaker.Outputs
{
    public sealed class PipelinePipelineDefinitionS3Location
    {
        /// <summary>
        /// Name of the S3 bucket.
        /// </summary>
        [PolicyResourceProperty("bucket", "_mUnknown_Bucket")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Bucket;
        private bool _mUnknown_Bucket;
        public string? Bucket
        {
            get
            {
                if (!_mUnknown_Bucket) return _mValue_Bucket;
                throw new UndeferrableValueException("Value 'PipelinePipelineDefinitionS3Location.Bucket' is not present");
            }
        }

        /// <summary>
        /// The object key (or key name) uniquely identifies the object in an S3 bucket.
        /// </summary>
        [PolicyResourceProperty("objectKey", "_mUnknown_ObjectKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ObjectKey;
        private bool _mUnknown_ObjectKey;
        public string? ObjectKey
        {
            get
            {
                if (!_mUnknown_ObjectKey) return _mValue_ObjectKey;
                throw new UndeferrableValueException("Value 'PipelinePipelineDefinitionS3Location.ObjectKey' is not present");
            }
        }

        /// <summary>
        /// Version Id of the pipeline definition file. If not specified, Amazon SageMaker AI will retrieve the latest version.
        /// </summary>
        [PolicyResourceProperty("versionId", "_mUnknown_VersionId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VersionId;
        private bool _mUnknown_VersionId;
        public string? VersionId
        {
            get
            {
                if (!_mUnknown_VersionId) return _mValue_VersionId;
                throw new UndeferrableValueException("Value 'PipelinePipelineDefinitionS3Location.VersionId' is not present");
            }
        }
    }
}
