// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sagemaker.Outputs
{
    public sealed class ModelContainerImageConfig
    {
        /// <summary>
        /// Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.
        /// </summary>
        [PolicyResourceProperty("repositoryAccessMode", "_mUnknown_RepositoryAccessMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RepositoryAccessMode;
        private bool _mUnknown_RepositoryAccessMode;
        public string? RepositoryAccessMode
        {
            get
            {
                if (!_mUnknown_RepositoryAccessMode) return _mValue_RepositoryAccessMode;
                throw new UndeferrableValueException("Value 'ModelContainerImageConfig.RepositoryAccessMode' is not present");
            }
        }

        /// <summary>
        /// Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
        /// </summary>
        [PolicyResourceProperty("repositoryAuthConfig", "_mUnknown_RepositoryAuthConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ModelContainerImageConfigRepositoryAuthConfig? _mValue_RepositoryAuthConfig;
        private bool _mUnknown_RepositoryAuthConfig;
        public Outputs.ModelContainerImageConfigRepositoryAuthConfig? RepositoryAuthConfig
        {
            get
            {
                if (!_mUnknown_RepositoryAuthConfig) return _mValue_RepositoryAuthConfig;
                throw new UndeferrableValueException("Value 'ModelContainerImageConfig.RepositoryAuthConfig' is not present");
            }
        }
    }
}
