// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sagemaker
{
    [PolicyResourceType("aws:sagemaker/featureGroup:FeatureGroup")]
    public sealed class FeatureGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) assigned by AWS to this feature_group.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'FeatureGroup.Arn' is not present");
            }
        }

        /// <summary>
        /// A free-form description of a Feature Group.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'FeatureGroup.Description' is not present");
            }
        }

        /// <summary>
        /// The name of the feature that stores the EventTime of a Record in a Feature Group.
        /// </summary>
        [PolicyResourceProperty("eventTimeFeatureName", "_mUnknown_EventTimeFeatureName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EventTimeFeatureName;
        private bool _mUnknown_EventTimeFeatureName;
        public string? EventTimeFeatureName
        {
            get
            {
                if (!_mUnknown_EventTimeFeatureName) return _mValue_EventTimeFeatureName;
                throw new UndeferrableValueException("Value 'FeatureGroup.EventTimeFeatureName' is not present");
            }
        }

        /// <summary>
        /// A list of Feature names and types. See Feature Definition Below.
        /// </summary>
        [PolicyResourceProperty("featureDefinitions", "_mUnknown_FeatureDefinitions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.FeatureGroupFeatureDefinition>? _mValue_FeatureDefinitions;
        private bool _mUnknown_FeatureDefinitions;
        public List<Outputs.FeatureGroupFeatureDefinition>? FeatureDefinitions
        {
            get
            {
                if (!_mUnknown_FeatureDefinitions) return _mValue_FeatureDefinitions;
                throw new UndeferrableValueException("Value 'FeatureGroup.FeatureDefinitions' is not present");
            }
        }

        /// <summary>
        /// The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
        /// </summary>
        [PolicyResourceProperty("featureGroupName", "_mUnknown_FeatureGroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FeatureGroupName;
        private bool _mUnknown_FeatureGroupName;
        public string? FeatureGroupName
        {
            get
            {
                if (!_mUnknown_FeatureGroupName) return _mValue_FeatureGroupName;
                throw new UndeferrableValueException("Value 'FeatureGroup.FeatureGroupName' is not present");
            }
        }

        /// <summary>
        /// The Offline Feature Store Configuration. See Offline Store Config Below.
        /// </summary>
        [PolicyResourceProperty("offlineStoreConfig", "_mUnknown_OfflineStoreConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FeatureGroupOfflineStoreConfig? _mValue_OfflineStoreConfig;
        private bool _mUnknown_OfflineStoreConfig;
        public Outputs.FeatureGroupOfflineStoreConfig? OfflineStoreConfig
        {
            get
            {
                if (!_mUnknown_OfflineStoreConfig) return _mValue_OfflineStoreConfig;
                throw new UndeferrableValueException("Value 'FeatureGroup.OfflineStoreConfig' is not present");
            }
        }

        /// <summary>
        /// The Online Feature Store Configuration. See Online Store Config Below.
        /// </summary>
        [PolicyResourceProperty("onlineStoreConfig", "_mUnknown_OnlineStoreConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FeatureGroupOnlineStoreConfig? _mValue_OnlineStoreConfig;
        private bool _mUnknown_OnlineStoreConfig;
        public Outputs.FeatureGroupOnlineStoreConfig? OnlineStoreConfig
        {
            get
            {
                if (!_mUnknown_OnlineStoreConfig) return _mValue_OnlineStoreConfig;
                throw new UndeferrableValueException("Value 'FeatureGroup.OnlineStoreConfig' is not present");
            }
        }

        /// <summary>
        /// The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
        /// </summary>
        [PolicyResourceProperty("recordIdentifierFeatureName", "_mUnknown_RecordIdentifierFeatureName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RecordIdentifierFeatureName;
        private bool _mUnknown_RecordIdentifierFeatureName;
        public string? RecordIdentifierFeatureName
        {
            get
            {
                if (!_mUnknown_RecordIdentifierFeatureName) return _mValue_RecordIdentifierFeatureName;
                throw new UndeferrableValueException("Value 'FeatureGroup.RecordIdentifierFeatureName' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'FeatureGroup.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FeatureGroup.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'FeatureGroup.TagsAll' is not present");
            }
        }

        [PolicyResourceProperty("throughputConfig", "_mUnknown_ThroughputConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.FeatureGroupThroughputConfig? _mValue_ThroughputConfig;
        private bool _mUnknown_ThroughputConfig;
        public Outputs.FeatureGroupThroughputConfig? ThroughputConfig
        {
            get
            {
                if (!_mUnknown_ThroughputConfig) return _mValue_ThroughputConfig;
                throw new UndeferrableValueException("Value 'FeatureGroup.ThroughputConfig' is not present");
            }
        }
    }

    [PolicyResourceType("aws:sagemaker/featureGroup:FeatureGroup")]
    public sealed class FeatureGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A free-form description of a Feature Group.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.Description' is not present");
            }
        }

        /// <summary>
        /// The name of the feature that stores the EventTime of a Record in a Feature Group.
        /// </summary>
        [PolicyResourceProperty("eventTimeFeatureName", "_mUnknown_EventTimeFeatureName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EventTimeFeatureName;
        private bool _mUnknown_EventTimeFeatureName;
        public string? EventTimeFeatureName
        {
            get
            {
                if (!_mUnknown_EventTimeFeatureName) return _mValue_EventTimeFeatureName;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.EventTimeFeatureName' is not present");
            }
        }

        /// <summary>
        /// A list of Feature names and types. See Feature Definition Below.
        /// </summary>
        [PolicyResourceProperty("featureDefinitions", "_mUnknown_FeatureDefinitions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.FeatureGroupFeatureDefinitionArgs>? _mValue_FeatureDefinitions;
        private bool _mUnknown_FeatureDefinitions;
        public List<Inputs.FeatureGroupFeatureDefinitionArgs>? FeatureDefinitions
        {
            get
            {
                if (!_mUnknown_FeatureDefinitions) return _mValue_FeatureDefinitions;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.FeatureDefinitions' is not present");
            }
        }

        /// <summary>
        /// The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
        /// </summary>
        [PolicyResourceProperty("featureGroupName", "_mUnknown_FeatureGroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FeatureGroupName;
        private bool _mUnknown_FeatureGroupName;
        public string? FeatureGroupName
        {
            get
            {
                if (!_mUnknown_FeatureGroupName) return _mValue_FeatureGroupName;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.FeatureGroupName' is not present");
            }
        }

        /// <summary>
        /// The Offline Feature Store Configuration. See Offline Store Config Below.
        /// </summary>
        [PolicyResourceProperty("offlineStoreConfig", "_mUnknown_OfflineStoreConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FeatureGroupOfflineStoreConfigArgs? _mValue_OfflineStoreConfig;
        private bool _mUnknown_OfflineStoreConfig;
        public Inputs.FeatureGroupOfflineStoreConfigArgs? OfflineStoreConfig
        {
            get
            {
                if (!_mUnknown_OfflineStoreConfig) return _mValue_OfflineStoreConfig;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.OfflineStoreConfig' is not present");
            }
        }

        /// <summary>
        /// The Online Feature Store Configuration. See Online Store Config Below.
        /// </summary>
        [PolicyResourceProperty("onlineStoreConfig", "_mUnknown_OnlineStoreConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FeatureGroupOnlineStoreConfigArgs? _mValue_OnlineStoreConfig;
        private bool _mUnknown_OnlineStoreConfig;
        public Inputs.FeatureGroupOnlineStoreConfigArgs? OnlineStoreConfig
        {
            get
            {
                if (!_mUnknown_OnlineStoreConfig) return _mValue_OnlineStoreConfig;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.OnlineStoreConfig' is not present");
            }
        }

        /// <summary>
        /// The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
        /// </summary>
        [PolicyResourceProperty("recordIdentifierFeatureName", "_mUnknown_RecordIdentifierFeatureName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RecordIdentifierFeatureName;
        private bool _mUnknown_RecordIdentifierFeatureName;
        public string? RecordIdentifierFeatureName
        {
            get
            {
                if (!_mUnknown_RecordIdentifierFeatureName) return _mValue_RecordIdentifierFeatureName;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.RecordIdentifierFeatureName' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.Tags' is not present");
            }
        }

        [PolicyResourceProperty("throughputConfig", "_mUnknown_ThroughputConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.FeatureGroupThroughputConfigArgs? _mValue_ThroughputConfig;
        private bool _mUnknown_ThroughputConfig;
        public Inputs.FeatureGroupThroughputConfigArgs? ThroughputConfig
        {
            get
            {
                if (!_mUnknown_ThroughputConfig) return _mValue_ThroughputConfig;
                throw new UndeferrableValueException("Value 'FeatureGroupArgs.ThroughputConfig' is not present");
            }
        }
    }
}
