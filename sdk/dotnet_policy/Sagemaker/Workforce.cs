// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Sagemaker
{
    [PolicyResourceType("aws:sagemaker/workforce:Workforce")]
    public sealed class Workforce : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Workforce.Arn' is not present");
            }
        }

        /// <summary>
        /// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidc_config`. see Cognito Config details below.
        /// </summary>
        [PolicyResourceProperty("cognitoConfig", "_mUnknown_CognitoConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WorkforceCognitoConfig? _mValue_CognitoConfig;
        private bool _mUnknown_CognitoConfig;
        public Outputs.WorkforceCognitoConfig? CognitoConfig
        {
            get
            {
                if (!_mUnknown_CognitoConfig) return _mValue_CognitoConfig;
                throw new UndeferrableValueException("Value 'Workforce.CognitoConfig' is not present");
            }
        }

        /// <summary>
        /// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognito_config`. see OIDC Config details below.
        /// </summary>
        [PolicyResourceProperty("oidcConfig", "_mUnknown_OidcConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WorkforceOidcConfig? _mValue_OidcConfig;
        private bool _mUnknown_OidcConfig;
        public Outputs.WorkforceOidcConfig? OidcConfig
        {
            get
            {
                if (!_mUnknown_OidcConfig) return _mValue_OidcConfig;
                throw new UndeferrableValueException("Value 'Workforce.OidcConfig' is not present");
            }
        }

        /// <summary>
        /// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
        /// </summary>
        [PolicyResourceProperty("sourceIpConfig", "_mUnknown_SourceIpConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WorkforceSourceIpConfig? _mValue_SourceIpConfig;
        private bool _mUnknown_SourceIpConfig;
        public Outputs.WorkforceSourceIpConfig? SourceIpConfig
        {
            get
            {
                if (!_mUnknown_SourceIpConfig) return _mValue_SourceIpConfig;
                throw new UndeferrableValueException("Value 'Workforce.SourceIpConfig' is not present");
            }
        }

        /// <summary>
        /// The subdomain for your OIDC Identity Provider.
        /// </summary>
        [PolicyResourceProperty("subdomain", "_mUnknown_Subdomain")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Subdomain;
        private bool _mUnknown_Subdomain;
        public string? Subdomain
        {
            get
            {
                if (!_mUnknown_Subdomain) return _mValue_Subdomain;
                throw new UndeferrableValueException("Value 'Workforce.Subdomain' is not present");
            }
        }

        /// <summary>
        /// The name of the Workforce (must be unique).
        /// </summary>
        [PolicyResourceProperty("workforceName", "_mUnknown_WorkforceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkforceName;
        private bool _mUnknown_WorkforceName;
        public string? WorkforceName
        {
            get
            {
                if (!_mUnknown_WorkforceName) return _mValue_WorkforceName;
                throw new UndeferrableValueException("Value 'Workforce.WorkforceName' is not present");
            }
        }

        /// <summary>
        /// configure a workforce using VPC. see Workforce VPC Config details below.
        /// </summary>
        [PolicyResourceProperty("workforceVpcConfig", "_mUnknown_WorkforceVpcConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.WorkforceWorkforceVpcConfig? _mValue_WorkforceVpcConfig;
        private bool _mUnknown_WorkforceVpcConfig;
        public Outputs.WorkforceWorkforceVpcConfig? WorkforceVpcConfig
        {
            get
            {
                if (!_mUnknown_WorkforceVpcConfig) return _mValue_WorkforceVpcConfig;
                throw new UndeferrableValueException("Value 'Workforce.WorkforceVpcConfig' is not present");
            }
        }
    }

    [PolicyResourceType("aws:sagemaker/workforce:Workforce")]
    public sealed class WorkforceArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with `oidc_config`. see Cognito Config details below.
        /// </summary>
        [PolicyResourceProperty("cognitoConfig", "_mUnknown_CognitoConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.WorkforceCognitoConfigArgs? _mValue_CognitoConfig;
        private bool _mUnknown_CognitoConfig;
        public Inputs.WorkforceCognitoConfigArgs? CognitoConfig
        {
            get
            {
                if (!_mUnknown_CognitoConfig) return _mValue_CognitoConfig;
                throw new UndeferrableValueException("Value 'WorkforceArgs.CognitoConfig' is not present");
            }
        }

        /// <summary>
        /// Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with `cognito_config`. see OIDC Config details below.
        /// </summary>
        [PolicyResourceProperty("oidcConfig", "_mUnknown_OidcConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.WorkforceOidcConfigArgs? _mValue_OidcConfig;
        private bool _mUnknown_OidcConfig;
        public Inputs.WorkforceOidcConfigArgs? OidcConfig
        {
            get
            {
                if (!_mUnknown_OidcConfig) return _mValue_OidcConfig;
                throw new UndeferrableValueException("Value 'WorkforceArgs.OidcConfig' is not present");
            }
        }

        /// <summary>
        /// A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.
        /// </summary>
        [PolicyResourceProperty("sourceIpConfig", "_mUnknown_SourceIpConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.WorkforceSourceIpConfigArgs? _mValue_SourceIpConfig;
        private bool _mUnknown_SourceIpConfig;
        public Inputs.WorkforceSourceIpConfigArgs? SourceIpConfig
        {
            get
            {
                if (!_mUnknown_SourceIpConfig) return _mValue_SourceIpConfig;
                throw new UndeferrableValueException("Value 'WorkforceArgs.SourceIpConfig' is not present");
            }
        }

        /// <summary>
        /// The name of the Workforce (must be unique).
        /// </summary>
        [PolicyResourceProperty("workforceName", "_mUnknown_WorkforceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_WorkforceName;
        private bool _mUnknown_WorkforceName;
        public string? WorkforceName
        {
            get
            {
                if (!_mUnknown_WorkforceName) return _mValue_WorkforceName;
                throw new UndeferrableValueException("Value 'WorkforceArgs.WorkforceName' is not present");
            }
        }

        /// <summary>
        /// configure a workforce using VPC. see Workforce VPC Config details below.
        /// </summary>
        [PolicyResourceProperty("workforceVpcConfig", "_mUnknown_WorkforceVpcConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.WorkforceWorkforceVpcConfigArgs? _mValue_WorkforceVpcConfig;
        private bool _mUnknown_WorkforceVpcConfig;
        public Inputs.WorkforceWorkforceVpcConfigArgs? WorkforceVpcConfig
        {
            get
            {
                if (!_mUnknown_WorkforceVpcConfig) return _mValue_WorkforceVpcConfig;
                throw new UndeferrableValueException("Value 'WorkforceArgs.WorkforceVpcConfig' is not present");
            }
        }
    }
}
