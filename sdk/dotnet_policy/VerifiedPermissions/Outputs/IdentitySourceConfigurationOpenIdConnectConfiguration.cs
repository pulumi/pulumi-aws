// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedPermissions.Outputs
{
    public sealed class IdentitySourceConfigurationOpenIdConnectConfiguration
    {
        /// <summary>
        /// A descriptive string that you want to prefix to user entities from your OIDC identity provider.
        /// </summary>
        [Input("entityIdPrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mEntityIdPrefix;

        public string? EntityIdPrefix => _mEntityIdPrefix.GetValue("entityIdPrefix");

        /// <summary>
        /// The type of entity that a policy store maps to groups from an Amazon Cognito user pool identity source. See Group Configuration below.
        /// </summary>
        [Input("groupConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration> _mGroupConfiguration;

        public Outputs.IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration? GroupConfiguration => _mGroupConfiguration.GetValue("groupConfiguration");

        /// <summary>
        /// The issuer URL of an OIDC identity provider. This URL must have an OIDC discovery endpoint at the path `.well-known/openid-configuration`.
        /// </summary>
        [Input("issuer")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mIssuer;

        public string? Issuer => _mIssuer.GetValue("issuer");

        /// <summary>
        /// The token type that you want to process from your OIDC identity provider. Your policy store can process either identity (ID) or access tokens from a given OIDC identity source. See Token Selection below.
        /// </summary>
        [Input("tokenSelection")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Outputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection> _mTokenSelection;

        public Outputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection? TokenSelection => _mTokenSelection.GetValue("tokenSelection");
    }
}
