// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedPermissions.Outputs
{
    public sealed class IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration
    {
        /// <summary>
        /// The token claim that you want Verified Permissions to interpret as group membership. For example, `groups`.
        /// </summary>
        [PolicyResourceProperty("groupClaim", "_mUnknown_GroupClaim")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GroupClaim;
        private bool _mUnknown_GroupClaim;
        public string? GroupClaim
        {
            get
            {
                if (!_mUnknown_GroupClaim) return _mValue_GroupClaim;
                throw new UndeferrableValueException("Value 'IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration.GroupClaim' is not present");
            }
        }

        /// <summary>
        /// The name of the schema entity type that's mapped to the user pool group. Defaults to `AWS::CognitoGroup`.
        /// </summary>
        [PolicyResourceProperty("groupEntityType", "_mUnknown_GroupEntityType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_GroupEntityType;
        private bool _mUnknown_GroupEntityType;
        public string? GroupEntityType
        {
            get
            {
                if (!_mUnknown_GroupEntityType) return _mValue_GroupEntityType;
                throw new UndeferrableValueException("Value 'IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration.GroupEntityType' is not present");
            }
        }
    }
}
