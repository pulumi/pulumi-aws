// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.VerifiedPermissions
{
    [PolicyResourceType("aws:verifiedpermissions/schema:Schema")]
    public sealed class Schema : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The definition of the schema.
        /// </summary>
        [PolicyResourceProperty("definition", "_mUnknown_Definition")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.SchemaDefinition? _mValue_Definition;
        private bool _mUnknown_Definition;
        public Outputs.SchemaDefinition? Definition
        {
            get
            {
                if (!_mUnknown_Definition) return _mValue_Definition;
                throw new UndeferrableValueException("Value 'Schema.Definition' is not present");
            }
        }

        /// <summary>
        /// (Optional) Identifies the namespaces of the entities referenced by this schema.
        /// </summary>
        [PolicyResourceProperty("namespaces", "_mUnknown_Namespaces")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Namespaces;
        private bool _mUnknown_Namespaces;
        public List<string>? Namespaces
        {
            get
            {
                if (!_mUnknown_Namespaces) return _mValue_Namespaces;
                throw new UndeferrableValueException("Value 'Schema.Namespaces' is not present");
            }
        }

        /// <summary>
        /// The ID of the Policy Store.
        /// </summary>
        [PolicyResourceProperty("policyStoreId", "_mUnknown_PolicyStoreId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyStoreId;
        private bool _mUnknown_PolicyStoreId;
        public string? PolicyStoreId
        {
            get
            {
                if (!_mUnknown_PolicyStoreId) return _mValue_PolicyStoreId;
                throw new UndeferrableValueException("Value 'Schema.PolicyStoreId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:verifiedpermissions/schema:Schema")]
    public sealed class SchemaArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The definition of the schema.
        /// </summary>
        [PolicyResourceProperty("definition", "_mUnknown_Definition")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.SchemaDefinitionArgs? _mValue_Definition;
        private bool _mUnknown_Definition;
        public Inputs.SchemaDefinitionArgs? Definition
        {
            get
            {
                if (!_mUnknown_Definition) return _mValue_Definition;
                throw new UndeferrableValueException("Value 'SchemaArgs.Definition' is not present");
            }
        }

        /// <summary>
        /// The ID of the Policy Store.
        /// </summary>
        [PolicyResourceProperty("policyStoreId", "_mUnknown_PolicyStoreId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyStoreId;
        private bool _mUnknown_PolicyStoreId;
        public string? PolicyStoreId
        {
            get
            {
                if (!_mUnknown_PolicyStoreId) return _mValue_PolicyStoreId;
                throw new UndeferrableValueException("Value 'SchemaArgs.PolicyStoreId' is not present");
            }
        }
    }
}
