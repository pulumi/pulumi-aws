// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Pinpoint
{
    [PolicyResourceType("aws:pinpoint/app:App")]
    public sealed class App : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Application ID of the Pinpoint App.
        /// </summary>
        [Input("applicationId")]
        public string? ApplicationId;

        /// <summary>
        /// Amazon Resource Name (ARN) of the PinPoint Application
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
        /// </summary>
        [Input("campaignHook")]
        public AppCampaignHook? CampaignHook;

        /// <summary>
        /// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
        /// </summary>
        [Input("limits")]
        public AppLimits? Limits;

        /// <summary>
        /// The application name. By default generated by Pulumi
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The name of the Pinpoint application. Conflicts with `name`
        /// </summary>
        [Input("namePrefix")]
        public string? NamePrefix;

        /// <summary>
        /// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
        /// </summary>
        [Input("quietTime")]
        public AppQuietTime? QuietTime;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
