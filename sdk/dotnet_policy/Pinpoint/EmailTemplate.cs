// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Pinpoint
{
    [PolicyResourceType("aws:pinpoint/emailTemplate:EmailTemplate")]
    public sealed class EmailTemplate : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the message template.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'EmailTemplate.Arn' is not present");
            }
        }

        /// <summary>
        /// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel. See Email Template
        /// </summary>
        [PolicyResourceProperty("emailTemplates", "_mUnknown_EmailTemplates")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.EmailTemplateEmailTemplate>? _mValue_EmailTemplates;
        private bool _mUnknown_EmailTemplates;
        public List<Outputs.EmailTemplateEmailTemplate>? EmailTemplates
        {
            get
            {
                if (!_mUnknown_EmailTemplates) return _mValue_EmailTemplates;
                throw new UndeferrableValueException("Value 'EmailTemplate.EmailTemplates' is not present");
            }
        }

        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'EmailTemplate.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'EmailTemplate.TagsAll' is not present");
            }
        }

        /// <summary>
        /// name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.
        /// </summary>
        [PolicyResourceProperty("templateName", "_mUnknown_TemplateName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TemplateName;
        private bool _mUnknown_TemplateName;
        public string? TemplateName
        {
            get
            {
                if (!_mUnknown_TemplateName) return _mValue_TemplateName;
                throw new UndeferrableValueException("Value 'EmailTemplate.TemplateName' is not present");
            }
        }
    }

    [PolicyResourceType("aws:pinpoint/emailTemplate:EmailTemplate")]
    public sealed class EmailTemplateArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel. See Email Template
        /// </summary>
        [PolicyResourceProperty("emailTemplates", "_mUnknown_EmailTemplates")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.EmailTemplateEmailTemplateArgs>? _mValue_EmailTemplates;
        private bool _mUnknown_EmailTemplates;
        public List<Inputs.EmailTemplateEmailTemplateArgs>? EmailTemplates
        {
            get
            {
                if (!_mUnknown_EmailTemplates) return _mValue_EmailTemplates;
                throw new UndeferrableValueException("Value 'EmailTemplateArgs.EmailTemplates' is not present");
            }
        }

        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'EmailTemplateArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.
        /// </summary>
        [PolicyResourceProperty("templateName", "_mUnknown_TemplateName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TemplateName;
        private bool _mUnknown_TemplateName;
        public string? TemplateName
        {
            get
            {
                if (!_mUnknown_TemplateName) return _mValue_TemplateName;
                throw new UndeferrableValueException("Value 'EmailTemplateArgs.TemplateName' is not present");
            }
        }
    }
}
