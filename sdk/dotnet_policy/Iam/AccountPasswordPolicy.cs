// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam
{
    [PolicyResourceType("aws:iam/accountPasswordPolicy:AccountPasswordPolicy")]
    public sealed class AccountPasswordPolicy : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Whether to allow users to change their own password
        /// </summary>
        [Input("allowUsersToChangePassword")]
        public bool? AllowUsersToChangePassword;

        /// <summary>
        /// Indicates whether passwords in the account expire. Returns `true` if `max_password_age` contains a value greater than `0`. Returns `false` if it is `0` or _not present_.
        /// </summary>
        [Input("expirePasswords")]
        public bool? ExpirePasswords;

        /// <summary>
        /// Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset)
        /// </summary>
        [Input("hardExpiry")]
        public bool? HardExpiry;

        /// <summary>
        /// The number of days that an user password is valid.
        /// </summary>
        [Input("maxPasswordAge")]
        public int? MaxPasswordAge;

        /// <summary>
        /// Minimum length to require for user passwords.
        /// </summary>
        [Input("minimumPasswordLength")]
        public int? MinimumPasswordLength;

        /// <summary>
        /// The number of previous passwords that users are prevented from reusing.
        /// </summary>
        [Input("passwordReusePrevention")]
        public int? PasswordReusePrevention;

        /// <summary>
        /// Whether to require lowercase characters for user passwords.
        /// </summary>
        [Input("requireLowercaseCharacters")]
        public bool? RequireLowercaseCharacters;

        /// <summary>
        /// Whether to require numbers for user passwords.
        /// </summary>
        [Input("requireNumbers")]
        public bool? RequireNumbers;

        /// <summary>
        /// Whether to require symbols for user passwords.
        /// </summary>
        [Input("requireSymbols")]
        public bool? RequireSymbols;

        /// <summary>
        /// Whether to require uppercase characters for user passwords.
        /// </summary>
        [Input("requireUppercaseCharacters")]
        public bool? RequireUppercaseCharacters;
    }
}
