// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam
{
    [PolicyResourceType("aws:iam/policy:Policy")]
    public sealed class Policy : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN assigned by AWS to this policy.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Policy.Arn' is not present");
            }
        }

        /// <summary>
        /// Number of entities (users, groups, and roles) that the policy is attached to.
        /// </summary>
        [PolicyResourceProperty("attachmentCount", "_mUnknown_AttachmentCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_AttachmentCount;
        private bool _mUnknown_AttachmentCount;
        public int? AttachmentCount
        {
            get
            {
                if (!_mUnknown_AttachmentCount) return _mValue_AttachmentCount;
                throw new UndeferrableValueException("Value 'Policy.AttachmentCount' is not present");
            }
        }

        /// <summary>
        /// Description of the IAM policy.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Policy.Description' is not present");
            }
        }

        /// <summary>
        /// Name of the policy. If omitted, the provider will assign a random, unique name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Policy.Name' is not present");
            }
        }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'Policy.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// Path in which to create the policy. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.
        /// </summary>
        [PolicyResourceProperty("path", "_mUnknown_Path")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Path;
        private bool _mUnknown_Path;
        public string? Path
        {
            get
            {
                if (!_mUnknown_Path) return _mValue_Path;
                throw new UndeferrableValueException("Value 'Policy.Path' is not present");
            }
        }

        /// <summary>
        /// Policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents, see the AWS IAM Policy Document Guide
        /// </summary>
        [PolicyResourceProperty("policy", "_mUnknown_PolicyDocument")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyDocument;
        private bool _mUnknown_PolicyDocument;
        public string? PolicyDocument
        {
            get
            {
                if (!_mUnknown_PolicyDocument) return _mValue_PolicyDocument;
                throw new UndeferrableValueException("Value 'Policy.PolicyDocument' is not present");
            }
        }

        /// <summary>
        /// Policy's ID.
        /// </summary>
        [PolicyResourceProperty("policyId", "_mUnknown_PolicyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyId;
        private bool _mUnknown_PolicyId;
        public string? PolicyId
        {
            get
            {
                if (!_mUnknown_PolicyId) return _mValue_PolicyId;
                throw new UndeferrableValueException("Value 'Policy.PolicyId' is not present");
            }
        }

        /// <summary>
        /// Map of resource tags for the IAM Policy. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Policy.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Policy.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:iam/policy:Policy")]
    public sealed class PolicyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Description of the IAM policy.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'PolicyArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Name of the policy. If omitted, the provider will assign a random, unique name.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'PolicyArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
        /// </summary>
        [PolicyResourceProperty("namePrefix", "_mUnknown_NamePrefix")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NamePrefix;
        private bool _mUnknown_NamePrefix;
        public string? NamePrefix
        {
            get
            {
                if (!_mUnknown_NamePrefix) return _mValue_NamePrefix;
                throw new UndeferrableValueException("Value 'PolicyArgs.NamePrefix' is not present");
            }
        }

        /// <summary>
        /// Path in which to create the policy. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.
        /// </summary>
        [PolicyResourceProperty("path", "_mUnknown_Path")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Path;
        private bool _mUnknown_Path;
        public string? Path
        {
            get
            {
                if (!_mUnknown_Path) return _mValue_Path;
                throw new UndeferrableValueException("Value 'PolicyArgs.Path' is not present");
            }
        }

        /// <summary>
        /// Policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents, see the AWS IAM Policy Document Guide
        /// </summary>
        [PolicyResourceProperty("policy", "_mUnknown_PolicyDocument")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PolicyDocument;
        private bool _mUnknown_PolicyDocument;
        public string? PolicyDocument
        {
            get
            {
                if (!_mUnknown_PolicyDocument) return _mValue_PolicyDocument;
                throw new UndeferrableValueException("Value 'PolicyArgs.PolicyDocument' is not present");
            }
        }

        /// <summary>
        /// Map of resource tags for the IAM Policy. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'PolicyArgs.Tags' is not present");
            }
        }
    }
}
