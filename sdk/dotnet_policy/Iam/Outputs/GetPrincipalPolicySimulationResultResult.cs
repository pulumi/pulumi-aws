// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam.Outputs
{
    public sealed class GetPrincipalPolicySimulationResultResult
    {
        /// <summary>
        /// The name of the single IAM action used for this particular request.
        /// </summary>
        [Input("actionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mActionName;

        public string? ActionName => _mActionName.GetValue("actionName");

        /// <summary>
        /// `true` if `decision` is "allowed", and `false` otherwise.
        /// </summary>
        [Input("allowed")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<bool> _mAllowed;

        public bool? Allowed => _mAllowed.GetValue("allowed");

        /// <summary>
        /// The raw decision determined from all of the policies in scope; either "allowed", "explicitDeny", or "implicitDeny".
        /// </summary>
        [Input("decision")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mDecision;

        public string? Decision => _mDecision.GetValue("decision");

        /// <summary>
        /// A map of arbitrary metadata entries returned by the policy simulator for this request.
        /// </summary>
        [Input("decisionDetails")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<Dictionary<string, string>> _mDecisionDetails;

        public Dictionary<string, string>? DecisionDetails => _mDecisionDetails.GetValue("decisionDetails");

        /// <summary>
        /// A nested set of objects describing which policies contained statements that were relevant to this simulation request. Each object has attributes `source_policy_id` and `source_policy_type` to identify one of the policies.
        /// </summary>
        [Input("matchedStatements")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<Outputs.GetPrincipalPolicySimulationResultMatchedStatementResult>> _mMatchedStatements;

        public List<Outputs.GetPrincipalPolicySimulationResultMatchedStatementResult>? MatchedStatements => _mMatchedStatements.GetValue("matchedStatements");

        /// <summary>
        /// A set of context keys (or condition keys) that were needed by some of the policies contributing to this result but not specified using a `context` block in the configuration. Missing or incorrect context keys will typically cause a simulated request to be disallowed.
        /// </summary>
        [Input("missingContextKeys")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<List<string>> _mMissingContextKeys;

        public List<string>? MissingContextKeys => _mMissingContextKeys.GetValue("missingContextKeys");

        /// <summary>
        /// ARN of the resource that was used for this particular request. When you specify multiple actions and multiple resource ARNs, that causes a separate policy request for each combination of unique action and resource.
        /// </summary>
        [Input("resourceArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private global::Pulumi.Core.UndeferrableValue<string> _mResourceArn;

        public string? ResourceArn => _mResourceArn.GetValue("resourceArn");
    }
}
