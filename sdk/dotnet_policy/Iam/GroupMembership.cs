// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam
{
    [PolicyResourceType("aws:iam/groupMembership:GroupMembership")]
    public sealed class GroupMembership : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The IAM Group name to attach the list of `users` to
        /// </summary>
        [PolicyResourceProperty("group", "_mUnknown_Group")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Group;
        private bool _mUnknown_Group;
        public string? Group
        {
            get
            {
                if (!_mUnknown_Group) return _mValue_Group;
                throw new UndeferrableValueException("Value 'GroupMembership.Group' is not present");
            }
        }

        /// <summary>
        /// The name to identify the Group Membership
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'GroupMembership.Name' is not present");
            }
        }

        /// <summary>
        /// A list of IAM User names to associate with the Group
        /// </summary>
        [PolicyResourceProperty("users", "_mUnknown_Users")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Users;
        private bool _mUnknown_Users;
        public List<string>? Users
        {
            get
            {
                if (!_mUnknown_Users) return _mValue_Users;
                throw new UndeferrableValueException("Value 'GroupMembership.Users' is not present");
            }
        }
    }

    [PolicyResourceType("aws:iam/groupMembership:GroupMembership")]
    public sealed class GroupMembershipArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The IAM Group name to attach the list of `users` to
        /// </summary>
        [PolicyResourceProperty("group", "_mUnknown_Group")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Group;
        private bool _mUnknown_Group;
        public string? Group
        {
            get
            {
                if (!_mUnknown_Group) return _mValue_Group;
                throw new UndeferrableValueException("Value 'GroupMembershipArgs.Group' is not present");
            }
        }

        /// <summary>
        /// The name to identify the Group Membership
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'GroupMembershipArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A list of IAM User names to associate with the Group
        /// </summary>
        [PolicyResourceProperty("users", "_mUnknown_Users")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Users;
        private bool _mUnknown_Users;
        public List<string>? Users
        {
            get
            {
                if (!_mUnknown_Users) return _mValue_Users;
                throw new UndeferrableValueException("Value 'GroupMembershipArgs.Users' is not present");
            }
        }
    }
}
