// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam
{
    [PolicyResourceType("aws:iam/sshKey:SshKey")]
    public sealed class SshKey : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.
        /// </summary>
        [PolicyResourceProperty("encoding", "_mUnknown_Encoding")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Encoding;
        private bool _mUnknown_Encoding;
        public string? Encoding
        {
            get
            {
                if (!_mUnknown_Encoding) return _mValue_Encoding;
                throw new UndeferrableValueException("Value 'SshKey.Encoding' is not present");
            }
        }

        /// <summary>
        /// The MD5 message digest of the SSH public key.
        /// </summary>
        [PolicyResourceProperty("fingerprint", "_mUnknown_Fingerprint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Fingerprint;
        private bool _mUnknown_Fingerprint;
        public string? Fingerprint
        {
            get
            {
                if (!_mUnknown_Fingerprint) return _mValue_Fingerprint;
                throw new UndeferrableValueException("Value 'SshKey.Fingerprint' is not present");
            }
        }

        /// <summary>
        /// The SSH public key. The public key must be encoded in ssh-rsa format or PEM format.
        /// </summary>
        [PolicyResourceProperty("publicKey", "_mUnknown_PublicKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PublicKey;
        private bool _mUnknown_PublicKey;
        public string? PublicKey
        {
            get
            {
                if (!_mUnknown_PublicKey) return _mValue_PublicKey;
                throw new UndeferrableValueException("Value 'SshKey.PublicKey' is not present");
            }
        }

        /// <summary>
        /// The unique identifier for the SSH public key.
        /// </summary>
        [PolicyResourceProperty("sshPublicKeyId", "_mUnknown_SshPublicKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SshPublicKeyId;
        private bool _mUnknown_SshPublicKeyId;
        public string? SshPublicKeyId
        {
            get
            {
                if (!_mUnknown_SshPublicKeyId) return _mValue_SshPublicKeyId;
                throw new UndeferrableValueException("Value 'SshKey.SshPublicKeyId' is not present");
            }
        }

        /// <summary>
        /// The status to assign to the SSH public key. Active means the key can be used for authentication with an AWS CodeCommit repository. Inactive means the key cannot be used. Default is `active`.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'SshKey.Status' is not present");
            }
        }

        /// <summary>
        /// The name of the IAM user to associate the SSH public key with.
        /// </summary>
        [PolicyResourceProperty("username", "_mUnknown_Username")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Username;
        private bool _mUnknown_Username;
        public string? Username
        {
            get
            {
                if (!_mUnknown_Username) return _mValue_Username;
                throw new UndeferrableValueException("Value 'SshKey.Username' is not present");
            }
        }
    }

    [PolicyResourceType("aws:iam/sshKey:SshKey")]
    public sealed class SshKeyArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.
        /// </summary>
        [PolicyResourceProperty("encoding", "_mUnknown_Encoding")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Encoding;
        private bool _mUnknown_Encoding;
        public string? Encoding
        {
            get
            {
                if (!_mUnknown_Encoding) return _mValue_Encoding;
                throw new UndeferrableValueException("Value 'SshKeyArgs.Encoding' is not present");
            }
        }

        /// <summary>
        /// The SSH public key. The public key must be encoded in ssh-rsa format or PEM format.
        /// </summary>
        [PolicyResourceProperty("publicKey", "_mUnknown_PublicKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PublicKey;
        private bool _mUnknown_PublicKey;
        public string? PublicKey
        {
            get
            {
                if (!_mUnknown_PublicKey) return _mValue_PublicKey;
                throw new UndeferrableValueException("Value 'SshKeyArgs.PublicKey' is not present");
            }
        }

        /// <summary>
        /// The status to assign to the SSH public key. Active means the key can be used for authentication with an AWS CodeCommit repository. Inactive means the key cannot be used. Default is `active`.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'SshKeyArgs.Status' is not present");
            }
        }

        /// <summary>
        /// The name of the IAM user to associate the SSH public key with.
        /// </summary>
        [PolicyResourceProperty("username", "_mUnknown_Username")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Username;
        private bool _mUnknown_Username;
        public string? Username
        {
            get
            {
                if (!_mUnknown_Username) return _mValue_Username;
                throw new UndeferrableValueException("Value 'SshKeyArgs.Username' is not present");
            }
        }
    }
}
