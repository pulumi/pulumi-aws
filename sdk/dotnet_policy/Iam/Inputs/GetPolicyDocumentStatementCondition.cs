// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam.Inputs
{
    public sealed class GetPolicyDocumentStatementConditionArgs
    {
        /// <summary>
        /// Name of the [IAM condition operator](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html) to evaluate.
        /// </summary>
        [PolicyResourceProperty("test", "_mUnknown_Test")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Test;
        private bool _mUnknown_Test;
        public string? Test
        {
            get
            {
                if (!_mUnknown_Test) return _mValue_Test;
                throw new UndeferrableValueException("Value 'GetPolicyDocumentStatementConditionArgs.Test' is not present");
            }
        }

        /// <summary>
        /// Values to evaluate the condition against. If multiple values are provided, the condition matches if at least one of them applies. That is, AWS evaluates multiple values as though using an "OR" boolean operation.
        /// </summary>
        [PolicyResourceProperty("values", "_mUnknown_Values")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Values;
        private bool _mUnknown_Values;
        public List<string>? Values
        {
            get
            {
                if (!_mUnknown_Values) return _mValue_Values;
                throw new UndeferrableValueException("Value 'GetPolicyDocumentStatementConditionArgs.Values' is not present");
            }
        }

        /// <summary>
        /// Name of a [Context Variable](http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#AvailableKeys) to apply the condition to. Context variables may either be standard AWS variables starting with `aws:` or service-specific variables prefixed with the service name.
        /// </summary>
        [PolicyResourceProperty("variable", "_mUnknown_Variable")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Variable;
        private bool _mUnknown_Variable;
        public string? Variable
        {
            get
            {
                if (!_mUnknown_Variable) return _mValue_Variable;
                throw new UndeferrableValueException("Value 'GetPolicyDocumentStatementConditionArgs.Variable' is not present");
            }
        }
    }
}
