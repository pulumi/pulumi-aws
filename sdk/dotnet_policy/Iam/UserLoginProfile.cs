// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam
{
    [PolicyResourceType("aws:iam/userLoginProfile:UserLoginProfile")]
    public sealed class UserLoginProfile : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The encrypted password, base64 encoded. Only available if password was handled on resource creation, not import.
        /// </summary>
        [PolicyResourceProperty("encryptedPassword", "_mUnknown_EncryptedPassword")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EncryptedPassword;
        private bool _mUnknown_EncryptedPassword;
        public string? EncryptedPassword
        {
            get
            {
                if (!_mUnknown_EncryptedPassword) return _mValue_EncryptedPassword;
                throw new UndeferrableValueException("Value 'UserLoginProfile.EncryptedPassword' is not present");
            }
        }

        /// <summary>
        /// The fingerprint of the PGP key used to encrypt the password. Only available if password was handled on this provider resource creation, not import.
        /// </summary>
        [PolicyResourceProperty("keyFingerprint", "_mUnknown_KeyFingerprint")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KeyFingerprint;
        private bool _mUnknown_KeyFingerprint;
        public string? KeyFingerprint
        {
            get
            {
                if (!_mUnknown_KeyFingerprint) return _mValue_KeyFingerprint;
                throw new UndeferrableValueException("Value 'UserLoginProfile.KeyFingerprint' is not present");
            }
        }

        /// <summary>
        /// The plain text password, only available when `pgp_key` is not provided.
        /// </summary>
        [PolicyResourceProperty("password", "_mUnknown_Password")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Password;
        private bool _mUnknown_Password;
        public string? Password
        {
            get
            {
                if (!_mUnknown_Password) return _mValue_Password;
                throw new UndeferrableValueException("Value 'UserLoginProfile.Password' is not present");
            }
        }

        /// <summary>
        /// The length of the generated password on resource creation. Only applies on resource creation. Drift detection is not possible with this argument. Default value is `20`.
        /// </summary>
        [PolicyResourceProperty("passwordLength", "_mUnknown_PasswordLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_PasswordLength;
        private bool _mUnknown_PasswordLength;
        public int? PasswordLength
        {
            get
            {
                if (!_mUnknown_PasswordLength) return _mValue_PasswordLength;
                throw new UndeferrableValueException("Value 'UserLoginProfile.PasswordLength' is not present");
            }
        }

        /// <summary>
        /// Whether the user should be forced to reset the generated password on resource creation. Only applies on resource creation.
        /// </summary>
        [PolicyResourceProperty("passwordResetRequired", "_mUnknown_PasswordResetRequired")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PasswordResetRequired;
        private bool _mUnknown_PasswordResetRequired;
        public bool? PasswordResetRequired
        {
            get
            {
                if (!_mUnknown_PasswordResetRequired) return _mValue_PasswordResetRequired;
                throw new UndeferrableValueException("Value 'UserLoginProfile.PasswordResetRequired' is not present");
            }
        }

        /// <summary>
        /// Either a base-64 encoded PGP public key, or a keybase username in the form `keybase:username`. Only applies on resource creation. Drift detection is not possible with this argument.
        /// </summary>
        [PolicyResourceProperty("pgpKey", "_mUnknown_PgpKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PgpKey;
        private bool _mUnknown_PgpKey;
        public string? PgpKey
        {
            get
            {
                if (!_mUnknown_PgpKey) return _mValue_PgpKey;
                throw new UndeferrableValueException("Value 'UserLoginProfile.PgpKey' is not present");
            }
        }

        /// <summary>
        /// The IAM user's name.
        /// </summary>
        [PolicyResourceProperty("user", "_mUnknown_User")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_User;
        private bool _mUnknown_User;
        public string? User
        {
            get
            {
                if (!_mUnknown_User) return _mValue_User;
                throw new UndeferrableValueException("Value 'UserLoginProfile.User' is not present");
            }
        }
    }

    [PolicyResourceType("aws:iam/userLoginProfile:UserLoginProfile")]
    public sealed class UserLoginProfileArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The length of the generated password on resource creation. Only applies on resource creation. Drift detection is not possible with this argument. Default value is `20`.
        /// </summary>
        [PolicyResourceProperty("passwordLength", "_mUnknown_PasswordLength")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_PasswordLength;
        private bool _mUnknown_PasswordLength;
        public int? PasswordLength
        {
            get
            {
                if (!_mUnknown_PasswordLength) return _mValue_PasswordLength;
                throw new UndeferrableValueException("Value 'UserLoginProfileArgs.PasswordLength' is not present");
            }
        }

        /// <summary>
        /// Whether the user should be forced to reset the generated password on resource creation. Only applies on resource creation.
        /// </summary>
        [PolicyResourceProperty("passwordResetRequired", "_mUnknown_PasswordResetRequired")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PasswordResetRequired;
        private bool _mUnknown_PasswordResetRequired;
        public bool? PasswordResetRequired
        {
            get
            {
                if (!_mUnknown_PasswordResetRequired) return _mValue_PasswordResetRequired;
                throw new UndeferrableValueException("Value 'UserLoginProfileArgs.PasswordResetRequired' is not present");
            }
        }

        /// <summary>
        /// Either a base-64 encoded PGP public key, or a keybase username in the form `keybase:username`. Only applies on resource creation. Drift detection is not possible with this argument.
        /// </summary>
        [PolicyResourceProperty("pgpKey", "_mUnknown_PgpKey")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PgpKey;
        private bool _mUnknown_PgpKey;
        public string? PgpKey
        {
            get
            {
                if (!_mUnknown_PgpKey) return _mValue_PgpKey;
                throw new UndeferrableValueException("Value 'UserLoginProfileArgs.PgpKey' is not present");
            }
        }

        /// <summary>
        /// The IAM user's name.
        /// </summary>
        [PolicyResourceProperty("user", "_mUnknown_User")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_User;
        private bool _mUnknown_User;
        public string? User
        {
            get
            {
                if (!_mUnknown_User) return _mValue_User;
                throw new UndeferrableValueException("Value 'UserLoginProfileArgs.User' is not present");
            }
        }
    }
}
