// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam
{
    [PolicyResourceType("aws:iam/userLoginProfile:UserLoginProfile")]
    public sealed class UserLoginProfile : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The encrypted password, base64 encoded. Only available if password was handled on resource creation, not import.
        /// </summary>
        [Input("encryptedPassword")]
        public string? EncryptedPassword;

        /// <summary>
        /// The fingerprint of the PGP key used to encrypt the password. Only available if password was handled on this provider resource creation, not import.
        /// </summary>
        [Input("keyFingerprint")]
        public string? KeyFingerprint;

        /// <summary>
        /// The plain text password, only available when `pgp_key` is not provided.
        /// </summary>
        [Input("password")]
        public string? Password;

        /// <summary>
        /// The length of the generated password on resource creation. Only applies on resource creation. Drift detection is not possible with this argument. Default value is `20`.
        /// </summary>
        [Input("passwordLength")]
        public int? PasswordLength;

        /// <summary>
        /// Whether the user should be forced to reset the generated password on resource creation. Only applies on resource creation.
        /// </summary>
        [Input("passwordResetRequired")]
        public bool? PasswordResetRequired;

        /// <summary>
        /// Either a base-64 encoded PGP public key, or a keybase username in the form `keybase:username`. Only applies on resource creation. Drift detection is not possible with this argument.
        /// </summary>
        [Input("pgpKey")]
        public string? PgpKey;

        /// <summary>
        /// The IAM user's name.
        /// </summary>
        [Input("user")]
        public string? User;
    }
}
