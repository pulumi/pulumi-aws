// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iam
{
    [PolicyResourceType("aws:iam/serviceLinkedRole:ServiceLinkedRole")]
    public sealed class ServiceLinkedRole : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) specifying the role.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
        /// </summary>
        [Input("awsServiceName")]
        public string? AwsServiceName;

        /// <summary>
        /// The creation date of the IAM role.
        /// </summary>
        [Input("createDate")]
        public string? CreateDate;

        /// <summary>
        /// Additional string appended to the role name. Not all AWS services support custom suffixes.
        /// </summary>
        [Input("customSuffix")]
        public string? CustomSuffix;

        /// <summary>
        /// The description of the role.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// The name of the role.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The path of the role.
        /// </summary>
        [Input("path")]
        public string? Path;

        /// <summary>
        /// Key-value mapping of tags for the IAM role. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The stable and unique string identifying the role.
        /// </summary>
        [Input("uniqueId")]
        public string? UniqueId;
    }
}
