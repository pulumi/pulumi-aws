// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Auditmanager
{
    [PolicyResourceType("aws:auditmanager/framework:Framework")]
    public sealed class Framework : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the framework.
        /// * `control_sets[*].id` - Unique identifier for the framework control set.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Framework.Arn' is not present");
            }
        }

        /// <summary>
        /// Compliance type that the new custom framework supports, such as `CIS` or `HIPAA`.
        /// </summary>
        [PolicyResourceProperty("complianceType", "_mUnknown_ComplianceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ComplianceType;
        private bool _mUnknown_ComplianceType;
        public string? ComplianceType
        {
            get
            {
                if (!_mUnknown_ComplianceType) return _mValue_ComplianceType;
                throw new UndeferrableValueException("Value 'Framework.ComplianceType' is not present");
            }
        }

        /// <summary>
        /// Configuration block(s) for the control sets that are associated with the framework. See `control_sets` Block below for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("controlSets", "_mUnknown_ControlSets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.FrameworkControlSet>? _mValue_ControlSets;
        private bool _mUnknown_ControlSets;
        public List<Outputs.FrameworkControlSet>? ControlSets
        {
            get
            {
                if (!_mUnknown_ControlSets) return _mValue_ControlSets;
                throw new UndeferrableValueException("Value 'Framework.ControlSets' is not present");
            }
        }

        /// <summary>
        /// Description of the framework.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Framework.Description' is not present");
            }
        }

        /// <summary>
        /// Framework type, such as a custom framework or a standard framework.
        /// </summary>
        [PolicyResourceProperty("frameworkType", "_mUnknown_FrameworkType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_FrameworkType;
        private bool _mUnknown_FrameworkType;
        public string? FrameworkType
        {
            get
            {
                if (!_mUnknown_FrameworkType) return _mValue_FrameworkType;
                throw new UndeferrableValueException("Value 'Framework.FrameworkType' is not present");
            }
        }

        /// <summary>
        /// Name of the framework.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Framework.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the framework. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Framework.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Framework.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:auditmanager/framework:Framework")]
    public sealed class FrameworkArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Compliance type that the new custom framework supports, such as `CIS` or `HIPAA`.
        /// </summary>
        [PolicyResourceProperty("complianceType", "_mUnknown_ComplianceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ComplianceType;
        private bool _mUnknown_ComplianceType;
        public string? ComplianceType
        {
            get
            {
                if (!_mUnknown_ComplianceType) return _mValue_ComplianceType;
                throw new UndeferrableValueException("Value 'FrameworkArgs.ComplianceType' is not present");
            }
        }

        /// <summary>
        /// Configuration block(s) for the control sets that are associated with the framework. See `control_sets` Block below for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("controlSets", "_mUnknown_ControlSets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.FrameworkControlSetArgs>? _mValue_ControlSets;
        private bool _mUnknown_ControlSets;
        public List<Inputs.FrameworkControlSetArgs>? ControlSets
        {
            get
            {
                if (!_mUnknown_ControlSets) return _mValue_ControlSets;
                throw new UndeferrableValueException("Value 'FrameworkArgs.ControlSets' is not present");
            }
        }

        /// <summary>
        /// Description of the framework.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'FrameworkArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Name of the framework.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'FrameworkArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the framework. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'FrameworkArgs.Tags' is not present");
            }
        }
    }
}
