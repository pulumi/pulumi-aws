// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Auditmanager
{
    [PolicyResourceType("aws:auditmanager/assessment:Assessment")]
    public sealed class Assessment : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the assessment.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Assessment report storage destination configuration. See `assessment_reports_destination` below.
        /// </summary>
        [Input("assessmentReportsDestination")]
        public AssessmentAssessmentReportsDestination? AssessmentReportsDestination;

        /// <summary>
        /// Description of the assessment.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Unique identifier of the framework the assessment will be created from.
        /// </summary>
        [Input("frameworkId")]
        public string? FrameworkId;

        /// <summary>
        /// Name of the assessment.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// List of roles for the assessment. See `roles` below.
        /// </summary>
        [Input("roles")]
        public List<AssessmentRole>? Roles;

        /// <summary>
        /// Complete list of all roles with access to the assessment. This includes both roles explicitly configured via the `roles` block, and any roles which have access to all Audit Manager assessments by default.
        /// </summary>
        [Input("rolesAlls")]
        public List<AssessmentRolesAll>? RolesAlls;

        /// <summary>
        /// Amazon Web Services accounts and services that are in scope for the assessment. See `scope` below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("scope")]
        public AssessmentScope? Scope;

        /// <summary>
        /// Status of the assessment. Valid values are `ACTIVE` and `INACTIVE`.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// A map of tags to assign to the assessment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;
    }
}
