// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Auditmanager
{
    [PolicyResourceType("aws:auditmanager/assessmentDelegation:AssessmentDelegation")]
    public sealed class AssessmentDelegation : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Identifier for the assessment.
        /// </summary>
        [PolicyResourceProperty("assessmentId", "_mUnknown_AssessmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssessmentId;
        private bool _mUnknown_AssessmentId;
        public string? AssessmentId
        {
            get
            {
                if (!_mUnknown_AssessmentId) return _mValue_AssessmentId;
                throw new UndeferrableValueException("Value 'AssessmentDelegation.AssessmentId' is not present");
            }
        }

        /// <summary>
        /// Comment describing the delegation request.
        /// </summary>
        [PolicyResourceProperty("comment", "_mUnknown_Comment")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Comment;
        private bool _mUnknown_Comment;
        public string? Comment
        {
            get
            {
                if (!_mUnknown_Comment) return _mValue_Comment;
                throw new UndeferrableValueException("Value 'AssessmentDelegation.Comment' is not present");
            }
        }

        /// <summary>
        /// Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.
        /// </summary>
        [PolicyResourceProperty("controlSetId", "_mUnknown_ControlSetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ControlSetId;
        private bool _mUnknown_ControlSetId;
        public string? ControlSetId
        {
            get
            {
                if (!_mUnknown_ControlSetId) return _mValue_ControlSetId;
                throw new UndeferrableValueException("Value 'AssessmentDelegation.ControlSetId' is not present");
            }
        }

        /// <summary>
        /// Unique identifier for the delegation.
        /// </summary>
        [PolicyResourceProperty("delegationId", "_mUnknown_DelegationId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DelegationId;
        private bool _mUnknown_DelegationId;
        public string? DelegationId
        {
            get
            {
                if (!_mUnknown_DelegationId) return _mValue_DelegationId;
                throw new UndeferrableValueException("Value 'AssessmentDelegation.DelegationId' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM role.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'AssessmentDelegation.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("roleType", "_mUnknown_RoleType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleType;
        private bool _mUnknown_RoleType;
        public string? RoleType
        {
            get
            {
                if (!_mUnknown_RoleType) return _mValue_RoleType;
                throw new UndeferrableValueException("Value 'AssessmentDelegation.RoleType' is not present");
            }
        }

        /// <summary>
        /// Status of the delegation.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'AssessmentDelegation.Status' is not present");
            }
        }
    }

    [PolicyResourceType("aws:auditmanager/assessmentDelegation:AssessmentDelegation")]
    public sealed class AssessmentDelegationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Identifier for the assessment.
        /// </summary>
        [PolicyResourceProperty("assessmentId", "_mUnknown_AssessmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AssessmentId;
        private bool _mUnknown_AssessmentId;
        public string? AssessmentId
        {
            get
            {
                if (!_mUnknown_AssessmentId) return _mValue_AssessmentId;
                throw new UndeferrableValueException("Value 'AssessmentDelegationArgs.AssessmentId' is not present");
            }
        }

        /// <summary>
        /// Comment describing the delegation request.
        /// </summary>
        [PolicyResourceProperty("comment", "_mUnknown_Comment")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Comment;
        private bool _mUnknown_Comment;
        public string? Comment
        {
            get
            {
                if (!_mUnknown_Comment) return _mValue_Comment;
                throw new UndeferrableValueException("Value 'AssessmentDelegationArgs.Comment' is not present");
            }
        }

        /// <summary>
        /// Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.
        /// </summary>
        [PolicyResourceProperty("controlSetId", "_mUnknown_ControlSetId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ControlSetId;
        private bool _mUnknown_ControlSetId;
        public string? ControlSetId
        {
            get
            {
                if (!_mUnknown_ControlSetId) return _mValue_ControlSetId;
                throw new UndeferrableValueException("Value 'AssessmentDelegationArgs.ControlSetId' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM role.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'AssessmentDelegationArgs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("roleType", "_mUnknown_RoleType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleType;
        private bool _mUnknown_RoleType;
        public string? RoleType
        {
            get
            {
                if (!_mUnknown_RoleType) return _mValue_RoleType;
                throw new UndeferrableValueException("Value 'AssessmentDelegationArgs.RoleType' is not present");
            }
        }
    }
}
