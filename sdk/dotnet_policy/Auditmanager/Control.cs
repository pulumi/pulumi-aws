// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Auditmanager
{
    [PolicyResourceType("aws:auditmanager/control:Control")]
    public sealed class Control : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Recommended actions to carry out if the control isn't fulfilled.
        /// </summary>
        [PolicyResourceProperty("actionPlanInstructions", "_mUnknown_ActionPlanInstructions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ActionPlanInstructions;
        private bool _mUnknown_ActionPlanInstructions;
        public string? ActionPlanInstructions
        {
            get
            {
                if (!_mUnknown_ActionPlanInstructions) return _mValue_ActionPlanInstructions;
                throw new UndeferrableValueException("Value 'Control.ActionPlanInstructions' is not present");
            }
        }

        /// <summary>
        /// Title of the action plan for remediating the control.
        /// </summary>
        [PolicyResourceProperty("actionPlanTitle", "_mUnknown_ActionPlanTitle")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ActionPlanTitle;
        private bool _mUnknown_ActionPlanTitle;
        public string? ActionPlanTitle
        {
            get
            {
                if (!_mUnknown_ActionPlanTitle) return _mValue_ActionPlanTitle;
                throw new UndeferrableValueException("Value 'Control.ActionPlanTitle' is not present");
            }
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the control.
        /// * `control_mapping_sources.*.source_id` - Unique identifier for the source.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Control.Arn' is not present");
            }
        }

        /// <summary>
        /// Data mapping sources. See `control_mapping_sources` below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("controlMappingSources", "_mUnknown_ControlMappingSources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ControlControlMappingSource>? _mValue_ControlMappingSources;
        private bool _mUnknown_ControlMappingSources;
        public List<Outputs.ControlControlMappingSource>? ControlMappingSources
        {
            get
            {
                if (!_mUnknown_ControlMappingSources) return _mValue_ControlMappingSources;
                throw new UndeferrableValueException("Value 'Control.ControlMappingSources' is not present");
            }
        }

        /// <summary>
        /// Description of the control.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Control.Description' is not present");
            }
        }

        /// <summary>
        /// Name of the control.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Control.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the control. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Control.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Control.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Steps to follow to determine if the control is satisfied.
        /// </summary>
        [PolicyResourceProperty("testingInformation", "_mUnknown_TestingInformation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TestingInformation;
        private bool _mUnknown_TestingInformation;
        public string? TestingInformation
        {
            get
            {
                if (!_mUnknown_TestingInformation) return _mValue_TestingInformation;
                throw new UndeferrableValueException("Value 'Control.TestingInformation' is not present");
            }
        }

        /// <summary>
        /// Type of control, such as a custom control or a standard control.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'Control.Type' is not present");
            }
        }
    }

    [PolicyResourceType("aws:auditmanager/control:Control")]
    public sealed class ControlArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// Recommended actions to carry out if the control isn't fulfilled.
        /// </summary>
        [PolicyResourceProperty("actionPlanInstructions", "_mUnknown_ActionPlanInstructions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ActionPlanInstructions;
        private bool _mUnknown_ActionPlanInstructions;
        public string? ActionPlanInstructions
        {
            get
            {
                if (!_mUnknown_ActionPlanInstructions) return _mValue_ActionPlanInstructions;
                throw new UndeferrableValueException("Value 'ControlArgs.ActionPlanInstructions' is not present");
            }
        }

        /// <summary>
        /// Title of the action plan for remediating the control.
        /// </summary>
        [PolicyResourceProperty("actionPlanTitle", "_mUnknown_ActionPlanTitle")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ActionPlanTitle;
        private bool _mUnknown_ActionPlanTitle;
        public string? ActionPlanTitle
        {
            get
            {
                if (!_mUnknown_ActionPlanTitle) return _mValue_ActionPlanTitle;
                throw new UndeferrableValueException("Value 'ControlArgs.ActionPlanTitle' is not present");
            }
        }

        /// <summary>
        /// Data mapping sources. See `control_mapping_sources` below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("controlMappingSources", "_mUnknown_ControlMappingSources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ControlControlMappingSourceArgs>? _mValue_ControlMappingSources;
        private bool _mUnknown_ControlMappingSources;
        public List<Inputs.ControlControlMappingSourceArgs>? ControlMappingSources
        {
            get
            {
                if (!_mUnknown_ControlMappingSources) return _mValue_ControlMappingSources;
                throw new UndeferrableValueException("Value 'ControlArgs.ControlMappingSources' is not present");
            }
        }

        /// <summary>
        /// Description of the control.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ControlArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Name of the control.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'ControlArgs.Name' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the control. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ControlArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Steps to follow to determine if the control is satisfied.
        /// </summary>
        [PolicyResourceProperty("testingInformation", "_mUnknown_TestingInformation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TestingInformation;
        private bool _mUnknown_TestingInformation;
        public string? TestingInformation
        {
            get
            {
                if (!_mUnknown_TestingInformation) return _mValue_TestingInformation;
                throw new UndeferrableValueException("Value 'ControlArgs.TestingInformation' is not present");
            }
        }
    }
}
