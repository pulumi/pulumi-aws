// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Msk.Outputs
{
    public sealed class GetBrokerNodesNodeInfoListResult
    {
        /// <summary>
        /// Attached elastic network interface of the broker
        /// </summary>
        [PolicyResourceProperty("attachedEniId", "_mUnknown_AttachedEniId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AttachedEniId;
        private bool _mUnknown_AttachedEniId;
        public string? AttachedEniId
        {
            get
            {
                if (!_mUnknown_AttachedEniId) return _mValue_AttachedEniId;
                throw new UndeferrableValueException("Value 'GetBrokerNodesNodeInfoListResult.AttachedEniId' is not present");
            }
        }

        /// <summary>
        /// ID of the broker
        /// </summary>
        [PolicyResourceProperty("brokerId", "_mUnknown_BrokerId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_BrokerId;
        private bool _mUnknown_BrokerId;
        public double? BrokerId
        {
            get
            {
                if (!_mUnknown_BrokerId) return _mValue_BrokerId;
                throw new UndeferrableValueException("Value 'GetBrokerNodesNodeInfoListResult.BrokerId' is not present");
            }
        }

        /// <summary>
        /// Client subnet to which this broker node belongs
        /// </summary>
        [PolicyResourceProperty("clientSubnet", "_mUnknown_ClientSubnet")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClientSubnet;
        private bool _mUnknown_ClientSubnet;
        public string? ClientSubnet
        {
            get
            {
                if (!_mUnknown_ClientSubnet) return _mValue_ClientSubnet;
                throw new UndeferrableValueException("Value 'GetBrokerNodesNodeInfoListResult.ClientSubnet' is not present");
            }
        }

        /// <summary>
        /// The client virtual private cloud (VPC) IP address
        /// </summary>
        [PolicyResourceProperty("clientVpcIpAddress", "_mUnknown_ClientVpcIpAddress")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ClientVpcIpAddress;
        private bool _mUnknown_ClientVpcIpAddress;
        public string? ClientVpcIpAddress
        {
            get
            {
                if (!_mUnknown_ClientVpcIpAddress) return _mValue_ClientVpcIpAddress;
                throw new UndeferrableValueException("Value 'GetBrokerNodesNodeInfoListResult.ClientVpcIpAddress' is not present");
            }
        }

        /// <summary>
        /// Set of endpoints for accessing the broker. This does not include ports
        /// </summary>
        [PolicyResourceProperty("endpoints", "_mUnknown_Endpoints")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Endpoints;
        private bool _mUnknown_Endpoints;
        public List<string>? Endpoints
        {
            get
            {
                if (!_mUnknown_Endpoints) return _mValue_Endpoints;
                throw new UndeferrableValueException("Value 'GetBrokerNodesNodeInfoListResult.Endpoints' is not present");
            }
        }

        /// <summary>
        /// ARN of the node
        /// </summary>
        [PolicyResourceProperty("nodeArn", "_mUnknown_NodeArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NodeArn;
        private bool _mUnknown_NodeArn;
        public string? NodeArn
        {
            get
            {
                if (!_mUnknown_NodeArn) return _mValue_NodeArn;
                throw new UndeferrableValueException("Value 'GetBrokerNodesNodeInfoListResult.NodeArn' is not present");
            }
        }
    }
}
