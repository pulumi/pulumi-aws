// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Msk.Inputs
{
    public sealed class ReplicatorReplicationInfoListArgs
    {
        /// <summary>
        /// Configuration relating to consumer group replication.
        /// </summary>
        [PolicyResourceProperty("consumerGroupReplications", "_mUnknown_ConsumerGroupReplications")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ReplicatorReplicationInfoListConsumerGroupReplicationArgs>? _mValue_ConsumerGroupReplications;
        private bool _mUnknown_ConsumerGroupReplications;
        public List<Inputs.ReplicatorReplicationInfoListConsumerGroupReplicationArgs>? ConsumerGroupReplications
        {
            get
            {
                if (!_mUnknown_ConsumerGroupReplications) return _mValue_ConsumerGroupReplications;
                throw new UndeferrableValueException("Value 'ReplicatorReplicationInfoListArgs.ConsumerGroupReplications' is not present");
            }
        }

        [PolicyResourceProperty("sourceKafkaClusterAlias", "_mUnknown_SourceKafkaClusterAlias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceKafkaClusterAlias;
        private bool _mUnknown_SourceKafkaClusterAlias;
        public string? SourceKafkaClusterAlias
        {
            get
            {
                if (!_mUnknown_SourceKafkaClusterAlias) return _mValue_SourceKafkaClusterAlias;
                throw new UndeferrableValueException("Value 'ReplicatorReplicationInfoListArgs.SourceKafkaClusterAlias' is not present");
            }
        }

        /// <summary>
        /// The ARN of the source Kafka cluster.
        /// </summary>
        [PolicyResourceProperty("sourceKafkaClusterArn", "_mUnknown_SourceKafkaClusterArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceKafkaClusterArn;
        private bool _mUnknown_SourceKafkaClusterArn;
        public string? SourceKafkaClusterArn
        {
            get
            {
                if (!_mUnknown_SourceKafkaClusterArn) return _mValue_SourceKafkaClusterArn;
                throw new UndeferrableValueException("Value 'ReplicatorReplicationInfoListArgs.SourceKafkaClusterArn' is not present");
            }
        }

        /// <summary>
        /// The type of compression to use writing records to target Kafka cluster.
        /// </summary>
        [PolicyResourceProperty("targetCompressionType", "_mUnknown_TargetCompressionType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetCompressionType;
        private bool _mUnknown_TargetCompressionType;
        public string? TargetCompressionType
        {
            get
            {
                if (!_mUnknown_TargetCompressionType) return _mValue_TargetCompressionType;
                throw new UndeferrableValueException("Value 'ReplicatorReplicationInfoListArgs.TargetCompressionType' is not present");
            }
        }

        [PolicyResourceProperty("targetKafkaClusterAlias", "_mUnknown_TargetKafkaClusterAlias")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetKafkaClusterAlias;
        private bool _mUnknown_TargetKafkaClusterAlias;
        public string? TargetKafkaClusterAlias
        {
            get
            {
                if (!_mUnknown_TargetKafkaClusterAlias) return _mValue_TargetKafkaClusterAlias;
                throw new UndeferrableValueException("Value 'ReplicatorReplicationInfoListArgs.TargetKafkaClusterAlias' is not present");
            }
        }

        /// <summary>
        /// The ARN of the target Kafka cluster.
        /// </summary>
        [PolicyResourceProperty("targetKafkaClusterArn", "_mUnknown_TargetKafkaClusterArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetKafkaClusterArn;
        private bool _mUnknown_TargetKafkaClusterArn;
        public string? TargetKafkaClusterArn
        {
            get
            {
                if (!_mUnknown_TargetKafkaClusterArn) return _mValue_TargetKafkaClusterArn;
                throw new UndeferrableValueException("Value 'ReplicatorReplicationInfoListArgs.TargetKafkaClusterArn' is not present");
            }
        }

        /// <summary>
        /// Configuration relating to topic replication.
        /// </summary>
        [PolicyResourceProperty("topicReplications", "_mUnknown_TopicReplications")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ReplicatorReplicationInfoListTopicReplicationArgs>? _mValue_TopicReplications;
        private bool _mUnknown_TopicReplications;
        public List<Inputs.ReplicatorReplicationInfoListTopicReplicationArgs>? TopicReplications
        {
            get
            {
                if (!_mUnknown_TopicReplications) return _mValue_TopicReplications;
                throw new UndeferrableValueException("Value 'ReplicatorReplicationInfoListArgs.TopicReplications' is not present");
            }
        }
    }
}
