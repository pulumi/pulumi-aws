// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Msk
{
    [PolicyResourceType("aws:msk/replicator:Replicator")]
    public sealed class Replicator : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// ARN of the Replicator.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Replicator.Arn' is not present");
            }
        }

        [PolicyResourceProperty("currentVersion", "_mUnknown_CurrentVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CurrentVersion;
        private bool _mUnknown_CurrentVersion;
        public string? CurrentVersion
        {
            get
            {
                if (!_mUnknown_CurrentVersion) return _mValue_CurrentVersion;
                throw new UndeferrableValueException("Value 'Replicator.CurrentVersion' is not present");
            }
        }

        /// <summary>
        /// A summary description of the replicator.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Replicator.Description' is not present");
            }
        }

        /// <summary>
        /// A list of Kafka clusters which are targets of the replicator.
        /// </summary>
        [PolicyResourceProperty("kafkaClusters", "_mUnknown_KafkaClusters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.ReplicatorKafkaCluster>? _mValue_KafkaClusters;
        private bool _mUnknown_KafkaClusters;
        public List<Outputs.ReplicatorKafkaCluster>? KafkaClusters
        {
            get
            {
                if (!_mUnknown_KafkaClusters) return _mValue_KafkaClusters;
                throw new UndeferrableValueException("Value 'Replicator.KafkaClusters' is not present");
            }
        }

        /// <summary>
        /// A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
        /// </summary>
        [PolicyResourceProperty("replicationInfoList", "_mUnknown_ReplicationInfoList")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.ReplicatorReplicationInfoList? _mValue_ReplicationInfoList;
        private bool _mUnknown_ReplicationInfoList;
        public Outputs.ReplicatorReplicationInfoList? ReplicationInfoList
        {
            get
            {
                if (!_mUnknown_ReplicationInfoList) return _mValue_ReplicationInfoList;
                throw new UndeferrableValueException("Value 'Replicator.ReplicationInfoList' is not present");
            }
        }

        /// <summary>
        /// The name of the replicator.
        /// </summary>
        [PolicyResourceProperty("replicatorName", "_mUnknown_ReplicatorName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplicatorName;
        private bool _mUnknown_ReplicatorName;
        public string? ReplicatorName
        {
            get
            {
                if (!_mUnknown_ReplicatorName) return _mValue_ReplicatorName;
                throw new UndeferrableValueException("Value 'Replicator.ReplicatorName' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role used by the replicator to access resources in the customer's account (e.g source and target clusters).
        /// </summary>
        [PolicyResourceProperty("serviceExecutionRoleArn", "_mUnknown_ServiceExecutionRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceExecutionRoleArn;
        private bool _mUnknown_ServiceExecutionRoleArn;
        public string? ServiceExecutionRoleArn
        {
            get
            {
                if (!_mUnknown_ServiceExecutionRoleArn) return _mValue_ServiceExecutionRoleArn;
                throw new UndeferrableValueException("Value 'Replicator.ServiceExecutionRoleArn' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Replicator.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Replicator.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:msk/replicator:Replicator")]
    public sealed class ReplicatorArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A summary description of the replicator.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'ReplicatorArgs.Description' is not present");
            }
        }

        /// <summary>
        /// A list of Kafka clusters which are targets of the replicator.
        /// </summary>
        [PolicyResourceProperty("kafkaClusters", "_mUnknown_KafkaClusters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.ReplicatorKafkaClusterArgs>? _mValue_KafkaClusters;
        private bool _mUnknown_KafkaClusters;
        public List<Inputs.ReplicatorKafkaClusterArgs>? KafkaClusters
        {
            get
            {
                if (!_mUnknown_KafkaClusters) return _mValue_KafkaClusters;
                throw new UndeferrableValueException("Value 'ReplicatorArgs.KafkaClusters' is not present");
            }
        }

        /// <summary>
        /// A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
        /// </summary>
        [PolicyResourceProperty("replicationInfoList", "_mUnknown_ReplicationInfoList")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.ReplicatorReplicationInfoListArgs? _mValue_ReplicationInfoList;
        private bool _mUnknown_ReplicationInfoList;
        public Inputs.ReplicatorReplicationInfoListArgs? ReplicationInfoList
        {
            get
            {
                if (!_mUnknown_ReplicationInfoList) return _mValue_ReplicationInfoList;
                throw new UndeferrableValueException("Value 'ReplicatorArgs.ReplicationInfoList' is not present");
            }
        }

        /// <summary>
        /// The name of the replicator.
        /// </summary>
        [PolicyResourceProperty("replicatorName", "_mUnknown_ReplicatorName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ReplicatorName;
        private bool _mUnknown_ReplicatorName;
        public string? ReplicatorName
        {
            get
            {
                if (!_mUnknown_ReplicatorName) return _mValue_ReplicatorName;
                throw new UndeferrableValueException("Value 'ReplicatorArgs.ReplicatorName' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role used by the replicator to access resources in the customer's account (e.g source and target clusters).
        /// </summary>
        [PolicyResourceProperty("serviceExecutionRoleArn", "_mUnknown_ServiceExecutionRoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ServiceExecutionRoleArn;
        private bool _mUnknown_ServiceExecutionRoleArn;
        public string? ServiceExecutionRoleArn
        {
            get
            {
                if (!_mUnknown_ServiceExecutionRoleArn) return _mValue_ServiceExecutionRoleArn;
                throw new UndeferrableValueException("Value 'ReplicatorArgs.ServiceExecutionRoleArn' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'ReplicatorArgs.Tags' is not present");
            }
        }
    }
}
