// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Msk
{
    [PolicyResourceType("aws:msk/vpcConnection:VpcConnection")]
    public sealed class VpcConnection : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the VPC connection.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'VpcConnection.Arn' is not present");
            }
        }

        /// <summary>
        /// The authentication type for the client VPC connection. Specify one of these auth type strings: SASL_IAM, SASL_SCRAM, or TLS.
        /// </summary>
        [PolicyResourceProperty("authentication", "_mUnknown_Authentication")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Authentication;
        private bool _mUnknown_Authentication;
        public string? Authentication
        {
            get
            {
                if (!_mUnknown_Authentication) return _mValue_Authentication;
                throw new UndeferrableValueException("Value 'VpcConnection.Authentication' is not present");
            }
        }

        /// <summary>
        /// The list of subnets in the client VPC to connect to.
        /// </summary>
        [PolicyResourceProperty("clientSubnets", "_mUnknown_ClientSubnets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ClientSubnets;
        private bool _mUnknown_ClientSubnets;
        public List<string>? ClientSubnets
        {
            get
            {
                if (!_mUnknown_ClientSubnets) return _mValue_ClientSubnets;
                throw new UndeferrableValueException("Value 'VpcConnection.ClientSubnets' is not present");
            }
        }

        /// <summary>
        /// The security groups to attach to the ENIs for the broker nodes.
        /// </summary>
        [PolicyResourceProperty("securityGroups", "_mUnknown_SecurityGroups")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroups;
        private bool _mUnknown_SecurityGroups;
        public List<string>? SecurityGroups
        {
            get
            {
                if (!_mUnknown_SecurityGroups) return _mValue_SecurityGroups;
                throw new UndeferrableValueException("Value 'VpcConnection.SecurityGroups' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'VpcConnection.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'VpcConnection.TagsAll' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the cluster.
        /// </summary>
        [PolicyResourceProperty("targetClusterArn", "_mUnknown_TargetClusterArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetClusterArn;
        private bool _mUnknown_TargetClusterArn;
        public string? TargetClusterArn
        {
            get
            {
                if (!_mUnknown_TargetClusterArn) return _mValue_TargetClusterArn;
                throw new UndeferrableValueException("Value 'VpcConnection.TargetClusterArn' is not present");
            }
        }

        /// <summary>
        /// The VPC ID of the remote client.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'VpcConnection.VpcId' is not present");
            }
        }
    }

    [PolicyResourceType("aws:msk/vpcConnection:VpcConnection")]
    public sealed class VpcConnectionArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The authentication type for the client VPC connection. Specify one of these auth type strings: SASL_IAM, SASL_SCRAM, or TLS.
        /// </summary>
        [PolicyResourceProperty("authentication", "_mUnknown_Authentication")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Authentication;
        private bool _mUnknown_Authentication;
        public string? Authentication
        {
            get
            {
                if (!_mUnknown_Authentication) return _mValue_Authentication;
                throw new UndeferrableValueException("Value 'VpcConnectionArgs.Authentication' is not present");
            }
        }

        /// <summary>
        /// The list of subnets in the client VPC to connect to.
        /// </summary>
        [PolicyResourceProperty("clientSubnets", "_mUnknown_ClientSubnets")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_ClientSubnets;
        private bool _mUnknown_ClientSubnets;
        public List<string>? ClientSubnets
        {
            get
            {
                if (!_mUnknown_ClientSubnets) return _mValue_ClientSubnets;
                throw new UndeferrableValueException("Value 'VpcConnectionArgs.ClientSubnets' is not present");
            }
        }

        /// <summary>
        /// The security groups to attach to the ENIs for the broker nodes.
        /// </summary>
        [PolicyResourceProperty("securityGroups", "_mUnknown_SecurityGroups")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroups;
        private bool _mUnknown_SecurityGroups;
        public List<string>? SecurityGroups
        {
            get
            {
                if (!_mUnknown_SecurityGroups) return _mValue_SecurityGroups;
                throw new UndeferrableValueException("Value 'VpcConnectionArgs.SecurityGroups' is not present");
            }
        }

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'VpcConnectionArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the cluster.
        /// </summary>
        [PolicyResourceProperty("targetClusterArn", "_mUnknown_TargetClusterArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TargetClusterArn;
        private bool _mUnknown_TargetClusterArn;
        public string? TargetClusterArn
        {
            get
            {
                if (!_mUnknown_TargetClusterArn) return _mValue_TargetClusterArn;
                throw new UndeferrableValueException("Value 'VpcConnectionArgs.TargetClusterArn' is not present");
            }
        }

        /// <summary>
        /// The VPC ID of the remote client.
        /// </summary>
        [PolicyResourceProperty("vpcId", "_mUnknown_VpcId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VpcId;
        private bool _mUnknown_VpcId;
        public string? VpcId
        {
            get
            {
                if (!_mUnknown_VpcId) return _mValue_VpcId;
                throw new UndeferrableValueException("Value 'VpcConnectionArgs.VpcId' is not present");
            }
        }
    }
}
