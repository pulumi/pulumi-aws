// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ServiceCatalog
{
    [PolicyResourceType("aws:servicecatalog/provisionedProduct:ProvisionedProduct")]
    public sealed class ProvisionedProduct : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
        /// </summary>
        [Input("acceptLanguage")]
        public string? AcceptLanguage;

        /// <summary>
        /// ARN of the provisioned product.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Set of CloudWatch dashboards that were created when provisioning the product.
        /// </summary>
        [Input("cloudwatchDashboardNames")]
        public List<string>? CloudwatchDashboardNames;

        /// <summary>
        /// Time when the provisioned product was created.
        /// </summary>
        [Input("createdTime")]
        public string? CreatedTime;

        /// <summary>
        /// _Only applies to deleting._ If set to `true`, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is `false`.
        /// </summary>
        [Input("ignoreErrors")]
        public bool? IgnoreErrors;

        /// <summary>
        /// Record identifier of the last request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
        /// </summary>
        [Input("lastProvisioningRecordId")]
        public string? LastProvisioningRecordId;

        /// <summary>
        /// Record identifier of the last request performed on this provisioned product.
        /// </summary>
        [Input("lastRecordId")]
        public string? LastRecordId;

        /// <summary>
        /// Record identifier of the last successful request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
        /// </summary>
        [Input("lastSuccessfulProvisioningRecordId")]
        public string? LastSuccessfulProvisioningRecordId;

        /// <summary>
        /// ARN of the launch role associated with the provisioned product.
        /// </summary>
        [Input("launchRoleArn")]
        public string? LaunchRoleArn;

        /// <summary>
        /// User-friendly name of the provisioned product.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
        /// </summary>
        [Input("notificationArns")]
        public List<string>? NotificationArns;

        /// <summary>
        /// The set of outputs for the product created.
        /// </summary>
        [Input("outputs")]
        public List<ProvisionedProductOutput>? Outputs;

        /// <summary>
        /// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use `aws.servicecatalog.getLaunchPaths`. When required, you must provide `path_id` or `path_name`, but not both.
        /// </summary>
        [Input("pathId")]
        public string? PathId;

        /// <summary>
        /// Name of the path. You must provide `path_id` or `path_name`, but not both.
        /// </summary>
        [Input("pathName")]
        public string? PathName;

        /// <summary>
        /// Product identifier. For example, `prod-abcdzk7xy33qa`. You must provide `product_id` or `product_name`, but not both.
        /// </summary>
        [Input("productId")]
        public string? ProductId;

        /// <summary>
        /// Name of the product. You must provide `product_id` or `product_name`, but not both.
        /// </summary>
        [Input("productName")]
        public string? ProductName;

        /// <summary>
        /// Identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne`. You must provide the `provisioning_artifact_id` or `provisioning_artifact_name`, but not both.
        /// </summary>
        [Input("provisioningArtifactId")]
        public string? ProvisioningArtifactId;

        /// <summary>
        /// Name of the provisioning artifact. You must provide the `provisioning_artifact_id` or `provisioning_artifact_name`, but not both.
        /// </summary>
        [Input("provisioningArtifactName")]
        public string? ProvisioningArtifactName;

        /// <summary>
        /// Configuration block with parameters specified by the administrator that are required for provisioning the product. See `provisioning_parameters` Block for details.
        /// </summary>
        [Input("provisioningParameters")]
        public List<ProvisionedProductProvisioningParameter>? ProvisioningParameters;

        /// <summary>
        /// _Only applies to deleting._ Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is `false`.
        /// </summary>
        [Input("retainPhysicalResources")]
        public bool? RetainPhysicalResources;

        /// <summary>
        /// Configuration block with information about the provisioning preferences for a stack set. See `stack_set_provisioning_preferences` Block for details.
        /// </summary>
        [Input("stackSetProvisioningPreferences")]
        public ProvisionedProductStackSetProvisioningPreferences? StackSetProvisioningPreferences;

        /// <summary>
        /// Current status of the provisioned product. See meanings below.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Current status message of the provisioned product.
        /// </summary>
        [Input("statusMessage")]
        public string? StatusMessage;

        /// <summary>
        /// Tags to apply to the provisioned product. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Type of provisioned product. Valid values are `CFN_STACK` and `CFN_STACKSET`.
        /// </summary>
        [Input("type")]
        public string? Type;
    }
}
