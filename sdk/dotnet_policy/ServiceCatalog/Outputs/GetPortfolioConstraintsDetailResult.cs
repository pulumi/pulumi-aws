// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ServiceCatalog.Outputs
{
    public sealed class GetPortfolioConstraintsDetailResult
    {
        /// <summary>
        /// Identifier of the constraint.
        /// </summary>
        [PolicyResourceProperty("constraintId", "_mUnknown_ConstraintId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ConstraintId;
        private bool _mUnknown_ConstraintId;
        public string? ConstraintId
        {
            get
            {
                if (!_mUnknown_ConstraintId) return _mValue_ConstraintId;
                throw new UndeferrableValueException("Value 'GetPortfolioConstraintsDetailResult.ConstraintId' is not present");
            }
        }

        /// <summary>
        /// Description of the constraint.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'GetPortfolioConstraintsDetailResult.Description' is not present");
            }
        }

        [PolicyResourceProperty("owner", "_mUnknown_Owner")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Owner;
        private bool _mUnknown_Owner;
        public string? Owner
        {
            get
            {
                if (!_mUnknown_Owner) return _mValue_Owner;
                throw new UndeferrableValueException("Value 'GetPortfolioConstraintsDetailResult.Owner' is not present");
            }
        }

        /// <summary>
        /// Portfolio identifier.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("portfolioId", "_mUnknown_PortfolioId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PortfolioId;
        private bool _mUnknown_PortfolioId;
        public string? PortfolioId
        {
            get
            {
                if (!_mUnknown_PortfolioId) return _mValue_PortfolioId;
                throw new UndeferrableValueException("Value 'GetPortfolioConstraintsDetailResult.PortfolioId' is not present");
            }
        }

        /// <summary>
        /// Product identifier.
        /// </summary>
        [PolicyResourceProperty("productId", "_mUnknown_ProductId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ProductId;
        private bool _mUnknown_ProductId;
        public string? ProductId
        {
            get
            {
                if (!_mUnknown_ProductId) return _mValue_ProductId;
                throw new UndeferrableValueException("Value 'GetPortfolioConstraintsDetailResult.ProductId' is not present");
            }
        }

        /// <summary>
        /// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
        /// </summary>
        [PolicyResourceProperty("type", "_mUnknown_Type")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Type;
        private bool _mUnknown_Type;
        public string? Type
        {
            get
            {
                if (!_mUnknown_Type) return _mValue_Type;
                throw new UndeferrableValueException("Value 'GetPortfolioConstraintsDetailResult.Type' is not present");
            }
        }
    }
}
