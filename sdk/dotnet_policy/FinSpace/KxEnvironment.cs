// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.FinSpace
{
    [PolicyResourceType("aws:finspace/kxEnvironment:KxEnvironment")]
    public sealed class KxEnvironment : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) identifier of the KX environment.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'KxEnvironment.Arn' is not present");
            }
        }

        /// <summary>
        /// AWS Availability Zone IDs that this environment is available in. Important when selecting VPC subnets to use in cluster creation.
        /// </summary>
        [PolicyResourceProperty("availabilityZones", "_mUnknown_AvailabilityZones")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_AvailabilityZones;
        private bool _mUnknown_AvailabilityZones;
        public List<string>? AvailabilityZones
        {
            get
            {
                if (!_mUnknown_AvailabilityZones) return _mValue_AvailabilityZones;
                throw new UndeferrableValueException("Value 'KxEnvironment.AvailabilityZones' is not present");
            }
        }

        /// <summary>
        /// Timestamp at which the environment is created in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
        /// </summary>
        [PolicyResourceProperty("createdTimestamp", "_mUnknown_CreatedTimestamp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreatedTimestamp;
        private bool _mUnknown_CreatedTimestamp;
        public string? CreatedTimestamp
        {
            get
            {
                if (!_mUnknown_CreatedTimestamp) return _mValue_CreatedTimestamp;
                throw new UndeferrableValueException("Value 'KxEnvironment.CreatedTimestamp' is not present");
            }
        }

        /// <summary>
        /// List of DNS server name and server IP. This is used to set up Route-53 outbound resolvers. Defined below.
        /// </summary>
        [PolicyResourceProperty("customDnsConfigurations", "_mUnknown_CustomDnsConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.KxEnvironmentCustomDnsConfiguration>? _mValue_CustomDnsConfigurations;
        private bool _mUnknown_CustomDnsConfigurations;
        public List<Outputs.KxEnvironmentCustomDnsConfiguration>? CustomDnsConfigurations
        {
            get
            {
                if (!_mUnknown_CustomDnsConfigurations) return _mValue_CustomDnsConfigurations;
                throw new UndeferrableValueException("Value 'KxEnvironment.CustomDnsConfigurations' is not present");
            }
        }

        /// <summary>
        /// Description for the KX environment.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'KxEnvironment.Description' is not present");
            }
        }

        /// <summary>
        /// Unique identifier for the AWS environment infrastructure account.
        /// </summary>
        [PolicyResourceProperty("infrastructureAccountId", "_mUnknown_InfrastructureAccountId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InfrastructureAccountId;
        private bool _mUnknown_InfrastructureAccountId;
        public string? InfrastructureAccountId
        {
            get
            {
                if (!_mUnknown_InfrastructureAccountId) return _mValue_InfrastructureAccountId;
                throw new UndeferrableValueException("Value 'KxEnvironment.InfrastructureAccountId' is not present");
            }
        }

        /// <summary>
        /// KMS key ID to encrypt your data in the FinSpace environment.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'KxEnvironment.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// Last timestamp at which the environment was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
        /// </summary>
        [PolicyResourceProperty("lastModifiedTimestamp", "_mUnknown_LastModifiedTimestamp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastModifiedTimestamp;
        private bool _mUnknown_LastModifiedTimestamp;
        public string? LastModifiedTimestamp
        {
            get
            {
                if (!_mUnknown_LastModifiedTimestamp) return _mValue_LastModifiedTimestamp;
                throw new UndeferrableValueException("Value 'KxEnvironment.LastModifiedTimestamp' is not present");
            }
        }

        /// <summary>
        /// Name of the KX environment that you want to create.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'KxEnvironment.Name' is not present");
            }
        }

        /// <summary>
        /// Status of environment creation
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'KxEnvironment.Status' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'KxEnvironment.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'KxEnvironment.TagsAll' is not present");
            }
        }

        /// <summary>
        /// Transit gateway and network configuration that is used to connect the KX environment to an internal network. Defined below.
        /// </summary>
        [PolicyResourceProperty("transitGatewayConfiguration", "_mUnknown_TransitGatewayConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.KxEnvironmentTransitGatewayConfiguration? _mValue_TransitGatewayConfiguration;
        private bool _mUnknown_TransitGatewayConfiguration;
        public Outputs.KxEnvironmentTransitGatewayConfiguration? TransitGatewayConfiguration
        {
            get
            {
                if (!_mUnknown_TransitGatewayConfiguration) return _mValue_TransitGatewayConfiguration;
                throw new UndeferrableValueException("Value 'KxEnvironment.TransitGatewayConfiguration' is not present");
            }
        }
    }

    [PolicyResourceType("aws:finspace/kxEnvironment:KxEnvironment")]
    public sealed class KxEnvironmentArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// List of DNS server name and server IP. This is used to set up Route-53 outbound resolvers. Defined below.
        /// </summary>
        [PolicyResourceProperty("customDnsConfigurations", "_mUnknown_CustomDnsConfigurations")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.KxEnvironmentCustomDnsConfigurationArgs>? _mValue_CustomDnsConfigurations;
        private bool _mUnknown_CustomDnsConfigurations;
        public List<Inputs.KxEnvironmentCustomDnsConfigurationArgs>? CustomDnsConfigurations
        {
            get
            {
                if (!_mUnknown_CustomDnsConfigurations) return _mValue_CustomDnsConfigurations;
                throw new UndeferrableValueException("Value 'KxEnvironmentArgs.CustomDnsConfigurations' is not present");
            }
        }

        /// <summary>
        /// Description for the KX environment.
        /// </summary>
        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'KxEnvironmentArgs.Description' is not present");
            }
        }

        /// <summary>
        /// KMS key ID to encrypt your data in the FinSpace environment.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'KxEnvironmentArgs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// Name of the KX environment that you want to create.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'KxEnvironmentArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'KxEnvironmentArgs.Tags' is not present");
            }
        }

        /// <summary>
        /// Transit gateway and network configuration that is used to connect the KX environment to an internal network. Defined below.
        /// </summary>
        [PolicyResourceProperty("transitGatewayConfiguration", "_mUnknown_TransitGatewayConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.KxEnvironmentTransitGatewayConfigurationArgs? _mValue_TransitGatewayConfiguration;
        private bool _mUnknown_TransitGatewayConfiguration;
        public Inputs.KxEnvironmentTransitGatewayConfigurationArgs? TransitGatewayConfiguration
        {
            get
            {
                if (!_mUnknown_TransitGatewayConfiguration) return _mValue_TransitGatewayConfiguration;
                throw new UndeferrableValueException("Value 'KxEnvironmentArgs.TransitGatewayConfiguration' is not present");
            }
        }
    }
}
