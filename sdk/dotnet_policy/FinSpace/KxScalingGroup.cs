// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.FinSpace
{
    [PolicyResourceType("aws:finspace/kxScalingGroup:KxScalingGroup")]
    public sealed class KxScalingGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) identifier of the KX Scaling Group.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'KxScalingGroup.Arn' is not present");
            }
        }

        /// <summary>
        /// The availability zone identifiers for the requested regions.
        /// </summary>
        [PolicyResourceProperty("availabilityZoneId", "_mUnknown_AvailabilityZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZoneId;
        private bool _mUnknown_AvailabilityZoneId;
        public string? AvailabilityZoneId
        {
            get
            {
                if (!_mUnknown_AvailabilityZoneId) return _mValue_AvailabilityZoneId;
                throw new UndeferrableValueException("Value 'KxScalingGroup.AvailabilityZoneId' is not present");
            }
        }

        /// <summary>
        /// The list of Managed kdb clusters that are currently active in the given scaling group.
        /// </summary>
        [PolicyResourceProperty("clusters", "_mUnknown_Clusters")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Clusters;
        private bool _mUnknown_Clusters;
        public List<string>? Clusters
        {
            get
            {
                if (!_mUnknown_Clusters) return _mValue_Clusters;
                throw new UndeferrableValueException("Value 'KxScalingGroup.Clusters' is not present");
            }
        }

        /// <summary>
        /// The timestamp at which the scaling group was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
        /// </summary>
        [PolicyResourceProperty("createdTimestamp", "_mUnknown_CreatedTimestamp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_CreatedTimestamp;
        private bool _mUnknown_CreatedTimestamp;
        public string? CreatedTimestamp
        {
            get
            {
                if (!_mUnknown_CreatedTimestamp) return _mValue_CreatedTimestamp;
                throw new UndeferrableValueException("Value 'KxScalingGroup.CreatedTimestamp' is not present");
            }
        }

        /// <summary>
        /// A unique identifier for the kdb environment, where you want to create the scaling group.
        /// </summary>
        [PolicyResourceProperty("environmentId", "_mUnknown_EnvironmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnvironmentId;
        private bool _mUnknown_EnvironmentId;
        public string? EnvironmentId
        {
            get
            {
                if (!_mUnknown_EnvironmentId) return _mValue_EnvironmentId;
                throw new UndeferrableValueException("Value 'KxScalingGroup.EnvironmentId' is not present");
            }
        }

        /// <summary>
        /// The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("hostType", "_mUnknown_HostType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostType;
        private bool _mUnknown_HostType;
        public string? HostType
        {
            get
            {
                if (!_mUnknown_HostType) return _mValue_HostType;
                throw new UndeferrableValueException("Value 'KxScalingGroup.HostType' is not present");
            }
        }

        /// <summary>
        /// Last timestamp at which the scaling group was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
        /// </summary>
        [PolicyResourceProperty("lastModifiedTimestamp", "_mUnknown_LastModifiedTimestamp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LastModifiedTimestamp;
        private bool _mUnknown_LastModifiedTimestamp;
        public string? LastModifiedTimestamp
        {
            get
            {
                if (!_mUnknown_LastModifiedTimestamp) return _mValue_LastModifiedTimestamp;
                throw new UndeferrableValueException("Value 'KxScalingGroup.LastModifiedTimestamp' is not present");
            }
        }

        /// <summary>
        /// Unique name for the scaling group that you want to create.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'KxScalingGroup.Name' is not present");
            }
        }

        /// <summary>
        /// The status of scaling group.
        /// * `CREATING` – The scaling group creation is in progress.
        /// * `CREATE_FAILED` – The scaling group creation has failed.
        /// * `ACTIVE` – The scaling group is active.
        /// * `UPDATING` – The scaling group is in the process of being updated.
        /// * `UPDATE_FAILED` – The update action failed.
        /// * `DELETING` – The scaling group is in the process of being deleted.
        /// * `DELETE_FAILED` – The system failed to delete the scaling group.
        /// * `DELETED` – The scaling group is successfully deleted.
        /// </summary>
        [PolicyResourceProperty("status", "_mUnknown_Status")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Status;
        private bool _mUnknown_Status;
        public string? Status
        {
            get
            {
                if (!_mUnknown_Status) return _mValue_Status;
                throw new UndeferrableValueException("Value 'KxScalingGroup.Status' is not present");
            }
        }

        /// <summary>
        /// The error message when a failed state occurs.
        /// </summary>
        [PolicyResourceProperty("statusReason", "_mUnknown_StatusReason")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_StatusReason;
        private bool _mUnknown_StatusReason;
        public string? StatusReason
        {
            get
            {
                if (!_mUnknown_StatusReason) return _mValue_StatusReason;
                throw new UndeferrableValueException("Value 'KxScalingGroup.StatusReason' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. You can add up to 50 tags to a scaling group.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'KxScalingGroup.Tags' is not present");
            }
        }

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'KxScalingGroup.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:finspace/kxScalingGroup:KxScalingGroup")]
    public sealed class KxScalingGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The availability zone identifiers for the requested regions.
        /// </summary>
        [PolicyResourceProperty("availabilityZoneId", "_mUnknown_AvailabilityZoneId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_AvailabilityZoneId;
        private bool _mUnknown_AvailabilityZoneId;
        public string? AvailabilityZoneId
        {
            get
            {
                if (!_mUnknown_AvailabilityZoneId) return _mValue_AvailabilityZoneId;
                throw new UndeferrableValueException("Value 'KxScalingGroupArgs.AvailabilityZoneId' is not present");
            }
        }

        /// <summary>
        /// A unique identifier for the kdb environment, where you want to create the scaling group.
        /// </summary>
        [PolicyResourceProperty("environmentId", "_mUnknown_EnvironmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnvironmentId;
        private bool _mUnknown_EnvironmentId;
        public string? EnvironmentId
        {
            get
            {
                if (!_mUnknown_EnvironmentId) return _mValue_EnvironmentId;
                throw new UndeferrableValueException("Value 'KxScalingGroupArgs.EnvironmentId' is not present");
            }
        }

        /// <summary>
        /// The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("hostType", "_mUnknown_HostType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_HostType;
        private bool _mUnknown_HostType;
        public string? HostType
        {
            get
            {
                if (!_mUnknown_HostType) return _mValue_HostType;
                throw new UndeferrableValueException("Value 'KxScalingGroupArgs.HostType' is not present");
            }
        }

        /// <summary>
        /// Unique name for the scaling group that you want to create.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'KxScalingGroupArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. You can add up to 50 tags to a scaling group.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'KxScalingGroupArgs.Tags' is not present");
            }
        }
    }
}
