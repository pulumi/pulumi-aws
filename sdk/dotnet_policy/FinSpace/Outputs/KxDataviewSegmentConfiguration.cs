// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.FinSpace.Outputs
{
    public sealed class KxDataviewSegmentConfiguration
    {
        /// <summary>
        /// The database path of the data that you want to place on each selected volume. Each segment must have a unique database path for each volume.
        /// </summary>
        [PolicyResourceProperty("dbPaths", "_mUnknown_DbPaths")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_DbPaths;
        private bool _mUnknown_DbPaths;
        public List<string>? DbPaths
        {
            get
            {
                if (!_mUnknown_DbPaths) return _mValue_DbPaths;
                throw new UndeferrableValueException("Value 'KxDataviewSegmentConfiguration.DbPaths' is not present");
            }
        }

        /// <summary>
        /// Enables on-demand caching on the selected database path when a particular file or a column of the database is accessed. When on demand caching is **True**, dataviews perform minimal loading of files on the filesystem as needed. When it is set to **False**, everything is cached. The default value is **False**.
        /// </summary>
        [PolicyResourceProperty("onDemand", "_mUnknown_OnDemand")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_OnDemand;
        private bool _mUnknown_OnDemand;
        public bool? OnDemand
        {
            get
            {
                if (!_mUnknown_OnDemand) return _mValue_OnDemand;
                throw new UndeferrableValueException("Value 'KxDataviewSegmentConfiguration.OnDemand' is not present");
            }
        }

        /// <summary>
        /// The name of the volume that you want to attach to a dataview. This volume must be in the same availability zone as the dataview that you are attaching to.
        /// </summary>
        [PolicyResourceProperty("volumeName", "_mUnknown_VolumeName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_VolumeName;
        private bool _mUnknown_VolumeName;
        public string? VolumeName
        {
            get
            {
                if (!_mUnknown_VolumeName) return _mValue_VolumeName;
                throw new UndeferrableValueException("Value 'KxDataviewSegmentConfiguration.VolumeName' is not present");
            }
        }
    }
}
