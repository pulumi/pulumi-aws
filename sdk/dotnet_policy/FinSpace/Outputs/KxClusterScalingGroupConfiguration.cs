// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.FinSpace.Outputs
{
    public sealed class KxClusterScalingGroupConfiguration
    {
        /// <summary>
        /// The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
        /// </summary>
        [PolicyResourceProperty("cpu", "_mUnknown_Cpu")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private double? _mValue_Cpu;
        private bool _mUnknown_Cpu;
        public double? Cpu
        {
            get
            {
                if (!_mUnknown_Cpu) return _mValue_Cpu;
                throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfiguration.Cpu' is not present");
            }
        }

        /// <summary>
        /// An optional hard limit on the amount of memory a kdb cluster can use.
        /// </summary>
        [PolicyResourceProperty("memoryLimit", "_mUnknown_MemoryLimit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MemoryLimit;
        private bool _mUnknown_MemoryLimit;
        public int? MemoryLimit
        {
            get
            {
                if (!_mUnknown_MemoryLimit) return _mValue_MemoryLimit;
                throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfiguration.MemoryLimit' is not present");
            }
        }

        /// <summary>
        /// A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
        /// </summary>
        [PolicyResourceProperty("memoryReservation", "_mUnknown_MemoryReservation")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_MemoryReservation;
        private bool _mUnknown_MemoryReservation;
        public int? MemoryReservation
        {
            get
            {
                if (!_mUnknown_MemoryReservation) return _mValue_MemoryReservation;
                throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfiguration.MemoryReservation' is not present");
            }
        }

        /// <summary>
        /// The number of kdb cluster nodes.
        /// </summary>
        [PolicyResourceProperty("nodeCount", "_mUnknown_NodeCount")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private int? _mValue_NodeCount;
        private bool _mUnknown_NodeCount;
        public int? NodeCount
        {
            get
            {
                if (!_mUnknown_NodeCount) return _mValue_NodeCount;
                throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfiguration.NodeCount' is not present");
            }
        }

        /// <summary>
        /// A unique identifier for the kdb scaling group.
        /// </summary>
        [PolicyResourceProperty("scalingGroupName", "_mUnknown_ScalingGroupName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ScalingGroupName;
        private bool _mUnknown_ScalingGroupName;
        public string? ScalingGroupName
        {
            get
            {
                if (!_mUnknown_ScalingGroupName) return _mValue_ScalingGroupName;
                throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfiguration.ScalingGroupName' is not present");
            }
        }
    }
}
