// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.BedrockModel
{
    [PolicyResourceType("aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration")]
    public sealed class InvocationLoggingConfiguration : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The logging configuration values to set. See `logging_config` Block for details.
        /// </summary>
        [PolicyResourceProperty("loggingConfig", "_mUnknown_LoggingConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.InvocationLoggingConfigurationLoggingConfig? _mValue_LoggingConfig;
        private bool _mUnknown_LoggingConfig;
        public Outputs.InvocationLoggingConfigurationLoggingConfig? LoggingConfig
        {
            get
            {
                if (!_mUnknown_LoggingConfig) return _mValue_LoggingConfig;
                throw new UndeferrableValueException("Value 'InvocationLoggingConfiguration.LoggingConfig' is not present");
            }
        }
    }

    [PolicyResourceType("aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration")]
    public sealed class InvocationLoggingConfigurationArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The logging configuration values to set. See `logging_config` Block for details.
        /// </summary>
        [PolicyResourceProperty("loggingConfig", "_mUnknown_LoggingConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.InvocationLoggingConfigurationLoggingConfigArgs? _mValue_LoggingConfig;
        private bool _mUnknown_LoggingConfig;
        public Inputs.InvocationLoggingConfigurationLoggingConfigArgs? LoggingConfig
        {
            get
            {
                if (!_mUnknown_LoggingConfig) return _mValue_LoggingConfig;
                throw new UndeferrableValueException("Value 'InvocationLoggingConfigurationArgs.LoggingConfig' is not present");
            }
        }
    }
}
