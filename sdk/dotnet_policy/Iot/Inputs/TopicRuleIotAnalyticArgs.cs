// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iot.Inputs
{
    public sealed class TopicRuleIotAnalyticArgs
    {
        /// <summary>
        /// The payload that contains a JSON array of records will be sent to IoT Analytics via a batch call.
        /// </summary>
        [PolicyResourceProperty("batchMode", "_mUnknown_BatchMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_BatchMode;
        private bool _mUnknown_BatchMode;
        public bool? BatchMode
        {
            get
            {
                if (!_mUnknown_BatchMode) return _mValue_BatchMode;
                throw new UndeferrableValueException("Value 'TopicRuleIotAnalyticArgs.BatchMode' is not present");
            }
        }

        /// <summary>
        /// Name of AWS IOT Analytics channel.
        /// </summary>
        [PolicyResourceProperty("channelName", "_mUnknown_ChannelName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ChannelName;
        private bool _mUnknown_ChannelName;
        public string? ChannelName
        {
            get
            {
                if (!_mUnknown_ChannelName) return _mValue_ChannelName;
                throw new UndeferrableValueException("Value 'TopicRuleIotAnalyticArgs.ChannelName' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role that grants access.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'TopicRuleIotAnalyticArgs.RoleArn' is not present");
            }
        }
    }
}
