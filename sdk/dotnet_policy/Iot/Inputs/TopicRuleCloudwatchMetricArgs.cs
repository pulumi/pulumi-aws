// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iot.Inputs
{
    public sealed class TopicRuleCloudwatchMetricArgs
    {
        /// <summary>
        /// The CloudWatch metric name.
        /// </summary>
        [PolicyResourceProperty("metricName", "_mUnknown_MetricName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricName;
        private bool _mUnknown_MetricName;
        public string? MetricName
        {
            get
            {
                if (!_mUnknown_MetricName) return _mValue_MetricName;
                throw new UndeferrableValueException("Value 'TopicRuleCloudwatchMetricArgs.MetricName' is not present");
            }
        }

        /// <summary>
        /// The CloudWatch metric namespace name.
        /// </summary>
        [PolicyResourceProperty("metricNamespace", "_mUnknown_MetricNamespace")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricNamespace;
        private bool _mUnknown_MetricNamespace;
        public string? MetricNamespace
        {
            get
            {
                if (!_mUnknown_MetricNamespace) return _mValue_MetricNamespace;
                throw new UndeferrableValueException("Value 'TopicRuleCloudwatchMetricArgs.MetricNamespace' is not present");
            }
        }

        /// <summary>
        /// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
        /// </summary>
        [PolicyResourceProperty("metricTimestamp", "_mUnknown_MetricTimestamp")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricTimestamp;
        private bool _mUnknown_MetricTimestamp;
        public string? MetricTimestamp
        {
            get
            {
                if (!_mUnknown_MetricTimestamp) return _mValue_MetricTimestamp;
                throw new UndeferrableValueException("Value 'TopicRuleCloudwatchMetricArgs.MetricTimestamp' is not present");
            }
        }

        /// <summary>
        /// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
        /// </summary>
        [PolicyResourceProperty("metricUnit", "_mUnknown_MetricUnit")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricUnit;
        private bool _mUnknown_MetricUnit;
        public string? MetricUnit
        {
            get
            {
                if (!_mUnknown_MetricUnit) return _mValue_MetricUnit;
                throw new UndeferrableValueException("Value 'TopicRuleCloudwatchMetricArgs.MetricUnit' is not present");
            }
        }

        /// <summary>
        /// The CloudWatch metric value.
        /// </summary>
        [PolicyResourceProperty("metricValue", "_mUnknown_MetricValue")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricValue;
        private bool _mUnknown_MetricValue;
        public string? MetricValue
        {
            get
            {
                if (!_mUnknown_MetricValue) return _mValue_MetricValue;
                throw new UndeferrableValueException("Value 'TopicRuleCloudwatchMetricArgs.MetricValue' is not present");
            }
        }

        /// <summary>
        /// The IAM role ARN that allows access to the CloudWatch metric.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'TopicRuleCloudwatchMetricArgs.RoleArn' is not present");
            }
        }
    }
}
