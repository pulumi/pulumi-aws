// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iot
{
    [PolicyResourceType("aws:iot/caCertificate:CaCertificate")]
    public sealed class CaCertificate : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Boolean flag to indicate if the certificate should be active for device authentication.
        /// </summary>
        [Input("active")]
        public bool? Active;

        /// <summary>
        /// Boolean flag to indicate if the certificate should be active for device regisration.
        /// </summary>
        [Input("allowAutoRegistration")]
        public bool? AllowAutoRegistration;

        /// <summary>
        /// The ARN of the created CA certificate.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// PEM encoded CA certificate.
        /// </summary>
        [Input("caCertificatePem")]
        public string? CaCertificatePem;

        /// <summary>
        /// The certificate mode in which the CA will be registered. Valida values: `DEFAULT` and `SNI_ONLY`. Default: `DEFAULT`.
        /// </summary>
        [Input("certificateMode")]
        public string? CertificateMode;

        /// <summary>
        /// The customer version of the CA certificate.
        /// </summary>
        [Input("customerVersion")]
        public int? CustomerVersion;

        /// <summary>
        /// The generation ID of the CA certificate.
        /// </summary>
        [Input("generationId")]
        public string? GenerationId;

        /// <summary>
        /// Information about the registration configuration. See below.
        /// </summary>
        [Input("registrationConfig")]
        public CaCertificateRegistrationConfig? RegistrationConfig;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// When the CA certificate is valid.
        /// </summary>
        [Input("validities")]
        public List<CaCertificateValidity>? Validities;

        /// <summary>
        /// PEM encoded verification certificate containing the common name of a registration code. Review
        /// [CreateVerificationCSR](https://docs.aws.amazon.com/iot/latest/developerguide/register-CA-cert.html). Reuired if `certificate_mode` is `DEFAULT`.
        /// </summary>
        [Input("verificationCertificatePem")]
        public string? VerificationCertificatePem;
    }
}
