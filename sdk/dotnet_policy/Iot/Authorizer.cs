// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iot
{
    [PolicyResourceType("aws:iot/authorizer:Authorizer")]
    public sealed class Authorizer : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the authorizer.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The ARN of the authorizer's Lambda function.
        /// </summary>
        [Input("authorizerFunctionArn")]
        public string? AuthorizerFunctionArn;

        /// <summary>
        /// Specifies whether the HTTP caching is enabled or not. Default: `false`.
        /// </summary>
        [Input("enableCachingForHttp")]
        public bool? EnableCachingForHttp;

        /// <summary>
        /// The name of the authorizer.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
        /// </summary>
        [Input("signingDisabled")]
        public bool? SigningDisabled;

        /// <summary>
        /// The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
        /// </summary>
        [Input("tokenKeyName")]
        public string? TokenKeyName;

        /// <summary>
        /// The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.
        /// </summary>
        [Input("tokenSigningPublicKeys")]
        public Dictionary<string, string>? TokenSigningPublicKeys;
    }
}
