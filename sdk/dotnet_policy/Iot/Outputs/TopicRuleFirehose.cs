// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iot.Outputs
{
    public sealed class TopicRuleFirehose
    {
        /// <summary>
        /// The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
        /// </summary>
        [PolicyResourceProperty("batchMode", "_mUnknown_BatchMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_BatchMode;
        private bool _mUnknown_BatchMode;
        public bool? BatchMode
        {
            get
            {
                if (!_mUnknown_BatchMode) return _mValue_BatchMode;
                throw new UndeferrableValueException("Value 'TopicRuleFirehose.BatchMode' is not present");
            }
        }

        /// <summary>
        /// The delivery stream name.
        /// </summary>
        [PolicyResourceProperty("deliveryStreamName", "_mUnknown_DeliveryStreamName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DeliveryStreamName;
        private bool _mUnknown_DeliveryStreamName;
        public string? DeliveryStreamName
        {
            get
            {
                if (!_mUnknown_DeliveryStreamName) return _mValue_DeliveryStreamName;
                throw new UndeferrableValueException("Value 'TopicRuleFirehose.DeliveryStreamName' is not present");
            }
        }

        /// <summary>
        /// The IAM role ARN that grants access to the Amazon Kinesis Firehose stream.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'TopicRuleFirehose.RoleArn' is not present");
            }
        }

        /// <summary>
        /// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
        /// </summary>
        [PolicyResourceProperty("separator", "_mUnknown_Separator")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Separator;
        private bool _mUnknown_Separator;
        public string? Separator
        {
            get
            {
                if (!_mUnknown_Separator) return _mValue_Separator;
                throw new UndeferrableValueException("Value 'TopicRuleFirehose.Separator' is not present");
            }
        }
    }
}
