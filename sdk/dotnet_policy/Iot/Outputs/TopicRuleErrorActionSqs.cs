// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iot.Outputs
{
    public sealed class TopicRuleErrorActionSqs
    {
        /// <summary>
        /// The URL of the Amazon SQS queue.
        /// </summary>
        [PolicyResourceProperty("queueUrl", "_mUnknown_QueueUrl")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_QueueUrl;
        private bool _mUnknown_QueueUrl;
        public string? QueueUrl
        {
            get
            {
                if (!_mUnknown_QueueUrl) return _mValue_QueueUrl;
                throw new UndeferrableValueException("Value 'TopicRuleErrorActionSqs.QueueUrl' is not present");
            }
        }

        /// <summary>
        /// The ARN of the IAM role that grants access.
        /// </summary>
        [PolicyResourceProperty("roleArn", "_mUnknown_RoleArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_RoleArn;
        private bool _mUnknown_RoleArn;
        public string? RoleArn
        {
            get
            {
                if (!_mUnknown_RoleArn) return _mValue_RoleArn;
                throw new UndeferrableValueException("Value 'TopicRuleErrorActionSqs.RoleArn' is not present");
            }
        }

        /// <summary>
        /// Specifies whether to use Base64 encoding.
        /// </summary>
        [PolicyResourceProperty("useBase64", "_mUnknown_UseBase64")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_UseBase64;
        private bool _mUnknown_UseBase64;
        public bool? UseBase64
        {
            get
            {
                if (!_mUnknown_UseBase64) return _mValue_UseBase64;
                throw new UndeferrableValueException("Value 'TopicRuleErrorActionSqs.UseBase64' is not present");
            }
        }
    }
}
