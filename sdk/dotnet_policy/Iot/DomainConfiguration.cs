// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Iot
{
    [PolicyResourceType("aws:iot/domainConfiguration:DomainConfiguration")]
    public sealed class DomainConfiguration : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the domain configuration.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// An object that specifies the authorization service for a domain. See the `authorizer_config` Block below for details.
        /// </summary>
        [Input("authorizerConfig")]
        public DomainConfigurationAuthorizerConfig? AuthorizerConfig;

        /// <summary>
        /// Fully-qualified domain name.
        /// </summary>
        [Input("domainName")]
        public string? DomainName;

        /// <summary>
        /// The type of the domain.
        /// </summary>
        [Input("domainType")]
        public string? DomainType;

        /// <summary>
        /// The name of the domain configuration. This value must be unique to a region.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// The ARNs of the certificates that IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for Amazon Web Services-managed domains. When using a custom `domain_name`, the cert must include it.
        /// </summary>
        [Input("serverCertificateArns")]
        public List<string>? ServerCertificateArns;

        /// <summary>
        /// The type of service delivered by the endpoint. Note: Amazon Web Services IoT Core currently supports only the `DATA` service type.
        /// </summary>
        [Input("serviceType")]
        public string? ServiceType;

        /// <summary>
        /// The status to which the domain configuration should be set. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Input("status")]
        public string? Status;

        /// <summary>
        /// Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// An object that specifies the TLS configuration for a domain. See the `tls_config` Block below for details.
        /// </summary>
        [Input("tlsConfig")]
        public DomainConfigurationTlsConfig? TlsConfig;

        /// <summary>
        /// The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for Amazon Web Services-managed domains.
        /// </summary>
        [Input("validationCertificateArn")]
        public string? ValidationCertificateArn;
    }
}
