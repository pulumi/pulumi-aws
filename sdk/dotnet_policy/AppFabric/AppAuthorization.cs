// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.AppFabric
{
    [PolicyResourceType("aws:appfabric/appAuthorization:AppAuthorization")]
    public sealed class AppAuthorization : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The name of the application for valid values see https://docs.aws.amazon.com/appfabric/latest/api/API_CreateAppAuthorization.html.
        /// </summary>
        [Input("app")]
        public string? App;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the app bundle to use for the request.
        /// </summary>
        [Input("appBundleArn")]
        public string? AppBundleArn;

        /// <summary>
        /// ARN of the App Authorization. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// The authorization type for the app authorization valid values are oauth2 and apiKey.
        /// </summary>
        [Input("authType")]
        public string? AuthType;

        /// <summary>
        /// The application URL for the OAuth flow.
        /// </summary>
        [Input("authUrl")]
        public string? AuthUrl;

        [Input("createdAt")]
        public string? CreatedAt;

        /// <summary>
        /// Contains credentials for the application, such as an API key or OAuth2 client ID and secret.
        /// Specify credentials that match the authorization type for your request. For example, if the authorization type for your request is OAuth2 (oauth2), then you should provide only the OAuth2 credentials.
        /// </summary>
        [Input("credential")]
        public AppAuthorizationCredential? Credential;

        /// <summary>
        /// The user persona of the app authorization.
        /// </summary>
        [Input("persona")]
        public string? Persona;

        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Contains information about an application tenant, such as the application display name and identifier.
        /// </summary>
        [Input("tenants")]
        public List<AppAuthorizationTenant>? Tenants;

        [Input("timeouts")]
        public AppAuthorizationTimeouts? Timeouts;

        [Input("updatedAt")]
        public string? UpdatedAt;
    }
}
