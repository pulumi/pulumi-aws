// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Waf
{
    [PolicyResourceType("aws:waf/ruleGroup:RuleGroup")]
    public sealed class RuleGroup : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// A list of activated rules, see below
        /// </summary>
        [PolicyResourceProperty("activatedRules", "_mUnknown_ActivatedRules")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RuleGroupActivatedRule>? _mValue_ActivatedRules;
        private bool _mUnknown_ActivatedRules;
        public List<Outputs.RuleGroupActivatedRule>? ActivatedRules
        {
            get
            {
                if (!_mUnknown_ActivatedRules) return _mValue_ActivatedRules;
                throw new UndeferrableValueException("Value 'RuleGroup.ActivatedRules' is not present");
            }
        }

        /// <summary>
        /// The ARN of the WAF rule group.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'RuleGroup.Arn' is not present");
            }
        }

        /// <summary>
        /// A friendly name for the metrics from the rule group
        /// </summary>
        [PolicyResourceProperty("metricName", "_mUnknown_MetricName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricName;
        private bool _mUnknown_MetricName;
        public string? MetricName
        {
            get
            {
                if (!_mUnknown_MetricName) return _mValue_MetricName;
                throw new UndeferrableValueException("Value 'RuleGroup.MetricName' is not present");
            }
        }

        /// <summary>
        /// Name of the rule group. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'RuleGroup.Name' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'RuleGroup.Tags' is not present");
            }
        }

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'RuleGroup.TagsAll' is not present");
            }
        }
    }

    [PolicyResourceType("aws:waf/ruleGroup:RuleGroup")]
    public sealed class RuleGroupArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// A list of activated rules, see below
        /// </summary>
        [PolicyResourceProperty("activatedRules", "_mUnknown_ActivatedRules")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.RuleGroupActivatedRuleArgs>? _mValue_ActivatedRules;
        private bool _mUnknown_ActivatedRules;
        public List<Inputs.RuleGroupActivatedRuleArgs>? ActivatedRules
        {
            get
            {
                if (!_mUnknown_ActivatedRules) return _mValue_ActivatedRules;
                throw new UndeferrableValueException("Value 'RuleGroupArgs.ActivatedRules' is not present");
            }
        }

        /// <summary>
        /// A friendly name for the metrics from the rule group
        /// </summary>
        [PolicyResourceProperty("metricName", "_mUnknown_MetricName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_MetricName;
        private bool _mUnknown_MetricName;
        public string? MetricName
        {
            get
            {
                if (!_mUnknown_MetricName) return _mValue_MetricName;
                throw new UndeferrableValueException("Value 'RuleGroupArgs.MetricName' is not present");
            }
        }

        /// <summary>
        /// Name of the rule group. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'RuleGroupArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'RuleGroupArgs.Tags' is not present");
            }
        }
    }
}
