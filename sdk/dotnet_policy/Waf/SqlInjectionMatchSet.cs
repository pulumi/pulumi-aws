// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Waf
{
    [PolicyResourceType("aws:waf/sqlInjectionMatchSet:SqlInjectionMatchSet")]
    public sealed class SqlInjectionMatchSet : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the SQL injection match set.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'SqlInjectionMatchSet.Arn' is not present");
            }
        }

        /// <summary>
        /// The name or description of the SQL Injection Match Set.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'SqlInjectionMatchSet.Name' is not present");
            }
        }

        /// <summary>
        /// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
        /// </summary>
        [PolicyResourceProperty("sqlInjectionMatchTuples", "_mUnknown_SqlInjectionMatchTuples")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.SqlInjectionMatchSetSqlInjectionMatchTuple>? _mValue_SqlInjectionMatchTuples;
        private bool _mUnknown_SqlInjectionMatchTuples;
        public List<Outputs.SqlInjectionMatchSetSqlInjectionMatchTuple>? SqlInjectionMatchTuples
        {
            get
            {
                if (!_mUnknown_SqlInjectionMatchTuples) return _mValue_SqlInjectionMatchTuples;
                throw new UndeferrableValueException("Value 'SqlInjectionMatchSet.SqlInjectionMatchTuples' is not present");
            }
        }
    }

    [PolicyResourceType("aws:waf/sqlInjectionMatchSet:SqlInjectionMatchSet")]
    public sealed class SqlInjectionMatchSetArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The name or description of the SQL Injection Match Set.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'SqlInjectionMatchSetArgs.Name' is not present");
            }
        }

        /// <summary>
        /// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
        /// </summary>
        [PolicyResourceProperty("sqlInjectionMatchTuples", "_mUnknown_SqlInjectionMatchTuples")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.SqlInjectionMatchSetSqlInjectionMatchTupleArgs>? _mValue_SqlInjectionMatchTuples;
        private bool _mUnknown_SqlInjectionMatchTuples;
        public List<Inputs.SqlInjectionMatchSetSqlInjectionMatchTupleArgs>? SqlInjectionMatchTuples
        {
            get
            {
                if (!_mUnknown_SqlInjectionMatchTuples) return _mValue_SqlInjectionMatchTuples;
                throw new UndeferrableValueException("Value 'SqlInjectionMatchSetArgs.SqlInjectionMatchTuples' is not present");
            }
        }
    }
}
