// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.M2
{
    [PolicyResourceType("aws:m2/application:Application")]
    public sealed class Application : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Id of the Application.
        /// </summary>
        [Input("applicationId")]
        public string? ApplicationId;

        /// <summary>
        /// ARN of the Application.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Current version of the application deployed.
        /// </summary>
        [Input("currentVersion")]
        public int? CurrentVersion;

        /// <summary>
        /// The application definition for this application. You can specify either inline JSON or an S3 bucket location.
        /// </summary>
        [Input("definition")]
        public ApplicationDefinition? Definition;

        /// <summary>
        /// Description of the application.
        /// </summary>
        [Input("description")]
        public string? Description;

        /// <summary>
        /// Engine type must be `microfocus | bluage`.
        /// </summary>
        [Input("engineType")]
        public string? EngineType;

        /// <summary>
        /// KMS Key to use for the Application.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId;

        /// <summary>
        /// Unique identifier of the application.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// ARN of role for application to use to access AWS resources.
        /// </summary>
        [Input("roleArn")]
        public string? RoleArn;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("timeouts")]
        public ApplicationTimeouts? Timeouts;
    }
}
