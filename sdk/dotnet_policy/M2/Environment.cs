// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.M2
{
    [PolicyResourceType("aws:m2/environment:Environment")]
    public sealed class Environment : global::Pulumi.PolicyResource
    {
        [Input("applyChangesDuringMaintenanceWindow")]
        public bool? ApplyChangesDuringMaintenanceWindow;

        /// <summary>
        /// ARN of the Environment.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        [Input("description")]
        public string? Description;

        /// <summary>
        /// Engine type must be `microfocus` or `bluage`.
        /// </summary>
        [Input("engineType")]
        public string? EngineType;

        /// <summary>
        /// The specific version of the engine for the Environment.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion;

        /// <summary>
        /// The id of the Environment.
        /// </summary>
        [Input("environmentId")]
        public string? EnvironmentId;

        /// <summary>
        /// Force update the environment even if applications are running.
        /// </summary>
        [Input("forceUpdate")]
        public bool? ForceUpdate;

        [Input("highAvailabilityConfig")]
        public EnvironmentHighAvailabilityConfig? HighAvailabilityConfig;

        /// <summary>
        /// M2 Instance Type.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType;

        /// <summary>
        /// ARN of the KMS key to use for the Environment.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId;

        /// <summary>
        /// ARN of the load balancer created by the Environment.
        /// </summary>
        [Input("loadBalancerArn")]
        public string? LoadBalancerArn;

        /// <summary>
        /// Name of the runtime environment. Must be unique within the account.
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Configures the maintenance window that you want for the runtime environment. The maintenance window must have the format `ddd:hh24:mi-ddd:hh24:mi` and must be less than 24 hours. If not provided a random value will be used.
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public string? PreferredMaintenanceWindow;

        /// <summary>
        /// Allow applications deployed to this environment to be publicly accessible.
        /// </summary>
        [Input("publiclyAccessible")]
        public bool? PubliclyAccessible;

        /// <summary>
        /// List of security group ids.
        /// </summary>
        [Input("securityGroupIds")]
        public List<string>? SecurityGroupIds;

        [Input("storageConfiguration")]
        public EnvironmentStorageConfiguration? StorageConfiguration;

        /// <summary>
        /// List of subnet ids to deploy environment to.
        /// </summary>
        [Input("subnetIds")]
        public List<string>? SubnetIds;

        /// <summary>
        /// Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("timeouts")]
        public EnvironmentTimeouts? Timeouts;
    }
}
