// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.M2
{
    [PolicyResourceType("aws:m2/environment:Environment")]
    public sealed class Environment : global::Pulumi.PolicyResourceOutput
    {
        [PolicyResourceProperty("applyChangesDuringMaintenanceWindow", "_mUnknown_ApplyChangesDuringMaintenanceWindow")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ApplyChangesDuringMaintenanceWindow;
        private bool _mUnknown_ApplyChangesDuringMaintenanceWindow;
        public bool? ApplyChangesDuringMaintenanceWindow
        {
            get
            {
                if (!_mUnknown_ApplyChangesDuringMaintenanceWindow) return _mValue_ApplyChangesDuringMaintenanceWindow;
                throw new UndeferrableValueException("Value 'Environment.ApplyChangesDuringMaintenanceWindow' is not present");
            }
        }

        /// <summary>
        /// ARN of the Environment.
        /// </summary>
        [PolicyResourceProperty("arn", "_mUnknown_Arn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Arn;
        private bool _mUnknown_Arn;
        public string? Arn
        {
            get
            {
                if (!_mUnknown_Arn) return _mValue_Arn;
                throw new UndeferrableValueException("Value 'Environment.Arn' is not present");
            }
        }

        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'Environment.Description' is not present");
            }
        }

        /// <summary>
        /// Engine type must be `microfocus` or `bluage`.
        /// </summary>
        [PolicyResourceProperty("engineType", "_mUnknown_EngineType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineType;
        private bool _mUnknown_EngineType;
        public string? EngineType
        {
            get
            {
                if (!_mUnknown_EngineType) return _mValue_EngineType;
                throw new UndeferrableValueException("Value 'Environment.EngineType' is not present");
            }
        }

        /// <summary>
        /// The specific version of the engine for the Environment.
        /// </summary>
        [PolicyResourceProperty("engineVersion", "_mUnknown_EngineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineVersion;
        private bool _mUnknown_EngineVersion;
        public string? EngineVersion
        {
            get
            {
                if (!_mUnknown_EngineVersion) return _mValue_EngineVersion;
                throw new UndeferrableValueException("Value 'Environment.EngineVersion' is not present");
            }
        }

        /// <summary>
        /// The id of the Environment.
        /// </summary>
        [PolicyResourceProperty("environmentId", "_mUnknown_EnvironmentId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnvironmentId;
        private bool _mUnknown_EnvironmentId;
        public string? EnvironmentId
        {
            get
            {
                if (!_mUnknown_EnvironmentId) return _mValue_EnvironmentId;
                throw new UndeferrableValueException("Value 'Environment.EnvironmentId' is not present");
            }
        }

        /// <summary>
        /// Force update the environment even if applications are running.
        /// </summary>
        [PolicyResourceProperty("forceUpdate", "_mUnknown_ForceUpdate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceUpdate;
        private bool _mUnknown_ForceUpdate;
        public bool? ForceUpdate
        {
            get
            {
                if (!_mUnknown_ForceUpdate) return _mValue_ForceUpdate;
                throw new UndeferrableValueException("Value 'Environment.ForceUpdate' is not present");
            }
        }

        [PolicyResourceProperty("highAvailabilityConfig", "_mUnknown_HighAvailabilityConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.EnvironmentHighAvailabilityConfig? _mValue_HighAvailabilityConfig;
        private bool _mUnknown_HighAvailabilityConfig;
        public Outputs.EnvironmentHighAvailabilityConfig? HighAvailabilityConfig
        {
            get
            {
                if (!_mUnknown_HighAvailabilityConfig) return _mValue_HighAvailabilityConfig;
                throw new UndeferrableValueException("Value 'Environment.HighAvailabilityConfig' is not present");
            }
        }

        /// <summary>
        /// M2 Instance Type.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("instanceType", "_mUnknown_InstanceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceType;
        private bool _mUnknown_InstanceType;
        public string? InstanceType
        {
            get
            {
                if (!_mUnknown_InstanceType) return _mValue_InstanceType;
                throw new UndeferrableValueException("Value 'Environment.InstanceType' is not present");
            }
        }

        /// <summary>
        /// ARN of the KMS key to use for the Environment.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'Environment.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// ARN of the load balancer created by the Environment.
        /// </summary>
        [PolicyResourceProperty("loadBalancerArn", "_mUnknown_LoadBalancerArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LoadBalancerArn;
        private bool _mUnknown_LoadBalancerArn;
        public string? LoadBalancerArn
        {
            get
            {
                if (!_mUnknown_LoadBalancerArn) return _mValue_LoadBalancerArn;
                throw new UndeferrableValueException("Value 'Environment.LoadBalancerArn' is not present");
            }
        }

        /// <summary>
        /// Name of the runtime environment. Must be unique within the account.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'Environment.Name' is not present");
            }
        }

        /// <summary>
        /// Configures the maintenance window that you want for the runtime environment. The maintenance window must have the format `ddd:hh24:mi-ddd:hh24:mi` and must be less than 24 hours. If not provided a random value will be used.
        /// </summary>
        [PolicyResourceProperty("preferredMaintenanceWindow", "_mUnknown_PreferredMaintenanceWindow")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PreferredMaintenanceWindow;
        private bool _mUnknown_PreferredMaintenanceWindow;
        public string? PreferredMaintenanceWindow
        {
            get
            {
                if (!_mUnknown_PreferredMaintenanceWindow) return _mValue_PreferredMaintenanceWindow;
                throw new UndeferrableValueException("Value 'Environment.PreferredMaintenanceWindow' is not present");
            }
        }

        /// <summary>
        /// Allow applications deployed to this environment to be publicly accessible.
        /// </summary>
        [PolicyResourceProperty("publiclyAccessible", "_mUnknown_PubliclyAccessible")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PubliclyAccessible;
        private bool _mUnknown_PubliclyAccessible;
        public bool? PubliclyAccessible
        {
            get
            {
                if (!_mUnknown_PubliclyAccessible) return _mValue_PubliclyAccessible;
                throw new UndeferrableValueException("Value 'Environment.PubliclyAccessible' is not present");
            }
        }

        /// <summary>
        /// List of security group ids.
        /// </summary>
        [PolicyResourceProperty("securityGroupIds", "_mUnknown_SecurityGroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroupIds;
        private bool _mUnknown_SecurityGroupIds;
        public List<string>? SecurityGroupIds
        {
            get
            {
                if (!_mUnknown_SecurityGroupIds) return _mValue_SecurityGroupIds;
                throw new UndeferrableValueException("Value 'Environment.SecurityGroupIds' is not present");
            }
        }

        [PolicyResourceProperty("storageConfiguration", "_mUnknown_StorageConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.EnvironmentStorageConfiguration? _mValue_StorageConfiguration;
        private bool _mUnknown_StorageConfiguration;
        public Outputs.EnvironmentStorageConfiguration? StorageConfiguration
        {
            get
            {
                if (!_mUnknown_StorageConfiguration) return _mValue_StorageConfiguration;
                throw new UndeferrableValueException("Value 'Environment.StorageConfiguration' is not present");
            }
        }

        /// <summary>
        /// List of subnet ids to deploy environment to.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'Environment.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'Environment.Tags' is not present");
            }
        }

        [PolicyResourceProperty("tagsAll", "_mUnknown_TagsAll")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_TagsAll;
        private bool _mUnknown_TagsAll;
        public Dictionary<string, string>? TagsAll
        {
            get
            {
                if (!_mUnknown_TagsAll) return _mValue_TagsAll;
                throw new UndeferrableValueException("Value 'Environment.TagsAll' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.EnvironmentTimeouts? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Outputs.EnvironmentTimeouts? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'Environment.Timeouts' is not present");
            }
        }
    }

    [PolicyResourceType("aws:m2/environment:Environment")]
    public sealed class EnvironmentArgs : global::Pulumi.PolicyResourceInput
    {
        [PolicyResourceProperty("applyChangesDuringMaintenanceWindow", "_mUnknown_ApplyChangesDuringMaintenanceWindow")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ApplyChangesDuringMaintenanceWindow;
        private bool _mUnknown_ApplyChangesDuringMaintenanceWindow;
        public bool? ApplyChangesDuringMaintenanceWindow
        {
            get
            {
                if (!_mUnknown_ApplyChangesDuringMaintenanceWindow) return _mValue_ApplyChangesDuringMaintenanceWindow;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.ApplyChangesDuringMaintenanceWindow' is not present");
            }
        }

        [PolicyResourceProperty("description", "_mUnknown_Description")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Description;
        private bool _mUnknown_Description;
        public string? Description
        {
            get
            {
                if (!_mUnknown_Description) return _mValue_Description;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Description' is not present");
            }
        }

        /// <summary>
        /// Engine type must be `microfocus` or `bluage`.
        /// </summary>
        [PolicyResourceProperty("engineType", "_mUnknown_EngineType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineType;
        private bool _mUnknown_EngineType;
        public string? EngineType
        {
            get
            {
                if (!_mUnknown_EngineType) return _mValue_EngineType;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.EngineType' is not present");
            }
        }

        /// <summary>
        /// The specific version of the engine for the Environment.
        /// </summary>
        [PolicyResourceProperty("engineVersion", "_mUnknown_EngineVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EngineVersion;
        private bool _mUnknown_EngineVersion;
        public string? EngineVersion
        {
            get
            {
                if (!_mUnknown_EngineVersion) return _mValue_EngineVersion;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.EngineVersion' is not present");
            }
        }

        /// <summary>
        /// Force update the environment even if applications are running.
        /// </summary>
        [PolicyResourceProperty("forceUpdate", "_mUnknown_ForceUpdate")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_ForceUpdate;
        private bool _mUnknown_ForceUpdate;
        public bool? ForceUpdate
        {
            get
            {
                if (!_mUnknown_ForceUpdate) return _mValue_ForceUpdate;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.ForceUpdate' is not present");
            }
        }

        [PolicyResourceProperty("highAvailabilityConfig", "_mUnknown_HighAvailabilityConfig")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.EnvironmentHighAvailabilityConfigArgs? _mValue_HighAvailabilityConfig;
        private bool _mUnknown_HighAvailabilityConfig;
        public Inputs.EnvironmentHighAvailabilityConfigArgs? HighAvailabilityConfig
        {
            get
            {
                if (!_mUnknown_HighAvailabilityConfig) return _mValue_HighAvailabilityConfig;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.HighAvailabilityConfig' is not present");
            }
        }

        /// <summary>
        /// M2 Instance Type.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [PolicyResourceProperty("instanceType", "_mUnknown_InstanceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InstanceType;
        private bool _mUnknown_InstanceType;
        public string? InstanceType
        {
            get
            {
                if (!_mUnknown_InstanceType) return _mValue_InstanceType;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.InstanceType' is not present");
            }
        }

        /// <summary>
        /// ARN of the KMS key to use for the Environment.
        /// </summary>
        [PolicyResourceProperty("kmsKeyId", "_mUnknown_KmsKeyId")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_KmsKeyId;
        private bool _mUnknown_KmsKeyId;
        public string? KmsKeyId
        {
            get
            {
                if (!_mUnknown_KmsKeyId) return _mValue_KmsKeyId;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.KmsKeyId' is not present");
            }
        }

        /// <summary>
        /// Name of the runtime environment. Must be unique within the account.
        /// </summary>
        [PolicyResourceProperty("name", "_mUnknown_Name")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Name;
        private bool _mUnknown_Name;
        public string? Name
        {
            get
            {
                if (!_mUnknown_Name) return _mValue_Name;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Name' is not present");
            }
        }

        /// <summary>
        /// Configures the maintenance window that you want for the runtime environment. The maintenance window must have the format `ddd:hh24:mi-ddd:hh24:mi` and must be less than 24 hours. If not provided a random value will be used.
        /// </summary>
        [PolicyResourceProperty("preferredMaintenanceWindow", "_mUnknown_PreferredMaintenanceWindow")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_PreferredMaintenanceWindow;
        private bool _mUnknown_PreferredMaintenanceWindow;
        public string? PreferredMaintenanceWindow
        {
            get
            {
                if (!_mUnknown_PreferredMaintenanceWindow) return _mValue_PreferredMaintenanceWindow;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.PreferredMaintenanceWindow' is not present");
            }
        }

        /// <summary>
        /// Allow applications deployed to this environment to be publicly accessible.
        /// </summary>
        [PolicyResourceProperty("publiclyAccessible", "_mUnknown_PubliclyAccessible")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_PubliclyAccessible;
        private bool _mUnknown_PubliclyAccessible;
        public bool? PubliclyAccessible
        {
            get
            {
                if (!_mUnknown_PubliclyAccessible) return _mValue_PubliclyAccessible;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.PubliclyAccessible' is not present");
            }
        }

        /// <summary>
        /// List of security group ids.
        /// </summary>
        [PolicyResourceProperty("securityGroupIds", "_mUnknown_SecurityGroupIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SecurityGroupIds;
        private bool _mUnknown_SecurityGroupIds;
        public List<string>? SecurityGroupIds
        {
            get
            {
                if (!_mUnknown_SecurityGroupIds) return _mValue_SecurityGroupIds;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.SecurityGroupIds' is not present");
            }
        }

        [PolicyResourceProperty("storageConfiguration", "_mUnknown_StorageConfiguration")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.EnvironmentStorageConfigurationArgs? _mValue_StorageConfiguration;
        private bool _mUnknown_StorageConfiguration;
        public Inputs.EnvironmentStorageConfigurationArgs? StorageConfiguration
        {
            get
            {
                if (!_mUnknown_StorageConfiguration) return _mValue_StorageConfiguration;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.StorageConfiguration' is not present");
            }
        }

        /// <summary>
        /// List of subnet ids to deploy environment to.
        /// </summary>
        [PolicyResourceProperty("subnetIds", "_mUnknown_SubnetIds")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_SubnetIds;
        private bool _mUnknown_SubnetIds;
        public List<string>? SubnetIds
        {
            get
            {
                if (!_mUnknown_SubnetIds) return _mValue_SubnetIds;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.SubnetIds' is not present");
            }
        }

        /// <summary>
        /// Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [PolicyResourceProperty("tags", "_mUnknown_Tags")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Dictionary<string, string>? _mValue_Tags;
        private bool _mUnknown_Tags;
        public Dictionary<string, string>? Tags
        {
            get
            {
                if (!_mUnknown_Tags) return _mValue_Tags;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Tags' is not present");
            }
        }

        [PolicyResourceProperty("timeouts", "_mUnknown_Timeouts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.EnvironmentTimeoutsArgs? _mValue_Timeouts;
        private bool _mUnknown_Timeouts;
        public Inputs.EnvironmentTimeoutsArgs? Timeouts
        {
            get
            {
                if (!_mUnknown_Timeouts) return _mValue_Timeouts;
                throw new UndeferrableValueException("Value 'EnvironmentArgs.Timeouts' is not present");
            }
        }
    }
}
