// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ses
{
    [PolicyResourceType("aws:ses/eventDestination:EventDestination")]
    public sealed class EventDestination : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The SES event destination ARN.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// CloudWatch destination for the events
        /// </summary>
        [Input("cloudwatchDestinations")]
        public List<EventDestinationCloudwatchDestination>? CloudwatchDestinations;

        /// <summary>
        /// The name of the configuration set
        /// </summary>
        [Input("configurationSetName")]
        public string? ConfigurationSetName;

        /// <summary>
        /// If true, the event destination will be enabled
        /// </summary>
        [Input("enabled")]
        public bool? Enabled;

        /// <summary>
        /// Send the events to a kinesis firehose destination
        /// </summary>
        [Input("kinesisDestination")]
        public EventDestinationKinesisDestination? KinesisDestination;

        /// <summary>
        /// A list of matching types. May be any of `"send"`, `"reject"`, `"bounce"`, `"complaint"`, `"delivery"`, `"open"`, `"click"`, or `"renderingFailure"`.
        /// </summary>
        [Input("matchingTypes")]
        public List<string>? MatchingTypes;

        /// <summary>
        /// The name of the event destination
        /// </summary>
        [Input("name")]
        public string? Name;

        /// <summary>
        /// Send the events to an SNS Topic destination
        /// 
        /// &gt; **NOTE:** You can specify `"cloudwatch_destination"` or `"kinesis_destination"` but not both
        /// </summary>
        [Input("snsDestination")]
        public EventDestinationSnsDestination? SnsDestination;
    }
}
