// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ses.Outputs
{
    public sealed class EventDestinationCloudwatchDestination
    {
        /// <summary>
        /// The default value for the event
        /// </summary>
        [PolicyResourceProperty("defaultValue", "_mUnknown_DefaultValue")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DefaultValue;
        private bool _mUnknown_DefaultValue;
        public string? DefaultValue
        {
            get
            {
                if (!_mUnknown_DefaultValue) return _mValue_DefaultValue;
                throw new UndeferrableValueException("Value 'EventDestinationCloudwatchDestination.DefaultValue' is not present");
            }
        }

        /// <summary>
        /// The name for the dimension
        /// </summary>
        [PolicyResourceProperty("dimensionName", "_mUnknown_DimensionName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_DimensionName;
        private bool _mUnknown_DimensionName;
        public string? DimensionName
        {
            get
            {
                if (!_mUnknown_DimensionName) return _mValue_DimensionName;
                throw new UndeferrableValueException("Value 'EventDestinationCloudwatchDestination.DimensionName' is not present");
            }
        }

        /// <summary>
        /// The source for the value. May be any of `"messageTag"`, `"emailHeader"` or `"linkTag"`.
        /// </summary>
        [PolicyResourceProperty("valueSource", "_mUnknown_ValueSource")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ValueSource;
        private bool _mUnknown_ValueSource;
        public string? ValueSource
        {
            get
            {
                if (!_mUnknown_ValueSource) return _mValue_ValueSource;
                throw new UndeferrableValueException("Value 'EventDestinationCloudwatchDestination.ValueSource' is not present");
            }
        }
    }
}
