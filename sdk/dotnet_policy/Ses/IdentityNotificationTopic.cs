// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Ses
{
    [PolicyResourceType("aws:ses/identityNotificationTopic:IdentityNotificationTopic")]
    public sealed class IdentityNotificationTopic : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN).
        /// </summary>
        [PolicyResourceProperty("identity", "_mUnknown_Identity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Identity;
        private bool _mUnknown_Identity;
        public string? Identity
        {
            get
            {
                if (!_mUnknown_Identity) return _mValue_Identity;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopic.Identity' is not present");
            }
        }

        /// <summary>
        /// Whether SES should include original email headers in SNS notifications of this type. `false` by default.
        /// </summary>
        [PolicyResourceProperty("includeOriginalHeaders", "_mUnknown_IncludeOriginalHeaders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_IncludeOriginalHeaders;
        private bool _mUnknown_IncludeOriginalHeaders;
        public bool? IncludeOriginalHeaders
        {
            get
            {
                if (!_mUnknown_IncludeOriginalHeaders) return _mValue_IncludeOriginalHeaders;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopic.IncludeOriginalHeaders' is not present");
            }
        }

        /// <summary>
        /// The type of notifications that will be published to the specified Amazon SNS topic. Valid Values: `Bounce`, `Complaint` or `Delivery`.
        /// </summary>
        [PolicyResourceProperty("notificationType", "_mUnknown_NotificationType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NotificationType;
        private bool _mUnknown_NotificationType;
        public string? NotificationType
        {
            get
            {
                if (!_mUnknown_NotificationType) return _mValue_NotificationType;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopic.NotificationType' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon SNS topic. Can be set to `""` (an empty string) to disable publishing.
        /// </summary>
        [PolicyResourceProperty("topicArn", "_mUnknown_TopicArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TopicArn;
        private bool _mUnknown_TopicArn;
        public string? TopicArn
        {
            get
            {
                if (!_mUnknown_TopicArn) return _mValue_TopicArn;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopic.TopicArn' is not present");
            }
        }
    }

    [PolicyResourceType("aws:ses/identityNotificationTopic:IdentityNotificationTopic")]
    public sealed class IdentityNotificationTopicArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN).
        /// </summary>
        [PolicyResourceProperty("identity", "_mUnknown_Identity")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_Identity;
        private bool _mUnknown_Identity;
        public string? Identity
        {
            get
            {
                if (!_mUnknown_Identity) return _mValue_Identity;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopicArgs.Identity' is not present");
            }
        }

        /// <summary>
        /// Whether SES should include original email headers in SNS notifications of this type. `false` by default.
        /// </summary>
        [PolicyResourceProperty("includeOriginalHeaders", "_mUnknown_IncludeOriginalHeaders")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private bool? _mValue_IncludeOriginalHeaders;
        private bool _mUnknown_IncludeOriginalHeaders;
        public bool? IncludeOriginalHeaders
        {
            get
            {
                if (!_mUnknown_IncludeOriginalHeaders) return _mValue_IncludeOriginalHeaders;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopicArgs.IncludeOriginalHeaders' is not present");
            }
        }

        /// <summary>
        /// The type of notifications that will be published to the specified Amazon SNS topic. Valid Values: `Bounce`, `Complaint` or `Delivery`.
        /// </summary>
        [PolicyResourceProperty("notificationType", "_mUnknown_NotificationType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_NotificationType;
        private bool _mUnknown_NotificationType;
        public string? NotificationType
        {
            get
            {
                if (!_mUnknown_NotificationType) return _mValue_NotificationType;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopicArgs.NotificationType' is not present");
            }
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Amazon SNS topic. Can be set to `""` (an empty string) to disable publishing.
        /// </summary>
        [PolicyResourceProperty("topicArn", "_mUnknown_TopicArn")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_TopicArn;
        private bool _mUnknown_TopicArn;
        public string? TopicArn
        {
            get
            {
                if (!_mUnknown_TopicArn) return _mValue_TopicArn;
                throw new UndeferrableValueException("Value 'IdentityNotificationTopicArgs.TopicArn' is not present");
            }
        }
    }
}
