// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Xray
{
    [PolicyResourceType("aws:xray/resourcePolicy:ResourcePolicy")]
    public sealed class ResourcePolicy : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// Flag to indicate whether to bypass the resource policy lockout safety check. Setting this value to true increases the risk that the policy becomes unmanageable. Do not set this value to true indiscriminately. Use this parameter only when you include a policy in the request and you intend to prevent the principal that is making the request from making a subsequent PutResourcePolicy request. The default value is `false`.
        /// </summary>
        [Input("bypassPolicyLockoutCheck")]
        public bool? BypassPolicyLockoutCheck;

        /// <summary>
        /// When the policy was last updated, in Unix time seconds.
        /// </summary>
        [Input("lastUpdatedTime")]
        public string? LastUpdatedTime;

        /// <summary>
        /// JSON string of the resource policy or resource policy document, which can be up to 5kb in size.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("policyDocument")]
        public string? PolicyDocument;

        /// <summary>
        /// name of the resource policy. Must be unique within a specific Amazon Web Services account.
        /// </summary>
        [Input("policyName")]
        public string? PolicyName;

        /// <summary>
        /// Specifies a specific policy revision, to ensure an atomic create operation. By default the resource policy is created if it does not exist, or updated with an incremented revision id. The revision id is unique to each policy in the account. If the policy revision id does not match the latest revision id, the operation will fail with an InvalidPolicyRevisionIdException exception. You can also provide a PolicyRevisionId of 0. In this case, the operation will fail with an InvalidPolicyRevisionIdException exception if a resource policy with the same name already exists.
        /// </summary>
        [Input("policyRevisionId")]
        public string? PolicyRevisionId;
    }
}
