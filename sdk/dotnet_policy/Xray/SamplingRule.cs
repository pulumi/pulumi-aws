// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Xray
{
    [PolicyResourceType("aws:xray/samplingRule:SamplingRule")]
    public sealed class SamplingRule : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the sampling rule.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Matches attributes derived from the request.
        /// </summary>
        [Input("attributes")]
        public Dictionary<string, string>? Attributes;

        /// <summary>
        /// The percentage of matching requests to instrument, after the reservoir is exhausted.
        /// </summary>
        [Input("fixedRate")]
        public double? FixedRate;

        /// <summary>
        /// Matches the hostname from a request URL.
        /// </summary>
        [Input("host")]
        public string? Host;

        /// <summary>
        /// Matches the HTTP method of a request.
        /// </summary>
        [Input("httpMethod")]
        public string? HttpMethod;

        /// <summary>
        /// The priority of the sampling rule.
        /// </summary>
        [Input("priority")]
        public int? Priority;

        /// <summary>
        /// A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.
        /// </summary>
        [Input("reservoirSize")]
        public int? ReservoirSize;

        /// <summary>
        /// Matches the ARN of the AWS resource on which the service runs.
        /// </summary>
        [Input("resourceArn")]
        public string? ResourceArn;

        /// <summary>
        /// The name of the sampling rule.
        /// </summary>
        [Input("ruleName")]
        public string? RuleName;

        /// <summary>
        /// Matches the `name` that the service uses to identify itself in segments.
        /// </summary>
        [Input("serviceName")]
        public string? ServiceName;

        /// <summary>
        /// Matches the `origin` that the service uses to identify its type in segments.
        /// </summary>
        [Input("serviceType")]
        public string? ServiceType;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Matches the path from a request URL.
        /// </summary>
        [Input("urlPath")]
        public string? UrlPath;

        /// <summary>
        /// The version of the sampling rule format (`1` )
        /// </summary>
        [Input("version")]
        public int? Version;
    }
}
