// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.Neptune
{
    [PolicyResourceType("aws:neptune/clusterInstance:ClusterInstance")]
    public sealed class ClusterInstance : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The hostname of the instance. See also `endpoint` and `port`.
        /// </summary>
        [Input("address")]
        public string? Address;

        /// <summary>
        /// Specifies whether any instance modifications
        /// are applied immediately, or during the next maintenance window. Default is`false`.
        /// </summary>
        [Input("applyImmediately")]
        public bool? ApplyImmediately;

        /// <summary>
        /// Amazon Resource Name (ARN) of neptune instance
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Indicates that minor engine upgrades will be applied automatically to the instance during the maintenance window. Default is `true`.
        /// </summary>
        [Input("autoMinorVersionUpgrade")]
        public bool? AutoMinorVersionUpgrade;

        /// <summary>
        /// The EC2 Availability Zone that the neptune instance is created in.
        /// </summary>
        [Input("availabilityZone")]
        public string? AvailabilityZone;

        /// <summary>
        /// The identifier of the `aws.neptune.Cluster` in which to launch this instance.
        /// </summary>
        [Input("clusterIdentifier")]
        public string? ClusterIdentifier;

        /// <summary>
        /// The region-unique, immutable identifier for the neptune instance.
        /// </summary>
        [Input("dbiResourceId")]
        public string? DbiResourceId;

        /// <summary>
        /// The connection endpoint in `address:port` format.
        /// </summary>
        [Input("endpoint")]
        public string? Endpoint;

        /// <summary>
        /// The name of the database engine to be used for the neptune instance. Defaults to `neptune`. Valid Values: `neptune`.
        /// </summary>
        [Input("engine")]
        public string? Engine;

        /// <summary>
        /// The neptune engine version. Currently configuring this argumnet has no effect.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion;

        /// <summary>
        /// The identifier for the neptune instance, if omitted, this provider will assign a random, unique identifier.
        /// </summary>
        [Input("identifier")]
        public string? Identifier;

        /// <summary>
        /// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
        /// </summary>
        [Input("identifierPrefix")]
        public string? IdentifierPrefix;

        /// <summary>
        /// The instance class to use.
        /// </summary>
        [Input("instanceClass")]
        public string? InstanceClass;

        /// <summary>
        /// The ARN for the KMS encryption key if one is set to the neptune cluster.
        /// </summary>
        [Input("kmsKeyArn")]
        public string? KmsKeyArn;

        /// <summary>
        /// The name of the neptune parameter group to associate with this instance.
        /// </summary>
        [Input("neptuneParameterGroupName")]
        public string? NeptuneParameterGroupName;

        /// <summary>
        /// A subnet group to associate with this neptune instance. **NOTE:** This must match the `neptune_subnet_group_name` of the attached `aws.neptune.Cluster`.
        /// </summary>
        [Input("neptuneSubnetGroupName")]
        public string? NeptuneSubnetGroupName;

        /// <summary>
        /// The port on which the DB accepts connections. Defaults to `8182`.
        /// </summary>
        [Input("port")]
        public int? Port;

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00"
        /// </summary>
        [Input("preferredBackupWindow")]
        public string? PreferredBackupWindow;

        /// <summary>
        /// The window to perform maintenance in.
        /// Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public string? PreferredMaintenanceWindow;

        /// <summary>
        /// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.
        /// </summary>
        [Input("promotionTier")]
        public int? PromotionTier;

        /// <summary>
        /// Bool to control if instance is publicly accessible. Default is `false`.
        /// </summary>
        [Input("publiclyAccessible")]
        public bool? PubliclyAccessible;

        /// <summary>
        /// Determines whether a final DB snapshot is created before the DB instance is deleted.
        /// </summary>
        [Input("skipFinalSnapshot")]
        public bool? SkipFinalSnapshot;

        /// <summary>
        /// Specifies whether the neptune cluster is encrypted.
        /// </summary>
        [Input("storageEncrypted")]
        public bool? StorageEncrypted;

        /// <summary>
        /// Storage type associated with the cluster `standard/iopt1`.
        /// </summary>
        [Input("storageType")]
        public string? StorageType;

        /// <summary>
        /// A map of tags to assign to the instance. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        /// <summary>
        /// Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
        /// </summary>
        [Input("writer")]
        public bool? Writer;
    }
}
