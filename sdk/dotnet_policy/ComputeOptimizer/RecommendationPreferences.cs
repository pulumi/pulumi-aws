// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ComputeOptimizer
{
    [PolicyResourceType("aws:computeoptimizer/recommendationPreferences:RecommendationPreferences")]
    public sealed class RecommendationPreferences : global::Pulumi.PolicyResourceOutput
    {
        /// <summary>
        /// The status of the enhanced infrastructure metrics recommendation preference. Valid values: `Active`, `Inactive`.
        /// </summary>
        [PolicyResourceProperty("enhancedInfrastructureMetrics", "_mUnknown_EnhancedInfrastructureMetrics")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnhancedInfrastructureMetrics;
        private bool _mUnknown_EnhancedInfrastructureMetrics;
        public string? EnhancedInfrastructureMetrics
        {
            get
            {
                if (!_mUnknown_EnhancedInfrastructureMetrics) return _mValue_EnhancedInfrastructureMetrics;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.EnhancedInfrastructureMetrics' is not present");
            }
        }

        /// <summary>
        /// The provider of the external metrics recommendation preference. See External Metrics Preference below.
        /// </summary>
        [PolicyResourceProperty("externalMetricsPreference", "_mUnknown_ExternalMetricsPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.RecommendationPreferencesExternalMetricsPreference? _mValue_ExternalMetricsPreference;
        private bool _mUnknown_ExternalMetricsPreference;
        public Outputs.RecommendationPreferencesExternalMetricsPreference? ExternalMetricsPreference
        {
            get
            {
                if (!_mUnknown_ExternalMetricsPreference) return _mValue_ExternalMetricsPreference;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.ExternalMetricsPreference' is not present");
            }
        }

        /// <summary>
        /// The status of the inferred workload types recommendation preference. Valid values: `Active`, `Inactive`.
        /// </summary>
        [PolicyResourceProperty("inferredWorkloadTypes", "_mUnknown_InferredWorkloadTypes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InferredWorkloadTypes;
        private bool _mUnknown_InferredWorkloadTypes;
        public string? InferredWorkloadTypes
        {
            get
            {
                if (!_mUnknown_InferredWorkloadTypes) return _mValue_InferredWorkloadTypes;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.InferredWorkloadTypes' is not present");
            }
        }

        /// <summary>
        /// The preference to control the number of days the utilization metrics of the AWS resource are analyzed. Valid values: `DAYS_14`, `DAYS_32`, `DAYS_93`.
        /// </summary>
        [PolicyResourceProperty("lookBackPeriod", "_mUnknown_LookBackPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LookBackPeriod;
        private bool _mUnknown_LookBackPeriod;
        public string? LookBackPeriod
        {
            get
            {
                if (!_mUnknown_LookBackPeriod) return _mValue_LookBackPeriod;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.LookBackPeriod' is not present");
            }
        }

        /// <summary>
        /// The preference to control which resource type values are considered when generating rightsizing recommendations. See Preferred Resources below.
        /// </summary>
        [PolicyResourceProperty("preferredResources", "_mUnknown_PreferredResources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RecommendationPreferencesPreferredResource>? _mValue_PreferredResources;
        private bool _mUnknown_PreferredResources;
        public List<Outputs.RecommendationPreferencesPreferredResource>? PreferredResources
        {
            get
            {
                if (!_mUnknown_PreferredResources) return _mValue_PreferredResources;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.PreferredResources' is not present");
            }
        }

        /// <summary>
        /// The target resource type of the recommendation preferences. Valid values: `Ec2Instance`, `AutoScalingGroup`, `RdsDBInstance`.
        /// </summary>
        [PolicyResourceProperty("resourceType", "_mUnknown_ResourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceType;
        private bool _mUnknown_ResourceType;
        public string? ResourceType
        {
            get
            {
                if (!_mUnknown_ResourceType) return _mValue_ResourceType;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.ResourceType' is not present");
            }
        }

        /// <summary>
        /// The status of the savings estimation mode preference. Valid values: `AfterDiscounts`, `BeforeDiscounts`.
        /// </summary>
        [PolicyResourceProperty("savingsEstimationMode", "_mUnknown_SavingsEstimationMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SavingsEstimationMode;
        private bool _mUnknown_SavingsEstimationMode;
        public string? SavingsEstimationMode
        {
            get
            {
                if (!_mUnknown_SavingsEstimationMode) return _mValue_SavingsEstimationMode;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.SavingsEstimationMode' is not present");
            }
        }

        /// <summary>
        /// The scope of the recommendation preferences. See Scope below.
        /// </summary>
        [PolicyResourceProperty("scope", "_mUnknown_Scope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Outputs.RecommendationPreferencesScope? _mValue_Scope;
        private bool _mUnknown_Scope;
        public Outputs.RecommendationPreferencesScope? Scope
        {
            get
            {
                if (!_mUnknown_Scope) return _mValue_Scope;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.Scope' is not present");
            }
        }

        /// <summary>
        /// The preference to control the resourceâ€™s CPU utilization threshold, CPU utilization headroom, and memory utilization headroom. See Utilization Preferences below.
        /// </summary>
        [PolicyResourceProperty("utilizationPreferences", "_mUnknown_UtilizationPreferences")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Outputs.RecommendationPreferencesUtilizationPreference>? _mValue_UtilizationPreferences;
        private bool _mUnknown_UtilizationPreferences;
        public List<Outputs.RecommendationPreferencesUtilizationPreference>? UtilizationPreferences
        {
            get
            {
                if (!_mUnknown_UtilizationPreferences) return _mValue_UtilizationPreferences;
                throw new UndeferrableValueException("Value 'RecommendationPreferences.UtilizationPreferences' is not present");
            }
        }
    }

    [PolicyResourceType("aws:computeoptimizer/recommendationPreferences:RecommendationPreferences")]
    public sealed class RecommendationPreferencesArgs : global::Pulumi.PolicyResourceInput
    {
        /// <summary>
        /// The status of the enhanced infrastructure metrics recommendation preference. Valid values: `Active`, `Inactive`.
        /// </summary>
        [PolicyResourceProperty("enhancedInfrastructureMetrics", "_mUnknown_EnhancedInfrastructureMetrics")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_EnhancedInfrastructureMetrics;
        private bool _mUnknown_EnhancedInfrastructureMetrics;
        public string? EnhancedInfrastructureMetrics
        {
            get
            {
                if (!_mUnknown_EnhancedInfrastructureMetrics) return _mValue_EnhancedInfrastructureMetrics;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.EnhancedInfrastructureMetrics' is not present");
            }
        }

        /// <summary>
        /// The provider of the external metrics recommendation preference. See External Metrics Preference below.
        /// </summary>
        [PolicyResourceProperty("externalMetricsPreference", "_mUnknown_ExternalMetricsPreference")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.RecommendationPreferencesExternalMetricsPreferenceArgs? _mValue_ExternalMetricsPreference;
        private bool _mUnknown_ExternalMetricsPreference;
        public Inputs.RecommendationPreferencesExternalMetricsPreferenceArgs? ExternalMetricsPreference
        {
            get
            {
                if (!_mUnknown_ExternalMetricsPreference) return _mValue_ExternalMetricsPreference;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.ExternalMetricsPreference' is not present");
            }
        }

        /// <summary>
        /// The status of the inferred workload types recommendation preference. Valid values: `Active`, `Inactive`.
        /// </summary>
        [PolicyResourceProperty("inferredWorkloadTypes", "_mUnknown_InferredWorkloadTypes")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_InferredWorkloadTypes;
        private bool _mUnknown_InferredWorkloadTypes;
        public string? InferredWorkloadTypes
        {
            get
            {
                if (!_mUnknown_InferredWorkloadTypes) return _mValue_InferredWorkloadTypes;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.InferredWorkloadTypes' is not present");
            }
        }

        /// <summary>
        /// The preference to control the number of days the utilization metrics of the AWS resource are analyzed. Valid values: `DAYS_14`, `DAYS_32`, `DAYS_93`.
        /// </summary>
        [PolicyResourceProperty("lookBackPeriod", "_mUnknown_LookBackPeriod")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_LookBackPeriod;
        private bool _mUnknown_LookBackPeriod;
        public string? LookBackPeriod
        {
            get
            {
                if (!_mUnknown_LookBackPeriod) return _mValue_LookBackPeriod;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.LookBackPeriod' is not present");
            }
        }

        /// <summary>
        /// The preference to control which resource type values are considered when generating rightsizing recommendations. See Preferred Resources below.
        /// </summary>
        [PolicyResourceProperty("preferredResources", "_mUnknown_PreferredResources")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.RecommendationPreferencesPreferredResourceArgs>? _mValue_PreferredResources;
        private bool _mUnknown_PreferredResources;
        public List<Inputs.RecommendationPreferencesPreferredResourceArgs>? PreferredResources
        {
            get
            {
                if (!_mUnknown_PreferredResources) return _mValue_PreferredResources;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.PreferredResources' is not present");
            }
        }

        /// <summary>
        /// The target resource type of the recommendation preferences. Valid values: `Ec2Instance`, `AutoScalingGroup`, `RdsDBInstance`.
        /// </summary>
        [PolicyResourceProperty("resourceType", "_mUnknown_ResourceType")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_ResourceType;
        private bool _mUnknown_ResourceType;
        public string? ResourceType
        {
            get
            {
                if (!_mUnknown_ResourceType) return _mValue_ResourceType;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.ResourceType' is not present");
            }
        }

        /// <summary>
        /// The status of the savings estimation mode preference. Valid values: `AfterDiscounts`, `BeforeDiscounts`.
        /// </summary>
        [PolicyResourceProperty("savingsEstimationMode", "_mUnknown_SavingsEstimationMode")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SavingsEstimationMode;
        private bool _mUnknown_SavingsEstimationMode;
        public string? SavingsEstimationMode
        {
            get
            {
                if (!_mUnknown_SavingsEstimationMode) return _mValue_SavingsEstimationMode;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.SavingsEstimationMode' is not present");
            }
        }

        /// <summary>
        /// The scope of the recommendation preferences. See Scope below.
        /// </summary>
        [PolicyResourceProperty("scope", "_mUnknown_Scope")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private Inputs.RecommendationPreferencesScopeArgs? _mValue_Scope;
        private bool _mUnknown_Scope;
        public Inputs.RecommendationPreferencesScopeArgs? Scope
        {
            get
            {
                if (!_mUnknown_Scope) return _mValue_Scope;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.Scope' is not present");
            }
        }

        /// <summary>
        /// The preference to control the resourceâ€™s CPU utilization threshold, CPU utilization headroom, and memory utilization headroom. See Utilization Preferences below.
        /// </summary>
        [PolicyResourceProperty("utilizationPreferences", "_mUnknown_UtilizationPreferences")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<Inputs.RecommendationPreferencesUtilizationPreferenceArgs>? _mValue_UtilizationPreferences;
        private bool _mUnknown_UtilizationPreferences;
        public List<Inputs.RecommendationPreferencesUtilizationPreferenceArgs>? UtilizationPreferences
        {
            get
            {
                if (!_mUnknown_UtilizationPreferences) return _mValue_UtilizationPreferences;
                throw new UndeferrableValueException("Value 'RecommendationPreferencesArgs.UtilizationPreferences' is not present");
            }
        }
    }
}
