// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElastiCache
{
    [PolicyResourceType("aws:elasticache/reservedCacheNode:ReservedCacheNode")]
    public sealed class ReservedCacheNode : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// ARN for the reserved cache node.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// Number of cache node instances to reserve.
        /// Default value is `1`.
        /// </summary>
        [Input("cacheNodeCount")]
        public int? CacheNodeCount;

        /// <summary>
        /// Node type for the reserved cache nodes.
        /// </summary>
        [Input("cacheNodeType")]
        public string? CacheNodeType;

        /// <summary>
        /// Duration of the reservation as an RFC3339 duration.
        /// </summary>
        [Input("duration")]
        public string? Duration;

        /// <summary>
        /// Fixed price charged for this reserved cache node.
        /// </summary>
        [Input("fixedPrice")]
        public double? FixedPrice;

        /// <summary>
        /// Offering type of this reserved cache node.
        /// </summary>
        [Input("offeringType")]
        public string? OfferingType;

        /// <summary>
        /// Engine type for the reserved cache node.
        /// </summary>
        [Input("productDescription")]
        public string? ProductDescription;

        /// <summary>
        /// Recurring price charged to run this reserved cache node.
        /// </summary>
        [Input("recurringCharges")]
        public List<ReservedCacheNodeRecurringCharge>? RecurringCharges;

        /// <summary>
        /// ID of the reserved cache node offering to purchase.
        /// To determine an `reserved_cache_nodes_offering_id`, see the `aws.elasticache.getReservedCacheNodeOffering` data source.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("reservedCacheNodesOfferingId")]
        public string? ReservedCacheNodesOfferingId;

        /// <summary>
        /// Time the reservation started.
        /// </summary>
        [Input("startTime")]
        public string? StartTime;

        /// <summary>
        /// State of the reserved cache node.
        /// </summary>
        [Input("state")]
        public string? State;

        /// <summary>
        /// Map of tags to assign to the reservation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Input("tags")]
        public Dictionary<string, string>? Tags;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Input("tagsAll")]
        public Dictionary<string, string>? TagsAll;

        [Input("timeouts")]
        public ReservedCacheNodeTimeouts? Timeouts;

        /// <summary>
        /// Hourly price charged for this reserved cache node.
        /// </summary>
        [Input("usagePrice")]
        public double? UsagePrice;
    }
}
