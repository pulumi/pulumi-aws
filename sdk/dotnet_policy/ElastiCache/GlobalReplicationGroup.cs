// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.ElastiCache
{
    [PolicyResourceType("aws:elasticache/globalReplicationGroup:GlobalReplicationGroup")]
    public sealed class GlobalReplicationGroup : global::Pulumi.PolicyResource
    {
        /// <summary>
        /// The ARN of the ElastiCache Global Replication Group.
        /// </summary>
        [Input("arn")]
        public string? Arn;

        /// <summary>
        /// A flag that indicate whether the encryption at rest is enabled.
        /// </summary>
        [Input("atRestEncryptionEnabled")]
        public bool? AtRestEncryptionEnabled;

        /// <summary>
        /// A flag that indicate whether AuthToken (password) is enabled.
        /// </summary>
        [Input("authTokenEnabled")]
        public bool? AuthTokenEnabled;

        /// <summary>
        /// Specifies whether read-only replicas will be automatically promoted to read/write primary if the existing primary fails.
        /// When creating, by default the Global Replication Group inherits the automatic failover setting of the primary replication group.
        /// </summary>
        [Input("automaticFailoverEnabled")]
        public bool? AutomaticFailoverEnabled;

        /// <summary>
        /// The instance class used.
        /// See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html)
        /// and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
        /// When creating, by default the Global Replication Group inherits the node type of the primary replication group.
        /// </summary>
        [Input("cacheNodeType")]
        public string? CacheNodeType;

        /// <summary>
        /// Indicates whether the Global Datastore is cluster enabled.
        /// </summary>
        [Input("clusterEnabled")]
        public bool? ClusterEnabled;

        /// <summary>
        /// The name of the cache engine to be used for the clusters in this global replication group.
        /// </summary>
        [Input("engine")]
        public string? Engine;

        /// <summary>
        /// Redis version to use for the Global Replication Group.
        /// When creating, by default the Global Replication Group inherits the version of the primary replication group.
        /// If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
        /// Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
        /// When the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
        /// When the version is 6, the major and minor version can be set, e.g., `6.2`,
        /// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
        /// The actual engine version used is returned in the attribute `engine_version_actual`, see Attribute Reference below.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion;

        /// <summary>
        /// The full version number of the cache engine running on the members of this global replication group.
        /// </summary>
        [Input("engineVersionActual")]
        public string? EngineVersionActual;

        /// <summary>
        /// Set of node groups (shards) on the global replication group.
        /// Has the values:
        /// </summary>
        [Input("globalNodeGroups")]
        public List<GlobalReplicationGroupGlobalNodeGroup>? GlobalNodeGroups;

        /// <summary>
        /// A user-created description for the global replication group.
        /// </summary>
        [Input("globalReplicationGroupDescription")]
        public string? GlobalReplicationGroupDescription;

        /// <summary>
        /// The full ID of the global replication group.
        /// </summary>
        [Input("globalReplicationGroupId")]
        public string? GlobalReplicationGroupId;

        /// <summary>
        /// The suffix name of a Global Datastore. If `global_replication_group_id_suffix` is changed, creates a new resource.
        /// </summary>
        [Input("globalReplicationGroupIdSuffix")]
        public string? GlobalReplicationGroupIdSuffix;

        /// <summary>
        /// The number of node groups (shards) on the global replication group.
        /// </summary>
        [Input("numNodeGroups")]
        public int? NumNodeGroups;

        /// <summary>
        /// An ElastiCache Parameter Group to use for the Global Replication Group.
        /// Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
        /// Specifying without a major version upgrade will fail.
        /// Note that ElastiCache creates a copy of this parameter group for each member replication group.
        /// </summary>
        [Input("parameterGroupName")]
        public string? ParameterGroupName;

        /// <summary>
        /// The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primary_replication_group_id` is changed, creates a new resource.
        /// </summary>
        [Input("primaryReplicationGroupId")]
        public string? PrimaryReplicationGroupId;

        /// <summary>
        /// A flag that indicates whether the encryption in transit is enabled.
        /// </summary>
        [Input("transitEncryptionEnabled")]
        public bool? TransitEncryptionEnabled;
    }
}
