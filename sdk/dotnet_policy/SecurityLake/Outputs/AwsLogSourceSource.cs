// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumi.PolicyPacks.Aws.SecurityLake.Outputs
{
    public sealed class AwsLogSourceSource
    {
        /// <summary>
        /// Specify the AWS account information where you want to enable Security Lake.
        /// If not specified, uses all accounts included in the Security Lake.
        /// </summary>
        [PolicyResourceProperty("accounts", "_mUnknown_Accounts")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Accounts;
        private bool _mUnknown_Accounts;
        public List<string>? Accounts
        {
            get
            {
                if (!_mUnknown_Accounts) return _mValue_Accounts;
                throw new UndeferrableValueException("Value 'AwsLogSourceSource.Accounts' is not present");
            }
        }

        /// <summary>
        /// Specify the Regions where you want to enable Security Lake.
        /// </summary>
        [PolicyResourceProperty("regions", "_mUnknown_Regions")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private List<string>? _mValue_Regions;
        private bool _mUnknown_Regions;
        public List<string>? Regions
        {
            get
            {
                if (!_mUnknown_Regions) return _mValue_Regions;
                throw new UndeferrableValueException("Value 'AwsLogSourceSource.Regions' is not present");
            }
        }

        /// <summary>
        /// The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`, `EKS_AUDIT`, `WAF`.
        /// </summary>
        [PolicyResourceProperty("sourceName", "_mUnknown_SourceName")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceName;
        private bool _mUnknown_SourceName;
        public string? SourceName
        {
            get
            {
                if (!_mUnknown_SourceName) return _mValue_SourceName;
                throw new UndeferrableValueException("Value 'AwsLogSourceSource.SourceName' is not present");
            }
        }

        /// <summary>
        /// The version for a AWS source.
        /// If not specified, the version will be the default.
        /// This must be a Regionally unique value.
        /// </summary>
        [PolicyResourceProperty("sourceVersion", "_mUnknown_SourceVersion")]
        #pragma warning disable CS0649 // Field is assigned through deserializer
        private string? _mValue_SourceVersion;
        private bool _mUnknown_SourceVersion;
        public string? SourceVersion
        {
            get
            {
                if (!_mUnknown_SourceVersion) return _mValue_SourceVersion;
                throw new UndeferrableValueException("Value 'AwsLogSourceSource.SourceVersion' is not present");
            }
        }
    }
}
