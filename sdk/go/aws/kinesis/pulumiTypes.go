// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type AnalyticsApplicationCloudwatchLoggingOptions struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn string `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationCloudwatchLoggingOptionsInput is an input type that accepts AnalyticsApplicationCloudwatchLoggingOptionsArgs and AnalyticsApplicationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `AnalyticsApplicationCloudwatchLoggingOptionsInput` via:
//
//	AnalyticsApplicationCloudwatchLoggingOptionsArgs{...}
type AnalyticsApplicationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn pulumi.StringInput `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationCloudwatchLoggingOptions] {
	return pulumix.Output[AnalyticsApplicationCloudwatchLoggingOptions]{
		OutputState: i.ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput).ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// AnalyticsApplicationCloudwatchLoggingOptionsPtrInput is an input type that accepts AnalyticsApplicationCloudwatchLoggingOptionsArgs, AnalyticsApplicationCloudwatchLoggingOptionsPtr and AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationCloudwatchLoggingOptionsPtrInput` via:
//
//	        AnalyticsApplicationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
}

type analyticsApplicationCloudwatchLoggingOptionsPtrType AnalyticsApplicationCloudwatchLoggingOptionsArgs

func AnalyticsApplicationCloudwatchLoggingOptionsPtr(v *AnalyticsApplicationCloudwatchLoggingOptionsArgs) AnalyticsApplicationCloudwatchLoggingOptionsPtrInput {
	return (*analyticsApplicationCloudwatchLoggingOptionsPtrType)(v)
}

func (*analyticsApplicationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationCloudwatchLoggingOptions] {
	return pulumix.Output[*AnalyticsApplicationCloudwatchLoggingOptions]{
		OutputState: i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationCloudwatchLoggingOptions) *AnalyticsApplicationCloudwatchLoggingOptions {
		return &v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationCloudwatchLoggingOptions] {
	return pulumix.Output[AnalyticsApplicationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationCloudwatchLoggingOptions] {
	return pulumix.Output[*AnalyticsApplicationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Elem() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationCloudwatchLoggingOptions) AnalyticsApplicationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationCloudwatchLoggingOptions
		return ret
	}).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) LogStreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return &v.LogStreamArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputs struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationInputsKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationInputsKinesisStream `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix string `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism *AnalyticsApplicationInputsParallelism `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration *AnalyticsApplicationInputsProcessingConfiguration `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationInputsSchema `pulumi:"schema"`
	// The point at which the application starts processing records from the streaming source.
	// See Starting Position Configuration below for more details.
	StartingPositionConfigurations []AnalyticsApplicationInputsStartingPositionConfiguration `pulumi:"startingPositionConfigurations"`
	StreamNames                    []string                                                  `pulumi:"streamNames"`
}

// AnalyticsApplicationInputsInput is an input type that accepts AnalyticsApplicationInputsArgs and AnalyticsApplicationInputsOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsInput` via:
//
//	AnalyticsApplicationInputsArgs{...}
type AnalyticsApplicationInputsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput
	ToAnalyticsApplicationInputsOutputWithContext(context.Context) AnalyticsApplicationInputsOutput
}

type AnalyticsApplicationInputsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationInputsKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationInputsKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism AnalyticsApplicationInputsParallelismPtrInput `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration AnalyticsApplicationInputsProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationInputsSchemaInput `pulumi:"schema"`
	// The point at which the application starts processing records from the streaming source.
	// See Starting Position Configuration below for more details.
	StartingPositionConfigurations AnalyticsApplicationInputsStartingPositionConfigurationArrayInput `pulumi:"startingPositionConfigurations"`
	StreamNames                    pulumi.StringArrayInput                                           `pulumi:"streamNames"`
}

func (AnalyticsApplicationInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput {
	return i.ToAnalyticsApplicationInputsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsOutput)
}

func (i AnalyticsApplicationInputsArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputs] {
	return pulumix.Output[AnalyticsApplicationInputs]{
		OutputState: i.ToAnalyticsApplicationInputsOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return i.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsOutput).ToAnalyticsApplicationInputsPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsPtrInput is an input type that accepts AnalyticsApplicationInputsArgs, AnalyticsApplicationInputsPtr and AnalyticsApplicationInputsPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsPtrInput` via:
//
//	        AnalyticsApplicationInputsArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput
	ToAnalyticsApplicationInputsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsPtrOutput
}

type analyticsApplicationInputsPtrType AnalyticsApplicationInputsArgs

func AnalyticsApplicationInputsPtr(v *AnalyticsApplicationInputsArgs) AnalyticsApplicationInputsPtrInput {
	return (*analyticsApplicationInputsPtrType)(v)
}

func (*analyticsApplicationInputsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputs)(nil)).Elem()
}

func (i *analyticsApplicationInputsPtrType) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return i.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsPtrType) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsPtrOutput)
}

func (i *analyticsApplicationInputsPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputs] {
	return pulumix.Output[*AnalyticsApplicationInputs]{
		OutputState: i.ToAnalyticsApplicationInputsPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput {
	return o
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsOutput {
	return o
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return o.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputs) *AnalyticsApplicationInputs {
		return &v
	}).(AnalyticsApplicationInputsPtrOutput)
}

func (o AnalyticsApplicationInputsOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputs] {
	return pulumix.Output[AnalyticsApplicationInputs]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisStream { return v.KinesisStream }).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsOutput) Parallelism() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsParallelism { return v.Parallelism }).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsOutput) Schema() AnalyticsApplicationInputsSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) AnalyticsApplicationInputsSchema { return v.Schema }).(AnalyticsApplicationInputsSchemaOutput)
}

// The point at which the application starts processing records from the streaming source.
// See Starting Position Configuration below for more details.
func (o AnalyticsApplicationInputsOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []AnalyticsApplicationInputsStartingPositionConfiguration {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

func (o AnalyticsApplicationInputsOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsPtrOutput) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsPtrOutput) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputs] {
	return pulumix.Output[*AnalyticsApplicationInputs]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsPtrOutput) Elem() AnalyticsApplicationInputsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) AnalyticsApplicationInputs {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputs
		return ret
	}).(AnalyticsApplicationInputsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsPtrOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisFirehose {
		if v == nil {
			return nil
		}
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsPtrOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisStream {
		if v == nil {
			return nil
		}
		return v.KinesisStream
	}).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsPtrOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) *string {
		if v == nil {
			return nil
		}
		return &v.NamePrefix
	}).(pulumi.StringPtrOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsPtrOutput) Parallelism() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) *AnalyticsApplicationInputsParallelism {
		if v == nil {
			return nil
		}
		return v.Parallelism
	}).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsPtrOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) *AnalyticsApplicationInputsProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsPtrOutput) Schema() AnalyticsApplicationInputsSchemaPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) *AnalyticsApplicationInputsSchema {
		if v == nil {
			return nil
		}
		return &v.Schema
	}).(AnalyticsApplicationInputsSchemaPtrOutput)
}

// The point at which the application starts processing records from the streaming source.
// See Starting Position Configuration below for more details.
func (o AnalyticsApplicationInputsPtrOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) []AnalyticsApplicationInputsStartingPositionConfiguration {
		if v == nil {
			return nil
		}
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

func (o AnalyticsApplicationInputsPtrOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) []string {
		if v == nil {
			return nil
		}
		return v.StreamNames
	}).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationInputsKinesisFirehoseInput is an input type that accepts AnalyticsApplicationInputsKinesisFirehoseArgs and AnalyticsApplicationInputsKinesisFirehoseOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisFirehoseInput` via:
//
//	AnalyticsApplicationInputsKinesisFirehoseArgs{...}
type AnalyticsApplicationInputsKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput
	ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput
}

type AnalyticsApplicationInputsKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseOutput)
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsKinesisFirehose] {
	return pulumix.Output[AnalyticsApplicationInputsKinesisFirehose]{
		OutputState: i.ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseOutput).ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsKinesisFirehosePtrInput is an input type that accepts AnalyticsApplicationInputsKinesisFirehoseArgs, AnalyticsApplicationInputsKinesisFirehosePtr and AnalyticsApplicationInputsKinesisFirehosePtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisFirehosePtrInput` via:
//
//	        AnalyticsApplicationInputsKinesisFirehoseArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput
	ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput
}

type analyticsApplicationInputsKinesisFirehosePtrType AnalyticsApplicationInputsKinesisFirehoseArgs

func AnalyticsApplicationInputsKinesisFirehosePtr(v *AnalyticsApplicationInputsKinesisFirehoseArgs) AnalyticsApplicationInputsKinesisFirehosePtrInput {
	return (*analyticsApplicationInputsKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationInputsKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisFirehosePtrType) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisFirehosePtrType) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

func (i *analyticsApplicationInputsKinesisFirehosePtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsKinesisFirehose] {
	return pulumix.Output[*AnalyticsApplicationInputsKinesisFirehose]{
		OutputState: i.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsKinesisFirehose) *AnalyticsApplicationInputsKinesisFirehose {
		return &v
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsKinesisFirehose] {
	return pulumix.Output[AnalyticsApplicationInputsKinesisFirehose]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsKinesisFirehose] {
	return pulumix.Output[*AnalyticsApplicationInputsKinesisFirehose]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) Elem() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisFirehose) AnalyticsApplicationInputsKinesisFirehose {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsKinesisFirehose
		return ret
	}).(AnalyticsApplicationInputsKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationInputsKinesisStreamInput is an input type that accepts AnalyticsApplicationInputsKinesisStreamArgs and AnalyticsApplicationInputsKinesisStreamOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisStreamInput` via:
//
//	AnalyticsApplicationInputsKinesisStreamArgs{...}
type AnalyticsApplicationInputsKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput
	ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamOutput
}

type AnalyticsApplicationInputsKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamOutput)
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsKinesisStream] {
	return pulumix.Output[AnalyticsApplicationInputsKinesisStream]{
		OutputState: i.ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamOutput).ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsKinesisStreamPtrInput is an input type that accepts AnalyticsApplicationInputsKinesisStreamArgs, AnalyticsApplicationInputsKinesisStreamPtr and AnalyticsApplicationInputsKinesisStreamPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisStreamPtrInput` via:
//
//	        AnalyticsApplicationInputsKinesisStreamArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput
	ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput
}

type analyticsApplicationInputsKinesisStreamPtrType AnalyticsApplicationInputsKinesisStreamArgs

func AnalyticsApplicationInputsKinesisStreamPtr(v *AnalyticsApplicationInputsKinesisStreamArgs) AnalyticsApplicationInputsKinesisStreamPtrInput {
	return (*analyticsApplicationInputsKinesisStreamPtrType)(v)
}

func (*analyticsApplicationInputsKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisStreamPtrType) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisStreamPtrType) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

func (i *analyticsApplicationInputsKinesisStreamPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsKinesisStream] {
	return pulumix.Output[*AnalyticsApplicationInputsKinesisStream]{
		OutputState: i.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsKinesisStream) *AnalyticsApplicationInputsKinesisStream {
		return &v
	}).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsKinesisStream] {
	return pulumix.Output[AnalyticsApplicationInputsKinesisStream]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsKinesisStream] {
	return pulumix.Output[*AnalyticsApplicationInputsKinesisStream]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) Elem() AnalyticsApplicationInputsKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisStream) AnalyticsApplicationInputsKinesisStream {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsKinesisStream
		return ret
	}).(AnalyticsApplicationInputsKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisStream) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisStream) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsParallelism struct {
	// The Count of streams.
	Count *int `pulumi:"count"`
}

// AnalyticsApplicationInputsParallelismInput is an input type that accepts AnalyticsApplicationInputsParallelismArgs and AnalyticsApplicationInputsParallelismOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsParallelismInput` via:
//
//	AnalyticsApplicationInputsParallelismArgs{...}
type AnalyticsApplicationInputsParallelismInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput
	ToAnalyticsApplicationInputsParallelismOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismOutput
}

type AnalyticsApplicationInputsParallelismArgs struct {
	// The Count of streams.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (AnalyticsApplicationInputsParallelismArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput {
	return i.ToAnalyticsApplicationInputsParallelismOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismOutput)
}

func (i AnalyticsApplicationInputsParallelismArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsParallelism] {
	return pulumix.Output[AnalyticsApplicationInputsParallelism]{
		OutputState: i.ToAnalyticsApplicationInputsParallelismOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismOutput).ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsParallelismPtrInput is an input type that accepts AnalyticsApplicationInputsParallelismArgs, AnalyticsApplicationInputsParallelismPtr and AnalyticsApplicationInputsParallelismPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsParallelismPtrInput` via:
//
//	        AnalyticsApplicationInputsParallelismArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsParallelismPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput
	ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismPtrOutput
}

type analyticsApplicationInputsParallelismPtrType AnalyticsApplicationInputsParallelismArgs

func AnalyticsApplicationInputsParallelismPtr(v *AnalyticsApplicationInputsParallelismArgs) AnalyticsApplicationInputsParallelismPtrInput {
	return (*analyticsApplicationInputsParallelismPtrType)(v)
}

func (*analyticsApplicationInputsParallelismPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (i *analyticsApplicationInputsParallelismPtrType) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsParallelismPtrType) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismPtrOutput)
}

func (i *analyticsApplicationInputsParallelismPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsParallelism] {
	return pulumix.Output[*AnalyticsApplicationInputsParallelism]{
		OutputState: i.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsParallelismOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsParallelism) *AnalyticsApplicationInputsParallelism {
		return &v
	}).(AnalyticsApplicationInputsParallelismPtrOutput)
}

func (o AnalyticsApplicationInputsParallelismOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsParallelism] {
	return pulumix.Output[AnalyticsApplicationInputsParallelism]{
		OutputState: o.OutputState,
	}
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelism) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type AnalyticsApplicationInputsParallelismPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsParallelism] {
	return pulumix.Output[*AnalyticsApplicationInputsParallelism]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) Elem() AnalyticsApplicationInputsParallelismOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsParallelism) AnalyticsApplicationInputsParallelism {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsParallelism
		return ret
	}).(AnalyticsApplicationInputsParallelismOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsParallelism) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

type AnalyticsApplicationInputsProcessingConfiguration struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambda `pulumi:"lambda"`
}

// AnalyticsApplicationInputsProcessingConfigurationInput is an input type that accepts AnalyticsApplicationInputsProcessingConfigurationArgs and AnalyticsApplicationInputsProcessingConfigurationOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsProcessingConfigurationInput` via:
//
//	AnalyticsApplicationInputsProcessingConfigurationArgs{...}
type AnalyticsApplicationInputsProcessingConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput
	ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput
}

type AnalyticsApplicationInputsProcessingConfigurationArgs struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambdaInput `pulumi:"lambda"`
}

func (AnalyticsApplicationInputsProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationOutput)
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsProcessingConfiguration] {
	return pulumix.Output[AnalyticsApplicationInputsProcessingConfiguration]{
		OutputState: i.ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationOutput).ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsProcessingConfigurationPtrInput is an input type that accepts AnalyticsApplicationInputsProcessingConfigurationArgs, AnalyticsApplicationInputsProcessingConfigurationPtr and AnalyticsApplicationInputsProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsProcessingConfigurationPtrInput` via:
//
//	        AnalyticsApplicationInputsProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput
	ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput
}

type analyticsApplicationInputsProcessingConfigurationPtrType AnalyticsApplicationInputsProcessingConfigurationArgs

func AnalyticsApplicationInputsProcessingConfigurationPtr(v *AnalyticsApplicationInputsProcessingConfigurationArgs) AnalyticsApplicationInputsProcessingConfigurationPtrInput {
	return (*analyticsApplicationInputsProcessingConfigurationPtrType)(v)
}

func (*analyticsApplicationInputsProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (i *analyticsApplicationInputsProcessingConfigurationPtrType) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsProcessingConfigurationPtrType) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

func (i *analyticsApplicationInputsProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsProcessingConfiguration] {
	return pulumix.Output[*AnalyticsApplicationInputsProcessingConfiguration]{
		OutputState: i.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsProcessingConfiguration) *AnalyticsApplicationInputsProcessingConfiguration {
		return &v
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsProcessingConfiguration] {
	return pulumix.Output[AnalyticsApplicationInputsProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfigurationLambda {
		return v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsProcessingConfiguration] {
	return pulumix.Output[*AnalyticsApplicationInputsProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) Elem() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsProcessingConfiguration
		return ret
	}).(AnalyticsApplicationInputsProcessingConfigurationOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfiguration) *AnalyticsApplicationInputsProcessingConfigurationLambda {
		if v == nil {
			return nil
		}
		return &v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationInputsProcessingConfigurationLambdaInput is an input type that accepts AnalyticsApplicationInputsProcessingConfigurationLambdaArgs and AnalyticsApplicationInputsProcessingConfigurationLambdaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsProcessingConfigurationLambdaInput` via:
//
//	AnalyticsApplicationInputsProcessingConfigurationLambdaArgs{...}
type AnalyticsApplicationInputsProcessingConfigurationLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput
	ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsProcessingConfigurationLambda] {
	return pulumix.Output[AnalyticsApplicationInputsProcessingConfigurationLambda]{
		OutputState: i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput).ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsProcessingConfigurationLambdaPtrInput is an input type that accepts AnalyticsApplicationInputsProcessingConfigurationLambdaArgs, AnalyticsApplicationInputsProcessingConfigurationLambdaPtr and AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsProcessingConfigurationLambdaPtrInput` via:
//
//	        AnalyticsApplicationInputsProcessingConfigurationLambdaArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsProcessingConfigurationLambdaPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput
	ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput
}

type analyticsApplicationInputsProcessingConfigurationLambdaPtrType AnalyticsApplicationInputsProcessingConfigurationLambdaArgs

func AnalyticsApplicationInputsProcessingConfigurationLambdaPtr(v *AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) AnalyticsApplicationInputsProcessingConfigurationLambdaPtrInput {
	return (*analyticsApplicationInputsProcessingConfigurationLambdaPtrType)(v)
}

func (*analyticsApplicationInputsProcessingConfigurationLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (i *analyticsApplicationInputsProcessingConfigurationLambdaPtrType) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsProcessingConfigurationLambdaPtrType) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput)
}

func (i *analyticsApplicationInputsProcessingConfigurationLambdaPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsProcessingConfigurationLambda] {
	return pulumix.Output[*AnalyticsApplicationInputsProcessingConfigurationLambda]{
		OutputState: i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return o.ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsProcessingConfigurationLambda) *AnalyticsApplicationInputsProcessingConfigurationLambda {
		return &v
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput)
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsProcessingConfigurationLambda] {
	return pulumix.Output[AnalyticsApplicationInputsProcessingConfigurationLambda]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsProcessingConfigurationLambda] {
	return pulumix.Output[*AnalyticsApplicationInputsProcessingConfigurationLambda]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput) Elem() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfigurationLambda) AnalyticsApplicationInputsProcessingConfigurationLambda {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsProcessingConfigurationLambda
		return ret
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfigurationLambda) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfigurationLambda) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationInputsSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormat `pulumi:"recordFormat"`
}

// AnalyticsApplicationInputsSchemaInput is an input type that accepts AnalyticsApplicationInputsSchemaArgs and AnalyticsApplicationInputsSchemaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaInput` via:
//
//	AnalyticsApplicationInputsSchemaArgs{...}
type AnalyticsApplicationInputsSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput
	ToAnalyticsApplicationInputsSchemaOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaOutput
}

type AnalyticsApplicationInputsSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationInputsSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationInputsSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput {
	return i.ToAnalyticsApplicationInputsSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaOutput)
}

func (i AnalyticsApplicationInputsSchemaArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchema] {
	return pulumix.Output[AnalyticsApplicationInputsSchema]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaPtrOutput() AnalyticsApplicationInputsSchemaPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaOutput).ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaArgs, AnalyticsApplicationInputsSchemaPtr and AnalyticsApplicationInputsSchemaPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaPtrInput` via:
//
//	        AnalyticsApplicationInputsSchemaArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsSchemaPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaPtrOutput() AnalyticsApplicationInputsSchemaPtrOutput
	ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaPtrOutput
}

type analyticsApplicationInputsSchemaPtrType AnalyticsApplicationInputsSchemaArgs

func AnalyticsApplicationInputsSchemaPtr(v *AnalyticsApplicationInputsSchemaArgs) AnalyticsApplicationInputsSchemaPtrInput {
	return (*analyticsApplicationInputsSchemaPtrType)(v)
}

func (*analyticsApplicationInputsSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaPtrType) ToAnalyticsApplicationInputsSchemaPtrOutput() AnalyticsApplicationInputsSchemaPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaPtrType) ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaPtrOutput)
}

func (i *analyticsApplicationInputsSchemaPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchema] {
	return pulumix.Output[*AnalyticsApplicationInputsSchema]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaPtrOutput() AnalyticsApplicationInputsSchemaPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsSchema) *AnalyticsApplicationInputsSchema {
		return &v
	}).(AnalyticsApplicationInputsSchemaPtrOutput)
}

func (o AnalyticsApplicationInputsSchemaOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchema] {
	return pulumix.Output[AnalyticsApplicationInputsSchema]{
		OutputState: o.OutputState,
	}
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationInputsSchemaOutput) RecordColumns() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) []AnalyticsApplicationInputsSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationInputsSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationInputsSchemaOutput) RecordFormat() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) AnalyticsApplicationInputsSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationInputsSchemaRecordFormatOutput)
}

type AnalyticsApplicationInputsSchemaPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaPtrOutput) ToAnalyticsApplicationInputsSchemaPtrOutput() AnalyticsApplicationInputsSchemaPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaPtrOutput) ToAnalyticsApplicationInputsSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchema] {
	return pulumix.Output[*AnalyticsApplicationInputsSchema]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsSchemaPtrOutput) Elem() AnalyticsApplicationInputsSchemaOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchema) AnalyticsApplicationInputsSchema {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsSchema
		return ret
	}).(AnalyticsApplicationInputsSchemaOutput)
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationInputsSchemaPtrOutput) RecordColumns() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchema) []AnalyticsApplicationInputsSchemaRecordColumn {
		if v == nil {
			return nil
		}
		return v.RecordColumns
	}).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationInputsSchemaPtrOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchema) *string {
		if v == nil {
			return nil
		}
		return v.RecordEncoding
	}).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationInputsSchemaPtrOutput) RecordFormat() AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchema) *AnalyticsApplicationInputsSchemaRecordFormat {
		if v == nil {
			return nil
		}
		return &v.RecordFormat
	}).(AnalyticsApplicationInputsSchemaRecordFormatPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

// AnalyticsApplicationInputsSchemaRecordColumnInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordColumnArgs and AnalyticsApplicationInputsSchemaRecordColumnOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordColumnInput` via:
//
//	AnalyticsApplicationInputsSchemaRecordColumnArgs{...}
type AnalyticsApplicationInputsSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationInputsSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordColumn] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordColumn]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx).OutputState,
	}
}

// AnalyticsApplicationInputsSchemaRecordColumnArrayInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordColumnArray and AnalyticsApplicationInputsSchemaRecordColumnArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordColumnArrayInput` via:
//
//	AnalyticsApplicationInputsSchemaRecordColumnArray{ AnalyticsApplicationInputsSchemaRecordColumnArgs{...} }
type AnalyticsApplicationInputsSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArray []AnalyticsApplicationInputsSchemaRecordColumnInput

func (AnalyticsApplicationInputsSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationInputsSchemaRecordColumn] {
	return pulumix.Output[[]AnalyticsApplicationInputsSchemaRecordColumn]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordColumn] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordColumn]{
		OutputState: o.OutputState,
	}
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationInputsSchemaRecordColumn] {
	return pulumix.Output[[]AnalyticsApplicationInputsSchemaRecordColumn]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationInputsSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

// AnalyticsApplicationInputsSchemaRecordFormatInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatArgs and AnalyticsApplicationInputsSchemaRecordFormatOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatInput` via:
//
//	AnalyticsApplicationInputsSchemaRecordFormatArgs{...}
type AnalyticsApplicationInputsSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormat] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormat]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatOutput).ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaRecordFormatPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatArgs, AnalyticsApplicationInputsSchemaRecordFormatPtr and AnalyticsApplicationInputsSchemaRecordFormatPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatPtrInput` via:
//
//	        AnalyticsApplicationInputsSchemaRecordFormatArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsSchemaRecordFormatPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatPtrType AnalyticsApplicationInputsSchemaRecordFormatArgs

func AnalyticsApplicationInputsSchemaRecordFormatPtr(v *AnalyticsApplicationInputsSchemaRecordFormatArgs) AnalyticsApplicationInputsSchemaRecordFormatPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatPtrOutput)
}

func (i *analyticsApplicationInputsSchemaRecordFormatPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormat] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormat]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsSchemaRecordFormat) *AnalyticsApplicationInputsSchemaRecordFormat {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatPtrOutput)
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormat] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormat]{
		OutputState: o.OutputState,
	}
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormat) *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormat) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormat] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormat]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsSchemaRecordFormatPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormat) AnalyticsApplicationInputsSchemaRecordFormat {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsSchemaRecordFormat
		return ret
	}).(AnalyticsApplicationInputsSchemaRecordFormatOutput)
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatPtrOutput) MappingParameters() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormat) *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		if v == nil {
			return nil
		}
		return v.MappingParameters
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationInputsSchemaRecordFormatPtrOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormat) *string {
		if v == nil {
			return nil
		}
		return v.RecordFormatType
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput` via:
//
//	AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs{...}
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParameters] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParameters]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs, AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtr and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput` via:
//
//	        AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParameters] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParameters]{
		OutputState: o.OutputState,
	}
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsSchemaRecordFormatMappingParameters
		return ret
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput` via:
//
//	AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs{...}
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs, AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtr and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput` via:
//
//	        AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv]{
		OutputState: o.OutputState,
	}
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv
		return ret
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) *string {
		if v == nil {
			return nil
		}
		return &v.RecordColumnDelimiter
	}).(pulumi.StringPtrOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowDelimiter
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput` via:
//
//	AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs{...}
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs, AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtr and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput` via:
//
//	        AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson]{
		OutputState: i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson]{
		OutputState: o.OutputState,
	}
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson
		return ret
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowPath
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsStartingPositionConfiguration struct {
	// The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.
	StartingPosition *string `pulumi:"startingPosition"`
}

// AnalyticsApplicationInputsStartingPositionConfigurationInput is an input type that accepts AnalyticsApplicationInputsStartingPositionConfigurationArgs and AnalyticsApplicationInputsStartingPositionConfigurationOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsStartingPositionConfigurationInput` via:
//
//	AnalyticsApplicationInputsStartingPositionConfigurationArgs{...}
type AnalyticsApplicationInputsStartingPositionConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgs struct {
	// The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.
	StartingPosition pulumi.StringPtrInput `pulumi:"startingPosition"`
}

func (AnalyticsApplicationInputsStartingPositionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationOutput)
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsStartingPositionConfiguration] {
	return pulumix.Output[AnalyticsApplicationInputsStartingPositionConfiguration]{
		OutputState: i.ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(ctx).OutputState,
	}
}

// AnalyticsApplicationInputsStartingPositionConfigurationArrayInput is an input type that accepts AnalyticsApplicationInputsStartingPositionConfigurationArray and AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsStartingPositionConfigurationArrayInput` via:
//
//	AnalyticsApplicationInputsStartingPositionConfigurationArray{ AnalyticsApplicationInputsStartingPositionConfigurationArgs{...} }
type AnalyticsApplicationInputsStartingPositionConfigurationArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArray []AnalyticsApplicationInputsStartingPositionConfigurationInput

func (AnalyticsApplicationInputsStartingPositionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationInputsStartingPositionConfiguration] {
	return pulumix.Output[[]AnalyticsApplicationInputsStartingPositionConfiguration]{
		OutputState: i.ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationInputsStartingPositionConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationInputsStartingPositionConfiguration] {
	return pulumix.Output[AnalyticsApplicationInputsStartingPositionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.
func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) StartingPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStartingPositionConfiguration) *string { return v.StartingPosition }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationInputsStartingPositionConfiguration] {
	return pulumix.Output[[]AnalyticsApplicationInputsStartingPositionConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsStartingPositionConfiguration {
		return vs[0].([]AnalyticsApplicationInputsStartingPositionConfiguration)[vs[1].(int)]
	}).(AnalyticsApplicationInputsStartingPositionConfigurationOutput)
}

type AnalyticsApplicationOutputType struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationOutputKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationOutputKinesisStream `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda *AnalyticsApplicationOutputLambda `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name string `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchema `pulumi:"schema"`
}

// AnalyticsApplicationOutputTypeInput is an input type that accepts AnalyticsApplicationOutputTypeArgs and AnalyticsApplicationOutputTypeOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputTypeInput` via:
//
//	AnalyticsApplicationOutputTypeArgs{...}
type AnalyticsApplicationOutputTypeInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputTypeOutput() AnalyticsApplicationOutputTypeOutput
	ToAnalyticsApplicationOutputTypeOutputWithContext(context.Context) AnalyticsApplicationOutputTypeOutput
}

type AnalyticsApplicationOutputTypeArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationOutputKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationOutputKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda AnalyticsApplicationOutputLambdaPtrInput `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name pulumi.StringInput `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchemaInput `pulumi:"schema"`
}

func (AnalyticsApplicationOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputType)(nil)).Elem()
}

func (i AnalyticsApplicationOutputTypeArgs) ToAnalyticsApplicationOutputTypeOutput() AnalyticsApplicationOutputTypeOutput {
	return i.ToAnalyticsApplicationOutputTypeOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputTypeArgs) ToAnalyticsApplicationOutputTypeOutputWithContext(ctx context.Context) AnalyticsApplicationOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputTypeOutput)
}

func (i AnalyticsApplicationOutputTypeArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputType] {
	return pulumix.Output[AnalyticsApplicationOutputType]{
		OutputState: i.ToAnalyticsApplicationOutputTypeOutputWithContext(ctx).OutputState,
	}
}

// AnalyticsApplicationOutputTypeArrayInput is an input type that accepts AnalyticsApplicationOutputTypeArray and AnalyticsApplicationOutputTypeArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputTypeArrayInput` via:
//
//	AnalyticsApplicationOutputTypeArray{ AnalyticsApplicationOutputTypeArgs{...} }
type AnalyticsApplicationOutputTypeArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputTypeArrayOutput() AnalyticsApplicationOutputTypeArrayOutput
	ToAnalyticsApplicationOutputTypeArrayOutputWithContext(context.Context) AnalyticsApplicationOutputTypeArrayOutput
}

type AnalyticsApplicationOutputTypeArray []AnalyticsApplicationOutputTypeInput

func (AnalyticsApplicationOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutputType)(nil)).Elem()
}

func (i AnalyticsApplicationOutputTypeArray) ToAnalyticsApplicationOutputTypeArrayOutput() AnalyticsApplicationOutputTypeArrayOutput {
	return i.ToAnalyticsApplicationOutputTypeArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputTypeArray) ToAnalyticsApplicationOutputTypeArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputTypeArrayOutput)
}

func (i AnalyticsApplicationOutputTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationOutputType] {
	return pulumix.Output[[]AnalyticsApplicationOutputType]{
		OutputState: i.ToAnalyticsApplicationOutputTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationOutputTypeOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputType)(nil)).Elem()
}

func (o AnalyticsApplicationOutputTypeOutput) ToAnalyticsApplicationOutputTypeOutput() AnalyticsApplicationOutputTypeOutput {
	return o
}

func (o AnalyticsApplicationOutputTypeOutput) ToAnalyticsApplicationOutputTypeOutputWithContext(ctx context.Context) AnalyticsApplicationOutputTypeOutput {
	return o
}

func (o AnalyticsApplicationOutputTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputType] {
	return pulumix.Output[AnalyticsApplicationOutputType]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationOutputTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationOutputTypeOutput) KinesisFirehose() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputType) *AnalyticsApplicationOutputKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationOutputTypeOutput) KinesisStream() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputType) *AnalyticsApplicationOutputKinesisStream {
		return v.KinesisStream
	}).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

// The Lambda function destination. See Lambda below for more details.
func (o AnalyticsApplicationOutputTypeOutput) Lambda() AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputType) *AnalyticsApplicationOutputLambda { return v.Lambda }).(AnalyticsApplicationOutputLambdaPtrOutput)
}

// The Name of the in-application stream.
func (o AnalyticsApplicationOutputTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputType) string { return v.Name }).(pulumi.StringOutput)
}

// The Schema format of the data written to the destination. See Destination Schema below for more details.
func (o AnalyticsApplicationOutputTypeOutput) Schema() AnalyticsApplicationOutputSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputType) AnalyticsApplicationOutputSchema { return v.Schema }).(AnalyticsApplicationOutputSchemaOutput)
}

type AnalyticsApplicationOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutputType)(nil)).Elem()
}

func (o AnalyticsApplicationOutputTypeArrayOutput) ToAnalyticsApplicationOutputTypeArrayOutput() AnalyticsApplicationOutputTypeArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputTypeArrayOutput) ToAnalyticsApplicationOutputTypeArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputTypeArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationOutputType] {
	return pulumix.Output[[]AnalyticsApplicationOutputType]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationOutputTypeArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationOutputType {
		return vs[0].([]AnalyticsApplicationOutputType)[vs[1].(int)]
	}).(AnalyticsApplicationOutputTypeOutput)
}

type AnalyticsApplicationOutputKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationOutputKinesisFirehoseInput is an input type that accepts AnalyticsApplicationOutputKinesisFirehoseArgs and AnalyticsApplicationOutputKinesisFirehoseOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisFirehoseInput` via:
//
//	AnalyticsApplicationOutputKinesisFirehoseArgs{...}
type AnalyticsApplicationOutputKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput
	ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput
}

type AnalyticsApplicationOutputKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseOutput)
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputKinesisFirehose] {
	return pulumix.Output[AnalyticsApplicationOutputKinesisFirehose]{
		OutputState: i.ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseOutput).ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx)
}

// AnalyticsApplicationOutputKinesisFirehosePtrInput is an input type that accepts AnalyticsApplicationOutputKinesisFirehoseArgs, AnalyticsApplicationOutputKinesisFirehosePtr and AnalyticsApplicationOutputKinesisFirehosePtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisFirehosePtrInput` via:
//
//	        AnalyticsApplicationOutputKinesisFirehoseArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationOutputKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput
	ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput
}

type analyticsApplicationOutputKinesisFirehosePtrType AnalyticsApplicationOutputKinesisFirehoseArgs

func AnalyticsApplicationOutputKinesisFirehosePtr(v *AnalyticsApplicationOutputKinesisFirehoseArgs) AnalyticsApplicationOutputKinesisFirehosePtrInput {
	return (*analyticsApplicationOutputKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationOutputKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisFirehosePtrType) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisFirehosePtrType) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

func (i *analyticsApplicationOutputKinesisFirehosePtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationOutputKinesisFirehose] {
	return pulumix.Output[*AnalyticsApplicationOutputKinesisFirehose]{
		OutputState: i.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationOutputKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationOutputKinesisFirehose) *AnalyticsApplicationOutputKinesisFirehose {
		return &v
	}).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputKinesisFirehose] {
	return pulumix.Output[AnalyticsApplicationOutputKinesisFirehose]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationOutputKinesisFirehose] {
	return pulumix.Output[*AnalyticsApplicationOutputKinesisFirehose]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) Elem() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisFirehose) AnalyticsApplicationOutputKinesisFirehose {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationOutputKinesisFirehose
		return ret
	}).(AnalyticsApplicationOutputKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationOutputKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationOutputKinesisStreamInput is an input type that accepts AnalyticsApplicationOutputKinesisStreamArgs and AnalyticsApplicationOutputKinesisStreamOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisStreamInput` via:
//
//	AnalyticsApplicationOutputKinesisStreamArgs{...}
type AnalyticsApplicationOutputKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput
	ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamOutput
}

type AnalyticsApplicationOutputKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamOutput)
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputKinesisStream] {
	return pulumix.Output[AnalyticsApplicationOutputKinesisStream]{
		OutputState: i.ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamOutput).ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx)
}

// AnalyticsApplicationOutputKinesisStreamPtrInput is an input type that accepts AnalyticsApplicationOutputKinesisStreamArgs, AnalyticsApplicationOutputKinesisStreamPtr and AnalyticsApplicationOutputKinesisStreamPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisStreamPtrInput` via:
//
//	        AnalyticsApplicationOutputKinesisStreamArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationOutputKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput
	ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput
}

type analyticsApplicationOutputKinesisStreamPtrType AnalyticsApplicationOutputKinesisStreamArgs

func AnalyticsApplicationOutputKinesisStreamPtr(v *AnalyticsApplicationOutputKinesisStreamArgs) AnalyticsApplicationOutputKinesisStreamPtrInput {
	return (*analyticsApplicationOutputKinesisStreamPtrType)(v)
}

func (*analyticsApplicationOutputKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisStreamPtrType) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisStreamPtrType) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

func (i *analyticsApplicationOutputKinesisStreamPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationOutputKinesisStream] {
	return pulumix.Output[*AnalyticsApplicationOutputKinesisStream]{
		OutputState: i.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationOutputKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationOutputKinesisStream) *AnalyticsApplicationOutputKinesisStream {
		return &v
	}).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputKinesisStream] {
	return pulumix.Output[AnalyticsApplicationOutputKinesisStream]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationOutputKinesisStream] {
	return pulumix.Output[*AnalyticsApplicationOutputKinesisStream]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) Elem() AnalyticsApplicationOutputKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisStream) AnalyticsApplicationOutputKinesisStream {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationOutputKinesisStream
		return ret
	}).(AnalyticsApplicationOutputKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisStream) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisStream) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationOutputLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationOutputLambdaInput is an input type that accepts AnalyticsApplicationOutputLambdaArgs and AnalyticsApplicationOutputLambdaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputLambdaInput` via:
//
//	AnalyticsApplicationOutputLambdaArgs{...}
type AnalyticsApplicationOutputLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput
	ToAnalyticsApplicationOutputLambdaOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaOutput
}

type AnalyticsApplicationOutputLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput {
	return i.ToAnalyticsApplicationOutputLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaOutput)
}

func (i AnalyticsApplicationOutputLambdaArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputLambda] {
	return pulumix.Output[AnalyticsApplicationOutputLambda]{
		OutputState: i.ToAnalyticsApplicationOutputLambdaOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaOutput).ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx)
}

// AnalyticsApplicationOutputLambdaPtrInput is an input type that accepts AnalyticsApplicationOutputLambdaArgs, AnalyticsApplicationOutputLambdaPtr and AnalyticsApplicationOutputLambdaPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputLambdaPtrInput` via:
//
//	        AnalyticsApplicationOutputLambdaArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationOutputLambdaPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput
	ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaPtrOutput
}

type analyticsApplicationOutputLambdaPtrType AnalyticsApplicationOutputLambdaArgs

func AnalyticsApplicationOutputLambdaPtr(v *AnalyticsApplicationOutputLambdaArgs) AnalyticsApplicationOutputLambdaPtrInput {
	return (*analyticsApplicationOutputLambdaPtrType)(v)
}

func (*analyticsApplicationOutputLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (i *analyticsApplicationOutputLambdaPtrType) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputLambdaPtrType) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaPtrOutput)
}

func (i *analyticsApplicationOutputLambdaPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationOutputLambda] {
	return pulumix.Output[*AnalyticsApplicationOutputLambda]{
		OutputState: i.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationOutputLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationOutputLambda) *AnalyticsApplicationOutputLambda {
		return &v
	}).(AnalyticsApplicationOutputLambdaPtrOutput)
}

func (o AnalyticsApplicationOutputLambdaOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputLambda] {
	return pulumix.Output[AnalyticsApplicationOutputLambda]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputLambdaPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationOutputLambda] {
	return pulumix.Output[*AnalyticsApplicationOutputLambda]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) Elem() AnalyticsApplicationOutputLambdaOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputLambda) AnalyticsApplicationOutputLambda {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationOutputLambda
		return ret
	}).(AnalyticsApplicationOutputLambdaOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaPtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputLambda) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputLambda) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationOutputSchema struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType string `pulumi:"recordFormatType"`
}

// AnalyticsApplicationOutputSchemaInput is an input type that accepts AnalyticsApplicationOutputSchemaArgs and AnalyticsApplicationOutputSchemaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputSchemaInput` via:
//
//	AnalyticsApplicationOutputSchemaArgs{...}
type AnalyticsApplicationOutputSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput
	ToAnalyticsApplicationOutputSchemaOutputWithContext(context.Context) AnalyticsApplicationOutputSchemaOutput
}

type AnalyticsApplicationOutputSchemaArgs struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationOutputSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchema)(nil)).Elem()
}

func (i AnalyticsApplicationOutputSchemaArgs) ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput {
	return i.ToAnalyticsApplicationOutputSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputSchemaArgs) ToAnalyticsApplicationOutputSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputSchemaOutput)
}

func (i AnalyticsApplicationOutputSchemaArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputSchema] {
	return pulumix.Output[AnalyticsApplicationOutputSchema]{
		OutputState: i.ToAnalyticsApplicationOutputSchemaOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationOutputSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchema)(nil)).Elem()
}

func (o AnalyticsApplicationOutputSchemaOutput) ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput {
	return o
}

func (o AnalyticsApplicationOutputSchemaOutput) ToAnalyticsApplicationOutputSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaOutput {
	return o
}

func (o AnalyticsApplicationOutputSchemaOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationOutputSchema] {
	return pulumix.Output[AnalyticsApplicationOutputSchema]{
		OutputState: o.OutputState,
	}
}

// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationOutputSchemaOutput) RecordFormatType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputSchema) string { return v.RecordFormatType }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSources struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3 `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchema `pulumi:"schema"`
	// The in-application Table Name.
	TableName string `pulumi:"tableName"`
}

// AnalyticsApplicationReferenceDataSourcesInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesArgs and AnalyticsApplicationReferenceDataSourcesOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesArgs{...}
type AnalyticsApplicationReferenceDataSourcesInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput
	ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesOutput
}

type AnalyticsApplicationReferenceDataSourcesArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3Input `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchemaInput `pulumi:"schema"`
	// The in-application Table Name.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (AnalyticsApplicationReferenceDataSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSources] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSources]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesOutput).ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesArgs, AnalyticsApplicationReferenceDataSourcesPtr and AnalyticsApplicationReferenceDataSourcesPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesPtrInput` via:
//
//	        AnalyticsApplicationReferenceDataSourcesArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationReferenceDataSourcesPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput
}

type analyticsApplicationReferenceDataSourcesPtrType AnalyticsApplicationReferenceDataSourcesArgs

func AnalyticsApplicationReferenceDataSourcesPtr(v *AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesPtrInput {
	return (*analyticsApplicationReferenceDataSourcesPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesPtrType) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesPtrType) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesPtrOutput)
}

func (i *analyticsApplicationReferenceDataSourcesPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSources] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSources]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationReferenceDataSources) *AnalyticsApplicationReferenceDataSources {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesPtrOutput)
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSources] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSources]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesOutput) S3() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesS3 {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesSchema {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSources] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSources]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSources {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationReferenceDataSources
		return ret
	}).(AnalyticsApplicationReferenceDataSourcesOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSources) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) S3() AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSources) *AnalyticsApplicationReferenceDataSourcesS3 {
		if v == nil {
			return nil
		}
		return &v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3PtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSources) *AnalyticsApplicationReferenceDataSourcesSchema {
		if v == nil {
			return nil
		}
		return &v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSources) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesS3 struct {
	// The S3 Bucket ARN.
	BucketArn string `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey string `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationReferenceDataSourcesS3Input is an input type that accepts AnalyticsApplicationReferenceDataSourcesS3Args and AnalyticsApplicationReferenceDataSourcesS3Output values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesS3Input` via:
//
//	AnalyticsApplicationReferenceDataSourcesS3Args{...}
type AnalyticsApplicationReferenceDataSourcesS3Input interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output
	ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesS3Output
}

type AnalyticsApplicationReferenceDataSourcesS3Args struct {
	// The S3 Bucket ARN.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey pulumi.StringInput `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationReferenceDataSourcesS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output {
	return i.ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesS3] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesS3]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutput() AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesS3Output).ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesS3PtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesS3Args, AnalyticsApplicationReferenceDataSourcesS3Ptr and AnalyticsApplicationReferenceDataSourcesS3PtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesS3PtrInput` via:
//
//	        AnalyticsApplicationReferenceDataSourcesS3Args{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationReferenceDataSourcesS3PtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesS3PtrOutput() AnalyticsApplicationReferenceDataSourcesS3PtrOutput
	ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesS3PtrOutput
}

type analyticsApplicationReferenceDataSourcesS3PtrType AnalyticsApplicationReferenceDataSourcesS3Args

func AnalyticsApplicationReferenceDataSourcesS3Ptr(v *AnalyticsApplicationReferenceDataSourcesS3Args) AnalyticsApplicationReferenceDataSourcesS3PtrInput {
	return (*analyticsApplicationReferenceDataSourcesS3PtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesS3PtrType) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutput() AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesS3PtrType) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesS3PtrOutput)
}

func (i *analyticsApplicationReferenceDataSourcesS3PtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesS3] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesS3]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesS3Output struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3Output {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutput() AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationReferenceDataSourcesS3) *AnalyticsApplicationReferenceDataSourcesS3 {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesS3PtrOutput)
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesS3] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesS3]{
		OutputState: o.OutputState,
	}
}

// The S3 Bucket ARN.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The File Key name containing reference data.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) FileKey() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.FileKey }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesS3PtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesS3PtrOutput) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutput() AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesS3PtrOutput) ToAnalyticsApplicationReferenceDataSourcesS3PtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3PtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesS3PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesS3] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesS3]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesS3PtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesS3) AnalyticsApplicationReferenceDataSourcesS3 {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationReferenceDataSourcesS3
		return ret
	}).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

// The S3 Bucket ARN.
func (o AnalyticsApplicationReferenceDataSourcesS3PtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// The File Key name containing reference data.
func (o AnalyticsApplicationReferenceDataSourcesS3PtrOutput) FileKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesS3) *string {
		if v == nil {
			return nil
		}
		return &v.FileKey
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationReferenceDataSourcesS3PtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesS3) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat `pulumi:"recordFormat"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaArgs and AnalyticsApplicationReferenceDataSourcesSchemaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesSchemaArgs{...}
type AnalyticsApplicationReferenceDataSourcesSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchema] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchema]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaArgs, AnalyticsApplicationReferenceDataSourcesSchemaPtr and AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaPtrInput` via:
//
//	        AnalyticsApplicationReferenceDataSourcesSchemaArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationReferenceDataSourcesSchemaPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaPtrType AnalyticsApplicationReferenceDataSourcesSchemaArgs

func AnalyticsApplicationReferenceDataSourcesSchemaPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaArgs) AnalyticsApplicationReferenceDataSourcesSchemaPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput)
}

func (i *analyticsApplicationReferenceDataSourcesSchemaPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchema] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchema]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationReferenceDataSourcesSchema) *AnalyticsApplicationReferenceDataSourcesSchema {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput)
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchema] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchema]{
		OutputState: o.OutputState,
	}
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordColumns() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordFormat() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchema] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchema]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchema) AnalyticsApplicationReferenceDataSourcesSchema {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationReferenceDataSourcesSchema
		return ret
	}).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) RecordColumns() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchema) []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
		if v == nil {
			return nil
		}
		return v.RecordColumns
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchema) *string {
		if v == nil {
			return nil
		}
		return v.RecordEncoding
	}).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput) RecordFormat() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchema) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
		if v == nil {
			return nil
		}
		return &v.RecordFormat
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs{...}
type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(ctx).OutputState,
	}
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray and AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray{ AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs{...} }
type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn] {
	return pulumix.Output[[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn]{
		OutputState: o.OutputState,
	}
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn] {
	return pulumix.Output[[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs{...}
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs, AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtr and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrInput` via:
//
//	        AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput)
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput)
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat]{
		OutputState: o.OutputState,
	}
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat
		return ret
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput)
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput) MappingParameters() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		if v == nil {
			return nil
		}
		return v.MappingParameters
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *string {
		if v == nil {
			return nil
		}
		return v.RecordFormatType
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs{...}
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs, AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtr and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput` via:
//
//	        AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters]{
		OutputState: o.OutputState,
	}
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters
		return ret
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs{...}
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs, AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtr and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput` via:
//
//	        AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv]{
		OutputState: o.OutputState,
	}
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv
		return ret
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) *string {
		if v == nil {
			return nil
		}
		return &v.RecordColumnDelimiter
	}).(pulumi.StringPtrOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowDelimiter
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput` via:
//
//	AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs{...}
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx).OutputState,
	}
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs, AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtr and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput` via:
//
//	        AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs{...}
//
//	or:
//
//	        nil
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson]{
		OutputState: i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx).OutputState,
	}
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToOutput(ctx context.Context) pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson]{
		OutputState: o.OutputState,
	}
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson] {
	return pulumix.Output[*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson]{
		OutputState: o.OutputState,
	}
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		if v != nil {
			return *v
		}
		var ret AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson
		return ret
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) *string {
		if v == nil {
			return nil
		}
		return &v.RecordRowPath
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfiguration struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
	DomainArn *string `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName string `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod *string `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig`.  The pattern needs to be `arn:.*`.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration `pulumi:"s3Configuration"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName *string `pulumi:"typeName"`
	// The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below
	VpcConfig *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig `pulumi:"vpcConfig"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationArgs and FirehoseDeliveryStreamElasticsearchConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
	ClusterEndpoint pulumi.StringPtrInput `pulumi:"clusterEndpoint"`
	// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
	DomainArn pulumi.StringPtrInput `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod pulumi.StringPtrInput `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig`.  The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationInput `pulumi:"s3Configuration"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below
	VpcConfig FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationArgs, FirehoseDeliveryStreamElasticsearchConfigurationPtr and FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamElasticsearchConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamElasticsearchConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfiguration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfiguration]{
		OutputState: o.OutputState,
	}
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.ClusterEndpoint }).(pulumi.StringPtrOutput)
}

// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.DomainArn }).(pulumi.StringPtrOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) S3Configuration() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration {
		return v.S3Configuration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) VpcConfig() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig {
		return v.VpcConfig
	}).(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) FirehoseDeliveryStreamElasticsearchConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamElasticsearchConfiguration
		return ret
	}).(FirehoseDeliveryStreamElasticsearchConfigurationOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClusterEndpoint
	}).(pulumi.StringPtrOutput)
}

// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DomainArn
	}).(pulumi.StringPtrOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) IndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.IndexName
	}).(pulumi.StringPtrOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IndexRotationPeriod
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) S3Configuration() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TypeName
	}).(pulumi.StringPtrOutput)
}

// The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) VpcConfig() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration
		return ret
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs{...} }
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs{...} }
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
//
// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs and FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs, FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtr and FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *int {
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration
		return ret
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig struct {
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
	RoleArn string `pulumi:"roleArn"`
	// A list of security group IDs to associate with Kinesis Firehose.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs to associate with Kinesis Firehose.
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs and FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigInput` via:
//
//	FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs{...}
type FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs struct {
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A list of security group IDs to associate with Kinesis Firehose.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnet IDs to associate with Kinesis Firehose.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs, FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtr and FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrInput` via:
//
//	        FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrType FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs

func FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput)
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig]{
		OutputState: i.ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig] {
	return pulumix.Output[FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A list of security group IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subnet IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig] {
	return pulumix.Output[*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig
		return ret
	}).(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration `pulumi:"dataFormatConversionConfiguration"`
	// The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details. Required when using dynamic partitioning.
	DynamicPartitioningConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration `pulumi:"dynamicPartitioningConfiguration"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput `pulumi:"dataFormatConversionConfiguration"`
	// The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details. Required when using dynamic partitioning.
	DynamicPartitioningConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrInput `pulumi:"dynamicPartitioningConfiguration"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3Configuration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details. Required when using dynamic partitioning.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) DynamicPartitioningConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration {
		return v.DynamicPartitioningConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) FirehoseDeliveryStreamExtendedS3Configuration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3Configuration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		if v == nil {
			return nil
		}
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details. Required when using dynamic partitioning.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) DynamicPartitioningConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration {
		if v == nil {
			return nil
		}
		return v.DynamicPartitioningConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		if v == nil {
			return nil
		}
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration `pulumi:"schemaConfiguration"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput `pulumi:"schemaConfiguration"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration]{
		OutputState: o.OutputState,
	}
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		if v == nil {
			return nil
		}
		return &v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		if v == nil {
			return nil
		}
		return &v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		if v == nil {
			return nil
		}
		return &v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer `pulumi:"deserializer"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput `pulumi:"deserializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration]{
		OutputState: o.OutputState,
	}
}

// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) Deserializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
		return v.Deserializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput) Deserializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
		if v == nil {
			return nil
		}
		return &v.Deserializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe `pulumi:"openXJsonSerDe"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput `pulumi:"openXJsonSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer]{
		OutputState: o.OutputState,
	}
}

// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) HiveJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return v.HiveJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// Nested argument that specifies the OpenX SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) OpenXJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return v.OpenXJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput) HiveJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		if v == nil {
			return nil
		}
		return v.HiveJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// Nested argument that specifies the OpenX SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput) OpenXJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		if v == nil {
			return nil
		}
		return v.OpenXJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats []string `pulumi:"timestampFormats"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats pulumi.StringArrayInput `pulumi:"timestampFormats"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe]{
		OutputState: o.OutputState,
	}
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		if v == nil {
			return nil
		}
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings map[string]string `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores *bool `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings pulumi.StringMapInput `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores pulumi.BoolPtrInput `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe]{
		OutputState: o.OutputState,
	}
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		if v == nil {
			return nil
		}
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer `pulumi:"serializer"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput `pulumi:"serializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration]{
		OutputState: o.OutputState,
	}
}

// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) Serializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
		return v.Serializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput) Serializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
		if v == nil {
			return nil
		}
		return &v.Serializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe `pulumi:"parquetSerDe"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput `pulumi:"parquetSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer]{
		OutputState: o.OutputState,
	}
}

// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) OrcSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return v.OrcSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ParquetSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return v.ParquetSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput) OrcSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		if v == nil {
			return nil
		}
		return v.OrcSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput) ParquetSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		if v == nil {
			return nil
		}
		return v.ParquetSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns []string `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability *float64 `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The default is `SNAPPY`.
	Compression *string `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold *float64 `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding *bool `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion *string `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance *float64 `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride *int `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes *int `pulumi:"stripeSizeBytes"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns pulumi.StringArrayInput `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability pulumi.Float64PtrInput `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The default is `SNAPPY`.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold pulumi.Float64PtrInput `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding pulumi.BoolPtrInput `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion pulumi.StringPtrInput `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance pulumi.Float64PtrInput `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride pulumi.IntPtrInput `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes pulumi.IntPtrInput `pulumi:"stripeSizeBytes"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe]{
		OutputState: o.OutputState,
	}
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The default is `SNAPPY`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		if v == nil {
			return nil
		}
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		if v == nil {
			return nil
		}
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		if v == nil {
			return nil
		}
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The default is `SNAPPY`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		if v == nil {
			return nil
		}
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		if v == nil {
			return nil
		}
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		if v == nil {
			return nil
		}
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		if v == nil {
			return nil
		}
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		if v == nil {
			return nil
		}
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression *bool `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes *int `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes *int `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion *string `pulumi:"writerVersion"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression pulumi.BoolPtrInput `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes pulumi.IntPtrInput `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes pulumi.IntPtrInput `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion pulumi.StringPtrInput `pulumi:"writerVersion"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe]{
		OutputState: o.OutputState,
	}
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		if v == nil {
			return nil
		}
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		if v == nil {
			return nil
		}
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		if v == nil {
			return nil
		}
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		if v == nil {
			return nil
		}
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId *string `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName string `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region *string `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName string `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId pulumi.StringPtrInput `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// If you don't specify an AWS Region, the default is the current region.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// If you don't specify an AWS Region, the default is the current region.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration struct {
	// Enables or disables dynamic partitioning. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// Total amount of seconds Firehose spends on retries. Valid values between 0 and 7200. Default is 300.
	//
	// > **NOTE:** You can enable dynamic partitioning only when you create a new delivery stream. Once you enable dynamic partitioning on a delivery stream, it cannot be disabled on this delivery stream. Therefore, the provider will recreate the resource whenever dynamic partitioning is enabled or disabled.
	RetryDuration *int `pulumi:"retryDuration"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs struct {
	// Enables or disables dynamic partitioning. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Total amount of seconds Firehose spends on retries. Valid values between 0 and 7200. Default is 300.
	//
	// > **NOTE:** You can enable dynamic partitioning only when you create a new delivery stream. Once you enable dynamic partitioning on a delivery stream, it cannot be disabled on this delivery stream. Therefore, the provider will recreate the resource whenever dynamic partitioning is enabled or disabled.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables dynamic partitioning. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Total amount of seconds Firehose spends on retries. Valid values between 0 and 7200. Default is 300.
//
// > **NOTE:** You can enable dynamic partitioning only when you create a new delivery stream. Once you enable dynamic partitioning on a delivery stream, it cannot be disabled on this delivery stream. Therefore, the provider will recreate the resource whenever dynamic partitioning is enabled or disabled.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration) *int {
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput)
}

// Enables or disables dynamic partitioning. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Total amount of seconds Firehose spends on retries. Valid values between 0 and 7200. Default is 300.
//
// > **NOTE:** You can enable dynamic partitioning only when you create a new delivery stream. Once you enable dynamic partitioning on a delivery stream, it cannot be disabled on this delivery stream. Therefore, the provider will recreate the resource whenever dynamic partitioning is enabled or disabled.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs{...} }
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs{...} }
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
//
// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfiguration struct {
	// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
	AccessKey *string `pulumi:"accessKey"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The HTTP endpoint name.
	Name *string `pulumi:"name"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The request configuration.  More details are given below.
	RequestConfiguration *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration `pulumi:"requestConfiguration"`
	// Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between `0` and `7200`. Default is `300`.
	RetryDuration *int `pulumi:"retryDuration"`
	// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be `arn:.*`.
	RoleArn *string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDataOnly` and `AllData`.  Default value is `FailedDataOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration `pulumi:"s3Configuration"`
	// The HTTP endpoint URL to which Kinesis Firehose sends your data.
	Url string `pulumi:"url"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationArgs and FirehoseDeliveryStreamHttpEndpointConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationArgs struct {
	// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The HTTP endpoint name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The request configuration.  More details are given below.
	RequestConfiguration FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrInput `pulumi:"requestConfiguration"`
	// Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between `0` and `7200`. Default is `300`.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDataOnly` and `AllData`.  Default value is `FailedDataOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationInput `pulumi:"s3Configuration"`
	// The HTTP endpoint URL to which Kinesis Firehose sends your data.
	Url pulumi.StringInput `pulumi:"url"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationOutput).ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamHttpEndpointConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationArgs, FirehoseDeliveryStreamHttpEndpointConfigurationPtr and FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamHttpEndpointConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamHttpEndpointConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput
}

type firehoseDeliveryStreamHttpEndpointConfigurationPtrType FirehoseDeliveryStreamHttpEndpointConfigurationArgs

func FirehoseDeliveryStreamHttpEndpointConfigurationPtr(v *FirehoseDeliveryStreamHttpEndpointConfigurationArgs) FirehoseDeliveryStreamHttpEndpointConfigurationPtrInput {
	return (*firehoseDeliveryStreamHttpEndpointConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamHttpEndpointConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfiguration {
		return &v
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfiguration]{
		OutputState: o.OutputState,
	}
}

// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The HTTP endpoint name.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput)
}

// The request configuration.  More details are given below.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) RequestConfiguration() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration {
		return v.RequestConfiguration
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput)
}

// Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between `0` and `7200`. Default is `300`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDataOnly` and `AllData`.  Default value is `FailedDataOnly`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) S3Configuration() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration {
		return v.S3Configuration
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput)
}

// The HTTP endpoint URL to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) Elem() FirehoseDeliveryStreamHttpEndpointConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) FirehoseDeliveryStreamHttpEndpointConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamHttpEndpointConfiguration
		return ret
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationOutput)
}

// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The HTTP endpoint name.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput)
}

// The request configuration.  More details are given below.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) RequestConfiguration() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration {
		if v == nil {
			return nil
		}
		return v.RequestConfiguration
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput)
}

// Total amount of seconds Firehose spends on retries. This duration starts after the initial attempt fails, It does not include the time periods during which Firehose waits for acknowledgment from the specified destination after each attempt. Valid values between `0` and `7200`. Default is `300`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs. The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDataOnly` and `AllData`.  Default value is `FailedDataOnly`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) S3Configuration() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput)
}

// The HTTP endpoint URL to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration) []FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration
		return ret
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfiguration) []FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs{...} }
type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs{...} }
type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
//
// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration struct {
	// Describes the metadata sent to the HTTP endpoint destination. More details are given below
	CommonAttributes []FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute `pulumi:"commonAttributes"`
	// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are `NONE` and `GZIP`.  Default value is `NONE`.
	ContentEncoding *string `pulumi:"contentEncoding"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs and FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs struct {
	// Describes the metadata sent to the HTTP endpoint destination. More details are given below
	CommonAttributes FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayInput `pulumi:"commonAttributes"`
	// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are `NONE` and `GZIP`.  Default value is `NONE`.
	ContentEncoding pulumi.StringPtrInput `pulumi:"contentEncoding"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput).ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs, FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtr and FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput
}

type firehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrType FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs

func FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtr(v *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrInput {
	return (*firehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration) *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration {
		return &v
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration]{
		OutputState: o.OutputState,
	}
}

// Describes the metadata sent to the HTTP endpoint destination. More details are given below
func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) CommonAttributes() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration) []FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute {
		return v.CommonAttributes
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput)
}

// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are `NONE` and `GZIP`.  Default value is `NONE`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput) ContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration) *string {
		return v.ContentEncoding
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput) Elem() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration
		return ret
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput)
}

// Describes the metadata sent to the HTTP endpoint destination. More details are given below
func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput) CommonAttributes() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration) []FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute {
		if v == nil {
			return nil
		}
		return v.CommonAttributes
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput)
}

// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are `NONE` and `GZIP`.  Default value is `NONE`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput) ContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentEncoding
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute struct {
	// The name of the HTTP endpoint common attribute.
	Name string `pulumi:"name"`
	// The value of the HTTP endpoint common attribute.
	Value string `pulumi:"value"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs and FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs struct {
	// The name of the HTTP endpoint common attribute.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP endpoint common attribute.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray and FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray{ FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs{...} }
type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray []FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeInput

func (FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute] {
	return pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute]{
		OutputState: o.OutputState,
	}
}

// The name of the HTTP endpoint common attribute.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The value of the HTTP endpoint common attribute.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput() FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute] {
	return pulumix.Output[[]FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute {
		return vs[0].([]FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttribute)[vs[1].(int)]
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs and FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput).ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs, FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtr and FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrType FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs

func FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtr(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *int {
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration
		return ret
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfiguration struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamKinesisSourceConfigurationInput is an input type that accepts FirehoseDeliveryStreamKinesisSourceConfigurationArgs and FirehoseDeliveryStreamKinesisSourceConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamKinesisSourceConfigurationInput` via:
//
//	FirehoseDeliveryStreamKinesisSourceConfigurationArgs{...}
type FirehoseDeliveryStreamKinesisSourceConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgs struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn pulumi.StringInput `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput)
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamKinesisSourceConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamKinesisSourceConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput).ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamKinesisSourceConfigurationArgs, FirehoseDeliveryStreamKinesisSourceConfigurationPtr and FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamKinesisSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput
}

type firehoseDeliveryStreamKinesisSourceConfigurationPtrType FirehoseDeliveryStreamKinesisSourceConfigurationArgs

func FirehoseDeliveryStreamKinesisSourceConfigurationPtr(v *FirehoseDeliveryStreamKinesisSourceConfigurationArgs) FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput {
	return (*firehoseDeliveryStreamKinesisSourceConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamKinesisSourceConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamKinesisSourceConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamKinesisSourceConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamKinesisSourceConfiguration) *FirehoseDeliveryStreamKinesisSourceConfiguration {
		return &v
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamKinesisSourceConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamKinesisSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamKinesisSourceConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamKinesisSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) Elem() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamKinesisSourceConfiguration) FirehoseDeliveryStreamKinesisSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamKinesisSourceConfiguration
		return ret
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput)
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) KinesisStreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamKinesisSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.KinesisStreamArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamKinesisSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamMskSourceConfiguration struct {
	// The authentication configuration of the Amazon MSK cluster. More details are given below.
	AuthenticationConfiguration FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// The ARN of the Amazon MSK cluster.
	MskClusterArn string `pulumi:"mskClusterArn"`
	// The topic name within the Amazon MSK cluster.
	TopicName string `pulumi:"topicName"`
}

// FirehoseDeliveryStreamMskSourceConfigurationInput is an input type that accepts FirehoseDeliveryStreamMskSourceConfigurationArgs and FirehoseDeliveryStreamMskSourceConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamMskSourceConfigurationInput` via:
//
//	FirehoseDeliveryStreamMskSourceConfigurationArgs{...}
type FirehoseDeliveryStreamMskSourceConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamMskSourceConfigurationOutput() FirehoseDeliveryStreamMskSourceConfigurationOutput
	ToFirehoseDeliveryStreamMskSourceConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamMskSourceConfigurationOutput
}

type FirehoseDeliveryStreamMskSourceConfigurationArgs struct {
	// The authentication configuration of the Amazon MSK cluster. More details are given below.
	AuthenticationConfiguration FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationInput `pulumi:"authenticationConfiguration"`
	// The ARN of the Amazon MSK cluster.
	MskClusterArn pulumi.StringInput `pulumi:"mskClusterArn"`
	// The topic name within the Amazon MSK cluster.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (FirehoseDeliveryStreamMskSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamMskSourceConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationOutput() FirehoseDeliveryStreamMskSourceConfigurationOutput {
	return i.ToFirehoseDeliveryStreamMskSourceConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamMskSourceConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamMskSourceConfigurationOutput)
}

func (i FirehoseDeliveryStreamMskSourceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamMskSourceConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamMskSourceConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamMskSourceConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamMskSourceConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamMskSourceConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamMskSourceConfigurationOutput).ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamMskSourceConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamMskSourceConfigurationArgs, FirehoseDeliveryStreamMskSourceConfigurationPtr and FirehoseDeliveryStreamMskSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamMskSourceConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamMskSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamMskSourceConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationPtrOutput
	ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamMskSourceConfigurationPtrOutput
}

type firehoseDeliveryStreamMskSourceConfigurationPtrType FirehoseDeliveryStreamMskSourceConfigurationArgs

func FirehoseDeliveryStreamMskSourceConfigurationPtr(v *FirehoseDeliveryStreamMskSourceConfigurationArgs) FirehoseDeliveryStreamMskSourceConfigurationPtrInput {
	return (*firehoseDeliveryStreamMskSourceConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamMskSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamMskSourceConfigurationPtrType) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamMskSourceConfigurationPtrType) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamMskSourceConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamMskSourceConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamMskSourceConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamMskSourceConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamMskSourceConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamMskSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationOutput() FirehoseDeliveryStreamMskSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamMskSourceConfiguration) *FirehoseDeliveryStreamMskSourceConfiguration {
		return &v
	}).(FirehoseDeliveryStreamMskSourceConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamMskSourceConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamMskSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

// The authentication configuration of the Amazon MSK cluster. More details are given below.
func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) AuthenticationConfiguration() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamMskSourceConfiguration) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration {
		return v.AuthenticationConfiguration
	}).(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput)
}

// The ARN of the Amazon MSK cluster.
func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) MskClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamMskSourceConfiguration) string { return v.MskClusterArn }).(pulumi.StringOutput)
}

// The topic name within the Amazon MSK cluster.
func (o FirehoseDeliveryStreamMskSourceConfigurationOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamMskSourceConfiguration) string { return v.TopicName }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamMskSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamMskSourceConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamMskSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) Elem() FirehoseDeliveryStreamMskSourceConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamMskSourceConfiguration) FirehoseDeliveryStreamMskSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamMskSourceConfiguration
		return ret
	}).(FirehoseDeliveryStreamMskSourceConfigurationOutput)
}

// The authentication configuration of the Amazon MSK cluster. More details are given below.
func (o FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) AuthenticationConfiguration() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamMskSourceConfiguration) *FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration {
		if v == nil {
			return nil
		}
		return &v.AuthenticationConfiguration
	}).(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput)
}

// The ARN of the Amazon MSK cluster.
func (o FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) MskClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamMskSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.MskClusterArn
	}).(pulumi.StringPtrOutput)
}

// The topic name within the Amazon MSK cluster.
func (o FirehoseDeliveryStreamMskSourceConfigurationPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamMskSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TopicName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration struct {
	// The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
	Connectivity string `pulumi:"connectivity"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationInput is an input type that accepts FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs and FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationInput` via:
//
//	FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs{...}
type FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput
	ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput
}

type FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs struct {
	// The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
	Connectivity pulumi.StringInput `pulumi:"connectivity"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput {
	return i.ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput)
}

func (i FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput).ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs, FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtr and FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput
	ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput
}

type firehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrType FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs

func FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtr(v *FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrInput {
	return (*firehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrType) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrType) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration) *FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration {
		return &v
	}).(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) Connectivity() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration) string {
		return v.Connectivity
	}).(pulumi.StringOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput) ToFirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput) Elem() FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration) FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration
		return ret
	}).(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput)
}

// The type of connectivity used to access the Amazon MSK cluster. Valid values: `PUBLIC`, `PRIVATE`.
func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput) Connectivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Connectivity
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfiguration struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
	DomainArn *string `pulumi:"domainArn"`
	// The OpenSearch index name.
	IndexName string `pulumi:"indexName"`
	// The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod *string `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeDomain`, `DescribeDomains`, and `DescribeDomainConfig`.  The pattern needs to be `arn:.*`.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamOpensearchConfigurationS3Configuration `pulumi:"s3Configuration"`
	// The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
	TypeName *string `pulumi:"typeName"`
	// The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. More details are given below
	VpcConfig *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig `pulumi:"vpcConfig"`
}

// FirehoseDeliveryStreamOpensearchConfigurationInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationArgs and FirehoseDeliveryStreamOpensearchConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
	ClusterEndpoint pulumi.StringPtrInput `pulumi:"clusterEndpoint"`
	// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
	DomainArn pulumi.StringPtrInput `pulumi:"domainArn"`
	// The OpenSearch index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod pulumi.StringPtrInput `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeDomain`, `DescribeDomains`, and `DescribeDomainConfig`.  The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationInput `pulumi:"s3Configuration"`
	// The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. More details are given below
	VpcConfig FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationOutput).ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationArgs, FirehoseDeliveryStreamOpensearchConfigurationPtr and FirehoseDeliveryStreamOpensearchConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationPtrOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationPtrOutput
}

type firehoseDeliveryStreamOpensearchConfigurationPtrType FirehoseDeliveryStreamOpensearchConfigurationArgs

func FirehoseDeliveryStreamOpensearchConfigurationPtr(v *FirehoseDeliveryStreamOpensearchConfigurationArgs) FirehoseDeliveryStreamOpensearchConfigurationPtrInput {
	return (*firehoseDeliveryStreamOpensearchConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfiguration {
		return &v
	}).(FirehoseDeliveryStreamOpensearchConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfiguration]{
		OutputState: o.OutputState,
	}
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *string { return v.ClusterEndpoint }).(pulumi.StringPtrOutput)
}

// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *string { return v.DomainArn }).(pulumi.StringPtrOutput)
}

// The OpenSearch index name.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeDomain`, `DescribeDomains`, and `DescribeDomainConfig`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) S3Configuration() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) FirehoseDeliveryStreamOpensearchConfigurationS3Configuration {
		return v.S3Configuration
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput)
}

// The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationOutput) VpcConfig() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig {
		return v.VpcConfig
	}).(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) Elem() FirehoseDeliveryStreamOpensearchConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) FirehoseDeliveryStreamOpensearchConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchConfiguration
		return ret
	}).(FirehoseDeliveryStreamOpensearchConfigurationOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Conflicts with `domainArn`.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClusterEndpoint
	}).(pulumi.StringPtrOutput)
}

// The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `clusterEndpoint`.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DomainArn
	}).(pulumi.StringPtrOutput)
}

// The OpenSearch index name.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) IndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.IndexName
	}).(pulumi.StringPtrOutput)
}

// The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IndexRotationPeriod
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeDomain`, `DescribeDomains`, and `DescribeDomainConfig`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) S3Configuration() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TypeName
	}).(pulumi.StringPtrOutput)
}

// The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationPtrOutput) VpcConfig() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration) *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration
		return ret
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs{...} }
type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs{...} }
type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
//
// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs and FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput).ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs, FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtr and FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrType FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs

func FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtr(v *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) FirehoseDeliveryStreamOpensearchConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchConfigurationS3Configuration
		return ret
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationVpcConfig struct {
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
	RoleArn string `pulumi:"roleArn"`
	// A list of security group IDs to associate with Kinesis Firehose.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs to associate with Kinesis Firehose.
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// FirehoseDeliveryStreamOpensearchConfigurationVpcConfigInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs and FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationVpcConfigInput` via:
//
//	FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs{...}
type FirehoseDeliveryStreamOpensearchConfigurationVpcConfigInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput
}

type FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs struct {
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A list of security group IDs to associate with Kinesis Firehose.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnet IDs to associate with Kinesis Firehose.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationVpcConfig)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput)
}

func (i FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationVpcConfig] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationVpcConfig]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput).ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs, FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtr and FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput
	ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput
}

type firehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrType FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs

func FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtr(v *FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrInput {
	return (*firehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationVpcConfig)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrType) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationVpcConfig] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationVpcConfig]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationVpcConfig)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig {
		return &v
	}).(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationVpcConfig] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchConfigurationVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A list of security group IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subnet IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchConfigurationVpcConfig)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) ToFirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationVpcConfig] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchConfigurationVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) Elem() FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) FirehoseDeliveryStreamOpensearchConfigurationVpcConfig {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchConfigurationVpcConfig
		return ret
	}).(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchConfigurationVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfiguration struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
	CollectionEndpoint string `pulumi:"collectionEndpoint"`
	// The Serverless offering for Amazon OpenSearch Service index name.
	IndexName string `pulumi:"indexName"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration `pulumi:"s3Configuration"`
	// The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. More details are given below
	VpcConfig *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig `pulumi:"vpcConfig"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
	CollectionEndpoint pulumi.StringInput `pulumi:"collectionEndpoint"`
	// The Serverless offering for Amazon OpenSearch Service index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationInput `pulumi:"s3Configuration"`
	// The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. More details are given below
	VpcConfig FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrInput `pulumi:"vpcConfig"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput).ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs, FirehoseDeliveryStreamOpensearchserverlessConfigurationPtr and FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput
}

type firehoseDeliveryStreamOpensearchserverlessConfigurationPtrType FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs

func FirehoseDeliveryStreamOpensearchserverlessConfigurationPtr(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs) FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrInput {
	return (*firehoseDeliveryStreamOpensearchserverlessConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchserverlessConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfiguration {
		return &v
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfiguration]{
		OutputState: o.OutputState,
	}
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) CollectionEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) string { return v.CollectionEndpoint }).(pulumi.StringOutput)
}

// The Serverless offering for Amazon OpenSearch Service index name.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) S3Configuration() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration {
		return v.S3Configuration
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput)
}

// The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput) VpcConfig() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig {
		return v.VpcConfig
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) Elem() FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) FirehoseDeliveryStreamOpensearchserverlessConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchserverlessConfiguration
		return ret
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) CollectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CollectionEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Serverless offering for Amazon OpenSearch Service index name.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) IndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.IndexName
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) S3Configuration() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput)
}

// The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput) VpcConfig() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig {
		if v == nil {
			return nil
		}
		return v.VpcConfig
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration) []FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration
		return ret
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration) []FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs{...} }
type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs{...} }
type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
//
// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput).ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs, FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtr and FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrType FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs

func FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtr(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *int {
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *int {
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration
		return ret
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig struct {
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
	RoleArn string `pulumi:"roleArn"`
	// A list of security group IDs to associate with Kinesis Firehose.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs to associate with Kinesis Firehose.
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs and FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigInput` via:
//
//	FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs{...}
type FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs struct {
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A list of security group IDs to associate with Kinesis Firehose.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnet IDs to associate with Kinesis Firehose.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig)(nil)).Elem()
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput)
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput).ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrInput is an input type that accepts FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs, FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtr and FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrInput` via:
//
//	        FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput
	ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput
}

type firehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrType FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs

func FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtr(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrInput {
	return (*firehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrType)(v)
}

func (*firehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig)(nil)).Elem()
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrType) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput)
}

func (i *firehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig]{
		OutputState: i.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return o.ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig {
		return &v
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig] {
	return pulumix.Output[FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig]{
		OutputState: o.OutputState,
	}
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A list of security group IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) []string {
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) ToFirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig] {
	return pulumix.Output[*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) Elem() FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig
		return ret
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon EC2 configuration API and for creating network interfaces. Make sure role has necessary [IAM permissions](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-es-vpc)
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs to associate with Kinesis Firehose.
func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfiguration struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl string `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions *string `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns *string `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName string `pulumi:"dataTableName"`
	// The password for the username above.
	Password string `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration *int `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamRedshiftConfigurationS3Configuration `pulumi:"s3Configuration"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username string `pulumi:"username"`
}

// FirehoseDeliveryStreamRedshiftConfigurationInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationArgs and FirehoseDeliveryStreamRedshiftConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl pulumi.StringInput `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions pulumi.StringPtrInput `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns pulumi.StringPtrInput `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName pulumi.StringInput `pulumi:"dataTableName"`
	// The password for the username above.
	Password pulumi.StringInput `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationInput `pulumi:"s3Configuration"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username pulumi.StringInput `pulumi:"username"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationArgs, FirehoseDeliveryStreamRedshiftConfigurationPtr and FirehoseDeliveryStreamRedshiftConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamRedshiftConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamRedshiftConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamRedshiftConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfiguration]{
		OutputState: o.OutputState,
	}
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) S3Configuration() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) FirehoseDeliveryStreamRedshiftConfigurationS3Configuration {
		return v.S3Configuration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) FirehoseDeliveryStreamRedshiftConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamRedshiftConfiguration
		return ret
	}).(FirehoseDeliveryStreamRedshiftConfigurationOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ClusterJdbcurl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterJdbcurl
	}).(pulumi.StringPtrOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CopyOptions
	}).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DataTableColumns
	}).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) DataTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DataTableName
	}).(pulumi.StringPtrOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		if v == nil {
			return nil
		}
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) S3Configuration() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration
		return ret
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs{...} }
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs{...} }
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
//
// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs, FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtr and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int {
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration
		return ret
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs and FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs, FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtr and FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) FirehoseDeliveryStreamRedshiftConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamRedshiftConfigurationS3Configuration
		return ret
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryption struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled *bool `pulumi:"enabled"`
	// Amazon Resource Name (ARN) of the encryption key. Required when `keyType` is `CUSTOMER_MANAGED_CMK`.
	//
	// The `extendedS3Configuration` object supports the same fields from s3Configuration as well as the following:
	KeyArn *string `pulumi:"keyArn"`
	// Type of encryption key. Default is `AWS_OWNED_CMK`. Valid values are `AWS_OWNED_CMK` and `CUSTOMER_MANAGED_CMK`
	KeyType *string `pulumi:"keyType"`
}

// FirehoseDeliveryStreamServerSideEncryptionInput is an input type that accepts FirehoseDeliveryStreamServerSideEncryptionArgs and FirehoseDeliveryStreamServerSideEncryptionOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamServerSideEncryptionInput` via:
//
//	FirehoseDeliveryStreamServerSideEncryptionArgs{...}
type FirehoseDeliveryStreamServerSideEncryptionInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput
	ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput
}

type FirehoseDeliveryStreamServerSideEncryptionArgs struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Amazon Resource Name (ARN) of the encryption key. Required when `keyType` is `CUSTOMER_MANAGED_CMK`.
	//
	// The `extendedS3Configuration` object supports the same fields from s3Configuration as well as the following:
	KeyArn pulumi.StringPtrInput `pulumi:"keyArn"`
	// Type of encryption key. Default is `AWS_OWNED_CMK`. Valid values are `AWS_OWNED_CMK` and `CUSTOMER_MANAGED_CMK`
	KeyType pulumi.StringPtrInput `pulumi:"keyType"`
}

func (FirehoseDeliveryStreamServerSideEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionOutput)
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamServerSideEncryption] {
	return pulumix.Output[FirehoseDeliveryStreamServerSideEncryption]{
		OutputState: i.ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionOutput).ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamServerSideEncryptionPtrInput is an input type that accepts FirehoseDeliveryStreamServerSideEncryptionArgs, FirehoseDeliveryStreamServerSideEncryptionPtr and FirehoseDeliveryStreamServerSideEncryptionPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamServerSideEncryptionPtrInput` via:
//
//	        FirehoseDeliveryStreamServerSideEncryptionArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamServerSideEncryptionPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput
	ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput
}

type firehoseDeliveryStreamServerSideEncryptionPtrType FirehoseDeliveryStreamServerSideEncryptionArgs

func FirehoseDeliveryStreamServerSideEncryptionPtr(v *FirehoseDeliveryStreamServerSideEncryptionArgs) FirehoseDeliveryStreamServerSideEncryptionPtrInput {
	return (*firehoseDeliveryStreamServerSideEncryptionPtrType)(v)
}

func (*firehoseDeliveryStreamServerSideEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (i *firehoseDeliveryStreamServerSideEncryptionPtrType) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamServerSideEncryptionPtrType) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionPtrOutput)
}

func (i *firehoseDeliveryStreamServerSideEncryptionPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamServerSideEncryption] {
	return pulumix.Output[*FirehoseDeliveryStreamServerSideEncryption]{
		OutputState: i.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamServerSideEncryptionOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamServerSideEncryption) *FirehoseDeliveryStreamServerSideEncryption {
		return &v
	}).(FirehoseDeliveryStreamServerSideEncryptionPtrOutput)
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamServerSideEncryption] {
	return pulumix.Output[FirehoseDeliveryStreamServerSideEncryption]{
		OutputState: o.OutputState,
	}
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Amazon Resource Name (ARN) of the encryption key. Required when `keyType` is `CUSTOMER_MANAGED_CMK`.
//
// The `extendedS3Configuration` object supports the same fields from s3Configuration as well as the following:
func (o FirehoseDeliveryStreamServerSideEncryptionOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *string { return v.KeyArn }).(pulumi.StringPtrOutput)
}

// Type of encryption key. Default is `AWS_OWNED_CMK`. Valid values are `AWS_OWNED_CMK` and `CUSTOMER_MANAGED_CMK`
func (o FirehoseDeliveryStreamServerSideEncryptionOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *string { return v.KeyType }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamServerSideEncryption] {
	return pulumix.Output[*FirehoseDeliveryStreamServerSideEncryption]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) Elem() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamServerSideEncryption) FirehoseDeliveryStreamServerSideEncryption {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamServerSideEncryption
		return ret
	}).(FirehoseDeliveryStreamServerSideEncryptionOutput)
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamServerSideEncryption) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Amazon Resource Name (ARN) of the encryption key. Required when `keyType` is `CUSTOMER_MANAGED_CMK`.
//
// The `extendedS3Configuration` object supports the same fields from s3Configuration as well as the following:
func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamServerSideEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyArn
	}).(pulumi.StringPtrOutput)
}

// Type of encryption key. Default is `AWS_OWNED_CMK`. Valid values are `AWS_OWNED_CMK` and `CUSTOMER_MANAGED_CMK`
func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamServerSideEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyType
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfiguration struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout *int `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint string `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType *string `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken string `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamSplunkConfigurationS3Configuration `pulumi:"s3Configuration"`
}

// FirehoseDeliveryStreamSplunkConfigurationInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationArgs and FirehoseDeliveryStreamSplunkConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationArgs{...}
type FirehoseDeliveryStreamSplunkConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout pulumi.IntPtrInput `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint pulumi.StringInput `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType pulumi.StringPtrInput `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken pulumi.StringInput `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The S3 Configuration. See s3Configuration for more details.
	S3Configuration FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationInput `pulumi:"s3Configuration"`
}

func (FirehoseDeliveryStreamSplunkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationArgs, FirehoseDeliveryStreamSplunkConfigurationPtr and FirehoseDeliveryStreamSplunkConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamSplunkConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamSplunkConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamSplunkConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamSplunkConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfiguration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfiguration]{
		OutputState: o.OutputState,
	}
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) S3Configuration() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) FirehoseDeliveryStreamSplunkConfigurationS3Configuration {
		return v.S3Configuration
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) FirehoseDeliveryStreamSplunkConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamSplunkConfiguration
		return ret
	}).(FirehoseDeliveryStreamSplunkConfigurationOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.HecAcknowledgmentTimeout
	}).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HecEndpoint
	}).(pulumi.StringPtrOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HecEndpointType
	}).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HecToken
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RetryDuration
	}).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// The S3 Configuration. See s3Configuration for more details.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) S3Configuration() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationS3Configuration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs{...}
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration
		return ret
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs{...}
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs{...} }
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor] {
	return pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs{...}
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	//
	// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs{...} }
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
//
// > **NOTE:** Parameters with default values, including `NumberOfRetries`(default: 3), `RoleArn`(default: firehose role ARN), `BufferSizeInMBs`(default: 3), and `BufferIntervalInSeconds`(default: 60), are not stored in state. To prevent perpetual differences, it is therefore recommended to only include parameters with non-default values.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter] {
	return pulumix.Output[[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs and FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs{...}
type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs, FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtr and FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrInput` via:
//
//	        FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput)
}

func (i *firehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3Configuration]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *FirehoseDeliveryStreamSplunkConfigurationS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput)
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3Configuration] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3Configuration] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3Configuration]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) FirehoseDeliveryStreamSplunkConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamSplunkConfigurationS3Configuration
		return ret
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *int {
		if v == nil {
			return nil
		}
		return v.BufferingSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, & `HADOOP_SNAPPY`.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
//	FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
//	        FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (i *firehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: i.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions] {
	return pulumix.Output[*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions
		return ret
	}).(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type StreamStreamModeDetails struct {
	// Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
	StreamMode string `pulumi:"streamMode"`
}

// StreamStreamModeDetailsInput is an input type that accepts StreamStreamModeDetailsArgs and StreamStreamModeDetailsOutput values.
// You can construct a concrete instance of `StreamStreamModeDetailsInput` via:
//
//	StreamStreamModeDetailsArgs{...}
type StreamStreamModeDetailsInput interface {
	pulumi.Input

	ToStreamStreamModeDetailsOutput() StreamStreamModeDetailsOutput
	ToStreamStreamModeDetailsOutputWithContext(context.Context) StreamStreamModeDetailsOutput
}

type StreamStreamModeDetailsArgs struct {
	// Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
	StreamMode pulumi.StringInput `pulumi:"streamMode"`
}

func (StreamStreamModeDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamStreamModeDetails)(nil)).Elem()
}

func (i StreamStreamModeDetailsArgs) ToStreamStreamModeDetailsOutput() StreamStreamModeDetailsOutput {
	return i.ToStreamStreamModeDetailsOutputWithContext(context.Background())
}

func (i StreamStreamModeDetailsArgs) ToStreamStreamModeDetailsOutputWithContext(ctx context.Context) StreamStreamModeDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamStreamModeDetailsOutput)
}

func (i StreamStreamModeDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[StreamStreamModeDetails] {
	return pulumix.Output[StreamStreamModeDetails]{
		OutputState: i.ToStreamStreamModeDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i StreamStreamModeDetailsArgs) ToStreamStreamModeDetailsPtrOutput() StreamStreamModeDetailsPtrOutput {
	return i.ToStreamStreamModeDetailsPtrOutputWithContext(context.Background())
}

func (i StreamStreamModeDetailsArgs) ToStreamStreamModeDetailsPtrOutputWithContext(ctx context.Context) StreamStreamModeDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamStreamModeDetailsOutput).ToStreamStreamModeDetailsPtrOutputWithContext(ctx)
}

// StreamStreamModeDetailsPtrInput is an input type that accepts StreamStreamModeDetailsArgs, StreamStreamModeDetailsPtr and StreamStreamModeDetailsPtrOutput values.
// You can construct a concrete instance of `StreamStreamModeDetailsPtrInput` via:
//
//	        StreamStreamModeDetailsArgs{...}
//
//	or:
//
//	        nil
type StreamStreamModeDetailsPtrInput interface {
	pulumi.Input

	ToStreamStreamModeDetailsPtrOutput() StreamStreamModeDetailsPtrOutput
	ToStreamStreamModeDetailsPtrOutputWithContext(context.Context) StreamStreamModeDetailsPtrOutput
}

type streamStreamModeDetailsPtrType StreamStreamModeDetailsArgs

func StreamStreamModeDetailsPtr(v *StreamStreamModeDetailsArgs) StreamStreamModeDetailsPtrInput {
	return (*streamStreamModeDetailsPtrType)(v)
}

func (*streamStreamModeDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamStreamModeDetails)(nil)).Elem()
}

func (i *streamStreamModeDetailsPtrType) ToStreamStreamModeDetailsPtrOutput() StreamStreamModeDetailsPtrOutput {
	return i.ToStreamStreamModeDetailsPtrOutputWithContext(context.Background())
}

func (i *streamStreamModeDetailsPtrType) ToStreamStreamModeDetailsPtrOutputWithContext(ctx context.Context) StreamStreamModeDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamStreamModeDetailsPtrOutput)
}

func (i *streamStreamModeDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*StreamStreamModeDetails] {
	return pulumix.Output[*StreamStreamModeDetails]{
		OutputState: i.ToStreamStreamModeDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

type StreamStreamModeDetailsOutput struct{ *pulumi.OutputState }

func (StreamStreamModeDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamStreamModeDetails)(nil)).Elem()
}

func (o StreamStreamModeDetailsOutput) ToStreamStreamModeDetailsOutput() StreamStreamModeDetailsOutput {
	return o
}

func (o StreamStreamModeDetailsOutput) ToStreamStreamModeDetailsOutputWithContext(ctx context.Context) StreamStreamModeDetailsOutput {
	return o
}

func (o StreamStreamModeDetailsOutput) ToStreamStreamModeDetailsPtrOutput() StreamStreamModeDetailsPtrOutput {
	return o.ToStreamStreamModeDetailsPtrOutputWithContext(context.Background())
}

func (o StreamStreamModeDetailsOutput) ToStreamStreamModeDetailsPtrOutputWithContext(ctx context.Context) StreamStreamModeDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamStreamModeDetails) *StreamStreamModeDetails {
		return &v
	}).(StreamStreamModeDetailsPtrOutput)
}

func (o StreamStreamModeDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[StreamStreamModeDetails] {
	return pulumix.Output[StreamStreamModeDetails]{
		OutputState: o.OutputState,
	}
}

// Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
func (o StreamStreamModeDetailsOutput) StreamMode() pulumi.StringOutput {
	return o.ApplyT(func(v StreamStreamModeDetails) string { return v.StreamMode }).(pulumi.StringOutput)
}

type StreamStreamModeDetailsPtrOutput struct{ *pulumi.OutputState }

func (StreamStreamModeDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamStreamModeDetails)(nil)).Elem()
}

func (o StreamStreamModeDetailsPtrOutput) ToStreamStreamModeDetailsPtrOutput() StreamStreamModeDetailsPtrOutput {
	return o
}

func (o StreamStreamModeDetailsPtrOutput) ToStreamStreamModeDetailsPtrOutputWithContext(ctx context.Context) StreamStreamModeDetailsPtrOutput {
	return o
}

func (o StreamStreamModeDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*StreamStreamModeDetails] {
	return pulumix.Output[*StreamStreamModeDetails]{
		OutputState: o.OutputState,
	}
}

func (o StreamStreamModeDetailsPtrOutput) Elem() StreamStreamModeDetailsOutput {
	return o.ApplyT(func(v *StreamStreamModeDetails) StreamStreamModeDetails {
		if v != nil {
			return *v
		}
		var ret StreamStreamModeDetails
		return ret
	}).(StreamStreamModeDetailsOutput)
}

// Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`.
func (o StreamStreamModeDetailsPtrOutput) StreamMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamStreamModeDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StreamMode
	}).(pulumi.StringPtrOutput)
}

type GetStreamStreamModeDetail struct {
	// Capacity mode of the stream. Either `ON_DEMAND` or `PROVISIONED`.
	StreamMode string `pulumi:"streamMode"`
}

// GetStreamStreamModeDetailInput is an input type that accepts GetStreamStreamModeDetailArgs and GetStreamStreamModeDetailOutput values.
// You can construct a concrete instance of `GetStreamStreamModeDetailInput` via:
//
//	GetStreamStreamModeDetailArgs{...}
type GetStreamStreamModeDetailInput interface {
	pulumi.Input

	ToGetStreamStreamModeDetailOutput() GetStreamStreamModeDetailOutput
	ToGetStreamStreamModeDetailOutputWithContext(context.Context) GetStreamStreamModeDetailOutput
}

type GetStreamStreamModeDetailArgs struct {
	// Capacity mode of the stream. Either `ON_DEMAND` or `PROVISIONED`.
	StreamMode pulumi.StringInput `pulumi:"streamMode"`
}

func (GetStreamStreamModeDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamStreamModeDetail)(nil)).Elem()
}

func (i GetStreamStreamModeDetailArgs) ToGetStreamStreamModeDetailOutput() GetStreamStreamModeDetailOutput {
	return i.ToGetStreamStreamModeDetailOutputWithContext(context.Background())
}

func (i GetStreamStreamModeDetailArgs) ToGetStreamStreamModeDetailOutputWithContext(ctx context.Context) GetStreamStreamModeDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamStreamModeDetailOutput)
}

func (i GetStreamStreamModeDetailArgs) ToOutput(ctx context.Context) pulumix.Output[GetStreamStreamModeDetail] {
	return pulumix.Output[GetStreamStreamModeDetail]{
		OutputState: i.ToGetStreamStreamModeDetailOutputWithContext(ctx).OutputState,
	}
}

// GetStreamStreamModeDetailArrayInput is an input type that accepts GetStreamStreamModeDetailArray and GetStreamStreamModeDetailArrayOutput values.
// You can construct a concrete instance of `GetStreamStreamModeDetailArrayInput` via:
//
//	GetStreamStreamModeDetailArray{ GetStreamStreamModeDetailArgs{...} }
type GetStreamStreamModeDetailArrayInput interface {
	pulumi.Input

	ToGetStreamStreamModeDetailArrayOutput() GetStreamStreamModeDetailArrayOutput
	ToGetStreamStreamModeDetailArrayOutputWithContext(context.Context) GetStreamStreamModeDetailArrayOutput
}

type GetStreamStreamModeDetailArray []GetStreamStreamModeDetailInput

func (GetStreamStreamModeDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamStreamModeDetail)(nil)).Elem()
}

func (i GetStreamStreamModeDetailArray) ToGetStreamStreamModeDetailArrayOutput() GetStreamStreamModeDetailArrayOutput {
	return i.ToGetStreamStreamModeDetailArrayOutputWithContext(context.Background())
}

func (i GetStreamStreamModeDetailArray) ToGetStreamStreamModeDetailArrayOutputWithContext(ctx context.Context) GetStreamStreamModeDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamStreamModeDetailArrayOutput)
}

func (i GetStreamStreamModeDetailArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStreamStreamModeDetail] {
	return pulumix.Output[[]GetStreamStreamModeDetail]{
		OutputState: i.ToGetStreamStreamModeDetailArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStreamStreamModeDetailOutput struct{ *pulumi.OutputState }

func (GetStreamStreamModeDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamStreamModeDetail)(nil)).Elem()
}

func (o GetStreamStreamModeDetailOutput) ToGetStreamStreamModeDetailOutput() GetStreamStreamModeDetailOutput {
	return o
}

func (o GetStreamStreamModeDetailOutput) ToGetStreamStreamModeDetailOutputWithContext(ctx context.Context) GetStreamStreamModeDetailOutput {
	return o
}

func (o GetStreamStreamModeDetailOutput) ToOutput(ctx context.Context) pulumix.Output[GetStreamStreamModeDetail] {
	return pulumix.Output[GetStreamStreamModeDetail]{
		OutputState: o.OutputState,
	}
}

// Capacity mode of the stream. Either `ON_DEMAND` or `PROVISIONED`.
func (o GetStreamStreamModeDetailOutput) StreamMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamStreamModeDetail) string { return v.StreamMode }).(pulumi.StringOutput)
}

type GetStreamStreamModeDetailArrayOutput struct{ *pulumi.OutputState }

func (GetStreamStreamModeDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamStreamModeDetail)(nil)).Elem()
}

func (o GetStreamStreamModeDetailArrayOutput) ToGetStreamStreamModeDetailArrayOutput() GetStreamStreamModeDetailArrayOutput {
	return o
}

func (o GetStreamStreamModeDetailArrayOutput) ToGetStreamStreamModeDetailArrayOutputWithContext(ctx context.Context) GetStreamStreamModeDetailArrayOutput {
	return o
}

func (o GetStreamStreamModeDetailArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStreamStreamModeDetail] {
	return pulumix.Output[[]GetStreamStreamModeDetail]{
		OutputState: o.OutputState,
	}
}

func (o GetStreamStreamModeDetailArrayOutput) Index(i pulumi.IntInput) GetStreamStreamModeDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamStreamModeDetail {
		return vs[0].([]GetStreamStreamModeDetail)[vs[1].(int)]
	}).(GetStreamStreamModeDetailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptionsInput)(nil)).Elem(), AnalyticsApplicationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), AnalyticsApplicationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsInput)(nil)).Elem(), AnalyticsApplicationInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsPtrInput)(nil)).Elem(), AnalyticsApplicationInputsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehoseInput)(nil)).Elem(), AnalyticsApplicationInputsKinesisFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehosePtrInput)(nil)).Elem(), AnalyticsApplicationInputsKinesisFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsKinesisStreamInput)(nil)).Elem(), AnalyticsApplicationInputsKinesisStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsKinesisStreamPtrInput)(nil)).Elem(), AnalyticsApplicationInputsKinesisStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsParallelismInput)(nil)).Elem(), AnalyticsApplicationInputsParallelismArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsParallelismPtrInput)(nil)).Elem(), AnalyticsApplicationInputsParallelismArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationInput)(nil)).Elem(), AnalyticsApplicationInputsProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationPtrInput)(nil)).Elem(), AnalyticsApplicationInputsProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambdaInput)(nil)).Elem(), AnalyticsApplicationInputsProcessingConfigurationLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambdaPtrInput)(nil)).Elem(), AnalyticsApplicationInputsProcessingConfigurationLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaPtrInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumnInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumnArrayInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatPtrInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput)(nil)).Elem(), AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfigurationInput)(nil)).Elem(), AnalyticsApplicationInputsStartingPositionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfigurationArrayInput)(nil)).Elem(), AnalyticsApplicationInputsStartingPositionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputTypeInput)(nil)).Elem(), AnalyticsApplicationOutputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputTypeArrayInput)(nil)).Elem(), AnalyticsApplicationOutputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehoseInput)(nil)).Elem(), AnalyticsApplicationOutputKinesisFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehosePtrInput)(nil)).Elem(), AnalyticsApplicationOutputKinesisFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputKinesisStreamInput)(nil)).Elem(), AnalyticsApplicationOutputKinesisStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputKinesisStreamPtrInput)(nil)).Elem(), AnalyticsApplicationOutputKinesisStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputLambdaInput)(nil)).Elem(), AnalyticsApplicationOutputLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputLambdaPtrInput)(nil)).Elem(), AnalyticsApplicationOutputLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationOutputSchemaInput)(nil)).Elem(), AnalyticsApplicationOutputSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesPtrInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3Input)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3PtrInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaPtrInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput)(nil)).Elem(), AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrInput)(nil)).Elem(), FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamKinesisSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamKinesisSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamMskSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamMskSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationVpcConfigInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchConfigurationVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrInput)(nil)).Elem(), FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryptionInput)(nil)).Elem(), FirehoseDeliveryStreamServerSideEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryptionPtrInput)(nil)).Elem(), FirehoseDeliveryStreamServerSideEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrInput)(nil)).Elem(), FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamStreamModeDetailsInput)(nil)).Elem(), StreamStreamModeDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamStreamModeDetailsPtrInput)(nil)).Elem(), StreamStreamModeDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamStreamModeDetailInput)(nil)).Elem(), GetStreamStreamModeDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamStreamModeDetailArrayInput)(nil)).Elem(), GetStreamStreamModeDetailArray{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationLambdaPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputTypeOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesS3Output{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesS3PtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationRequestConfigurationCommonAttributeArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamHttpEndpointConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamMskSourceConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamMskSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamMskSourceConfigurationAuthenticationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchConfigurationVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(StreamStreamModeDetailsOutput{})
	pulumi.RegisterOutputType(StreamStreamModeDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetStreamStreamModeDetailOutput{})
	pulumi.RegisterOutputType(GetStreamStreamModeDetailArrayOutput{})
}
