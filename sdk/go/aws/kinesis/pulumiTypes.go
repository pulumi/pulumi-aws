// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AnalyticsApplicationCloudwatchLoggingOptions struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn string `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationCloudwatchLoggingOptionsInput is an input type that accepts AnalyticsApplicationCloudwatchLoggingOptionsArgs and AnalyticsApplicationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `AnalyticsApplicationCloudwatchLoggingOptionsInput` via:
//
// 		 AnalyticsApplicationCloudwatchLoggingOptionsArgs{...}
//
type AnalyticsApplicationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn pulumi.StringInput `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput).ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// AnalyticsApplicationCloudwatchLoggingOptionsPtrInput is an input type that accepts AnalyticsApplicationCloudwatchLoggingOptionsArgs, AnalyticsApplicationCloudwatchLoggingOptionsPtr and AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 AnalyticsApplicationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
}

type analyticsApplicationCloudwatchLoggingOptionsPtrType AnalyticsApplicationCloudwatchLoggingOptionsArgs

func AnalyticsApplicationCloudwatchLoggingOptionsPtr(v *AnalyticsApplicationCloudwatchLoggingOptionsArgs) AnalyticsApplicationCloudwatchLoggingOptionsPtrInput {
	return (*analyticsApplicationCloudwatchLoggingOptionsPtrType)(v)
}

func (*analyticsApplicationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) *AnalyticsApplicationCloudwatchLoggingOptions {
		return &v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Elem() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationCloudwatchLoggingOptions) AnalyticsApplicationCloudwatchLoggingOptions {
		return *v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputs struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationInputsKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationInputsKinesisStream `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix string `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism *AnalyticsApplicationInputsParallelism `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration *AnalyticsApplicationInputsProcessingConfiguration `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsSchema                          `pulumi:"schema"`
	StartingPositionConfigurations []AnalyticsApplicationInputsStartingPositionConfiguration `pulumi:"startingPositionConfigurations"`
	StreamNames                    []string                                                  `pulumi:"streamNames"`
}

// AnalyticsApplicationInputsInput is an input type that accepts AnalyticsApplicationInputsArgs and AnalyticsApplicationInputsOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsInput` via:
//
// 		 AnalyticsApplicationInputsArgs{...}
//
type AnalyticsApplicationInputsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput
	ToAnalyticsApplicationInputsOutputWithContext(context.Context) AnalyticsApplicationInputsOutput
}

type AnalyticsApplicationInputsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationInputsKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationInputsKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism AnalyticsApplicationInputsParallelismPtrInput `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration AnalyticsApplicationInputsProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsSchemaInput                             `pulumi:"schema"`
	StartingPositionConfigurations AnalyticsApplicationInputsStartingPositionConfigurationArrayInput `pulumi:"startingPositionConfigurations"`
	StreamNames                    pulumi.StringArrayInput                                           `pulumi:"streamNames"`
}

func (AnalyticsApplicationInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput {
	return i.ToAnalyticsApplicationInputsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsOutput)
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return i.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsOutput).ToAnalyticsApplicationInputsPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsPtrInput is an input type that accepts AnalyticsApplicationInputsArgs, AnalyticsApplicationInputsPtr and AnalyticsApplicationInputsPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsPtrInput` via:
//
// 		 AnalyticsApplicationInputsArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput
	ToAnalyticsApplicationInputsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsPtrOutput
}

type analyticsApplicationInputsPtrType AnalyticsApplicationInputsArgs

func AnalyticsApplicationInputsPtr(v *AnalyticsApplicationInputsArgs) AnalyticsApplicationInputsPtrInput {
	return (*analyticsApplicationInputsPtrType)(v)
}

func (*analyticsApplicationInputsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputs)(nil)).Elem()
}

func (i *analyticsApplicationInputsPtrType) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return i.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsPtrType) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsPtrOutput)
}

type AnalyticsApplicationInputsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput {
	return o
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsOutput {
	return o
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return o.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputs {
		return &v
	}).(AnalyticsApplicationInputsPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisStream { return v.KinesisStream }).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsOutput) Parallelism() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsParallelism { return v.Parallelism }).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsOutput) Schema() AnalyticsApplicationInputsSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) AnalyticsApplicationInputsSchema { return v.Schema }).(AnalyticsApplicationInputsSchemaOutput)
}

func (o AnalyticsApplicationInputsOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []AnalyticsApplicationInputsStartingPositionConfiguration {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

func (o AnalyticsApplicationInputsOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsPtrOutput) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsPtrOutput) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsPtrOutput) Elem() AnalyticsApplicationInputsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) AnalyticsApplicationInputs { return *v }).(AnalyticsApplicationInputsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsPtrOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsPtrOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisStream { return v.KinesisStream }).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsPtrOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsPtrOutput) Parallelism() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsParallelism { return v.Parallelism }).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsPtrOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsPtrOutput) Schema() AnalyticsApplicationInputsSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) AnalyticsApplicationInputsSchema { return v.Schema }).(AnalyticsApplicationInputsSchemaOutput)
}

func (o AnalyticsApplicationInputsPtrOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []AnalyticsApplicationInputsStartingPositionConfiguration {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

func (o AnalyticsApplicationInputsPtrOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationInputsKinesisFirehoseInput is an input type that accepts AnalyticsApplicationInputsKinesisFirehoseArgs and AnalyticsApplicationInputsKinesisFirehoseOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisFirehoseInput` via:
//
// 		 AnalyticsApplicationInputsKinesisFirehoseArgs{...}
//
type AnalyticsApplicationInputsKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput
	ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput
}

type AnalyticsApplicationInputsKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseOutput)
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseOutput).ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsKinesisFirehosePtrInput is an input type that accepts AnalyticsApplicationInputsKinesisFirehoseArgs, AnalyticsApplicationInputsKinesisFirehosePtr and AnalyticsApplicationInputsKinesisFirehosePtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisFirehosePtrInput` via:
//
// 		 AnalyticsApplicationInputsKinesisFirehoseArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput
	ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput
}

type analyticsApplicationInputsKinesisFirehosePtrType AnalyticsApplicationInputsKinesisFirehoseArgs

func AnalyticsApplicationInputsKinesisFirehosePtr(v *AnalyticsApplicationInputsKinesisFirehoseArgs) AnalyticsApplicationInputsKinesisFirehosePtrInput {
	return (*analyticsApplicationInputsKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationInputsKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisFirehosePtrType) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisFirehosePtrType) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

type AnalyticsApplicationInputsKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) *AnalyticsApplicationInputsKinesisFirehose {
		return &v
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) Elem() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisFirehose) AnalyticsApplicationInputsKinesisFirehose {
		return *v
	}).(AnalyticsApplicationInputsKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationInputsKinesisStreamInput is an input type that accepts AnalyticsApplicationInputsKinesisStreamArgs and AnalyticsApplicationInputsKinesisStreamOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisStreamInput` via:
//
// 		 AnalyticsApplicationInputsKinesisStreamArgs{...}
//
type AnalyticsApplicationInputsKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput
	ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamOutput
}

type AnalyticsApplicationInputsKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamOutput)
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamOutput).ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsKinesisStreamPtrInput is an input type that accepts AnalyticsApplicationInputsKinesisStreamArgs, AnalyticsApplicationInputsKinesisStreamPtr and AnalyticsApplicationInputsKinesisStreamPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsKinesisStreamPtrInput` via:
//
// 		 AnalyticsApplicationInputsKinesisStreamArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput
	ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput
}

type analyticsApplicationInputsKinesisStreamPtrType AnalyticsApplicationInputsKinesisStreamArgs

func AnalyticsApplicationInputsKinesisStreamPtr(v *AnalyticsApplicationInputsKinesisStreamArgs) AnalyticsApplicationInputsKinesisStreamPtrInput {
	return (*analyticsApplicationInputsKinesisStreamPtrType)(v)
}

func (*analyticsApplicationInputsKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisStreamPtrType) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisStreamPtrType) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

type AnalyticsApplicationInputsKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) *AnalyticsApplicationInputsKinesisStream {
		return &v
	}).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) Elem() AnalyticsApplicationInputsKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisStream) AnalyticsApplicationInputsKinesisStream { return *v }).(AnalyticsApplicationInputsKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsParallelism struct {
	// The Count of streams.
	Count int `pulumi:"count"`
}

// AnalyticsApplicationInputsParallelismInput is an input type that accepts AnalyticsApplicationInputsParallelismArgs and AnalyticsApplicationInputsParallelismOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsParallelismInput` via:
//
// 		 AnalyticsApplicationInputsParallelismArgs{...}
//
type AnalyticsApplicationInputsParallelismInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput
	ToAnalyticsApplicationInputsParallelismOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismOutput
}

type AnalyticsApplicationInputsParallelismArgs struct {
	// The Count of streams.
	Count pulumi.IntInput `pulumi:"count"`
}

func (AnalyticsApplicationInputsParallelismArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput {
	return i.ToAnalyticsApplicationInputsParallelismOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismOutput)
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismOutput).ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsParallelismPtrInput is an input type that accepts AnalyticsApplicationInputsParallelismArgs, AnalyticsApplicationInputsParallelismPtr and AnalyticsApplicationInputsParallelismPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsParallelismPtrInput` via:
//
// 		 AnalyticsApplicationInputsParallelismArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsParallelismPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput
	ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismPtrOutput
}

type analyticsApplicationInputsParallelismPtrType AnalyticsApplicationInputsParallelismArgs

func AnalyticsApplicationInputsParallelismPtr(v *AnalyticsApplicationInputsParallelismArgs) AnalyticsApplicationInputsParallelismPtrInput {
	return (*analyticsApplicationInputsParallelismPtrType)(v)
}

func (*analyticsApplicationInputsParallelismPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (i *analyticsApplicationInputsParallelismPtrType) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsParallelismPtrType) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismPtrOutput)
}

type AnalyticsApplicationInputsParallelismOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelism) *AnalyticsApplicationInputsParallelism {
		return &v
	}).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelism) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsParallelismPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) Elem() AnalyticsApplicationInputsParallelismOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsParallelism) AnalyticsApplicationInputsParallelism { return *v }).(AnalyticsApplicationInputsParallelismOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismPtrOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelism) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsProcessingConfiguration struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambda `pulumi:"lambda"`
}

// AnalyticsApplicationInputsProcessingConfigurationInput is an input type that accepts AnalyticsApplicationInputsProcessingConfigurationArgs and AnalyticsApplicationInputsProcessingConfigurationOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsProcessingConfigurationInput` via:
//
// 		 AnalyticsApplicationInputsProcessingConfigurationArgs{...}
//
type AnalyticsApplicationInputsProcessingConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput
	ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput
}

type AnalyticsApplicationInputsProcessingConfigurationArgs struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambdaInput `pulumi:"lambda"`
}

func (AnalyticsApplicationInputsProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationOutput)
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationOutput).ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsProcessingConfigurationPtrInput is an input type that accepts AnalyticsApplicationInputsProcessingConfigurationArgs, AnalyticsApplicationInputsProcessingConfigurationPtr and AnalyticsApplicationInputsProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsProcessingConfigurationPtrInput` via:
//
// 		 AnalyticsApplicationInputsProcessingConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput
	ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput
}

type analyticsApplicationInputsProcessingConfigurationPtrType AnalyticsApplicationInputsProcessingConfigurationArgs

func AnalyticsApplicationInputsProcessingConfigurationPtr(v *AnalyticsApplicationInputsProcessingConfigurationArgs) AnalyticsApplicationInputsProcessingConfigurationPtrInput {
	return (*analyticsApplicationInputsProcessingConfigurationPtrType)(v)
}

func (*analyticsApplicationInputsProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (i *analyticsApplicationInputsProcessingConfigurationPtrType) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsProcessingConfigurationPtrType) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfiguration) *AnalyticsApplicationInputsProcessingConfiguration {
		return &v
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfigurationLambda {
		return v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) Elem() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfiguration {
		return *v
	}).(AnalyticsApplicationInputsProcessingConfigurationOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfigurationLambda {
		return v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationInputsProcessingConfigurationLambdaInput is an input type that accepts AnalyticsApplicationInputsProcessingConfigurationLambdaArgs and AnalyticsApplicationInputsProcessingConfigurationLambdaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsProcessingConfigurationLambdaInput` via:
//
// 		 AnalyticsApplicationInputsProcessingConfigurationLambdaArgs{...}
//
type AnalyticsApplicationInputsProcessingConfigurationLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput
	ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationInputsSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormat `pulumi:"recordFormat"`
}

// AnalyticsApplicationInputsSchemaInput is an input type that accepts AnalyticsApplicationInputsSchemaArgs and AnalyticsApplicationInputsSchemaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaInput` via:
//
// 		 AnalyticsApplicationInputsSchemaArgs{...}
//
type AnalyticsApplicationInputsSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput
	ToAnalyticsApplicationInputsSchemaOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaOutput
}

type AnalyticsApplicationInputsSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationInputsSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationInputsSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput {
	return i.ToAnalyticsApplicationInputsSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaOutput)
}

type AnalyticsApplicationInputsSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationInputsSchemaOutput) RecordColumns() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) []AnalyticsApplicationInputsSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationInputsSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationInputsSchemaOutput) RecordFormat() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) AnalyticsApplicationInputsSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationInputsSchemaRecordFormatOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

// AnalyticsApplicationInputsSchemaRecordColumnInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordColumnArgs and AnalyticsApplicationInputsSchemaRecordColumnOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordColumnInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordColumnArgs{...}
//
type AnalyticsApplicationInputsSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationInputsSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

// AnalyticsApplicationInputsSchemaRecordColumnArrayInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordColumnArray and AnalyticsApplicationInputsSchemaRecordColumnArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordColumnArrayInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordColumnArray{ AnalyticsApplicationInputsSchemaRecordColumnArgs{...} }
//
type AnalyticsApplicationInputsSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArray []AnalyticsApplicationInputsSchemaRecordColumnInput

func (AnalyticsApplicationInputsSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationInputsSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

// AnalyticsApplicationInputsSchemaRecordFormatInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatArgs and AnalyticsApplicationInputsSchemaRecordFormatOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordFormatArgs{...}
//
type AnalyticsApplicationInputsSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormat) *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormat) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs{...}
//
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs, AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtr and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs{...}
//
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs, AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtr and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs{...}
//
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

// AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput is an input type that accepts AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs, AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtr and AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput` via:
//
// 		 AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStartingPositionConfiguration struct {
	StartingPosition *string `pulumi:"startingPosition"`
}

// AnalyticsApplicationInputsStartingPositionConfigurationInput is an input type that accepts AnalyticsApplicationInputsStartingPositionConfigurationArgs and AnalyticsApplicationInputsStartingPositionConfigurationOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsStartingPositionConfigurationInput` via:
//
// 		 AnalyticsApplicationInputsStartingPositionConfigurationArgs{...}
//
type AnalyticsApplicationInputsStartingPositionConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgs struct {
	StartingPosition pulumi.StringPtrInput `pulumi:"startingPosition"`
}

func (AnalyticsApplicationInputsStartingPositionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationOutput)
}

// AnalyticsApplicationInputsStartingPositionConfigurationArrayInput is an input type that accepts AnalyticsApplicationInputsStartingPositionConfigurationArray and AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationInputsStartingPositionConfigurationArrayInput` via:
//
// 		 AnalyticsApplicationInputsStartingPositionConfigurationArray{ AnalyticsApplicationInputsStartingPositionConfigurationArgs{...} }
//
type AnalyticsApplicationInputsStartingPositionConfigurationArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArray []AnalyticsApplicationInputsStartingPositionConfigurationInput

func (AnalyticsApplicationInputsStartingPositionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) StartingPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStartingPositionConfiguration) *string { return v.StartingPosition }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsStartingPositionConfiguration {
		return vs[0].([]AnalyticsApplicationInputsStartingPositionConfiguration)[vs[1].(int)]
	}).(AnalyticsApplicationInputsStartingPositionConfigurationOutput)
}

type AnalyticsApplicationOutput struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationOutputKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationOutputKinesisStream `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda *AnalyticsApplicationOutputLambda `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name string `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchema `pulumi:"schema"`
}

// AnalyticsApplicationOutputInput is an input type that accepts AnalyticsApplicationOutputArgs and AnalyticsApplicationOutputOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputInput` via:
//
// 		 AnalyticsApplicationOutputArgs{...}
//
type AnalyticsApplicationOutputInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput
	ToAnalyticsApplicationOutputOutputWithContext(context.Context) AnalyticsApplicationOutputOutput
}

type AnalyticsApplicationOutputArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationOutputKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationOutputKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda AnalyticsApplicationOutputLambdaPtrInput `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name pulumi.StringInput `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchemaInput `pulumi:"schema"`
}

func (AnalyticsApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutput)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArgs) ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput {
	return i.ToAnalyticsApplicationOutputOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArgs) ToAnalyticsApplicationOutputOutputWithContext(ctx context.Context) AnalyticsApplicationOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputOutput)
}

// AnalyticsApplicationOutputArrayInput is an input type that accepts AnalyticsApplicationOutputArray and AnalyticsApplicationOutputArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputArrayInput` via:
//
// 		 AnalyticsApplicationOutputArray{ AnalyticsApplicationOutputArgs{...} }
//
type AnalyticsApplicationOutputArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput
	ToAnalyticsApplicationOutputArrayOutputWithContext(context.Context) AnalyticsApplicationOutputArrayOutput
}

type AnalyticsApplicationOutputArray []AnalyticsApplicationOutputInput

func (AnalyticsApplicationOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutput)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArray) ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput {
	return i.ToAnalyticsApplicationOutputArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArray) ToAnalyticsApplicationOutputArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputArrayOutput)
}

type AnalyticsApplicationOutputOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutput)(nil)).Elem()
}

func (o AnalyticsApplicationOutputOutput) ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput {
	return o
}

func (o AnalyticsApplicationOutputOutput) ToAnalyticsApplicationOutputOutputWithContext(ctx context.Context) AnalyticsApplicationOutputOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationOutputOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationOutputOutput) KinesisFirehose() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) *AnalyticsApplicationOutputKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationOutputOutput) KinesisStream() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) *AnalyticsApplicationOutputKinesisStream { return v.KinesisStream }).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

// The Lambda function destination. See Lambda below for more details.
func (o AnalyticsApplicationOutputOutput) Lambda() AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) *AnalyticsApplicationOutputLambda { return v.Lambda }).(AnalyticsApplicationOutputLambdaPtrOutput)
}

// The Name of the in-application stream.
func (o AnalyticsApplicationOutputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) string { return v.Name }).(pulumi.StringOutput)
}

// The Schema format of the data written to the destination. See Destination Schema below for more details.
func (o AnalyticsApplicationOutputOutput) Schema() AnalyticsApplicationOutputSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) AnalyticsApplicationOutputSchema { return v.Schema }).(AnalyticsApplicationOutputSchemaOutput)
}

type AnalyticsApplicationOutputArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutput)(nil)).Elem()
}

func (o AnalyticsApplicationOutputArrayOutput) ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArrayOutput) ToAnalyticsApplicationOutputArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationOutput {
		return vs[0].([]AnalyticsApplicationOutput)[vs[1].(int)]
	}).(AnalyticsApplicationOutputOutput)
}

type AnalyticsApplicationOutputKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationOutputKinesisFirehoseInput is an input type that accepts AnalyticsApplicationOutputKinesisFirehoseArgs and AnalyticsApplicationOutputKinesisFirehoseOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisFirehoseInput` via:
//
// 		 AnalyticsApplicationOutputKinesisFirehoseArgs{...}
//
type AnalyticsApplicationOutputKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput
	ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput
}

type AnalyticsApplicationOutputKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseOutput)
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseOutput).ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx)
}

// AnalyticsApplicationOutputKinesisFirehosePtrInput is an input type that accepts AnalyticsApplicationOutputKinesisFirehoseArgs, AnalyticsApplicationOutputKinesisFirehosePtr and AnalyticsApplicationOutputKinesisFirehosePtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisFirehosePtrInput` via:
//
// 		 AnalyticsApplicationOutputKinesisFirehoseArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationOutputKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput
	ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput
}

type analyticsApplicationOutputKinesisFirehosePtrType AnalyticsApplicationOutputKinesisFirehoseArgs

func AnalyticsApplicationOutputKinesisFirehosePtr(v *AnalyticsApplicationOutputKinesisFirehoseArgs) AnalyticsApplicationOutputKinesisFirehosePtrInput {
	return (*analyticsApplicationOutputKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationOutputKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisFirehosePtrType) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisFirehosePtrType) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

type AnalyticsApplicationOutputKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) *AnalyticsApplicationOutputKinesisFirehose {
		return &v
	}).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) Elem() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisFirehose) AnalyticsApplicationOutputKinesisFirehose {
		return *v
	}).(AnalyticsApplicationOutputKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationOutputKinesisStreamInput is an input type that accepts AnalyticsApplicationOutputKinesisStreamArgs and AnalyticsApplicationOutputKinesisStreamOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisStreamInput` via:
//
// 		 AnalyticsApplicationOutputKinesisStreamArgs{...}
//
type AnalyticsApplicationOutputKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput
	ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamOutput
}

type AnalyticsApplicationOutputKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamOutput)
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamOutput).ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx)
}

// AnalyticsApplicationOutputKinesisStreamPtrInput is an input type that accepts AnalyticsApplicationOutputKinesisStreamArgs, AnalyticsApplicationOutputKinesisStreamPtr and AnalyticsApplicationOutputKinesisStreamPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputKinesisStreamPtrInput` via:
//
// 		 AnalyticsApplicationOutputKinesisStreamArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationOutputKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput
	ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput
}

type analyticsApplicationOutputKinesisStreamPtrType AnalyticsApplicationOutputKinesisStreamArgs

func AnalyticsApplicationOutputKinesisStreamPtr(v *AnalyticsApplicationOutputKinesisStreamArgs) AnalyticsApplicationOutputKinesisStreamPtrInput {
	return (*analyticsApplicationOutputKinesisStreamPtrType)(v)
}

func (*analyticsApplicationOutputKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisStreamPtrType) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisStreamPtrType) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

type AnalyticsApplicationOutputKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) *AnalyticsApplicationOutputKinesisStream {
		return &v
	}).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) Elem() AnalyticsApplicationOutputKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisStream) AnalyticsApplicationOutputKinesisStream { return *v }).(AnalyticsApplicationOutputKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationOutputLambdaInput is an input type that accepts AnalyticsApplicationOutputLambdaArgs and AnalyticsApplicationOutputLambdaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputLambdaInput` via:
//
// 		 AnalyticsApplicationOutputLambdaArgs{...}
//
type AnalyticsApplicationOutputLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput
	ToAnalyticsApplicationOutputLambdaOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaOutput
}

type AnalyticsApplicationOutputLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput {
	return i.ToAnalyticsApplicationOutputLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaOutput)
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaOutput).ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx)
}

// AnalyticsApplicationOutputLambdaPtrInput is an input type that accepts AnalyticsApplicationOutputLambdaArgs, AnalyticsApplicationOutputLambdaPtr and AnalyticsApplicationOutputLambdaPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputLambdaPtrInput` via:
//
// 		 AnalyticsApplicationOutputLambdaArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationOutputLambdaPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput
	ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaPtrOutput
}

type analyticsApplicationOutputLambdaPtrType AnalyticsApplicationOutputLambdaArgs

func AnalyticsApplicationOutputLambdaPtr(v *AnalyticsApplicationOutputLambdaArgs) AnalyticsApplicationOutputLambdaPtrInput {
	return (*analyticsApplicationOutputLambdaPtrType)(v)
}

func (*analyticsApplicationOutputLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (i *analyticsApplicationOutputLambdaPtrType) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputLambdaPtrType) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaPtrOutput)
}

type AnalyticsApplicationOutputLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) *AnalyticsApplicationOutputLambda {
		return &v
	}).(AnalyticsApplicationOutputLambdaPtrOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputLambdaPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) Elem() AnalyticsApplicationOutputLambdaOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputLambda) AnalyticsApplicationOutputLambda { return *v }).(AnalyticsApplicationOutputLambdaOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputSchema struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

// AnalyticsApplicationOutputSchemaInput is an input type that accepts AnalyticsApplicationOutputSchemaArgs and AnalyticsApplicationOutputSchemaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationOutputSchemaInput` via:
//
// 		 AnalyticsApplicationOutputSchemaArgs{...}
//
type AnalyticsApplicationOutputSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput
	ToAnalyticsApplicationOutputSchemaOutputWithContext(context.Context) AnalyticsApplicationOutputSchemaOutput
}

type AnalyticsApplicationOutputSchemaArgs struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationOutputSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchema)(nil)).Elem()
}

func (i AnalyticsApplicationOutputSchemaArgs) ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput {
	return i.ToAnalyticsApplicationOutputSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputSchemaArgs) ToAnalyticsApplicationOutputSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputSchemaOutput)
}

type AnalyticsApplicationOutputSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchema)(nil)).Elem()
}

func (o AnalyticsApplicationOutputSchemaOutput) ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput {
	return o
}

func (o AnalyticsApplicationOutputSchemaOutput) ToAnalyticsApplicationOutputSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaOutput {
	return o
}

// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationOutputSchemaOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputSchema) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSources struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3 `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchema `pulumi:"schema"`
	// The in-application Table Name.
	TableName string `pulumi:"tableName"`
}

// AnalyticsApplicationReferenceDataSourcesInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesArgs and AnalyticsApplicationReferenceDataSourcesOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesArgs{...}
//
type AnalyticsApplicationReferenceDataSourcesInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput
	ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesOutput
}

type AnalyticsApplicationReferenceDataSourcesArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3Input `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchemaInput `pulumi:"schema"`
	// The in-application Table Name.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (AnalyticsApplicationReferenceDataSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesOutput).ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesArgs, AnalyticsApplicationReferenceDataSourcesPtr and AnalyticsApplicationReferenceDataSourcesPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesPtrInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationReferenceDataSourcesPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput
}

type analyticsApplicationReferenceDataSourcesPtrType AnalyticsApplicationReferenceDataSourcesArgs

func AnalyticsApplicationReferenceDataSourcesPtr(v *AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesPtrInput {
	return (*analyticsApplicationReferenceDataSourcesPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesPtrType) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesPtrType) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) *AnalyticsApplicationReferenceDataSources {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesOutput) S3() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesS3 {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesSchema {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSources { return *v }).(AnalyticsApplicationReferenceDataSourcesOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) S3() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesS3 {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesSchema {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesS3 struct {
	// The S3 Bucket ARN.
	BucketArn string `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey string `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

// AnalyticsApplicationReferenceDataSourcesS3Input is an input type that accepts AnalyticsApplicationReferenceDataSourcesS3Args and AnalyticsApplicationReferenceDataSourcesS3Output values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesS3Input` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesS3Args{...}
//
type AnalyticsApplicationReferenceDataSourcesS3Input interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output
	ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesS3Output
}

type AnalyticsApplicationReferenceDataSourcesS3Args struct {
	// The S3 Bucket ARN.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey pulumi.StringInput `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationReferenceDataSourcesS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output {
	return i.ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

type AnalyticsApplicationReferenceDataSourcesS3Output struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3Output {
	return o
}

// The S3 Bucket ARN.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The File Key name containing reference data.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) FileKey() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.FileKey }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat `pulumi:"recordFormat"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaArgs and AnalyticsApplicationReferenceDataSourcesSchemaOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaArgs{...}
//
type AnalyticsApplicationReferenceDataSourcesSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordColumns() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordFormat() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs{...}
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray and AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray{ AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs{...} }
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs{...}
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs{...}
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs, AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtr and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs{...}
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs, AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtr and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs{...}
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

// AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput is an input type that accepts AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs, AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtr and AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput values.
// You can construct a concrete instance of `AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput` via:
//
// 		 AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs{...}
//
//  or:
//
// 		 nil
//
type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfiguration struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn string `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName string `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod *string `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName *string `pulumi:"typeName"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationArgs and FirehoseDeliveryStreamElasticsearchConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationArgs{...}
//
type FirehoseDeliveryStreamElasticsearchConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn pulumi.StringInput `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod pulumi.StringPtrInput `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationArgs, FirehoseDeliveryStreamElasticsearchConfigurationPtr and FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamElasticsearchConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfiguration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) DomainArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.DomainArn }).(pulumi.StringOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) FirehoseDeliveryStreamElasticsearchConfiguration {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) DomainArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.DomainArn }).(pulumi.StringOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs{...}
//
type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs{...}
//
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs{...}
//
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput)
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs{...} }
//
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs{...}
//
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

// FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
// 		 FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs{...} }
//
type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) FirehoseDeliveryStreamExtendedS3Configuration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration `pulumi:"schemaConfiguration"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput `pulumi:"schemaConfiguration"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer `pulumi:"deserializer"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput `pulumi:"deserializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) Deserializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
		return v.Deserializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe `pulumi:"openXJsonSerDe"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput `pulumi:"openXJsonSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) HiveJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return v.HiveJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// Nested argument that specifies the OpenX SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) OpenXJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return v.OpenXJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats []string `pulumi:"timestampFormats"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats pulumi.StringArrayInput `pulumi:"timestampFormats"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings map[string]string `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores *bool `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings pulumi.StringMapInput `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores pulumi.BoolPtrInput `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer `pulumi:"serializer"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput `pulumi:"serializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) Serializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
		return v.Serializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe `pulumi:"parquetSerDe"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput `pulumi:"parquetSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) OrcSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return v.OrcSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ParquetSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return v.ParquetSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns []string `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability *float64 `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold *float64 `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding *bool `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion *string `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance *float64 `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride *int `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes *int `pulumi:"stripeSizeBytes"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns pulumi.StringArrayInput `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability pulumi.Float64PtrInput `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold pulumi.Float64PtrInput `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding pulumi.BoolPtrInput `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion pulumi.StringPtrInput `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance pulumi.Float64PtrInput `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride pulumi.IntPtrInput `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes pulumi.IntPtrInput `pulumi:"stripeSizeBytes"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression *bool `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes *int `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes *int `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion *string `pulumi:"writerVersion"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression pulumi.BoolPtrInput `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes pulumi.IntPtrInput `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes pulumi.IntPtrInput `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion pulumi.StringPtrInput `pulumi:"writerVersion"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs, FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtr and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId *string `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName string `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region *string `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName string `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId pulumi.StringPtrInput `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// If you don't specify an AWS Region, the default is the current region.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs{...} }
//
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs{...} }
//
type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs, FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtr and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
//
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfiguration struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamKinesisSourceConfigurationInput is an input type that accepts FirehoseDeliveryStreamKinesisSourceConfigurationArgs and FirehoseDeliveryStreamKinesisSourceConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamKinesisSourceConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamKinesisSourceConfigurationArgs{...}
//
type FirehoseDeliveryStreamKinesisSourceConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgs struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn pulumi.StringInput `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput)
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput).ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamKinesisSourceConfigurationArgs, FirehoseDeliveryStreamKinesisSourceConfigurationPtr and FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamKinesisSourceConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput
}

type firehoseDeliveryStreamKinesisSourceConfigurationPtrType FirehoseDeliveryStreamKinesisSourceConfigurationArgs

func FirehoseDeliveryStreamKinesisSourceConfigurationPtr(v *FirehoseDeliveryStreamKinesisSourceConfigurationArgs) FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput {
	return (*firehoseDeliveryStreamKinesisSourceConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) *FirehoseDeliveryStreamKinesisSourceConfiguration {
		return &v
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput)
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) Elem() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamKinesisSourceConfiguration) FirehoseDeliveryStreamKinesisSourceConfiguration {
		return *v
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput)
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfiguration struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl string `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions *string `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns *string `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName string `pulumi:"dataTableName"`
	// The password for the username above.
	Password string `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration *int `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username string `pulumi:"username"`
}

// FirehoseDeliveryStreamRedshiftConfigurationInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationArgs and FirehoseDeliveryStreamRedshiftConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationArgs{...}
//
type FirehoseDeliveryStreamRedshiftConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl pulumi.StringInput `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions pulumi.StringPtrInput `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns pulumi.StringPtrInput `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName pulumi.StringInput `pulumi:"dataTableName"`
	// The password for the username above.
	Password pulumi.StringInput `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username pulumi.StringInput `pulumi:"username"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationArgs, FirehoseDeliveryStreamRedshiftConfigurationPtr and FirehoseDeliveryStreamRedshiftConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamRedshiftConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) FirehoseDeliveryStreamRedshiftConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs{...}
//
type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs{...}
//
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs{...}
//
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput)
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs{...} }
//
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs{...}
//
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput)
}

// FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs{...} }
//
type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs{...}
//
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs, FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtr and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
//
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

// FirehoseDeliveryStreamS3ConfigurationInput is an input type that accepts FirehoseDeliveryStreamS3ConfigurationArgs and FirehoseDeliveryStreamS3ConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamS3ConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamS3ConfigurationArgs{...}
//
type FirehoseDeliveryStreamS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationOutput() FirehoseDeliveryStreamS3ConfigurationOutput
	ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationOutput
}

type FirehoseDeliveryStreamS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationOutput() FirehoseDeliveryStreamS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationOutput).ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamS3ConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamS3ConfigurationArgs, FirehoseDeliveryStreamS3ConfigurationPtr and FirehoseDeliveryStreamS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamS3ConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamS3ConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamS3ConfigurationPtrType FirehoseDeliveryStreamS3ConfigurationArgs

func FirehoseDeliveryStreamS3ConfigurationPtr(v *FirehoseDeliveryStreamS3ConfigurationArgs) FirehoseDeliveryStreamS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamS3ConfigurationPtrType) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamS3ConfigurationPtrType) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationOutput() FirehoseDeliveryStreamS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *FirehoseDeliveryStreamS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamS3ConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamS3Configuration) FirehoseDeliveryStreamS3Configuration { return *v }).(FirehoseDeliveryStreamS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsInput` via:
//
// 		 FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryption struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled *bool `pulumi:"enabled"`
}

// FirehoseDeliveryStreamServerSideEncryptionInput is an input type that accepts FirehoseDeliveryStreamServerSideEncryptionArgs and FirehoseDeliveryStreamServerSideEncryptionOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamServerSideEncryptionInput` via:
//
// 		 FirehoseDeliveryStreamServerSideEncryptionArgs{...}
//
type FirehoseDeliveryStreamServerSideEncryptionInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput
	ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput
}

type FirehoseDeliveryStreamServerSideEncryptionArgs struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (FirehoseDeliveryStreamServerSideEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionOutput)
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionOutput).ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamServerSideEncryptionPtrInput is an input type that accepts FirehoseDeliveryStreamServerSideEncryptionArgs, FirehoseDeliveryStreamServerSideEncryptionPtr and FirehoseDeliveryStreamServerSideEncryptionPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamServerSideEncryptionPtrInput` via:
//
// 		 FirehoseDeliveryStreamServerSideEncryptionArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamServerSideEncryptionPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput
	ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput
}

type firehoseDeliveryStreamServerSideEncryptionPtrType FirehoseDeliveryStreamServerSideEncryptionArgs

func FirehoseDeliveryStreamServerSideEncryptionPtr(v *FirehoseDeliveryStreamServerSideEncryptionArgs) FirehoseDeliveryStreamServerSideEncryptionPtrInput {
	return (*firehoseDeliveryStreamServerSideEncryptionPtrType)(v)
}

func (*firehoseDeliveryStreamServerSideEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (i *firehoseDeliveryStreamServerSideEncryptionPtrType) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamServerSideEncryptionPtrType) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *FirehoseDeliveryStreamServerSideEncryption {
		return &v
	}).(FirehoseDeliveryStreamServerSideEncryptionPtrOutput)
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) Elem() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamServerSideEncryption) FirehoseDeliveryStreamServerSideEncryption {
		return *v
	}).(FirehoseDeliveryStreamServerSideEncryptionOutput)
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfiguration struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout *int `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint string `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType *string `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken string `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

// FirehoseDeliveryStreamSplunkConfigurationInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationArgs and FirehoseDeliveryStreamSplunkConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationArgs{...}
//
type FirehoseDeliveryStreamSplunkConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout pulumi.IntPtrInput `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint pulumi.StringInput `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType pulumi.StringPtrInput `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken pulumi.StringInput `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamSplunkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationArgs, FirehoseDeliveryStreamSplunkConfigurationPtr and FirehoseDeliveryStreamSplunkConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamSplunkConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfiguration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) FirehoseDeliveryStreamSplunkConfiguration {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

// FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs and FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs{...}
//
type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs, FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtr and FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs{...}
//
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs, FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtr and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs{...}
//
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput)
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray{ FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs{...} }
//
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs{...}
//
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput)
}

// FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput is an input type that accepts FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray and FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput` via:
//
// 		 FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray{ FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs{...} }
//
type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesS3Output{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
}
