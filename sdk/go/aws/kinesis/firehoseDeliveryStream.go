// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Kinesis Firehose Delivery Stream resource. Amazon Kinesis Firehose is a fully managed, elastic service to easily deliver real-time data streams to destinations such as Amazon S3 and Amazon Redshift.
//
// For more details, see the [Amazon Kinesis Firehose Documentation](https://aws.amazon.com/documentation/firehose/).
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import Kinesis Firehose Delivery streams using the stream ARN. For example:
//
// ```sh
//
//	$ pulumi import aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream foo arn:aws:firehose:us-east-1:XXX:deliverystream/example
//
// ```
//
//	NoteImport does not work for stream destination `s3`. Consider using `extended_s3` since `s3` destination is deprecated.
type FirehoseDeliveryStream struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumi.StringOutput `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint`, `opensearch` and `opensearchserverless`.
	// is redshift). More details are given below.
	Destination   pulumi.StringOutput `pulumi:"destination"`
	DestinationId pulumi.StringOutput `pulumi:"destinationId"`
	// Configuration options when `destination` is `elasticsearch`. More details are given below.
	ElasticsearchConfiguration FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput `pulumi:"extendedS3Configuration"`
	// Configuration options when `destination` is `httpEndpoint`. Requires the user to also specify an `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput `pulumi:"httpEndpointConfiguration"`
	// The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.
	KinesisSourceConfiguration FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput `pulumi:"kinesisSourceConfiguration"`
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.
	MskSourceConfiguration FirehoseDeliveryStreamMskSourceConfigurationPtrOutput `pulumi:"mskSourceConfiguration"`
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name pulumi.StringOutput `pulumi:"name"`
	// Configuration options when `destination` is `opensearch`. More details are given below.
	OpensearchConfiguration FirehoseDeliveryStreamOpensearchConfigurationPtrOutput `pulumi:"opensearchConfiguration"`
	// Configuration options when `destination` is `opensearchserverless`. More details are given below.
	OpensearchserverlessConfiguration FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput `pulumi:"opensearchserverlessConfiguration"`
	// Configuration options when `destination` is `redshift`. Requires the user to also specify an `s3Configuration` block. More details are given below.
	RedshiftConfiguration FirehoseDeliveryStreamRedshiftConfigurationPtrOutput `pulumi:"redshiftConfiguration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption FirehoseDeliveryStreamServerSideEncryptionPtrOutput `pulumi:"serverSideEncryption"`
	// Configuration options when `destination` is `splunk`. More details are given below.
	SplunkConfiguration FirehoseDeliveryStreamSplunkConfigurationPtrOutput `pulumi:"splunkConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringOutput `pulumi:"versionId"`
}

// NewFirehoseDeliveryStream registers a new resource with the given unique name, arguments, and options.
func NewFirehoseDeliveryStream(ctx *pulumi.Context,
	name string, args *FirehoseDeliveryStreamArgs, opts ...pulumi.ResourceOption) (*FirehoseDeliveryStream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirehoseDeliveryStream
	err := ctx.RegisterResource("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirehoseDeliveryStream gets an existing FirehoseDeliveryStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirehoseDeliveryStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirehoseDeliveryStreamState, opts ...pulumi.ResourceOption) (*FirehoseDeliveryStream, error) {
	var resource FirehoseDeliveryStream
	err := ctx.ReadResource("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirehoseDeliveryStream resources.
type firehoseDeliveryStreamState struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn *string `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint`, `opensearch` and `opensearchserverless`.
	// is redshift). More details are given below.
	Destination   *string `pulumi:"destination"`
	DestinationId *string `pulumi:"destinationId"`
	// Configuration options when `destination` is `elasticsearch`. More details are given below.
	ElasticsearchConfiguration *FirehoseDeliveryStreamElasticsearchConfiguration `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration *FirehoseDeliveryStreamExtendedS3Configuration `pulumi:"extendedS3Configuration"`
	// Configuration options when `destination` is `httpEndpoint`. Requires the user to also specify an `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration *FirehoseDeliveryStreamHttpEndpointConfiguration `pulumi:"httpEndpointConfiguration"`
	// The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.
	KinesisSourceConfiguration *FirehoseDeliveryStreamKinesisSourceConfiguration `pulumi:"kinesisSourceConfiguration"`
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.
	MskSourceConfiguration *FirehoseDeliveryStreamMskSourceConfiguration `pulumi:"mskSourceConfiguration"`
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name *string `pulumi:"name"`
	// Configuration options when `destination` is `opensearch`. More details are given below.
	OpensearchConfiguration *FirehoseDeliveryStreamOpensearchConfiguration `pulumi:"opensearchConfiguration"`
	// Configuration options when `destination` is `opensearchserverless`. More details are given below.
	OpensearchserverlessConfiguration *FirehoseDeliveryStreamOpensearchserverlessConfiguration `pulumi:"opensearchserverlessConfiguration"`
	// Configuration options when `destination` is `redshift`. Requires the user to also specify an `s3Configuration` block. More details are given below.
	RedshiftConfiguration *FirehoseDeliveryStreamRedshiftConfiguration `pulumi:"redshiftConfiguration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption *FirehoseDeliveryStreamServerSideEncryption `pulumi:"serverSideEncryption"`
	// Configuration options when `destination` is `splunk`. More details are given below.
	SplunkConfiguration *FirehoseDeliveryStreamSplunkConfiguration `pulumi:"splunkConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

type FirehoseDeliveryStreamState struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumi.StringPtrInput
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint`, `opensearch` and `opensearchserverless`.
	// is redshift). More details are given below.
	Destination   pulumi.StringPtrInput
	DestinationId pulumi.StringPtrInput
	// Configuration options when `destination` is `elasticsearch`. More details are given below.
	ElasticsearchConfiguration FirehoseDeliveryStreamElasticsearchConfigurationPtrInput
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput
	// Configuration options when `destination` is `httpEndpoint`. Requires the user to also specify an `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration FirehoseDeliveryStreamHttpEndpointConfigurationPtrInput
	// The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.
	KinesisSourceConfiguration FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.
	MskSourceConfiguration FirehoseDeliveryStreamMskSourceConfigurationPtrInput
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name pulumi.StringPtrInput
	// Configuration options when `destination` is `opensearch`. More details are given below.
	OpensearchConfiguration FirehoseDeliveryStreamOpensearchConfigurationPtrInput
	// Configuration options when `destination` is `opensearchserverless`. More details are given below.
	OpensearchserverlessConfiguration FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrInput
	// Configuration options when `destination` is `redshift`. Requires the user to also specify an `s3Configuration` block. More details are given below.
	RedshiftConfiguration FirehoseDeliveryStreamRedshiftConfigurationPtrInput
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption FirehoseDeliveryStreamServerSideEncryptionPtrInput
	// Configuration options when `destination` is `splunk`. More details are given below.
	SplunkConfiguration FirehoseDeliveryStreamSplunkConfigurationPtrInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringPtrInput
}

func (FirehoseDeliveryStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*firehoseDeliveryStreamState)(nil)).Elem()
}

type firehoseDeliveryStreamArgs struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn *string `pulumi:"arn"`
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint`, `opensearch` and `opensearchserverless`.
	// is redshift). More details are given below.
	Destination   string  `pulumi:"destination"`
	DestinationId *string `pulumi:"destinationId"`
	// Configuration options when `destination` is `elasticsearch`. More details are given below.
	ElasticsearchConfiguration *FirehoseDeliveryStreamElasticsearchConfiguration `pulumi:"elasticsearchConfiguration"`
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration *FirehoseDeliveryStreamExtendedS3Configuration `pulumi:"extendedS3Configuration"`
	// Configuration options when `destination` is `httpEndpoint`. Requires the user to also specify an `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration *FirehoseDeliveryStreamHttpEndpointConfiguration `pulumi:"httpEndpointConfiguration"`
	// The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.
	KinesisSourceConfiguration *FirehoseDeliveryStreamKinesisSourceConfiguration `pulumi:"kinesisSourceConfiguration"`
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.
	MskSourceConfiguration *FirehoseDeliveryStreamMskSourceConfiguration `pulumi:"mskSourceConfiguration"`
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name *string `pulumi:"name"`
	// Configuration options when `destination` is `opensearch`. More details are given below.
	OpensearchConfiguration *FirehoseDeliveryStreamOpensearchConfiguration `pulumi:"opensearchConfiguration"`
	// Configuration options when `destination` is `opensearchserverless`. More details are given below.
	OpensearchserverlessConfiguration *FirehoseDeliveryStreamOpensearchserverlessConfiguration `pulumi:"opensearchserverlessConfiguration"`
	// Configuration options when `destination` is `redshift`. Requires the user to also specify an `s3Configuration` block. More details are given below.
	RedshiftConfiguration *FirehoseDeliveryStreamRedshiftConfiguration `pulumi:"redshiftConfiguration"`
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption *FirehoseDeliveryStreamServerSideEncryption `pulumi:"serverSideEncryption"`
	// Configuration options when `destination` is `splunk`. More details are given below.
	SplunkConfiguration *FirehoseDeliveryStreamSplunkConfiguration `pulumi:"splunkConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

// The set of arguments for constructing a FirehoseDeliveryStream resource.
type FirehoseDeliveryStreamArgs struct {
	// The Amazon Resource Name (ARN) specifying the Stream
	Arn pulumi.StringPtrInput
	// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint`, `opensearch` and `opensearchserverless`.
	// is redshift). More details are given below.
	Destination   pulumi.StringInput
	DestinationId pulumi.StringPtrInput
	// Configuration options when `destination` is `elasticsearch`. More details are given below.
	ElasticsearchConfiguration FirehoseDeliveryStreamElasticsearchConfigurationPtrInput
	// Enhanced configuration options for the s3 destination. More details are given below.
	ExtendedS3Configuration FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput
	// Configuration options when `destination` is `httpEndpoint`. Requires the user to also specify an `s3Configuration` block.  More details are given below.
	HttpEndpointConfiguration FirehoseDeliveryStreamHttpEndpointConfigurationPtrInput
	// The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.
	KinesisSourceConfiguration FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.
	MskSourceConfiguration FirehoseDeliveryStreamMskSourceConfigurationPtrInput
	// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
	Name pulumi.StringPtrInput
	// Configuration options when `destination` is `opensearch`. More details are given below.
	OpensearchConfiguration FirehoseDeliveryStreamOpensearchConfigurationPtrInput
	// Configuration options when `destination` is `opensearchserverless`. More details are given below.
	OpensearchserverlessConfiguration FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrInput
	// Configuration options when `destination` is `redshift`. Requires the user to also specify an `s3Configuration` block. More details are given below.
	RedshiftConfiguration FirehoseDeliveryStreamRedshiftConfigurationPtrInput
	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	ServerSideEncryption FirehoseDeliveryStreamServerSideEncryptionPtrInput
	// Configuration options when `destination` is `splunk`. More details are given below.
	SplunkConfiguration FirehoseDeliveryStreamSplunkConfigurationPtrInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringPtrInput
}

func (FirehoseDeliveryStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firehoseDeliveryStreamArgs)(nil)).Elem()
}

type FirehoseDeliveryStreamInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamOutput() FirehoseDeliveryStreamOutput
	ToFirehoseDeliveryStreamOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOutput
}

func (*FirehoseDeliveryStream) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStream)(nil)).Elem()
}

func (i *FirehoseDeliveryStream) ToFirehoseDeliveryStreamOutput() FirehoseDeliveryStreamOutput {
	return i.ToFirehoseDeliveryStreamOutputWithContext(context.Background())
}

func (i *FirehoseDeliveryStream) ToFirehoseDeliveryStreamOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamOutput)
}

func (i *FirehoseDeliveryStream) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStream] {
	return pulumix.Output[*FirehoseDeliveryStream]{
		OutputState: i.ToFirehoseDeliveryStreamOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamArrayInput is an input type that accepts FirehoseDeliveryStreamArray and FirehoseDeliveryStreamArrayOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamArrayInput` via:
//
//	FirehoseDeliveryStreamArray{ FirehoseDeliveryStreamArgs{...} }
type FirehoseDeliveryStreamArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamArrayOutput() FirehoseDeliveryStreamArrayOutput
	ToFirehoseDeliveryStreamArrayOutputWithContext(context.Context) FirehoseDeliveryStreamArrayOutput
}

type FirehoseDeliveryStreamArray []FirehoseDeliveryStreamInput

func (FirehoseDeliveryStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirehoseDeliveryStream)(nil)).Elem()
}

func (i FirehoseDeliveryStreamArray) ToFirehoseDeliveryStreamArrayOutput() FirehoseDeliveryStreamArrayOutput {
	return i.ToFirehoseDeliveryStreamArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamArray) ToFirehoseDeliveryStreamArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamArrayOutput)
}

func (i FirehoseDeliveryStreamArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirehoseDeliveryStream] {
	return pulumix.Output[[]*FirehoseDeliveryStream]{
		OutputState: i.ToFirehoseDeliveryStreamArrayOutputWithContext(ctx).OutputState,
	}
}

// FirehoseDeliveryStreamMapInput is an input type that accepts FirehoseDeliveryStreamMap and FirehoseDeliveryStreamMapOutput values.
// You can construct a concrete instance of `FirehoseDeliveryStreamMapInput` via:
//
//	FirehoseDeliveryStreamMap{ "key": FirehoseDeliveryStreamArgs{...} }
type FirehoseDeliveryStreamMapInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamMapOutput() FirehoseDeliveryStreamMapOutput
	ToFirehoseDeliveryStreamMapOutputWithContext(context.Context) FirehoseDeliveryStreamMapOutput
}

type FirehoseDeliveryStreamMap map[string]FirehoseDeliveryStreamInput

func (FirehoseDeliveryStreamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirehoseDeliveryStream)(nil)).Elem()
}

func (i FirehoseDeliveryStreamMap) ToFirehoseDeliveryStreamMapOutput() FirehoseDeliveryStreamMapOutput {
	return i.ToFirehoseDeliveryStreamMapOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamMap) ToFirehoseDeliveryStreamMapOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamMapOutput)
}

func (i FirehoseDeliveryStreamMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirehoseDeliveryStream] {
	return pulumix.Output[map[string]*FirehoseDeliveryStream]{
		OutputState: i.ToFirehoseDeliveryStreamMapOutputWithContext(ctx).OutputState,
	}
}

type FirehoseDeliveryStreamOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStream)(nil)).Elem()
}

func (o FirehoseDeliveryStreamOutput) ToFirehoseDeliveryStreamOutput() FirehoseDeliveryStreamOutput {
	return o
}

func (o FirehoseDeliveryStreamOutput) ToFirehoseDeliveryStreamOutputWithContext(ctx context.Context) FirehoseDeliveryStreamOutput {
	return o
}

func (o FirehoseDeliveryStreamOutput) ToOutput(ctx context.Context) pulumix.Output[*FirehoseDeliveryStream] {
	return pulumix.Output[*FirehoseDeliveryStream]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) specifying the Stream
func (o FirehoseDeliveryStreamOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// This is the destination to where the data is delivered. The only options are `s3` (Deprecated, use `extendedS3` instead), `extendedS3`, `redshift`, `elasticsearch`, `splunk`, `httpEndpoint`, `opensearch` and `opensearchserverless`.
// is redshift). More details are given below.
func (o FirehoseDeliveryStreamOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

func (o FirehoseDeliveryStreamOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) pulumi.StringOutput { return v.DestinationId }).(pulumi.StringOutput)
}

// Configuration options when `destination` is `elasticsearch`. More details are given below.
func (o FirehoseDeliveryStreamOutput) ElasticsearchConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
		return v.ElasticsearchConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput)
}

// Enhanced configuration options for the s3 destination. More details are given below.
func (o FirehoseDeliveryStreamOutput) ExtendedS3Configuration() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
		return v.ExtendedS3Configuration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

// Configuration options when `destination` is `httpEndpoint`. Requires the user to also specify an `s3Configuration` block.  More details are given below.
func (o FirehoseDeliveryStreamOutput) HttpEndpointConfiguration() FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput {
		return v.HttpEndpointConfiguration
	}).(FirehoseDeliveryStreamHttpEndpointConfigurationPtrOutput)
}

// The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.
func (o FirehoseDeliveryStreamOutput) KinesisSourceConfiguration() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
		return v.KinesisSourceConfiguration
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput)
}

// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.
func (o FirehoseDeliveryStreamOutput) MskSourceConfiguration() FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamMskSourceConfigurationPtrOutput {
		return v.MskSourceConfiguration
	}).(FirehoseDeliveryStreamMskSourceConfigurationPtrOutput)
}

// A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with `aws-waf-logs-`. See [AWS Documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-policies.html#waf-policies-logging-config) for more details.
func (o FirehoseDeliveryStreamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configuration options when `destination` is `opensearch`. More details are given below.
func (o FirehoseDeliveryStreamOutput) OpensearchConfiguration() FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamOpensearchConfigurationPtrOutput {
		return v.OpensearchConfiguration
	}).(FirehoseDeliveryStreamOpensearchConfigurationPtrOutput)
}

// Configuration options when `destination` is `opensearchserverless`. More details are given below.
func (o FirehoseDeliveryStreamOutput) OpensearchserverlessConfiguration() FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput {
		return v.OpensearchserverlessConfiguration
	}).(FirehoseDeliveryStreamOpensearchserverlessConfigurationPtrOutput)
}

// Configuration options when `destination` is `redshift`. Requires the user to also specify an `s3Configuration` block. More details are given below.
func (o FirehoseDeliveryStreamOutput) RedshiftConfiguration() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
		return v.RedshiftConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput)
}

// Encrypt at rest options.
// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamOutput) ServerSideEncryption() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
		return v.ServerSideEncryption
	}).(FirehoseDeliveryStreamServerSideEncryptionPtrOutput)
}

// Configuration options when `destination` is `splunk`. More details are given below.
func (o FirehoseDeliveryStreamOutput) SplunkConfiguration() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
		return v.SplunkConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationPtrOutput)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FirehoseDeliveryStreamOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o FirehoseDeliveryStreamOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStream) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirehoseDeliveryStream)(nil)).Elem()
}

func (o FirehoseDeliveryStreamArrayOutput) ToFirehoseDeliveryStreamArrayOutput() FirehoseDeliveryStreamArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamArrayOutput) ToFirehoseDeliveryStreamArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirehoseDeliveryStream] {
	return pulumix.Output[[]*FirehoseDeliveryStream]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirehoseDeliveryStream {
		return vs[0].([]*FirehoseDeliveryStream)[vs[1].(int)]
	}).(FirehoseDeliveryStreamOutput)
}

type FirehoseDeliveryStreamMapOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirehoseDeliveryStream)(nil)).Elem()
}

func (o FirehoseDeliveryStreamMapOutput) ToFirehoseDeliveryStreamMapOutput() FirehoseDeliveryStreamMapOutput {
	return o
}

func (o FirehoseDeliveryStreamMapOutput) ToFirehoseDeliveryStreamMapOutputWithContext(ctx context.Context) FirehoseDeliveryStreamMapOutput {
	return o
}

func (o FirehoseDeliveryStreamMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirehoseDeliveryStream] {
	return pulumix.Output[map[string]*FirehoseDeliveryStream]{
		OutputState: o.OutputState,
	}
}

func (o FirehoseDeliveryStreamMapOutput) MapIndex(k pulumi.StringInput) FirehoseDeliveryStreamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirehoseDeliveryStream {
		return vs[0].(map[string]*FirehoseDeliveryStream)[vs[1].(string)]
	}).(FirehoseDeliveryStreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamInput)(nil)).Elem(), &FirehoseDeliveryStream{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamArrayInput)(nil)).Elem(), FirehoseDeliveryStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirehoseDeliveryStreamMapInput)(nil)).Elem(), FirehoseDeliveryStreamMap{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamMapOutput{})
}
