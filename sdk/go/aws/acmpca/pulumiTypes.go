// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package acmpca

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CertificateAuthorityCertificateAuthorityConfiguration struct {
	// Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
	KeyAlgorithm string `pulumi:"keyAlgorithm"`
	// Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
	SigningAlgorithm string `pulumi:"signingAlgorithm"`
	// Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
	Subject CertificateAuthorityCertificateAuthorityConfigurationSubject `pulumi:"subject"`
}

// CertificateAuthorityCertificateAuthorityConfigurationInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigurationArgs and CertificateAuthorityCertificateAuthorityConfigurationOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigurationInput` via:
//
// 		 CertificateAuthorityCertificateAuthorityConfigurationArgs{...}
//
type CertificateAuthorityCertificateAuthorityConfigurationInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigurationOutput() CertificateAuthorityCertificateAuthorityConfigurationOutput
	ToCertificateAuthorityCertificateAuthorityConfigurationOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigurationOutput
}

type CertificateAuthorityCertificateAuthorityConfigurationArgs struct {
	// Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
	KeyAlgorithm pulumi.StringInput `pulumi:"keyAlgorithm"`
	// Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
	SigningAlgorithm pulumi.StringInput `pulumi:"signingAlgorithm"`
	// Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
	Subject CertificateAuthorityCertificateAuthorityConfigurationSubjectInput `pulumi:"subject"`
}

func (CertificateAuthorityCertificateAuthorityConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfiguration)(nil)).Elem()
}

func (i CertificateAuthorityCertificateAuthorityConfigurationArgs) ToCertificateAuthorityCertificateAuthorityConfigurationOutput() CertificateAuthorityCertificateAuthorityConfigurationOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigurationOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigurationArgs) ToCertificateAuthorityCertificateAuthorityConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigurationOutput)
}

func (i CertificateAuthorityCertificateAuthorityConfigurationArgs) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutput() CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigurationArgs) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigurationOutput).ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(ctx)
}

// CertificateAuthorityCertificateAuthorityConfigurationPtrInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigurationArgs, CertificateAuthorityCertificateAuthorityConfigurationPtr and CertificateAuthorityCertificateAuthorityConfigurationPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigurationPtrInput` via:
//
// 		 CertificateAuthorityCertificateAuthorityConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type CertificateAuthorityCertificateAuthorityConfigurationPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutput() CertificateAuthorityCertificateAuthorityConfigurationPtrOutput
	ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigurationPtrOutput
}

type certificateAuthorityCertificateAuthorityConfigurationPtrType CertificateAuthorityCertificateAuthorityConfigurationArgs

func CertificateAuthorityCertificateAuthorityConfigurationPtr(v *CertificateAuthorityCertificateAuthorityConfigurationArgs) CertificateAuthorityCertificateAuthorityConfigurationPtrInput {
	return (*certificateAuthorityCertificateAuthorityConfigurationPtrType)(v)
}

func (*certificateAuthorityCertificateAuthorityConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfiguration)(nil)).Elem()
}

func (i *certificateAuthorityCertificateAuthorityConfigurationPtrType) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutput() CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityCertificateAuthorityConfigurationPtrType) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigurationPtrOutput)
}

type CertificateAuthorityCertificateAuthorityConfigurationOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigurationOutput) ToCertificateAuthorityCertificateAuthorityConfigurationOutput() CertificateAuthorityCertificateAuthorityConfigurationOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigurationOutput) ToCertificateAuthorityCertificateAuthorityConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigurationOutput) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutput() CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return o.ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityCertificateAuthorityConfigurationOutput) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfiguration) *CertificateAuthorityCertificateAuthorityConfiguration {
		return &v
	}).(CertificateAuthorityCertificateAuthorityConfigurationPtrOutput)
}

// Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
func (o CertificateAuthorityCertificateAuthorityConfigurationOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfiguration) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
func (o CertificateAuthorityCertificateAuthorityConfigurationOutput) SigningAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfiguration) string { return v.SigningAlgorithm }).(pulumi.StringOutput)
}

// Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
func (o CertificateAuthorityCertificateAuthorityConfigurationOutput) Subject() CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfiguration) CertificateAuthorityCertificateAuthorityConfigurationSubject {
		return v.Subject
	}).(CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput)
}

type CertificateAuthorityCertificateAuthorityConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityCertificateAuthorityConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigurationPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutput() CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigurationPtrOutput) ToCertificateAuthorityCertificateAuthorityConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigurationPtrOutput) Elem() CertificateAuthorityCertificateAuthorityConfigurationOutput {
	return o.ApplyT(func(v *CertificateAuthorityCertificateAuthorityConfiguration) CertificateAuthorityCertificateAuthorityConfiguration {
		return *v
	}).(CertificateAuthorityCertificateAuthorityConfigurationOutput)
}

// Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
func (o CertificateAuthorityCertificateAuthorityConfigurationPtrOutput) KeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfiguration) string { return v.KeyAlgorithm }).(pulumi.StringOutput)
}

// Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
func (o CertificateAuthorityCertificateAuthorityConfigurationPtrOutput) SigningAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfiguration) string { return v.SigningAlgorithm }).(pulumi.StringOutput)
}

// Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
func (o CertificateAuthorityCertificateAuthorityConfigurationPtrOutput) Subject() CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfiguration) CertificateAuthorityCertificateAuthorityConfigurationSubject {
		return v.Subject
	}).(CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput)
}

type CertificateAuthorityCertificateAuthorityConfigurationSubject struct {
	// Fully qualified domain name (FQDN) associated with the certificate subject.
	CommonName *string `pulumi:"commonName"`
	// Two digit code that specifies the country in which the certificate subject located.
	Country *string `pulumi:"country"`
	// Disambiguating information for the certificate subject.
	DistinguishedNameQualifier *string `pulumi:"distinguishedNameQualifier"`
	// Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.
	GenerationQualifier *string `pulumi:"generationQualifier"`
	// First name.
	GivenName *string `pulumi:"givenName"`
	// Concatenation that typically contains the first letter of the `givenName`, the first letter of the middle name if one exists, and the first letter of the `surname`.
	Initials *string `pulumi:"initials"`
	// The locality (such as a city or town) in which the certificate subject is located.
	Locality *string `pulumi:"locality"`
	// Legal name of the organization with which the certificate subject is affiliated.
	Organization *string `pulumi:"organization"`
	// A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// Typically a shortened version of a longer `givenName`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
	Pseudonym *string `pulumi:"pseudonym"`
	// State in which the subject of the certificate is located.
	State *string `pulumi:"state"`
	// Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.
	Surname *string `pulumi:"surname"`
	// A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject.
	Title *string `pulumi:"title"`
}

// CertificateAuthorityCertificateAuthorityConfigurationSubjectInput is an input type that accepts CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs and CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput values.
// You can construct a concrete instance of `CertificateAuthorityCertificateAuthorityConfigurationSubjectInput` via:
//
// 		 CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs{...}
//
type CertificateAuthorityCertificateAuthorityConfigurationSubjectInput interface {
	pulumi.Input

	ToCertificateAuthorityCertificateAuthorityConfigurationSubjectOutput() CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput
	ToCertificateAuthorityCertificateAuthorityConfigurationSubjectOutputWithContext(context.Context) CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput
}

type CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs struct {
	// Fully qualified domain name (FQDN) associated with the certificate subject.
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// Two digit code that specifies the country in which the certificate subject located.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Disambiguating information for the certificate subject.
	DistinguishedNameQualifier pulumi.StringPtrInput `pulumi:"distinguishedNameQualifier"`
	// Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.
	GenerationQualifier pulumi.StringPtrInput `pulumi:"generationQualifier"`
	// First name.
	GivenName pulumi.StringPtrInput `pulumi:"givenName"`
	// Concatenation that typically contains the first letter of the `givenName`, the first letter of the middle name if one exists, and the first letter of the `surname`.
	Initials pulumi.StringPtrInput `pulumi:"initials"`
	// The locality (such as a city or town) in which the certificate subject is located.
	Locality pulumi.StringPtrInput `pulumi:"locality"`
	// Legal name of the organization with which the certificate subject is affiliated.
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// Typically a shortened version of a longer `givenName`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
	Pseudonym pulumi.StringPtrInput `pulumi:"pseudonym"`
	// State in which the subject of the certificate is located.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.
	Surname pulumi.StringPtrInput `pulumi:"surname"`
	// A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigurationSubject)(nil)).Elem()
}

func (i CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs) ToCertificateAuthorityCertificateAuthorityConfigurationSubjectOutput() CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput {
	return i.ToCertificateAuthorityCertificateAuthorityConfigurationSubjectOutputWithContext(context.Background())
}

func (i CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs) ToCertificateAuthorityCertificateAuthorityConfigurationSubjectOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput)
}

type CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityCertificateAuthorityConfigurationSubject)(nil)).Elem()
}

func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) ToCertificateAuthorityCertificateAuthorityConfigurationSubjectOutput() CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput {
	return o
}

func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) ToCertificateAuthorityCertificateAuthorityConfigurationSubjectOutputWithContext(ctx context.Context) CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput {
	return o
}

// Fully qualified domain name (FQDN) associated with the certificate subject.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// Two digit code that specifies the country in which the certificate subject located.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Disambiguating information for the certificate subject.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) DistinguishedNameQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string {
		return v.DistinguishedNameQualifier
	}).(pulumi.StringPtrOutput)
}

// Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) GenerationQualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string {
		return v.GenerationQualifier
	}).(pulumi.StringPtrOutput)
}

// First name.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.GivenName }).(pulumi.StringPtrOutput)
}

// Concatenation that typically contains the first letter of the `givenName`, the first letter of the middle name if one exists, and the first letter of the `surname`.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) Initials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.Initials }).(pulumi.StringPtrOutput)
}

// The locality (such as a city or town) in which the certificate subject is located.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) Locality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.Locality }).(pulumi.StringPtrOutput)
}

// Legal name of the organization with which the certificate subject is affiliated.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string {
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// Typically a shortened version of a longer `givenName`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) Pseudonym() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.Pseudonym }).(pulumi.StringPtrOutput)
}

// State in which the subject of the certificate is located.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) Surname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.Surname }).(pulumi.StringPtrOutput)
}

// A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject.
func (o CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityCertificateAuthorityConfigurationSubject) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityRevocationConfiguration struct {
	// Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
	CrlConfiguration *CertificateAuthorityRevocationConfigurationCrlConfiguration `pulumi:"crlConfiguration"`
}

// CertificateAuthorityRevocationConfigurationInput is an input type that accepts CertificateAuthorityRevocationConfigurationArgs and CertificateAuthorityRevocationConfigurationOutput values.
// You can construct a concrete instance of `CertificateAuthorityRevocationConfigurationInput` via:
//
// 		 CertificateAuthorityRevocationConfigurationArgs{...}
//
type CertificateAuthorityRevocationConfigurationInput interface {
	pulumi.Input

	ToCertificateAuthorityRevocationConfigurationOutput() CertificateAuthorityRevocationConfigurationOutput
	ToCertificateAuthorityRevocationConfigurationOutputWithContext(context.Context) CertificateAuthorityRevocationConfigurationOutput
}

type CertificateAuthorityRevocationConfigurationArgs struct {
	// Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
	CrlConfiguration CertificateAuthorityRevocationConfigurationCrlConfigurationPtrInput `pulumi:"crlConfiguration"`
}

func (CertificateAuthorityRevocationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (i CertificateAuthorityRevocationConfigurationArgs) ToCertificateAuthorityRevocationConfigurationOutput() CertificateAuthorityRevocationConfigurationOutput {
	return i.ToCertificateAuthorityRevocationConfigurationOutputWithContext(context.Background())
}

func (i CertificateAuthorityRevocationConfigurationArgs) ToCertificateAuthorityRevocationConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationOutput)
}

func (i CertificateAuthorityRevocationConfigurationArgs) ToCertificateAuthorityRevocationConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationPtrOutput {
	return i.ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityRevocationConfigurationArgs) ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationOutput).ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(ctx)
}

// CertificateAuthorityRevocationConfigurationPtrInput is an input type that accepts CertificateAuthorityRevocationConfigurationArgs, CertificateAuthorityRevocationConfigurationPtr and CertificateAuthorityRevocationConfigurationPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityRevocationConfigurationPtrInput` via:
//
// 		 CertificateAuthorityRevocationConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type CertificateAuthorityRevocationConfigurationPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityRevocationConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationPtrOutput
	ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(context.Context) CertificateAuthorityRevocationConfigurationPtrOutput
}

type certificateAuthorityRevocationConfigurationPtrType CertificateAuthorityRevocationConfigurationArgs

func CertificateAuthorityRevocationConfigurationPtr(v *CertificateAuthorityRevocationConfigurationArgs) CertificateAuthorityRevocationConfigurationPtrInput {
	return (*certificateAuthorityRevocationConfigurationPtrType)(v)
}

func (*certificateAuthorityRevocationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (i *certificateAuthorityRevocationConfigurationPtrType) ToCertificateAuthorityRevocationConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationPtrOutput {
	return i.ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityRevocationConfigurationPtrType) ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationPtrOutput)
}

type CertificateAuthorityRevocationConfigurationOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityRevocationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityRevocationConfigurationOutput) ToCertificateAuthorityRevocationConfigurationOutput() CertificateAuthorityRevocationConfigurationOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationOutput) ToCertificateAuthorityRevocationConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationOutput) ToCertificateAuthorityRevocationConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationPtrOutput {
	return o.ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityRevocationConfigurationOutput) ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfiguration) *CertificateAuthorityRevocationConfiguration {
		return &v
	}).(CertificateAuthorityRevocationConfigurationPtrOutput)
}

// Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
func (o CertificateAuthorityRevocationConfigurationOutput) CrlConfiguration() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfiguration) *CertificateAuthorityRevocationConfigurationCrlConfiguration {
		return v.CrlConfiguration
	}).(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput)
}

type CertificateAuthorityRevocationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityRevocationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityRevocationConfigurationPtrOutput) ToCertificateAuthorityRevocationConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationPtrOutput) ToCertificateAuthorityRevocationConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationPtrOutput) Elem() CertificateAuthorityRevocationConfigurationOutput {
	return o.ApplyT(func(v *CertificateAuthorityRevocationConfiguration) CertificateAuthorityRevocationConfiguration {
		return *v
	}).(CertificateAuthorityRevocationConfigurationOutput)
}

// Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
func (o CertificateAuthorityRevocationConfigurationPtrOutput) CrlConfiguration() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfiguration) *CertificateAuthorityRevocationConfigurationCrlConfiguration {
		return v.CrlConfiguration
	}).(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput)
}

type CertificateAuthorityRevocationConfigurationCrlConfiguration struct {
	// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
	CustomCname *string `pulumi:"customCname"`
	// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// Number of days until a certificate expires. Must be between 1 and 5000.
	ExpirationInDays int `pulumi:"expirationInDays"`
	// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
	S3BucketName *string `pulumi:"s3BucketName"`
}

// CertificateAuthorityRevocationConfigurationCrlConfigurationInput is an input type that accepts CertificateAuthorityRevocationConfigurationCrlConfigurationArgs and CertificateAuthorityRevocationConfigurationCrlConfigurationOutput values.
// You can construct a concrete instance of `CertificateAuthorityRevocationConfigurationCrlConfigurationInput` via:
//
// 		 CertificateAuthorityRevocationConfigurationCrlConfigurationArgs{...}
//
type CertificateAuthorityRevocationConfigurationCrlConfigurationInput interface {
	pulumi.Input

	ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput
	ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationOutput
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationArgs struct {
	// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
	CustomCname pulumi.StringPtrInput `pulumi:"customCname"`
	// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Number of days until a certificate expires. Must be between 1 and 5000.
	ExpirationInDays pulumi.IntInput `pulumi:"expirationInDays"`
	// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
	S3BucketName pulumi.StringPtrInput `pulumi:"s3BucketName"`
}

func (CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return i.ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(context.Background())
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput)
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return i.ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput).ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx)
}

// CertificateAuthorityRevocationConfigurationCrlConfigurationPtrInput is an input type that accepts CertificateAuthorityRevocationConfigurationCrlConfigurationArgs, CertificateAuthorityRevocationConfigurationCrlConfigurationPtr and CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput values.
// You can construct a concrete instance of `CertificateAuthorityRevocationConfigurationCrlConfigurationPtrInput` via:
//
// 		 CertificateAuthorityRevocationConfigurationCrlConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type CertificateAuthorityRevocationConfigurationCrlConfigurationPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput
	ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput
}

type certificateAuthorityRevocationConfigurationCrlConfigurationPtrType CertificateAuthorityRevocationConfigurationCrlConfigurationArgs

func CertificateAuthorityRevocationConfigurationCrlConfigurationPtr(v *CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrInput {
	return (*certificateAuthorityRevocationConfigurationCrlConfigurationPtrType)(v)
}

func (*certificateAuthorityRevocationConfigurationCrlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (i *certificateAuthorityRevocationConfigurationCrlConfigurationPtrType) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return i.ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityRevocationConfigurationCrlConfigurationPtrType) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput)
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o.ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *CertificateAuthorityRevocationConfigurationCrlConfiguration {
		return &v
	}).(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput)
}

// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) CustomCname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.CustomCname }).(pulumi.StringPtrOutput)
}

// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Number of days until a certificate expires. Must be between 1 and 5000.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ExpirationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) int { return v.ExpirationInDays }).(pulumi.IntOutput)
}

// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.S3BucketName }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) Elem() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o.ApplyT(func(v *CertificateAuthorityRevocationConfigurationCrlConfiguration) CertificateAuthorityRevocationConfigurationCrlConfiguration {
		return *v
	}).(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput)
}

// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) CustomCname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.CustomCname }).(pulumi.StringPtrOutput)
}

// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Number of days until a certificate expires. Must be between 1 and 5000.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ExpirationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) int { return v.ExpirationInDays }).(pulumi.IntOutput)
}

// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.S3BucketName }).(pulumi.StringPtrOutput)
}

type GetCertificateAuthorityRevocationConfiguration struct {
	CrlConfigurations []GetCertificateAuthorityRevocationConfigurationCrlConfiguration `pulumi:"crlConfigurations"`
}

// GetCertificateAuthorityRevocationConfigurationInput is an input type that accepts GetCertificateAuthorityRevocationConfigurationArgs and GetCertificateAuthorityRevocationConfigurationOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityRevocationConfigurationInput` via:
//
// 		 GetCertificateAuthorityRevocationConfigurationArgs{...}
//
type GetCertificateAuthorityRevocationConfigurationInput interface {
	pulumi.Input

	ToGetCertificateAuthorityRevocationConfigurationOutput() GetCertificateAuthorityRevocationConfigurationOutput
	ToGetCertificateAuthorityRevocationConfigurationOutputWithContext(context.Context) GetCertificateAuthorityRevocationConfigurationOutput
}

type GetCertificateAuthorityRevocationConfigurationArgs struct {
	CrlConfigurations GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayInput `pulumi:"crlConfigurations"`
}

func (GetCertificateAuthorityRevocationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (i GetCertificateAuthorityRevocationConfigurationArgs) ToGetCertificateAuthorityRevocationConfigurationOutput() GetCertificateAuthorityRevocationConfigurationOutput {
	return i.ToGetCertificateAuthorityRevocationConfigurationOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityRevocationConfigurationArgs) ToGetCertificateAuthorityRevocationConfigurationOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityRevocationConfigurationOutput)
}

// GetCertificateAuthorityRevocationConfigurationArrayInput is an input type that accepts GetCertificateAuthorityRevocationConfigurationArray and GetCertificateAuthorityRevocationConfigurationArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityRevocationConfigurationArrayInput` via:
//
// 		 GetCertificateAuthorityRevocationConfigurationArray{ GetCertificateAuthorityRevocationConfigurationArgs{...} }
//
type GetCertificateAuthorityRevocationConfigurationArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityRevocationConfigurationArrayOutput() GetCertificateAuthorityRevocationConfigurationArrayOutput
	ToGetCertificateAuthorityRevocationConfigurationArrayOutputWithContext(context.Context) GetCertificateAuthorityRevocationConfigurationArrayOutput
}

type GetCertificateAuthorityRevocationConfigurationArray []GetCertificateAuthorityRevocationConfigurationInput

func (GetCertificateAuthorityRevocationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (i GetCertificateAuthorityRevocationConfigurationArray) ToGetCertificateAuthorityRevocationConfigurationArrayOutput() GetCertificateAuthorityRevocationConfigurationArrayOutput {
	return i.ToGetCertificateAuthorityRevocationConfigurationArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityRevocationConfigurationArray) ToGetCertificateAuthorityRevocationConfigurationArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityRevocationConfigurationArrayOutput)
}

type GetCertificateAuthorityRevocationConfigurationOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityRevocationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (o GetCertificateAuthorityRevocationConfigurationOutput) ToGetCertificateAuthorityRevocationConfigurationOutput() GetCertificateAuthorityRevocationConfigurationOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationOutput) ToGetCertificateAuthorityRevocationConfigurationOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationOutput) CrlConfigurations() GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput {
	return o.ApplyT(func(v GetCertificateAuthorityRevocationConfiguration) []GetCertificateAuthorityRevocationConfigurationCrlConfiguration {
		return v.CrlConfigurations
	}).(GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput)
}

type GetCertificateAuthorityRevocationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityRevocationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityRevocationConfiguration)(nil)).Elem()
}

func (o GetCertificateAuthorityRevocationConfigurationArrayOutput) ToGetCertificateAuthorityRevocationConfigurationArrayOutput() GetCertificateAuthorityRevocationConfigurationArrayOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationArrayOutput) ToGetCertificateAuthorityRevocationConfigurationArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationArrayOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityRevocationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityRevocationConfiguration {
		return vs[0].([]GetCertificateAuthorityRevocationConfiguration)[vs[1].(int)]
	}).(GetCertificateAuthorityRevocationConfigurationOutput)
}

type GetCertificateAuthorityRevocationConfigurationCrlConfiguration struct {
	CustomCname      string `pulumi:"customCname"`
	Enabled          bool   `pulumi:"enabled"`
	ExpirationInDays int    `pulumi:"expirationInDays"`
	S3BucketName     string `pulumi:"s3BucketName"`
}

// GetCertificateAuthorityRevocationConfigurationCrlConfigurationInput is an input type that accepts GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs and GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityRevocationConfigurationCrlConfigurationInput` via:
//
// 		 GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs{...}
//
type GetCertificateAuthorityRevocationConfigurationCrlConfigurationInput interface {
	pulumi.Input

	ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput
	ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(context.Context) GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput
}

type GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs struct {
	CustomCname      pulumi.StringInput `pulumi:"customCname"`
	Enabled          pulumi.BoolInput   `pulumi:"enabled"`
	ExpirationInDays pulumi.IntInput    `pulumi:"expirationInDays"`
	S3BucketName     pulumi.StringInput `pulumi:"s3BucketName"`
}

func (GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (i GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return i.ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput)
}

// GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayInput is an input type that accepts GetCertificateAuthorityRevocationConfigurationCrlConfigurationArray and GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput values.
// You can construct a concrete instance of `GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayInput` via:
//
// 		 GetCertificateAuthorityRevocationConfigurationCrlConfigurationArray{ GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs{...} }
//
type GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayInput interface {
	pulumi.Input

	ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput() GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput
	ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutputWithContext(context.Context) GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput
}

type GetCertificateAuthorityRevocationConfigurationCrlConfigurationArray []GetCertificateAuthorityRevocationConfigurationCrlConfigurationInput

func (GetCertificateAuthorityRevocationConfigurationCrlConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (i GetCertificateAuthorityRevocationConfigurationCrlConfigurationArray) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput() GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput {
	return i.ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutputWithContext(context.Background())
}

func (i GetCertificateAuthorityRevocationConfigurationCrlConfigurationArray) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput)
}

type GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput) CustomCname() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityRevocationConfigurationCrlConfiguration) string { return v.CustomCname }).(pulumi.StringOutput)
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCertificateAuthorityRevocationConfigurationCrlConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ExpirationInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetCertificateAuthorityRevocationConfigurationCrlConfiguration) int { return v.ExpirationInDays }).(pulumi.IntOutput)
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateAuthorityRevocationConfigurationCrlConfiguration) string { return v.S3BucketName }).(pulumi.StringOutput)
}

type GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput() GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput) ToGetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutputWithContext(ctx context.Context) GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput {
	return o
}

func (o GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput) Index(i pulumi.IntInput) GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateAuthorityRevocationConfigurationCrlConfiguration {
		return vs[0].([]GetCertificateAuthorityRevocationConfigurationCrlConfiguration)[vs[1].(int)]
	}).(GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigurationOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityCertificateAuthorityConfigurationSubjectOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityRevocationConfigurationOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityRevocationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityRevocationConfigurationOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityRevocationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityRevocationConfigurationCrlConfigurationOutput{})
	pulumi.RegisterOutputType(GetCertificateAuthorityRevocationConfigurationCrlConfigurationArrayOutput{})
}
