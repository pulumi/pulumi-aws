// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package acmpca

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get information on a Certificate issued by a AWS Certificate Manager Private Certificate Authority.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/acmpca"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := acmpca.LookupCertificate(ctx, &acmpca.LookupCertificateArgs{
// 			Arn:                     "arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/1234b4a0d73e2056789bdbe77d5b1a23",
// 			CertificateAuthorityArn: "arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupCertificate(ctx *pulumi.Context, args *LookupCertificateArgs, opts ...pulumi.InvokeOption) (*LookupCertificateResult, error) {
	var rv LookupCertificateResult
	err := ctx.Invoke("aws:acmpca/getCertificate:getCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificate.
type LookupCertificateArgs struct {
	// Amazon Resource Name (ARN) of the certificate issued by the private certificate authority.
	Arn string `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the certificate authority.
	CertificateAuthorityArn string `pulumi:"certificateAuthorityArn"`
}

// A collection of values returned by getCertificate.
type LookupCertificateResult struct {
	Arn string `pulumi:"arn"`
	// The PEM-encoded certificate value.
	Certificate             string `pulumi:"certificate"`
	CertificateAuthorityArn string `pulumi:"certificateAuthorityArn"`
	// The PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA.
	CertificateChain string `pulumi:"certificateChain"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}
