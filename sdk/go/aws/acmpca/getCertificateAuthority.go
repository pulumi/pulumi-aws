// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package acmpca

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Get information on a AWS Certificate Manager Private Certificate Authority (ACM PCA Certificate Authority).
func LookupertificateAuthority(ctx *pulumi.Context, args *GetCertificateAuthorityArgs) (*GetCertificateAuthorityResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["arn"] = args.Arn
		inputs["revocationConfigurations"] = args.RevocationConfigurations
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("aws:acmpca/getCertificateAuthority:getCertificateAuthority", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetCertificateAuthorityResult{}
	if v, ok := outputs["certificate"]; ok {
		ret.Certificate = v
	}
	if v, ok := outputs["certificateChain"]; ok {
		ret.CertificateChain = v
	}
	if v, ok := outputs["certificateSigningRequest"]; ok {
		ret.CertificateSigningRequest = v
	}
	if v, ok := outputs["notAfter"]; ok {
		ret.NotAfter = v
	}
	if v, ok := outputs["notBefore"]; ok {
		ret.NotBefore = v
	}
	if v, ok := outputs["revocationConfigurations"]; ok {
		ret.RevocationConfigurations = v
	}
	if v, ok := outputs["serial"]; ok {
		ret.Serial = v
	}
	if v, ok := outputs["status"]; ok {
		ret.Status = v
	}
	if v, ok := outputs["tags"]; ok {
		ret.Tags = v
	}
	if v, ok := outputs["type"]; ok {
		ret.Type = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getCertificateAuthority.
type GetCertificateAuthorityArgs struct {
	// Amazon Resource Name (ARN) of the certificate authority.
	Arn interface{}
	RevocationConfigurations interface{}
	Tags interface{}
}

// A collection of values returned by getCertificateAuthority.
type GetCertificateAuthorityResult struct {
	// Base64-encoded certificate authority (CA) certificate. Only available after the certificate authority certificate has been imported.
	Certificate interface{}
	// Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. Only available after the certificate authority certificate has been imported.
	CertificateChain interface{}
	// The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.
	CertificateSigningRequest interface{}
	// Date and time after which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.
	NotAfter interface{}
	// Date and time before which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.
	NotBefore interface{}
	// Nested attribute containing revocation configuration.
	// * `revocation_configuration.0.crl_configuration` - Nested attribute containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority.
	// * `revocation_configuration.0.crl_configuration.0.custom_cname` - Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point.
	// * `revocation_configuration.0.crl_configuration.0.enabled` - Boolean value that specifies whether certificate revocation lists (CRLs) are enabled.
	// * `revocation_configuration.0.crl_configuration.0.expiration_in_days` - Number of days until a certificate expires.
	// * `revocation_configuration.0.crl_configuration.0.s3_bucket_name` - Name of the S3 bucket that contains the CRL.
	RevocationConfigurations interface{}
	// Serial number of the certificate authority. Only available after the certificate authority certificate has been imported.
	Serial interface{}
	// Status of the certificate authority.
	Status interface{}
	// Specifies a key-value map of user-defined tags that are attached to the certificate authority.
	Tags interface{}
	// The type of the certificate authority.
	Type interface{}
}
