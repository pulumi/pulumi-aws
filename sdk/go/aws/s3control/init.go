// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:s3control/accessPointPolicy:AccessPointPolicy":
		r = &AccessPointPolicy{}
	case "aws:s3control/bucket:Bucket":
		r = &Bucket{}
	case "aws:s3control/bucketLifecycleConfiguration:BucketLifecycleConfiguration":
		r = &BucketLifecycleConfiguration{}
	case "aws:s3control/bucketPolicy:BucketPolicy":
		r = &BucketPolicy{}
	case "aws:s3control/multiRegionAccessPoint:MultiRegionAccessPoint":
		r = &MultiRegionAccessPoint{}
	case "aws:s3control/multiRegionAccessPointPolicy:MultiRegionAccessPointPolicy":
		r = &MultiRegionAccessPointPolicy{}
	case "aws:s3control/objectLambdaAccessPoint:ObjectLambdaAccessPoint":
		r = &ObjectLambdaAccessPoint{}
	case "aws:s3control/objectLambdaAccessPointPolicy:ObjectLambdaAccessPointPolicy":
		r = &ObjectLambdaAccessPointPolicy{}
	case "aws:s3control/storageLensConfiguration:StorageLensConfiguration":
		r = &StorageLensConfiguration{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := aws.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/accessPointPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/bucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/bucketLifecycleConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/bucketPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/multiRegionAccessPoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/multiRegionAccessPointPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/objectLambdaAccessPoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/objectLambdaAccessPointPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"s3control/storageLensConfiguration",
		&module{version},
	)
}
