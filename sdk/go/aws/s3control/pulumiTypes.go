// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BucketLifecycleConfigurationRule struct {
	// Configuration block containing settings for abort incomplete multipart upload.
	AbortIncompleteMultipartUpload *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUpload"`
	// Configuration block containing settings for expiration of objects.
	Expiration *BucketLifecycleConfigurationRuleExpiration `pulumi:"expiration"`
	// Configuration block containing settings for filtering.
	Filter *BucketLifecycleConfigurationRuleFilter `pulumi:"filter"`
	// Unique identifier for the rule.
	Id string `pulumi:"id"`
	// Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
	Status *string `pulumi:"status"`
}

// BucketLifecycleConfigurationRuleInput is an input type that accepts BucketLifecycleConfigurationRuleArgs and BucketLifecycleConfigurationRuleOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleInput` via:
//
//          BucketLifecycleConfigurationRuleArgs{...}
type BucketLifecycleConfigurationRuleInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleOutput() BucketLifecycleConfigurationRuleOutput
	ToBucketLifecycleConfigurationRuleOutputWithContext(context.Context) BucketLifecycleConfigurationRuleOutput
}

type BucketLifecycleConfigurationRuleArgs struct {
	// Configuration block containing settings for abort incomplete multipart upload.
	AbortIncompleteMultipartUpload BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrInput `pulumi:"abortIncompleteMultipartUpload"`
	// Configuration block containing settings for expiration of objects.
	Expiration BucketLifecycleConfigurationRuleExpirationPtrInput `pulumi:"expiration"`
	// Configuration block containing settings for filtering.
	Filter BucketLifecycleConfigurationRuleFilterPtrInput `pulumi:"filter"`
	// Unique identifier for the rule.
	Id pulumi.StringInput `pulumi:"id"`
	// Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BucketLifecycleConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRule)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleArgs) ToBucketLifecycleConfigurationRuleOutput() BucketLifecycleConfigurationRuleOutput {
	return i.ToBucketLifecycleConfigurationRuleOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleArgs) ToBucketLifecycleConfigurationRuleOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleOutput)
}

// BucketLifecycleConfigurationRuleArrayInput is an input type that accepts BucketLifecycleConfigurationRuleArray and BucketLifecycleConfigurationRuleArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleArrayInput` via:
//
//          BucketLifecycleConfigurationRuleArray{ BucketLifecycleConfigurationRuleArgs{...} }
type BucketLifecycleConfigurationRuleArrayInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleArrayOutput() BucketLifecycleConfigurationRuleArrayOutput
	ToBucketLifecycleConfigurationRuleArrayOutputWithContext(context.Context) BucketLifecycleConfigurationRuleArrayOutput
}

type BucketLifecycleConfigurationRuleArray []BucketLifecycleConfigurationRuleInput

func (BucketLifecycleConfigurationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigurationRule)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleArray) ToBucketLifecycleConfigurationRuleArrayOutput() BucketLifecycleConfigurationRuleArrayOutput {
	return i.ToBucketLifecycleConfigurationRuleArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleArray) ToBucketLifecycleConfigurationRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleArrayOutput)
}

type BucketLifecycleConfigurationRuleOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRule)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleOutput) ToBucketLifecycleConfigurationRuleOutput() BucketLifecycleConfigurationRuleOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleOutput) ToBucketLifecycleConfigurationRuleOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleOutput {
	return o
}

// Configuration block containing settings for abort incomplete multipart upload.
func (o BucketLifecycleConfigurationRuleOutput) AbortIncompleteMultipartUpload() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRule) *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload {
		return v.AbortIncompleteMultipartUpload
	}).(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput)
}

// Configuration block containing settings for expiration of objects.
func (o BucketLifecycleConfigurationRuleOutput) Expiration() BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRule) *BucketLifecycleConfigurationRuleExpiration {
		return v.Expiration
	}).(BucketLifecycleConfigurationRuleExpirationPtrOutput)
}

// Configuration block containing settings for filtering.
func (o BucketLifecycleConfigurationRuleOutput) Filter() BucketLifecycleConfigurationRuleFilterPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRule) *BucketLifecycleConfigurationRuleFilter { return v.Filter }).(BucketLifecycleConfigurationRuleFilterPtrOutput)
}

// Unique identifier for the rule.
func (o BucketLifecycleConfigurationRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRule) string { return v.Id }).(pulumi.StringOutput)
}

// Status of the rule. Valid values: `Enabled` and `Disabled`. Defaults to `Enabled`.
func (o BucketLifecycleConfigurationRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BucketLifecycleConfigurationRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigurationRule)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleArrayOutput) ToBucketLifecycleConfigurationRuleArrayOutput() BucketLifecycleConfigurationRuleArrayOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleArrayOutput) ToBucketLifecycleConfigurationRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleArrayOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleArrayOutput) Index(i pulumi.IntInput) BucketLifecycleConfigurationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleConfigurationRule {
		return vs[0].([]BucketLifecycleConfigurationRule)[vs[1].(int)]
	}).(BucketLifecycleConfigurationRuleOutput)
}

type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload struct {
	// Number of days after which Amazon S3 aborts an incomplete multipart upload.
	DaysAfterInitiation int `pulumi:"daysAfterInitiation"`
}

// BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadInput is an input type that accepts BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs and BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadInput` via:
//
//          BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs{...}
type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput
	ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutputWithContext(context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput
}

type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs struct {
	// Number of days after which Amazon S3 aborts an incomplete multipart upload.
	DaysAfterInitiation pulumi.IntInput `pulumi:"daysAfterInitiation"`
}

func (BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return i.ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput)
}

func (i BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return i.ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput).ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrInput is an input type that accepts BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs, BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtr and BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrInput` via:
//
//          BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs{...}
//
//  or:
//
//          nil
type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput
	ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput
}

type bucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrType BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs

func BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtr(v *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrInput {
	return (*bucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrType)(v)
}

func (*bucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i *bucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrType) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return i.ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrType) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput)
}

type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return o.ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload) *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload {
		return &v
	}).(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput)
}

// Number of days after which Amazon S3 aborts an incomplete multipart upload.
func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput) DaysAfterInitiation() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload) int {
		return v.DaysAfterInitiation
	}).(pulumi.IntOutput)
}

type BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput) ToBucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput) Elem() BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload) BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload {
		return *v
	}).(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput)
}

// Number of days after which Amazon S3 aborts an incomplete multipart upload.
func (o BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput) DaysAfterInitiation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterInitiation
	}).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigurationRuleExpiration struct {
	// Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g. `2020-09-30`.
	Date *string `pulumi:"date"`
	// Number of days before the object is to be deleted.
	Days *int `pulumi:"days"`
	// Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
}

// BucketLifecycleConfigurationRuleExpirationInput is an input type that accepts BucketLifecycleConfigurationRuleExpirationArgs and BucketLifecycleConfigurationRuleExpirationOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleExpirationInput` via:
//
//          BucketLifecycleConfigurationRuleExpirationArgs{...}
type BucketLifecycleConfigurationRuleExpirationInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleExpirationOutput() BucketLifecycleConfigurationRuleExpirationOutput
	ToBucketLifecycleConfigurationRuleExpirationOutputWithContext(context.Context) BucketLifecycleConfigurationRuleExpirationOutput
}

type BucketLifecycleConfigurationRuleExpirationArgs struct {
	// Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g. `2020-09-30`.
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Number of days before the object is to be deleted.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
}

func (BucketLifecycleConfigurationRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleExpiration)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleExpirationArgs) ToBucketLifecycleConfigurationRuleExpirationOutput() BucketLifecycleConfigurationRuleExpirationOutput {
	return i.ToBucketLifecycleConfigurationRuleExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleExpirationArgs) ToBucketLifecycleConfigurationRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleExpirationOutput)
}

func (i BucketLifecycleConfigurationRuleExpirationArgs) ToBucketLifecycleConfigurationRuleExpirationPtrOutput() BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return i.ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleExpirationArgs) ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleExpirationOutput).ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigurationRuleExpirationPtrInput is an input type that accepts BucketLifecycleConfigurationRuleExpirationArgs, BucketLifecycleConfigurationRuleExpirationPtr and BucketLifecycleConfigurationRuleExpirationPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleExpirationPtrInput` via:
//
//          BucketLifecycleConfigurationRuleExpirationArgs{...}
//
//  or:
//
//          nil
type BucketLifecycleConfigurationRuleExpirationPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleExpirationPtrOutput() BucketLifecycleConfigurationRuleExpirationPtrOutput
	ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(context.Context) BucketLifecycleConfigurationRuleExpirationPtrOutput
}

type bucketLifecycleConfigurationRuleExpirationPtrType BucketLifecycleConfigurationRuleExpirationArgs

func BucketLifecycleConfigurationRuleExpirationPtr(v *BucketLifecycleConfigurationRuleExpirationArgs) BucketLifecycleConfigurationRuleExpirationPtrInput {
	return (*bucketLifecycleConfigurationRuleExpirationPtrType)(v)
}

func (*bucketLifecycleConfigurationRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationRuleExpiration)(nil)).Elem()
}

func (i *bucketLifecycleConfigurationRuleExpirationPtrType) ToBucketLifecycleConfigurationRuleExpirationPtrOutput() BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return i.ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigurationRuleExpirationPtrType) ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleExpirationPtrOutput)
}

type BucketLifecycleConfigurationRuleExpirationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleExpiration)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleExpirationOutput) ToBucketLifecycleConfigurationRuleExpirationOutput() BucketLifecycleConfigurationRuleExpirationOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleExpirationOutput) ToBucketLifecycleConfigurationRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleExpirationOutput) ToBucketLifecycleConfigurationRuleExpirationPtrOutput() BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return o.ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigurationRuleExpirationOutput) ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleExpiration) *BucketLifecycleConfigurationRuleExpiration {
		return &v
	}).(BucketLifecycleConfigurationRuleExpirationPtrOutput)
}

// Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g. `2020-09-30`.
func (o BucketLifecycleConfigurationRuleExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Number of days before the object is to be deleted.
func (o BucketLifecycleConfigurationRuleExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
func (o BucketLifecycleConfigurationRuleExpirationOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

type BucketLifecycleConfigurationRuleExpirationPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationRuleExpiration)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleExpirationPtrOutput) ToBucketLifecycleConfigurationRuleExpirationPtrOutput() BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleExpirationPtrOutput) ToBucketLifecycleConfigurationRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleExpirationPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleExpirationPtrOutput) Elem() BucketLifecycleConfigurationRuleExpirationOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleExpiration) BucketLifecycleConfigurationRuleExpiration {
		return *v
	}).(BucketLifecycleConfigurationRuleExpirationOutput)
}

// Date the object is to be deleted. Should be in `YYYY-MM-DD` date format, e.g. `2020-09-30`.
func (o BucketLifecycleConfigurationRuleExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Number of days before the object is to be deleted.
func (o BucketLifecycleConfigurationRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Enable to remove a delete marker with no noncurrent versions. Cannot be specified with `date` or `days`.
func (o BucketLifecycleConfigurationRuleExpirationPtrOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleExpiration) *bool {
		if v == nil {
			return nil
		}
		return v.ExpiredObjectDeleteMarker
	}).(pulumi.BoolPtrOutput)
}

type BucketLifecycleConfigurationRuleFilter struct {
	// Object prefix for rule filtering.
	Prefix *string `pulumi:"prefix"`
	// Key-value map of object tags for rule filtering.
	Tags map[string]string `pulumi:"tags"`
}

// BucketLifecycleConfigurationRuleFilterInput is an input type that accepts BucketLifecycleConfigurationRuleFilterArgs and BucketLifecycleConfigurationRuleFilterOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleFilterInput` via:
//
//          BucketLifecycleConfigurationRuleFilterArgs{...}
type BucketLifecycleConfigurationRuleFilterInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleFilterOutput() BucketLifecycleConfigurationRuleFilterOutput
	ToBucketLifecycleConfigurationRuleFilterOutputWithContext(context.Context) BucketLifecycleConfigurationRuleFilterOutput
}

type BucketLifecycleConfigurationRuleFilterArgs struct {
	// Object prefix for rule filtering.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Key-value map of object tags for rule filtering.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (BucketLifecycleConfigurationRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleFilter)(nil)).Elem()
}

func (i BucketLifecycleConfigurationRuleFilterArgs) ToBucketLifecycleConfigurationRuleFilterOutput() BucketLifecycleConfigurationRuleFilterOutput {
	return i.ToBucketLifecycleConfigurationRuleFilterOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleFilterArgs) ToBucketLifecycleConfigurationRuleFilterOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleFilterOutput)
}

func (i BucketLifecycleConfigurationRuleFilterArgs) ToBucketLifecycleConfigurationRuleFilterPtrOutput() BucketLifecycleConfigurationRuleFilterPtrOutput {
	return i.ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationRuleFilterArgs) ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleFilterOutput).ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigurationRuleFilterPtrInput is an input type that accepts BucketLifecycleConfigurationRuleFilterArgs, BucketLifecycleConfigurationRuleFilterPtr and BucketLifecycleConfigurationRuleFilterPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationRuleFilterPtrInput` via:
//
//          BucketLifecycleConfigurationRuleFilterArgs{...}
//
//  or:
//
//          nil
type BucketLifecycleConfigurationRuleFilterPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationRuleFilterPtrOutput() BucketLifecycleConfigurationRuleFilterPtrOutput
	ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(context.Context) BucketLifecycleConfigurationRuleFilterPtrOutput
}

type bucketLifecycleConfigurationRuleFilterPtrType BucketLifecycleConfigurationRuleFilterArgs

func BucketLifecycleConfigurationRuleFilterPtr(v *BucketLifecycleConfigurationRuleFilterArgs) BucketLifecycleConfigurationRuleFilterPtrInput {
	return (*bucketLifecycleConfigurationRuleFilterPtrType)(v)
}

func (*bucketLifecycleConfigurationRuleFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationRuleFilter)(nil)).Elem()
}

func (i *bucketLifecycleConfigurationRuleFilterPtrType) ToBucketLifecycleConfigurationRuleFilterPtrOutput() BucketLifecycleConfigurationRuleFilterPtrOutput {
	return i.ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigurationRuleFilterPtrType) ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationRuleFilterPtrOutput)
}

type BucketLifecycleConfigurationRuleFilterOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigurationRuleFilter)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleFilterOutput) ToBucketLifecycleConfigurationRuleFilterOutput() BucketLifecycleConfigurationRuleFilterOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleFilterOutput) ToBucketLifecycleConfigurationRuleFilterOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleFilterOutput) ToBucketLifecycleConfigurationRuleFilterPtrOutput() BucketLifecycleConfigurationRuleFilterPtrOutput {
	return o.ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigurationRuleFilterOutput) ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleFilter) *BucketLifecycleConfigurationRuleFilter {
		return &v
	}).(BucketLifecycleConfigurationRuleFilterPtrOutput)
}

// Object prefix for rule filtering.
func (o BucketLifecycleConfigurationRuleFilterOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Key-value map of object tags for rule filtering.
func (o BucketLifecycleConfigurationRuleFilterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v BucketLifecycleConfigurationRuleFilter) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type BucketLifecycleConfigurationRuleFilterPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationRuleFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationRuleFilter)(nil)).Elem()
}

func (o BucketLifecycleConfigurationRuleFilterPtrOutput) ToBucketLifecycleConfigurationRuleFilterPtrOutput() BucketLifecycleConfigurationRuleFilterPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleFilterPtrOutput) ToBucketLifecycleConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationRuleFilterPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationRuleFilterPtrOutput) Elem() BucketLifecycleConfigurationRuleFilterOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleFilter) BucketLifecycleConfigurationRuleFilter { return *v }).(BucketLifecycleConfigurationRuleFilterOutput)
}

// Object prefix for rule filtering.
func (o BucketLifecycleConfigurationRuleFilterPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleFilter) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Key-value map of object tags for rule filtering.
func (o BucketLifecycleConfigurationRuleFilterPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigurationRuleFilter) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleFilterOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationRuleFilterPtrOutput{})
}
