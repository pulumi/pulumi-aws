// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMultiRegionAccessPoint(ctx *pulumi.Context, args *LookupMultiRegionAccessPointArgs, opts ...pulumi.InvokeOption) (*LookupMultiRegionAccessPointResult, error) {
	var rv LookupMultiRegionAccessPointResult
	err := ctx.Invoke("aws:s3control/getMultiRegionAccessPoint:getMultiRegionAccessPoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMultiRegionAccessPoint.
type LookupMultiRegionAccessPointArgs struct {
	AccountId *string `pulumi:"accountId"`
	Name      string  `pulumi:"name"`
}

// A collection of values returned by getMultiRegionAccessPoint.
type LookupMultiRegionAccessPointResult struct {
	AccountId  string `pulumi:"accountId"`
	Alias      string `pulumi:"alias"`
	Arn        string `pulumi:"arn"`
	CreatedAt  string `pulumi:"createdAt"`
	DomainName string `pulumi:"domainName"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string                                       `pulumi:"id"`
	Name               string                                       `pulumi:"name"`
	PublicAccessBlocks []GetMultiRegionAccessPointPublicAccessBlock `pulumi:"publicAccessBlocks"`
	Regions            []GetMultiRegionAccessPointRegion            `pulumi:"regions"`
	Status             string                                       `pulumi:"status"`
}

func LookupMultiRegionAccessPointOutput(ctx *pulumi.Context, args LookupMultiRegionAccessPointOutputArgs, opts ...pulumi.InvokeOption) LookupMultiRegionAccessPointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMultiRegionAccessPointResult, error) {
			args := v.(LookupMultiRegionAccessPointArgs)
			r, err := LookupMultiRegionAccessPoint(ctx, &args, opts...)
			var s LookupMultiRegionAccessPointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMultiRegionAccessPointResultOutput)
}

// A collection of arguments for invoking getMultiRegionAccessPoint.
type LookupMultiRegionAccessPointOutputArgs struct {
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	Name      pulumi.StringInput    `pulumi:"name"`
}

func (LookupMultiRegionAccessPointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMultiRegionAccessPointArgs)(nil)).Elem()
}

// A collection of values returned by getMultiRegionAccessPoint.
type LookupMultiRegionAccessPointResultOutput struct{ *pulumi.OutputState }

func (LookupMultiRegionAccessPointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMultiRegionAccessPointResult)(nil)).Elem()
}

func (o LookupMultiRegionAccessPointResultOutput) ToLookupMultiRegionAccessPointResultOutput() LookupMultiRegionAccessPointResultOutput {
	return o
}

func (o LookupMultiRegionAccessPointResultOutput) ToLookupMultiRegionAccessPointResultOutputWithContext(ctx context.Context) LookupMultiRegionAccessPointResultOutput {
	return o
}

func (o LookupMultiRegionAccessPointResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.Alias }).(pulumi.StringOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMultiRegionAccessPointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) PublicAccessBlocks() GetMultiRegionAccessPointPublicAccessBlockArrayOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) []GetMultiRegionAccessPointPublicAccessBlock {
		return v.PublicAccessBlocks
	}).(GetMultiRegionAccessPointPublicAccessBlockArrayOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) Regions() GetMultiRegionAccessPointRegionArrayOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) []GetMultiRegionAccessPointRegion { return v.Regions }).(GetMultiRegionAccessPointRegionArrayOutput)
}

func (o LookupMultiRegionAccessPointResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMultiRegionAccessPointResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMultiRegionAccessPointResultOutput{})
}
