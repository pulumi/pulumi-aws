// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessPointPolicy struct {
	pulumi.CustomResourceState

	AccessPointArn        pulumi.StringOutput `pulumi:"accessPointArn"`
	HasPublicAccessPolicy pulumi.BoolOutput   `pulumi:"hasPublicAccessPolicy"`
	Policy                pulumi.StringOutput `pulumi:"policy"`
}

// NewAccessPointPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccessPointPolicy(ctx *pulumi.Context,
	name string, args *AccessPointPolicyArgs, opts ...pulumi.ResourceOption) (*AccessPointPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessPointArn == nil {
		return nil, errors.New("invalid value for required argument 'AccessPointArn'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	var resource AccessPointPolicy
	err := ctx.RegisterResource("aws:s3control/accessPointPolicy:AccessPointPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessPointPolicy gets an existing AccessPointPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessPointPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessPointPolicyState, opts ...pulumi.ResourceOption) (*AccessPointPolicy, error) {
	var resource AccessPointPolicy
	err := ctx.ReadResource("aws:s3control/accessPointPolicy:AccessPointPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessPointPolicy resources.
type accessPointPolicyState struct {
	AccessPointArn        *string `pulumi:"accessPointArn"`
	HasPublicAccessPolicy *bool   `pulumi:"hasPublicAccessPolicy"`
	Policy                *string `pulumi:"policy"`
}

type AccessPointPolicyState struct {
	AccessPointArn        pulumi.StringPtrInput
	HasPublicAccessPolicy pulumi.BoolPtrInput
	Policy                pulumi.StringPtrInput
}

func (AccessPointPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointPolicyState)(nil)).Elem()
}

type accessPointPolicyArgs struct {
	AccessPointArn string `pulumi:"accessPointArn"`
	Policy         string `pulumi:"policy"`
}

// The set of arguments for constructing a AccessPointPolicy resource.
type AccessPointPolicyArgs struct {
	AccessPointArn pulumi.StringInput
	Policy         pulumi.StringInput
}

func (AccessPointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointPolicyArgs)(nil)).Elem()
}

type AccessPointPolicyInput interface {
	pulumi.Input

	ToAccessPointPolicyOutput() AccessPointPolicyOutput
	ToAccessPointPolicyOutputWithContext(ctx context.Context) AccessPointPolicyOutput
}

func (*AccessPointPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointPolicy)(nil)).Elem()
}

func (i *AccessPointPolicy) ToAccessPointPolicyOutput() AccessPointPolicyOutput {
	return i.ToAccessPointPolicyOutputWithContext(context.Background())
}

func (i *AccessPointPolicy) ToAccessPointPolicyOutputWithContext(ctx context.Context) AccessPointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPolicyOutput)
}

// AccessPointPolicyArrayInput is an input type that accepts AccessPointPolicyArray and AccessPointPolicyArrayOutput values.
// You can construct a concrete instance of `AccessPointPolicyArrayInput` via:
//
//	AccessPointPolicyArray{ AccessPointPolicyArgs{...} }
type AccessPointPolicyArrayInput interface {
	pulumi.Input

	ToAccessPointPolicyArrayOutput() AccessPointPolicyArrayOutput
	ToAccessPointPolicyArrayOutputWithContext(context.Context) AccessPointPolicyArrayOutput
}

type AccessPointPolicyArray []AccessPointPolicyInput

func (AccessPointPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessPointPolicy)(nil)).Elem()
}

func (i AccessPointPolicyArray) ToAccessPointPolicyArrayOutput() AccessPointPolicyArrayOutput {
	return i.ToAccessPointPolicyArrayOutputWithContext(context.Background())
}

func (i AccessPointPolicyArray) ToAccessPointPolicyArrayOutputWithContext(ctx context.Context) AccessPointPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPolicyArrayOutput)
}

// AccessPointPolicyMapInput is an input type that accepts AccessPointPolicyMap and AccessPointPolicyMapOutput values.
// You can construct a concrete instance of `AccessPointPolicyMapInput` via:
//
//	AccessPointPolicyMap{ "key": AccessPointPolicyArgs{...} }
type AccessPointPolicyMapInput interface {
	pulumi.Input

	ToAccessPointPolicyMapOutput() AccessPointPolicyMapOutput
	ToAccessPointPolicyMapOutputWithContext(context.Context) AccessPointPolicyMapOutput
}

type AccessPointPolicyMap map[string]AccessPointPolicyInput

func (AccessPointPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessPointPolicy)(nil)).Elem()
}

func (i AccessPointPolicyMap) ToAccessPointPolicyMapOutput() AccessPointPolicyMapOutput {
	return i.ToAccessPointPolicyMapOutputWithContext(context.Background())
}

func (i AccessPointPolicyMap) ToAccessPointPolicyMapOutputWithContext(ctx context.Context) AccessPointPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPolicyMapOutput)
}

type AccessPointPolicyOutput struct{ *pulumi.OutputState }

func (AccessPointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointPolicy)(nil)).Elem()
}

func (o AccessPointPolicyOutput) ToAccessPointPolicyOutput() AccessPointPolicyOutput {
	return o
}

func (o AccessPointPolicyOutput) ToAccessPointPolicyOutputWithContext(ctx context.Context) AccessPointPolicyOutput {
	return o
}

func (o AccessPointPolicyOutput) AccessPointArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessPointPolicy) pulumi.StringOutput { return v.AccessPointArn }).(pulumi.StringOutput)
}

func (o AccessPointPolicyOutput) HasPublicAccessPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccessPointPolicy) pulumi.BoolOutput { return v.HasPublicAccessPolicy }).(pulumi.BoolOutput)
}

func (o AccessPointPolicyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessPointPolicy) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

type AccessPointPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccessPointPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessPointPolicy)(nil)).Elem()
}

func (o AccessPointPolicyArrayOutput) ToAccessPointPolicyArrayOutput() AccessPointPolicyArrayOutput {
	return o
}

func (o AccessPointPolicyArrayOutput) ToAccessPointPolicyArrayOutputWithContext(ctx context.Context) AccessPointPolicyArrayOutput {
	return o
}

func (o AccessPointPolicyArrayOutput) Index(i pulumi.IntInput) AccessPointPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessPointPolicy {
		return vs[0].([]*AccessPointPolicy)[vs[1].(int)]
	}).(AccessPointPolicyOutput)
}

type AccessPointPolicyMapOutput struct{ *pulumi.OutputState }

func (AccessPointPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessPointPolicy)(nil)).Elem()
}

func (o AccessPointPolicyMapOutput) ToAccessPointPolicyMapOutput() AccessPointPolicyMapOutput {
	return o
}

func (o AccessPointPolicyMapOutput) ToAccessPointPolicyMapOutputWithContext(ctx context.Context) AccessPointPolicyMapOutput {
	return o
}

func (o AccessPointPolicyMapOutput) MapIndex(k pulumi.StringInput) AccessPointPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessPointPolicy {
		return vs[0].(map[string]*AccessPointPolicy)[vs[1].(string)]
	}).(AccessPointPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointPolicyInput)(nil)).Elem(), &AccessPointPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointPolicyArrayInput)(nil)).Elem(), AccessPointPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointPolicyMapInput)(nil)).Elem(), AccessPointPolicyMap{})
	pulumi.RegisterOutputType(AccessPointPolicyOutput{})
	pulumi.RegisterOutputType(AccessPointPolicyArrayOutput{})
	pulumi.RegisterOutputType(AccessPointPolicyMapOutput{})
}
