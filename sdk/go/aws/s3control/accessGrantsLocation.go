// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage an S3 Access Grants location.
// A location is an S3 resource (bucket or prefix) in a permission grant that the grantee can access.
// The S3 data must be in the same Region as your S3 Access Grants instance.
// When you register a location, you must include the IAM role that has permission to manage the S3 location that you are registering.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/s3control"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleAccessGrantsInstance, err := s3control.NewAccessGrantsInstance(ctx, "exampleAccessGrantsInstance", nil)
//			if err != nil {
//				return err
//			}
//			_, err = s3control.NewAccessGrantsLocation(ctx, "exampleAccessGrantsLocation", &s3control.AccessGrantsLocationArgs{
//				IamRoleArn:    pulumi.Any(aws_iam_role.Example.Arn),
//				LocationScope: pulumi.String("s3://"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleAccessGrantsInstance,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import S3 Access Grants locations using the `account_id` and `access_grants_location_id`, separated by a comma (`,`). For example:
//
// ```sh
//
//	$ pulumi import aws:s3control/accessGrantsLocation:AccessGrantsLocation example 123456789012,default
//
// ```
type AccessGrantsLocation struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the S3 Access Grants location.
	AccessGrantsLocationArn pulumi.StringOutput `pulumi:"accessGrantsLocationArn"`
	// Unique ID of the S3 Access Grants location.
	AccessGrantsLocationId pulumi.StringOutput `pulumi:"accessGrantsLocationId"`
	AccountId              pulumi.StringOutput `pulumi:"accountId"`
	// The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
	// requests to the location.
	IamRoleArn pulumi.StringOutput `pulumi:"iamRoleArn"`
	// The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
	LocationScope pulumi.StringOutput `pulumi:"locationScope"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewAccessGrantsLocation registers a new resource with the given unique name, arguments, and options.
func NewAccessGrantsLocation(ctx *pulumi.Context,
	name string, args *AccessGrantsLocationArgs, opts ...pulumi.ResourceOption) (*AccessGrantsLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IamRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'IamRoleArn'")
	}
	if args.LocationScope == nil {
		return nil, errors.New("invalid value for required argument 'LocationScope'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessGrantsLocation
	err := ctx.RegisterResource("aws:s3control/accessGrantsLocation:AccessGrantsLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessGrantsLocation gets an existing AccessGrantsLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessGrantsLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessGrantsLocationState, opts ...pulumi.ResourceOption) (*AccessGrantsLocation, error) {
	var resource AccessGrantsLocation
	err := ctx.ReadResource("aws:s3control/accessGrantsLocation:AccessGrantsLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessGrantsLocation resources.
type accessGrantsLocationState struct {
	// Amazon Resource Name (ARN) of the S3 Access Grants location.
	AccessGrantsLocationArn *string `pulumi:"accessGrantsLocationArn"`
	// Unique ID of the S3 Access Grants location.
	AccessGrantsLocationId *string `pulumi:"accessGrantsLocationId"`
	AccountId              *string `pulumi:"accountId"`
	// The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
	// requests to the location.
	IamRoleArn *string `pulumi:"iamRoleArn"`
	// The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
	LocationScope *string `pulumi:"locationScope"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type AccessGrantsLocationState struct {
	// Amazon Resource Name (ARN) of the S3 Access Grants location.
	AccessGrantsLocationArn pulumi.StringPtrInput
	// Unique ID of the S3 Access Grants location.
	AccessGrantsLocationId pulumi.StringPtrInput
	AccountId              pulumi.StringPtrInput
	// The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
	// requests to the location.
	IamRoleArn pulumi.StringPtrInput
	// The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
	LocationScope pulumi.StringPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (AccessGrantsLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGrantsLocationState)(nil)).Elem()
}

type accessGrantsLocationArgs struct {
	AccountId *string `pulumi:"accountId"`
	// The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
	// requests to the location.
	IamRoleArn string `pulumi:"iamRoleArn"`
	// The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
	LocationScope string `pulumi:"locationScope"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AccessGrantsLocation resource.
type AccessGrantsLocationArgs struct {
	AccountId pulumi.StringPtrInput
	// The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
	// requests to the location.
	IamRoleArn pulumi.StringInput
	// The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
	LocationScope pulumi.StringInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (AccessGrantsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGrantsLocationArgs)(nil)).Elem()
}

type AccessGrantsLocationInput interface {
	pulumi.Input

	ToAccessGrantsLocationOutput() AccessGrantsLocationOutput
	ToAccessGrantsLocationOutputWithContext(ctx context.Context) AccessGrantsLocationOutput
}

func (*AccessGrantsLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGrantsLocation)(nil)).Elem()
}

func (i *AccessGrantsLocation) ToAccessGrantsLocationOutput() AccessGrantsLocationOutput {
	return i.ToAccessGrantsLocationOutputWithContext(context.Background())
}

func (i *AccessGrantsLocation) ToAccessGrantsLocationOutputWithContext(ctx context.Context) AccessGrantsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantsLocationOutput)
}

// AccessGrantsLocationArrayInput is an input type that accepts AccessGrantsLocationArray and AccessGrantsLocationArrayOutput values.
// You can construct a concrete instance of `AccessGrantsLocationArrayInput` via:
//
//	AccessGrantsLocationArray{ AccessGrantsLocationArgs{...} }
type AccessGrantsLocationArrayInput interface {
	pulumi.Input

	ToAccessGrantsLocationArrayOutput() AccessGrantsLocationArrayOutput
	ToAccessGrantsLocationArrayOutputWithContext(context.Context) AccessGrantsLocationArrayOutput
}

type AccessGrantsLocationArray []AccessGrantsLocationInput

func (AccessGrantsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessGrantsLocation)(nil)).Elem()
}

func (i AccessGrantsLocationArray) ToAccessGrantsLocationArrayOutput() AccessGrantsLocationArrayOutput {
	return i.ToAccessGrantsLocationArrayOutputWithContext(context.Background())
}

func (i AccessGrantsLocationArray) ToAccessGrantsLocationArrayOutputWithContext(ctx context.Context) AccessGrantsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantsLocationArrayOutput)
}

// AccessGrantsLocationMapInput is an input type that accepts AccessGrantsLocationMap and AccessGrantsLocationMapOutput values.
// You can construct a concrete instance of `AccessGrantsLocationMapInput` via:
//
//	AccessGrantsLocationMap{ "key": AccessGrantsLocationArgs{...} }
type AccessGrantsLocationMapInput interface {
	pulumi.Input

	ToAccessGrantsLocationMapOutput() AccessGrantsLocationMapOutput
	ToAccessGrantsLocationMapOutputWithContext(context.Context) AccessGrantsLocationMapOutput
}

type AccessGrantsLocationMap map[string]AccessGrantsLocationInput

func (AccessGrantsLocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessGrantsLocation)(nil)).Elem()
}

func (i AccessGrantsLocationMap) ToAccessGrantsLocationMapOutput() AccessGrantsLocationMapOutput {
	return i.ToAccessGrantsLocationMapOutputWithContext(context.Background())
}

func (i AccessGrantsLocationMap) ToAccessGrantsLocationMapOutputWithContext(ctx context.Context) AccessGrantsLocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessGrantsLocationMapOutput)
}

type AccessGrantsLocationOutput struct{ *pulumi.OutputState }

func (AccessGrantsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessGrantsLocation)(nil)).Elem()
}

func (o AccessGrantsLocationOutput) ToAccessGrantsLocationOutput() AccessGrantsLocationOutput {
	return o
}

func (o AccessGrantsLocationOutput) ToAccessGrantsLocationOutputWithContext(ctx context.Context) AccessGrantsLocationOutput {
	return o
}

// Amazon Resource Name (ARN) of the S3 Access Grants location.
func (o AccessGrantsLocationOutput) AccessGrantsLocationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringOutput { return v.AccessGrantsLocationArn }).(pulumi.StringOutput)
}

// Unique ID of the S3 Access Grants location.
func (o AccessGrantsLocationOutput) AccessGrantsLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringOutput { return v.AccessGrantsLocationId }).(pulumi.StringOutput)
}

func (o AccessGrantsLocationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
// requests to the location.
func (o AccessGrantsLocationOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringOutput { return v.IamRoleArn }).(pulumi.StringOutput)
}

// The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
func (o AccessGrantsLocationOutput) LocationScope() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringOutput { return v.LocationScope }).(pulumi.StringOutput)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AccessGrantsLocationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o AccessGrantsLocationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AccessGrantsLocation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type AccessGrantsLocationArrayOutput struct{ *pulumi.OutputState }

func (AccessGrantsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccessGrantsLocation)(nil)).Elem()
}

func (o AccessGrantsLocationArrayOutput) ToAccessGrantsLocationArrayOutput() AccessGrantsLocationArrayOutput {
	return o
}

func (o AccessGrantsLocationArrayOutput) ToAccessGrantsLocationArrayOutputWithContext(ctx context.Context) AccessGrantsLocationArrayOutput {
	return o
}

func (o AccessGrantsLocationArrayOutput) Index(i pulumi.IntInput) AccessGrantsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccessGrantsLocation {
		return vs[0].([]*AccessGrantsLocation)[vs[1].(int)]
	}).(AccessGrantsLocationOutput)
}

type AccessGrantsLocationMapOutput struct{ *pulumi.OutputState }

func (AccessGrantsLocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccessGrantsLocation)(nil)).Elem()
}

func (o AccessGrantsLocationMapOutput) ToAccessGrantsLocationMapOutput() AccessGrantsLocationMapOutput {
	return o
}

func (o AccessGrantsLocationMapOutput) ToAccessGrantsLocationMapOutputWithContext(ctx context.Context) AccessGrantsLocationMapOutput {
	return o
}

func (o AccessGrantsLocationMapOutput) MapIndex(k pulumi.StringInput) AccessGrantsLocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccessGrantsLocation {
		return vs[0].(map[string]*AccessGrantsLocation)[vs[1].(string)]
	}).(AccessGrantsLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGrantsLocationInput)(nil)).Elem(), &AccessGrantsLocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGrantsLocationArrayInput)(nil)).Elem(), AccessGrantsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessGrantsLocationMapInput)(nil)).Elem(), AccessGrantsLocationMap{})
	pulumi.RegisterOutputType(AccessGrantsLocationOutput{})
	pulumi.RegisterOutputType(AccessGrantsLocationArrayOutput{})
	pulumi.RegisterOutputType(AccessGrantsLocationMapOutput{})
}
