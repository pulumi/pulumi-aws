// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CodeDeploy CustomActionType
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/codepipeline"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := codepipeline.NewCustomActionType(ctx, "example", &codepipeline.CustomActionTypeArgs{
//				Category: pulumi.String("Build"),
//				InputArtifactDetails: &codepipeline.CustomActionTypeInputArtifactDetailsArgs{
//					MaximumCount: pulumi.Int(1),
//					MinimumCount: pulumi.Int(0),
//				},
//				OutputArtifactDetails: &codepipeline.CustomActionTypeOutputArtifactDetailsArgs{
//					MaximumCount: pulumi.Int(1),
//					MinimumCount: pulumi.Int(0),
//				},
//				ProviderName: pulumi.String("example"),
//				Version:      pulumi.String("1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import CodeDeploy CustomActionType using the `id`. For example:
//
// ```sh
// $ pulumi import aws:codepipeline/customActionType:CustomActionType example Build:pulumi:1
// ```
type CustomActionType struct {
	pulumi.CustomResourceState

	// The action ARN.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category pulumi.StringOutput `pulumi:"category"`
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties CustomActionTypeConfigurationPropertyArrayOutput `pulumi:"configurationProperties"`
	InputArtifactDetails    CustomActionTypeInputArtifactDetailsOutput       `pulumi:"inputArtifactDetails"`
	OutputArtifactDetails   CustomActionTypeOutputArtifactDetailsOutput      `pulumi:"outputArtifactDetails"`
	// The creator of the action being called.
	Owner        pulumi.StringOutput               `pulumi:"owner"`
	ProviderName pulumi.StringOutput               `pulumi:"providerName"`
	Settings     CustomActionTypeSettingsPtrOutput `pulumi:"settings"`
	Tags         pulumi.StringMapOutput            `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	Version pulumi.StringOutput    `pulumi:"version"`
}

// NewCustomActionType registers a new resource with the given unique name, arguments, and options.
func NewCustomActionType(ctx *pulumi.Context,
	name string, args *CustomActionTypeArgs, opts ...pulumi.ResourceOption) (*CustomActionType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Category == nil {
		return nil, errors.New("invalid value for required argument 'Category'")
	}
	if args.InputArtifactDetails == nil {
		return nil, errors.New("invalid value for required argument 'InputArtifactDetails'")
	}
	if args.OutputArtifactDetails == nil {
		return nil, errors.New("invalid value for required argument 'OutputArtifactDetails'")
	}
	if args.ProviderName == nil {
		return nil, errors.New("invalid value for required argument 'ProviderName'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomActionType
	err := ctx.RegisterResource("aws:codepipeline/customActionType:CustomActionType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomActionType gets an existing CustomActionType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomActionType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomActionTypeState, opts ...pulumi.ResourceOption) (*CustomActionType, error) {
	var resource CustomActionType
	err := ctx.ReadResource("aws:codepipeline/customActionType:CustomActionType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomActionType resources.
type customActionTypeState struct {
	// The action ARN.
	Arn *string `pulumi:"arn"`
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category *string `pulumi:"category"`
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties []CustomActionTypeConfigurationProperty `pulumi:"configurationProperties"`
	InputArtifactDetails    *CustomActionTypeInputArtifactDetails   `pulumi:"inputArtifactDetails"`
	OutputArtifactDetails   *CustomActionTypeOutputArtifactDetails  `pulumi:"outputArtifactDetails"`
	// The creator of the action being called.
	Owner        *string                   `pulumi:"owner"`
	ProviderName *string                   `pulumi:"providerName"`
	Settings     *CustomActionTypeSettings `pulumi:"settings"`
	Tags         map[string]string         `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	Version *string           `pulumi:"version"`
}

type CustomActionTypeState struct {
	// The action ARN.
	Arn pulumi.StringPtrInput
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category pulumi.StringPtrInput
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties CustomActionTypeConfigurationPropertyArrayInput
	InputArtifactDetails    CustomActionTypeInputArtifactDetailsPtrInput
	OutputArtifactDetails   CustomActionTypeOutputArtifactDetailsPtrInput
	// The creator of the action being called.
	Owner        pulumi.StringPtrInput
	ProviderName pulumi.StringPtrInput
	Settings     CustomActionTypeSettingsPtrInput
	Tags         pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	Version pulumi.StringPtrInput
}

func (CustomActionTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionTypeState)(nil)).Elem()
}

type customActionTypeArgs struct {
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category string `pulumi:"category"`
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties []CustomActionTypeConfigurationProperty `pulumi:"configurationProperties"`
	InputArtifactDetails    CustomActionTypeInputArtifactDetails    `pulumi:"inputArtifactDetails"`
	OutputArtifactDetails   CustomActionTypeOutputArtifactDetails   `pulumi:"outputArtifactDetails"`
	ProviderName            string                                  `pulumi:"providerName"`
	Settings                *CustomActionTypeSettings               `pulumi:"settings"`
	Tags                    map[string]string                       `pulumi:"tags"`
	Version                 string                                  `pulumi:"version"`
}

// The set of arguments for constructing a CustomActionType resource.
type CustomActionTypeArgs struct {
	// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
	Category pulumi.StringInput
	// The configuration properties for the custom action. Max 10 items.
	ConfigurationProperties CustomActionTypeConfigurationPropertyArrayInput
	InputArtifactDetails    CustomActionTypeInputArtifactDetailsInput
	OutputArtifactDetails   CustomActionTypeOutputArtifactDetailsInput
	ProviderName            pulumi.StringInput
	Settings                CustomActionTypeSettingsPtrInput
	Tags                    pulumi.StringMapInput
	Version                 pulumi.StringInput
}

func (CustomActionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionTypeArgs)(nil)).Elem()
}

type CustomActionTypeInput interface {
	pulumi.Input

	ToCustomActionTypeOutput() CustomActionTypeOutput
	ToCustomActionTypeOutputWithContext(ctx context.Context) CustomActionTypeOutput
}

func (*CustomActionType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionType)(nil)).Elem()
}

func (i *CustomActionType) ToCustomActionTypeOutput() CustomActionTypeOutput {
	return i.ToCustomActionTypeOutputWithContext(context.Background())
}

func (i *CustomActionType) ToCustomActionTypeOutputWithContext(ctx context.Context) CustomActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeOutput)
}

// CustomActionTypeArrayInput is an input type that accepts CustomActionTypeArray and CustomActionTypeArrayOutput values.
// You can construct a concrete instance of `CustomActionTypeArrayInput` via:
//
//	CustomActionTypeArray{ CustomActionTypeArgs{...} }
type CustomActionTypeArrayInput interface {
	pulumi.Input

	ToCustomActionTypeArrayOutput() CustomActionTypeArrayOutput
	ToCustomActionTypeArrayOutputWithContext(context.Context) CustomActionTypeArrayOutput
}

type CustomActionTypeArray []CustomActionTypeInput

func (CustomActionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomActionType)(nil)).Elem()
}

func (i CustomActionTypeArray) ToCustomActionTypeArrayOutput() CustomActionTypeArrayOutput {
	return i.ToCustomActionTypeArrayOutputWithContext(context.Background())
}

func (i CustomActionTypeArray) ToCustomActionTypeArrayOutputWithContext(ctx context.Context) CustomActionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeArrayOutput)
}

// CustomActionTypeMapInput is an input type that accepts CustomActionTypeMap and CustomActionTypeMapOutput values.
// You can construct a concrete instance of `CustomActionTypeMapInput` via:
//
//	CustomActionTypeMap{ "key": CustomActionTypeArgs{...} }
type CustomActionTypeMapInput interface {
	pulumi.Input

	ToCustomActionTypeMapOutput() CustomActionTypeMapOutput
	ToCustomActionTypeMapOutputWithContext(context.Context) CustomActionTypeMapOutput
}

type CustomActionTypeMap map[string]CustomActionTypeInput

func (CustomActionTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomActionType)(nil)).Elem()
}

func (i CustomActionTypeMap) ToCustomActionTypeMapOutput() CustomActionTypeMapOutput {
	return i.ToCustomActionTypeMapOutputWithContext(context.Background())
}

func (i CustomActionTypeMap) ToCustomActionTypeMapOutputWithContext(ctx context.Context) CustomActionTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeMapOutput)
}

type CustomActionTypeOutput struct{ *pulumi.OutputState }

func (CustomActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionType)(nil)).Elem()
}

func (o CustomActionTypeOutput) ToCustomActionTypeOutput() CustomActionTypeOutput {
	return o
}

func (o CustomActionTypeOutput) ToCustomActionTypeOutputWithContext(ctx context.Context) CustomActionTypeOutput {
	return o
}

// The action ARN.
func (o CustomActionTypeOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomActionType) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
func (o CustomActionTypeOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomActionType) pulumi.StringOutput { return v.Category }).(pulumi.StringOutput)
}

// The configuration properties for the custom action. Max 10 items.
func (o CustomActionTypeOutput) ConfigurationProperties() CustomActionTypeConfigurationPropertyArrayOutput {
	return o.ApplyT(func(v *CustomActionType) CustomActionTypeConfigurationPropertyArrayOutput {
		return v.ConfigurationProperties
	}).(CustomActionTypeConfigurationPropertyArrayOutput)
}

func (o CustomActionTypeOutput) InputArtifactDetails() CustomActionTypeInputArtifactDetailsOutput {
	return o.ApplyT(func(v *CustomActionType) CustomActionTypeInputArtifactDetailsOutput { return v.InputArtifactDetails }).(CustomActionTypeInputArtifactDetailsOutput)
}

func (o CustomActionTypeOutput) OutputArtifactDetails() CustomActionTypeOutputArtifactDetailsOutput {
	return o.ApplyT(func(v *CustomActionType) CustomActionTypeOutputArtifactDetailsOutput { return v.OutputArtifactDetails }).(CustomActionTypeOutputArtifactDetailsOutput)
}

// The creator of the action being called.
func (o CustomActionTypeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomActionType) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

func (o CustomActionTypeOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomActionType) pulumi.StringOutput { return v.ProviderName }).(pulumi.StringOutput)
}

func (o CustomActionTypeOutput) Settings() CustomActionTypeSettingsPtrOutput {
	return o.ApplyT(func(v *CustomActionType) CustomActionTypeSettingsPtrOutput { return v.Settings }).(CustomActionTypeSettingsPtrOutput)
}

func (o CustomActionTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomActionType) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o CustomActionTypeOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomActionType) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o CustomActionTypeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomActionType) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type CustomActionTypeArrayOutput struct{ *pulumi.OutputState }

func (CustomActionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomActionType)(nil)).Elem()
}

func (o CustomActionTypeArrayOutput) ToCustomActionTypeArrayOutput() CustomActionTypeArrayOutput {
	return o
}

func (o CustomActionTypeArrayOutput) ToCustomActionTypeArrayOutputWithContext(ctx context.Context) CustomActionTypeArrayOutput {
	return o
}

func (o CustomActionTypeArrayOutput) Index(i pulumi.IntInput) CustomActionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomActionType {
		return vs[0].([]*CustomActionType)[vs[1].(int)]
	}).(CustomActionTypeOutput)
}

type CustomActionTypeMapOutput struct{ *pulumi.OutputState }

func (CustomActionTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomActionType)(nil)).Elem()
}

func (o CustomActionTypeMapOutput) ToCustomActionTypeMapOutput() CustomActionTypeMapOutput {
	return o
}

func (o CustomActionTypeMapOutput) ToCustomActionTypeMapOutputWithContext(ctx context.Context) CustomActionTypeMapOutput {
	return o
}

func (o CustomActionTypeMapOutput) MapIndex(k pulumi.StringInput) CustomActionTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomActionType {
		return vs[0].(map[string]*CustomActionType)[vs[1].(string)]
	}).(CustomActionTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeInput)(nil)).Elem(), &CustomActionType{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeArrayInput)(nil)).Elem(), CustomActionTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeMapInput)(nil)).Elem(), CustomActionTypeMap{})
	pulumi.RegisterOutputType(CustomActionTypeOutput{})
	pulumi.RegisterOutputType(CustomActionTypeArrayOutput{})
	pulumi.RegisterOutputType(CustomActionTypeMapOutput{})
}
