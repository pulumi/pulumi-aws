// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PipelineArtifactStore struct {
	// The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryptionKey` block is documented below.
	EncryptionKey *PipelineArtifactStoreEncryptionKey `pulumi:"encryptionKey"`
	// The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
	Location string `pulumi:"location"`
	// The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
	Region *string `pulumi:"region"`
	// The type of the artifact store, such as Amazon S3
	Type string `pulumi:"type"`
}

// PipelineArtifactStoreInput is an input type that accepts PipelineArtifactStoreArgs and PipelineArtifactStoreOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreInput` via:
//
//          PipelineArtifactStoreArgs{...}
type PipelineArtifactStoreInput interface {
	pulumi.Input

	ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput
	ToPipelineArtifactStoreOutputWithContext(context.Context) PipelineArtifactStoreOutput
}

type PipelineArtifactStoreArgs struct {
	// The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryptionKey` block is documented below.
	EncryptionKey PipelineArtifactStoreEncryptionKeyPtrInput `pulumi:"encryptionKey"`
	// The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
	Location pulumi.StringInput `pulumi:"location"`
	// The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The type of the artifact store, such as Amazon S3
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineArtifactStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return i.ToPipelineArtifactStoreOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput)
}

// PipelineArtifactStoreArrayInput is an input type that accepts PipelineArtifactStoreArray and PipelineArtifactStoreArrayOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreArrayInput` via:
//
//          PipelineArtifactStoreArray{ PipelineArtifactStoreArgs{...} }
type PipelineArtifactStoreArrayInput interface {
	pulumi.Input

	ToPipelineArtifactStoreArrayOutput() PipelineArtifactStoreArrayOutput
	ToPipelineArtifactStoreArrayOutputWithContext(context.Context) PipelineArtifactStoreArrayOutput
}

type PipelineArtifactStoreArray []PipelineArtifactStoreInput

func (PipelineArtifactStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStore)(nil)).Elem()
}

func (i PipelineArtifactStoreArray) ToPipelineArtifactStoreArrayOutput() PipelineArtifactStoreArrayOutput {
	return i.ToPipelineArtifactStoreArrayOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArray) ToPipelineArtifactStoreArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreArrayOutput)
}

type PipelineArtifactStoreOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return o
}

// The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryptionKey` block is documented below.
func (o PipelineArtifactStoreOutput) EncryptionKey() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ApplyT(func(v PipelineArtifactStore) *PipelineArtifactStoreEncryptionKey { return v.EncryptionKey }).(PipelineArtifactStoreEncryptionKeyPtrOutput)
}

// The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
func (o PipelineArtifactStoreOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Location }).(pulumi.StringOutput)
}

// The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
func (o PipelineArtifactStoreOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineArtifactStore) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The type of the artifact store, such as Amazon S3
func (o PipelineArtifactStoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineArtifactStoreArrayOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStoreArrayOutput) ToPipelineArtifactStoreArrayOutput() PipelineArtifactStoreArrayOutput {
	return o
}

func (o PipelineArtifactStoreArrayOutput) ToPipelineArtifactStoreArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreArrayOutput {
	return o
}

func (o PipelineArtifactStoreArrayOutput) Index(i pulumi.IntInput) PipelineArtifactStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineArtifactStore {
		return vs[0].([]PipelineArtifactStore)[vs[1].(int)]
	}).(PipelineArtifactStoreOutput)
}

type PipelineArtifactStoreEncryptionKey struct {
	// The KMS key ARN or ID
	Id string `pulumi:"id"`
	// The type of key; currently only `KMS` is supported
	Type string `pulumi:"type"`
}

// PipelineArtifactStoreEncryptionKeyInput is an input type that accepts PipelineArtifactStoreEncryptionKeyArgs and PipelineArtifactStoreEncryptionKeyOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreEncryptionKeyInput` via:
//
//          PipelineArtifactStoreEncryptionKeyArgs{...}
type PipelineArtifactStoreEncryptionKeyInput interface {
	pulumi.Input

	ToPipelineArtifactStoreEncryptionKeyOutput() PipelineArtifactStoreEncryptionKeyOutput
	ToPipelineArtifactStoreEncryptionKeyOutputWithContext(context.Context) PipelineArtifactStoreEncryptionKeyOutput
}

type PipelineArtifactStoreEncryptionKeyArgs struct {
	// The KMS key ARN or ID
	Id pulumi.StringInput `pulumi:"id"`
	// The type of key; currently only `KMS` is supported
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineArtifactStoreEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyOutput() PipelineArtifactStoreEncryptionKeyOutput {
	return i.ToPipelineArtifactStoreEncryptionKeyOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreEncryptionKeyOutput)
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return i.ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreEncryptionKeyOutput).ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx)
}

// PipelineArtifactStoreEncryptionKeyPtrInput is an input type that accepts PipelineArtifactStoreEncryptionKeyArgs, PipelineArtifactStoreEncryptionKeyPtr and PipelineArtifactStoreEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreEncryptionKeyPtrInput` via:
//
//          PipelineArtifactStoreEncryptionKeyArgs{...}
//
//  or:
//
//          nil
type PipelineArtifactStoreEncryptionKeyPtrInput interface {
	pulumi.Input

	ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput
	ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput
}

type pipelineArtifactStoreEncryptionKeyPtrType PipelineArtifactStoreEncryptionKeyArgs

func PipelineArtifactStoreEncryptionKeyPtr(v *PipelineArtifactStoreEncryptionKeyArgs) PipelineArtifactStoreEncryptionKeyPtrInput {
	return (*pipelineArtifactStoreEncryptionKeyPtrType)(v)
}

func (*pipelineArtifactStoreEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (i *pipelineArtifactStoreEncryptionKeyPtrType) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return i.ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *pipelineArtifactStoreEncryptionKeyPtrType) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreEncryptionKeyPtrOutput)
}

type PipelineArtifactStoreEncryptionKeyOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyOutput() PipelineArtifactStoreEncryptionKeyOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineArtifactStoreEncryptionKey) *PipelineArtifactStoreEncryptionKey {
		return &v
	}).(PipelineArtifactStoreEncryptionKeyPtrOutput)
}

// The KMS key ARN or ID
func (o PipelineArtifactStoreEncryptionKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStoreEncryptionKey) string { return v.Id }).(pulumi.StringOutput)
}

// The type of key; currently only `KMS` is supported
func (o PipelineArtifactStoreEncryptionKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStoreEncryptionKey) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineArtifactStoreEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (o PipelineArtifactStoreEncryptionKeyPtrOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyPtrOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyPtrOutput) Elem() PipelineArtifactStoreEncryptionKeyOutput {
	return o.ApplyT(func(v *PipelineArtifactStoreEncryptionKey) PipelineArtifactStoreEncryptionKey {
		if v != nil {
			return *v
		}
		var ret PipelineArtifactStoreEncryptionKey
		return ret
	}).(PipelineArtifactStoreEncryptionKeyOutput)
}

// The KMS key ARN or ID
func (o PipelineArtifactStoreEncryptionKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStoreEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The type of key; currently only `KMS` is supported
func (o PipelineArtifactStoreEncryptionKeyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStoreEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PipelineStage struct {
	// The action(s) to include in the stage. Defined as an `action` block below
	Actions []PipelineStageAction `pulumi:"actions"`
	// The name of the stage.
	Name string `pulumi:"name"`
}

// PipelineStageInput is an input type that accepts PipelineStageArgs and PipelineStageOutput values.
// You can construct a concrete instance of `PipelineStageInput` via:
//
//          PipelineStageArgs{...}
type PipelineStageInput interface {
	pulumi.Input

	ToPipelineStageOutput() PipelineStageOutput
	ToPipelineStageOutputWithContext(context.Context) PipelineStageOutput
}

type PipelineStageArgs struct {
	// The action(s) to include in the stage. Defined as an `action` block below
	Actions PipelineStageActionArrayInput `pulumi:"actions"`
	// The name of the stage.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStage)(nil)).Elem()
}

func (i PipelineStageArgs) ToPipelineStageOutput() PipelineStageOutput {
	return i.ToPipelineStageOutputWithContext(context.Background())
}

func (i PipelineStageArgs) ToPipelineStageOutputWithContext(ctx context.Context) PipelineStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageOutput)
}

// PipelineStageArrayInput is an input type that accepts PipelineStageArray and PipelineStageArrayOutput values.
// You can construct a concrete instance of `PipelineStageArrayInput` via:
//
//          PipelineStageArray{ PipelineStageArgs{...} }
type PipelineStageArrayInput interface {
	pulumi.Input

	ToPipelineStageArrayOutput() PipelineStageArrayOutput
	ToPipelineStageArrayOutputWithContext(context.Context) PipelineStageArrayOutput
}

type PipelineStageArray []PipelineStageInput

func (PipelineStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStage)(nil)).Elem()
}

func (i PipelineStageArray) ToPipelineStageArrayOutput() PipelineStageArrayOutput {
	return i.ToPipelineStageArrayOutputWithContext(context.Background())
}

func (i PipelineStageArray) ToPipelineStageArrayOutputWithContext(ctx context.Context) PipelineStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageArrayOutput)
}

type PipelineStageOutput struct{ *pulumi.OutputState }

func (PipelineStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStage)(nil)).Elem()
}

func (o PipelineStageOutput) ToPipelineStageOutput() PipelineStageOutput {
	return o
}

func (o PipelineStageOutput) ToPipelineStageOutputWithContext(ctx context.Context) PipelineStageOutput {
	return o
}

// The action(s) to include in the stage. Defined as an `action` block below
func (o PipelineStageOutput) Actions() PipelineStageActionArrayOutput {
	return o.ApplyT(func(v PipelineStage) []PipelineStageAction { return v.Actions }).(PipelineStageActionArrayOutput)
}

// The name of the stage.
func (o PipelineStageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStage) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineStageArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStage)(nil)).Elem()
}

func (o PipelineStageArrayOutput) ToPipelineStageArrayOutput() PipelineStageArrayOutput {
	return o
}

func (o PipelineStageArrayOutput) ToPipelineStageArrayOutputWithContext(ctx context.Context) PipelineStageArrayOutput {
	return o
}

func (o PipelineStageArrayOutput) Index(i pulumi.IntInput) PipelineStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStage {
		return vs[0].([]PipelineStage)[vs[1].(int)]
	}).(PipelineStageOutput)
}

type PipelineStageAction struct {
	// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
	Category string `pulumi:"category"`
	// A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Configuration map[string]string `pulumi:"configuration"`
	// A list of artifact names to be worked on.
	InputArtifacts []string `pulumi:"inputArtifacts"`
	// The action declaration's name.
	Name string `pulumi:"name"`
	// The namespace all output variables will be accessed from.
	Namespace *string `pulumi:"namespace"`
	// A list of artifact names to output. Output artifact names must be unique within a pipeline.
	OutputArtifacts []string `pulumi:"outputArtifacts"`
	// The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
	Owner string `pulumi:"owner"`
	// The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Provider string `pulumi:"provider"`
	// The region in which to run the action.
	Region *string `pulumi:"region"`
	// The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
	RoleArn *string `pulumi:"roleArn"`
	// The order in which actions are run.
	RunOrder *int `pulumi:"runOrder"`
	// A string that identifies the action type.
	Version string `pulumi:"version"`
}

// PipelineStageActionInput is an input type that accepts PipelineStageActionArgs and PipelineStageActionOutput values.
// You can construct a concrete instance of `PipelineStageActionInput` via:
//
//          PipelineStageActionArgs{...}
type PipelineStageActionInput interface {
	pulumi.Input

	ToPipelineStageActionOutput() PipelineStageActionOutput
	ToPipelineStageActionOutputWithContext(context.Context) PipelineStageActionOutput
}

type PipelineStageActionArgs struct {
	// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
	Category pulumi.StringInput `pulumi:"category"`
	// A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Configuration pulumi.StringMapInput `pulumi:"configuration"`
	// A list of artifact names to be worked on.
	InputArtifacts pulumi.StringArrayInput `pulumi:"inputArtifacts"`
	// The action declaration's name.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace all output variables will be accessed from.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// A list of artifact names to output. Output artifact names must be unique within a pipeline.
	OutputArtifacts pulumi.StringArrayInput `pulumi:"outputArtifacts"`
	// The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Provider pulumi.StringInput `pulumi:"provider"`
	// The region in which to run the action.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The order in which actions are run.
	RunOrder pulumi.IntPtrInput `pulumi:"runOrder"`
	// A string that identifies the action type.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PipelineStageActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageAction)(nil)).Elem()
}

func (i PipelineStageActionArgs) ToPipelineStageActionOutput() PipelineStageActionOutput {
	return i.ToPipelineStageActionOutputWithContext(context.Background())
}

func (i PipelineStageActionArgs) ToPipelineStageActionOutputWithContext(ctx context.Context) PipelineStageActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageActionOutput)
}

// PipelineStageActionArrayInput is an input type that accepts PipelineStageActionArray and PipelineStageActionArrayOutput values.
// You can construct a concrete instance of `PipelineStageActionArrayInput` via:
//
//          PipelineStageActionArray{ PipelineStageActionArgs{...} }
type PipelineStageActionArrayInput interface {
	pulumi.Input

	ToPipelineStageActionArrayOutput() PipelineStageActionArrayOutput
	ToPipelineStageActionArrayOutputWithContext(context.Context) PipelineStageActionArrayOutput
}

type PipelineStageActionArray []PipelineStageActionInput

func (PipelineStageActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageAction)(nil)).Elem()
}

func (i PipelineStageActionArray) ToPipelineStageActionArrayOutput() PipelineStageActionArrayOutput {
	return i.ToPipelineStageActionArrayOutputWithContext(context.Background())
}

func (i PipelineStageActionArray) ToPipelineStageActionArrayOutputWithContext(ctx context.Context) PipelineStageActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageActionArrayOutput)
}

type PipelineStageActionOutput struct{ *pulumi.OutputState }

func (PipelineStageActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageAction)(nil)).Elem()
}

func (o PipelineStageActionOutput) ToPipelineStageActionOutput() PipelineStageActionOutput {
	return o
}

func (o PipelineStageActionOutput) ToPipelineStageActionOutputWithContext(ctx context.Context) PipelineStageActionOutput {
	return o
}

// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
func (o PipelineStageActionOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Category }).(pulumi.StringOutput)
}

// A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
func (o PipelineStageActionOutput) Configuration() pulumi.StringMapOutput {
	return o.ApplyT(func(v PipelineStageAction) map[string]string { return v.Configuration }).(pulumi.StringMapOutput)
}

// A list of artifact names to be worked on.
func (o PipelineStageActionOutput) InputArtifacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineStageAction) []string { return v.InputArtifacts }).(pulumi.StringArrayOutput)
}

// The action declaration's name.
func (o PipelineStageActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace all output variables will be accessed from.
func (o PipelineStageActionOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// A list of artifact names to output. Output artifact names must be unique within a pipeline.
func (o PipelineStageActionOutput) OutputArtifacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineStageAction) []string { return v.OutputArtifacts }).(pulumi.StringArrayOutput)
}

// The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
func (o PipelineStageActionOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Owner }).(pulumi.StringOutput)
}

// The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
func (o PipelineStageActionOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Provider }).(pulumi.StringOutput)
}

// The region in which to run the action.
func (o PipelineStageActionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
func (o PipelineStageActionOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The order in which actions are run.
func (o PipelineStageActionOutput) RunOrder() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *int { return v.RunOrder }).(pulumi.IntPtrOutput)
}

// A string that identifies the action type.
func (o PipelineStageActionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Version }).(pulumi.StringOutput)
}

type PipelineStageActionArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageAction)(nil)).Elem()
}

func (o PipelineStageActionArrayOutput) ToPipelineStageActionArrayOutput() PipelineStageActionArrayOutput {
	return o
}

func (o PipelineStageActionArrayOutput) ToPipelineStageActionArrayOutputWithContext(ctx context.Context) PipelineStageActionArrayOutput {
	return o
}

func (o PipelineStageActionArrayOutput) Index(i pulumi.IntInput) PipelineStageActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStageAction {
		return vs[0].([]PipelineStageAction)[vs[1].(int)]
	}).(PipelineStageActionOutput)
}

type WebhookAuthenticationConfiguration struct {
	// A valid CIDR block for `IP` filtering. Required for `IP`.
	AllowedIpRange *string `pulumi:"allowedIpRange"`
	// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
	SecretToken *string `pulumi:"secretToken"`
}

// WebhookAuthenticationConfigurationInput is an input type that accepts WebhookAuthenticationConfigurationArgs and WebhookAuthenticationConfigurationOutput values.
// You can construct a concrete instance of `WebhookAuthenticationConfigurationInput` via:
//
//          WebhookAuthenticationConfigurationArgs{...}
type WebhookAuthenticationConfigurationInput interface {
	pulumi.Input

	ToWebhookAuthenticationConfigurationOutput() WebhookAuthenticationConfigurationOutput
	ToWebhookAuthenticationConfigurationOutputWithContext(context.Context) WebhookAuthenticationConfigurationOutput
}

type WebhookAuthenticationConfigurationArgs struct {
	// A valid CIDR block for `IP` filtering. Required for `IP`.
	AllowedIpRange pulumi.StringPtrInput `pulumi:"allowedIpRange"`
	// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
	SecretToken pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (WebhookAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationOutput() WebhookAuthenticationConfigurationOutput {
	return i.ToWebhookAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthenticationConfigurationOutput)
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return i.ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthenticationConfigurationOutput).ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx)
}

// WebhookAuthenticationConfigurationPtrInput is an input type that accepts WebhookAuthenticationConfigurationArgs, WebhookAuthenticationConfigurationPtr and WebhookAuthenticationConfigurationPtrOutput values.
// You can construct a concrete instance of `WebhookAuthenticationConfigurationPtrInput` via:
//
//          WebhookAuthenticationConfigurationArgs{...}
//
//  or:
//
//          nil
type WebhookAuthenticationConfigurationPtrInput interface {
	pulumi.Input

	ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput
	ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Context) WebhookAuthenticationConfigurationPtrOutput
}

type webhookAuthenticationConfigurationPtrType WebhookAuthenticationConfigurationArgs

func WebhookAuthenticationConfigurationPtr(v *WebhookAuthenticationConfigurationArgs) WebhookAuthenticationConfigurationPtrInput {
	return (*webhookAuthenticationConfigurationPtrType)(v)
}

func (*webhookAuthenticationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (i *webhookAuthenticationConfigurationPtrType) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return i.ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i *webhookAuthenticationConfigurationPtrType) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthenticationConfigurationPtrOutput)
}

type WebhookAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (WebhookAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationOutput() WebhookAuthenticationConfigurationOutput {
	return o
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationOutput {
	return o
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return o.ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookAuthenticationConfiguration) *WebhookAuthenticationConfiguration {
		return &v
	}).(WebhookAuthenticationConfigurationPtrOutput)
}

// A valid CIDR block for `IP` filtering. Required for `IP`.
func (o WebhookAuthenticationConfigurationOutput) AllowedIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthenticationConfiguration) *string { return v.AllowedIpRange }).(pulumi.StringPtrOutput)
}

// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
func (o WebhookAuthenticationConfigurationOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthenticationConfiguration) *string { return v.SecretToken }).(pulumi.StringPtrOutput)
}

type WebhookAuthenticationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebhookAuthenticationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (o WebhookAuthenticationConfigurationPtrOutput) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return o
}

func (o WebhookAuthenticationConfigurationPtrOutput) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return o
}

func (o WebhookAuthenticationConfigurationPtrOutput) Elem() WebhookAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *WebhookAuthenticationConfiguration) WebhookAuthenticationConfiguration {
		if v != nil {
			return *v
		}
		var ret WebhookAuthenticationConfiguration
		return ret
	}).(WebhookAuthenticationConfigurationOutput)
}

// A valid CIDR block for `IP` filtering. Required for `IP`.
func (o WebhookAuthenticationConfigurationPtrOutput) AllowedIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AllowedIpRange
	}).(pulumi.StringPtrOutput)
}

// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
func (o WebhookAuthenticationConfigurationPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

type WebhookFilter struct {
	// The [JSON path](https://github.com/json-path/JsonPath) to filter on.
	JsonPath string `pulumi:"jsonPath"`
	// The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.
	MatchEquals string `pulumi:"matchEquals"`
}

// WebhookFilterInput is an input type that accepts WebhookFilterArgs and WebhookFilterOutput values.
// You can construct a concrete instance of `WebhookFilterInput` via:
//
//          WebhookFilterArgs{...}
type WebhookFilterInput interface {
	pulumi.Input

	ToWebhookFilterOutput() WebhookFilterOutput
	ToWebhookFilterOutputWithContext(context.Context) WebhookFilterOutput
}

type WebhookFilterArgs struct {
	// The [JSON path](https://github.com/json-path/JsonPath) to filter on.
	JsonPath pulumi.StringInput `pulumi:"jsonPath"`
	// The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.
	MatchEquals pulumi.StringInput `pulumi:"matchEquals"`
}

func (WebhookFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilter)(nil)).Elem()
}

func (i WebhookFilterArgs) ToWebhookFilterOutput() WebhookFilterOutput {
	return i.ToWebhookFilterOutputWithContext(context.Background())
}

func (i WebhookFilterArgs) ToWebhookFilterOutputWithContext(ctx context.Context) WebhookFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterOutput)
}

// WebhookFilterArrayInput is an input type that accepts WebhookFilterArray and WebhookFilterArrayOutput values.
// You can construct a concrete instance of `WebhookFilterArrayInput` via:
//
//          WebhookFilterArray{ WebhookFilterArgs{...} }
type WebhookFilterArrayInput interface {
	pulumi.Input

	ToWebhookFilterArrayOutput() WebhookFilterArrayOutput
	ToWebhookFilterArrayOutputWithContext(context.Context) WebhookFilterArrayOutput
}

type WebhookFilterArray []WebhookFilterInput

func (WebhookFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilter)(nil)).Elem()
}

func (i WebhookFilterArray) ToWebhookFilterArrayOutput() WebhookFilterArrayOutput {
	return i.ToWebhookFilterArrayOutputWithContext(context.Background())
}

func (i WebhookFilterArray) ToWebhookFilterArrayOutputWithContext(ctx context.Context) WebhookFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterArrayOutput)
}

type WebhookFilterOutput struct{ *pulumi.OutputState }

func (WebhookFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilter)(nil)).Elem()
}

func (o WebhookFilterOutput) ToWebhookFilterOutput() WebhookFilterOutput {
	return o
}

func (o WebhookFilterOutput) ToWebhookFilterOutputWithContext(ctx context.Context) WebhookFilterOutput {
	return o
}

// The [JSON path](https://github.com/json-path/JsonPath) to filter on.
func (o WebhookFilterOutput) JsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilter) string { return v.JsonPath }).(pulumi.StringOutput)
}

// The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.
func (o WebhookFilterOutput) MatchEquals() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilter) string { return v.MatchEquals }).(pulumi.StringOutput)
}

type WebhookFilterArrayOutput struct{ *pulumi.OutputState }

func (WebhookFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilter)(nil)).Elem()
}

func (o WebhookFilterArrayOutput) ToWebhookFilterArrayOutput() WebhookFilterArrayOutput {
	return o
}

func (o WebhookFilterArrayOutput) ToWebhookFilterArrayOutputWithContext(ctx context.Context) WebhookFilterArrayOutput {
	return o
}

func (o WebhookFilterArrayOutput) Index(i pulumi.IntInput) WebhookFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookFilter {
		return vs[0].([]WebhookFilter)[vs[1].(int)]
	}).(WebhookFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreInput)(nil)).Elem(), PipelineArtifactStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreArrayInput)(nil)).Elem(), PipelineArtifactStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreEncryptionKeyInput)(nil)).Elem(), PipelineArtifactStoreEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreEncryptionKeyPtrInput)(nil)).Elem(), PipelineArtifactStoreEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageInput)(nil)).Elem(), PipelineStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageArrayInput)(nil)).Elem(), PipelineStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageActionInput)(nil)).Elem(), PipelineStageActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageActionArrayInput)(nil)).Elem(), PipelineStageActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAuthenticationConfigurationInput)(nil)).Elem(), WebhookAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAuthenticationConfigurationPtrInput)(nil)).Elem(), WebhookAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterInput)(nil)).Elem(), WebhookFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterArrayInput)(nil)).Elem(), WebhookFilterArray{})
	pulumi.RegisterOutputType(PipelineArtifactStoreOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreArrayOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreEncryptionKeyOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(PipelineStageOutput{})
	pulumi.RegisterOutputType(PipelineStageArrayOutput{})
	pulumi.RegisterOutputType(PipelineStageActionOutput{})
	pulumi.RegisterOutputType(PipelineStageActionArrayOutput{})
	pulumi.RegisterOutputType(WebhookAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(WebhookAuthenticationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterOutput{})
	pulumi.RegisterOutputType(WebhookFilterArrayOutput{})
}
