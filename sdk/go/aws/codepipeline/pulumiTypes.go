// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CustomActionTypeConfigurationProperty struct {
	// The description of the action configuration property.
	Description *string `pulumi:"description"`
	// Whether the configuration property is a key.
	Key bool `pulumi:"key"`
	// The name of the action configuration property.
	Name string `pulumi:"name"`
	// Indicates that the property will be used in conjunction with PollForJobs.
	Queryable *bool `pulumi:"queryable"`
	// Whether the configuration property is a required value.
	Required bool `pulumi:"required"`
	// Whether the configuration property is secret.
	Secret bool `pulumi:"secret"`
	// The type of the configuration property. Valid values: `String`, `Number`, `Boolean`
	Type *string `pulumi:"type"`
}

// CustomActionTypeConfigurationPropertyInput is an input type that accepts CustomActionTypeConfigurationPropertyArgs and CustomActionTypeConfigurationPropertyOutput values.
// You can construct a concrete instance of `CustomActionTypeConfigurationPropertyInput` via:
//
//	CustomActionTypeConfigurationPropertyArgs{...}
type CustomActionTypeConfigurationPropertyInput interface {
	pulumi.Input

	ToCustomActionTypeConfigurationPropertyOutput() CustomActionTypeConfigurationPropertyOutput
	ToCustomActionTypeConfigurationPropertyOutputWithContext(context.Context) CustomActionTypeConfigurationPropertyOutput
}

type CustomActionTypeConfigurationPropertyArgs struct {
	// The description of the action configuration property.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether the configuration property is a key.
	Key pulumi.BoolInput `pulumi:"key"`
	// The name of the action configuration property.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates that the property will be used in conjunction with PollForJobs.
	Queryable pulumi.BoolPtrInput `pulumi:"queryable"`
	// Whether the configuration property is a required value.
	Required pulumi.BoolInput `pulumi:"required"`
	// Whether the configuration property is secret.
	Secret pulumi.BoolInput `pulumi:"secret"`
	// The type of the configuration property. Valid values: `String`, `Number`, `Boolean`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomActionTypeConfigurationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeConfigurationProperty)(nil)).Elem()
}

func (i CustomActionTypeConfigurationPropertyArgs) ToCustomActionTypeConfigurationPropertyOutput() CustomActionTypeConfigurationPropertyOutput {
	return i.ToCustomActionTypeConfigurationPropertyOutputWithContext(context.Background())
}

func (i CustomActionTypeConfigurationPropertyArgs) ToCustomActionTypeConfigurationPropertyOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeConfigurationPropertyOutput)
}

// CustomActionTypeConfigurationPropertyArrayInput is an input type that accepts CustomActionTypeConfigurationPropertyArray and CustomActionTypeConfigurationPropertyArrayOutput values.
// You can construct a concrete instance of `CustomActionTypeConfigurationPropertyArrayInput` via:
//
//	CustomActionTypeConfigurationPropertyArray{ CustomActionTypeConfigurationPropertyArgs{...} }
type CustomActionTypeConfigurationPropertyArrayInput interface {
	pulumi.Input

	ToCustomActionTypeConfigurationPropertyArrayOutput() CustomActionTypeConfigurationPropertyArrayOutput
	ToCustomActionTypeConfigurationPropertyArrayOutputWithContext(context.Context) CustomActionTypeConfigurationPropertyArrayOutput
}

type CustomActionTypeConfigurationPropertyArray []CustomActionTypeConfigurationPropertyInput

func (CustomActionTypeConfigurationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeConfigurationProperty)(nil)).Elem()
}

func (i CustomActionTypeConfigurationPropertyArray) ToCustomActionTypeConfigurationPropertyArrayOutput() CustomActionTypeConfigurationPropertyArrayOutput {
	return i.ToCustomActionTypeConfigurationPropertyArrayOutputWithContext(context.Background())
}

func (i CustomActionTypeConfigurationPropertyArray) ToCustomActionTypeConfigurationPropertyArrayOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeConfigurationPropertyArrayOutput)
}

type CustomActionTypeConfigurationPropertyOutput struct{ *pulumi.OutputState }

func (CustomActionTypeConfigurationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeConfigurationProperty)(nil)).Elem()
}

func (o CustomActionTypeConfigurationPropertyOutput) ToCustomActionTypeConfigurationPropertyOutput() CustomActionTypeConfigurationPropertyOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertyOutput) ToCustomActionTypeConfigurationPropertyOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertyOutput {
	return o
}

// The description of the action configuration property.
func (o CustomActionTypeConfigurationPropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the configuration property is a key.
func (o CustomActionTypeConfigurationPropertyOutput) Key() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperty) bool { return v.Key }).(pulumi.BoolOutput)
}

// The name of the action configuration property.
func (o CustomActionTypeConfigurationPropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperty) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates that the property will be used in conjunction with PollForJobs.
func (o CustomActionTypeConfigurationPropertyOutput) Queryable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperty) *bool { return v.Queryable }).(pulumi.BoolPtrOutput)
}

// Whether the configuration property is a required value.
func (o CustomActionTypeConfigurationPropertyOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperty) bool { return v.Required }).(pulumi.BoolOutput)
}

// Whether the configuration property is secret.
func (o CustomActionTypeConfigurationPropertyOutput) Secret() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperty) bool { return v.Secret }).(pulumi.BoolOutput)
}

// The type of the configuration property. Valid values: `String`, `Number`, `Boolean`
func (o CustomActionTypeConfigurationPropertyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperty) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomActionTypeConfigurationPropertyArrayOutput struct{ *pulumi.OutputState }

func (CustomActionTypeConfigurationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeConfigurationProperty)(nil)).Elem()
}

func (o CustomActionTypeConfigurationPropertyArrayOutput) ToCustomActionTypeConfigurationPropertyArrayOutput() CustomActionTypeConfigurationPropertyArrayOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertyArrayOutput) ToCustomActionTypeConfigurationPropertyArrayOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertyArrayOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertyArrayOutput) Index(i pulumi.IntInput) CustomActionTypeConfigurationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomActionTypeConfigurationProperty {
		return vs[0].([]CustomActionTypeConfigurationProperty)[vs[1].(int)]
	}).(CustomActionTypeConfigurationPropertyOutput)
}

type CustomActionTypeInputArtifactDetails struct {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	MaximumCount int `pulumi:"maximumCount"`
	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	MinimumCount int `pulumi:"minimumCount"`
}

// CustomActionTypeInputArtifactDetailsInput is an input type that accepts CustomActionTypeInputArtifactDetailsArgs and CustomActionTypeInputArtifactDetailsOutput values.
// You can construct a concrete instance of `CustomActionTypeInputArtifactDetailsInput` via:
//
//	CustomActionTypeInputArtifactDetailsArgs{...}
type CustomActionTypeInputArtifactDetailsInput interface {
	pulumi.Input

	ToCustomActionTypeInputArtifactDetailsOutput() CustomActionTypeInputArtifactDetailsOutput
	ToCustomActionTypeInputArtifactDetailsOutputWithContext(context.Context) CustomActionTypeInputArtifactDetailsOutput
}

type CustomActionTypeInputArtifactDetailsArgs struct {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	MaximumCount pulumi.IntInput `pulumi:"maximumCount"`
	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	MinimumCount pulumi.IntInput `pulumi:"minimumCount"`
}

func (CustomActionTypeInputArtifactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeInputArtifactDetails)(nil)).Elem()
}

func (i CustomActionTypeInputArtifactDetailsArgs) ToCustomActionTypeInputArtifactDetailsOutput() CustomActionTypeInputArtifactDetailsOutput {
	return i.ToCustomActionTypeInputArtifactDetailsOutputWithContext(context.Background())
}

func (i CustomActionTypeInputArtifactDetailsArgs) ToCustomActionTypeInputArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeInputArtifactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeInputArtifactDetailsOutput)
}

func (i CustomActionTypeInputArtifactDetailsArgs) ToCustomActionTypeInputArtifactDetailsPtrOutput() CustomActionTypeInputArtifactDetailsPtrOutput {
	return i.ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(context.Background())
}

func (i CustomActionTypeInputArtifactDetailsArgs) ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeInputArtifactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeInputArtifactDetailsOutput).ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(ctx)
}

// CustomActionTypeInputArtifactDetailsPtrInput is an input type that accepts CustomActionTypeInputArtifactDetailsArgs, CustomActionTypeInputArtifactDetailsPtr and CustomActionTypeInputArtifactDetailsPtrOutput values.
// You can construct a concrete instance of `CustomActionTypeInputArtifactDetailsPtrInput` via:
//
//	        CustomActionTypeInputArtifactDetailsArgs{...}
//
//	or:
//
//	        nil
type CustomActionTypeInputArtifactDetailsPtrInput interface {
	pulumi.Input

	ToCustomActionTypeInputArtifactDetailsPtrOutput() CustomActionTypeInputArtifactDetailsPtrOutput
	ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(context.Context) CustomActionTypeInputArtifactDetailsPtrOutput
}

type customActionTypeInputArtifactDetailsPtrType CustomActionTypeInputArtifactDetailsArgs

func CustomActionTypeInputArtifactDetailsPtr(v *CustomActionTypeInputArtifactDetailsArgs) CustomActionTypeInputArtifactDetailsPtrInput {
	return (*customActionTypeInputArtifactDetailsPtrType)(v)
}

func (*customActionTypeInputArtifactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeInputArtifactDetails)(nil)).Elem()
}

func (i *customActionTypeInputArtifactDetailsPtrType) ToCustomActionTypeInputArtifactDetailsPtrOutput() CustomActionTypeInputArtifactDetailsPtrOutput {
	return i.ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(context.Background())
}

func (i *customActionTypeInputArtifactDetailsPtrType) ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeInputArtifactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeInputArtifactDetailsPtrOutput)
}

type CustomActionTypeInputArtifactDetailsOutput struct{ *pulumi.OutputState }

func (CustomActionTypeInputArtifactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeInputArtifactDetails)(nil)).Elem()
}

func (o CustomActionTypeInputArtifactDetailsOutput) ToCustomActionTypeInputArtifactDetailsOutput() CustomActionTypeInputArtifactDetailsOutput {
	return o
}

func (o CustomActionTypeInputArtifactDetailsOutput) ToCustomActionTypeInputArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeInputArtifactDetailsOutput {
	return o
}

func (o CustomActionTypeInputArtifactDetailsOutput) ToCustomActionTypeInputArtifactDetailsPtrOutput() CustomActionTypeInputArtifactDetailsPtrOutput {
	return o.ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(context.Background())
}

func (o CustomActionTypeInputArtifactDetailsOutput) ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeInputArtifactDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomActionTypeInputArtifactDetails) *CustomActionTypeInputArtifactDetails {
		return &v
	}).(CustomActionTypeInputArtifactDetailsPtrOutput)
}

// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeInputArtifactDetailsOutput) MaximumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeInputArtifactDetails) int { return v.MaximumCount }).(pulumi.IntOutput)
}

// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeInputArtifactDetailsOutput) MinimumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeInputArtifactDetails) int { return v.MinimumCount }).(pulumi.IntOutput)
}

type CustomActionTypeInputArtifactDetailsPtrOutput struct{ *pulumi.OutputState }

func (CustomActionTypeInputArtifactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeInputArtifactDetails)(nil)).Elem()
}

func (o CustomActionTypeInputArtifactDetailsPtrOutput) ToCustomActionTypeInputArtifactDetailsPtrOutput() CustomActionTypeInputArtifactDetailsPtrOutput {
	return o
}

func (o CustomActionTypeInputArtifactDetailsPtrOutput) ToCustomActionTypeInputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeInputArtifactDetailsPtrOutput {
	return o
}

func (o CustomActionTypeInputArtifactDetailsPtrOutput) Elem() CustomActionTypeInputArtifactDetailsOutput {
	return o.ApplyT(func(v *CustomActionTypeInputArtifactDetails) CustomActionTypeInputArtifactDetails {
		if v != nil {
			return *v
		}
		var ret CustomActionTypeInputArtifactDetails
		return ret
	}).(CustomActionTypeInputArtifactDetailsOutput)
}

// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeInputArtifactDetailsPtrOutput) MaximumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeInputArtifactDetails) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumCount
	}).(pulumi.IntPtrOutput)
}

// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeInputArtifactDetailsPtrOutput) MinimumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeInputArtifactDetails) *int {
		if v == nil {
			return nil
		}
		return &v.MinimumCount
	}).(pulumi.IntPtrOutput)
}

type CustomActionTypeOutputArtifactDetails struct {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	MaximumCount int `pulumi:"maximumCount"`
	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	MinimumCount int `pulumi:"minimumCount"`
}

// CustomActionTypeOutputArtifactDetailsInput is an input type that accepts CustomActionTypeOutputArtifactDetailsArgs and CustomActionTypeOutputArtifactDetailsOutput values.
// You can construct a concrete instance of `CustomActionTypeOutputArtifactDetailsInput` via:
//
//	CustomActionTypeOutputArtifactDetailsArgs{...}
type CustomActionTypeOutputArtifactDetailsInput interface {
	pulumi.Input

	ToCustomActionTypeOutputArtifactDetailsOutput() CustomActionTypeOutputArtifactDetailsOutput
	ToCustomActionTypeOutputArtifactDetailsOutputWithContext(context.Context) CustomActionTypeOutputArtifactDetailsOutput
}

type CustomActionTypeOutputArtifactDetailsArgs struct {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	MaximumCount pulumi.IntInput `pulumi:"maximumCount"`
	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	MinimumCount pulumi.IntInput `pulumi:"minimumCount"`
}

func (CustomActionTypeOutputArtifactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeOutputArtifactDetails)(nil)).Elem()
}

func (i CustomActionTypeOutputArtifactDetailsArgs) ToCustomActionTypeOutputArtifactDetailsOutput() CustomActionTypeOutputArtifactDetailsOutput {
	return i.ToCustomActionTypeOutputArtifactDetailsOutputWithContext(context.Background())
}

func (i CustomActionTypeOutputArtifactDetailsArgs) ToCustomActionTypeOutputArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeOutputArtifactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeOutputArtifactDetailsOutput)
}

func (i CustomActionTypeOutputArtifactDetailsArgs) ToCustomActionTypeOutputArtifactDetailsPtrOutput() CustomActionTypeOutputArtifactDetailsPtrOutput {
	return i.ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(context.Background())
}

func (i CustomActionTypeOutputArtifactDetailsArgs) ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeOutputArtifactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeOutputArtifactDetailsOutput).ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(ctx)
}

// CustomActionTypeOutputArtifactDetailsPtrInput is an input type that accepts CustomActionTypeOutputArtifactDetailsArgs, CustomActionTypeOutputArtifactDetailsPtr and CustomActionTypeOutputArtifactDetailsPtrOutput values.
// You can construct a concrete instance of `CustomActionTypeOutputArtifactDetailsPtrInput` via:
//
//	        CustomActionTypeOutputArtifactDetailsArgs{...}
//
//	or:
//
//	        nil
type CustomActionTypeOutputArtifactDetailsPtrInput interface {
	pulumi.Input

	ToCustomActionTypeOutputArtifactDetailsPtrOutput() CustomActionTypeOutputArtifactDetailsPtrOutput
	ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(context.Context) CustomActionTypeOutputArtifactDetailsPtrOutput
}

type customActionTypeOutputArtifactDetailsPtrType CustomActionTypeOutputArtifactDetailsArgs

func CustomActionTypeOutputArtifactDetailsPtr(v *CustomActionTypeOutputArtifactDetailsArgs) CustomActionTypeOutputArtifactDetailsPtrInput {
	return (*customActionTypeOutputArtifactDetailsPtrType)(v)
}

func (*customActionTypeOutputArtifactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeOutputArtifactDetails)(nil)).Elem()
}

func (i *customActionTypeOutputArtifactDetailsPtrType) ToCustomActionTypeOutputArtifactDetailsPtrOutput() CustomActionTypeOutputArtifactDetailsPtrOutput {
	return i.ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(context.Background())
}

func (i *customActionTypeOutputArtifactDetailsPtrType) ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeOutputArtifactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeOutputArtifactDetailsPtrOutput)
}

type CustomActionTypeOutputArtifactDetailsOutput struct{ *pulumi.OutputState }

func (CustomActionTypeOutputArtifactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeOutputArtifactDetails)(nil)).Elem()
}

func (o CustomActionTypeOutputArtifactDetailsOutput) ToCustomActionTypeOutputArtifactDetailsOutput() CustomActionTypeOutputArtifactDetailsOutput {
	return o
}

func (o CustomActionTypeOutputArtifactDetailsOutput) ToCustomActionTypeOutputArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeOutputArtifactDetailsOutput {
	return o
}

func (o CustomActionTypeOutputArtifactDetailsOutput) ToCustomActionTypeOutputArtifactDetailsPtrOutput() CustomActionTypeOutputArtifactDetailsPtrOutput {
	return o.ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(context.Background())
}

func (o CustomActionTypeOutputArtifactDetailsOutput) ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeOutputArtifactDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomActionTypeOutputArtifactDetails) *CustomActionTypeOutputArtifactDetails {
		return &v
	}).(CustomActionTypeOutputArtifactDetailsPtrOutput)
}

// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeOutputArtifactDetailsOutput) MaximumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeOutputArtifactDetails) int { return v.MaximumCount }).(pulumi.IntOutput)
}

// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeOutputArtifactDetailsOutput) MinimumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeOutputArtifactDetails) int { return v.MinimumCount }).(pulumi.IntOutput)
}

type CustomActionTypeOutputArtifactDetailsPtrOutput struct{ *pulumi.OutputState }

func (CustomActionTypeOutputArtifactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeOutputArtifactDetails)(nil)).Elem()
}

func (o CustomActionTypeOutputArtifactDetailsPtrOutput) ToCustomActionTypeOutputArtifactDetailsPtrOutput() CustomActionTypeOutputArtifactDetailsPtrOutput {
	return o
}

func (o CustomActionTypeOutputArtifactDetailsPtrOutput) ToCustomActionTypeOutputArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeOutputArtifactDetailsPtrOutput {
	return o
}

func (o CustomActionTypeOutputArtifactDetailsPtrOutput) Elem() CustomActionTypeOutputArtifactDetailsOutput {
	return o.ApplyT(func(v *CustomActionTypeOutputArtifactDetails) CustomActionTypeOutputArtifactDetails {
		if v != nil {
			return *v
		}
		var ret CustomActionTypeOutputArtifactDetails
		return ret
	}).(CustomActionTypeOutputArtifactDetailsOutput)
}

// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeOutputArtifactDetailsPtrOutput) MaximumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeOutputArtifactDetails) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumCount
	}).(pulumi.IntPtrOutput)
}

// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
func (o CustomActionTypeOutputArtifactDetailsPtrOutput) MinimumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeOutputArtifactDetails) *int {
		if v == nil {
			return nil
		}
		return &v.MinimumCount
	}).(pulumi.IntPtrOutput)
}

type CustomActionTypeSettings struct {
	// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.
	EntityUrlTemplate *string `pulumi:"entityUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.
	ExecutionUrlTemplate *string `pulumi:"executionUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
	RevisionUrlTemplate *string `pulumi:"revisionUrlTemplate"`
	// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
	ThirdPartyConfigurationUrl *string `pulumi:"thirdPartyConfigurationUrl"`
}

// CustomActionTypeSettingsInput is an input type that accepts CustomActionTypeSettingsArgs and CustomActionTypeSettingsOutput values.
// You can construct a concrete instance of `CustomActionTypeSettingsInput` via:
//
//	CustomActionTypeSettingsArgs{...}
type CustomActionTypeSettingsInput interface {
	pulumi.Input

	ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput
	ToCustomActionTypeSettingsOutputWithContext(context.Context) CustomActionTypeSettingsOutput
}

type CustomActionTypeSettingsArgs struct {
	// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.
	EntityUrlTemplate pulumi.StringPtrInput `pulumi:"entityUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.
	ExecutionUrlTemplate pulumi.StringPtrInput `pulumi:"executionUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
	RevisionUrlTemplate pulumi.StringPtrInput `pulumi:"revisionUrlTemplate"`
	// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
	ThirdPartyConfigurationUrl pulumi.StringPtrInput `pulumi:"thirdPartyConfigurationUrl"`
}

func (CustomActionTypeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeSettings)(nil)).Elem()
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput {
	return i.ToCustomActionTypeSettingsOutputWithContext(context.Background())
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsOutputWithContext(ctx context.Context) CustomActionTypeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsOutput)
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return i.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsOutput).ToCustomActionTypeSettingsPtrOutputWithContext(ctx)
}

// CustomActionTypeSettingsPtrInput is an input type that accepts CustomActionTypeSettingsArgs, CustomActionTypeSettingsPtr and CustomActionTypeSettingsPtrOutput values.
// You can construct a concrete instance of `CustomActionTypeSettingsPtrInput` via:
//
//	        CustomActionTypeSettingsArgs{...}
//
//	or:
//
//	        nil
type CustomActionTypeSettingsPtrInput interface {
	pulumi.Input

	ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput
	ToCustomActionTypeSettingsPtrOutputWithContext(context.Context) CustomActionTypeSettingsPtrOutput
}

type customActionTypeSettingsPtrType CustomActionTypeSettingsArgs

func CustomActionTypeSettingsPtr(v *CustomActionTypeSettingsArgs) CustomActionTypeSettingsPtrInput {
	return (*customActionTypeSettingsPtrType)(v)
}

func (*customActionTypeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeSettings)(nil)).Elem()
}

func (i *customActionTypeSettingsPtrType) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return i.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (i *customActionTypeSettingsPtrType) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsPtrOutput)
}

type CustomActionTypeSettingsOutput struct{ *pulumi.OutputState }

func (CustomActionTypeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeSettings)(nil)).Elem()
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput {
	return o
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsOutputWithContext(ctx context.Context) CustomActionTypeSettingsOutput {
	return o
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return o.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomActionTypeSettings) *CustomActionTypeSettings {
		return &v
	}).(CustomActionTypeSettingsPtrOutput)
}

// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.
func (o CustomActionTypeSettingsOutput) EntityUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.EntityUrlTemplate }).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.
func (o CustomActionTypeSettingsOutput) ExecutionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.ExecutionUrlTemplate }).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
func (o CustomActionTypeSettingsOutput) RevisionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.RevisionUrlTemplate }).(pulumi.StringPtrOutput)
}

// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
func (o CustomActionTypeSettingsOutput) ThirdPartyConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.ThirdPartyConfigurationUrl }).(pulumi.StringPtrOutput)
}

type CustomActionTypeSettingsPtrOutput struct{ *pulumi.OutputState }

func (CustomActionTypeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeSettings)(nil)).Elem()
}

func (o CustomActionTypeSettingsPtrOutput) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return o
}

func (o CustomActionTypeSettingsPtrOutput) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return o
}

func (o CustomActionTypeSettingsPtrOutput) Elem() CustomActionTypeSettingsOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) CustomActionTypeSettings {
		if v != nil {
			return *v
		}
		var ret CustomActionTypeSettings
		return ret
	}).(CustomActionTypeSettingsOutput)
}

// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.
func (o CustomActionTypeSettingsPtrOutput) EntityUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.EntityUrlTemplate
	}).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.
func (o CustomActionTypeSettingsPtrOutput) ExecutionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionUrlTemplate
	}).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
func (o CustomActionTypeSettingsPtrOutput) RevisionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.RevisionUrlTemplate
	}).(pulumi.StringPtrOutput)
}

// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
func (o CustomActionTypeSettingsPtrOutput) ThirdPartyConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ThirdPartyConfigurationUrl
	}).(pulumi.StringPtrOutput)
}

type PipelineArtifactStore struct {
	// The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryptionKey` block is documented below.
	EncryptionKey *PipelineArtifactStoreEncryptionKey `pulumi:"encryptionKey"`
	// The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
	Location string `pulumi:"location"`
	// The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
	Region *string `pulumi:"region"`
	// The type of the artifact store, such as Amazon S3
	Type string `pulumi:"type"`
}

// PipelineArtifactStoreInput is an input type that accepts PipelineArtifactStoreArgs and PipelineArtifactStoreOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreInput` via:
//
//	PipelineArtifactStoreArgs{...}
type PipelineArtifactStoreInput interface {
	pulumi.Input

	ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput
	ToPipelineArtifactStoreOutputWithContext(context.Context) PipelineArtifactStoreOutput
}

type PipelineArtifactStoreArgs struct {
	// The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryptionKey` block is documented below.
	EncryptionKey PipelineArtifactStoreEncryptionKeyPtrInput `pulumi:"encryptionKey"`
	// The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
	Location pulumi.StringInput `pulumi:"location"`
	// The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The type of the artifact store, such as Amazon S3
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineArtifactStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return i.ToPipelineArtifactStoreOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput)
}

// PipelineArtifactStoreArrayInput is an input type that accepts PipelineArtifactStoreArray and PipelineArtifactStoreArrayOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreArrayInput` via:
//
//	PipelineArtifactStoreArray{ PipelineArtifactStoreArgs{...} }
type PipelineArtifactStoreArrayInput interface {
	pulumi.Input

	ToPipelineArtifactStoreArrayOutput() PipelineArtifactStoreArrayOutput
	ToPipelineArtifactStoreArrayOutputWithContext(context.Context) PipelineArtifactStoreArrayOutput
}

type PipelineArtifactStoreArray []PipelineArtifactStoreInput

func (PipelineArtifactStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStore)(nil)).Elem()
}

func (i PipelineArtifactStoreArray) ToPipelineArtifactStoreArrayOutput() PipelineArtifactStoreArrayOutput {
	return i.ToPipelineArtifactStoreArrayOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArray) ToPipelineArtifactStoreArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreArrayOutput)
}

type PipelineArtifactStoreOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return o
}

// The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryptionKey` block is documented below.
func (o PipelineArtifactStoreOutput) EncryptionKey() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ApplyT(func(v PipelineArtifactStore) *PipelineArtifactStoreEncryptionKey { return v.EncryptionKey }).(PipelineArtifactStoreEncryptionKeyPtrOutput)
}

// The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
func (o PipelineArtifactStoreOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Location }).(pulumi.StringOutput)
}

// The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
func (o PipelineArtifactStoreOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineArtifactStore) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The type of the artifact store, such as Amazon S3
func (o PipelineArtifactStoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineArtifactStoreArrayOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStoreArrayOutput) ToPipelineArtifactStoreArrayOutput() PipelineArtifactStoreArrayOutput {
	return o
}

func (o PipelineArtifactStoreArrayOutput) ToPipelineArtifactStoreArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreArrayOutput {
	return o
}

func (o PipelineArtifactStoreArrayOutput) Index(i pulumi.IntInput) PipelineArtifactStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineArtifactStore {
		return vs[0].([]PipelineArtifactStore)[vs[1].(int)]
	}).(PipelineArtifactStoreOutput)
}

type PipelineArtifactStoreEncryptionKey struct {
	// The KMS key ARN or ID
	Id string `pulumi:"id"`
	// The type of key; currently only `KMS` is supported
	Type string `pulumi:"type"`
}

// PipelineArtifactStoreEncryptionKeyInput is an input type that accepts PipelineArtifactStoreEncryptionKeyArgs and PipelineArtifactStoreEncryptionKeyOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreEncryptionKeyInput` via:
//
//	PipelineArtifactStoreEncryptionKeyArgs{...}
type PipelineArtifactStoreEncryptionKeyInput interface {
	pulumi.Input

	ToPipelineArtifactStoreEncryptionKeyOutput() PipelineArtifactStoreEncryptionKeyOutput
	ToPipelineArtifactStoreEncryptionKeyOutputWithContext(context.Context) PipelineArtifactStoreEncryptionKeyOutput
}

type PipelineArtifactStoreEncryptionKeyArgs struct {
	// The KMS key ARN or ID
	Id pulumi.StringInput `pulumi:"id"`
	// The type of key; currently only `KMS` is supported
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineArtifactStoreEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyOutput() PipelineArtifactStoreEncryptionKeyOutput {
	return i.ToPipelineArtifactStoreEncryptionKeyOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreEncryptionKeyOutput)
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return i.ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreEncryptionKeyArgs) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreEncryptionKeyOutput).ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx)
}

// PipelineArtifactStoreEncryptionKeyPtrInput is an input type that accepts PipelineArtifactStoreEncryptionKeyArgs, PipelineArtifactStoreEncryptionKeyPtr and PipelineArtifactStoreEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreEncryptionKeyPtrInput` via:
//
//	        PipelineArtifactStoreEncryptionKeyArgs{...}
//
//	or:
//
//	        nil
type PipelineArtifactStoreEncryptionKeyPtrInput interface {
	pulumi.Input

	ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput
	ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput
}

type pipelineArtifactStoreEncryptionKeyPtrType PipelineArtifactStoreEncryptionKeyArgs

func PipelineArtifactStoreEncryptionKeyPtr(v *PipelineArtifactStoreEncryptionKeyArgs) PipelineArtifactStoreEncryptionKeyPtrInput {
	return (*pipelineArtifactStoreEncryptionKeyPtrType)(v)
}

func (*pipelineArtifactStoreEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (i *pipelineArtifactStoreEncryptionKeyPtrType) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return i.ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *pipelineArtifactStoreEncryptionKeyPtrType) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreEncryptionKeyPtrOutput)
}

type PipelineArtifactStoreEncryptionKeyOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyOutput() PipelineArtifactStoreEncryptionKeyOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreEncryptionKeyOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineArtifactStoreEncryptionKey) *PipelineArtifactStoreEncryptionKey {
		return &v
	}).(PipelineArtifactStoreEncryptionKeyPtrOutput)
}

// The KMS key ARN or ID
func (o PipelineArtifactStoreEncryptionKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStoreEncryptionKey) string { return v.Id }).(pulumi.StringOutput)
}

// The type of key; currently only `KMS` is supported
func (o PipelineArtifactStoreEncryptionKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStoreEncryptionKey) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineArtifactStoreEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStoreEncryptionKey)(nil)).Elem()
}

func (o PipelineArtifactStoreEncryptionKeyPtrOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutput() PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyPtrOutput) ToPipelineArtifactStoreEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o
}

func (o PipelineArtifactStoreEncryptionKeyPtrOutput) Elem() PipelineArtifactStoreEncryptionKeyOutput {
	return o.ApplyT(func(v *PipelineArtifactStoreEncryptionKey) PipelineArtifactStoreEncryptionKey {
		if v != nil {
			return *v
		}
		var ret PipelineArtifactStoreEncryptionKey
		return ret
	}).(PipelineArtifactStoreEncryptionKeyOutput)
}

// The KMS key ARN or ID
func (o PipelineArtifactStoreEncryptionKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStoreEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The type of key; currently only `KMS` is supported
func (o PipelineArtifactStoreEncryptionKeyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStoreEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PipelineStage struct {
	// The action(s) to include in the stage. Defined as an `action` block below
	Actions []PipelineStageAction `pulumi:"actions"`
	// The name of the stage.
	Name string `pulumi:"name"`
}

// PipelineStageInput is an input type that accepts PipelineStageArgs and PipelineStageOutput values.
// You can construct a concrete instance of `PipelineStageInput` via:
//
//	PipelineStageArgs{...}
type PipelineStageInput interface {
	pulumi.Input

	ToPipelineStageOutput() PipelineStageOutput
	ToPipelineStageOutputWithContext(context.Context) PipelineStageOutput
}

type PipelineStageArgs struct {
	// The action(s) to include in the stage. Defined as an `action` block below
	Actions PipelineStageActionArrayInput `pulumi:"actions"`
	// The name of the stage.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStage)(nil)).Elem()
}

func (i PipelineStageArgs) ToPipelineStageOutput() PipelineStageOutput {
	return i.ToPipelineStageOutputWithContext(context.Background())
}

func (i PipelineStageArgs) ToPipelineStageOutputWithContext(ctx context.Context) PipelineStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageOutput)
}

// PipelineStageArrayInput is an input type that accepts PipelineStageArray and PipelineStageArrayOutput values.
// You can construct a concrete instance of `PipelineStageArrayInput` via:
//
//	PipelineStageArray{ PipelineStageArgs{...} }
type PipelineStageArrayInput interface {
	pulumi.Input

	ToPipelineStageArrayOutput() PipelineStageArrayOutput
	ToPipelineStageArrayOutputWithContext(context.Context) PipelineStageArrayOutput
}

type PipelineStageArray []PipelineStageInput

func (PipelineStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStage)(nil)).Elem()
}

func (i PipelineStageArray) ToPipelineStageArrayOutput() PipelineStageArrayOutput {
	return i.ToPipelineStageArrayOutputWithContext(context.Background())
}

func (i PipelineStageArray) ToPipelineStageArrayOutputWithContext(ctx context.Context) PipelineStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageArrayOutput)
}

type PipelineStageOutput struct{ *pulumi.OutputState }

func (PipelineStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStage)(nil)).Elem()
}

func (o PipelineStageOutput) ToPipelineStageOutput() PipelineStageOutput {
	return o
}

func (o PipelineStageOutput) ToPipelineStageOutputWithContext(ctx context.Context) PipelineStageOutput {
	return o
}

// The action(s) to include in the stage. Defined as an `action` block below
func (o PipelineStageOutput) Actions() PipelineStageActionArrayOutput {
	return o.ApplyT(func(v PipelineStage) []PipelineStageAction { return v.Actions }).(PipelineStageActionArrayOutput)
}

// The name of the stage.
func (o PipelineStageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStage) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineStageArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStage)(nil)).Elem()
}

func (o PipelineStageArrayOutput) ToPipelineStageArrayOutput() PipelineStageArrayOutput {
	return o
}

func (o PipelineStageArrayOutput) ToPipelineStageArrayOutputWithContext(ctx context.Context) PipelineStageArrayOutput {
	return o
}

func (o PipelineStageArrayOutput) Index(i pulumi.IntInput) PipelineStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStage {
		return vs[0].([]PipelineStage)[vs[1].(int)]
	}).(PipelineStageOutput)
}

type PipelineStageAction struct {
	// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
	Category string `pulumi:"category"`
	// A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Configuration map[string]string `pulumi:"configuration"`
	// A list of artifact names to be worked on.
	InputArtifacts []string `pulumi:"inputArtifacts"`
	// The action declaration's name.
	Name string `pulumi:"name"`
	// The namespace all output variables will be accessed from.
	Namespace *string `pulumi:"namespace"`
	// A list of artifact names to output. Output artifact names must be unique within a pipeline.
	OutputArtifacts []string `pulumi:"outputArtifacts"`
	// The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
	Owner string `pulumi:"owner"`
	// The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Provider string `pulumi:"provider"`
	// The region in which to run the action.
	Region *string `pulumi:"region"`
	// The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
	RoleArn *string `pulumi:"roleArn"`
	// The order in which actions are run.
	RunOrder *int `pulumi:"runOrder"`
	// A string that identifies the action type.
	Version string `pulumi:"version"`
}

// PipelineStageActionInput is an input type that accepts PipelineStageActionArgs and PipelineStageActionOutput values.
// You can construct a concrete instance of `PipelineStageActionInput` via:
//
//	PipelineStageActionArgs{...}
type PipelineStageActionInput interface {
	pulumi.Input

	ToPipelineStageActionOutput() PipelineStageActionOutput
	ToPipelineStageActionOutputWithContext(context.Context) PipelineStageActionOutput
}

type PipelineStageActionArgs struct {
	// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
	Category pulumi.StringInput `pulumi:"category"`
	// A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Configuration pulumi.StringMapInput `pulumi:"configuration"`
	// A list of artifact names to be worked on.
	InputArtifacts pulumi.StringArrayInput `pulumi:"inputArtifacts"`
	// The action declaration's name.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace all output variables will be accessed from.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// A list of artifact names to output. Output artifact names must be unique within a pipeline.
	OutputArtifacts pulumi.StringArrayInput `pulumi:"outputArtifacts"`
	// The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
	Provider pulumi.StringInput `pulumi:"provider"`
	// The region in which to run the action.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The order in which actions are run.
	RunOrder pulumi.IntPtrInput `pulumi:"runOrder"`
	// A string that identifies the action type.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PipelineStageActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageAction)(nil)).Elem()
}

func (i PipelineStageActionArgs) ToPipelineStageActionOutput() PipelineStageActionOutput {
	return i.ToPipelineStageActionOutputWithContext(context.Background())
}

func (i PipelineStageActionArgs) ToPipelineStageActionOutputWithContext(ctx context.Context) PipelineStageActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageActionOutput)
}

// PipelineStageActionArrayInput is an input type that accepts PipelineStageActionArray and PipelineStageActionArrayOutput values.
// You can construct a concrete instance of `PipelineStageActionArrayInput` via:
//
//	PipelineStageActionArray{ PipelineStageActionArgs{...} }
type PipelineStageActionArrayInput interface {
	pulumi.Input

	ToPipelineStageActionArrayOutput() PipelineStageActionArrayOutput
	ToPipelineStageActionArrayOutputWithContext(context.Context) PipelineStageActionArrayOutput
}

type PipelineStageActionArray []PipelineStageActionInput

func (PipelineStageActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageAction)(nil)).Elem()
}

func (i PipelineStageActionArray) ToPipelineStageActionArrayOutput() PipelineStageActionArrayOutput {
	return i.ToPipelineStageActionArrayOutputWithContext(context.Background())
}

func (i PipelineStageActionArray) ToPipelineStageActionArrayOutputWithContext(ctx context.Context) PipelineStageActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageActionArrayOutput)
}

type PipelineStageActionOutput struct{ *pulumi.OutputState }

func (PipelineStageActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageAction)(nil)).Elem()
}

func (o PipelineStageActionOutput) ToPipelineStageActionOutput() PipelineStageActionOutput {
	return o
}

func (o PipelineStageActionOutput) ToPipelineStageActionOutputWithContext(ctx context.Context) PipelineStageActionOutput {
	return o
}

// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
func (o PipelineStageActionOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Category }).(pulumi.StringOutput)
}

// A map of the action declaration's configuration. Configurations options for action types and providers can be found in the [Pipeline Structure Reference](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) and [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
func (o PipelineStageActionOutput) Configuration() pulumi.StringMapOutput {
	return o.ApplyT(func(v PipelineStageAction) map[string]string { return v.Configuration }).(pulumi.StringMapOutput)
}

// A list of artifact names to be worked on.
func (o PipelineStageActionOutput) InputArtifacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineStageAction) []string { return v.InputArtifacts }).(pulumi.StringArrayOutput)
}

// The action declaration's name.
func (o PipelineStageActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace all output variables will be accessed from.
func (o PipelineStageActionOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// A list of artifact names to output. Output artifact names must be unique within a pipeline.
func (o PipelineStageActionOutput) OutputArtifacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineStageAction) []string { return v.OutputArtifacts }).(pulumi.StringArrayOutput)
}

// The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
func (o PipelineStageActionOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Owner }).(pulumi.StringOutput)
}

// The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.
func (o PipelineStageActionOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Provider }).(pulumi.StringOutput)
}

// The region in which to run the action.
func (o PipelineStageActionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
func (o PipelineStageActionOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The order in which actions are run.
func (o PipelineStageActionOutput) RunOrder() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PipelineStageAction) *int { return v.RunOrder }).(pulumi.IntPtrOutput)
}

// A string that identifies the action type.
func (o PipelineStageActionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageAction) string { return v.Version }).(pulumi.StringOutput)
}

type PipelineStageActionArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageAction)(nil)).Elem()
}

func (o PipelineStageActionArrayOutput) ToPipelineStageActionArrayOutput() PipelineStageActionArrayOutput {
	return o
}

func (o PipelineStageActionArrayOutput) ToPipelineStageActionArrayOutputWithContext(ctx context.Context) PipelineStageActionArrayOutput {
	return o
}

func (o PipelineStageActionArrayOutput) Index(i pulumi.IntInput) PipelineStageActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStageAction {
		return vs[0].([]PipelineStageAction)[vs[1].(int)]
	}).(PipelineStageActionOutput)
}

type PipelineTrigger struct {
	// Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `gitConfiguration` block is documented below.
	GitConfiguration PipelineTriggerGitConfiguration `pulumi:"gitConfiguration"`
	// The source provider for the event. Possible value is `CodeStarSourceConnection`.
	ProviderType string `pulumi:"providerType"`
}

// PipelineTriggerInput is an input type that accepts PipelineTriggerArgs and PipelineTriggerOutput values.
// You can construct a concrete instance of `PipelineTriggerInput` via:
//
//	PipelineTriggerArgs{...}
type PipelineTriggerInput interface {
	pulumi.Input

	ToPipelineTriggerOutput() PipelineTriggerOutput
	ToPipelineTriggerOutputWithContext(context.Context) PipelineTriggerOutput
}

type PipelineTriggerArgs struct {
	// Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `gitConfiguration` block is documented below.
	GitConfiguration PipelineTriggerGitConfigurationInput `pulumi:"gitConfiguration"`
	// The source provider for the event. Possible value is `CodeStarSourceConnection`.
	ProviderType pulumi.StringInput `pulumi:"providerType"`
}

func (PipelineTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTrigger)(nil)).Elem()
}

func (i PipelineTriggerArgs) ToPipelineTriggerOutput() PipelineTriggerOutput {
	return i.ToPipelineTriggerOutputWithContext(context.Background())
}

func (i PipelineTriggerArgs) ToPipelineTriggerOutputWithContext(ctx context.Context) PipelineTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerOutput)
}

// PipelineTriggerArrayInput is an input type that accepts PipelineTriggerArray and PipelineTriggerArrayOutput values.
// You can construct a concrete instance of `PipelineTriggerArrayInput` via:
//
//	PipelineTriggerArray{ PipelineTriggerArgs{...} }
type PipelineTriggerArrayInput interface {
	pulumi.Input

	ToPipelineTriggerArrayOutput() PipelineTriggerArrayOutput
	ToPipelineTriggerArrayOutputWithContext(context.Context) PipelineTriggerArrayOutput
}

type PipelineTriggerArray []PipelineTriggerInput

func (PipelineTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTrigger)(nil)).Elem()
}

func (i PipelineTriggerArray) ToPipelineTriggerArrayOutput() PipelineTriggerArrayOutput {
	return i.ToPipelineTriggerArrayOutputWithContext(context.Background())
}

func (i PipelineTriggerArray) ToPipelineTriggerArrayOutputWithContext(ctx context.Context) PipelineTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerArrayOutput)
}

type PipelineTriggerOutput struct{ *pulumi.OutputState }

func (PipelineTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTrigger)(nil)).Elem()
}

func (o PipelineTriggerOutput) ToPipelineTriggerOutput() PipelineTriggerOutput {
	return o
}

func (o PipelineTriggerOutput) ToPipelineTriggerOutputWithContext(ctx context.Context) PipelineTriggerOutput {
	return o
}

// Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the [AWS documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-filter.html). A `gitConfiguration` block is documented below.
func (o PipelineTriggerOutput) GitConfiguration() PipelineTriggerGitConfigurationOutput {
	return o.ApplyT(func(v PipelineTrigger) PipelineTriggerGitConfiguration { return v.GitConfiguration }).(PipelineTriggerGitConfigurationOutput)
}

// The source provider for the event. Possible value is `CodeStarSourceConnection`.
func (o PipelineTriggerOutput) ProviderType() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTrigger) string { return v.ProviderType }).(pulumi.StringOutput)
}

type PipelineTriggerArrayOutput struct{ *pulumi.OutputState }

func (PipelineTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTrigger)(nil)).Elem()
}

func (o PipelineTriggerArrayOutput) ToPipelineTriggerArrayOutput() PipelineTriggerArrayOutput {
	return o
}

func (o PipelineTriggerArrayOutput) ToPipelineTriggerArrayOutputWithContext(ctx context.Context) PipelineTriggerArrayOutput {
	return o
}

func (o PipelineTriggerArrayOutput) Index(i pulumi.IntInput) PipelineTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTrigger {
		return vs[0].([]PipelineTrigger)[vs[1].(int)]
	}).(PipelineTriggerOutput)
}

type PipelineTriggerGitConfiguration struct {
	// The field where the repository event that will start the pipeline is specified as pull requests. A `pullRequest` block is documented below.
	PullRequests []PipelineTriggerGitConfigurationPullRequest `pulumi:"pullRequests"`
	// The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A `push` block is documented below.
	Pushes []PipelineTriggerGitConfigurationPush `pulumi:"pushes"`
	// The name of the pipeline source action where the trigger configuration.
	SourceActionName string `pulumi:"sourceActionName"`
}

// PipelineTriggerGitConfigurationInput is an input type that accepts PipelineTriggerGitConfigurationArgs and PipelineTriggerGitConfigurationOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationInput` via:
//
//	PipelineTriggerGitConfigurationArgs{...}
type PipelineTriggerGitConfigurationInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationOutput() PipelineTriggerGitConfigurationOutput
	ToPipelineTriggerGitConfigurationOutputWithContext(context.Context) PipelineTriggerGitConfigurationOutput
}

type PipelineTriggerGitConfigurationArgs struct {
	// The field where the repository event that will start the pipeline is specified as pull requests. A `pullRequest` block is documented below.
	PullRequests PipelineTriggerGitConfigurationPullRequestArrayInput `pulumi:"pullRequests"`
	// The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A `push` block is documented below.
	Pushes PipelineTriggerGitConfigurationPushArrayInput `pulumi:"pushes"`
	// The name of the pipeline source action where the trigger configuration.
	SourceActionName pulumi.StringInput `pulumi:"sourceActionName"`
}

func (PipelineTriggerGitConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfiguration)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationArgs) ToPipelineTriggerGitConfigurationOutput() PipelineTriggerGitConfigurationOutput {
	return i.ToPipelineTriggerGitConfigurationOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationArgs) ToPipelineTriggerGitConfigurationOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationOutput)
}

type PipelineTriggerGitConfigurationOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfiguration)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationOutput) ToPipelineTriggerGitConfigurationOutput() PipelineTriggerGitConfigurationOutput {
	return o
}

func (o PipelineTriggerGitConfigurationOutput) ToPipelineTriggerGitConfigurationOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationOutput {
	return o
}

// The field where the repository event that will start the pipeline is specified as pull requests. A `pullRequest` block is documented below.
func (o PipelineTriggerGitConfigurationOutput) PullRequests() PipelineTriggerGitConfigurationPullRequestArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfiguration) []PipelineTriggerGitConfigurationPullRequest {
		return v.PullRequests
	}).(PipelineTriggerGitConfigurationPullRequestArrayOutput)
}

// The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A `push` block is documented below.
func (o PipelineTriggerGitConfigurationOutput) Pushes() PipelineTriggerGitConfigurationPushArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfiguration) []PipelineTriggerGitConfigurationPush { return v.Pushes }).(PipelineTriggerGitConfigurationPushArrayOutput)
}

// The name of the pipeline source action where the trigger configuration.
func (o PipelineTriggerGitConfigurationOutput) SourceActionName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfiguration) string { return v.SourceActionName }).(pulumi.StringOutput)
}

type PipelineTriggerGitConfigurationPullRequest struct {
	// The field that specifies to filter on branches for the pull request trigger configuration. A `branches` block is documented below.
	Branches *PipelineTriggerGitConfigurationPullRequestBranches `pulumi:"branches"`
	// A list that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration. Possible values are `OPEN`, ` UPDATED  ` and `CLOSED`.
	Events []string `pulumi:"events"`
	// The field that specifies to filter on file paths for the pull request trigger configuration. A `filePaths` block is documented below.
	FilePaths *PipelineTriggerGitConfigurationPullRequestFilePaths `pulumi:"filePaths"`
}

// PipelineTriggerGitConfigurationPullRequestInput is an input type that accepts PipelineTriggerGitConfigurationPullRequestArgs and PipelineTriggerGitConfigurationPullRequestOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPullRequestInput` via:
//
//	PipelineTriggerGitConfigurationPullRequestArgs{...}
type PipelineTriggerGitConfigurationPullRequestInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPullRequestOutput() PipelineTriggerGitConfigurationPullRequestOutput
	ToPipelineTriggerGitConfigurationPullRequestOutputWithContext(context.Context) PipelineTriggerGitConfigurationPullRequestOutput
}

type PipelineTriggerGitConfigurationPullRequestArgs struct {
	// The field that specifies to filter on branches for the pull request trigger configuration. A `branches` block is documented below.
	Branches PipelineTriggerGitConfigurationPullRequestBranchesPtrInput `pulumi:"branches"`
	// A list that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration. Possible values are `OPEN`, ` UPDATED  ` and `CLOSED`.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// The field that specifies to filter on file paths for the pull request trigger configuration. A `filePaths` block is documented below.
	FilePaths PipelineTriggerGitConfigurationPullRequestFilePathsPtrInput `pulumi:"filePaths"`
}

func (PipelineTriggerGitConfigurationPullRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequest)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPullRequestArgs) ToPipelineTriggerGitConfigurationPullRequestOutput() PipelineTriggerGitConfigurationPullRequestOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPullRequestArgs) ToPipelineTriggerGitConfigurationPullRequestOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestOutput)
}

// PipelineTriggerGitConfigurationPullRequestArrayInput is an input type that accepts PipelineTriggerGitConfigurationPullRequestArray and PipelineTriggerGitConfigurationPullRequestArrayOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPullRequestArrayInput` via:
//
//	PipelineTriggerGitConfigurationPullRequestArray{ PipelineTriggerGitConfigurationPullRequestArgs{...} }
type PipelineTriggerGitConfigurationPullRequestArrayInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPullRequestArrayOutput() PipelineTriggerGitConfigurationPullRequestArrayOutput
	ToPipelineTriggerGitConfigurationPullRequestArrayOutputWithContext(context.Context) PipelineTriggerGitConfigurationPullRequestArrayOutput
}

type PipelineTriggerGitConfigurationPullRequestArray []PipelineTriggerGitConfigurationPullRequestInput

func (PipelineTriggerGitConfigurationPullRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTriggerGitConfigurationPullRequest)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPullRequestArray) ToPipelineTriggerGitConfigurationPullRequestArrayOutput() PipelineTriggerGitConfigurationPullRequestArrayOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestArrayOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPullRequestArray) ToPipelineTriggerGitConfigurationPullRequestArrayOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestArrayOutput)
}

type PipelineTriggerGitConfigurationPullRequestOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPullRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequest)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPullRequestOutput) ToPipelineTriggerGitConfigurationPullRequestOutput() PipelineTriggerGitConfigurationPullRequestOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestOutput) ToPipelineTriggerGitConfigurationPullRequestOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestOutput {
	return o
}

// The field that specifies to filter on branches for the pull request trigger configuration. A `branches` block is documented below.
func (o PipelineTriggerGitConfigurationPullRequestOutput) Branches() PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPullRequest) *PipelineTriggerGitConfigurationPullRequestBranches {
		return v.Branches
	}).(PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput)
}

// A list that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration. Possible values are `OPEN`, ` UPDATED  ` and `CLOSED`.
func (o PipelineTriggerGitConfigurationPullRequestOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPullRequest) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// The field that specifies to filter on file paths for the pull request trigger configuration. A `filePaths` block is documented below.
func (o PipelineTriggerGitConfigurationPullRequestOutput) FilePaths() PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPullRequest) *PipelineTriggerGitConfigurationPullRequestFilePaths {
		return v.FilePaths
	}).(PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput)
}

type PipelineTriggerGitConfigurationPullRequestArrayOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPullRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTriggerGitConfigurationPullRequest)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPullRequestArrayOutput) ToPipelineTriggerGitConfigurationPullRequestArrayOutput() PipelineTriggerGitConfigurationPullRequestArrayOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestArrayOutput) ToPipelineTriggerGitConfigurationPullRequestArrayOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestArrayOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestArrayOutput) Index(i pulumi.IntInput) PipelineTriggerGitConfigurationPullRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTriggerGitConfigurationPullRequest {
		return vs[0].([]PipelineTriggerGitConfigurationPullRequest)[vs[1].(int)]
	}).(PipelineTriggerGitConfigurationPullRequestOutput)
}

type PipelineTriggerGitConfigurationPullRequestBranches struct {
	// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes []string `pulumi:"excludes"`
	// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes []string `pulumi:"includes"`
}

// PipelineTriggerGitConfigurationPullRequestBranchesInput is an input type that accepts PipelineTriggerGitConfigurationPullRequestBranchesArgs and PipelineTriggerGitConfigurationPullRequestBranchesOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPullRequestBranchesInput` via:
//
//	PipelineTriggerGitConfigurationPullRequestBranchesArgs{...}
type PipelineTriggerGitConfigurationPullRequestBranchesInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPullRequestBranchesOutput() PipelineTriggerGitConfigurationPullRequestBranchesOutput
	ToPipelineTriggerGitConfigurationPullRequestBranchesOutputWithContext(context.Context) PipelineTriggerGitConfigurationPullRequestBranchesOutput
}

type PipelineTriggerGitConfigurationPullRequestBranchesArgs struct {
	// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PipelineTriggerGitConfigurationPullRequestBranchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestBranches)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPullRequestBranchesArgs) ToPipelineTriggerGitConfigurationPullRequestBranchesOutput() PipelineTriggerGitConfigurationPullRequestBranchesOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestBranchesOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPullRequestBranchesArgs) ToPipelineTriggerGitConfigurationPullRequestBranchesOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestBranchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestBranchesOutput)
}

func (i PipelineTriggerGitConfigurationPullRequestBranchesArgs) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutput() PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPullRequestBranchesArgs) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestBranchesOutput).ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(ctx)
}

// PipelineTriggerGitConfigurationPullRequestBranchesPtrInput is an input type that accepts PipelineTriggerGitConfigurationPullRequestBranchesArgs, PipelineTriggerGitConfigurationPullRequestBranchesPtr and PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPullRequestBranchesPtrInput` via:
//
//	        PipelineTriggerGitConfigurationPullRequestBranchesArgs{...}
//
//	or:
//
//	        nil
type PipelineTriggerGitConfigurationPullRequestBranchesPtrInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutput() PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput
	ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(context.Context) PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput
}

type pipelineTriggerGitConfigurationPullRequestBranchesPtrType PipelineTriggerGitConfigurationPullRequestBranchesArgs

func PipelineTriggerGitConfigurationPullRequestBranchesPtr(v *PipelineTriggerGitConfigurationPullRequestBranchesArgs) PipelineTriggerGitConfigurationPullRequestBranchesPtrInput {
	return (*pipelineTriggerGitConfigurationPullRequestBranchesPtrType)(v)
}

func (*pipelineTriggerGitConfigurationPullRequestBranchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPullRequestBranches)(nil)).Elem()
}

func (i *pipelineTriggerGitConfigurationPullRequestBranchesPtrType) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutput() PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(context.Background())
}

func (i *pipelineTriggerGitConfigurationPullRequestBranchesPtrType) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput)
}

type PipelineTriggerGitConfigurationPullRequestBranchesOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPullRequestBranchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestBranches)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPullRequestBranchesOutput) ToPipelineTriggerGitConfigurationPullRequestBranchesOutput() PipelineTriggerGitConfigurationPullRequestBranchesOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestBranchesOutput) ToPipelineTriggerGitConfigurationPullRequestBranchesOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestBranchesOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestBranchesOutput) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutput() PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return o.ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(context.Background())
}

func (o PipelineTriggerGitConfigurationPullRequestBranchesOutput) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineTriggerGitConfigurationPullRequestBranches) *PipelineTriggerGitConfigurationPullRequestBranches {
		return &v
	}).(PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestBranchesOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPullRequestBranches) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestBranchesOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPullRequestBranches) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPullRequestBranches)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutput() PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput) ToPipelineTriggerGitConfigurationPullRequestBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput) Elem() PipelineTriggerGitConfigurationPullRequestBranchesOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPullRequestBranches) PipelineTriggerGitConfigurationPullRequestBranches {
		if v != nil {
			return *v
		}
		var ret PipelineTriggerGitConfigurationPullRequestBranches
		return ret
	}).(PipelineTriggerGitConfigurationPullRequestBranchesOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPullRequestBranches) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPullRequestBranches) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPullRequestFilePaths struct {
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes []string `pulumi:"excludes"`
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes []string `pulumi:"includes"`
}

// PipelineTriggerGitConfigurationPullRequestFilePathsInput is an input type that accepts PipelineTriggerGitConfigurationPullRequestFilePathsArgs and PipelineTriggerGitConfigurationPullRequestFilePathsOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPullRequestFilePathsInput` via:
//
//	PipelineTriggerGitConfigurationPullRequestFilePathsArgs{...}
type PipelineTriggerGitConfigurationPullRequestFilePathsInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPullRequestFilePathsOutput() PipelineTriggerGitConfigurationPullRequestFilePathsOutput
	ToPipelineTriggerGitConfigurationPullRequestFilePathsOutputWithContext(context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsOutput
}

type PipelineTriggerGitConfigurationPullRequestFilePathsArgs struct {
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PipelineTriggerGitConfigurationPullRequestFilePathsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestFilePaths)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPullRequestFilePathsArgs) ToPipelineTriggerGitConfigurationPullRequestFilePathsOutput() PipelineTriggerGitConfigurationPullRequestFilePathsOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestFilePathsOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPullRequestFilePathsArgs) ToPipelineTriggerGitConfigurationPullRequestFilePathsOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestFilePathsOutput)
}

func (i PipelineTriggerGitConfigurationPullRequestFilePathsArgs) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput() PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPullRequestFilePathsArgs) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestFilePathsOutput).ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(ctx)
}

// PipelineTriggerGitConfigurationPullRequestFilePathsPtrInput is an input type that accepts PipelineTriggerGitConfigurationPullRequestFilePathsArgs, PipelineTriggerGitConfigurationPullRequestFilePathsPtr and PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPullRequestFilePathsPtrInput` via:
//
//	        PipelineTriggerGitConfigurationPullRequestFilePathsArgs{...}
//
//	or:
//
//	        nil
type PipelineTriggerGitConfigurationPullRequestFilePathsPtrInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput() PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput
	ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput
}

type pipelineTriggerGitConfigurationPullRequestFilePathsPtrType PipelineTriggerGitConfigurationPullRequestFilePathsArgs

func PipelineTriggerGitConfigurationPullRequestFilePathsPtr(v *PipelineTriggerGitConfigurationPullRequestFilePathsArgs) PipelineTriggerGitConfigurationPullRequestFilePathsPtrInput {
	return (*pipelineTriggerGitConfigurationPullRequestFilePathsPtrType)(v)
}

func (*pipelineTriggerGitConfigurationPullRequestFilePathsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPullRequestFilePaths)(nil)).Elem()
}

func (i *pipelineTriggerGitConfigurationPullRequestFilePathsPtrType) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput() PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(context.Background())
}

func (i *pipelineTriggerGitConfigurationPullRequestFilePathsPtrType) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput)
}

type PipelineTriggerGitConfigurationPullRequestFilePathsOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPullRequestFilePathsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestFilePaths)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPullRequestFilePathsOutput) ToPipelineTriggerGitConfigurationPullRequestFilePathsOutput() PipelineTriggerGitConfigurationPullRequestFilePathsOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestFilePathsOutput) ToPipelineTriggerGitConfigurationPullRequestFilePathsOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestFilePathsOutput) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput() PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return o.ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(context.Background())
}

func (o PipelineTriggerGitConfigurationPullRequestFilePathsOutput) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineTriggerGitConfigurationPullRequestFilePaths) *PipelineTriggerGitConfigurationPullRequestFilePaths {
		return &v
	}).(PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestFilePathsOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPullRequestFilePaths) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestFilePathsOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPullRequestFilePaths) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPullRequestFilePaths)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput() PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput) ToPipelineTriggerGitConfigurationPullRequestFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput) Elem() PipelineTriggerGitConfigurationPullRequestFilePathsOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPullRequestFilePaths) PipelineTriggerGitConfigurationPullRequestFilePaths {
		if v != nil {
			return *v
		}
		var ret PipelineTriggerGitConfigurationPullRequestFilePaths
		return ret
	}).(PipelineTriggerGitConfigurationPullRequestFilePathsOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPullRequestFilePaths) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPullRequestFilePaths) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPush struct {
	// The field that specifies to filter on branches for the push trigger configuration. A `branches` block is documented below.
	Branches *PipelineTriggerGitConfigurationPushBranches `pulumi:"branches"`
	// The field that specifies to filter on file paths for the push trigger configuration. A `filePaths` block is documented below.
	FilePaths *PipelineTriggerGitConfigurationPushFilePaths `pulumi:"filePaths"`
	// The field that contains the details for the Git tags trigger configuration. A `tags` block is documented below.
	Tags *PipelineTriggerGitConfigurationPushTags `pulumi:"tags"`
}

// PipelineTriggerGitConfigurationPushInput is an input type that accepts PipelineTriggerGitConfigurationPushArgs and PipelineTriggerGitConfigurationPushOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushInput` via:
//
//	PipelineTriggerGitConfigurationPushArgs{...}
type PipelineTriggerGitConfigurationPushInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushOutput() PipelineTriggerGitConfigurationPushOutput
	ToPipelineTriggerGitConfigurationPushOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushOutput
}

type PipelineTriggerGitConfigurationPushArgs struct {
	// The field that specifies to filter on branches for the push trigger configuration. A `branches` block is documented below.
	Branches PipelineTriggerGitConfigurationPushBranchesPtrInput `pulumi:"branches"`
	// The field that specifies to filter on file paths for the push trigger configuration. A `filePaths` block is documented below.
	FilePaths PipelineTriggerGitConfigurationPushFilePathsPtrInput `pulumi:"filePaths"`
	// The field that contains the details for the Git tags trigger configuration. A `tags` block is documented below.
	Tags PipelineTriggerGitConfigurationPushTagsPtrInput `pulumi:"tags"`
}

func (PipelineTriggerGitConfigurationPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPush)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPushArgs) ToPipelineTriggerGitConfigurationPushOutput() PipelineTriggerGitConfigurationPushOutput {
	return i.ToPipelineTriggerGitConfigurationPushOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushArgs) ToPipelineTriggerGitConfigurationPushOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushOutput)
}

// PipelineTriggerGitConfigurationPushArrayInput is an input type that accepts PipelineTriggerGitConfigurationPushArray and PipelineTriggerGitConfigurationPushArrayOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushArrayInput` via:
//
//	PipelineTriggerGitConfigurationPushArray{ PipelineTriggerGitConfigurationPushArgs{...} }
type PipelineTriggerGitConfigurationPushArrayInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushArrayOutput() PipelineTriggerGitConfigurationPushArrayOutput
	ToPipelineTriggerGitConfigurationPushArrayOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushArrayOutput
}

type PipelineTriggerGitConfigurationPushArray []PipelineTriggerGitConfigurationPushInput

func (PipelineTriggerGitConfigurationPushArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTriggerGitConfigurationPush)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPushArray) ToPipelineTriggerGitConfigurationPushArrayOutput() PipelineTriggerGitConfigurationPushArrayOutput {
	return i.ToPipelineTriggerGitConfigurationPushArrayOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushArray) ToPipelineTriggerGitConfigurationPushArrayOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushArrayOutput)
}

type PipelineTriggerGitConfigurationPushOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPush)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushOutput) ToPipelineTriggerGitConfigurationPushOutput() PipelineTriggerGitConfigurationPushOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushOutput) ToPipelineTriggerGitConfigurationPushOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushOutput {
	return o
}

// The field that specifies to filter on branches for the push trigger configuration. A `branches` block is documented below.
func (o PipelineTriggerGitConfigurationPushOutput) Branches() PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPush) *PipelineTriggerGitConfigurationPushBranches {
		return v.Branches
	}).(PipelineTriggerGitConfigurationPushBranchesPtrOutput)
}

// The field that specifies to filter on file paths for the push trigger configuration. A `filePaths` block is documented below.
func (o PipelineTriggerGitConfigurationPushOutput) FilePaths() PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPush) *PipelineTriggerGitConfigurationPushFilePaths {
		return v.FilePaths
	}).(PipelineTriggerGitConfigurationPushFilePathsPtrOutput)
}

// The field that contains the details for the Git tags trigger configuration. A `tags` block is documented below.
func (o PipelineTriggerGitConfigurationPushOutput) Tags() PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPush) *PipelineTriggerGitConfigurationPushTags { return v.Tags }).(PipelineTriggerGitConfigurationPushTagsPtrOutput)
}

type PipelineTriggerGitConfigurationPushArrayOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTriggerGitConfigurationPush)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushArrayOutput) ToPipelineTriggerGitConfigurationPushArrayOutput() PipelineTriggerGitConfigurationPushArrayOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushArrayOutput) ToPipelineTriggerGitConfigurationPushArrayOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushArrayOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushArrayOutput) Index(i pulumi.IntInput) PipelineTriggerGitConfigurationPushOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTriggerGitConfigurationPush {
		return vs[0].([]PipelineTriggerGitConfigurationPush)[vs[1].(int)]
	}).(PipelineTriggerGitConfigurationPushOutput)
}

type PipelineTriggerGitConfigurationPushBranches struct {
	// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes []string `pulumi:"excludes"`
	// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes []string `pulumi:"includes"`
}

// PipelineTriggerGitConfigurationPushBranchesInput is an input type that accepts PipelineTriggerGitConfigurationPushBranchesArgs and PipelineTriggerGitConfigurationPushBranchesOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushBranchesInput` via:
//
//	PipelineTriggerGitConfigurationPushBranchesArgs{...}
type PipelineTriggerGitConfigurationPushBranchesInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushBranchesOutput() PipelineTriggerGitConfigurationPushBranchesOutput
	ToPipelineTriggerGitConfigurationPushBranchesOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushBranchesOutput
}

type PipelineTriggerGitConfigurationPushBranchesArgs struct {
	// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PipelineTriggerGitConfigurationPushBranchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPushBranches)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPushBranchesArgs) ToPipelineTriggerGitConfigurationPushBranchesOutput() PipelineTriggerGitConfigurationPushBranchesOutput {
	return i.ToPipelineTriggerGitConfigurationPushBranchesOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushBranchesArgs) ToPipelineTriggerGitConfigurationPushBranchesOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushBranchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushBranchesOutput)
}

func (i PipelineTriggerGitConfigurationPushBranchesArgs) ToPipelineTriggerGitConfigurationPushBranchesPtrOutput() PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushBranchesArgs) ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushBranchesOutput).ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(ctx)
}

// PipelineTriggerGitConfigurationPushBranchesPtrInput is an input type that accepts PipelineTriggerGitConfigurationPushBranchesArgs, PipelineTriggerGitConfigurationPushBranchesPtr and PipelineTriggerGitConfigurationPushBranchesPtrOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushBranchesPtrInput` via:
//
//	        PipelineTriggerGitConfigurationPushBranchesArgs{...}
//
//	or:
//
//	        nil
type PipelineTriggerGitConfigurationPushBranchesPtrInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushBranchesPtrOutput() PipelineTriggerGitConfigurationPushBranchesPtrOutput
	ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushBranchesPtrOutput
}

type pipelineTriggerGitConfigurationPushBranchesPtrType PipelineTriggerGitConfigurationPushBranchesArgs

func PipelineTriggerGitConfigurationPushBranchesPtr(v *PipelineTriggerGitConfigurationPushBranchesArgs) PipelineTriggerGitConfigurationPushBranchesPtrInput {
	return (*pipelineTriggerGitConfigurationPushBranchesPtrType)(v)
}

func (*pipelineTriggerGitConfigurationPushBranchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPushBranches)(nil)).Elem()
}

func (i *pipelineTriggerGitConfigurationPushBranchesPtrType) ToPipelineTriggerGitConfigurationPushBranchesPtrOutput() PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(context.Background())
}

func (i *pipelineTriggerGitConfigurationPushBranchesPtrType) ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushBranchesPtrOutput)
}

type PipelineTriggerGitConfigurationPushBranchesOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushBranchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPushBranches)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushBranchesOutput) ToPipelineTriggerGitConfigurationPushBranchesOutput() PipelineTriggerGitConfigurationPushBranchesOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushBranchesOutput) ToPipelineTriggerGitConfigurationPushBranchesOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushBranchesOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushBranchesOutput) ToPipelineTriggerGitConfigurationPushBranchesPtrOutput() PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return o.ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(context.Background())
}

func (o PipelineTriggerGitConfigurationPushBranchesOutput) ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineTriggerGitConfigurationPushBranches) *PipelineTriggerGitConfigurationPushBranches {
		return &v
	}).(PipelineTriggerGitConfigurationPushBranchesPtrOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPushBranchesOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPushBranches) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPushBranchesOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPushBranches) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPushBranchesPtrOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushBranchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPushBranches)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushBranchesPtrOutput) ToPipelineTriggerGitConfigurationPushBranchesPtrOutput() PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushBranchesPtrOutput) ToPipelineTriggerGitConfigurationPushBranchesPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushBranchesPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushBranchesPtrOutput) Elem() PipelineTriggerGitConfigurationPushBranchesOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushBranches) PipelineTriggerGitConfigurationPushBranches {
		if v != nil {
			return *v
		}
		var ret PipelineTriggerGitConfigurationPushBranches
		return ret
	}).(PipelineTriggerGitConfigurationPushBranchesOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPushBranchesPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushBranches) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// A list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPushBranchesPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushBranches) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPushFilePaths struct {
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes []string `pulumi:"excludes"`
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes []string `pulumi:"includes"`
}

// PipelineTriggerGitConfigurationPushFilePathsInput is an input type that accepts PipelineTriggerGitConfigurationPushFilePathsArgs and PipelineTriggerGitConfigurationPushFilePathsOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushFilePathsInput` via:
//
//	PipelineTriggerGitConfigurationPushFilePathsArgs{...}
type PipelineTriggerGitConfigurationPushFilePathsInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushFilePathsOutput() PipelineTriggerGitConfigurationPushFilePathsOutput
	ToPipelineTriggerGitConfigurationPushFilePathsOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushFilePathsOutput
}

type PipelineTriggerGitConfigurationPushFilePathsArgs struct {
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PipelineTriggerGitConfigurationPushFilePathsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPushFilePaths)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPushFilePathsArgs) ToPipelineTriggerGitConfigurationPushFilePathsOutput() PipelineTriggerGitConfigurationPushFilePathsOutput {
	return i.ToPipelineTriggerGitConfigurationPushFilePathsOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushFilePathsArgs) ToPipelineTriggerGitConfigurationPushFilePathsOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushFilePathsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushFilePathsOutput)
}

func (i PipelineTriggerGitConfigurationPushFilePathsArgs) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutput() PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushFilePathsArgs) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushFilePathsOutput).ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(ctx)
}

// PipelineTriggerGitConfigurationPushFilePathsPtrInput is an input type that accepts PipelineTriggerGitConfigurationPushFilePathsArgs, PipelineTriggerGitConfigurationPushFilePathsPtr and PipelineTriggerGitConfigurationPushFilePathsPtrOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushFilePathsPtrInput` via:
//
//	        PipelineTriggerGitConfigurationPushFilePathsArgs{...}
//
//	or:
//
//	        nil
type PipelineTriggerGitConfigurationPushFilePathsPtrInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushFilePathsPtrOutput() PipelineTriggerGitConfigurationPushFilePathsPtrOutput
	ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushFilePathsPtrOutput
}

type pipelineTriggerGitConfigurationPushFilePathsPtrType PipelineTriggerGitConfigurationPushFilePathsArgs

func PipelineTriggerGitConfigurationPushFilePathsPtr(v *PipelineTriggerGitConfigurationPushFilePathsArgs) PipelineTriggerGitConfigurationPushFilePathsPtrInput {
	return (*pipelineTriggerGitConfigurationPushFilePathsPtrType)(v)
}

func (*pipelineTriggerGitConfigurationPushFilePathsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPushFilePaths)(nil)).Elem()
}

func (i *pipelineTriggerGitConfigurationPushFilePathsPtrType) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutput() PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(context.Background())
}

func (i *pipelineTriggerGitConfigurationPushFilePathsPtrType) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushFilePathsPtrOutput)
}

type PipelineTriggerGitConfigurationPushFilePathsOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushFilePathsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPushFilePaths)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushFilePathsOutput) ToPipelineTriggerGitConfigurationPushFilePathsOutput() PipelineTriggerGitConfigurationPushFilePathsOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushFilePathsOutput) ToPipelineTriggerGitConfigurationPushFilePathsOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushFilePathsOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushFilePathsOutput) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutput() PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return o.ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(context.Background())
}

func (o PipelineTriggerGitConfigurationPushFilePathsOutput) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineTriggerGitConfigurationPushFilePaths) *PipelineTriggerGitConfigurationPushFilePaths {
		return &v
	}).(PipelineTriggerGitConfigurationPushFilePathsPtrOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPushFilePathsOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPushFilePaths) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPushFilePathsOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPushFilePaths) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPushFilePathsPtrOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushFilePathsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPushFilePaths)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushFilePathsPtrOutput) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutput() PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushFilePathsPtrOutput) ToPipelineTriggerGitConfigurationPushFilePathsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushFilePathsPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushFilePathsPtrOutput) Elem() PipelineTriggerGitConfigurationPushFilePathsOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushFilePaths) PipelineTriggerGitConfigurationPushFilePaths {
		if v != nil {
			return *v
		}
		var ret PipelineTriggerGitConfigurationPushFilePaths
		return ret
	}).(PipelineTriggerGitConfigurationPushFilePathsOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPushFilePathsPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushFilePaths) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// A list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPushFilePathsPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushFilePaths) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPushTags struct {
	// A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
	Excludes []string `pulumi:"excludes"`
	// A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
	Includes []string `pulumi:"includes"`
}

// PipelineTriggerGitConfigurationPushTagsInput is an input type that accepts PipelineTriggerGitConfigurationPushTagsArgs and PipelineTriggerGitConfigurationPushTagsOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushTagsInput` via:
//
//	PipelineTriggerGitConfigurationPushTagsArgs{...}
type PipelineTriggerGitConfigurationPushTagsInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushTagsOutput() PipelineTriggerGitConfigurationPushTagsOutput
	ToPipelineTriggerGitConfigurationPushTagsOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushTagsOutput
}

type PipelineTriggerGitConfigurationPushTagsArgs struct {
	// A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PipelineTriggerGitConfigurationPushTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPushTags)(nil)).Elem()
}

func (i PipelineTriggerGitConfigurationPushTagsArgs) ToPipelineTriggerGitConfigurationPushTagsOutput() PipelineTriggerGitConfigurationPushTagsOutput {
	return i.ToPipelineTriggerGitConfigurationPushTagsOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushTagsArgs) ToPipelineTriggerGitConfigurationPushTagsOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushTagsOutput)
}

func (i PipelineTriggerGitConfigurationPushTagsArgs) ToPipelineTriggerGitConfigurationPushTagsPtrOutput() PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(context.Background())
}

func (i PipelineTriggerGitConfigurationPushTagsArgs) ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushTagsOutput).ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(ctx)
}

// PipelineTriggerGitConfigurationPushTagsPtrInput is an input type that accepts PipelineTriggerGitConfigurationPushTagsArgs, PipelineTriggerGitConfigurationPushTagsPtr and PipelineTriggerGitConfigurationPushTagsPtrOutput values.
// You can construct a concrete instance of `PipelineTriggerGitConfigurationPushTagsPtrInput` via:
//
//	        PipelineTriggerGitConfigurationPushTagsArgs{...}
//
//	or:
//
//	        nil
type PipelineTriggerGitConfigurationPushTagsPtrInput interface {
	pulumi.Input

	ToPipelineTriggerGitConfigurationPushTagsPtrOutput() PipelineTriggerGitConfigurationPushTagsPtrOutput
	ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(context.Context) PipelineTriggerGitConfigurationPushTagsPtrOutput
}

type pipelineTriggerGitConfigurationPushTagsPtrType PipelineTriggerGitConfigurationPushTagsArgs

func PipelineTriggerGitConfigurationPushTagsPtr(v *PipelineTriggerGitConfigurationPushTagsArgs) PipelineTriggerGitConfigurationPushTagsPtrInput {
	return (*pipelineTriggerGitConfigurationPushTagsPtrType)(v)
}

func (*pipelineTriggerGitConfigurationPushTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPushTags)(nil)).Elem()
}

func (i *pipelineTriggerGitConfigurationPushTagsPtrType) ToPipelineTriggerGitConfigurationPushTagsPtrOutput() PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return i.ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(context.Background())
}

func (i *pipelineTriggerGitConfigurationPushTagsPtrType) ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerGitConfigurationPushTagsPtrOutput)
}

type PipelineTriggerGitConfigurationPushTagsOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerGitConfigurationPushTags)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushTagsOutput) ToPipelineTriggerGitConfigurationPushTagsOutput() PipelineTriggerGitConfigurationPushTagsOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushTagsOutput) ToPipelineTriggerGitConfigurationPushTagsOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushTagsOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushTagsOutput) ToPipelineTriggerGitConfigurationPushTagsPtrOutput() PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return o.ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(context.Background())
}

func (o PipelineTriggerGitConfigurationPushTagsOutput) ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineTriggerGitConfigurationPushTags) *PipelineTriggerGitConfigurationPushTags {
		return &v
	}).(PipelineTriggerGitConfigurationPushTagsPtrOutput)
}

// A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPushTagsOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPushTags) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPushTagsOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineTriggerGitConfigurationPushTags) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PipelineTriggerGitConfigurationPushTagsPtrOutput struct{ *pulumi.OutputState }

func (PipelineTriggerGitConfigurationPushTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerGitConfigurationPushTags)(nil)).Elem()
}

func (o PipelineTriggerGitConfigurationPushTagsPtrOutput) ToPipelineTriggerGitConfigurationPushTagsPtrOutput() PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushTagsPtrOutput) ToPipelineTriggerGitConfigurationPushTagsPtrOutputWithContext(ctx context.Context) PipelineTriggerGitConfigurationPushTagsPtrOutput {
	return o
}

func (o PipelineTriggerGitConfigurationPushTagsPtrOutput) Elem() PipelineTriggerGitConfigurationPushTagsOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushTags) PipelineTriggerGitConfigurationPushTags {
		if v != nil {
			return *v
		}
		var ret PipelineTriggerGitConfigurationPushTags
		return ret
	}).(PipelineTriggerGitConfigurationPushTagsOutput)
}

// A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
func (o PipelineTriggerGitConfigurationPushTagsPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushTags) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
func (o PipelineTriggerGitConfigurationPushTagsPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineTriggerGitConfigurationPushTags) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PipelineVariable struct {
	// The default value of a pipeline-level variable.
	DefaultValue *string `pulumi:"defaultValue"`
	// The description of a pipeline-level variable.
	//
	// > **Note:** The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.
	Description *string `pulumi:"description"`
	// The name of a pipeline-level variable.
	Name string `pulumi:"name"`
}

// PipelineVariableInput is an input type that accepts PipelineVariableArgs and PipelineVariableOutput values.
// You can construct a concrete instance of `PipelineVariableInput` via:
//
//	PipelineVariableArgs{...}
type PipelineVariableInput interface {
	pulumi.Input

	ToPipelineVariableOutput() PipelineVariableOutput
	ToPipelineVariableOutputWithContext(context.Context) PipelineVariableOutput
}

type PipelineVariableArgs struct {
	// The default value of a pipeline-level variable.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// The description of a pipeline-level variable.
	//
	// > **Note:** The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of a pipeline-level variable.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVariable)(nil)).Elem()
}

func (i PipelineVariableArgs) ToPipelineVariableOutput() PipelineVariableOutput {
	return i.ToPipelineVariableOutputWithContext(context.Background())
}

func (i PipelineVariableArgs) ToPipelineVariableOutputWithContext(ctx context.Context) PipelineVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVariableOutput)
}

// PipelineVariableArrayInput is an input type that accepts PipelineVariableArray and PipelineVariableArrayOutput values.
// You can construct a concrete instance of `PipelineVariableArrayInput` via:
//
//	PipelineVariableArray{ PipelineVariableArgs{...} }
type PipelineVariableArrayInput interface {
	pulumi.Input

	ToPipelineVariableArrayOutput() PipelineVariableArrayOutput
	ToPipelineVariableArrayOutputWithContext(context.Context) PipelineVariableArrayOutput
}

type PipelineVariableArray []PipelineVariableInput

func (PipelineVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineVariable)(nil)).Elem()
}

func (i PipelineVariableArray) ToPipelineVariableArrayOutput() PipelineVariableArrayOutput {
	return i.ToPipelineVariableArrayOutputWithContext(context.Background())
}

func (i PipelineVariableArray) ToPipelineVariableArrayOutputWithContext(ctx context.Context) PipelineVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVariableArrayOutput)
}

type PipelineVariableOutput struct{ *pulumi.OutputState }

func (PipelineVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVariable)(nil)).Elem()
}

func (o PipelineVariableOutput) ToPipelineVariableOutput() PipelineVariableOutput {
	return o
}

func (o PipelineVariableOutput) ToPipelineVariableOutputWithContext(ctx context.Context) PipelineVariableOutput {
	return o
}

// The default value of a pipeline-level variable.
func (o PipelineVariableOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineVariable) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// The description of a pipeline-level variable.
//
// > **Note:** The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.
func (o PipelineVariableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineVariable) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of a pipeline-level variable.
func (o PipelineVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineVariable) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineVariableArrayOutput struct{ *pulumi.OutputState }

func (PipelineVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineVariable)(nil)).Elem()
}

func (o PipelineVariableArrayOutput) ToPipelineVariableArrayOutput() PipelineVariableArrayOutput {
	return o
}

func (o PipelineVariableArrayOutput) ToPipelineVariableArrayOutputWithContext(ctx context.Context) PipelineVariableArrayOutput {
	return o
}

func (o PipelineVariableArrayOutput) Index(i pulumi.IntInput) PipelineVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineVariable {
		return vs[0].([]PipelineVariable)[vs[1].(int)]
	}).(PipelineVariableOutput)
}

type WebhookAuthenticationConfiguration struct {
	// A valid CIDR block for `IP` filtering. Required for `IP`.
	AllowedIpRange *string `pulumi:"allowedIpRange"`
	// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
	SecretToken *string `pulumi:"secretToken"`
}

// WebhookAuthenticationConfigurationInput is an input type that accepts WebhookAuthenticationConfigurationArgs and WebhookAuthenticationConfigurationOutput values.
// You can construct a concrete instance of `WebhookAuthenticationConfigurationInput` via:
//
//	WebhookAuthenticationConfigurationArgs{...}
type WebhookAuthenticationConfigurationInput interface {
	pulumi.Input

	ToWebhookAuthenticationConfigurationOutput() WebhookAuthenticationConfigurationOutput
	ToWebhookAuthenticationConfigurationOutputWithContext(context.Context) WebhookAuthenticationConfigurationOutput
}

type WebhookAuthenticationConfigurationArgs struct {
	// A valid CIDR block for `IP` filtering. Required for `IP`.
	AllowedIpRange pulumi.StringPtrInput `pulumi:"allowedIpRange"`
	// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
	SecretToken pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (WebhookAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationOutput() WebhookAuthenticationConfigurationOutput {
	return i.ToWebhookAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthenticationConfigurationOutput)
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return i.ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i WebhookAuthenticationConfigurationArgs) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthenticationConfigurationOutput).ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx)
}

// WebhookAuthenticationConfigurationPtrInput is an input type that accepts WebhookAuthenticationConfigurationArgs, WebhookAuthenticationConfigurationPtr and WebhookAuthenticationConfigurationPtrOutput values.
// You can construct a concrete instance of `WebhookAuthenticationConfigurationPtrInput` via:
//
//	        WebhookAuthenticationConfigurationArgs{...}
//
//	or:
//
//	        nil
type WebhookAuthenticationConfigurationPtrInput interface {
	pulumi.Input

	ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput
	ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Context) WebhookAuthenticationConfigurationPtrOutput
}

type webhookAuthenticationConfigurationPtrType WebhookAuthenticationConfigurationArgs

func WebhookAuthenticationConfigurationPtr(v *WebhookAuthenticationConfigurationArgs) WebhookAuthenticationConfigurationPtrInput {
	return (*webhookAuthenticationConfigurationPtrType)(v)
}

func (*webhookAuthenticationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (i *webhookAuthenticationConfigurationPtrType) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return i.ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i *webhookAuthenticationConfigurationPtrType) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthenticationConfigurationPtrOutput)
}

type WebhookAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (WebhookAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationOutput() WebhookAuthenticationConfigurationOutput {
	return o
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationOutput {
	return o
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return o.ToWebhookAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (o WebhookAuthenticationConfigurationOutput) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookAuthenticationConfiguration) *WebhookAuthenticationConfiguration {
		return &v
	}).(WebhookAuthenticationConfigurationPtrOutput)
}

// A valid CIDR block for `IP` filtering. Required for `IP`.
func (o WebhookAuthenticationConfigurationOutput) AllowedIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthenticationConfiguration) *string { return v.AllowedIpRange }).(pulumi.StringPtrOutput)
}

// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
func (o WebhookAuthenticationConfigurationOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthenticationConfiguration) *string { return v.SecretToken }).(pulumi.StringPtrOutput)
}

type WebhookAuthenticationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebhookAuthenticationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAuthenticationConfiguration)(nil)).Elem()
}

func (o WebhookAuthenticationConfigurationPtrOutput) ToWebhookAuthenticationConfigurationPtrOutput() WebhookAuthenticationConfigurationPtrOutput {
	return o
}

func (o WebhookAuthenticationConfigurationPtrOutput) ToWebhookAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthenticationConfigurationPtrOutput {
	return o
}

func (o WebhookAuthenticationConfigurationPtrOutput) Elem() WebhookAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *WebhookAuthenticationConfiguration) WebhookAuthenticationConfiguration {
		if v != nil {
			return *v
		}
		var ret WebhookAuthenticationConfiguration
		return ret
	}).(WebhookAuthenticationConfigurationOutput)
}

// A valid CIDR block for `IP` filtering. Required for `IP`.
func (o WebhookAuthenticationConfigurationPtrOutput) AllowedIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AllowedIpRange
	}).(pulumi.StringPtrOutput)
}

// The shared secret for the GitHub repository webhook. Set this as `secret` in your `githubRepositoryWebhook`'s `configuration` block. Required for `GITHUB_HMAC`.
func (o WebhookAuthenticationConfigurationPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

type WebhookFilter struct {
	// The [JSON path](https://github.com/json-path/JsonPath) to filter on.
	JsonPath string `pulumi:"jsonPath"`
	// The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.
	MatchEquals string `pulumi:"matchEquals"`
}

// WebhookFilterInput is an input type that accepts WebhookFilterArgs and WebhookFilterOutput values.
// You can construct a concrete instance of `WebhookFilterInput` via:
//
//	WebhookFilterArgs{...}
type WebhookFilterInput interface {
	pulumi.Input

	ToWebhookFilterOutput() WebhookFilterOutput
	ToWebhookFilterOutputWithContext(context.Context) WebhookFilterOutput
}

type WebhookFilterArgs struct {
	// The [JSON path](https://github.com/json-path/JsonPath) to filter on.
	JsonPath pulumi.StringInput `pulumi:"jsonPath"`
	// The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.
	MatchEquals pulumi.StringInput `pulumi:"matchEquals"`
}

func (WebhookFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilter)(nil)).Elem()
}

func (i WebhookFilterArgs) ToWebhookFilterOutput() WebhookFilterOutput {
	return i.ToWebhookFilterOutputWithContext(context.Background())
}

func (i WebhookFilterArgs) ToWebhookFilterOutputWithContext(ctx context.Context) WebhookFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterOutput)
}

// WebhookFilterArrayInput is an input type that accepts WebhookFilterArray and WebhookFilterArrayOutput values.
// You can construct a concrete instance of `WebhookFilterArrayInput` via:
//
//	WebhookFilterArray{ WebhookFilterArgs{...} }
type WebhookFilterArrayInput interface {
	pulumi.Input

	ToWebhookFilterArrayOutput() WebhookFilterArrayOutput
	ToWebhookFilterArrayOutputWithContext(context.Context) WebhookFilterArrayOutput
}

type WebhookFilterArray []WebhookFilterInput

func (WebhookFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilter)(nil)).Elem()
}

func (i WebhookFilterArray) ToWebhookFilterArrayOutput() WebhookFilterArrayOutput {
	return i.ToWebhookFilterArrayOutputWithContext(context.Background())
}

func (i WebhookFilterArray) ToWebhookFilterArrayOutputWithContext(ctx context.Context) WebhookFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterArrayOutput)
}

type WebhookFilterOutput struct{ *pulumi.OutputState }

func (WebhookFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilter)(nil)).Elem()
}

func (o WebhookFilterOutput) ToWebhookFilterOutput() WebhookFilterOutput {
	return o
}

func (o WebhookFilterOutput) ToWebhookFilterOutputWithContext(ctx context.Context) WebhookFilterOutput {
	return o
}

// The [JSON path](https://github.com/json-path/JsonPath) to filter on.
func (o WebhookFilterOutput) JsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilter) string { return v.JsonPath }).(pulumi.StringOutput)
}

// The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.
func (o WebhookFilterOutput) MatchEquals() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilter) string { return v.MatchEquals }).(pulumi.StringOutput)
}

type WebhookFilterArrayOutput struct{ *pulumi.OutputState }

func (WebhookFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilter)(nil)).Elem()
}

func (o WebhookFilterArrayOutput) ToWebhookFilterArrayOutput() WebhookFilterArrayOutput {
	return o
}

func (o WebhookFilterArrayOutput) ToWebhookFilterArrayOutputWithContext(ctx context.Context) WebhookFilterArrayOutput {
	return o
}

func (o WebhookFilterArrayOutput) Index(i pulumi.IntInput) WebhookFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookFilter {
		return vs[0].([]WebhookFilter)[vs[1].(int)]
	}).(WebhookFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeConfigurationPropertyInput)(nil)).Elem(), CustomActionTypeConfigurationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeConfigurationPropertyArrayInput)(nil)).Elem(), CustomActionTypeConfigurationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeInputArtifactDetailsInput)(nil)).Elem(), CustomActionTypeInputArtifactDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeInputArtifactDetailsPtrInput)(nil)).Elem(), CustomActionTypeInputArtifactDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeOutputArtifactDetailsInput)(nil)).Elem(), CustomActionTypeOutputArtifactDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeOutputArtifactDetailsPtrInput)(nil)).Elem(), CustomActionTypeOutputArtifactDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeSettingsInput)(nil)).Elem(), CustomActionTypeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeSettingsPtrInput)(nil)).Elem(), CustomActionTypeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreInput)(nil)).Elem(), PipelineArtifactStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreArrayInput)(nil)).Elem(), PipelineArtifactStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreEncryptionKeyInput)(nil)).Elem(), PipelineArtifactStoreEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreEncryptionKeyPtrInput)(nil)).Elem(), PipelineArtifactStoreEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageInput)(nil)).Elem(), PipelineStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageArrayInput)(nil)).Elem(), PipelineStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageActionInput)(nil)).Elem(), PipelineStageActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageActionArrayInput)(nil)).Elem(), PipelineStageActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerInput)(nil)).Elem(), PipelineTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerArrayInput)(nil)).Elem(), PipelineTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationInput)(nil)).Elem(), PipelineTriggerGitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestInput)(nil)).Elem(), PipelineTriggerGitConfigurationPullRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestArrayInput)(nil)).Elem(), PipelineTriggerGitConfigurationPullRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestBranchesInput)(nil)).Elem(), PipelineTriggerGitConfigurationPullRequestBranchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestBranchesPtrInput)(nil)).Elem(), PipelineTriggerGitConfigurationPullRequestBranchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestFilePathsInput)(nil)).Elem(), PipelineTriggerGitConfigurationPullRequestFilePathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPullRequestFilePathsPtrInput)(nil)).Elem(), PipelineTriggerGitConfigurationPullRequestFilePathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushArrayInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushBranchesInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushBranchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushBranchesPtrInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushBranchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushFilePathsInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushFilePathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushFilePathsPtrInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushFilePathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushTagsInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerGitConfigurationPushTagsPtrInput)(nil)).Elem(), PipelineTriggerGitConfigurationPushTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVariableInput)(nil)).Elem(), PipelineVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVariableArrayInput)(nil)).Elem(), PipelineVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAuthenticationConfigurationInput)(nil)).Elem(), WebhookAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAuthenticationConfigurationPtrInput)(nil)).Elem(), WebhookAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterInput)(nil)).Elem(), WebhookFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterArrayInput)(nil)).Elem(), WebhookFilterArray{})
	pulumi.RegisterOutputType(CustomActionTypeConfigurationPropertyOutput{})
	pulumi.RegisterOutputType(CustomActionTypeConfigurationPropertyArrayOutput{})
	pulumi.RegisterOutputType(CustomActionTypeInputArtifactDetailsOutput{})
	pulumi.RegisterOutputType(CustomActionTypeInputArtifactDetailsPtrOutput{})
	pulumi.RegisterOutputType(CustomActionTypeOutputArtifactDetailsOutput{})
	pulumi.RegisterOutputType(CustomActionTypeOutputArtifactDetailsPtrOutput{})
	pulumi.RegisterOutputType(CustomActionTypeSettingsOutput{})
	pulumi.RegisterOutputType(CustomActionTypeSettingsPtrOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreArrayOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreEncryptionKeyOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(PipelineStageOutput{})
	pulumi.RegisterOutputType(PipelineStageArrayOutput{})
	pulumi.RegisterOutputType(PipelineStageActionOutput{})
	pulumi.RegisterOutputType(PipelineStageActionArrayOutput{})
	pulumi.RegisterOutputType(PipelineTriggerOutput{})
	pulumi.RegisterOutputType(PipelineTriggerArrayOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPullRequestOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPullRequestArrayOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPullRequestBranchesOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPullRequestBranchesPtrOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPullRequestFilePathsOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPullRequestFilePathsPtrOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushArrayOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushBranchesOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushBranchesPtrOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushFilePathsOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushFilePathsPtrOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushTagsOutput{})
	pulumi.RegisterOutputType(PipelineTriggerGitConfigurationPushTagsPtrOutput{})
	pulumi.RegisterOutputType(PipelineVariableOutput{})
	pulumi.RegisterOutputType(PipelineVariableArrayOutput{})
	pulumi.RegisterOutputType(WebhookAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(WebhookAuthenticationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterOutput{})
	pulumi.RegisterOutputType(WebhookFilterArrayOutput{})
}
