// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EnvironmentMembership struct {
	pulumi.CustomResourceState

	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	Permissions   pulumi.StringOutput `pulumi:"permissions"`
	UserArn       pulumi.StringOutput `pulumi:"userArn"`
	UserId        pulumi.StringOutput `pulumi:"userId"`
}

// NewEnvironmentMembership registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentMembership(ctx *pulumi.Context,
	name string, args *EnvironmentMembershipArgs, opts ...pulumi.ResourceOption) (*EnvironmentMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.Permissions == nil {
		return nil, errors.New("invalid value for required argument 'Permissions'")
	}
	if args.UserArn == nil {
		return nil, errors.New("invalid value for required argument 'UserArn'")
	}
	var resource EnvironmentMembership
	err := ctx.RegisterResource("aws:cloud9/environmentMembership:EnvironmentMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentMembership gets an existing EnvironmentMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentMembershipState, opts ...pulumi.ResourceOption) (*EnvironmentMembership, error) {
	var resource EnvironmentMembership
	err := ctx.ReadResource("aws:cloud9/environmentMembership:EnvironmentMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentMembership resources.
type environmentMembershipState struct {
	EnvironmentId *string `pulumi:"environmentId"`
	Permissions   *string `pulumi:"permissions"`
	UserArn       *string `pulumi:"userArn"`
	UserId        *string `pulumi:"userId"`
}

type EnvironmentMembershipState struct {
	EnvironmentId pulumi.StringPtrInput
	Permissions   pulumi.StringPtrInput
	UserArn       pulumi.StringPtrInput
	UserId        pulumi.StringPtrInput
}

func (EnvironmentMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentMembershipState)(nil)).Elem()
}

type environmentMembershipArgs struct {
	EnvironmentId string `pulumi:"environmentId"`
	Permissions   string `pulumi:"permissions"`
	UserArn       string `pulumi:"userArn"`
}

// The set of arguments for constructing a EnvironmentMembership resource.
type EnvironmentMembershipArgs struct {
	EnvironmentId pulumi.StringInput
	Permissions   pulumi.StringInput
	UserArn       pulumi.StringInput
}

func (EnvironmentMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentMembershipArgs)(nil)).Elem()
}

type EnvironmentMembershipInput interface {
	pulumi.Input

	ToEnvironmentMembershipOutput() EnvironmentMembershipOutput
	ToEnvironmentMembershipOutputWithContext(ctx context.Context) EnvironmentMembershipOutput
}

func (*EnvironmentMembership) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentMembership)(nil)).Elem()
}

func (i *EnvironmentMembership) ToEnvironmentMembershipOutput() EnvironmentMembershipOutput {
	return i.ToEnvironmentMembershipOutputWithContext(context.Background())
}

func (i *EnvironmentMembership) ToEnvironmentMembershipOutputWithContext(ctx context.Context) EnvironmentMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMembershipOutput)
}

// EnvironmentMembershipArrayInput is an input type that accepts EnvironmentMembershipArray and EnvironmentMembershipArrayOutput values.
// You can construct a concrete instance of `EnvironmentMembershipArrayInput` via:
//
//	EnvironmentMembershipArray{ EnvironmentMembershipArgs{...} }
type EnvironmentMembershipArrayInput interface {
	pulumi.Input

	ToEnvironmentMembershipArrayOutput() EnvironmentMembershipArrayOutput
	ToEnvironmentMembershipArrayOutputWithContext(context.Context) EnvironmentMembershipArrayOutput
}

type EnvironmentMembershipArray []EnvironmentMembershipInput

func (EnvironmentMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentMembership)(nil)).Elem()
}

func (i EnvironmentMembershipArray) ToEnvironmentMembershipArrayOutput() EnvironmentMembershipArrayOutput {
	return i.ToEnvironmentMembershipArrayOutputWithContext(context.Background())
}

func (i EnvironmentMembershipArray) ToEnvironmentMembershipArrayOutputWithContext(ctx context.Context) EnvironmentMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMembershipArrayOutput)
}

// EnvironmentMembershipMapInput is an input type that accepts EnvironmentMembershipMap and EnvironmentMembershipMapOutput values.
// You can construct a concrete instance of `EnvironmentMembershipMapInput` via:
//
//	EnvironmentMembershipMap{ "key": EnvironmentMembershipArgs{...} }
type EnvironmentMembershipMapInput interface {
	pulumi.Input

	ToEnvironmentMembershipMapOutput() EnvironmentMembershipMapOutput
	ToEnvironmentMembershipMapOutputWithContext(context.Context) EnvironmentMembershipMapOutput
}

type EnvironmentMembershipMap map[string]EnvironmentMembershipInput

func (EnvironmentMembershipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentMembership)(nil)).Elem()
}

func (i EnvironmentMembershipMap) ToEnvironmentMembershipMapOutput() EnvironmentMembershipMapOutput {
	return i.ToEnvironmentMembershipMapOutputWithContext(context.Background())
}

func (i EnvironmentMembershipMap) ToEnvironmentMembershipMapOutputWithContext(ctx context.Context) EnvironmentMembershipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMembershipMapOutput)
}

type EnvironmentMembershipOutput struct{ *pulumi.OutputState }

func (EnvironmentMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentMembership)(nil)).Elem()
}

func (o EnvironmentMembershipOutput) ToEnvironmentMembershipOutput() EnvironmentMembershipOutput {
	return o
}

func (o EnvironmentMembershipOutput) ToEnvironmentMembershipOutputWithContext(ctx context.Context) EnvironmentMembershipOutput {
	return o
}

func (o EnvironmentMembershipOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentMembership) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

func (o EnvironmentMembershipOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentMembership) pulumi.StringOutput { return v.Permissions }).(pulumi.StringOutput)
}

func (o EnvironmentMembershipOutput) UserArn() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentMembership) pulumi.StringOutput { return v.UserArn }).(pulumi.StringOutput)
}

func (o EnvironmentMembershipOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentMembership) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

type EnvironmentMembershipArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentMembership)(nil)).Elem()
}

func (o EnvironmentMembershipArrayOutput) ToEnvironmentMembershipArrayOutput() EnvironmentMembershipArrayOutput {
	return o
}

func (o EnvironmentMembershipArrayOutput) ToEnvironmentMembershipArrayOutputWithContext(ctx context.Context) EnvironmentMembershipArrayOutput {
	return o
}

func (o EnvironmentMembershipArrayOutput) Index(i pulumi.IntInput) EnvironmentMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvironmentMembership {
		return vs[0].([]*EnvironmentMembership)[vs[1].(int)]
	}).(EnvironmentMembershipOutput)
}

type EnvironmentMembershipMapOutput struct{ *pulumi.OutputState }

func (EnvironmentMembershipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentMembership)(nil)).Elem()
}

func (o EnvironmentMembershipMapOutput) ToEnvironmentMembershipMapOutput() EnvironmentMembershipMapOutput {
	return o
}

func (o EnvironmentMembershipMapOutput) ToEnvironmentMembershipMapOutputWithContext(ctx context.Context) EnvironmentMembershipMapOutput {
	return o
}

func (o EnvironmentMembershipMapOutput) MapIndex(k pulumi.StringInput) EnvironmentMembershipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvironmentMembership {
		return vs[0].(map[string]*EnvironmentMembership)[vs[1].(string)]
	}).(EnvironmentMembershipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMembershipInput)(nil)).Elem(), &EnvironmentMembership{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMembershipArrayInput)(nil)).Elem(), EnvironmentMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMembershipMapInput)(nil)).Elem(), EnvironmentMembershipMap{})
	pulumi.RegisterOutputType(EnvironmentMembershipOutput{})
	pulumi.RegisterOutputType(EnvironmentMembershipArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentMembershipMapOutput{})
}
