// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudsearch

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cloudsearch"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleDomain, err := cloudsearch.NewDomain(ctx, "exampleDomain", nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cloudsearch.NewDomainServiceAccessPolicy(ctx, "exampleDomainServiceAccessPolicy", &cloudsearch.DomainServiceAccessPolicyArgs{
// 			DomainName: exampleDomain.ID(),
// 			AccessPolicy: pulumi.String(fmt.Sprintf(`{
//   "Version":"2012-10-17",
//   "Statement":[{
//     "Sid":"search_only",
//     "Effect":"Allow",
//     "Principal":"*",
//     "Action":[
//       "cloudsearch:search",
//       "cloudsearch:document"
//     ],
//     "Condition":{"IpAddress":{"aws:SourceIp":"192.0.2.0/32"}}
//   }]
// }
// `)),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// CloudSearch domain service access policies can be imported using the domain name, e.g.,
//
// ```sh
//  $ pulumi import aws:cloudsearch/domainServiceAccessPolicy:DomainServiceAccessPolicy example example-domain
// ```
type DomainServiceAccessPolicy struct {
	pulumi.CustomResourceState

	// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
	AccessPolicy pulumi.StringOutput `pulumi:"accessPolicy"`
	// The CloudSearch domain name the policy applies to.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
}

// NewDomainServiceAccessPolicy registers a new resource with the given unique name, arguments, and options.
func NewDomainServiceAccessPolicy(ctx *pulumi.Context,
	name string, args *DomainServiceAccessPolicyArgs, opts ...pulumi.ResourceOption) (*DomainServiceAccessPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessPolicy == nil {
		return nil, errors.New("invalid value for required argument 'AccessPolicy'")
	}
	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	var resource DomainServiceAccessPolicy
	err := ctx.RegisterResource("aws:cloudsearch/domainServiceAccessPolicy:DomainServiceAccessPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainServiceAccessPolicy gets an existing DomainServiceAccessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainServiceAccessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainServiceAccessPolicyState, opts ...pulumi.ResourceOption) (*DomainServiceAccessPolicy, error) {
	var resource DomainServiceAccessPolicy
	err := ctx.ReadResource("aws:cloudsearch/domainServiceAccessPolicy:DomainServiceAccessPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainServiceAccessPolicy resources.
type domainServiceAccessPolicyState struct {
	// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
	AccessPolicy *string `pulumi:"accessPolicy"`
	// The CloudSearch domain name the policy applies to.
	DomainName *string `pulumi:"domainName"`
}

type DomainServiceAccessPolicyState struct {
	// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
	AccessPolicy pulumi.StringPtrInput
	// The CloudSearch domain name the policy applies to.
	DomainName pulumi.StringPtrInput
}

func (DomainServiceAccessPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainServiceAccessPolicyState)(nil)).Elem()
}

type domainServiceAccessPolicyArgs struct {
	// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
	AccessPolicy string `pulumi:"accessPolicy"`
	// The CloudSearch domain name the policy applies to.
	DomainName string `pulumi:"domainName"`
}

// The set of arguments for constructing a DomainServiceAccessPolicy resource.
type DomainServiceAccessPolicyArgs struct {
	// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
	AccessPolicy pulumi.StringInput
	// The CloudSearch domain name the policy applies to.
	DomainName pulumi.StringInput
}

func (DomainServiceAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainServiceAccessPolicyArgs)(nil)).Elem()
}

type DomainServiceAccessPolicyInput interface {
	pulumi.Input

	ToDomainServiceAccessPolicyOutput() DomainServiceAccessPolicyOutput
	ToDomainServiceAccessPolicyOutputWithContext(ctx context.Context) DomainServiceAccessPolicyOutput
}

func (*DomainServiceAccessPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainServiceAccessPolicy)(nil)).Elem()
}

func (i *DomainServiceAccessPolicy) ToDomainServiceAccessPolicyOutput() DomainServiceAccessPolicyOutput {
	return i.ToDomainServiceAccessPolicyOutputWithContext(context.Background())
}

func (i *DomainServiceAccessPolicy) ToDomainServiceAccessPolicyOutputWithContext(ctx context.Context) DomainServiceAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainServiceAccessPolicyOutput)
}

// DomainServiceAccessPolicyArrayInput is an input type that accepts DomainServiceAccessPolicyArray and DomainServiceAccessPolicyArrayOutput values.
// You can construct a concrete instance of `DomainServiceAccessPolicyArrayInput` via:
//
//          DomainServiceAccessPolicyArray{ DomainServiceAccessPolicyArgs{...} }
type DomainServiceAccessPolicyArrayInput interface {
	pulumi.Input

	ToDomainServiceAccessPolicyArrayOutput() DomainServiceAccessPolicyArrayOutput
	ToDomainServiceAccessPolicyArrayOutputWithContext(context.Context) DomainServiceAccessPolicyArrayOutput
}

type DomainServiceAccessPolicyArray []DomainServiceAccessPolicyInput

func (DomainServiceAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainServiceAccessPolicy)(nil)).Elem()
}

func (i DomainServiceAccessPolicyArray) ToDomainServiceAccessPolicyArrayOutput() DomainServiceAccessPolicyArrayOutput {
	return i.ToDomainServiceAccessPolicyArrayOutputWithContext(context.Background())
}

func (i DomainServiceAccessPolicyArray) ToDomainServiceAccessPolicyArrayOutputWithContext(ctx context.Context) DomainServiceAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainServiceAccessPolicyArrayOutput)
}

// DomainServiceAccessPolicyMapInput is an input type that accepts DomainServiceAccessPolicyMap and DomainServiceAccessPolicyMapOutput values.
// You can construct a concrete instance of `DomainServiceAccessPolicyMapInput` via:
//
//          DomainServiceAccessPolicyMap{ "key": DomainServiceAccessPolicyArgs{...} }
type DomainServiceAccessPolicyMapInput interface {
	pulumi.Input

	ToDomainServiceAccessPolicyMapOutput() DomainServiceAccessPolicyMapOutput
	ToDomainServiceAccessPolicyMapOutputWithContext(context.Context) DomainServiceAccessPolicyMapOutput
}

type DomainServiceAccessPolicyMap map[string]DomainServiceAccessPolicyInput

func (DomainServiceAccessPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainServiceAccessPolicy)(nil)).Elem()
}

func (i DomainServiceAccessPolicyMap) ToDomainServiceAccessPolicyMapOutput() DomainServiceAccessPolicyMapOutput {
	return i.ToDomainServiceAccessPolicyMapOutputWithContext(context.Background())
}

func (i DomainServiceAccessPolicyMap) ToDomainServiceAccessPolicyMapOutputWithContext(ctx context.Context) DomainServiceAccessPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainServiceAccessPolicyMapOutput)
}

type DomainServiceAccessPolicyOutput struct{ *pulumi.OutputState }

func (DomainServiceAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainServiceAccessPolicy)(nil)).Elem()
}

func (o DomainServiceAccessPolicyOutput) ToDomainServiceAccessPolicyOutput() DomainServiceAccessPolicyOutput {
	return o
}

func (o DomainServiceAccessPolicyOutput) ToDomainServiceAccessPolicyOutputWithContext(ctx context.Context) DomainServiceAccessPolicyOutput {
	return o
}

// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
func (o DomainServiceAccessPolicyOutput) AccessPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainServiceAccessPolicy) pulumi.StringOutput { return v.AccessPolicy }).(pulumi.StringOutput)
}

// The CloudSearch domain name the policy applies to.
func (o DomainServiceAccessPolicyOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainServiceAccessPolicy) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

type DomainServiceAccessPolicyArrayOutput struct{ *pulumi.OutputState }

func (DomainServiceAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainServiceAccessPolicy)(nil)).Elem()
}

func (o DomainServiceAccessPolicyArrayOutput) ToDomainServiceAccessPolicyArrayOutput() DomainServiceAccessPolicyArrayOutput {
	return o
}

func (o DomainServiceAccessPolicyArrayOutput) ToDomainServiceAccessPolicyArrayOutputWithContext(ctx context.Context) DomainServiceAccessPolicyArrayOutput {
	return o
}

func (o DomainServiceAccessPolicyArrayOutput) Index(i pulumi.IntInput) DomainServiceAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainServiceAccessPolicy {
		return vs[0].([]*DomainServiceAccessPolicy)[vs[1].(int)]
	}).(DomainServiceAccessPolicyOutput)
}

type DomainServiceAccessPolicyMapOutput struct{ *pulumi.OutputState }

func (DomainServiceAccessPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainServiceAccessPolicy)(nil)).Elem()
}

func (o DomainServiceAccessPolicyMapOutput) ToDomainServiceAccessPolicyMapOutput() DomainServiceAccessPolicyMapOutput {
	return o
}

func (o DomainServiceAccessPolicyMapOutput) ToDomainServiceAccessPolicyMapOutputWithContext(ctx context.Context) DomainServiceAccessPolicyMapOutput {
	return o
}

func (o DomainServiceAccessPolicyMapOutput) MapIndex(k pulumi.StringInput) DomainServiceAccessPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainServiceAccessPolicy {
		return vs[0].(map[string]*DomainServiceAccessPolicy)[vs[1].(string)]
	}).(DomainServiceAccessPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainServiceAccessPolicyInput)(nil)).Elem(), &DomainServiceAccessPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainServiceAccessPolicyArrayInput)(nil)).Elem(), DomainServiceAccessPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainServiceAccessPolicyMapInput)(nil)).Elem(), DomainServiceAccessPolicyMap{})
	pulumi.RegisterOutputType(DomainServiceAccessPolicyOutput{})
	pulumi.RegisterOutputType(DomainServiceAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(DomainServiceAccessPolicyMapOutput{})
}
