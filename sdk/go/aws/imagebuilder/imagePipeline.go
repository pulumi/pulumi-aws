// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ImagePipeline struct {
	pulumi.CustomResourceState

	Arn                            pulumi.StringOutput                        `pulumi:"arn"`
	ContainerRecipeArn             pulumi.StringPtrOutput                     `pulumi:"containerRecipeArn"`
	DateCreated                    pulumi.StringOutput                        `pulumi:"dateCreated"`
	DateLastRun                    pulumi.StringOutput                        `pulumi:"dateLastRun"`
	DateNextRun                    pulumi.StringOutput                        `pulumi:"dateNextRun"`
	DateUpdated                    pulumi.StringOutput                        `pulumi:"dateUpdated"`
	Description                    pulumi.StringPtrOutput                     `pulumi:"description"`
	DistributionConfigurationArn   pulumi.StringPtrOutput                     `pulumi:"distributionConfigurationArn"`
	EnhancedImageMetadataEnabled   pulumi.BoolPtrOutput                       `pulumi:"enhancedImageMetadataEnabled"`
	ImageRecipeArn                 pulumi.StringPtrOutput                     `pulumi:"imageRecipeArn"`
	ImageTestsConfiguration        ImagePipelineImageTestsConfigurationOutput `pulumi:"imageTestsConfiguration"`
	InfrastructureConfigurationArn pulumi.StringOutput                        `pulumi:"infrastructureConfigurationArn"`
	Name                           pulumi.StringOutput                        `pulumi:"name"`
	Platform                       pulumi.StringOutput                        `pulumi:"platform"`
	Schedule                       ImagePipelineSchedulePtrOutput             `pulumi:"schedule"`
	Status                         pulumi.StringPtrOutput                     `pulumi:"status"`
	Tags                           pulumi.StringMapOutput                     `pulumi:"tags"`
	TagsAll                        pulumi.StringMapOutput                     `pulumi:"tagsAll"`
}

// NewImagePipeline registers a new resource with the given unique name, arguments, and options.
func NewImagePipeline(ctx *pulumi.Context,
	name string, args *ImagePipelineArgs, opts ...pulumi.ResourceOption) (*ImagePipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InfrastructureConfigurationArn == nil {
		return nil, errors.New("invalid value for required argument 'InfrastructureConfigurationArn'")
	}
	var resource ImagePipeline
	err := ctx.RegisterResource("aws:imagebuilder/imagePipeline:ImagePipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImagePipeline gets an existing ImagePipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImagePipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImagePipelineState, opts ...pulumi.ResourceOption) (*ImagePipeline, error) {
	var resource ImagePipeline
	err := ctx.ReadResource("aws:imagebuilder/imagePipeline:ImagePipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImagePipeline resources.
type imagePipelineState struct {
	Arn                            *string                               `pulumi:"arn"`
	ContainerRecipeArn             *string                               `pulumi:"containerRecipeArn"`
	DateCreated                    *string                               `pulumi:"dateCreated"`
	DateLastRun                    *string                               `pulumi:"dateLastRun"`
	DateNextRun                    *string                               `pulumi:"dateNextRun"`
	DateUpdated                    *string                               `pulumi:"dateUpdated"`
	Description                    *string                               `pulumi:"description"`
	DistributionConfigurationArn   *string                               `pulumi:"distributionConfigurationArn"`
	EnhancedImageMetadataEnabled   *bool                                 `pulumi:"enhancedImageMetadataEnabled"`
	ImageRecipeArn                 *string                               `pulumi:"imageRecipeArn"`
	ImageTestsConfiguration        *ImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	InfrastructureConfigurationArn *string                               `pulumi:"infrastructureConfigurationArn"`
	Name                           *string                               `pulumi:"name"`
	Platform                       *string                               `pulumi:"platform"`
	Schedule                       *ImagePipelineSchedule                `pulumi:"schedule"`
	Status                         *string                               `pulumi:"status"`
	Tags                           map[string]string                     `pulumi:"tags"`
	TagsAll                        map[string]string                     `pulumi:"tagsAll"`
}

type ImagePipelineState struct {
	Arn                            pulumi.StringPtrInput
	ContainerRecipeArn             pulumi.StringPtrInput
	DateCreated                    pulumi.StringPtrInput
	DateLastRun                    pulumi.StringPtrInput
	DateNextRun                    pulumi.StringPtrInput
	DateUpdated                    pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	DistributionConfigurationArn   pulumi.StringPtrInput
	EnhancedImageMetadataEnabled   pulumi.BoolPtrInput
	ImageRecipeArn                 pulumi.StringPtrInput
	ImageTestsConfiguration        ImagePipelineImageTestsConfigurationPtrInput
	InfrastructureConfigurationArn pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	Platform                       pulumi.StringPtrInput
	Schedule                       ImagePipelineSchedulePtrInput
	Status                         pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	TagsAll                        pulumi.StringMapInput
}

func (ImagePipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*imagePipelineState)(nil)).Elem()
}

type imagePipelineArgs struct {
	ContainerRecipeArn             *string                               `pulumi:"containerRecipeArn"`
	Description                    *string                               `pulumi:"description"`
	DistributionConfigurationArn   *string                               `pulumi:"distributionConfigurationArn"`
	EnhancedImageMetadataEnabled   *bool                                 `pulumi:"enhancedImageMetadataEnabled"`
	ImageRecipeArn                 *string                               `pulumi:"imageRecipeArn"`
	ImageTestsConfiguration        *ImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	InfrastructureConfigurationArn string                                `pulumi:"infrastructureConfigurationArn"`
	Name                           *string                               `pulumi:"name"`
	Schedule                       *ImagePipelineSchedule                `pulumi:"schedule"`
	Status                         *string                               `pulumi:"status"`
	Tags                           map[string]string                     `pulumi:"tags"`
}

// The set of arguments for constructing a ImagePipeline resource.
type ImagePipelineArgs struct {
	ContainerRecipeArn             pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	DistributionConfigurationArn   pulumi.StringPtrInput
	EnhancedImageMetadataEnabled   pulumi.BoolPtrInput
	ImageRecipeArn                 pulumi.StringPtrInput
	ImageTestsConfiguration        ImagePipelineImageTestsConfigurationPtrInput
	InfrastructureConfigurationArn pulumi.StringInput
	Name                           pulumi.StringPtrInput
	Schedule                       ImagePipelineSchedulePtrInput
	Status                         pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
}

func (ImagePipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imagePipelineArgs)(nil)).Elem()
}

type ImagePipelineInput interface {
	pulumi.Input

	ToImagePipelineOutput() ImagePipelineOutput
	ToImagePipelineOutputWithContext(ctx context.Context) ImagePipelineOutput
}

func (*ImagePipeline) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipeline)(nil)).Elem()
}

func (i *ImagePipeline) ToImagePipelineOutput() ImagePipelineOutput {
	return i.ToImagePipelineOutputWithContext(context.Background())
}

func (i *ImagePipeline) ToImagePipelineOutputWithContext(ctx context.Context) ImagePipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineOutput)
}

// ImagePipelineArrayInput is an input type that accepts ImagePipelineArray and ImagePipelineArrayOutput values.
// You can construct a concrete instance of `ImagePipelineArrayInput` via:
//
//	ImagePipelineArray{ ImagePipelineArgs{...} }
type ImagePipelineArrayInput interface {
	pulumi.Input

	ToImagePipelineArrayOutput() ImagePipelineArrayOutput
	ToImagePipelineArrayOutputWithContext(context.Context) ImagePipelineArrayOutput
}

type ImagePipelineArray []ImagePipelineInput

func (ImagePipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImagePipeline)(nil)).Elem()
}

func (i ImagePipelineArray) ToImagePipelineArrayOutput() ImagePipelineArrayOutput {
	return i.ToImagePipelineArrayOutputWithContext(context.Background())
}

func (i ImagePipelineArray) ToImagePipelineArrayOutputWithContext(ctx context.Context) ImagePipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineArrayOutput)
}

// ImagePipelineMapInput is an input type that accepts ImagePipelineMap and ImagePipelineMapOutput values.
// You can construct a concrete instance of `ImagePipelineMapInput` via:
//
//	ImagePipelineMap{ "key": ImagePipelineArgs{...} }
type ImagePipelineMapInput interface {
	pulumi.Input

	ToImagePipelineMapOutput() ImagePipelineMapOutput
	ToImagePipelineMapOutputWithContext(context.Context) ImagePipelineMapOutput
}

type ImagePipelineMap map[string]ImagePipelineInput

func (ImagePipelineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImagePipeline)(nil)).Elem()
}

func (i ImagePipelineMap) ToImagePipelineMapOutput() ImagePipelineMapOutput {
	return i.ToImagePipelineMapOutputWithContext(context.Background())
}

func (i ImagePipelineMap) ToImagePipelineMapOutputWithContext(ctx context.Context) ImagePipelineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineMapOutput)
}

type ImagePipelineOutput struct{ *pulumi.OutputState }

func (ImagePipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipeline)(nil)).Elem()
}

func (o ImagePipelineOutput) ToImagePipelineOutput() ImagePipelineOutput {
	return o
}

func (o ImagePipelineOutput) ToImagePipelineOutputWithContext(ctx context.Context) ImagePipelineOutput {
	return o
}

func (o ImagePipelineOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) ContainerRecipeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringPtrOutput { return v.ContainerRecipeArn }).(pulumi.StringPtrOutput)
}

func (o ImagePipelineOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.DateCreated }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) DateLastRun() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.DateLastRun }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) DateNextRun() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.DateNextRun }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) DateUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.DateUpdated }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ImagePipelineOutput) DistributionConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringPtrOutput { return v.DistributionConfigurationArn }).(pulumi.StringPtrOutput)
}

func (o ImagePipelineOutput) EnhancedImageMetadataEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.BoolPtrOutput { return v.EnhancedImageMetadataEnabled }).(pulumi.BoolPtrOutput)
}

func (o ImagePipelineOutput) ImageRecipeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringPtrOutput { return v.ImageRecipeArn }).(pulumi.StringPtrOutput)
}

func (o ImagePipelineOutput) ImageTestsConfiguration() ImagePipelineImageTestsConfigurationOutput {
	return o.ApplyT(func(v *ImagePipeline) ImagePipelineImageTestsConfigurationOutput { return v.ImageTestsConfiguration }).(ImagePipelineImageTestsConfigurationOutput)
}

func (o ImagePipelineOutput) InfrastructureConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.InfrastructureConfigurationArn }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o ImagePipelineOutput) Schedule() ImagePipelineSchedulePtrOutput {
	return o.ApplyT(func(v *ImagePipeline) ImagePipelineSchedulePtrOutput { return v.Schedule }).(ImagePipelineSchedulePtrOutput)
}

func (o ImagePipelineOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ImagePipelineOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ImagePipelineOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ImagePipeline) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type ImagePipelineArrayOutput struct{ *pulumi.OutputState }

func (ImagePipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImagePipeline)(nil)).Elem()
}

func (o ImagePipelineArrayOutput) ToImagePipelineArrayOutput() ImagePipelineArrayOutput {
	return o
}

func (o ImagePipelineArrayOutput) ToImagePipelineArrayOutputWithContext(ctx context.Context) ImagePipelineArrayOutput {
	return o
}

func (o ImagePipelineArrayOutput) Index(i pulumi.IntInput) ImagePipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ImagePipeline {
		return vs[0].([]*ImagePipeline)[vs[1].(int)]
	}).(ImagePipelineOutput)
}

type ImagePipelineMapOutput struct{ *pulumi.OutputState }

func (ImagePipelineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImagePipeline)(nil)).Elem()
}

func (o ImagePipelineMapOutput) ToImagePipelineMapOutput() ImagePipelineMapOutput {
	return o
}

func (o ImagePipelineMapOutput) ToImagePipelineMapOutputWithContext(ctx context.Context) ImagePipelineMapOutput {
	return o
}

func (o ImagePipelineMapOutput) MapIndex(k pulumi.StringInput) ImagePipelineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ImagePipeline {
		return vs[0].(map[string]*ImagePipeline)[vs[1].(string)]
	}).(ImagePipelineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePipelineInput)(nil)).Elem(), &ImagePipeline{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePipelineArrayInput)(nil)).Elem(), ImagePipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePipelineMapInput)(nil)).Elem(), ImagePipelineMap{})
	pulumi.RegisterOutputType(ImagePipelineOutput{})
	pulumi.RegisterOutputType(ImagePipelineArrayOutput{})
	pulumi.RegisterOutputType(ImagePipelineMapOutput{})
}
