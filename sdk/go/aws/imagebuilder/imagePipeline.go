// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Image Builder Image Pipeline.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/imagebuilder"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := imagebuilder.NewImagePipeline(ctx, "example", &imagebuilder.ImagePipelineArgs{
// 			ImageRecipeArn:                 pulumi.Any(aws_imagebuilder_image_recipe.Example.Arn),
// 			InfrastructureConfigurationArn: pulumi.Any(aws_imagebuilder_infrastructure_configuration.Example.Arn),
// 			Schedule: &imagebuilder.ImagePipelineScheduleArgs{
// 				ScheduleExpression: pulumi.String("cron(0 0 * * *)"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_imagebuilder_image_pipeline` resources can be imported using the Amazon Resource Name (ARN), e.g.
//
// ```sh
//  $ pulumi import aws:imagebuilder/imagePipeline:ImagePipeline example arn:aws:imagebuilder:us-east-1:123456789012:image-pipeline/example
// ```
type ImagePipeline struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the image pipeline.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Date the image pipeline was created.
	DateCreated pulumi.StringOutput `pulumi:"dateCreated"`
	// Date the image pipeline was last run.
	DateLastRun pulumi.StringOutput `pulumi:"dateLastRun"`
	// Date the image pipeline will run next.
	DateNextRun pulumi.StringOutput `pulumi:"dateNextRun"`
	// Date the image pipeline was updated.
	DateUpdated pulumi.StringOutput `pulumi:"dateUpdated"`
	// Description of the image pipeline.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumi.StringPtrOutput `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumi.BoolPtrOutput `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
	ImageRecipeArn pulumi.StringOutput `pulumi:"imageRecipeArn"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration ImagePipelineImageTestsConfigurationOutput `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn pulumi.StringOutput `pulumi:"infrastructureConfigurationArn"`
	// Name of the image pipeline.
	Name pulumi.StringOutput `pulumi:"name"`
	// Platform of the image pipeline.
	Platform pulumi.StringOutput `pulumi:"platform"`
	// Configuration block with schedule settings. Detailed below.
	Schedule ImagePipelineSchedulePtrOutput `pulumi:"schedule"`
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Key-value map of resource tags for the image pipeline.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewImagePipeline registers a new resource with the given unique name, arguments, and options.
func NewImagePipeline(ctx *pulumi.Context,
	name string, args *ImagePipelineArgs, opts ...pulumi.ResourceOption) (*ImagePipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageRecipeArn == nil {
		return nil, errors.New("invalid value for required argument 'ImageRecipeArn'")
	}
	if args.InfrastructureConfigurationArn == nil {
		return nil, errors.New("invalid value for required argument 'InfrastructureConfigurationArn'")
	}
	var resource ImagePipeline
	err := ctx.RegisterResource("aws:imagebuilder/imagePipeline:ImagePipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImagePipeline gets an existing ImagePipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImagePipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImagePipelineState, opts ...pulumi.ResourceOption) (*ImagePipeline, error) {
	var resource ImagePipeline
	err := ctx.ReadResource("aws:imagebuilder/imagePipeline:ImagePipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImagePipeline resources.
type imagePipelineState struct {
	// Amazon Resource Name (ARN) of the image pipeline.
	Arn *string `pulumi:"arn"`
	// Date the image pipeline was created.
	DateCreated *string `pulumi:"dateCreated"`
	// Date the image pipeline was last run.
	DateLastRun *string `pulumi:"dateLastRun"`
	// Date the image pipeline will run next.
	DateNextRun *string `pulumi:"dateNextRun"`
	// Date the image pipeline was updated.
	DateUpdated *string `pulumi:"dateUpdated"`
	// Description of the image pipeline.
	Description *string `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn *string `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled *bool `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
	ImageRecipeArn *string `pulumi:"imageRecipeArn"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration *ImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn *string `pulumi:"infrastructureConfigurationArn"`
	// Name of the image pipeline.
	Name *string `pulumi:"name"`
	// Platform of the image pipeline.
	Platform *string `pulumi:"platform"`
	// Configuration block with schedule settings. Detailed below.
	Schedule *ImagePipelineSchedule `pulumi:"schedule"`
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags for the image pipeline.
	Tags map[string]string `pulumi:"tags"`
}

type ImagePipelineState struct {
	// Amazon Resource Name (ARN) of the image pipeline.
	Arn pulumi.StringPtrInput
	// Date the image pipeline was created.
	DateCreated pulumi.StringPtrInput
	// Date the image pipeline was last run.
	DateLastRun pulumi.StringPtrInput
	// Date the image pipeline will run next.
	DateNextRun pulumi.StringPtrInput
	// Date the image pipeline was updated.
	DateUpdated pulumi.StringPtrInput
	// Description of the image pipeline.
	Description pulumi.StringPtrInput
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumi.StringPtrInput
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumi.BoolPtrInput
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
	ImageRecipeArn pulumi.StringPtrInput
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration ImagePipelineImageTestsConfigurationPtrInput
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn pulumi.StringPtrInput
	// Name of the image pipeline.
	Name pulumi.StringPtrInput
	// Platform of the image pipeline.
	Platform pulumi.StringPtrInput
	// Configuration block with schedule settings. Detailed below.
	Schedule ImagePipelineSchedulePtrInput
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status pulumi.StringPtrInput
	// Key-value map of resource tags for the image pipeline.
	Tags pulumi.StringMapInput
}

func (ImagePipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*imagePipelineState)(nil)).Elem()
}

type imagePipelineArgs struct {
	// Description of the image pipeline.
	Description *string `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn *string `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled *bool `pulumi:"enhancedImageMetadataEnabled"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
	ImageRecipeArn string `pulumi:"imageRecipeArn"`
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration *ImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfiguration"`
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn string `pulumi:"infrastructureConfigurationArn"`
	// Name of the image pipeline.
	Name *string `pulumi:"name"`
	// Configuration block with schedule settings. Detailed below.
	Schedule *ImagePipelineSchedule `pulumi:"schedule"`
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags for the image pipeline.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ImagePipeline resource.
type ImagePipelineArgs struct {
	// Description of the image pipeline.
	Description pulumi.StringPtrInput
	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	DistributionConfigurationArn pulumi.StringPtrInput
	// Whether additional information about the image being created is collected. Defaults to `true`.
	EnhancedImageMetadataEnabled pulumi.BoolPtrInput
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.
	ImageRecipeArn pulumi.StringInput
	// Configuration block with image tests configuration. Detailed below.
	ImageTestsConfiguration ImagePipelineImageTestsConfigurationPtrInput
	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn pulumi.StringInput
	// Name of the image pipeline.
	Name pulumi.StringPtrInput
	// Configuration block with schedule settings. Detailed below.
	Schedule ImagePipelineSchedulePtrInput
	// Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
	Status pulumi.StringPtrInput
	// Key-value map of resource tags for the image pipeline.
	Tags pulumi.StringMapInput
}

func (ImagePipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imagePipelineArgs)(nil)).Elem()
}

type ImagePipelineInput interface {
	pulumi.Input

	ToImagePipelineOutput() ImagePipelineOutput
	ToImagePipelineOutputWithContext(ctx context.Context) ImagePipelineOutput
}

func (ImagePipeline) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipeline)(nil)).Elem()
}

func (i ImagePipeline) ToImagePipelineOutput() ImagePipelineOutput {
	return i.ToImagePipelineOutputWithContext(context.Background())
}

func (i ImagePipeline) ToImagePipelineOutputWithContext(ctx context.Context) ImagePipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineOutput)
}

type ImagePipelineOutput struct {
	*pulumi.OutputState
}

func (ImagePipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineOutput)(nil)).Elem()
}

func (o ImagePipelineOutput) ToImagePipelineOutput() ImagePipelineOutput {
	return o
}

func (o ImagePipelineOutput) ToImagePipelineOutputWithContext(ctx context.Context) ImagePipelineOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ImagePipelineOutput{})
}
