// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DistributionConfiguration struct {
	pulumi.CustomResourceState

	Arn           pulumi.StringOutput                              `pulumi:"arn"`
	DateCreated   pulumi.StringOutput                              `pulumi:"dateCreated"`
	DateUpdated   pulumi.StringOutput                              `pulumi:"dateUpdated"`
	Description   pulumi.StringPtrOutput                           `pulumi:"description"`
	Distributions DistributionConfigurationDistributionArrayOutput `pulumi:"distributions"`
	Name          pulumi.StringOutput                              `pulumi:"name"`
	Tags          pulumi.StringMapOutput                           `pulumi:"tags"`
	TagsAll       pulumi.StringMapOutput                           `pulumi:"tagsAll"`
}

// NewDistributionConfiguration registers a new resource with the given unique name, arguments, and options.
func NewDistributionConfiguration(ctx *pulumi.Context,
	name string, args *DistributionConfigurationArgs, opts ...pulumi.ResourceOption) (*DistributionConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Distributions == nil {
		return nil, errors.New("invalid value for required argument 'Distributions'")
	}
	var resource DistributionConfiguration
	err := ctx.RegisterResource("aws:imagebuilder/distributionConfiguration:DistributionConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDistributionConfiguration gets an existing DistributionConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDistributionConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DistributionConfigurationState, opts ...pulumi.ResourceOption) (*DistributionConfiguration, error) {
	var resource DistributionConfiguration
	err := ctx.ReadResource("aws:imagebuilder/distributionConfiguration:DistributionConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DistributionConfiguration resources.
type distributionConfigurationState struct {
	Arn           *string                                 `pulumi:"arn"`
	DateCreated   *string                                 `pulumi:"dateCreated"`
	DateUpdated   *string                                 `pulumi:"dateUpdated"`
	Description   *string                                 `pulumi:"description"`
	Distributions []DistributionConfigurationDistribution `pulumi:"distributions"`
	Name          *string                                 `pulumi:"name"`
	Tags          map[string]string                       `pulumi:"tags"`
	TagsAll       map[string]string                       `pulumi:"tagsAll"`
}

type DistributionConfigurationState struct {
	Arn           pulumi.StringPtrInput
	DateCreated   pulumi.StringPtrInput
	DateUpdated   pulumi.StringPtrInput
	Description   pulumi.StringPtrInput
	Distributions DistributionConfigurationDistributionArrayInput
	Name          pulumi.StringPtrInput
	Tags          pulumi.StringMapInput
	TagsAll       pulumi.StringMapInput
}

func (DistributionConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionConfigurationState)(nil)).Elem()
}

type distributionConfigurationArgs struct {
	Description   *string                                 `pulumi:"description"`
	Distributions []DistributionConfigurationDistribution `pulumi:"distributions"`
	Name          *string                                 `pulumi:"name"`
	Tags          map[string]string                       `pulumi:"tags"`
}

// The set of arguments for constructing a DistributionConfiguration resource.
type DistributionConfigurationArgs struct {
	Description   pulumi.StringPtrInput
	Distributions DistributionConfigurationDistributionArrayInput
	Name          pulumi.StringPtrInput
	Tags          pulumi.StringMapInput
}

func (DistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionConfigurationArgs)(nil)).Elem()
}

type DistributionConfigurationInput interface {
	pulumi.Input

	ToDistributionConfigurationOutput() DistributionConfigurationOutput
	ToDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationOutput
}

func (*DistributionConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfiguration)(nil)).Elem()
}

func (i *DistributionConfiguration) ToDistributionConfigurationOutput() DistributionConfigurationOutput {
	return i.ToDistributionConfigurationOutputWithContext(context.Background())
}

func (i *DistributionConfiguration) ToDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationOutput)
}

// DistributionConfigurationArrayInput is an input type that accepts DistributionConfigurationArray and DistributionConfigurationArrayOutput values.
// You can construct a concrete instance of `DistributionConfigurationArrayInput` via:
//
//	DistributionConfigurationArray{ DistributionConfigurationArgs{...} }
type DistributionConfigurationArrayInput interface {
	pulumi.Input

	ToDistributionConfigurationArrayOutput() DistributionConfigurationArrayOutput
	ToDistributionConfigurationArrayOutputWithContext(context.Context) DistributionConfigurationArrayOutput
}

type DistributionConfigurationArray []DistributionConfigurationInput

func (DistributionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DistributionConfiguration)(nil)).Elem()
}

func (i DistributionConfigurationArray) ToDistributionConfigurationArrayOutput() DistributionConfigurationArrayOutput {
	return i.ToDistributionConfigurationArrayOutputWithContext(context.Background())
}

func (i DistributionConfigurationArray) ToDistributionConfigurationArrayOutputWithContext(ctx context.Context) DistributionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationArrayOutput)
}

// DistributionConfigurationMapInput is an input type that accepts DistributionConfigurationMap and DistributionConfigurationMapOutput values.
// You can construct a concrete instance of `DistributionConfigurationMapInput` via:
//
//	DistributionConfigurationMap{ "key": DistributionConfigurationArgs{...} }
type DistributionConfigurationMapInput interface {
	pulumi.Input

	ToDistributionConfigurationMapOutput() DistributionConfigurationMapOutput
	ToDistributionConfigurationMapOutputWithContext(context.Context) DistributionConfigurationMapOutput
}

type DistributionConfigurationMap map[string]DistributionConfigurationInput

func (DistributionConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DistributionConfiguration)(nil)).Elem()
}

func (i DistributionConfigurationMap) ToDistributionConfigurationMapOutput() DistributionConfigurationMapOutput {
	return i.ToDistributionConfigurationMapOutputWithContext(context.Background())
}

func (i DistributionConfigurationMap) ToDistributionConfigurationMapOutputWithContext(ctx context.Context) DistributionConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationMapOutput)
}

type DistributionConfigurationOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationOutput) ToDistributionConfigurationOutput() DistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationOutput) ToDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DistributionConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DistributionConfigurationOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DistributionConfiguration) pulumi.StringOutput { return v.DateCreated }).(pulumi.StringOutput)
}

func (o DistributionConfigurationOutput) DateUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *DistributionConfiguration) pulumi.StringOutput { return v.DateUpdated }).(pulumi.StringOutput)
}

func (o DistributionConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DistributionConfigurationOutput) Distributions() DistributionConfigurationDistributionArrayOutput {
	return o.ApplyT(func(v *DistributionConfiguration) DistributionConfigurationDistributionArrayOutput {
		return v.Distributions
	}).(DistributionConfigurationDistributionArrayOutput)
}

func (o DistributionConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DistributionConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DistributionConfigurationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DistributionConfiguration) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DistributionConfigurationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DistributionConfiguration) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type DistributionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationArrayOutput) ToDistributionConfigurationArrayOutput() DistributionConfigurationArrayOutput {
	return o
}

func (o DistributionConfigurationArrayOutput) ToDistributionConfigurationArrayOutputWithContext(ctx context.Context) DistributionConfigurationArrayOutput {
	return o
}

func (o DistributionConfigurationArrayOutput) Index(i pulumi.IntInput) DistributionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DistributionConfiguration {
		return vs[0].([]*DistributionConfiguration)[vs[1].(int)]
	}).(DistributionConfigurationOutput)
}

type DistributionConfigurationMapOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationMapOutput) ToDistributionConfigurationMapOutput() DistributionConfigurationMapOutput {
	return o
}

func (o DistributionConfigurationMapOutput) ToDistributionConfigurationMapOutputWithContext(ctx context.Context) DistributionConfigurationMapOutput {
	return o
}

func (o DistributionConfigurationMapOutput) MapIndex(k pulumi.StringInput) DistributionConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DistributionConfiguration {
		return vs[0].(map[string]*DistributionConfiguration)[vs[1].(string)]
	}).(DistributionConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationInput)(nil)).Elem(), &DistributionConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationArrayInput)(nil)).Elem(), DistributionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationMapInput)(nil)).Elem(), DistributionConfigurationMap{})
	pulumi.RegisterOutputType(DistributionConfigurationOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationMapOutput{})
}
