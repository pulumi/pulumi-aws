// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContainerRecipeComponent struct {
	// Amazon Resource Name (ARN) of the Image Builder Component to associate.
	ComponentArn string `pulumi:"componentArn"`
	// Configuration block(s) for parameters to configure the component. Detailed below.
	Parameters []ContainerRecipeComponentParameter `pulumi:"parameters"`
}

// ContainerRecipeComponentInput is an input type that accepts ContainerRecipeComponentArgs and ContainerRecipeComponentOutput values.
// You can construct a concrete instance of `ContainerRecipeComponentInput` via:
//
//          ContainerRecipeComponentArgs{...}
type ContainerRecipeComponentInput interface {
	pulumi.Input

	ToContainerRecipeComponentOutput() ContainerRecipeComponentOutput
	ToContainerRecipeComponentOutputWithContext(context.Context) ContainerRecipeComponentOutput
}

type ContainerRecipeComponentArgs struct {
	// Amazon Resource Name (ARN) of the Image Builder Component to associate.
	ComponentArn pulumi.StringInput `pulumi:"componentArn"`
	// Configuration block(s) for parameters to configure the component. Detailed below.
	Parameters ContainerRecipeComponentParameterArrayInput `pulumi:"parameters"`
}

func (ContainerRecipeComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeComponent)(nil)).Elem()
}

func (i ContainerRecipeComponentArgs) ToContainerRecipeComponentOutput() ContainerRecipeComponentOutput {
	return i.ToContainerRecipeComponentOutputWithContext(context.Background())
}

func (i ContainerRecipeComponentArgs) ToContainerRecipeComponentOutputWithContext(ctx context.Context) ContainerRecipeComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeComponentOutput)
}

// ContainerRecipeComponentArrayInput is an input type that accepts ContainerRecipeComponentArray and ContainerRecipeComponentArrayOutput values.
// You can construct a concrete instance of `ContainerRecipeComponentArrayInput` via:
//
//          ContainerRecipeComponentArray{ ContainerRecipeComponentArgs{...} }
type ContainerRecipeComponentArrayInput interface {
	pulumi.Input

	ToContainerRecipeComponentArrayOutput() ContainerRecipeComponentArrayOutput
	ToContainerRecipeComponentArrayOutputWithContext(context.Context) ContainerRecipeComponentArrayOutput
}

type ContainerRecipeComponentArray []ContainerRecipeComponentInput

func (ContainerRecipeComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRecipeComponent)(nil)).Elem()
}

func (i ContainerRecipeComponentArray) ToContainerRecipeComponentArrayOutput() ContainerRecipeComponentArrayOutput {
	return i.ToContainerRecipeComponentArrayOutputWithContext(context.Background())
}

func (i ContainerRecipeComponentArray) ToContainerRecipeComponentArrayOutputWithContext(ctx context.Context) ContainerRecipeComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeComponentArrayOutput)
}

type ContainerRecipeComponentOutput struct{ *pulumi.OutputState }

func (ContainerRecipeComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeComponent)(nil)).Elem()
}

func (o ContainerRecipeComponentOutput) ToContainerRecipeComponentOutput() ContainerRecipeComponentOutput {
	return o
}

func (o ContainerRecipeComponentOutput) ToContainerRecipeComponentOutputWithContext(ctx context.Context) ContainerRecipeComponentOutput {
	return o
}

// Amazon Resource Name (ARN) of the Image Builder Component to associate.
func (o ContainerRecipeComponentOutput) ComponentArn() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRecipeComponent) string { return v.ComponentArn }).(pulumi.StringOutput)
}

// Configuration block(s) for parameters to configure the component. Detailed below.
func (o ContainerRecipeComponentOutput) Parameters() ContainerRecipeComponentParameterArrayOutput {
	return o.ApplyT(func(v ContainerRecipeComponent) []ContainerRecipeComponentParameter { return v.Parameters }).(ContainerRecipeComponentParameterArrayOutput)
}

type ContainerRecipeComponentArrayOutput struct{ *pulumi.OutputState }

func (ContainerRecipeComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRecipeComponent)(nil)).Elem()
}

func (o ContainerRecipeComponentArrayOutput) ToContainerRecipeComponentArrayOutput() ContainerRecipeComponentArrayOutput {
	return o
}

func (o ContainerRecipeComponentArrayOutput) ToContainerRecipeComponentArrayOutputWithContext(ctx context.Context) ContainerRecipeComponentArrayOutput {
	return o
}

func (o ContainerRecipeComponentArrayOutput) Index(i pulumi.IntInput) ContainerRecipeComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerRecipeComponent {
		return vs[0].([]ContainerRecipeComponent)[vs[1].(int)]
	}).(ContainerRecipeComponentOutput)
}

type ContainerRecipeComponentParameter struct {
	// The name of the component parameter.
	Name string `pulumi:"name"`
	// The value for the named component parameter.
	Value string `pulumi:"value"`
}

// ContainerRecipeComponentParameterInput is an input type that accepts ContainerRecipeComponentParameterArgs and ContainerRecipeComponentParameterOutput values.
// You can construct a concrete instance of `ContainerRecipeComponentParameterInput` via:
//
//          ContainerRecipeComponentParameterArgs{...}
type ContainerRecipeComponentParameterInput interface {
	pulumi.Input

	ToContainerRecipeComponentParameterOutput() ContainerRecipeComponentParameterOutput
	ToContainerRecipeComponentParameterOutputWithContext(context.Context) ContainerRecipeComponentParameterOutput
}

type ContainerRecipeComponentParameterArgs struct {
	// The name of the component parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value for the named component parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerRecipeComponentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeComponentParameter)(nil)).Elem()
}

func (i ContainerRecipeComponentParameterArgs) ToContainerRecipeComponentParameterOutput() ContainerRecipeComponentParameterOutput {
	return i.ToContainerRecipeComponentParameterOutputWithContext(context.Background())
}

func (i ContainerRecipeComponentParameterArgs) ToContainerRecipeComponentParameterOutputWithContext(ctx context.Context) ContainerRecipeComponentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeComponentParameterOutput)
}

// ContainerRecipeComponentParameterArrayInput is an input type that accepts ContainerRecipeComponentParameterArray and ContainerRecipeComponentParameterArrayOutput values.
// You can construct a concrete instance of `ContainerRecipeComponentParameterArrayInput` via:
//
//          ContainerRecipeComponentParameterArray{ ContainerRecipeComponentParameterArgs{...} }
type ContainerRecipeComponentParameterArrayInput interface {
	pulumi.Input

	ToContainerRecipeComponentParameterArrayOutput() ContainerRecipeComponentParameterArrayOutput
	ToContainerRecipeComponentParameterArrayOutputWithContext(context.Context) ContainerRecipeComponentParameterArrayOutput
}

type ContainerRecipeComponentParameterArray []ContainerRecipeComponentParameterInput

func (ContainerRecipeComponentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRecipeComponentParameter)(nil)).Elem()
}

func (i ContainerRecipeComponentParameterArray) ToContainerRecipeComponentParameterArrayOutput() ContainerRecipeComponentParameterArrayOutput {
	return i.ToContainerRecipeComponentParameterArrayOutputWithContext(context.Background())
}

func (i ContainerRecipeComponentParameterArray) ToContainerRecipeComponentParameterArrayOutputWithContext(ctx context.Context) ContainerRecipeComponentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeComponentParameterArrayOutput)
}

type ContainerRecipeComponentParameterOutput struct{ *pulumi.OutputState }

func (ContainerRecipeComponentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeComponentParameter)(nil)).Elem()
}

func (o ContainerRecipeComponentParameterOutput) ToContainerRecipeComponentParameterOutput() ContainerRecipeComponentParameterOutput {
	return o
}

func (o ContainerRecipeComponentParameterOutput) ToContainerRecipeComponentParameterOutputWithContext(ctx context.Context) ContainerRecipeComponentParameterOutput {
	return o
}

// The name of the component parameter.
func (o ContainerRecipeComponentParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRecipeComponentParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The value for the named component parameter.
func (o ContainerRecipeComponentParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRecipeComponentParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerRecipeComponentParameterArrayOutput struct{ *pulumi.OutputState }

func (ContainerRecipeComponentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRecipeComponentParameter)(nil)).Elem()
}

func (o ContainerRecipeComponentParameterArrayOutput) ToContainerRecipeComponentParameterArrayOutput() ContainerRecipeComponentParameterArrayOutput {
	return o
}

func (o ContainerRecipeComponentParameterArrayOutput) ToContainerRecipeComponentParameterArrayOutputWithContext(ctx context.Context) ContainerRecipeComponentParameterArrayOutput {
	return o
}

func (o ContainerRecipeComponentParameterArrayOutput) Index(i pulumi.IntInput) ContainerRecipeComponentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerRecipeComponentParameter {
		return vs[0].([]ContainerRecipeComponentParameter)[vs[1].(int)]
	}).(ContainerRecipeComponentParameterOutput)
}

type ContainerRecipeInstanceConfiguration struct {
	// Configuration block(s) with block device mappings for the the container recipe. Detailed below.
	BlockDeviceMappings []ContainerRecipeInstanceConfigurationBlockDeviceMapping `pulumi:"blockDeviceMappings"`
	// The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
	Image *string `pulumi:"image"`
}

// ContainerRecipeInstanceConfigurationInput is an input type that accepts ContainerRecipeInstanceConfigurationArgs and ContainerRecipeInstanceConfigurationOutput values.
// You can construct a concrete instance of `ContainerRecipeInstanceConfigurationInput` via:
//
//          ContainerRecipeInstanceConfigurationArgs{...}
type ContainerRecipeInstanceConfigurationInput interface {
	pulumi.Input

	ToContainerRecipeInstanceConfigurationOutput() ContainerRecipeInstanceConfigurationOutput
	ToContainerRecipeInstanceConfigurationOutputWithContext(context.Context) ContainerRecipeInstanceConfigurationOutput
}

type ContainerRecipeInstanceConfigurationArgs struct {
	// Configuration block(s) with block device mappings for the the container recipe. Detailed below.
	BlockDeviceMappings ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput `pulumi:"blockDeviceMappings"`
	// The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
	Image pulumi.StringPtrInput `pulumi:"image"`
}

func (ContainerRecipeInstanceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (i ContainerRecipeInstanceConfigurationArgs) ToContainerRecipeInstanceConfigurationOutput() ContainerRecipeInstanceConfigurationOutput {
	return i.ToContainerRecipeInstanceConfigurationOutputWithContext(context.Background())
}

func (i ContainerRecipeInstanceConfigurationArgs) ToContainerRecipeInstanceConfigurationOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationOutput)
}

func (i ContainerRecipeInstanceConfigurationArgs) ToContainerRecipeInstanceConfigurationPtrOutput() ContainerRecipeInstanceConfigurationPtrOutput {
	return i.ToContainerRecipeInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i ContainerRecipeInstanceConfigurationArgs) ToContainerRecipeInstanceConfigurationPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationOutput).ToContainerRecipeInstanceConfigurationPtrOutputWithContext(ctx)
}

// ContainerRecipeInstanceConfigurationPtrInput is an input type that accepts ContainerRecipeInstanceConfigurationArgs, ContainerRecipeInstanceConfigurationPtr and ContainerRecipeInstanceConfigurationPtrOutput values.
// You can construct a concrete instance of `ContainerRecipeInstanceConfigurationPtrInput` via:
//
//          ContainerRecipeInstanceConfigurationArgs{...}
//
//  or:
//
//          nil
type ContainerRecipeInstanceConfigurationPtrInput interface {
	pulumi.Input

	ToContainerRecipeInstanceConfigurationPtrOutput() ContainerRecipeInstanceConfigurationPtrOutput
	ToContainerRecipeInstanceConfigurationPtrOutputWithContext(context.Context) ContainerRecipeInstanceConfigurationPtrOutput
}

type containerRecipeInstanceConfigurationPtrType ContainerRecipeInstanceConfigurationArgs

func ContainerRecipeInstanceConfigurationPtr(v *ContainerRecipeInstanceConfigurationArgs) ContainerRecipeInstanceConfigurationPtrInput {
	return (*containerRecipeInstanceConfigurationPtrType)(v)
}

func (*containerRecipeInstanceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (i *containerRecipeInstanceConfigurationPtrType) ToContainerRecipeInstanceConfigurationPtrOutput() ContainerRecipeInstanceConfigurationPtrOutput {
	return i.ToContainerRecipeInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i *containerRecipeInstanceConfigurationPtrType) ToContainerRecipeInstanceConfigurationPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationPtrOutput)
}

type ContainerRecipeInstanceConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerRecipeInstanceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (o ContainerRecipeInstanceConfigurationOutput) ToContainerRecipeInstanceConfigurationOutput() ContainerRecipeInstanceConfigurationOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationOutput) ToContainerRecipeInstanceConfigurationOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationOutput) ToContainerRecipeInstanceConfigurationPtrOutput() ContainerRecipeInstanceConfigurationPtrOutput {
	return o.ToContainerRecipeInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeInstanceConfigurationOutput) ToContainerRecipeInstanceConfigurationPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRecipeInstanceConfiguration) *ContainerRecipeInstanceConfiguration {
		return &v
	}).(ContainerRecipeInstanceConfigurationPtrOutput)
}

// Configuration block(s) with block device mappings for the the container recipe. Detailed below.
func (o ContainerRecipeInstanceConfigurationOutput) BlockDeviceMappings() ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfiguration) []ContainerRecipeInstanceConfigurationBlockDeviceMapping {
		return v.BlockDeviceMappings
	}).(ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput)
}

// The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
func (o ContainerRecipeInstanceConfigurationOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfiguration) *string { return v.Image }).(pulumi.StringPtrOutput)
}

type ContainerRecipeInstanceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ContainerRecipeInstanceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (o ContainerRecipeInstanceConfigurationPtrOutput) ToContainerRecipeInstanceConfigurationPtrOutput() ContainerRecipeInstanceConfigurationPtrOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationPtrOutput) ToContainerRecipeInstanceConfigurationPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationPtrOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationPtrOutput) Elem() ContainerRecipeInstanceConfigurationOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfiguration) ContainerRecipeInstanceConfiguration {
		if v != nil {
			return *v
		}
		var ret ContainerRecipeInstanceConfiguration
		return ret
	}).(ContainerRecipeInstanceConfigurationOutput)
}

// Configuration block(s) with block device mappings for the the container recipe. Detailed below.
func (o ContainerRecipeInstanceConfigurationPtrOutput) BlockDeviceMappings() ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfiguration) []ContainerRecipeInstanceConfigurationBlockDeviceMapping {
		if v == nil {
			return nil
		}
		return v.BlockDeviceMappings
	}).(ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput)
}

// The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
func (o ContainerRecipeInstanceConfigurationPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

type ContainerRecipeInstanceConfigurationBlockDeviceMapping struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName *string `pulumi:"deviceName"`
	// Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
	Ebs *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs `pulumi:"ebs"`
	// Set to `true` to remove a mapping from the parent image.
	NoDevice *bool `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName *string `pulumi:"virtualName"`
}

// ContainerRecipeInstanceConfigurationBlockDeviceMappingInput is an input type that accepts ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs and ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput values.
// You can construct a concrete instance of `ContainerRecipeInstanceConfigurationBlockDeviceMappingInput` via:
//
//          ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs{...}
type ContainerRecipeInstanceConfigurationBlockDeviceMappingInput interface {
	pulumi.Input

	ToContainerRecipeInstanceConfigurationBlockDeviceMappingOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput
	ToContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
	Ebs ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrInput `pulumi:"ebs"`
	// Set to `true` to remove a mapping from the parent image.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs) ToContainerRecipeInstanceConfigurationBlockDeviceMappingOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return i.ToContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(context.Background())
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs) ToContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput)
}

// ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput is an input type that accepts ContainerRecipeInstanceConfigurationBlockDeviceMappingArray and ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput` via:
//
//          ContainerRecipeInstanceConfigurationBlockDeviceMappingArray{ ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs{...} }
type ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput
	ToContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingArray []ContainerRecipeInstanceConfigurationBlockDeviceMappingInput

func (ContainerRecipeInstanceConfigurationBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingArray) ToContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return i.ToContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingArray) ToContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput)
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return o
}

// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMapping) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) Ebs() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMapping) *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs {
		return v.Ebs
	}).(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput)
}

// Set to `true` to remove a mapping from the parent image.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMapping) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMapping) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerRecipeInstanceConfigurationBlockDeviceMapping {
		return vs[0].([]ContainerRecipeInstanceConfigurationBlockDeviceMapping)[vs[1].(int)]
	}).(ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput)
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted *string `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType *string `pulumi:"volumeType"`
}

// ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsInput is an input type that accepts ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs and ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput values.
// You can construct a concrete instance of `ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsInput` via:
//
//          ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs{...}
type ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsInput interface {
	pulumi.Input

	ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput
	ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutputWithContext(context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted pulumi.StringPtrInput `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs)(nil)).Elem()
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput {
	return i.ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutputWithContext(context.Background())
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput)
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return i.ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput).ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(ctx)
}

// ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrInput is an input type that accepts ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs, ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtr and ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput values.
// You can construct a concrete instance of `ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrInput` via:
//
//          ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs{...}
//
//  or:
//
//          nil
type ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrInput interface {
	pulumi.Input

	ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput
	ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput
}

type containerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrType ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs

func ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtr(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrInput {
	return (*containerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrType)(v)
}

func (*containerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs)(nil)).Elem()
}

func (i *containerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrType) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return i.ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i *containerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrType) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput)
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput struct{ *pulumi.OutputState }

func (ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs)(nil)).Elem()
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return o.ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs {
		return &v
	}).(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput)
}

// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string {
		return v.DeleteOnTermination
	}).(pulumi.StringPtrOutput)
}

// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Identifier of the EC2 Volume Snapshot.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// Size of the volume, in GiB.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// Type of the volume. For example, `gp2` or `io2`.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput struct{ *pulumi.OutputState }

func (ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs)(nil)).Elem()
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) ToContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) Elem() ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs {
		if v != nil {
			return *v
		}
		var ret ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs
		return ret
	}).(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput)
}

// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.StringPtrOutput)
}

// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.StringPtrOutput)
}

// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Identifier of the EC2 Volume Snapshot.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// Size of the volume, in GiB.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

// Type of the volume. For example, `gp2` or `io2`.
func (o ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeInstanceConfigurationBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type ContainerRecipeTargetRepository struct {
	// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
	RepositoryName string `pulumi:"repositoryName"`
	// The service in which this image is registered. Valid values: `ECR`.
	Service string `pulumi:"service"`
}

// ContainerRecipeTargetRepositoryInput is an input type that accepts ContainerRecipeTargetRepositoryArgs and ContainerRecipeTargetRepositoryOutput values.
// You can construct a concrete instance of `ContainerRecipeTargetRepositoryInput` via:
//
//          ContainerRecipeTargetRepositoryArgs{...}
type ContainerRecipeTargetRepositoryInput interface {
	pulumi.Input

	ToContainerRecipeTargetRepositoryOutput() ContainerRecipeTargetRepositoryOutput
	ToContainerRecipeTargetRepositoryOutputWithContext(context.Context) ContainerRecipeTargetRepositoryOutput
}

type ContainerRecipeTargetRepositoryArgs struct {
	// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// The service in which this image is registered. Valid values: `ECR`.
	Service pulumi.StringInput `pulumi:"service"`
}

func (ContainerRecipeTargetRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeTargetRepository)(nil)).Elem()
}

func (i ContainerRecipeTargetRepositoryArgs) ToContainerRecipeTargetRepositoryOutput() ContainerRecipeTargetRepositoryOutput {
	return i.ToContainerRecipeTargetRepositoryOutputWithContext(context.Background())
}

func (i ContainerRecipeTargetRepositoryArgs) ToContainerRecipeTargetRepositoryOutputWithContext(ctx context.Context) ContainerRecipeTargetRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeTargetRepositoryOutput)
}

func (i ContainerRecipeTargetRepositoryArgs) ToContainerRecipeTargetRepositoryPtrOutput() ContainerRecipeTargetRepositoryPtrOutput {
	return i.ToContainerRecipeTargetRepositoryPtrOutputWithContext(context.Background())
}

func (i ContainerRecipeTargetRepositoryArgs) ToContainerRecipeTargetRepositoryPtrOutputWithContext(ctx context.Context) ContainerRecipeTargetRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeTargetRepositoryOutput).ToContainerRecipeTargetRepositoryPtrOutputWithContext(ctx)
}

// ContainerRecipeTargetRepositoryPtrInput is an input type that accepts ContainerRecipeTargetRepositoryArgs, ContainerRecipeTargetRepositoryPtr and ContainerRecipeTargetRepositoryPtrOutput values.
// You can construct a concrete instance of `ContainerRecipeTargetRepositoryPtrInput` via:
//
//          ContainerRecipeTargetRepositoryArgs{...}
//
//  or:
//
//          nil
type ContainerRecipeTargetRepositoryPtrInput interface {
	pulumi.Input

	ToContainerRecipeTargetRepositoryPtrOutput() ContainerRecipeTargetRepositoryPtrOutput
	ToContainerRecipeTargetRepositoryPtrOutputWithContext(context.Context) ContainerRecipeTargetRepositoryPtrOutput
}

type containerRecipeTargetRepositoryPtrType ContainerRecipeTargetRepositoryArgs

func ContainerRecipeTargetRepositoryPtr(v *ContainerRecipeTargetRepositoryArgs) ContainerRecipeTargetRepositoryPtrInput {
	return (*containerRecipeTargetRepositoryPtrType)(v)
}

func (*containerRecipeTargetRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeTargetRepository)(nil)).Elem()
}

func (i *containerRecipeTargetRepositoryPtrType) ToContainerRecipeTargetRepositoryPtrOutput() ContainerRecipeTargetRepositoryPtrOutput {
	return i.ToContainerRecipeTargetRepositoryPtrOutputWithContext(context.Background())
}

func (i *containerRecipeTargetRepositoryPtrType) ToContainerRecipeTargetRepositoryPtrOutputWithContext(ctx context.Context) ContainerRecipeTargetRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeTargetRepositoryPtrOutput)
}

type ContainerRecipeTargetRepositoryOutput struct{ *pulumi.OutputState }

func (ContainerRecipeTargetRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRecipeTargetRepository)(nil)).Elem()
}

func (o ContainerRecipeTargetRepositoryOutput) ToContainerRecipeTargetRepositoryOutput() ContainerRecipeTargetRepositoryOutput {
	return o
}

func (o ContainerRecipeTargetRepositoryOutput) ToContainerRecipeTargetRepositoryOutputWithContext(ctx context.Context) ContainerRecipeTargetRepositoryOutput {
	return o
}

func (o ContainerRecipeTargetRepositoryOutput) ToContainerRecipeTargetRepositoryPtrOutput() ContainerRecipeTargetRepositoryPtrOutput {
	return o.ToContainerRecipeTargetRepositoryPtrOutputWithContext(context.Background())
}

func (o ContainerRecipeTargetRepositoryOutput) ToContainerRecipeTargetRepositoryPtrOutputWithContext(ctx context.Context) ContainerRecipeTargetRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRecipeTargetRepository) *ContainerRecipeTargetRepository {
		return &v
	}).(ContainerRecipeTargetRepositoryPtrOutput)
}

// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
func (o ContainerRecipeTargetRepositoryOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRecipeTargetRepository) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// The service in which this image is registered. Valid values: `ECR`.
func (o ContainerRecipeTargetRepositoryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerRecipeTargetRepository) string { return v.Service }).(pulumi.StringOutput)
}

type ContainerRecipeTargetRepositoryPtrOutput struct{ *pulumi.OutputState }

func (ContainerRecipeTargetRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipeTargetRepository)(nil)).Elem()
}

func (o ContainerRecipeTargetRepositoryPtrOutput) ToContainerRecipeTargetRepositoryPtrOutput() ContainerRecipeTargetRepositoryPtrOutput {
	return o
}

func (o ContainerRecipeTargetRepositoryPtrOutput) ToContainerRecipeTargetRepositoryPtrOutputWithContext(ctx context.Context) ContainerRecipeTargetRepositoryPtrOutput {
	return o
}

func (o ContainerRecipeTargetRepositoryPtrOutput) Elem() ContainerRecipeTargetRepositoryOutput {
	return o.ApplyT(func(v *ContainerRecipeTargetRepository) ContainerRecipeTargetRepository {
		if v != nil {
			return *v
		}
		var ret ContainerRecipeTargetRepository
		return ret
	}).(ContainerRecipeTargetRepositoryOutput)
}

// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
func (o ContainerRecipeTargetRepositoryPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeTargetRepository) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// The service in which this image is registered. Valid values: `ECR`.
func (o ContainerRecipeTargetRepositoryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipeTargetRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

type DistributionConfigurationDistribution struct {
	// Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
	AmiDistributionConfiguration *DistributionConfigurationDistributionAmiDistributionConfiguration `pulumi:"amiDistributionConfiguration"`
	// Configuration block with container distribution settings. Detailed below.
	ContainerDistributionConfiguration *DistributionConfigurationDistributionContainerDistributionConfiguration `pulumi:"containerDistributionConfiguration"`
	// Set of launch template configuration settings that apply to image distribution. Detailed below.
	LaunchTemplateConfigurations []DistributionConfigurationDistributionLaunchTemplateConfiguration `pulumi:"launchTemplateConfigurations"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns []string `pulumi:"licenseConfigurationArns"`
	// AWS Region for the distribution.
	Region string `pulumi:"region"`
}

// DistributionConfigurationDistributionInput is an input type that accepts DistributionConfigurationDistributionArgs and DistributionConfigurationDistributionOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionInput` via:
//
//          DistributionConfigurationDistributionArgs{...}
type DistributionConfigurationDistributionInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionOutput() DistributionConfigurationDistributionOutput
	ToDistributionConfigurationDistributionOutputWithContext(context.Context) DistributionConfigurationDistributionOutput
}

type DistributionConfigurationDistributionArgs struct {
	// Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
	AmiDistributionConfiguration DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput `pulumi:"amiDistributionConfiguration"`
	// Configuration block with container distribution settings. Detailed below.
	ContainerDistributionConfiguration DistributionConfigurationDistributionContainerDistributionConfigurationPtrInput `pulumi:"containerDistributionConfiguration"`
	// Set of launch template configuration settings that apply to image distribution. Detailed below.
	LaunchTemplateConfigurations DistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput `pulumi:"launchTemplateConfigurations"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns pulumi.StringArrayInput `pulumi:"licenseConfigurationArns"`
	// AWS Region for the distribution.
	Region pulumi.StringInput `pulumi:"region"`
}

func (DistributionConfigurationDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistribution)(nil)).Elem()
}

func (i DistributionConfigurationDistributionArgs) ToDistributionConfigurationDistributionOutput() DistributionConfigurationDistributionOutput {
	return i.ToDistributionConfigurationDistributionOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionArgs) ToDistributionConfigurationDistributionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionOutput)
}

// DistributionConfigurationDistributionArrayInput is an input type that accepts DistributionConfigurationDistributionArray and DistributionConfigurationDistributionArrayOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionArrayInput` via:
//
//          DistributionConfigurationDistributionArray{ DistributionConfigurationDistributionArgs{...} }
type DistributionConfigurationDistributionArrayInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionArrayOutput() DistributionConfigurationDistributionArrayOutput
	ToDistributionConfigurationDistributionArrayOutputWithContext(context.Context) DistributionConfigurationDistributionArrayOutput
}

type DistributionConfigurationDistributionArray []DistributionConfigurationDistributionInput

func (DistributionConfigurationDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionConfigurationDistribution)(nil)).Elem()
}

func (i DistributionConfigurationDistributionArray) ToDistributionConfigurationDistributionArrayOutput() DistributionConfigurationDistributionArrayOutput {
	return i.ToDistributionConfigurationDistributionArrayOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionArray) ToDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) DistributionConfigurationDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionArrayOutput)
}

type DistributionConfigurationDistributionOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistribution)(nil)).Elem()
}

func (o DistributionConfigurationDistributionOutput) ToDistributionConfigurationDistributionOutput() DistributionConfigurationDistributionOutput {
	return o
}

func (o DistributionConfigurationDistributionOutput) ToDistributionConfigurationDistributionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionOutput {
	return o
}

// Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
func (o DistributionConfigurationDistributionOutput) AmiDistributionConfiguration() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) *DistributionConfigurationDistributionAmiDistributionConfiguration {
		return v.AmiDistributionConfiguration
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput)
}

// Configuration block with container distribution settings. Detailed below.
func (o DistributionConfigurationDistributionOutput) ContainerDistributionConfiguration() DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) *DistributionConfigurationDistributionContainerDistributionConfiguration {
		return v.ContainerDistributionConfiguration
	}).(DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput)
}

// Set of launch template configuration settings that apply to image distribution. Detailed below.
func (o DistributionConfigurationDistributionOutput) LaunchTemplateConfigurations() DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) []DistributionConfigurationDistributionLaunchTemplateConfiguration {
		return v.LaunchTemplateConfigurations
	}).(DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput)
}

// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
func (o DistributionConfigurationDistributionOutput) LicenseConfigurationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) []string { return v.LicenseConfigurationArns }).(pulumi.StringArrayOutput)
}

// AWS Region for the distribution.
func (o DistributionConfigurationDistributionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) string { return v.Region }).(pulumi.StringOutput)
}

type DistributionConfigurationDistributionArrayOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionConfigurationDistribution)(nil)).Elem()
}

func (o DistributionConfigurationDistributionArrayOutput) ToDistributionConfigurationDistributionArrayOutput() DistributionConfigurationDistributionArrayOutput {
	return o
}

func (o DistributionConfigurationDistributionArrayOutput) ToDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) DistributionConfigurationDistributionArrayOutput {
	return o
}

func (o DistributionConfigurationDistributionArrayOutput) Index(i pulumi.IntInput) DistributionConfigurationDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionConfigurationDistribution {
		return vs[0].([]DistributionConfigurationDistribution)[vs[1].(int)]
	}).(DistributionConfigurationDistributionOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfiguration struct {
	// Key-value map of tags to apply to the distributed AMI.
	AmiTags map[string]string `pulumi:"amiTags"`
	// Description of the container distribution configuration.
	Description *string `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
	LaunchPermission *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission `pulumi:"launchPermission"`
	// Name to apply to the distributed AMI.
	Name *string `pulumi:"name"`
	// Set of AWS Account identifiers to distribute the AMI.
	TargetAccountIds []string `pulumi:"targetAccountIds"`
}

// DistributionConfigurationDistributionAmiDistributionConfigurationInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationArgs and DistributionConfigurationDistributionAmiDistributionConfigurationOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationArgs{...}
type DistributionConfigurationDistributionAmiDistributionConfigurationInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationOutput() DistributionConfigurationDistributionAmiDistributionConfigurationOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationOutput
}

type DistributionConfigurationDistributionAmiDistributionConfigurationArgs struct {
	// Key-value map of tags to apply to the distributed AMI.
	AmiTags pulumi.StringMapInput `pulumi:"amiTags"`
	// Description of the container distribution configuration.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
	LaunchPermission DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput `pulumi:"launchPermission"`
	// Name to apply to the distributed AMI.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Set of AWS Account identifiers to distribute the AMI.
	TargetAccountIds pulumi.StringArrayInput `pulumi:"targetAccountIds"`
}

func (DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutput() DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationOutput).ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx)
}

// DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationArgs, DistributionConfigurationDistributionAmiDistributionConfigurationPtr and DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationArgs{...}
//
//  or:
//
//          nil
type DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput
}

type distributionConfigurationDistributionAmiDistributionConfigurationPtrType DistributionConfigurationDistributionAmiDistributionConfigurationArgs

func DistributionConfigurationDistributionAmiDistributionConfigurationPtr(v *DistributionConfigurationDistributionAmiDistributionConfigurationArgs) DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput {
	return (*distributionConfigurationDistributionAmiDistributionConfigurationPtrType)(v)
}

func (*distributionConfigurationDistributionAmiDistributionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutput() DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o.ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionConfigurationDistributionAmiDistributionConfiguration) *DistributionConfigurationDistributionAmiDistributionConfiguration {
		return &v
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput)
}

// Key-value map of tags to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) AmiTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) map[string]string {
		return v.AmiTags
	}).(pulumi.StringMapOutput)
}

// Description of the container distribution configuration.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) LaunchPermission() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return v.LaunchPermission
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

// Name to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Set of AWS Account identifiers to distribute the AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) TargetAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) []string {
		return v.TargetAccountIds
	}).(pulumi.StringArrayOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) Elem() DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) DistributionConfigurationDistributionAmiDistributionConfiguration {
		if v != nil {
			return *v
		}
		var ret DistributionConfigurationDistributionAmiDistributionConfiguration
		return ret
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

// Key-value map of tags to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) AmiTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.AmiTags
	}).(pulumi.StringMapOutput)
}

// Description of the container distribution configuration.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) LaunchPermission() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		if v == nil {
			return nil
		}
		return v.LaunchPermission
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

// Name to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Set of AWS Account identifiers to distribute the AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) TargetAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.TargetAccountIds
	}).(pulumi.StringArrayOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission struct {
	// Set of AWS Organization ARNs to assign.
	OrganizationArns []string `pulumi:"organizationArns"`
	// Set of AWS Organizational Unit ARNs to assign.
	OrganizationalUnitArns []string `pulumi:"organizationalUnitArns"`
	// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
	UserGroups []string `pulumi:"userGroups"`
	// Set of AWS Account identifiers to assign.
	UserIds []string `pulumi:"userIds"`
}

// DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs and DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...}
type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs struct {
	// Set of AWS Organization ARNs to assign.
	OrganizationArns pulumi.StringArrayInput `pulumi:"organizationArns"`
	// Set of AWS Organizational Unit ARNs to assign.
	OrganizationalUnitArns pulumi.StringArrayInput `pulumi:"organizationalUnitArns"`
	// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
	UserGroups pulumi.StringArrayInput `pulumi:"userGroups"`
	// Set of AWS Account identifiers to assign.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
}

func (DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput).ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx)
}

// DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs, DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtr and DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...}
//
//  or:
//
//          nil
type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput
}

type distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs

func DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtr(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput {
	return (*distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType)(v)
}

func (*distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Background())
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return &v
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

// Set of AWS Organization ARNs to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) OrganizationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.OrganizationArns
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Organizational Unit ARNs to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) OrganizationalUnitArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.OrganizationalUnitArns
	}).(pulumi.StringArrayOutput)
}

// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserGroups
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Account identifiers to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) Elem() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		if v != nil {
			return *v
		}
		var ret DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission
		return ret
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

// Set of AWS Organization ARNs to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) OrganizationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		if v == nil {
			return nil
		}
		return v.OrganizationArns
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Organizational Unit ARNs to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) OrganizationalUnitArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitArns
	}).(pulumi.StringArrayOutput)
}

// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) UserGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		if v == nil {
			return nil
		}
		return v.UserGroups
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Account identifiers to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		if v == nil {
			return nil
		}
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

type DistributionConfigurationDistributionContainerDistributionConfiguration struct {
	// Set of tags that are attached to the container distribution configuration.
	ContainerTags []string `pulumi:"containerTags"`
	// Description of the container distribution configuration.
	Description *string `pulumi:"description"`
	// Configuration block with the destination repository for the container distribution configuration.
	TargetRepository DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository `pulumi:"targetRepository"`
}

// DistributionConfigurationDistributionContainerDistributionConfigurationInput is an input type that accepts DistributionConfigurationDistributionContainerDistributionConfigurationArgs and DistributionConfigurationDistributionContainerDistributionConfigurationOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionContainerDistributionConfigurationInput` via:
//
//          DistributionConfigurationDistributionContainerDistributionConfigurationArgs{...}
type DistributionConfigurationDistributionContainerDistributionConfigurationInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionContainerDistributionConfigurationOutput() DistributionConfigurationDistributionContainerDistributionConfigurationOutput
	ToDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationOutput
}

type DistributionConfigurationDistributionContainerDistributionConfigurationArgs struct {
	// Set of tags that are attached to the container distribution configuration.
	ContainerTags pulumi.StringArrayInput `pulumi:"containerTags"`
	// Description of the container distribution configuration.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Configuration block with the destination repository for the container distribution configuration.
	TargetRepository DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput `pulumi:"targetRepository"`
}

func (DistributionConfigurationDistributionContainerDistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationOutput() DistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return i.ToDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionContainerDistributionConfigurationOutput)
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return i.ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionContainerDistributionConfigurationOutput).ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(ctx)
}

// DistributionConfigurationDistributionContainerDistributionConfigurationPtrInput is an input type that accepts DistributionConfigurationDistributionContainerDistributionConfigurationArgs, DistributionConfigurationDistributionContainerDistributionConfigurationPtr and DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionContainerDistributionConfigurationPtrInput` via:
//
//          DistributionConfigurationDistributionContainerDistributionConfigurationArgs{...}
//
//  or:
//
//          nil
type DistributionConfigurationDistributionContainerDistributionConfigurationPtrInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput
	ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput
}

type distributionConfigurationDistributionContainerDistributionConfigurationPtrType DistributionConfigurationDistributionContainerDistributionConfigurationArgs

func DistributionConfigurationDistributionContainerDistributionConfigurationPtr(v *DistributionConfigurationDistributionContainerDistributionConfigurationArgs) DistributionConfigurationDistributionContainerDistributionConfigurationPtrInput {
	return (*distributionConfigurationDistributionContainerDistributionConfigurationPtrType)(v)
}

func (*distributionConfigurationDistributionContainerDistributionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (i *distributionConfigurationDistributionContainerDistributionConfigurationPtrType) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return i.ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (i *distributionConfigurationDistributionContainerDistributionConfigurationPtrType) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput)
}

type DistributionConfigurationDistributionContainerDistributionConfigurationOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionContainerDistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationOutput() DistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return o.ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionConfigurationDistributionContainerDistributionConfiguration) *DistributionConfigurationDistributionContainerDistributionConfiguration {
		return &v
	}).(DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput)
}

// Set of tags that are attached to the container distribution configuration.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationOutput) ContainerTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionContainerDistributionConfiguration) []string {
		return v.ContainerTags
	}).(pulumi.StringArrayOutput)
}

// Description of the container distribution configuration.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionContainerDistributionConfiguration) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Configuration block with the destination repository for the container distribution configuration.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationOutput) TargetRepository() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionContainerDistributionConfiguration) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository {
		return v.TargetRepository
	}).(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput)
}

type DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput) Elem() DistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionContainerDistributionConfiguration) DistributionConfigurationDistributionContainerDistributionConfiguration {
		if v != nil {
			return *v
		}
		var ret DistributionConfigurationDistributionContainerDistributionConfiguration
		return ret
	}).(DistributionConfigurationDistributionContainerDistributionConfigurationOutput)
}

// Set of tags that are attached to the container distribution configuration.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput) ContainerTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionContainerDistributionConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ContainerTags
	}).(pulumi.StringArrayOutput)
}

// Description of the container distribution configuration.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionContainerDistributionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Configuration block with the destination repository for the container distribution configuration.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput) TargetRepository() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionContainerDistributionConfiguration) *DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository {
		if v == nil {
			return nil
		}
		return &v.TargetRepository
	}).(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput)
}

type DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository struct {
	// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
	RepositoryName string `pulumi:"repositoryName"`
	// The service in which this image is registered. Valid values: `ECR`.
	Service string `pulumi:"service"`
}

// DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput is an input type that accepts DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs and DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput` via:
//
//          DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs{...}
type DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput
	ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput
}

type DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs struct {
	// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// The service in which this image is registered. Valid values: `ECR`.
	Service pulumi.StringInput `pulumi:"service"`
}

func (DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return i.ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput)
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return i.ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput).ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(ctx)
}

// DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrInput is an input type that accepts DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs, DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtr and DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrInput` via:
//
//          DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs{...}
//
//  or:
//
//          nil
type DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput
	ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput
}

type distributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrType DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs

func DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtr(v *DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrInput {
	return (*distributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrType)(v)
}

func (*distributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (i *distributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrType) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return i.ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(context.Background())
}

func (i *distributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrType) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput)
}

type DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return o.ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) *DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository {
		return &v
	}).(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput)
}

// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) string {
		return v.RepositoryName
	}).(pulumi.StringOutput)
}

// The service in which this image is registered. Valid values: `ECR`.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) string {
		return v.Service
	}).(pulumi.StringOutput)
}

type DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput) ToDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput) Elem() DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository {
		if v != nil {
			return *v
		}
		var ret DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository
		return ret
	}).(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput)
}

// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// The service in which this image is registered. Valid values: `ECR`.
func (o DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

type DistributionConfigurationDistributionLaunchTemplateConfiguration struct {
	// The account ID that this configuration applies to.
	AccountId *string `pulumi:"accountId"`
	// Indicates whether to set the specified Amazon EC2 launch template as the default launch template. Defaults to `true`.
	Default *bool `pulumi:"default"`
	// The ID of the Amazon EC2 launch template to use.
	LaunchTemplateId string `pulumi:"launchTemplateId"`
}

// DistributionConfigurationDistributionLaunchTemplateConfigurationInput is an input type that accepts DistributionConfigurationDistributionLaunchTemplateConfigurationArgs and DistributionConfigurationDistributionLaunchTemplateConfigurationOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionLaunchTemplateConfigurationInput` via:
//
//          DistributionConfigurationDistributionLaunchTemplateConfigurationArgs{...}
type DistributionConfigurationDistributionLaunchTemplateConfigurationInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionLaunchTemplateConfigurationOutput() DistributionConfigurationDistributionLaunchTemplateConfigurationOutput
	ToDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(context.Context) DistributionConfigurationDistributionLaunchTemplateConfigurationOutput
}

type DistributionConfigurationDistributionLaunchTemplateConfigurationArgs struct {
	// The account ID that this configuration applies to.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Indicates whether to set the specified Amazon EC2 launch template as the default launch template. Defaults to `true`.
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// The ID of the Amazon EC2 launch template to use.
	LaunchTemplateId pulumi.StringInput `pulumi:"launchTemplateId"`
}

func (DistributionConfigurationDistributionLaunchTemplateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (i DistributionConfigurationDistributionLaunchTemplateConfigurationArgs) ToDistributionConfigurationDistributionLaunchTemplateConfigurationOutput() DistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return i.ToDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionLaunchTemplateConfigurationArgs) ToDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionLaunchTemplateConfigurationOutput)
}

// DistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput is an input type that accepts DistributionConfigurationDistributionLaunchTemplateConfigurationArray and DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput` via:
//
//          DistributionConfigurationDistributionLaunchTemplateConfigurationArray{ DistributionConfigurationDistributionLaunchTemplateConfigurationArgs{...} }
type DistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput() DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput
	ToDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(context.Context) DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput
}

type DistributionConfigurationDistributionLaunchTemplateConfigurationArray []DistributionConfigurationDistributionLaunchTemplateConfigurationInput

func (DistributionConfigurationDistributionLaunchTemplateConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (i DistributionConfigurationDistributionLaunchTemplateConfigurationArray) ToDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput() DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return i.ToDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionLaunchTemplateConfigurationArray) ToDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(ctx context.Context) DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput)
}

type DistributionConfigurationDistributionLaunchTemplateConfigurationOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionLaunchTemplateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionLaunchTemplateConfigurationOutput) ToDistributionConfigurationDistributionLaunchTemplateConfigurationOutput() DistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return o
}

func (o DistributionConfigurationDistributionLaunchTemplateConfigurationOutput) ToDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return o
}

// The account ID that this configuration applies to.
func (o DistributionConfigurationDistributionLaunchTemplateConfigurationOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionLaunchTemplateConfiguration) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Indicates whether to set the specified Amazon EC2 launch template as the default launch template. Defaults to `true`.
func (o DistributionConfigurationDistributionLaunchTemplateConfigurationOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionLaunchTemplateConfiguration) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// The ID of the Amazon EC2 launch template to use.
func (o DistributionConfigurationDistributionLaunchTemplateConfigurationOutput) LaunchTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionLaunchTemplateConfiguration) string {
		return v.LaunchTemplateId
	}).(pulumi.StringOutput)
}

type DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) ToDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput() DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return o
}

func (o DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) ToDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(ctx context.Context) DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return o
}

func (o DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) Index(i pulumi.IntInput) DistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionConfigurationDistributionLaunchTemplateConfiguration {
		return vs[0].([]DistributionConfigurationDistributionLaunchTemplateConfiguration)[vs[1].(int)]
	}).(DistributionConfigurationDistributionLaunchTemplateConfigurationOutput)
}

type ImageImageTestsConfiguration struct {
	// Whether image tests are enabled. Defaults to `true`.
	ImageTestsEnabled *bool `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
	TimeoutMinutes *int `pulumi:"timeoutMinutes"`
}

// ImageImageTestsConfigurationInput is an input type that accepts ImageImageTestsConfigurationArgs and ImageImageTestsConfigurationOutput values.
// You can construct a concrete instance of `ImageImageTestsConfigurationInput` via:
//
//          ImageImageTestsConfigurationArgs{...}
type ImageImageTestsConfigurationInput interface {
	pulumi.Input

	ToImageImageTestsConfigurationOutput() ImageImageTestsConfigurationOutput
	ToImageImageTestsConfigurationOutputWithContext(context.Context) ImageImageTestsConfigurationOutput
}

type ImageImageTestsConfigurationArgs struct {
	// Whether image tests are enabled. Defaults to `true`.
	ImageTestsEnabled pulumi.BoolPtrInput `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
	TimeoutMinutes pulumi.IntPtrInput `pulumi:"timeoutMinutes"`
}

func (ImageImageTestsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageImageTestsConfiguration)(nil)).Elem()
}

func (i ImageImageTestsConfigurationArgs) ToImageImageTestsConfigurationOutput() ImageImageTestsConfigurationOutput {
	return i.ToImageImageTestsConfigurationOutputWithContext(context.Background())
}

func (i ImageImageTestsConfigurationArgs) ToImageImageTestsConfigurationOutputWithContext(ctx context.Context) ImageImageTestsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageImageTestsConfigurationOutput)
}

func (i ImageImageTestsConfigurationArgs) ToImageImageTestsConfigurationPtrOutput() ImageImageTestsConfigurationPtrOutput {
	return i.ToImageImageTestsConfigurationPtrOutputWithContext(context.Background())
}

func (i ImageImageTestsConfigurationArgs) ToImageImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImageImageTestsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageImageTestsConfigurationOutput).ToImageImageTestsConfigurationPtrOutputWithContext(ctx)
}

// ImageImageTestsConfigurationPtrInput is an input type that accepts ImageImageTestsConfigurationArgs, ImageImageTestsConfigurationPtr and ImageImageTestsConfigurationPtrOutput values.
// You can construct a concrete instance of `ImageImageTestsConfigurationPtrInput` via:
//
//          ImageImageTestsConfigurationArgs{...}
//
//  or:
//
//          nil
type ImageImageTestsConfigurationPtrInput interface {
	pulumi.Input

	ToImageImageTestsConfigurationPtrOutput() ImageImageTestsConfigurationPtrOutput
	ToImageImageTestsConfigurationPtrOutputWithContext(context.Context) ImageImageTestsConfigurationPtrOutput
}

type imageImageTestsConfigurationPtrType ImageImageTestsConfigurationArgs

func ImageImageTestsConfigurationPtr(v *ImageImageTestsConfigurationArgs) ImageImageTestsConfigurationPtrInput {
	return (*imageImageTestsConfigurationPtrType)(v)
}

func (*imageImageTestsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageImageTestsConfiguration)(nil)).Elem()
}

func (i *imageImageTestsConfigurationPtrType) ToImageImageTestsConfigurationPtrOutput() ImageImageTestsConfigurationPtrOutput {
	return i.ToImageImageTestsConfigurationPtrOutputWithContext(context.Background())
}

func (i *imageImageTestsConfigurationPtrType) ToImageImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImageImageTestsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageImageTestsConfigurationPtrOutput)
}

type ImageImageTestsConfigurationOutput struct{ *pulumi.OutputState }

func (ImageImageTestsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageImageTestsConfiguration)(nil)).Elem()
}

func (o ImageImageTestsConfigurationOutput) ToImageImageTestsConfigurationOutput() ImageImageTestsConfigurationOutput {
	return o
}

func (o ImageImageTestsConfigurationOutput) ToImageImageTestsConfigurationOutputWithContext(ctx context.Context) ImageImageTestsConfigurationOutput {
	return o
}

func (o ImageImageTestsConfigurationOutput) ToImageImageTestsConfigurationPtrOutput() ImageImageTestsConfigurationPtrOutput {
	return o.ToImageImageTestsConfigurationPtrOutputWithContext(context.Background())
}

func (o ImageImageTestsConfigurationOutput) ToImageImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImageImageTestsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageImageTestsConfiguration) *ImageImageTestsConfiguration {
		return &v
	}).(ImageImageTestsConfigurationPtrOutput)
}

// Whether image tests are enabled. Defaults to `true`.
func (o ImageImageTestsConfigurationOutput) ImageTestsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageImageTestsConfiguration) *bool { return v.ImageTestsEnabled }).(pulumi.BoolPtrOutput)
}

// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
func (o ImageImageTestsConfigurationOutput) TimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageImageTestsConfiguration) *int { return v.TimeoutMinutes }).(pulumi.IntPtrOutput)
}

type ImageImageTestsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ImageImageTestsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageImageTestsConfiguration)(nil)).Elem()
}

func (o ImageImageTestsConfigurationPtrOutput) ToImageImageTestsConfigurationPtrOutput() ImageImageTestsConfigurationPtrOutput {
	return o
}

func (o ImageImageTestsConfigurationPtrOutput) ToImageImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImageImageTestsConfigurationPtrOutput {
	return o
}

func (o ImageImageTestsConfigurationPtrOutput) Elem() ImageImageTestsConfigurationOutput {
	return o.ApplyT(func(v *ImageImageTestsConfiguration) ImageImageTestsConfiguration {
		if v != nil {
			return *v
		}
		var ret ImageImageTestsConfiguration
		return ret
	}).(ImageImageTestsConfigurationOutput)
}

// Whether image tests are enabled. Defaults to `true`.
func (o ImageImageTestsConfigurationPtrOutput) ImageTestsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ImageImageTestsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ImageTestsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
func (o ImageImageTestsConfigurationPtrOutput) TimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImageImageTestsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

type ImageOutputResource struct {
	// Set of objects with each Amazon Machine Image (AMI) created.
	Amis []ImageOutputResourceAmi `pulumi:"amis"`
}

// ImageOutputResourceInput is an input type that accepts ImageOutputResourceArgs and ImageOutputResourceOutput values.
// You can construct a concrete instance of `ImageOutputResourceInput` via:
//
//          ImageOutputResourceArgs{...}
type ImageOutputResourceInput interface {
	pulumi.Input

	ToImageOutputResourceOutput() ImageOutputResourceOutput
	ToImageOutputResourceOutputWithContext(context.Context) ImageOutputResourceOutput
}

type ImageOutputResourceArgs struct {
	// Set of objects with each Amazon Machine Image (AMI) created.
	Amis ImageOutputResourceAmiArrayInput `pulumi:"amis"`
}

func (ImageOutputResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOutputResource)(nil)).Elem()
}

func (i ImageOutputResourceArgs) ToImageOutputResourceOutput() ImageOutputResourceOutput {
	return i.ToImageOutputResourceOutputWithContext(context.Background())
}

func (i ImageOutputResourceArgs) ToImageOutputResourceOutputWithContext(ctx context.Context) ImageOutputResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOutputResourceOutput)
}

// ImageOutputResourceArrayInput is an input type that accepts ImageOutputResourceArray and ImageOutputResourceArrayOutput values.
// You can construct a concrete instance of `ImageOutputResourceArrayInput` via:
//
//          ImageOutputResourceArray{ ImageOutputResourceArgs{...} }
type ImageOutputResourceArrayInput interface {
	pulumi.Input

	ToImageOutputResourceArrayOutput() ImageOutputResourceArrayOutput
	ToImageOutputResourceArrayOutputWithContext(context.Context) ImageOutputResourceArrayOutput
}

type ImageOutputResourceArray []ImageOutputResourceInput

func (ImageOutputResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageOutputResource)(nil)).Elem()
}

func (i ImageOutputResourceArray) ToImageOutputResourceArrayOutput() ImageOutputResourceArrayOutput {
	return i.ToImageOutputResourceArrayOutputWithContext(context.Background())
}

func (i ImageOutputResourceArray) ToImageOutputResourceArrayOutputWithContext(ctx context.Context) ImageOutputResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOutputResourceArrayOutput)
}

type ImageOutputResourceOutput struct{ *pulumi.OutputState }

func (ImageOutputResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOutputResource)(nil)).Elem()
}

func (o ImageOutputResourceOutput) ToImageOutputResourceOutput() ImageOutputResourceOutput {
	return o
}

func (o ImageOutputResourceOutput) ToImageOutputResourceOutputWithContext(ctx context.Context) ImageOutputResourceOutput {
	return o
}

// Set of objects with each Amazon Machine Image (AMI) created.
func (o ImageOutputResourceOutput) Amis() ImageOutputResourceAmiArrayOutput {
	return o.ApplyT(func(v ImageOutputResource) []ImageOutputResourceAmi { return v.Amis }).(ImageOutputResourceAmiArrayOutput)
}

type ImageOutputResourceArrayOutput struct{ *pulumi.OutputState }

func (ImageOutputResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageOutputResource)(nil)).Elem()
}

func (o ImageOutputResourceArrayOutput) ToImageOutputResourceArrayOutput() ImageOutputResourceArrayOutput {
	return o
}

func (o ImageOutputResourceArrayOutput) ToImageOutputResourceArrayOutputWithContext(ctx context.Context) ImageOutputResourceArrayOutput {
	return o
}

func (o ImageOutputResourceArrayOutput) Index(i pulumi.IntInput) ImageOutputResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageOutputResource {
		return vs[0].([]ImageOutputResource)[vs[1].(int)]
	}).(ImageOutputResourceOutput)
}

type ImageOutputResourceAmi struct {
	// Account identifier of the AMI.
	AccountId *string `pulumi:"accountId"`
	// Description of the AMI.
	Description *string `pulumi:"description"`
	// Identifier of the AMI.
	Image *string `pulumi:"image"`
	// Name of the AMI.
	Name *string `pulumi:"name"`
	// Region of the AMI.
	Region *string `pulumi:"region"`
}

// ImageOutputResourceAmiInput is an input type that accepts ImageOutputResourceAmiArgs and ImageOutputResourceAmiOutput values.
// You can construct a concrete instance of `ImageOutputResourceAmiInput` via:
//
//          ImageOutputResourceAmiArgs{...}
type ImageOutputResourceAmiInput interface {
	pulumi.Input

	ToImageOutputResourceAmiOutput() ImageOutputResourceAmiOutput
	ToImageOutputResourceAmiOutputWithContext(context.Context) ImageOutputResourceAmiOutput
}

type ImageOutputResourceAmiArgs struct {
	// Account identifier of the AMI.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Description of the AMI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Identifier of the AMI.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Name of the AMI.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Region of the AMI.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (ImageOutputResourceAmiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOutputResourceAmi)(nil)).Elem()
}

func (i ImageOutputResourceAmiArgs) ToImageOutputResourceAmiOutput() ImageOutputResourceAmiOutput {
	return i.ToImageOutputResourceAmiOutputWithContext(context.Background())
}

func (i ImageOutputResourceAmiArgs) ToImageOutputResourceAmiOutputWithContext(ctx context.Context) ImageOutputResourceAmiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOutputResourceAmiOutput)
}

// ImageOutputResourceAmiArrayInput is an input type that accepts ImageOutputResourceAmiArray and ImageOutputResourceAmiArrayOutput values.
// You can construct a concrete instance of `ImageOutputResourceAmiArrayInput` via:
//
//          ImageOutputResourceAmiArray{ ImageOutputResourceAmiArgs{...} }
type ImageOutputResourceAmiArrayInput interface {
	pulumi.Input

	ToImageOutputResourceAmiArrayOutput() ImageOutputResourceAmiArrayOutput
	ToImageOutputResourceAmiArrayOutputWithContext(context.Context) ImageOutputResourceAmiArrayOutput
}

type ImageOutputResourceAmiArray []ImageOutputResourceAmiInput

func (ImageOutputResourceAmiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageOutputResourceAmi)(nil)).Elem()
}

func (i ImageOutputResourceAmiArray) ToImageOutputResourceAmiArrayOutput() ImageOutputResourceAmiArrayOutput {
	return i.ToImageOutputResourceAmiArrayOutputWithContext(context.Background())
}

func (i ImageOutputResourceAmiArray) ToImageOutputResourceAmiArrayOutputWithContext(ctx context.Context) ImageOutputResourceAmiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOutputResourceAmiArrayOutput)
}

type ImageOutputResourceAmiOutput struct{ *pulumi.OutputState }

func (ImageOutputResourceAmiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOutputResourceAmi)(nil)).Elem()
}

func (o ImageOutputResourceAmiOutput) ToImageOutputResourceAmiOutput() ImageOutputResourceAmiOutput {
	return o
}

func (o ImageOutputResourceAmiOutput) ToImageOutputResourceAmiOutputWithContext(ctx context.Context) ImageOutputResourceAmiOutput {
	return o
}

// Account identifier of the AMI.
func (o ImageOutputResourceAmiOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOutputResourceAmi) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Description of the AMI.
func (o ImageOutputResourceAmiOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOutputResourceAmi) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier of the AMI.
func (o ImageOutputResourceAmiOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOutputResourceAmi) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Name of the AMI.
func (o ImageOutputResourceAmiOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOutputResourceAmi) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Region of the AMI.
func (o ImageOutputResourceAmiOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOutputResourceAmi) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type ImageOutputResourceAmiArrayOutput struct{ *pulumi.OutputState }

func (ImageOutputResourceAmiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageOutputResourceAmi)(nil)).Elem()
}

func (o ImageOutputResourceAmiArrayOutput) ToImageOutputResourceAmiArrayOutput() ImageOutputResourceAmiArrayOutput {
	return o
}

func (o ImageOutputResourceAmiArrayOutput) ToImageOutputResourceAmiArrayOutputWithContext(ctx context.Context) ImageOutputResourceAmiArrayOutput {
	return o
}

func (o ImageOutputResourceAmiArrayOutput) Index(i pulumi.IntInput) ImageOutputResourceAmiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageOutputResourceAmi {
		return vs[0].([]ImageOutputResourceAmi)[vs[1].(int)]
	}).(ImageOutputResourceAmiOutput)
}

type ImagePipelineImageTestsConfiguration struct {
	// Whether image tests are enabled. Defaults to `true`.
	ImageTestsEnabled *bool `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
	TimeoutMinutes *int `pulumi:"timeoutMinutes"`
}

// ImagePipelineImageTestsConfigurationInput is an input type that accepts ImagePipelineImageTestsConfigurationArgs and ImagePipelineImageTestsConfigurationOutput values.
// You can construct a concrete instance of `ImagePipelineImageTestsConfigurationInput` via:
//
//          ImagePipelineImageTestsConfigurationArgs{...}
type ImagePipelineImageTestsConfigurationInput interface {
	pulumi.Input

	ToImagePipelineImageTestsConfigurationOutput() ImagePipelineImageTestsConfigurationOutput
	ToImagePipelineImageTestsConfigurationOutputWithContext(context.Context) ImagePipelineImageTestsConfigurationOutput
}

type ImagePipelineImageTestsConfigurationArgs struct {
	// Whether image tests are enabled. Defaults to `true`.
	ImageTestsEnabled pulumi.BoolPtrInput `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
	TimeoutMinutes pulumi.IntPtrInput `pulumi:"timeoutMinutes"`
}

func (ImagePipelineImageTestsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (i ImagePipelineImageTestsConfigurationArgs) ToImagePipelineImageTestsConfigurationOutput() ImagePipelineImageTestsConfigurationOutput {
	return i.ToImagePipelineImageTestsConfigurationOutputWithContext(context.Background())
}

func (i ImagePipelineImageTestsConfigurationArgs) ToImagePipelineImageTestsConfigurationOutputWithContext(ctx context.Context) ImagePipelineImageTestsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineImageTestsConfigurationOutput)
}

func (i ImagePipelineImageTestsConfigurationArgs) ToImagePipelineImageTestsConfigurationPtrOutput() ImagePipelineImageTestsConfigurationPtrOutput {
	return i.ToImagePipelineImageTestsConfigurationPtrOutputWithContext(context.Background())
}

func (i ImagePipelineImageTestsConfigurationArgs) ToImagePipelineImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImagePipelineImageTestsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineImageTestsConfigurationOutput).ToImagePipelineImageTestsConfigurationPtrOutputWithContext(ctx)
}

// ImagePipelineImageTestsConfigurationPtrInput is an input type that accepts ImagePipelineImageTestsConfigurationArgs, ImagePipelineImageTestsConfigurationPtr and ImagePipelineImageTestsConfigurationPtrOutput values.
// You can construct a concrete instance of `ImagePipelineImageTestsConfigurationPtrInput` via:
//
//          ImagePipelineImageTestsConfigurationArgs{...}
//
//  or:
//
//          nil
type ImagePipelineImageTestsConfigurationPtrInput interface {
	pulumi.Input

	ToImagePipelineImageTestsConfigurationPtrOutput() ImagePipelineImageTestsConfigurationPtrOutput
	ToImagePipelineImageTestsConfigurationPtrOutputWithContext(context.Context) ImagePipelineImageTestsConfigurationPtrOutput
}

type imagePipelineImageTestsConfigurationPtrType ImagePipelineImageTestsConfigurationArgs

func ImagePipelineImageTestsConfigurationPtr(v *ImagePipelineImageTestsConfigurationArgs) ImagePipelineImageTestsConfigurationPtrInput {
	return (*imagePipelineImageTestsConfigurationPtrType)(v)
}

func (*imagePipelineImageTestsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (i *imagePipelineImageTestsConfigurationPtrType) ToImagePipelineImageTestsConfigurationPtrOutput() ImagePipelineImageTestsConfigurationPtrOutput {
	return i.ToImagePipelineImageTestsConfigurationPtrOutputWithContext(context.Background())
}

func (i *imagePipelineImageTestsConfigurationPtrType) ToImagePipelineImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImagePipelineImageTestsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineImageTestsConfigurationPtrOutput)
}

type ImagePipelineImageTestsConfigurationOutput struct{ *pulumi.OutputState }

func (ImagePipelineImageTestsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (o ImagePipelineImageTestsConfigurationOutput) ToImagePipelineImageTestsConfigurationOutput() ImagePipelineImageTestsConfigurationOutput {
	return o
}

func (o ImagePipelineImageTestsConfigurationOutput) ToImagePipelineImageTestsConfigurationOutputWithContext(ctx context.Context) ImagePipelineImageTestsConfigurationOutput {
	return o
}

func (o ImagePipelineImageTestsConfigurationOutput) ToImagePipelineImageTestsConfigurationPtrOutput() ImagePipelineImageTestsConfigurationPtrOutput {
	return o.ToImagePipelineImageTestsConfigurationPtrOutputWithContext(context.Background())
}

func (o ImagePipelineImageTestsConfigurationOutput) ToImagePipelineImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImagePipelineImageTestsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagePipelineImageTestsConfiguration) *ImagePipelineImageTestsConfiguration {
		return &v
	}).(ImagePipelineImageTestsConfigurationPtrOutput)
}

// Whether image tests are enabled. Defaults to `true`.
func (o ImagePipelineImageTestsConfigurationOutput) ImageTestsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImagePipelineImageTestsConfiguration) *bool { return v.ImageTestsEnabled }).(pulumi.BoolPtrOutput)
}

// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
func (o ImagePipelineImageTestsConfigurationOutput) TimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImagePipelineImageTestsConfiguration) *int { return v.TimeoutMinutes }).(pulumi.IntPtrOutput)
}

type ImagePipelineImageTestsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ImagePipelineImageTestsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (o ImagePipelineImageTestsConfigurationPtrOutput) ToImagePipelineImageTestsConfigurationPtrOutput() ImagePipelineImageTestsConfigurationPtrOutput {
	return o
}

func (o ImagePipelineImageTestsConfigurationPtrOutput) ToImagePipelineImageTestsConfigurationPtrOutputWithContext(ctx context.Context) ImagePipelineImageTestsConfigurationPtrOutput {
	return o
}

func (o ImagePipelineImageTestsConfigurationPtrOutput) Elem() ImagePipelineImageTestsConfigurationOutput {
	return o.ApplyT(func(v *ImagePipelineImageTestsConfiguration) ImagePipelineImageTestsConfiguration {
		if v != nil {
			return *v
		}
		var ret ImagePipelineImageTestsConfiguration
		return ret
	}).(ImagePipelineImageTestsConfigurationOutput)
}

// Whether image tests are enabled. Defaults to `true`.
func (o ImagePipelineImageTestsConfigurationPtrOutput) ImageTestsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ImagePipelineImageTestsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ImageTestsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Number of minutes before image tests time out. Valid values are between `60` and `1440`. Defaults to `720`.
func (o ImagePipelineImageTestsConfigurationPtrOutput) TimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImagePipelineImageTestsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

type ImagePipelineSchedule struct {
	// Condition when the pipeline should trigger a new image build. Valid values are `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE` and `EXPRESSION_MATCH_ONLY`. Defaults to `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE`.
	PipelineExecutionStartCondition *string `pulumi:"pipelineExecutionStartCondition"`
	// Cron expression of how often the pipeline start condition is evaluated. For example, `cron(0 0 * * ? *)` is evaluated every day at midnight UTC. Configurations using the five field syntax that was previously accepted by the API, such as `cron(0 0 * * *)`, must be updated to the six field syntax. For more information, see the [Image Builder User Guide](https://docs.aws.amazon.com/imagebuilder/latest/userguide/cron-expressions.html).
	ScheduleExpression string `pulumi:"scheduleExpression"`
	// The timezone that applies to the scheduling expression. For example, "Etc/UTC", "America/Los_Angeles" in the [IANA timezone format](https://www.joda.org/joda-time/timezones.html). If not specified this defaults to UTC.
	Timezone *string `pulumi:"timezone"`
}

// ImagePipelineScheduleInput is an input type that accepts ImagePipelineScheduleArgs and ImagePipelineScheduleOutput values.
// You can construct a concrete instance of `ImagePipelineScheduleInput` via:
//
//          ImagePipelineScheduleArgs{...}
type ImagePipelineScheduleInput interface {
	pulumi.Input

	ToImagePipelineScheduleOutput() ImagePipelineScheduleOutput
	ToImagePipelineScheduleOutputWithContext(context.Context) ImagePipelineScheduleOutput
}

type ImagePipelineScheduleArgs struct {
	// Condition when the pipeline should trigger a new image build. Valid values are `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE` and `EXPRESSION_MATCH_ONLY`. Defaults to `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE`.
	PipelineExecutionStartCondition pulumi.StringPtrInput `pulumi:"pipelineExecutionStartCondition"`
	// Cron expression of how often the pipeline start condition is evaluated. For example, `cron(0 0 * * ? *)` is evaluated every day at midnight UTC. Configurations using the five field syntax that was previously accepted by the API, such as `cron(0 0 * * *)`, must be updated to the six field syntax. For more information, see the [Image Builder User Guide](https://docs.aws.amazon.com/imagebuilder/latest/userguide/cron-expressions.html).
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
	// The timezone that applies to the scheduling expression. For example, "Etc/UTC", "America/Los_Angeles" in the [IANA timezone format](https://www.joda.org/joda-time/timezones.html). If not specified this defaults to UTC.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (ImagePipelineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineSchedule)(nil)).Elem()
}

func (i ImagePipelineScheduleArgs) ToImagePipelineScheduleOutput() ImagePipelineScheduleOutput {
	return i.ToImagePipelineScheduleOutputWithContext(context.Background())
}

func (i ImagePipelineScheduleArgs) ToImagePipelineScheduleOutputWithContext(ctx context.Context) ImagePipelineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineScheduleOutput)
}

func (i ImagePipelineScheduleArgs) ToImagePipelineSchedulePtrOutput() ImagePipelineSchedulePtrOutput {
	return i.ToImagePipelineSchedulePtrOutputWithContext(context.Background())
}

func (i ImagePipelineScheduleArgs) ToImagePipelineSchedulePtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineScheduleOutput).ToImagePipelineSchedulePtrOutputWithContext(ctx)
}

// ImagePipelineSchedulePtrInput is an input type that accepts ImagePipelineScheduleArgs, ImagePipelineSchedulePtr and ImagePipelineSchedulePtrOutput values.
// You can construct a concrete instance of `ImagePipelineSchedulePtrInput` via:
//
//          ImagePipelineScheduleArgs{...}
//
//  or:
//
//          nil
type ImagePipelineSchedulePtrInput interface {
	pulumi.Input

	ToImagePipelineSchedulePtrOutput() ImagePipelineSchedulePtrOutput
	ToImagePipelineSchedulePtrOutputWithContext(context.Context) ImagePipelineSchedulePtrOutput
}

type imagePipelineSchedulePtrType ImagePipelineScheduleArgs

func ImagePipelineSchedulePtr(v *ImagePipelineScheduleArgs) ImagePipelineSchedulePtrInput {
	return (*imagePipelineSchedulePtrType)(v)
}

func (*imagePipelineSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipelineSchedule)(nil)).Elem()
}

func (i *imagePipelineSchedulePtrType) ToImagePipelineSchedulePtrOutput() ImagePipelineSchedulePtrOutput {
	return i.ToImagePipelineSchedulePtrOutputWithContext(context.Background())
}

func (i *imagePipelineSchedulePtrType) ToImagePipelineSchedulePtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagePipelineSchedulePtrOutput)
}

type ImagePipelineScheduleOutput struct{ *pulumi.OutputState }

func (ImagePipelineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagePipelineSchedule)(nil)).Elem()
}

func (o ImagePipelineScheduleOutput) ToImagePipelineScheduleOutput() ImagePipelineScheduleOutput {
	return o
}

func (o ImagePipelineScheduleOutput) ToImagePipelineScheduleOutputWithContext(ctx context.Context) ImagePipelineScheduleOutput {
	return o
}

func (o ImagePipelineScheduleOutput) ToImagePipelineSchedulePtrOutput() ImagePipelineSchedulePtrOutput {
	return o.ToImagePipelineSchedulePtrOutputWithContext(context.Background())
}

func (o ImagePipelineScheduleOutput) ToImagePipelineSchedulePtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagePipelineSchedule) *ImagePipelineSchedule {
		return &v
	}).(ImagePipelineSchedulePtrOutput)
}

// Condition when the pipeline should trigger a new image build. Valid values are `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE` and `EXPRESSION_MATCH_ONLY`. Defaults to `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE`.
func (o ImagePipelineScheduleOutput) PipelineExecutionStartCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePipelineSchedule) *string { return v.PipelineExecutionStartCondition }).(pulumi.StringPtrOutput)
}

// Cron expression of how often the pipeline start condition is evaluated. For example, `cron(0 0 * * ? *)` is evaluated every day at midnight UTC. Configurations using the five field syntax that was previously accepted by the API, such as `cron(0 0 * * *)`, must be updated to the six field syntax. For more information, see the [Image Builder User Guide](https://docs.aws.amazon.com/imagebuilder/latest/userguide/cron-expressions.html).
func (o ImagePipelineScheduleOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v ImagePipelineSchedule) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

// The timezone that applies to the scheduling expression. For example, "Etc/UTC", "America/Los_Angeles" in the [IANA timezone format](https://www.joda.org/joda-time/timezones.html). If not specified this defaults to UTC.
func (o ImagePipelineScheduleOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImagePipelineSchedule) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type ImagePipelineSchedulePtrOutput struct{ *pulumi.OutputState }

func (ImagePipelineSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagePipelineSchedule)(nil)).Elem()
}

func (o ImagePipelineSchedulePtrOutput) ToImagePipelineSchedulePtrOutput() ImagePipelineSchedulePtrOutput {
	return o
}

func (o ImagePipelineSchedulePtrOutput) ToImagePipelineSchedulePtrOutputWithContext(ctx context.Context) ImagePipelineSchedulePtrOutput {
	return o
}

func (o ImagePipelineSchedulePtrOutput) Elem() ImagePipelineScheduleOutput {
	return o.ApplyT(func(v *ImagePipelineSchedule) ImagePipelineSchedule {
		if v != nil {
			return *v
		}
		var ret ImagePipelineSchedule
		return ret
	}).(ImagePipelineScheduleOutput)
}

// Condition when the pipeline should trigger a new image build. Valid values are `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE` and `EXPRESSION_MATCH_ONLY`. Defaults to `EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE`.
func (o ImagePipelineSchedulePtrOutput) PipelineExecutionStartCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipelineSchedule) *string {
		if v == nil {
			return nil
		}
		return v.PipelineExecutionStartCondition
	}).(pulumi.StringPtrOutput)
}

// Cron expression of how often the pipeline start condition is evaluated. For example, `cron(0 0 * * ? *)` is evaluated every day at midnight UTC. Configurations using the five field syntax that was previously accepted by the API, such as `cron(0 0 * * *)`, must be updated to the six field syntax. For more information, see the [Image Builder User Guide](https://docs.aws.amazon.com/imagebuilder/latest/userguide/cron-expressions.html).
func (o ImagePipelineSchedulePtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipelineSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

// The timezone that applies to the scheduling expression. For example, "Etc/UTC", "America/Los_Angeles" in the [IANA timezone format](https://www.joda.org/joda-time/timezones.html). If not specified this defaults to UTC.
func (o ImagePipelineSchedulePtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagePipelineSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

type ImageRecipeBlockDeviceMapping struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName *string `pulumi:"deviceName"`
	// Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
	Ebs *ImageRecipeBlockDeviceMappingEbs `pulumi:"ebs"`
	// Set to `true` to remove a mapping from the parent image.
	NoDevice *bool `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName *string `pulumi:"virtualName"`
}

// ImageRecipeBlockDeviceMappingInput is an input type that accepts ImageRecipeBlockDeviceMappingArgs and ImageRecipeBlockDeviceMappingOutput values.
// You can construct a concrete instance of `ImageRecipeBlockDeviceMappingInput` via:
//
//          ImageRecipeBlockDeviceMappingArgs{...}
type ImageRecipeBlockDeviceMappingInput interface {
	pulumi.Input

	ToImageRecipeBlockDeviceMappingOutput() ImageRecipeBlockDeviceMappingOutput
	ToImageRecipeBlockDeviceMappingOutputWithContext(context.Context) ImageRecipeBlockDeviceMappingOutput
}

type ImageRecipeBlockDeviceMappingArgs struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
	Ebs ImageRecipeBlockDeviceMappingEbsPtrInput `pulumi:"ebs"`
	// Set to `true` to remove a mapping from the parent image.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (ImageRecipeBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (i ImageRecipeBlockDeviceMappingArgs) ToImageRecipeBlockDeviceMappingOutput() ImageRecipeBlockDeviceMappingOutput {
	return i.ToImageRecipeBlockDeviceMappingOutputWithContext(context.Background())
}

func (i ImageRecipeBlockDeviceMappingArgs) ToImageRecipeBlockDeviceMappingOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeBlockDeviceMappingOutput)
}

// ImageRecipeBlockDeviceMappingArrayInput is an input type that accepts ImageRecipeBlockDeviceMappingArray and ImageRecipeBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `ImageRecipeBlockDeviceMappingArrayInput` via:
//
//          ImageRecipeBlockDeviceMappingArray{ ImageRecipeBlockDeviceMappingArgs{...} }
type ImageRecipeBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToImageRecipeBlockDeviceMappingArrayOutput() ImageRecipeBlockDeviceMappingArrayOutput
	ToImageRecipeBlockDeviceMappingArrayOutputWithContext(context.Context) ImageRecipeBlockDeviceMappingArrayOutput
}

type ImageRecipeBlockDeviceMappingArray []ImageRecipeBlockDeviceMappingInput

func (ImageRecipeBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (i ImageRecipeBlockDeviceMappingArray) ToImageRecipeBlockDeviceMappingArrayOutput() ImageRecipeBlockDeviceMappingArrayOutput {
	return i.ToImageRecipeBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i ImageRecipeBlockDeviceMappingArray) ToImageRecipeBlockDeviceMappingArrayOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeBlockDeviceMappingArrayOutput)
}

type ImageRecipeBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (ImageRecipeBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (o ImageRecipeBlockDeviceMappingOutput) ToImageRecipeBlockDeviceMappingOutput() ImageRecipeBlockDeviceMappingOutput {
	return o
}

func (o ImageRecipeBlockDeviceMappingOutput) ToImageRecipeBlockDeviceMappingOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingOutput {
	return o
}

// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
func (o ImageRecipeBlockDeviceMappingOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMapping) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
func (o ImageRecipeBlockDeviceMappingOutput) Ebs() ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMapping) *ImageRecipeBlockDeviceMappingEbs { return v.Ebs }).(ImageRecipeBlockDeviceMappingEbsPtrOutput)
}

// Set to `true` to remove a mapping from the parent image.
func (o ImageRecipeBlockDeviceMappingOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMapping) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
func (o ImageRecipeBlockDeviceMappingOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMapping) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type ImageRecipeBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (ImageRecipeBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (o ImageRecipeBlockDeviceMappingArrayOutput) ToImageRecipeBlockDeviceMappingArrayOutput() ImageRecipeBlockDeviceMappingArrayOutput {
	return o
}

func (o ImageRecipeBlockDeviceMappingArrayOutput) ToImageRecipeBlockDeviceMappingArrayOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingArrayOutput {
	return o
}

func (o ImageRecipeBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) ImageRecipeBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageRecipeBlockDeviceMapping {
		return vs[0].([]ImageRecipeBlockDeviceMapping)[vs[1].(int)]
	}).(ImageRecipeBlockDeviceMappingOutput)
}

type ImageRecipeBlockDeviceMappingEbs struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted *string `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType *string `pulumi:"volumeType"`
}

// ImageRecipeBlockDeviceMappingEbsInput is an input type that accepts ImageRecipeBlockDeviceMappingEbsArgs and ImageRecipeBlockDeviceMappingEbsOutput values.
// You can construct a concrete instance of `ImageRecipeBlockDeviceMappingEbsInput` via:
//
//          ImageRecipeBlockDeviceMappingEbsArgs{...}
type ImageRecipeBlockDeviceMappingEbsInput interface {
	pulumi.Input

	ToImageRecipeBlockDeviceMappingEbsOutput() ImageRecipeBlockDeviceMappingEbsOutput
	ToImageRecipeBlockDeviceMappingEbsOutputWithContext(context.Context) ImageRecipeBlockDeviceMappingEbsOutput
}

type ImageRecipeBlockDeviceMappingEbsArgs struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted pulumi.StringPtrInput `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ImageRecipeBlockDeviceMappingEbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeBlockDeviceMappingEbs)(nil)).Elem()
}

func (i ImageRecipeBlockDeviceMappingEbsArgs) ToImageRecipeBlockDeviceMappingEbsOutput() ImageRecipeBlockDeviceMappingEbsOutput {
	return i.ToImageRecipeBlockDeviceMappingEbsOutputWithContext(context.Background())
}

func (i ImageRecipeBlockDeviceMappingEbsArgs) ToImageRecipeBlockDeviceMappingEbsOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingEbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeBlockDeviceMappingEbsOutput)
}

func (i ImageRecipeBlockDeviceMappingEbsArgs) ToImageRecipeBlockDeviceMappingEbsPtrOutput() ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return i.ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i ImageRecipeBlockDeviceMappingEbsArgs) ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeBlockDeviceMappingEbsOutput).ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(ctx)
}

// ImageRecipeBlockDeviceMappingEbsPtrInput is an input type that accepts ImageRecipeBlockDeviceMappingEbsArgs, ImageRecipeBlockDeviceMappingEbsPtr and ImageRecipeBlockDeviceMappingEbsPtrOutput values.
// You can construct a concrete instance of `ImageRecipeBlockDeviceMappingEbsPtrInput` via:
//
//          ImageRecipeBlockDeviceMappingEbsArgs{...}
//
//  or:
//
//          nil
type ImageRecipeBlockDeviceMappingEbsPtrInput interface {
	pulumi.Input

	ToImageRecipeBlockDeviceMappingEbsPtrOutput() ImageRecipeBlockDeviceMappingEbsPtrOutput
	ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(context.Context) ImageRecipeBlockDeviceMappingEbsPtrOutput
}

type imageRecipeBlockDeviceMappingEbsPtrType ImageRecipeBlockDeviceMappingEbsArgs

func ImageRecipeBlockDeviceMappingEbsPtr(v *ImageRecipeBlockDeviceMappingEbsArgs) ImageRecipeBlockDeviceMappingEbsPtrInput {
	return (*imageRecipeBlockDeviceMappingEbsPtrType)(v)
}

func (*imageRecipeBlockDeviceMappingEbsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRecipeBlockDeviceMappingEbs)(nil)).Elem()
}

func (i *imageRecipeBlockDeviceMappingEbsPtrType) ToImageRecipeBlockDeviceMappingEbsPtrOutput() ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return i.ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i *imageRecipeBlockDeviceMappingEbsPtrType) ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeBlockDeviceMappingEbsPtrOutput)
}

type ImageRecipeBlockDeviceMappingEbsOutput struct{ *pulumi.OutputState }

func (ImageRecipeBlockDeviceMappingEbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeBlockDeviceMappingEbs)(nil)).Elem()
}

func (o ImageRecipeBlockDeviceMappingEbsOutput) ToImageRecipeBlockDeviceMappingEbsOutput() ImageRecipeBlockDeviceMappingEbsOutput {
	return o
}

func (o ImageRecipeBlockDeviceMappingEbsOutput) ToImageRecipeBlockDeviceMappingEbsOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingEbsOutput {
	return o
}

func (o ImageRecipeBlockDeviceMappingEbsOutput) ToImageRecipeBlockDeviceMappingEbsPtrOutput() ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return o.ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (o ImageRecipeBlockDeviceMappingEbsOutput) ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRecipeBlockDeviceMappingEbs) *ImageRecipeBlockDeviceMappingEbs {
		return &v
	}).(ImageRecipeBlockDeviceMappingEbsPtrOutput)
}

// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
func (o ImageRecipeBlockDeviceMappingEbsOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMappingEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
func (o ImageRecipeBlockDeviceMappingEbsOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMappingEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
func (o ImageRecipeBlockDeviceMappingEbsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMappingEbs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
func (o ImageRecipeBlockDeviceMappingEbsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMappingEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Identifier of the EC2 Volume Snapshot.
func (o ImageRecipeBlockDeviceMappingEbsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMappingEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// Size of the volume, in GiB.
func (o ImageRecipeBlockDeviceMappingEbsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMappingEbs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// Type of the volume. For example, `gp2` or `io2`.
func (o ImageRecipeBlockDeviceMappingEbsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageRecipeBlockDeviceMappingEbs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ImageRecipeBlockDeviceMappingEbsPtrOutput struct{ *pulumi.OutputState }

func (ImageRecipeBlockDeviceMappingEbsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRecipeBlockDeviceMappingEbs)(nil)).Elem()
}

func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) ToImageRecipeBlockDeviceMappingEbsPtrOutput() ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) ToImageRecipeBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) ImageRecipeBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) Elem() ImageRecipeBlockDeviceMappingEbsOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) ImageRecipeBlockDeviceMappingEbs {
		if v != nil {
			return *v
		}
		var ret ImageRecipeBlockDeviceMappingEbs
		return ret
	}).(ImageRecipeBlockDeviceMappingEbsOutput)
}

// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.StringPtrOutput)
}

// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.StringPtrOutput)
}

// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Identifier of the EC2 Volume Snapshot.
func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// Size of the volume, in GiB.
func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

// Type of the volume. For example, `gp2` or `io2`.
func (o ImageRecipeBlockDeviceMappingEbsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageRecipeBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type ImageRecipeComponent struct {
	// Amazon Resource Name (ARN) of the Image Builder Component to associate.
	ComponentArn string `pulumi:"componentArn"`
	// Configuration block(s) for parameters to configure the component. Detailed below.
	Parameters []ImageRecipeComponentParameter `pulumi:"parameters"`
}

// ImageRecipeComponentInput is an input type that accepts ImageRecipeComponentArgs and ImageRecipeComponentOutput values.
// You can construct a concrete instance of `ImageRecipeComponentInput` via:
//
//          ImageRecipeComponentArgs{...}
type ImageRecipeComponentInput interface {
	pulumi.Input

	ToImageRecipeComponentOutput() ImageRecipeComponentOutput
	ToImageRecipeComponentOutputWithContext(context.Context) ImageRecipeComponentOutput
}

type ImageRecipeComponentArgs struct {
	// Amazon Resource Name (ARN) of the Image Builder Component to associate.
	ComponentArn pulumi.StringInput `pulumi:"componentArn"`
	// Configuration block(s) for parameters to configure the component. Detailed below.
	Parameters ImageRecipeComponentParameterArrayInput `pulumi:"parameters"`
}

func (ImageRecipeComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeComponent)(nil)).Elem()
}

func (i ImageRecipeComponentArgs) ToImageRecipeComponentOutput() ImageRecipeComponentOutput {
	return i.ToImageRecipeComponentOutputWithContext(context.Background())
}

func (i ImageRecipeComponentArgs) ToImageRecipeComponentOutputWithContext(ctx context.Context) ImageRecipeComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeComponentOutput)
}

// ImageRecipeComponentArrayInput is an input type that accepts ImageRecipeComponentArray and ImageRecipeComponentArrayOutput values.
// You can construct a concrete instance of `ImageRecipeComponentArrayInput` via:
//
//          ImageRecipeComponentArray{ ImageRecipeComponentArgs{...} }
type ImageRecipeComponentArrayInput interface {
	pulumi.Input

	ToImageRecipeComponentArrayOutput() ImageRecipeComponentArrayOutput
	ToImageRecipeComponentArrayOutputWithContext(context.Context) ImageRecipeComponentArrayOutput
}

type ImageRecipeComponentArray []ImageRecipeComponentInput

func (ImageRecipeComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRecipeComponent)(nil)).Elem()
}

func (i ImageRecipeComponentArray) ToImageRecipeComponentArrayOutput() ImageRecipeComponentArrayOutput {
	return i.ToImageRecipeComponentArrayOutputWithContext(context.Background())
}

func (i ImageRecipeComponentArray) ToImageRecipeComponentArrayOutputWithContext(ctx context.Context) ImageRecipeComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeComponentArrayOutput)
}

type ImageRecipeComponentOutput struct{ *pulumi.OutputState }

func (ImageRecipeComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeComponent)(nil)).Elem()
}

func (o ImageRecipeComponentOutput) ToImageRecipeComponentOutput() ImageRecipeComponentOutput {
	return o
}

func (o ImageRecipeComponentOutput) ToImageRecipeComponentOutputWithContext(ctx context.Context) ImageRecipeComponentOutput {
	return o
}

// Amazon Resource Name (ARN) of the Image Builder Component to associate.
func (o ImageRecipeComponentOutput) ComponentArn() pulumi.StringOutput {
	return o.ApplyT(func(v ImageRecipeComponent) string { return v.ComponentArn }).(pulumi.StringOutput)
}

// Configuration block(s) for parameters to configure the component. Detailed below.
func (o ImageRecipeComponentOutput) Parameters() ImageRecipeComponentParameterArrayOutput {
	return o.ApplyT(func(v ImageRecipeComponent) []ImageRecipeComponentParameter { return v.Parameters }).(ImageRecipeComponentParameterArrayOutput)
}

type ImageRecipeComponentArrayOutput struct{ *pulumi.OutputState }

func (ImageRecipeComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRecipeComponent)(nil)).Elem()
}

func (o ImageRecipeComponentArrayOutput) ToImageRecipeComponentArrayOutput() ImageRecipeComponentArrayOutput {
	return o
}

func (o ImageRecipeComponentArrayOutput) ToImageRecipeComponentArrayOutputWithContext(ctx context.Context) ImageRecipeComponentArrayOutput {
	return o
}

func (o ImageRecipeComponentArrayOutput) Index(i pulumi.IntInput) ImageRecipeComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageRecipeComponent {
		return vs[0].([]ImageRecipeComponent)[vs[1].(int)]
	}).(ImageRecipeComponentOutput)
}

type ImageRecipeComponentParameter struct {
	// The name of the component parameter.
	Name string `pulumi:"name"`
	// The value for the named component parameter.
	Value string `pulumi:"value"`
}

// ImageRecipeComponentParameterInput is an input type that accepts ImageRecipeComponentParameterArgs and ImageRecipeComponentParameterOutput values.
// You can construct a concrete instance of `ImageRecipeComponentParameterInput` via:
//
//          ImageRecipeComponentParameterArgs{...}
type ImageRecipeComponentParameterInput interface {
	pulumi.Input

	ToImageRecipeComponentParameterOutput() ImageRecipeComponentParameterOutput
	ToImageRecipeComponentParameterOutputWithContext(context.Context) ImageRecipeComponentParameterOutput
}

type ImageRecipeComponentParameterArgs struct {
	// The name of the component parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value for the named component parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ImageRecipeComponentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeComponentParameter)(nil)).Elem()
}

func (i ImageRecipeComponentParameterArgs) ToImageRecipeComponentParameterOutput() ImageRecipeComponentParameterOutput {
	return i.ToImageRecipeComponentParameterOutputWithContext(context.Background())
}

func (i ImageRecipeComponentParameterArgs) ToImageRecipeComponentParameterOutputWithContext(ctx context.Context) ImageRecipeComponentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeComponentParameterOutput)
}

// ImageRecipeComponentParameterArrayInput is an input type that accepts ImageRecipeComponentParameterArray and ImageRecipeComponentParameterArrayOutput values.
// You can construct a concrete instance of `ImageRecipeComponentParameterArrayInput` via:
//
//          ImageRecipeComponentParameterArray{ ImageRecipeComponentParameterArgs{...} }
type ImageRecipeComponentParameterArrayInput interface {
	pulumi.Input

	ToImageRecipeComponentParameterArrayOutput() ImageRecipeComponentParameterArrayOutput
	ToImageRecipeComponentParameterArrayOutputWithContext(context.Context) ImageRecipeComponentParameterArrayOutput
}

type ImageRecipeComponentParameterArray []ImageRecipeComponentParameterInput

func (ImageRecipeComponentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRecipeComponentParameter)(nil)).Elem()
}

func (i ImageRecipeComponentParameterArray) ToImageRecipeComponentParameterArrayOutput() ImageRecipeComponentParameterArrayOutput {
	return i.ToImageRecipeComponentParameterArrayOutputWithContext(context.Background())
}

func (i ImageRecipeComponentParameterArray) ToImageRecipeComponentParameterArrayOutputWithContext(ctx context.Context) ImageRecipeComponentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeComponentParameterArrayOutput)
}

type ImageRecipeComponentParameterOutput struct{ *pulumi.OutputState }

func (ImageRecipeComponentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeComponentParameter)(nil)).Elem()
}

func (o ImageRecipeComponentParameterOutput) ToImageRecipeComponentParameterOutput() ImageRecipeComponentParameterOutput {
	return o
}

func (o ImageRecipeComponentParameterOutput) ToImageRecipeComponentParameterOutputWithContext(ctx context.Context) ImageRecipeComponentParameterOutput {
	return o
}

// The name of the component parameter.
func (o ImageRecipeComponentParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ImageRecipeComponentParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The value for the named component parameter.
func (o ImageRecipeComponentParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ImageRecipeComponentParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ImageRecipeComponentParameterArrayOutput struct{ *pulumi.OutputState }

func (ImageRecipeComponentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRecipeComponentParameter)(nil)).Elem()
}

func (o ImageRecipeComponentParameterArrayOutput) ToImageRecipeComponentParameterArrayOutput() ImageRecipeComponentParameterArrayOutput {
	return o
}

func (o ImageRecipeComponentParameterArrayOutput) ToImageRecipeComponentParameterArrayOutputWithContext(ctx context.Context) ImageRecipeComponentParameterArrayOutput {
	return o
}

func (o ImageRecipeComponentParameterArrayOutput) Index(i pulumi.IntInput) ImageRecipeComponentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageRecipeComponentParameter {
		return vs[0].([]ImageRecipeComponentParameter)[vs[1].(int)]
	}).(ImageRecipeComponentParameterOutput)
}

type ImageRecipeSystemsManagerAgent struct {
	// Whether to remove the Systems Manager Agent after the image has been built. Defaults to `false`.
	UninstallAfterBuild bool `pulumi:"uninstallAfterBuild"`
}

// ImageRecipeSystemsManagerAgentInput is an input type that accepts ImageRecipeSystemsManagerAgentArgs and ImageRecipeSystemsManagerAgentOutput values.
// You can construct a concrete instance of `ImageRecipeSystemsManagerAgentInput` via:
//
//          ImageRecipeSystemsManagerAgentArgs{...}
type ImageRecipeSystemsManagerAgentInput interface {
	pulumi.Input

	ToImageRecipeSystemsManagerAgentOutput() ImageRecipeSystemsManagerAgentOutput
	ToImageRecipeSystemsManagerAgentOutputWithContext(context.Context) ImageRecipeSystemsManagerAgentOutput
}

type ImageRecipeSystemsManagerAgentArgs struct {
	// Whether to remove the Systems Manager Agent after the image has been built. Defaults to `false`.
	UninstallAfterBuild pulumi.BoolInput `pulumi:"uninstallAfterBuild"`
}

func (ImageRecipeSystemsManagerAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeSystemsManagerAgent)(nil)).Elem()
}

func (i ImageRecipeSystemsManagerAgentArgs) ToImageRecipeSystemsManagerAgentOutput() ImageRecipeSystemsManagerAgentOutput {
	return i.ToImageRecipeSystemsManagerAgentOutputWithContext(context.Background())
}

func (i ImageRecipeSystemsManagerAgentArgs) ToImageRecipeSystemsManagerAgentOutputWithContext(ctx context.Context) ImageRecipeSystemsManagerAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeSystemsManagerAgentOutput)
}

func (i ImageRecipeSystemsManagerAgentArgs) ToImageRecipeSystemsManagerAgentPtrOutput() ImageRecipeSystemsManagerAgentPtrOutput {
	return i.ToImageRecipeSystemsManagerAgentPtrOutputWithContext(context.Background())
}

func (i ImageRecipeSystemsManagerAgentArgs) ToImageRecipeSystemsManagerAgentPtrOutputWithContext(ctx context.Context) ImageRecipeSystemsManagerAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeSystemsManagerAgentOutput).ToImageRecipeSystemsManagerAgentPtrOutputWithContext(ctx)
}

// ImageRecipeSystemsManagerAgentPtrInput is an input type that accepts ImageRecipeSystemsManagerAgentArgs, ImageRecipeSystemsManagerAgentPtr and ImageRecipeSystemsManagerAgentPtrOutput values.
// You can construct a concrete instance of `ImageRecipeSystemsManagerAgentPtrInput` via:
//
//          ImageRecipeSystemsManagerAgentArgs{...}
//
//  or:
//
//          nil
type ImageRecipeSystemsManagerAgentPtrInput interface {
	pulumi.Input

	ToImageRecipeSystemsManagerAgentPtrOutput() ImageRecipeSystemsManagerAgentPtrOutput
	ToImageRecipeSystemsManagerAgentPtrOutputWithContext(context.Context) ImageRecipeSystemsManagerAgentPtrOutput
}

type imageRecipeSystemsManagerAgentPtrType ImageRecipeSystemsManagerAgentArgs

func ImageRecipeSystemsManagerAgentPtr(v *ImageRecipeSystemsManagerAgentArgs) ImageRecipeSystemsManagerAgentPtrInput {
	return (*imageRecipeSystemsManagerAgentPtrType)(v)
}

func (*imageRecipeSystemsManagerAgentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRecipeSystemsManagerAgent)(nil)).Elem()
}

func (i *imageRecipeSystemsManagerAgentPtrType) ToImageRecipeSystemsManagerAgentPtrOutput() ImageRecipeSystemsManagerAgentPtrOutput {
	return i.ToImageRecipeSystemsManagerAgentPtrOutputWithContext(context.Background())
}

func (i *imageRecipeSystemsManagerAgentPtrType) ToImageRecipeSystemsManagerAgentPtrOutputWithContext(ctx context.Context) ImageRecipeSystemsManagerAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageRecipeSystemsManagerAgentPtrOutput)
}

type ImageRecipeSystemsManagerAgentOutput struct{ *pulumi.OutputState }

func (ImageRecipeSystemsManagerAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRecipeSystemsManagerAgent)(nil)).Elem()
}

func (o ImageRecipeSystemsManagerAgentOutput) ToImageRecipeSystemsManagerAgentOutput() ImageRecipeSystemsManagerAgentOutput {
	return o
}

func (o ImageRecipeSystemsManagerAgentOutput) ToImageRecipeSystemsManagerAgentOutputWithContext(ctx context.Context) ImageRecipeSystemsManagerAgentOutput {
	return o
}

func (o ImageRecipeSystemsManagerAgentOutput) ToImageRecipeSystemsManagerAgentPtrOutput() ImageRecipeSystemsManagerAgentPtrOutput {
	return o.ToImageRecipeSystemsManagerAgentPtrOutputWithContext(context.Background())
}

func (o ImageRecipeSystemsManagerAgentOutput) ToImageRecipeSystemsManagerAgentPtrOutputWithContext(ctx context.Context) ImageRecipeSystemsManagerAgentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRecipeSystemsManagerAgent) *ImageRecipeSystemsManagerAgent {
		return &v
	}).(ImageRecipeSystemsManagerAgentPtrOutput)
}

// Whether to remove the Systems Manager Agent after the image has been built. Defaults to `false`.
func (o ImageRecipeSystemsManagerAgentOutput) UninstallAfterBuild() pulumi.BoolOutput {
	return o.ApplyT(func(v ImageRecipeSystemsManagerAgent) bool { return v.UninstallAfterBuild }).(pulumi.BoolOutput)
}

type ImageRecipeSystemsManagerAgentPtrOutput struct{ *pulumi.OutputState }

func (ImageRecipeSystemsManagerAgentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRecipeSystemsManagerAgent)(nil)).Elem()
}

func (o ImageRecipeSystemsManagerAgentPtrOutput) ToImageRecipeSystemsManagerAgentPtrOutput() ImageRecipeSystemsManagerAgentPtrOutput {
	return o
}

func (o ImageRecipeSystemsManagerAgentPtrOutput) ToImageRecipeSystemsManagerAgentPtrOutputWithContext(ctx context.Context) ImageRecipeSystemsManagerAgentPtrOutput {
	return o
}

func (o ImageRecipeSystemsManagerAgentPtrOutput) Elem() ImageRecipeSystemsManagerAgentOutput {
	return o.ApplyT(func(v *ImageRecipeSystemsManagerAgent) ImageRecipeSystemsManagerAgent {
		if v != nil {
			return *v
		}
		var ret ImageRecipeSystemsManagerAgent
		return ret
	}).(ImageRecipeSystemsManagerAgentOutput)
}

// Whether to remove the Systems Manager Agent after the image has been built. Defaults to `false`.
func (o ImageRecipeSystemsManagerAgentPtrOutput) UninstallAfterBuild() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ImageRecipeSystemsManagerAgent) *bool {
		if v == nil {
			return nil
		}
		return &v.UninstallAfterBuild
	}).(pulumi.BoolPtrOutput)
}

type InfrastructureConfigurationInstanceMetadataOptions struct {
	// The number of hops that an instance can traverse to reach its destonation.
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether a signed token is required for instance metadata retrieval requests. Valid values: `required`, `optional`.
	HttpTokens *string `pulumi:"httpTokens"`
}

// InfrastructureConfigurationInstanceMetadataOptionsInput is an input type that accepts InfrastructureConfigurationInstanceMetadataOptionsArgs and InfrastructureConfigurationInstanceMetadataOptionsOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationInstanceMetadataOptionsInput` via:
//
//          InfrastructureConfigurationInstanceMetadataOptionsArgs{...}
type InfrastructureConfigurationInstanceMetadataOptionsInput interface {
	pulumi.Input

	ToInfrastructureConfigurationInstanceMetadataOptionsOutput() InfrastructureConfigurationInstanceMetadataOptionsOutput
	ToInfrastructureConfigurationInstanceMetadataOptionsOutputWithContext(context.Context) InfrastructureConfigurationInstanceMetadataOptionsOutput
}

type InfrastructureConfigurationInstanceMetadataOptionsArgs struct {
	// The number of hops that an instance can traverse to reach its destonation.
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether a signed token is required for instance metadata retrieval requests. Valid values: `required`, `optional`.
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (InfrastructureConfigurationInstanceMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationInstanceMetadataOptions)(nil)).Elem()
}

func (i InfrastructureConfigurationInstanceMetadataOptionsArgs) ToInfrastructureConfigurationInstanceMetadataOptionsOutput() InfrastructureConfigurationInstanceMetadataOptionsOutput {
	return i.ToInfrastructureConfigurationInstanceMetadataOptionsOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationInstanceMetadataOptionsArgs) ToInfrastructureConfigurationInstanceMetadataOptionsOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationInstanceMetadataOptionsOutput)
}

func (i InfrastructureConfigurationInstanceMetadataOptionsArgs) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return i.ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationInstanceMetadataOptionsArgs) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationInstanceMetadataOptionsOutput).ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(ctx)
}

// InfrastructureConfigurationInstanceMetadataOptionsPtrInput is an input type that accepts InfrastructureConfigurationInstanceMetadataOptionsArgs, InfrastructureConfigurationInstanceMetadataOptionsPtr and InfrastructureConfigurationInstanceMetadataOptionsPtrOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationInstanceMetadataOptionsPtrInput` via:
//
//          InfrastructureConfigurationInstanceMetadataOptionsArgs{...}
//
//  or:
//
//          nil
type InfrastructureConfigurationInstanceMetadataOptionsPtrInput interface {
	pulumi.Input

	ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsPtrOutput
	ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(context.Context) InfrastructureConfigurationInstanceMetadataOptionsPtrOutput
}

type infrastructureConfigurationInstanceMetadataOptionsPtrType InfrastructureConfigurationInstanceMetadataOptionsArgs

func InfrastructureConfigurationInstanceMetadataOptionsPtr(v *InfrastructureConfigurationInstanceMetadataOptionsArgs) InfrastructureConfigurationInstanceMetadataOptionsPtrInput {
	return (*infrastructureConfigurationInstanceMetadataOptionsPtrType)(v)
}

func (*infrastructureConfigurationInstanceMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationInstanceMetadataOptions)(nil)).Elem()
}

func (i *infrastructureConfigurationInstanceMetadataOptionsPtrType) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return i.ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *infrastructureConfigurationInstanceMetadataOptionsPtrType) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationInstanceMetadataOptionsPtrOutput)
}

type InfrastructureConfigurationInstanceMetadataOptionsOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationInstanceMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationInstanceMetadataOptions)(nil)).Elem()
}

func (o InfrastructureConfigurationInstanceMetadataOptionsOutput) ToInfrastructureConfigurationInstanceMetadataOptionsOutput() InfrastructureConfigurationInstanceMetadataOptionsOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsOutput) ToInfrastructureConfigurationInstanceMetadataOptionsOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsOutput) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return o.ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationInstanceMetadataOptionsOutput) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureConfigurationInstanceMetadataOptions) *InfrastructureConfigurationInstanceMetadataOptions {
		return &v
	}).(InfrastructureConfigurationInstanceMetadataOptionsPtrOutput)
}

// The number of hops that an instance can traverse to reach its destonation.
func (o InfrastructureConfigurationInstanceMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InfrastructureConfigurationInstanceMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether a signed token is required for instance metadata retrieval requests. Valid values: `required`, `optional`.
func (o InfrastructureConfigurationInstanceMetadataOptionsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureConfigurationInstanceMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type InfrastructureConfigurationInstanceMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationInstanceMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationInstanceMetadataOptions)(nil)).Elem()
}

func (o InfrastructureConfigurationInstanceMetadataOptionsPtrOutput) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutput() InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsPtrOutput) ToInfrastructureConfigurationInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationInstanceMetadataOptionsPtrOutput {
	return o
}

func (o InfrastructureConfigurationInstanceMetadataOptionsPtrOutput) Elem() InfrastructureConfigurationInstanceMetadataOptionsOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationInstanceMetadataOptions) InfrastructureConfigurationInstanceMetadataOptions {
		if v != nil {
			return *v
		}
		var ret InfrastructureConfigurationInstanceMetadataOptions
		return ret
	}).(InfrastructureConfigurationInstanceMetadataOptionsOutput)
}

// The number of hops that an instance can traverse to reach its destonation.
func (o InfrastructureConfigurationInstanceMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationInstanceMetadataOptions) *int {
		if v == nil {
			return nil
		}
		return v.HttpPutResponseHopLimit
	}).(pulumi.IntPtrOutput)
}

// Whether a signed token is required for instance metadata retrieval requests. Valid values: `required`, `optional`.
func (o InfrastructureConfigurationInstanceMetadataOptionsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationInstanceMetadataOptions) *string {
		if v == nil {
			return nil
		}
		return v.HttpTokens
	}).(pulumi.StringPtrOutput)
}

type InfrastructureConfigurationLogging struct {
	// Configuration block with S3 logging settings. Detailed below.
	S3Logs InfrastructureConfigurationLoggingS3Logs `pulumi:"s3Logs"`
}

// InfrastructureConfigurationLoggingInput is an input type that accepts InfrastructureConfigurationLoggingArgs and InfrastructureConfigurationLoggingOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingInput` via:
//
//          InfrastructureConfigurationLoggingArgs{...}
type InfrastructureConfigurationLoggingInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingOutput() InfrastructureConfigurationLoggingOutput
	ToInfrastructureConfigurationLoggingOutputWithContext(context.Context) InfrastructureConfigurationLoggingOutput
}

type InfrastructureConfigurationLoggingArgs struct {
	// Configuration block with S3 logging settings. Detailed below.
	S3Logs InfrastructureConfigurationLoggingS3LogsInput `pulumi:"s3Logs"`
}

func (InfrastructureConfigurationLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLogging)(nil)).Elem()
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingOutput() InfrastructureConfigurationLoggingOutput {
	return i.ToInfrastructureConfigurationLoggingOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingOutput)
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return i.ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingOutput).ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx)
}

// InfrastructureConfigurationLoggingPtrInput is an input type that accepts InfrastructureConfigurationLoggingArgs, InfrastructureConfigurationLoggingPtr and InfrastructureConfigurationLoggingPtrOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingPtrInput` via:
//
//          InfrastructureConfigurationLoggingArgs{...}
//
//  or:
//
//          nil
type InfrastructureConfigurationLoggingPtrInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput
	ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Context) InfrastructureConfigurationLoggingPtrOutput
}

type infrastructureConfigurationLoggingPtrType InfrastructureConfigurationLoggingArgs

func InfrastructureConfigurationLoggingPtr(v *InfrastructureConfigurationLoggingArgs) InfrastructureConfigurationLoggingPtrInput {
	return (*infrastructureConfigurationLoggingPtrType)(v)
}

func (*infrastructureConfigurationLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLogging)(nil)).Elem()
}

func (i *infrastructureConfigurationLoggingPtrType) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return i.ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Background())
}

func (i *infrastructureConfigurationLoggingPtrType) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingPtrOutput)
}

type InfrastructureConfigurationLoggingOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLogging)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingOutput() InfrastructureConfigurationLoggingOutput {
	return o
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingOutput {
	return o
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return o.ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureConfigurationLogging) *InfrastructureConfigurationLogging {
		return &v
	}).(InfrastructureConfigurationLoggingPtrOutput)
}

// Configuration block with S3 logging settings. Detailed below.
func (o InfrastructureConfigurationLoggingOutput) S3Logs() InfrastructureConfigurationLoggingS3LogsOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLogging) InfrastructureConfigurationLoggingS3Logs { return v.S3Logs }).(InfrastructureConfigurationLoggingS3LogsOutput)
}

type InfrastructureConfigurationLoggingPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLogging)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingPtrOutput) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingPtrOutput) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingPtrOutput) Elem() InfrastructureConfigurationLoggingOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLogging) InfrastructureConfigurationLogging {
		if v != nil {
			return *v
		}
		var ret InfrastructureConfigurationLogging
		return ret
	}).(InfrastructureConfigurationLoggingOutput)
}

// Configuration block with S3 logging settings. Detailed below.
func (o InfrastructureConfigurationLoggingPtrOutput) S3Logs() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLogging) *InfrastructureConfigurationLoggingS3Logs {
		if v == nil {
			return nil
		}
		return &v.S3Logs
	}).(InfrastructureConfigurationLoggingS3LogsPtrOutput)
}

type InfrastructureConfigurationLoggingS3Logs struct {
	// Name of the S3 Bucket.
	S3BucketName string `pulumi:"s3BucketName"`
	// Prefix to use for S3 logs. Defaults to `/`.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// InfrastructureConfigurationLoggingS3LogsInput is an input type that accepts InfrastructureConfigurationLoggingS3LogsArgs and InfrastructureConfigurationLoggingS3LogsOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingS3LogsInput` via:
//
//          InfrastructureConfigurationLoggingS3LogsArgs{...}
type InfrastructureConfigurationLoggingS3LogsInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingS3LogsOutput() InfrastructureConfigurationLoggingS3LogsOutput
	ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(context.Context) InfrastructureConfigurationLoggingS3LogsOutput
}

type InfrastructureConfigurationLoggingS3LogsArgs struct {
	// Name of the S3 Bucket.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// Prefix to use for S3 logs. Defaults to `/`.
	S3KeyPrefix pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
}

func (InfrastructureConfigurationLoggingS3LogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsOutput() InfrastructureConfigurationLoggingS3LogsOutput {
	return i.ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingS3LogsOutput)
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return i.ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingS3LogsOutput).ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx)
}

// InfrastructureConfigurationLoggingS3LogsPtrInput is an input type that accepts InfrastructureConfigurationLoggingS3LogsArgs, InfrastructureConfigurationLoggingS3LogsPtr and InfrastructureConfigurationLoggingS3LogsPtrOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingS3LogsPtrInput` via:
//
//          InfrastructureConfigurationLoggingS3LogsArgs{...}
//
//  or:
//
//          nil
type InfrastructureConfigurationLoggingS3LogsPtrInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput
	ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput
}

type infrastructureConfigurationLoggingS3LogsPtrType InfrastructureConfigurationLoggingS3LogsArgs

func InfrastructureConfigurationLoggingS3LogsPtr(v *InfrastructureConfigurationLoggingS3LogsArgs) InfrastructureConfigurationLoggingS3LogsPtrInput {
	return (*infrastructureConfigurationLoggingS3LogsPtrType)(v)
}

func (*infrastructureConfigurationLoggingS3LogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (i *infrastructureConfigurationLoggingS3LogsPtrType) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return i.ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Background())
}

func (i *infrastructureConfigurationLoggingS3LogsPtrType) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingS3LogsPtrOutput)
}

type InfrastructureConfigurationLoggingS3LogsOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingS3LogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsOutput() InfrastructureConfigurationLoggingS3LogsOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o.ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfrastructureConfigurationLoggingS3Logs) *InfrastructureConfigurationLoggingS3Logs {
		return &v
	}).(InfrastructureConfigurationLoggingS3LogsPtrOutput)
}

// Name of the S3 Bucket.
func (o InfrastructureConfigurationLoggingS3LogsOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLoggingS3Logs) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// Prefix to use for S3 logs. Defaults to `/`.
func (o InfrastructureConfigurationLoggingS3LogsOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLoggingS3Logs) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type InfrastructureConfigurationLoggingS3LogsPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingS3LogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) Elem() InfrastructureConfigurationLoggingS3LogsOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLoggingS3Logs) InfrastructureConfigurationLoggingS3Logs {
		if v != nil {
			return *v
		}
		var ret InfrastructureConfigurationLoggingS3Logs
		return ret
	}).(InfrastructureConfigurationLoggingS3LogsOutput)
}

// Name of the S3 Bucket.
func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLoggingS3Logs) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// Prefix to use for S3 logs. Defaults to `/`.
func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLoggingS3Logs) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

type GetComponentsFilter struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListComponents API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListComponents.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetComponentsFilterInput is an input type that accepts GetComponentsFilterArgs and GetComponentsFilterOutput values.
// You can construct a concrete instance of `GetComponentsFilterInput` via:
//
//          GetComponentsFilterArgs{...}
type GetComponentsFilterInput interface {
	pulumi.Input

	ToGetComponentsFilterOutput() GetComponentsFilterOutput
	ToGetComponentsFilterOutputWithContext(context.Context) GetComponentsFilterOutput
}

type GetComponentsFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListComponents API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListComponents.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetComponentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsFilter)(nil)).Elem()
}

func (i GetComponentsFilterArgs) ToGetComponentsFilterOutput() GetComponentsFilterOutput {
	return i.ToGetComponentsFilterOutputWithContext(context.Background())
}

func (i GetComponentsFilterArgs) ToGetComponentsFilterOutputWithContext(ctx context.Context) GetComponentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsFilterOutput)
}

// GetComponentsFilterArrayInput is an input type that accepts GetComponentsFilterArray and GetComponentsFilterArrayOutput values.
// You can construct a concrete instance of `GetComponentsFilterArrayInput` via:
//
//          GetComponentsFilterArray{ GetComponentsFilterArgs{...} }
type GetComponentsFilterArrayInput interface {
	pulumi.Input

	ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput
	ToGetComponentsFilterArrayOutputWithContext(context.Context) GetComponentsFilterArrayOutput
}

type GetComponentsFilterArray []GetComponentsFilterInput

func (GetComponentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsFilter)(nil)).Elem()
}

func (i GetComponentsFilterArray) ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput {
	return i.ToGetComponentsFilterArrayOutputWithContext(context.Background())
}

func (i GetComponentsFilterArray) ToGetComponentsFilterArrayOutputWithContext(ctx context.Context) GetComponentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentsFilterArrayOutput)
}

type GetComponentsFilterOutput struct{ *pulumi.OutputState }

func (GetComponentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentsFilter)(nil)).Elem()
}

func (o GetComponentsFilterOutput) ToGetComponentsFilterOutput() GetComponentsFilterOutput {
	return o
}

func (o GetComponentsFilterOutput) ToGetComponentsFilterOutputWithContext(ctx context.Context) GetComponentsFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [Image Builder ListComponents API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListComponents.html).
func (o GetComponentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetComponentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComponentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetComponentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetComponentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentsFilter)(nil)).Elem()
}

func (o GetComponentsFilterArrayOutput) ToGetComponentsFilterArrayOutput() GetComponentsFilterArrayOutput {
	return o
}

func (o GetComponentsFilterArrayOutput) ToGetComponentsFilterArrayOutputWithContext(ctx context.Context) GetComponentsFilterArrayOutput {
	return o
}

func (o GetComponentsFilterArrayOutput) Index(i pulumi.IntInput) GetComponentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentsFilter {
		return vs[0].([]GetComponentsFilter)[vs[1].(int)]
	}).(GetComponentsFilterOutput)
}

type GetContainerRecipeComponent struct {
	// Amazon Resource Name (ARN) of the Image Builder Component.
	ComponentArn string `pulumi:"componentArn"`
	// Set of parameters that are used to configure the component.
	Parameters []GetContainerRecipeComponentParameter `pulumi:"parameters"`
}

// GetContainerRecipeComponentInput is an input type that accepts GetContainerRecipeComponentArgs and GetContainerRecipeComponentOutput values.
// You can construct a concrete instance of `GetContainerRecipeComponentInput` via:
//
//          GetContainerRecipeComponentArgs{...}
type GetContainerRecipeComponentInput interface {
	pulumi.Input

	ToGetContainerRecipeComponentOutput() GetContainerRecipeComponentOutput
	ToGetContainerRecipeComponentOutputWithContext(context.Context) GetContainerRecipeComponentOutput
}

type GetContainerRecipeComponentArgs struct {
	// Amazon Resource Name (ARN) of the Image Builder Component.
	ComponentArn pulumi.StringInput `pulumi:"componentArn"`
	// Set of parameters that are used to configure the component.
	Parameters GetContainerRecipeComponentParameterArrayInput `pulumi:"parameters"`
}

func (GetContainerRecipeComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeComponent)(nil)).Elem()
}

func (i GetContainerRecipeComponentArgs) ToGetContainerRecipeComponentOutput() GetContainerRecipeComponentOutput {
	return i.ToGetContainerRecipeComponentOutputWithContext(context.Background())
}

func (i GetContainerRecipeComponentArgs) ToGetContainerRecipeComponentOutputWithContext(ctx context.Context) GetContainerRecipeComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeComponentOutput)
}

// GetContainerRecipeComponentArrayInput is an input type that accepts GetContainerRecipeComponentArray and GetContainerRecipeComponentArrayOutput values.
// You can construct a concrete instance of `GetContainerRecipeComponentArrayInput` via:
//
//          GetContainerRecipeComponentArray{ GetContainerRecipeComponentArgs{...} }
type GetContainerRecipeComponentArrayInput interface {
	pulumi.Input

	ToGetContainerRecipeComponentArrayOutput() GetContainerRecipeComponentArrayOutput
	ToGetContainerRecipeComponentArrayOutputWithContext(context.Context) GetContainerRecipeComponentArrayOutput
}

type GetContainerRecipeComponentArray []GetContainerRecipeComponentInput

func (GetContainerRecipeComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeComponent)(nil)).Elem()
}

func (i GetContainerRecipeComponentArray) ToGetContainerRecipeComponentArrayOutput() GetContainerRecipeComponentArrayOutput {
	return i.ToGetContainerRecipeComponentArrayOutputWithContext(context.Background())
}

func (i GetContainerRecipeComponentArray) ToGetContainerRecipeComponentArrayOutputWithContext(ctx context.Context) GetContainerRecipeComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeComponentArrayOutput)
}

type GetContainerRecipeComponentOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeComponent)(nil)).Elem()
}

func (o GetContainerRecipeComponentOutput) ToGetContainerRecipeComponentOutput() GetContainerRecipeComponentOutput {
	return o
}

func (o GetContainerRecipeComponentOutput) ToGetContainerRecipeComponentOutputWithContext(ctx context.Context) GetContainerRecipeComponentOutput {
	return o
}

// Amazon Resource Name (ARN) of the Image Builder Component.
func (o GetContainerRecipeComponentOutput) ComponentArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeComponent) string { return v.ComponentArn }).(pulumi.StringOutput)
}

// Set of parameters that are used to configure the component.
func (o GetContainerRecipeComponentOutput) Parameters() GetContainerRecipeComponentParameterArrayOutput {
	return o.ApplyT(func(v GetContainerRecipeComponent) []GetContainerRecipeComponentParameter { return v.Parameters }).(GetContainerRecipeComponentParameterArrayOutput)
}

type GetContainerRecipeComponentArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeComponent)(nil)).Elem()
}

func (o GetContainerRecipeComponentArrayOutput) ToGetContainerRecipeComponentArrayOutput() GetContainerRecipeComponentArrayOutput {
	return o
}

func (o GetContainerRecipeComponentArrayOutput) ToGetContainerRecipeComponentArrayOutputWithContext(ctx context.Context) GetContainerRecipeComponentArrayOutput {
	return o
}

func (o GetContainerRecipeComponentArrayOutput) Index(i pulumi.IntInput) GetContainerRecipeComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRecipeComponent {
		return vs[0].([]GetContainerRecipeComponent)[vs[1].(int)]
	}).(GetContainerRecipeComponentOutput)
}

type GetContainerRecipeComponentParameter struct {
	// Name of the container recipe.
	Name string `pulumi:"name"`
	// Value of the component parameter.
	Value string `pulumi:"value"`
}

// GetContainerRecipeComponentParameterInput is an input type that accepts GetContainerRecipeComponentParameterArgs and GetContainerRecipeComponentParameterOutput values.
// You can construct a concrete instance of `GetContainerRecipeComponentParameterInput` via:
//
//          GetContainerRecipeComponentParameterArgs{...}
type GetContainerRecipeComponentParameterInput interface {
	pulumi.Input

	ToGetContainerRecipeComponentParameterOutput() GetContainerRecipeComponentParameterOutput
	ToGetContainerRecipeComponentParameterOutputWithContext(context.Context) GetContainerRecipeComponentParameterOutput
}

type GetContainerRecipeComponentParameterArgs struct {
	// Name of the container recipe.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the component parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerRecipeComponentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeComponentParameter)(nil)).Elem()
}

func (i GetContainerRecipeComponentParameterArgs) ToGetContainerRecipeComponentParameterOutput() GetContainerRecipeComponentParameterOutput {
	return i.ToGetContainerRecipeComponentParameterOutputWithContext(context.Background())
}

func (i GetContainerRecipeComponentParameterArgs) ToGetContainerRecipeComponentParameterOutputWithContext(ctx context.Context) GetContainerRecipeComponentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeComponentParameterOutput)
}

// GetContainerRecipeComponentParameterArrayInput is an input type that accepts GetContainerRecipeComponentParameterArray and GetContainerRecipeComponentParameterArrayOutput values.
// You can construct a concrete instance of `GetContainerRecipeComponentParameterArrayInput` via:
//
//          GetContainerRecipeComponentParameterArray{ GetContainerRecipeComponentParameterArgs{...} }
type GetContainerRecipeComponentParameterArrayInput interface {
	pulumi.Input

	ToGetContainerRecipeComponentParameterArrayOutput() GetContainerRecipeComponentParameterArrayOutput
	ToGetContainerRecipeComponentParameterArrayOutputWithContext(context.Context) GetContainerRecipeComponentParameterArrayOutput
}

type GetContainerRecipeComponentParameterArray []GetContainerRecipeComponentParameterInput

func (GetContainerRecipeComponentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeComponentParameter)(nil)).Elem()
}

func (i GetContainerRecipeComponentParameterArray) ToGetContainerRecipeComponentParameterArrayOutput() GetContainerRecipeComponentParameterArrayOutput {
	return i.ToGetContainerRecipeComponentParameterArrayOutputWithContext(context.Background())
}

func (i GetContainerRecipeComponentParameterArray) ToGetContainerRecipeComponentParameterArrayOutputWithContext(ctx context.Context) GetContainerRecipeComponentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeComponentParameterArrayOutput)
}

type GetContainerRecipeComponentParameterOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeComponentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeComponentParameter)(nil)).Elem()
}

func (o GetContainerRecipeComponentParameterOutput) ToGetContainerRecipeComponentParameterOutput() GetContainerRecipeComponentParameterOutput {
	return o
}

func (o GetContainerRecipeComponentParameterOutput) ToGetContainerRecipeComponentParameterOutputWithContext(ctx context.Context) GetContainerRecipeComponentParameterOutput {
	return o
}

// Name of the container recipe.
func (o GetContainerRecipeComponentParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeComponentParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the component parameter.
func (o GetContainerRecipeComponentParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeComponentParameter) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerRecipeComponentParameterArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeComponentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeComponentParameter)(nil)).Elem()
}

func (o GetContainerRecipeComponentParameterArrayOutput) ToGetContainerRecipeComponentParameterArrayOutput() GetContainerRecipeComponentParameterArrayOutput {
	return o
}

func (o GetContainerRecipeComponentParameterArrayOutput) ToGetContainerRecipeComponentParameterArrayOutputWithContext(ctx context.Context) GetContainerRecipeComponentParameterArrayOutput {
	return o
}

func (o GetContainerRecipeComponentParameterArrayOutput) Index(i pulumi.IntInput) GetContainerRecipeComponentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRecipeComponentParameter {
		return vs[0].([]GetContainerRecipeComponentParameter)[vs[1].(int)]
	}).(GetContainerRecipeComponentParameterOutput)
}

type GetContainerRecipeInstanceConfiguration struct {
	// Set of objects with block device mappings for the instance configuration.
	BlockDeviceMappings []GetContainerRecipeInstanceConfigurationBlockDeviceMapping `pulumi:"blockDeviceMappings"`
	// AMI ID of the base image for container build and test instance.
	Image string `pulumi:"image"`
}

// GetContainerRecipeInstanceConfigurationInput is an input type that accepts GetContainerRecipeInstanceConfigurationArgs and GetContainerRecipeInstanceConfigurationOutput values.
// You can construct a concrete instance of `GetContainerRecipeInstanceConfigurationInput` via:
//
//          GetContainerRecipeInstanceConfigurationArgs{...}
type GetContainerRecipeInstanceConfigurationInput interface {
	pulumi.Input

	ToGetContainerRecipeInstanceConfigurationOutput() GetContainerRecipeInstanceConfigurationOutput
	ToGetContainerRecipeInstanceConfigurationOutputWithContext(context.Context) GetContainerRecipeInstanceConfigurationOutput
}

type GetContainerRecipeInstanceConfigurationArgs struct {
	// Set of objects with block device mappings for the instance configuration.
	BlockDeviceMappings GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput `pulumi:"blockDeviceMappings"`
	// AMI ID of the base image for container build and test instance.
	Image pulumi.StringInput `pulumi:"image"`
}

func (GetContainerRecipeInstanceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (i GetContainerRecipeInstanceConfigurationArgs) ToGetContainerRecipeInstanceConfigurationOutput() GetContainerRecipeInstanceConfigurationOutput {
	return i.ToGetContainerRecipeInstanceConfigurationOutputWithContext(context.Background())
}

func (i GetContainerRecipeInstanceConfigurationArgs) ToGetContainerRecipeInstanceConfigurationOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeInstanceConfigurationOutput)
}

// GetContainerRecipeInstanceConfigurationArrayInput is an input type that accepts GetContainerRecipeInstanceConfigurationArray and GetContainerRecipeInstanceConfigurationArrayOutput values.
// You can construct a concrete instance of `GetContainerRecipeInstanceConfigurationArrayInput` via:
//
//          GetContainerRecipeInstanceConfigurationArray{ GetContainerRecipeInstanceConfigurationArgs{...} }
type GetContainerRecipeInstanceConfigurationArrayInput interface {
	pulumi.Input

	ToGetContainerRecipeInstanceConfigurationArrayOutput() GetContainerRecipeInstanceConfigurationArrayOutput
	ToGetContainerRecipeInstanceConfigurationArrayOutputWithContext(context.Context) GetContainerRecipeInstanceConfigurationArrayOutput
}

type GetContainerRecipeInstanceConfigurationArray []GetContainerRecipeInstanceConfigurationInput

func (GetContainerRecipeInstanceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (i GetContainerRecipeInstanceConfigurationArray) ToGetContainerRecipeInstanceConfigurationArrayOutput() GetContainerRecipeInstanceConfigurationArrayOutput {
	return i.ToGetContainerRecipeInstanceConfigurationArrayOutputWithContext(context.Background())
}

func (i GetContainerRecipeInstanceConfigurationArray) ToGetContainerRecipeInstanceConfigurationArrayOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeInstanceConfigurationArrayOutput)
}

type GetContainerRecipeInstanceConfigurationOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeInstanceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (o GetContainerRecipeInstanceConfigurationOutput) ToGetContainerRecipeInstanceConfigurationOutput() GetContainerRecipeInstanceConfigurationOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationOutput) ToGetContainerRecipeInstanceConfigurationOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationOutput {
	return o
}

// Set of objects with block device mappings for the instance configuration.
func (o GetContainerRecipeInstanceConfigurationOutput) BlockDeviceMappings() GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfiguration) []GetContainerRecipeInstanceConfigurationBlockDeviceMapping {
		return v.BlockDeviceMappings
	}).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput)
}

// AMI ID of the base image for container build and test instance.
func (o GetContainerRecipeInstanceConfigurationOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfiguration) string { return v.Image }).(pulumi.StringOutput)
}

type GetContainerRecipeInstanceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeInstanceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeInstanceConfiguration)(nil)).Elem()
}

func (o GetContainerRecipeInstanceConfigurationArrayOutput) ToGetContainerRecipeInstanceConfigurationArrayOutput() GetContainerRecipeInstanceConfigurationArrayOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationArrayOutput) ToGetContainerRecipeInstanceConfigurationArrayOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationArrayOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationArrayOutput) Index(i pulumi.IntInput) GetContainerRecipeInstanceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRecipeInstanceConfiguration {
		return vs[0].([]GetContainerRecipeInstanceConfiguration)[vs[1].(int)]
	}).(GetContainerRecipeInstanceConfigurationOutput)
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMapping struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName string `pulumi:"deviceName"`
	// Single list of object with Elastic Block Storage (EBS) block device mapping settings.
	Ebs []GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb `pulumi:"ebs"`
	// Whether to remove a mapping from the parent image.
	NoDevice string `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName string `pulumi:"virtualName"`
}

// GetContainerRecipeInstanceConfigurationBlockDeviceMappingInput is an input type that accepts GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs and GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput values.
// You can construct a concrete instance of `GetContainerRecipeInstanceConfigurationBlockDeviceMappingInput` via:
//
//          GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs{...}
type GetContainerRecipeInstanceConfigurationBlockDeviceMappingInput interface {
	pulumi.Input

	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput
	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Single list of object with Elastic Block Storage (EBS) block device mapping settings.
	Ebs GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayInput `pulumi:"ebs"`
	// Whether to remove a mapping from the parent image.
	NoDevice pulumi.StringInput `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return i.ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput)
}

// GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput is an input type that accepts GetContainerRecipeInstanceConfigurationBlockDeviceMappingArray and GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput` via:
//
//          GetContainerRecipeInstanceConfigurationBlockDeviceMappingArray{ GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs{...} }
type GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput
	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingArray []GetContainerRecipeInstanceConfigurationBlockDeviceMappingInput

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingArray) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return i.ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingArray) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput)
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return o
}

// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMapping) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Single list of object with Elastic Block Storage (EBS) block device mapping settings.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) Ebs() GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMapping) []GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb {
		return v.Ebs
	}).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput)
}

// Whether to remove a mapping from the parent image.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) NoDevice() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMapping) string { return v.NoDevice }).(pulumi.StringOutput)
}

// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMapping) string { return v.VirtualName }).(pulumi.StringOutput)
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeInstanceConfigurationBlockDeviceMapping)(nil)).Elem()
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRecipeInstanceConfigurationBlockDeviceMapping {
		return vs[0].([]GetContainerRecipeInstanceConfigurationBlockDeviceMapping)[vs[1].(int)]
	}).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput)
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted bool `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops int `pulumi:"iops"`
	// KMS key used to encrypt the container image.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType string `pulumi:"volumeType"`
}

// GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbInput is an input type that accepts GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs and GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput values.
// You can construct a concrete instance of `GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbInput` via:
//
//          GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs{...}
type GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbInput interface {
	pulumi.Input

	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput
	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutputWithContext(context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// KMS key used to encrypt the container image.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput {
	return i.ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutputWithContext(context.Background())
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput)
}

// GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayInput is an input type that accepts GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArray and GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput values.
// You can construct a concrete instance of `GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayInput` via:
//
//          GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArray{ GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs{...} }
type GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayInput interface {
	pulumi.Input

	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput
	ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutputWithContext(context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArray []GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbInput

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArray) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput {
	return i.ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutputWithContext(context.Background())
}

func (i GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArray) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput)
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput {
	return o
}

// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb) int { return v.Iops }).(pulumi.IntOutput)
}

// KMS key used to encrypt the container image.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Identifier of the EC2 Volume Snapshot.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Size of the volume, in GiB.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Type of the volume. For example, `gp2` or `io2`.
func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput() GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput) ToGetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput) Index(i pulumi.IntInput) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb {
		return vs[0].([]GetContainerRecipeInstanceConfigurationBlockDeviceMappingEb)[vs[1].(int)]
	}).(GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput)
}

type GetContainerRecipeTargetRepository struct {
	// Name of the container repository where the output container image is stored. The name is prefixed by the repository location.
	RepositoryName string `pulumi:"repositoryName"`
	// Service in which this image is registered.
	Service string `pulumi:"service"`
}

// GetContainerRecipeTargetRepositoryInput is an input type that accepts GetContainerRecipeTargetRepositoryArgs and GetContainerRecipeTargetRepositoryOutput values.
// You can construct a concrete instance of `GetContainerRecipeTargetRepositoryInput` via:
//
//          GetContainerRecipeTargetRepositoryArgs{...}
type GetContainerRecipeTargetRepositoryInput interface {
	pulumi.Input

	ToGetContainerRecipeTargetRepositoryOutput() GetContainerRecipeTargetRepositoryOutput
	ToGetContainerRecipeTargetRepositoryOutputWithContext(context.Context) GetContainerRecipeTargetRepositoryOutput
}

type GetContainerRecipeTargetRepositoryArgs struct {
	// Name of the container repository where the output container image is stored. The name is prefixed by the repository location.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// Service in which this image is registered.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetContainerRecipeTargetRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeTargetRepository)(nil)).Elem()
}

func (i GetContainerRecipeTargetRepositoryArgs) ToGetContainerRecipeTargetRepositoryOutput() GetContainerRecipeTargetRepositoryOutput {
	return i.ToGetContainerRecipeTargetRepositoryOutputWithContext(context.Background())
}

func (i GetContainerRecipeTargetRepositoryArgs) ToGetContainerRecipeTargetRepositoryOutputWithContext(ctx context.Context) GetContainerRecipeTargetRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeTargetRepositoryOutput)
}

// GetContainerRecipeTargetRepositoryArrayInput is an input type that accepts GetContainerRecipeTargetRepositoryArray and GetContainerRecipeTargetRepositoryArrayOutput values.
// You can construct a concrete instance of `GetContainerRecipeTargetRepositoryArrayInput` via:
//
//          GetContainerRecipeTargetRepositoryArray{ GetContainerRecipeTargetRepositoryArgs{...} }
type GetContainerRecipeTargetRepositoryArrayInput interface {
	pulumi.Input

	ToGetContainerRecipeTargetRepositoryArrayOutput() GetContainerRecipeTargetRepositoryArrayOutput
	ToGetContainerRecipeTargetRepositoryArrayOutputWithContext(context.Context) GetContainerRecipeTargetRepositoryArrayOutput
}

type GetContainerRecipeTargetRepositoryArray []GetContainerRecipeTargetRepositoryInput

func (GetContainerRecipeTargetRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeTargetRepository)(nil)).Elem()
}

func (i GetContainerRecipeTargetRepositoryArray) ToGetContainerRecipeTargetRepositoryArrayOutput() GetContainerRecipeTargetRepositoryArrayOutput {
	return i.ToGetContainerRecipeTargetRepositoryArrayOutputWithContext(context.Background())
}

func (i GetContainerRecipeTargetRepositoryArray) ToGetContainerRecipeTargetRepositoryArrayOutputWithContext(ctx context.Context) GetContainerRecipeTargetRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipeTargetRepositoryArrayOutput)
}

type GetContainerRecipeTargetRepositoryOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeTargetRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipeTargetRepository)(nil)).Elem()
}

func (o GetContainerRecipeTargetRepositoryOutput) ToGetContainerRecipeTargetRepositoryOutput() GetContainerRecipeTargetRepositoryOutput {
	return o
}

func (o GetContainerRecipeTargetRepositoryOutput) ToGetContainerRecipeTargetRepositoryOutputWithContext(ctx context.Context) GetContainerRecipeTargetRepositoryOutput {
	return o
}

// Name of the container repository where the output container image is stored. The name is prefixed by the repository location.
func (o GetContainerRecipeTargetRepositoryOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeTargetRepository) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// Service in which this image is registered.
func (o GetContainerRecipeTargetRepositoryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipeTargetRepository) string { return v.Service }).(pulumi.StringOutput)
}

type GetContainerRecipeTargetRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRecipeTargetRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipeTargetRepository)(nil)).Elem()
}

func (o GetContainerRecipeTargetRepositoryArrayOutput) ToGetContainerRecipeTargetRepositoryArrayOutput() GetContainerRecipeTargetRepositoryArrayOutput {
	return o
}

func (o GetContainerRecipeTargetRepositoryArrayOutput) ToGetContainerRecipeTargetRepositoryArrayOutputWithContext(ctx context.Context) GetContainerRecipeTargetRepositoryArrayOutput {
	return o
}

func (o GetContainerRecipeTargetRepositoryArrayOutput) Index(i pulumi.IntInput) GetContainerRecipeTargetRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRecipeTargetRepository {
		return vs[0].([]GetContainerRecipeTargetRepository)[vs[1].(int)]
	}).(GetContainerRecipeTargetRepositoryOutput)
}

type GetContainerRecipesFilter struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListContainerRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListContainerRecipes.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetContainerRecipesFilterInput is an input type that accepts GetContainerRecipesFilterArgs and GetContainerRecipesFilterOutput values.
// You can construct a concrete instance of `GetContainerRecipesFilterInput` via:
//
//          GetContainerRecipesFilterArgs{...}
type GetContainerRecipesFilterInput interface {
	pulumi.Input

	ToGetContainerRecipesFilterOutput() GetContainerRecipesFilterOutput
	ToGetContainerRecipesFilterOutputWithContext(context.Context) GetContainerRecipesFilterOutput
}

type GetContainerRecipesFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListContainerRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListContainerRecipes.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetContainerRecipesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipesFilter)(nil)).Elem()
}

func (i GetContainerRecipesFilterArgs) ToGetContainerRecipesFilterOutput() GetContainerRecipesFilterOutput {
	return i.ToGetContainerRecipesFilterOutputWithContext(context.Background())
}

func (i GetContainerRecipesFilterArgs) ToGetContainerRecipesFilterOutputWithContext(ctx context.Context) GetContainerRecipesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipesFilterOutput)
}

// GetContainerRecipesFilterArrayInput is an input type that accepts GetContainerRecipesFilterArray and GetContainerRecipesFilterArrayOutput values.
// You can construct a concrete instance of `GetContainerRecipesFilterArrayInput` via:
//
//          GetContainerRecipesFilterArray{ GetContainerRecipesFilterArgs{...} }
type GetContainerRecipesFilterArrayInput interface {
	pulumi.Input

	ToGetContainerRecipesFilterArrayOutput() GetContainerRecipesFilterArrayOutput
	ToGetContainerRecipesFilterArrayOutputWithContext(context.Context) GetContainerRecipesFilterArrayOutput
}

type GetContainerRecipesFilterArray []GetContainerRecipesFilterInput

func (GetContainerRecipesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipesFilter)(nil)).Elem()
}

func (i GetContainerRecipesFilterArray) ToGetContainerRecipesFilterArrayOutput() GetContainerRecipesFilterArrayOutput {
	return i.ToGetContainerRecipesFilterArrayOutputWithContext(context.Background())
}

func (i GetContainerRecipesFilterArray) ToGetContainerRecipesFilterArrayOutputWithContext(ctx context.Context) GetContainerRecipesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRecipesFilterArrayOutput)
}

type GetContainerRecipesFilterOutput struct{ *pulumi.OutputState }

func (GetContainerRecipesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRecipesFilter)(nil)).Elem()
}

func (o GetContainerRecipesFilterOutput) ToGetContainerRecipesFilterOutput() GetContainerRecipesFilterOutput {
	return o
}

func (o GetContainerRecipesFilterOutput) ToGetContainerRecipesFilterOutputWithContext(ctx context.Context) GetContainerRecipesFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [Image Builder ListContainerRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListContainerRecipes.html).
func (o GetContainerRecipesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRecipesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetContainerRecipesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerRecipesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetContainerRecipesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRecipesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRecipesFilter)(nil)).Elem()
}

func (o GetContainerRecipesFilterArrayOutput) ToGetContainerRecipesFilterArrayOutput() GetContainerRecipesFilterArrayOutput {
	return o
}

func (o GetContainerRecipesFilterArrayOutput) ToGetContainerRecipesFilterArrayOutputWithContext(ctx context.Context) GetContainerRecipesFilterArrayOutput {
	return o
}

func (o GetContainerRecipesFilterArrayOutput) Index(i pulumi.IntInput) GetContainerRecipesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRecipesFilter {
		return vs[0].([]GetContainerRecipesFilter)[vs[1].(int)]
	}).(GetContainerRecipesFilterOutput)
}

type GetDistributionConfigurationDistribution struct {
	// Nested list of AMI distribution configuration.
	AmiDistributionConfigurations []GetDistributionConfigurationDistributionAmiDistributionConfiguration `pulumi:"amiDistributionConfigurations"`
	// Nested list of container distribution configurations.
	ContainerDistributionConfigurations []GetDistributionConfigurationDistributionContainerDistributionConfiguration `pulumi:"containerDistributionConfigurations"`
	// Nested list of launch template configurations.
	LaunchTemplateConfigurations []GetDistributionConfigurationDistributionLaunchTemplateConfiguration `pulumi:"launchTemplateConfigurations"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns []string `pulumi:"licenseConfigurationArns"`
	// AWS Region of distribution.
	Region string `pulumi:"region"`
}

// GetDistributionConfigurationDistributionInput is an input type that accepts GetDistributionConfigurationDistributionArgs and GetDistributionConfigurationDistributionOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionInput` via:
//
//          GetDistributionConfigurationDistributionArgs{...}
type GetDistributionConfigurationDistributionInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionOutput() GetDistributionConfigurationDistributionOutput
	ToGetDistributionConfigurationDistributionOutputWithContext(context.Context) GetDistributionConfigurationDistributionOutput
}

type GetDistributionConfigurationDistributionArgs struct {
	// Nested list of AMI distribution configuration.
	AmiDistributionConfigurations GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput `pulumi:"amiDistributionConfigurations"`
	// Nested list of container distribution configurations.
	ContainerDistributionConfigurations GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayInput `pulumi:"containerDistributionConfigurations"`
	// Nested list of launch template configurations.
	LaunchTemplateConfigurations GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput `pulumi:"launchTemplateConfigurations"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns pulumi.StringArrayInput `pulumi:"licenseConfigurationArns"`
	// AWS Region of distribution.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetDistributionConfigurationDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionArgs) ToGetDistributionConfigurationDistributionOutput() GetDistributionConfigurationDistributionOutput {
	return i.ToGetDistributionConfigurationDistributionOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionArgs) ToGetDistributionConfigurationDistributionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionOutput)
}

// GetDistributionConfigurationDistributionArrayInput is an input type that accepts GetDistributionConfigurationDistributionArray and GetDistributionConfigurationDistributionArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionArrayInput` via:
//
//          GetDistributionConfigurationDistributionArray{ GetDistributionConfigurationDistributionArgs{...} }
type GetDistributionConfigurationDistributionArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionArrayOutput() GetDistributionConfigurationDistributionArrayOutput
	ToGetDistributionConfigurationDistributionArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionArrayOutput
}

type GetDistributionConfigurationDistributionArray []GetDistributionConfigurationDistributionInput

func (GetDistributionConfigurationDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionArray) ToGetDistributionConfigurationDistributionArrayOutput() GetDistributionConfigurationDistributionArrayOutput {
	return i.ToGetDistributionConfigurationDistributionArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionArray) ToGetDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionArrayOutput)
}

type GetDistributionConfigurationDistributionOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionOutput) ToGetDistributionConfigurationDistributionOutput() GetDistributionConfigurationDistributionOutput {
	return o
}

func (o GetDistributionConfigurationDistributionOutput) ToGetDistributionConfigurationDistributionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionOutput {
	return o
}

// Nested list of AMI distribution configuration.
func (o GetDistributionConfigurationDistributionOutput) AmiDistributionConfigurations() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) []GetDistributionConfigurationDistributionAmiDistributionConfiguration {
		return v.AmiDistributionConfigurations
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput)
}

// Nested list of container distribution configurations.
func (o GetDistributionConfigurationDistributionOutput) ContainerDistributionConfigurations() GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) []GetDistributionConfigurationDistributionContainerDistributionConfiguration {
		return v.ContainerDistributionConfigurations
	}).(GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput)
}

// Nested list of launch template configurations.
func (o GetDistributionConfigurationDistributionOutput) LaunchTemplateConfigurations() GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) []GetDistributionConfigurationDistributionLaunchTemplateConfiguration {
		return v.LaunchTemplateConfigurations
	}).(GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput)
}

// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
func (o GetDistributionConfigurationDistributionOutput) LicenseConfigurationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) []string { return v.LicenseConfigurationArns }).(pulumi.StringArrayOutput)
}

// AWS Region of distribution.
func (o GetDistributionConfigurationDistributionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) string { return v.Region }).(pulumi.StringOutput)
}

type GetDistributionConfigurationDistributionArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionArrayOutput) ToGetDistributionConfigurationDistributionArrayOutput() GetDistributionConfigurationDistributionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionArrayOutput) ToGetDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistribution {
		return vs[0].([]GetDistributionConfigurationDistribution)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfiguration struct {
	// Key-value map of tags to apply to distributed AMI.
	AmiTags map[string]string `pulumi:"amiTags"`
	// Description of the container distribution configuration.
	Description string `pulumi:"description"`
	// Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// Nested list of EC2 launch permissions.
	LaunchPermissions []GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission `pulumi:"launchPermissions"`
	// Name of the distribution configuration.
	Name string `pulumi:"name"`
	// Set of target AWS Account identifiers.
	TargetAccountIds []string `pulumi:"targetAccountIds"`
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs and GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs{...}
type GetDistributionConfigurationDistributionAmiDistributionConfigurationInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs struct {
	// Key-value map of tags to apply to distributed AMI.
	AmiTags pulumi.StringMapInput `pulumi:"amiTags"`
	// Description of the container distribution configuration.
	Description pulumi.StringInput `pulumi:"description"`
	// Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// Nested list of EC2 launch permissions.
	LaunchPermissions GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput `pulumi:"launchPermissions"`
	// Name of the distribution configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of target AWS Account identifiers.
	TargetAccountIds pulumi.StringArrayInput `pulumi:"targetAccountIds"`
}

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationArray and GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationArray{ GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs{...} }
type GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationArray []GetDistributionConfigurationDistributionAmiDistributionConfigurationInput

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

// Key-value map of tags to apply to distributed AMI.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) AmiTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) map[string]string {
		return v.AmiTags
	}).(pulumi.StringMapOutput)
}

// Description of the container distribution configuration.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Nested list of EC2 launch permissions.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) LaunchPermissions() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) []GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return v.LaunchPermissions
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput)
}

// Name of the distribution configuration.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Set of target AWS Account identifiers.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) TargetAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) []string {
		return v.TargetAccountIds
	}).(pulumi.StringArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistributionAmiDistributionConfiguration {
		return vs[0].([]GetDistributionConfigurationDistributionAmiDistributionConfiguration)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission struct {
	// Set of AWS Organization ARNs.
	OrganizationArns []string `pulumi:"organizationArns"`
	// Set of AWS Organizational Unit ARNs.
	OrganizationalUnitArns []string `pulumi:"organizationalUnitArns"`
	// Set of EC2 launch permission user groups.
	UserGroups []string `pulumi:"userGroups"`
	// Set of AWS Account identifiers.
	UserIds []string `pulumi:"userIds"`
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs and GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...}
type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs struct {
	// Set of AWS Organization ARNs.
	OrganizationArns pulumi.StringArrayInput `pulumi:"organizationArns"`
	// Set of AWS Organizational Unit ARNs.
	OrganizationalUnitArns pulumi.StringArrayInput `pulumi:"organizationalUnitArns"`
	// Set of EC2 launch permission user groups.
	UserGroups pulumi.StringArrayInput `pulumi:"userGroups"`
	// Set of AWS Account identifiers.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
}

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray and GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray{ GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...} }
type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray []GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

// Set of AWS Organization ARNs.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) OrganizationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.OrganizationArns
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Organizational Unit ARNs.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) OrganizationalUnitArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.OrganizationalUnitArns
	}).(pulumi.StringArrayOutput)
}

// Set of EC2 launch permission user groups.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserGroups
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Account identifiers.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return vs[0].([]GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

type GetDistributionConfigurationDistributionContainerDistributionConfiguration struct {
	// Set of tags that are attached to the container distribution configuration.
	ContainerTags []string `pulumi:"containerTags"`
	// Description of the container distribution configuration.
	Description string `pulumi:"description"`
	// Set of destination repositories for the container distribution configuration.
	TargetRepositories []GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository `pulumi:"targetRepositories"`
}

// GetDistributionConfigurationDistributionContainerDistributionConfigurationInput is an input type that accepts GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs and GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionContainerDistributionConfigurationInput` via:
//
//          GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs{...}
type GetDistributionConfigurationDistributionContainerDistributionConfigurationInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput
	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs struct {
	// Set of tags that are attached to the container distribution configuration.
	ContainerTags pulumi.StringArrayInput `pulumi:"containerTags"`
	// Description of the container distribution configuration.
	Description pulumi.StringInput `pulumi:"description"`
	// Set of destination repositories for the container distribution configuration.
	TargetRepositories GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayInput `pulumi:"targetRepositories"`
}

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return i.ToGetDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput)
}

// GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayInput is an input type that accepts GetDistributionConfigurationDistributionContainerDistributionConfigurationArray and GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayInput` via:
//
//          GetDistributionConfigurationDistributionContainerDistributionConfigurationArray{ GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs{...} }
type GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput
	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationArray []GetDistributionConfigurationDistributionContainerDistributionConfigurationInput

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationArray) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput {
	return i.ToGetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationArray) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput)
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return o
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return o
}

// Set of tags that are attached to the container distribution configuration.
func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput) ContainerTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionContainerDistributionConfiguration) []string {
		return v.ContainerTags
	}).(pulumi.StringArrayOutput)
}

// Description of the container distribution configuration.
func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionContainerDistributionConfiguration) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Set of destination repositories for the container distribution configuration.
func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput) TargetRepositories() GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionContainerDistributionConfiguration) []GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository {
		return v.TargetRepositories
	}).(GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput)
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionContainerDistributionConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistributionContainerDistributionConfiguration {
		return vs[0].([]GetDistributionConfigurationDistributionContainerDistributionConfiguration)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput)
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository struct {
	// Name of the container repository where the output container image is stored.
	RepositoryName string `pulumi:"repositoryName"`
	// Service in which the image is registered.
	Service string `pulumi:"service"`
}

// GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput is an input type that accepts GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs and GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput` via:
//
//          GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs{...}
type GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput
	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs struct {
	// Name of the container repository where the output container image is stored.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// Service in which the image is registered.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return i.ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput)
}

// GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayInput is an input type that accepts GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArray and GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayInput` via:
//
//          GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArray{ GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs{...} }
type GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput
	ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArray []GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArray) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput {
	return i.ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArray) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput)
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return o
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return o
}

// Name of the container repository where the output container image is stored.
func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) string {
		return v.RepositoryName
	}).(pulumi.StringOutput)
}

// Service in which the image is registered.
func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository) string {
		return v.Service
	}).(pulumi.StringOutput)
}

type GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput() GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput) ToGetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository {
		return vs[0].([]GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepository)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput)
}

type GetDistributionConfigurationDistributionLaunchTemplateConfiguration struct {
	// The account ID that this configuration applies to.
	AccountId string `pulumi:"accountId"`
	// Indicates whether the specified Amazon EC2 launch template is set as the default launch template.
	Default bool `pulumi:"default"`
	// ID of the Amazon EC2 launch template.
	LaunchTemplateId string `pulumi:"launchTemplateId"`
}

// GetDistributionConfigurationDistributionLaunchTemplateConfigurationInput is an input type that accepts GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs and GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionLaunchTemplateConfigurationInput` via:
//
//          GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs{...}
type GetDistributionConfigurationDistributionLaunchTemplateConfigurationInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput() GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput
	ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(context.Context) GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput
}

type GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs struct {
	// The account ID that this configuration applies to.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Indicates whether the specified Amazon EC2 launch template is set as the default launch template.
	Default pulumi.BoolInput `pulumi:"default"`
	// ID of the Amazon EC2 launch template.
	LaunchTemplateId pulumi.StringInput `pulumi:"launchTemplateId"`
}

func (GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput() GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return i.ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput)
}

// GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput is an input type that accepts GetDistributionConfigurationDistributionLaunchTemplateConfigurationArray and GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput` via:
//
//          GetDistributionConfigurationDistributionLaunchTemplateConfigurationArray{ GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs{...} }
type GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput() GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput
	ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput
}

type GetDistributionConfigurationDistributionLaunchTemplateConfigurationArray []GetDistributionConfigurationDistributionLaunchTemplateConfigurationInput

func (GetDistributionConfigurationDistributionLaunchTemplateConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionLaunchTemplateConfigurationArray) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput() GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return i.ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionLaunchTemplateConfigurationArray) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput)
}

type GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput() GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return o
}

func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return o
}

// The account ID that this configuration applies to.
func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionLaunchTemplateConfiguration) string { return v.AccountId }).(pulumi.StringOutput)
}

// Indicates whether the specified Amazon EC2 launch template is set as the default launch template.
func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionLaunchTemplateConfiguration) bool { return v.Default }).(pulumi.BoolOutput)
}

// ID of the Amazon EC2 launch template.
func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput) LaunchTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionLaunchTemplateConfiguration) string {
		return v.LaunchTemplateId
	}).(pulumi.StringOutput)
}

type GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionLaunchTemplateConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput() GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) ToGetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistributionLaunchTemplateConfiguration {
		return vs[0].([]GetDistributionConfigurationDistributionLaunchTemplateConfiguration)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput)
}

type GetDistributionConfigurationsFilter struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListDistributionConfigurations API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListDistributionConfigurations.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetDistributionConfigurationsFilterInput is an input type that accepts GetDistributionConfigurationsFilterArgs and GetDistributionConfigurationsFilterOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationsFilterInput` via:
//
//          GetDistributionConfigurationsFilterArgs{...}
type GetDistributionConfigurationsFilterInput interface {
	pulumi.Input

	ToGetDistributionConfigurationsFilterOutput() GetDistributionConfigurationsFilterOutput
	ToGetDistributionConfigurationsFilterOutputWithContext(context.Context) GetDistributionConfigurationsFilterOutput
}

type GetDistributionConfigurationsFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListDistributionConfigurations API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListDistributionConfigurations.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDistributionConfigurationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationsFilter)(nil)).Elem()
}

func (i GetDistributionConfigurationsFilterArgs) ToGetDistributionConfigurationsFilterOutput() GetDistributionConfigurationsFilterOutput {
	return i.ToGetDistributionConfigurationsFilterOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationsFilterArgs) ToGetDistributionConfigurationsFilterOutputWithContext(ctx context.Context) GetDistributionConfigurationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationsFilterOutput)
}

// GetDistributionConfigurationsFilterArrayInput is an input type that accepts GetDistributionConfigurationsFilterArray and GetDistributionConfigurationsFilterArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationsFilterArrayInput` via:
//
//          GetDistributionConfigurationsFilterArray{ GetDistributionConfigurationsFilterArgs{...} }
type GetDistributionConfigurationsFilterArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationsFilterArrayOutput() GetDistributionConfigurationsFilterArrayOutput
	ToGetDistributionConfigurationsFilterArrayOutputWithContext(context.Context) GetDistributionConfigurationsFilterArrayOutput
}

type GetDistributionConfigurationsFilterArray []GetDistributionConfigurationsFilterInput

func (GetDistributionConfigurationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationsFilter)(nil)).Elem()
}

func (i GetDistributionConfigurationsFilterArray) ToGetDistributionConfigurationsFilterArrayOutput() GetDistributionConfigurationsFilterArrayOutput {
	return i.ToGetDistributionConfigurationsFilterArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationsFilterArray) ToGetDistributionConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationsFilterArrayOutput)
}

type GetDistributionConfigurationsFilterOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationsFilter)(nil)).Elem()
}

func (o GetDistributionConfigurationsFilterOutput) ToGetDistributionConfigurationsFilterOutput() GetDistributionConfigurationsFilterOutput {
	return o
}

func (o GetDistributionConfigurationsFilterOutput) ToGetDistributionConfigurationsFilterOutputWithContext(ctx context.Context) GetDistributionConfigurationsFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [Image Builder ListDistributionConfigurations API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListDistributionConfigurations.html).
func (o GetDistributionConfigurationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetDistributionConfigurationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDistributionConfigurationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationsFilter)(nil)).Elem()
}

func (o GetDistributionConfigurationsFilterArrayOutput) ToGetDistributionConfigurationsFilterArrayOutput() GetDistributionConfigurationsFilterArrayOutput {
	return o
}

func (o GetDistributionConfigurationsFilterArrayOutput) ToGetDistributionConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationsFilterArrayOutput {
	return o
}

func (o GetDistributionConfigurationsFilterArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationsFilter {
		return vs[0].([]GetDistributionConfigurationsFilter)[vs[1].(int)]
	}).(GetDistributionConfigurationsFilterOutput)
}

type GetImageImageTestsConfiguration struct {
	// Whether image tests are enabled.
	ImageTestsEnabled bool `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out.
	TimeoutMinutes int `pulumi:"timeoutMinutes"`
}

// GetImageImageTestsConfigurationInput is an input type that accepts GetImageImageTestsConfigurationArgs and GetImageImageTestsConfigurationOutput values.
// You can construct a concrete instance of `GetImageImageTestsConfigurationInput` via:
//
//          GetImageImageTestsConfigurationArgs{...}
type GetImageImageTestsConfigurationInput interface {
	pulumi.Input

	ToGetImageImageTestsConfigurationOutput() GetImageImageTestsConfigurationOutput
	ToGetImageImageTestsConfigurationOutputWithContext(context.Context) GetImageImageTestsConfigurationOutput
}

type GetImageImageTestsConfigurationArgs struct {
	// Whether image tests are enabled.
	ImageTestsEnabled pulumi.BoolInput `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out.
	TimeoutMinutes pulumi.IntInput `pulumi:"timeoutMinutes"`
}

func (GetImageImageTestsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageImageTestsConfiguration)(nil)).Elem()
}

func (i GetImageImageTestsConfigurationArgs) ToGetImageImageTestsConfigurationOutput() GetImageImageTestsConfigurationOutput {
	return i.ToGetImageImageTestsConfigurationOutputWithContext(context.Background())
}

func (i GetImageImageTestsConfigurationArgs) ToGetImageImageTestsConfigurationOutputWithContext(ctx context.Context) GetImageImageTestsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageImageTestsConfigurationOutput)
}

// GetImageImageTestsConfigurationArrayInput is an input type that accepts GetImageImageTestsConfigurationArray and GetImageImageTestsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetImageImageTestsConfigurationArrayInput` via:
//
//          GetImageImageTestsConfigurationArray{ GetImageImageTestsConfigurationArgs{...} }
type GetImageImageTestsConfigurationArrayInput interface {
	pulumi.Input

	ToGetImageImageTestsConfigurationArrayOutput() GetImageImageTestsConfigurationArrayOutput
	ToGetImageImageTestsConfigurationArrayOutputWithContext(context.Context) GetImageImageTestsConfigurationArrayOutput
}

type GetImageImageTestsConfigurationArray []GetImageImageTestsConfigurationInput

func (GetImageImageTestsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageImageTestsConfiguration)(nil)).Elem()
}

func (i GetImageImageTestsConfigurationArray) ToGetImageImageTestsConfigurationArrayOutput() GetImageImageTestsConfigurationArrayOutput {
	return i.ToGetImageImageTestsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetImageImageTestsConfigurationArray) ToGetImageImageTestsConfigurationArrayOutputWithContext(ctx context.Context) GetImageImageTestsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageImageTestsConfigurationArrayOutput)
}

type GetImageImageTestsConfigurationOutput struct{ *pulumi.OutputState }

func (GetImageImageTestsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageImageTestsConfiguration)(nil)).Elem()
}

func (o GetImageImageTestsConfigurationOutput) ToGetImageImageTestsConfigurationOutput() GetImageImageTestsConfigurationOutput {
	return o
}

func (o GetImageImageTestsConfigurationOutput) ToGetImageImageTestsConfigurationOutputWithContext(ctx context.Context) GetImageImageTestsConfigurationOutput {
	return o
}

// Whether image tests are enabled.
func (o GetImageImageTestsConfigurationOutput) ImageTestsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImageImageTestsConfiguration) bool { return v.ImageTestsEnabled }).(pulumi.BoolOutput)
}

// Number of minutes before image tests time out.
func (o GetImageImageTestsConfigurationOutput) TimeoutMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageImageTestsConfiguration) int { return v.TimeoutMinutes }).(pulumi.IntOutput)
}

type GetImageImageTestsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetImageImageTestsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageImageTestsConfiguration)(nil)).Elem()
}

func (o GetImageImageTestsConfigurationArrayOutput) ToGetImageImageTestsConfigurationArrayOutput() GetImageImageTestsConfigurationArrayOutput {
	return o
}

func (o GetImageImageTestsConfigurationArrayOutput) ToGetImageImageTestsConfigurationArrayOutputWithContext(ctx context.Context) GetImageImageTestsConfigurationArrayOutput {
	return o
}

func (o GetImageImageTestsConfigurationArrayOutput) Index(i pulumi.IntInput) GetImageImageTestsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageImageTestsConfiguration {
		return vs[0].([]GetImageImageTestsConfiguration)[vs[1].(int)]
	}).(GetImageImageTestsConfigurationOutput)
}

type GetImageOutputResource struct {
	// Set of objects with each Amazon Machine Image (AMI) created.
	Amis []GetImageOutputResourceAmi `pulumi:"amis"`
}

// GetImageOutputResourceInput is an input type that accepts GetImageOutputResourceArgs and GetImageOutputResourceOutput values.
// You can construct a concrete instance of `GetImageOutputResourceInput` via:
//
//          GetImageOutputResourceArgs{...}
type GetImageOutputResourceInput interface {
	pulumi.Input

	ToGetImageOutputResourceOutput() GetImageOutputResourceOutput
	ToGetImageOutputResourceOutputWithContext(context.Context) GetImageOutputResourceOutput
}

type GetImageOutputResourceArgs struct {
	// Set of objects with each Amazon Machine Image (AMI) created.
	Amis GetImageOutputResourceAmiArrayInput `pulumi:"amis"`
}

func (GetImageOutputResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageOutputResource)(nil)).Elem()
}

func (i GetImageOutputResourceArgs) ToGetImageOutputResourceOutput() GetImageOutputResourceOutput {
	return i.ToGetImageOutputResourceOutputWithContext(context.Background())
}

func (i GetImageOutputResourceArgs) ToGetImageOutputResourceOutputWithContext(ctx context.Context) GetImageOutputResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageOutputResourceOutput)
}

// GetImageOutputResourceArrayInput is an input type that accepts GetImageOutputResourceArray and GetImageOutputResourceArrayOutput values.
// You can construct a concrete instance of `GetImageOutputResourceArrayInput` via:
//
//          GetImageOutputResourceArray{ GetImageOutputResourceArgs{...} }
type GetImageOutputResourceArrayInput interface {
	pulumi.Input

	ToGetImageOutputResourceArrayOutput() GetImageOutputResourceArrayOutput
	ToGetImageOutputResourceArrayOutputWithContext(context.Context) GetImageOutputResourceArrayOutput
}

type GetImageOutputResourceArray []GetImageOutputResourceInput

func (GetImageOutputResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageOutputResource)(nil)).Elem()
}

func (i GetImageOutputResourceArray) ToGetImageOutputResourceArrayOutput() GetImageOutputResourceArrayOutput {
	return i.ToGetImageOutputResourceArrayOutputWithContext(context.Background())
}

func (i GetImageOutputResourceArray) ToGetImageOutputResourceArrayOutputWithContext(ctx context.Context) GetImageOutputResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageOutputResourceArrayOutput)
}

type GetImageOutputResourceOutput struct{ *pulumi.OutputState }

func (GetImageOutputResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageOutputResource)(nil)).Elem()
}

func (o GetImageOutputResourceOutput) ToGetImageOutputResourceOutput() GetImageOutputResourceOutput {
	return o
}

func (o GetImageOutputResourceOutput) ToGetImageOutputResourceOutputWithContext(ctx context.Context) GetImageOutputResourceOutput {
	return o
}

// Set of objects with each Amazon Machine Image (AMI) created.
func (o GetImageOutputResourceOutput) Amis() GetImageOutputResourceAmiArrayOutput {
	return o.ApplyT(func(v GetImageOutputResource) []GetImageOutputResourceAmi { return v.Amis }).(GetImageOutputResourceAmiArrayOutput)
}

type GetImageOutputResourceArrayOutput struct{ *pulumi.OutputState }

func (GetImageOutputResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageOutputResource)(nil)).Elem()
}

func (o GetImageOutputResourceArrayOutput) ToGetImageOutputResourceArrayOutput() GetImageOutputResourceArrayOutput {
	return o
}

func (o GetImageOutputResourceArrayOutput) ToGetImageOutputResourceArrayOutputWithContext(ctx context.Context) GetImageOutputResourceArrayOutput {
	return o
}

func (o GetImageOutputResourceArrayOutput) Index(i pulumi.IntInput) GetImageOutputResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageOutputResource {
		return vs[0].([]GetImageOutputResource)[vs[1].(int)]
	}).(GetImageOutputResourceOutput)
}

type GetImageOutputResourceAmi struct {
	// Account identifier of the AMI.
	AccountId string `pulumi:"accountId"`
	// Description of the AMI.
	Description string `pulumi:"description"`
	// Identifier of the AMI.
	Image string `pulumi:"image"`
	// Name of the AMI.
	Name string `pulumi:"name"`
	// Region of the AMI.
	Region string `pulumi:"region"`
}

// GetImageOutputResourceAmiInput is an input type that accepts GetImageOutputResourceAmiArgs and GetImageOutputResourceAmiOutput values.
// You can construct a concrete instance of `GetImageOutputResourceAmiInput` via:
//
//          GetImageOutputResourceAmiArgs{...}
type GetImageOutputResourceAmiInput interface {
	pulumi.Input

	ToGetImageOutputResourceAmiOutput() GetImageOutputResourceAmiOutput
	ToGetImageOutputResourceAmiOutputWithContext(context.Context) GetImageOutputResourceAmiOutput
}

type GetImageOutputResourceAmiArgs struct {
	// Account identifier of the AMI.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Description of the AMI.
	Description pulumi.StringInput `pulumi:"description"`
	// Identifier of the AMI.
	Image pulumi.StringInput `pulumi:"image"`
	// Name of the AMI.
	Name pulumi.StringInput `pulumi:"name"`
	// Region of the AMI.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetImageOutputResourceAmiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageOutputResourceAmi)(nil)).Elem()
}

func (i GetImageOutputResourceAmiArgs) ToGetImageOutputResourceAmiOutput() GetImageOutputResourceAmiOutput {
	return i.ToGetImageOutputResourceAmiOutputWithContext(context.Background())
}

func (i GetImageOutputResourceAmiArgs) ToGetImageOutputResourceAmiOutputWithContext(ctx context.Context) GetImageOutputResourceAmiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageOutputResourceAmiOutput)
}

// GetImageOutputResourceAmiArrayInput is an input type that accepts GetImageOutputResourceAmiArray and GetImageOutputResourceAmiArrayOutput values.
// You can construct a concrete instance of `GetImageOutputResourceAmiArrayInput` via:
//
//          GetImageOutputResourceAmiArray{ GetImageOutputResourceAmiArgs{...} }
type GetImageOutputResourceAmiArrayInput interface {
	pulumi.Input

	ToGetImageOutputResourceAmiArrayOutput() GetImageOutputResourceAmiArrayOutput
	ToGetImageOutputResourceAmiArrayOutputWithContext(context.Context) GetImageOutputResourceAmiArrayOutput
}

type GetImageOutputResourceAmiArray []GetImageOutputResourceAmiInput

func (GetImageOutputResourceAmiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageOutputResourceAmi)(nil)).Elem()
}

func (i GetImageOutputResourceAmiArray) ToGetImageOutputResourceAmiArrayOutput() GetImageOutputResourceAmiArrayOutput {
	return i.ToGetImageOutputResourceAmiArrayOutputWithContext(context.Background())
}

func (i GetImageOutputResourceAmiArray) ToGetImageOutputResourceAmiArrayOutputWithContext(ctx context.Context) GetImageOutputResourceAmiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageOutputResourceAmiArrayOutput)
}

type GetImageOutputResourceAmiOutput struct{ *pulumi.OutputState }

func (GetImageOutputResourceAmiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageOutputResourceAmi)(nil)).Elem()
}

func (o GetImageOutputResourceAmiOutput) ToGetImageOutputResourceAmiOutput() GetImageOutputResourceAmiOutput {
	return o
}

func (o GetImageOutputResourceAmiOutput) ToGetImageOutputResourceAmiOutputWithContext(ctx context.Context) GetImageOutputResourceAmiOutput {
	return o
}

// Account identifier of the AMI.
func (o GetImageOutputResourceAmiOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOutputResourceAmi) string { return v.AccountId }).(pulumi.StringOutput)
}

// Description of the AMI.
func (o GetImageOutputResourceAmiOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOutputResourceAmi) string { return v.Description }).(pulumi.StringOutput)
}

// Identifier of the AMI.
func (o GetImageOutputResourceAmiOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOutputResourceAmi) string { return v.Image }).(pulumi.StringOutput)
}

// Name of the AMI.
func (o GetImageOutputResourceAmiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOutputResourceAmi) string { return v.Name }).(pulumi.StringOutput)
}

// Region of the AMI.
func (o GetImageOutputResourceAmiOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOutputResourceAmi) string { return v.Region }).(pulumi.StringOutput)
}

type GetImageOutputResourceAmiArrayOutput struct{ *pulumi.OutputState }

func (GetImageOutputResourceAmiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageOutputResourceAmi)(nil)).Elem()
}

func (o GetImageOutputResourceAmiArrayOutput) ToGetImageOutputResourceAmiArrayOutput() GetImageOutputResourceAmiArrayOutput {
	return o
}

func (o GetImageOutputResourceAmiArrayOutput) ToGetImageOutputResourceAmiArrayOutputWithContext(ctx context.Context) GetImageOutputResourceAmiArrayOutput {
	return o
}

func (o GetImageOutputResourceAmiArrayOutput) Index(i pulumi.IntInput) GetImageOutputResourceAmiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageOutputResourceAmi {
		return vs[0].([]GetImageOutputResourceAmi)[vs[1].(int)]
	}).(GetImageOutputResourceAmiOutput)
}

type GetImagePipelineImageTestsConfiguration struct {
	// Whether image tests are enabled.
	ImageTestsEnabled bool `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out.
	TimeoutMinutes int `pulumi:"timeoutMinutes"`
}

// GetImagePipelineImageTestsConfigurationInput is an input type that accepts GetImagePipelineImageTestsConfigurationArgs and GetImagePipelineImageTestsConfigurationOutput values.
// You can construct a concrete instance of `GetImagePipelineImageTestsConfigurationInput` via:
//
//          GetImagePipelineImageTestsConfigurationArgs{...}
type GetImagePipelineImageTestsConfigurationInput interface {
	pulumi.Input

	ToGetImagePipelineImageTestsConfigurationOutput() GetImagePipelineImageTestsConfigurationOutput
	ToGetImagePipelineImageTestsConfigurationOutputWithContext(context.Context) GetImagePipelineImageTestsConfigurationOutput
}

type GetImagePipelineImageTestsConfigurationArgs struct {
	// Whether image tests are enabled.
	ImageTestsEnabled pulumi.BoolInput `pulumi:"imageTestsEnabled"`
	// Number of minutes before image tests time out.
	TimeoutMinutes pulumi.IntInput `pulumi:"timeoutMinutes"`
}

func (GetImagePipelineImageTestsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (i GetImagePipelineImageTestsConfigurationArgs) ToGetImagePipelineImageTestsConfigurationOutput() GetImagePipelineImageTestsConfigurationOutput {
	return i.ToGetImagePipelineImageTestsConfigurationOutputWithContext(context.Background())
}

func (i GetImagePipelineImageTestsConfigurationArgs) ToGetImagePipelineImageTestsConfigurationOutputWithContext(ctx context.Context) GetImagePipelineImageTestsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePipelineImageTestsConfigurationOutput)
}

// GetImagePipelineImageTestsConfigurationArrayInput is an input type that accepts GetImagePipelineImageTestsConfigurationArray and GetImagePipelineImageTestsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetImagePipelineImageTestsConfigurationArrayInput` via:
//
//          GetImagePipelineImageTestsConfigurationArray{ GetImagePipelineImageTestsConfigurationArgs{...} }
type GetImagePipelineImageTestsConfigurationArrayInput interface {
	pulumi.Input

	ToGetImagePipelineImageTestsConfigurationArrayOutput() GetImagePipelineImageTestsConfigurationArrayOutput
	ToGetImagePipelineImageTestsConfigurationArrayOutputWithContext(context.Context) GetImagePipelineImageTestsConfigurationArrayOutput
}

type GetImagePipelineImageTestsConfigurationArray []GetImagePipelineImageTestsConfigurationInput

func (GetImagePipelineImageTestsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (i GetImagePipelineImageTestsConfigurationArray) ToGetImagePipelineImageTestsConfigurationArrayOutput() GetImagePipelineImageTestsConfigurationArrayOutput {
	return i.ToGetImagePipelineImageTestsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetImagePipelineImageTestsConfigurationArray) ToGetImagePipelineImageTestsConfigurationArrayOutputWithContext(ctx context.Context) GetImagePipelineImageTestsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePipelineImageTestsConfigurationArrayOutput)
}

type GetImagePipelineImageTestsConfigurationOutput struct{ *pulumi.OutputState }

func (GetImagePipelineImageTestsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (o GetImagePipelineImageTestsConfigurationOutput) ToGetImagePipelineImageTestsConfigurationOutput() GetImagePipelineImageTestsConfigurationOutput {
	return o
}

func (o GetImagePipelineImageTestsConfigurationOutput) ToGetImagePipelineImageTestsConfigurationOutputWithContext(ctx context.Context) GetImagePipelineImageTestsConfigurationOutput {
	return o
}

// Whether image tests are enabled.
func (o GetImagePipelineImageTestsConfigurationOutput) ImageTestsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagePipelineImageTestsConfiguration) bool { return v.ImageTestsEnabled }).(pulumi.BoolOutput)
}

// Number of minutes before image tests time out.
func (o GetImagePipelineImageTestsConfigurationOutput) TimeoutMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagePipelineImageTestsConfiguration) int { return v.TimeoutMinutes }).(pulumi.IntOutput)
}

type GetImagePipelineImageTestsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetImagePipelineImageTestsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePipelineImageTestsConfiguration)(nil)).Elem()
}

func (o GetImagePipelineImageTestsConfigurationArrayOutput) ToGetImagePipelineImageTestsConfigurationArrayOutput() GetImagePipelineImageTestsConfigurationArrayOutput {
	return o
}

func (o GetImagePipelineImageTestsConfigurationArrayOutput) ToGetImagePipelineImageTestsConfigurationArrayOutputWithContext(ctx context.Context) GetImagePipelineImageTestsConfigurationArrayOutput {
	return o
}

func (o GetImagePipelineImageTestsConfigurationArrayOutput) Index(i pulumi.IntInput) GetImagePipelineImageTestsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagePipelineImageTestsConfiguration {
		return vs[0].([]GetImagePipelineImageTestsConfiguration)[vs[1].(int)]
	}).(GetImagePipelineImageTestsConfigurationOutput)
}

type GetImagePipelineSchedule struct {
	// Condition when the pipeline should trigger a new image build.
	PipelineExecutionStartCondition string `pulumi:"pipelineExecutionStartCondition"`
	// Cron expression of how often the pipeline start condition is evaluated.
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

// GetImagePipelineScheduleInput is an input type that accepts GetImagePipelineScheduleArgs and GetImagePipelineScheduleOutput values.
// You can construct a concrete instance of `GetImagePipelineScheduleInput` via:
//
//          GetImagePipelineScheduleArgs{...}
type GetImagePipelineScheduleInput interface {
	pulumi.Input

	ToGetImagePipelineScheduleOutput() GetImagePipelineScheduleOutput
	ToGetImagePipelineScheduleOutputWithContext(context.Context) GetImagePipelineScheduleOutput
}

type GetImagePipelineScheduleArgs struct {
	// Condition when the pipeline should trigger a new image build.
	PipelineExecutionStartCondition pulumi.StringInput `pulumi:"pipelineExecutionStartCondition"`
	// Cron expression of how often the pipeline start condition is evaluated.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
}

func (GetImagePipelineScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePipelineSchedule)(nil)).Elem()
}

func (i GetImagePipelineScheduleArgs) ToGetImagePipelineScheduleOutput() GetImagePipelineScheduleOutput {
	return i.ToGetImagePipelineScheduleOutputWithContext(context.Background())
}

func (i GetImagePipelineScheduleArgs) ToGetImagePipelineScheduleOutputWithContext(ctx context.Context) GetImagePipelineScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePipelineScheduleOutput)
}

// GetImagePipelineScheduleArrayInput is an input type that accepts GetImagePipelineScheduleArray and GetImagePipelineScheduleArrayOutput values.
// You can construct a concrete instance of `GetImagePipelineScheduleArrayInput` via:
//
//          GetImagePipelineScheduleArray{ GetImagePipelineScheduleArgs{...} }
type GetImagePipelineScheduleArrayInput interface {
	pulumi.Input

	ToGetImagePipelineScheduleArrayOutput() GetImagePipelineScheduleArrayOutput
	ToGetImagePipelineScheduleArrayOutputWithContext(context.Context) GetImagePipelineScheduleArrayOutput
}

type GetImagePipelineScheduleArray []GetImagePipelineScheduleInput

func (GetImagePipelineScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePipelineSchedule)(nil)).Elem()
}

func (i GetImagePipelineScheduleArray) ToGetImagePipelineScheduleArrayOutput() GetImagePipelineScheduleArrayOutput {
	return i.ToGetImagePipelineScheduleArrayOutputWithContext(context.Background())
}

func (i GetImagePipelineScheduleArray) ToGetImagePipelineScheduleArrayOutputWithContext(ctx context.Context) GetImagePipelineScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePipelineScheduleArrayOutput)
}

type GetImagePipelineScheduleOutput struct{ *pulumi.OutputState }

func (GetImagePipelineScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePipelineSchedule)(nil)).Elem()
}

func (o GetImagePipelineScheduleOutput) ToGetImagePipelineScheduleOutput() GetImagePipelineScheduleOutput {
	return o
}

func (o GetImagePipelineScheduleOutput) ToGetImagePipelineScheduleOutputWithContext(ctx context.Context) GetImagePipelineScheduleOutput {
	return o
}

// Condition when the pipeline should trigger a new image build.
func (o GetImagePipelineScheduleOutput) PipelineExecutionStartCondition() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagePipelineSchedule) string { return v.PipelineExecutionStartCondition }).(pulumi.StringOutput)
}

// Cron expression of how often the pipeline start condition is evaluated.
func (o GetImagePipelineScheduleOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagePipelineSchedule) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

type GetImagePipelineScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetImagePipelineScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePipelineSchedule)(nil)).Elem()
}

func (o GetImagePipelineScheduleArrayOutput) ToGetImagePipelineScheduleArrayOutput() GetImagePipelineScheduleArrayOutput {
	return o
}

func (o GetImagePipelineScheduleArrayOutput) ToGetImagePipelineScheduleArrayOutputWithContext(ctx context.Context) GetImagePipelineScheduleArrayOutput {
	return o
}

func (o GetImagePipelineScheduleArrayOutput) Index(i pulumi.IntInput) GetImagePipelineScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagePipelineSchedule {
		return vs[0].([]GetImagePipelineSchedule)[vs[1].(int)]
	}).(GetImagePipelineScheduleOutput)
}

type GetImagePipelinesFilter struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListImagePipelines API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImagePipelines.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetImagePipelinesFilterInput is an input type that accepts GetImagePipelinesFilterArgs and GetImagePipelinesFilterOutput values.
// You can construct a concrete instance of `GetImagePipelinesFilterInput` via:
//
//          GetImagePipelinesFilterArgs{...}
type GetImagePipelinesFilterInput interface {
	pulumi.Input

	ToGetImagePipelinesFilterOutput() GetImagePipelinesFilterOutput
	ToGetImagePipelinesFilterOutputWithContext(context.Context) GetImagePipelinesFilterOutput
}

type GetImagePipelinesFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListImagePipelines API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImagePipelines.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImagePipelinesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePipelinesFilter)(nil)).Elem()
}

func (i GetImagePipelinesFilterArgs) ToGetImagePipelinesFilterOutput() GetImagePipelinesFilterOutput {
	return i.ToGetImagePipelinesFilterOutputWithContext(context.Background())
}

func (i GetImagePipelinesFilterArgs) ToGetImagePipelinesFilterOutputWithContext(ctx context.Context) GetImagePipelinesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePipelinesFilterOutput)
}

// GetImagePipelinesFilterArrayInput is an input type that accepts GetImagePipelinesFilterArray and GetImagePipelinesFilterArrayOutput values.
// You can construct a concrete instance of `GetImagePipelinesFilterArrayInput` via:
//
//          GetImagePipelinesFilterArray{ GetImagePipelinesFilterArgs{...} }
type GetImagePipelinesFilterArrayInput interface {
	pulumi.Input

	ToGetImagePipelinesFilterArrayOutput() GetImagePipelinesFilterArrayOutput
	ToGetImagePipelinesFilterArrayOutputWithContext(context.Context) GetImagePipelinesFilterArrayOutput
}

type GetImagePipelinesFilterArray []GetImagePipelinesFilterInput

func (GetImagePipelinesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePipelinesFilter)(nil)).Elem()
}

func (i GetImagePipelinesFilterArray) ToGetImagePipelinesFilterArrayOutput() GetImagePipelinesFilterArrayOutput {
	return i.ToGetImagePipelinesFilterArrayOutputWithContext(context.Background())
}

func (i GetImagePipelinesFilterArray) ToGetImagePipelinesFilterArrayOutputWithContext(ctx context.Context) GetImagePipelinesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagePipelinesFilterArrayOutput)
}

type GetImagePipelinesFilterOutput struct{ *pulumi.OutputState }

func (GetImagePipelinesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagePipelinesFilter)(nil)).Elem()
}

func (o GetImagePipelinesFilterOutput) ToGetImagePipelinesFilterOutput() GetImagePipelinesFilterOutput {
	return o
}

func (o GetImagePipelinesFilterOutput) ToGetImagePipelinesFilterOutputWithContext(ctx context.Context) GetImagePipelinesFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [Image Builder ListImagePipelines API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImagePipelines.html).
func (o GetImagePipelinesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagePipelinesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetImagePipelinesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagePipelinesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImagePipelinesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImagePipelinesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagePipelinesFilter)(nil)).Elem()
}

func (o GetImagePipelinesFilterArrayOutput) ToGetImagePipelinesFilterArrayOutput() GetImagePipelinesFilterArrayOutput {
	return o
}

func (o GetImagePipelinesFilterArrayOutput) ToGetImagePipelinesFilterArrayOutputWithContext(ctx context.Context) GetImagePipelinesFilterArrayOutput {
	return o
}

func (o GetImagePipelinesFilterArrayOutput) Index(i pulumi.IntInput) GetImagePipelinesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagePipelinesFilter {
		return vs[0].([]GetImagePipelinesFilter)[vs[1].(int)]
	}).(GetImagePipelinesFilterOutput)
}

type GetImageRecipeBlockDeviceMapping struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName string `pulumi:"deviceName"`
	// Single list of object with Elastic Block Storage (EBS) block device mapping settings.
	Ebs []GetImageRecipeBlockDeviceMappingEb `pulumi:"ebs"`
	// Whether to remove a mapping from the parent image.
	NoDevice string `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName string `pulumi:"virtualName"`
}

// GetImageRecipeBlockDeviceMappingInput is an input type that accepts GetImageRecipeBlockDeviceMappingArgs and GetImageRecipeBlockDeviceMappingOutput values.
// You can construct a concrete instance of `GetImageRecipeBlockDeviceMappingInput` via:
//
//          GetImageRecipeBlockDeviceMappingArgs{...}
type GetImageRecipeBlockDeviceMappingInput interface {
	pulumi.Input

	ToGetImageRecipeBlockDeviceMappingOutput() GetImageRecipeBlockDeviceMappingOutput
	ToGetImageRecipeBlockDeviceMappingOutputWithContext(context.Context) GetImageRecipeBlockDeviceMappingOutput
}

type GetImageRecipeBlockDeviceMappingArgs struct {
	// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Single list of object with Elastic Block Storage (EBS) block device mapping settings.
	Ebs GetImageRecipeBlockDeviceMappingEbArrayInput `pulumi:"ebs"`
	// Whether to remove a mapping from the parent image.
	NoDevice pulumi.StringInput `pulumi:"noDevice"`
	// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (GetImageRecipeBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (i GetImageRecipeBlockDeviceMappingArgs) ToGetImageRecipeBlockDeviceMappingOutput() GetImageRecipeBlockDeviceMappingOutput {
	return i.ToGetImageRecipeBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetImageRecipeBlockDeviceMappingArgs) ToGetImageRecipeBlockDeviceMappingOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeBlockDeviceMappingOutput)
}

// GetImageRecipeBlockDeviceMappingArrayInput is an input type that accepts GetImageRecipeBlockDeviceMappingArray and GetImageRecipeBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `GetImageRecipeBlockDeviceMappingArrayInput` via:
//
//          GetImageRecipeBlockDeviceMappingArray{ GetImageRecipeBlockDeviceMappingArgs{...} }
type GetImageRecipeBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetImageRecipeBlockDeviceMappingArrayOutput() GetImageRecipeBlockDeviceMappingArrayOutput
	ToGetImageRecipeBlockDeviceMappingArrayOutputWithContext(context.Context) GetImageRecipeBlockDeviceMappingArrayOutput
}

type GetImageRecipeBlockDeviceMappingArray []GetImageRecipeBlockDeviceMappingInput

func (GetImageRecipeBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (i GetImageRecipeBlockDeviceMappingArray) ToGetImageRecipeBlockDeviceMappingArrayOutput() GetImageRecipeBlockDeviceMappingArrayOutput {
	return i.ToGetImageRecipeBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetImageRecipeBlockDeviceMappingArray) ToGetImageRecipeBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeBlockDeviceMappingArrayOutput)
}

type GetImageRecipeBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetImageRecipeBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (o GetImageRecipeBlockDeviceMappingOutput) ToGetImageRecipeBlockDeviceMappingOutput() GetImageRecipeBlockDeviceMappingOutput {
	return o
}

func (o GetImageRecipeBlockDeviceMappingOutput) ToGetImageRecipeBlockDeviceMappingOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingOutput {
	return o
}

// Name of the device. For example, `/dev/sda` or `/dev/xvdb`.
func (o GetImageRecipeBlockDeviceMappingOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMapping) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Single list of object with Elastic Block Storage (EBS) block device mapping settings.
func (o GetImageRecipeBlockDeviceMappingOutput) Ebs() GetImageRecipeBlockDeviceMappingEbArrayOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMapping) []GetImageRecipeBlockDeviceMappingEb { return v.Ebs }).(GetImageRecipeBlockDeviceMappingEbArrayOutput)
}

// Whether to remove a mapping from the parent image.
func (o GetImageRecipeBlockDeviceMappingOutput) NoDevice() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMapping) string { return v.NoDevice }).(pulumi.StringOutput)
}

// Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.
func (o GetImageRecipeBlockDeviceMappingOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMapping) string { return v.VirtualName }).(pulumi.StringOutput)
}

type GetImageRecipeBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetImageRecipeBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeBlockDeviceMapping)(nil)).Elem()
}

func (o GetImageRecipeBlockDeviceMappingArrayOutput) ToGetImageRecipeBlockDeviceMappingArrayOutput() GetImageRecipeBlockDeviceMappingArrayOutput {
	return o
}

func (o GetImageRecipeBlockDeviceMappingArrayOutput) ToGetImageRecipeBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingArrayOutput {
	return o
}

func (o GetImageRecipeBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetImageRecipeBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageRecipeBlockDeviceMapping {
		return vs[0].([]GetImageRecipeBlockDeviceMapping)[vs[1].(int)]
	}).(GetImageRecipeBlockDeviceMappingOutput)
}

type GetImageRecipeBlockDeviceMappingEb struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted bool `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType string `pulumi:"volumeType"`
}

// GetImageRecipeBlockDeviceMappingEbInput is an input type that accepts GetImageRecipeBlockDeviceMappingEbArgs and GetImageRecipeBlockDeviceMappingEbOutput values.
// You can construct a concrete instance of `GetImageRecipeBlockDeviceMappingEbInput` via:
//
//          GetImageRecipeBlockDeviceMappingEbArgs{...}
type GetImageRecipeBlockDeviceMappingEbInput interface {
	pulumi.Input

	ToGetImageRecipeBlockDeviceMappingEbOutput() GetImageRecipeBlockDeviceMappingEbOutput
	ToGetImageRecipeBlockDeviceMappingEbOutputWithContext(context.Context) GetImageRecipeBlockDeviceMappingEbOutput
}

type GetImageRecipeBlockDeviceMappingEbArgs struct {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// Identifier of the EC2 Volume Snapshot.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Size of the volume, in GiB.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Type of the volume. For example, `gp2` or `io2`.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetImageRecipeBlockDeviceMappingEbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetImageRecipeBlockDeviceMappingEbArgs) ToGetImageRecipeBlockDeviceMappingEbOutput() GetImageRecipeBlockDeviceMappingEbOutput {
	return i.ToGetImageRecipeBlockDeviceMappingEbOutputWithContext(context.Background())
}

func (i GetImageRecipeBlockDeviceMappingEbArgs) ToGetImageRecipeBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingEbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeBlockDeviceMappingEbOutput)
}

// GetImageRecipeBlockDeviceMappingEbArrayInput is an input type that accepts GetImageRecipeBlockDeviceMappingEbArray and GetImageRecipeBlockDeviceMappingEbArrayOutput values.
// You can construct a concrete instance of `GetImageRecipeBlockDeviceMappingEbArrayInput` via:
//
//          GetImageRecipeBlockDeviceMappingEbArray{ GetImageRecipeBlockDeviceMappingEbArgs{...} }
type GetImageRecipeBlockDeviceMappingEbArrayInput interface {
	pulumi.Input

	ToGetImageRecipeBlockDeviceMappingEbArrayOutput() GetImageRecipeBlockDeviceMappingEbArrayOutput
	ToGetImageRecipeBlockDeviceMappingEbArrayOutputWithContext(context.Context) GetImageRecipeBlockDeviceMappingEbArrayOutput
}

type GetImageRecipeBlockDeviceMappingEbArray []GetImageRecipeBlockDeviceMappingEbInput

func (GetImageRecipeBlockDeviceMappingEbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetImageRecipeBlockDeviceMappingEbArray) ToGetImageRecipeBlockDeviceMappingEbArrayOutput() GetImageRecipeBlockDeviceMappingEbArrayOutput {
	return i.ToGetImageRecipeBlockDeviceMappingEbArrayOutputWithContext(context.Background())
}

func (i GetImageRecipeBlockDeviceMappingEbArray) ToGetImageRecipeBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingEbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeBlockDeviceMappingEbArrayOutput)
}

type GetImageRecipeBlockDeviceMappingEbOutput struct{ *pulumi.OutputState }

func (GetImageRecipeBlockDeviceMappingEbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetImageRecipeBlockDeviceMappingEbOutput) ToGetImageRecipeBlockDeviceMappingEbOutput() GetImageRecipeBlockDeviceMappingEbOutput {
	return o
}

func (o GetImageRecipeBlockDeviceMappingEbOutput) ToGetImageRecipeBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingEbOutput {
	return o
}

// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
func (o GetImageRecipeBlockDeviceMappingEbOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMappingEb) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
func (o GetImageRecipeBlockDeviceMappingEbOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMappingEb) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
func (o GetImageRecipeBlockDeviceMappingEbOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMappingEb) int { return v.Iops }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
func (o GetImageRecipeBlockDeviceMappingEbOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMappingEb) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Identifier of the EC2 Volume Snapshot.
func (o GetImageRecipeBlockDeviceMappingEbOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMappingEb) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Size of the volume, in GiB.
func (o GetImageRecipeBlockDeviceMappingEbOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMappingEb) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Type of the volume. For example, `gp2` or `io2`.
func (o GetImageRecipeBlockDeviceMappingEbOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeBlockDeviceMappingEb) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetImageRecipeBlockDeviceMappingEbArrayOutput struct{ *pulumi.OutputState }

func (GetImageRecipeBlockDeviceMappingEbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetImageRecipeBlockDeviceMappingEbArrayOutput) ToGetImageRecipeBlockDeviceMappingEbArrayOutput() GetImageRecipeBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetImageRecipeBlockDeviceMappingEbArrayOutput) ToGetImageRecipeBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetImageRecipeBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetImageRecipeBlockDeviceMappingEbArrayOutput) Index(i pulumi.IntInput) GetImageRecipeBlockDeviceMappingEbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageRecipeBlockDeviceMappingEb {
		return vs[0].([]GetImageRecipeBlockDeviceMappingEb)[vs[1].(int)]
	}).(GetImageRecipeBlockDeviceMappingEbOutput)
}

type GetImageRecipeComponent struct {
	// Amazon Resource Name (ARN) of the Image Builder Component.
	ComponentArn string `pulumi:"componentArn"`
	// Set of parameters that are used to configure the component.
	Parameters []GetImageRecipeComponentParameter `pulumi:"parameters"`
}

// GetImageRecipeComponentInput is an input type that accepts GetImageRecipeComponentArgs and GetImageRecipeComponentOutput values.
// You can construct a concrete instance of `GetImageRecipeComponentInput` via:
//
//          GetImageRecipeComponentArgs{...}
type GetImageRecipeComponentInput interface {
	pulumi.Input

	ToGetImageRecipeComponentOutput() GetImageRecipeComponentOutput
	ToGetImageRecipeComponentOutputWithContext(context.Context) GetImageRecipeComponentOutput
}

type GetImageRecipeComponentArgs struct {
	// Amazon Resource Name (ARN) of the Image Builder Component.
	ComponentArn pulumi.StringInput `pulumi:"componentArn"`
	// Set of parameters that are used to configure the component.
	Parameters GetImageRecipeComponentParameterArrayInput `pulumi:"parameters"`
}

func (GetImageRecipeComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeComponent)(nil)).Elem()
}

func (i GetImageRecipeComponentArgs) ToGetImageRecipeComponentOutput() GetImageRecipeComponentOutput {
	return i.ToGetImageRecipeComponentOutputWithContext(context.Background())
}

func (i GetImageRecipeComponentArgs) ToGetImageRecipeComponentOutputWithContext(ctx context.Context) GetImageRecipeComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeComponentOutput)
}

// GetImageRecipeComponentArrayInput is an input type that accepts GetImageRecipeComponentArray and GetImageRecipeComponentArrayOutput values.
// You can construct a concrete instance of `GetImageRecipeComponentArrayInput` via:
//
//          GetImageRecipeComponentArray{ GetImageRecipeComponentArgs{...} }
type GetImageRecipeComponentArrayInput interface {
	pulumi.Input

	ToGetImageRecipeComponentArrayOutput() GetImageRecipeComponentArrayOutput
	ToGetImageRecipeComponentArrayOutputWithContext(context.Context) GetImageRecipeComponentArrayOutput
}

type GetImageRecipeComponentArray []GetImageRecipeComponentInput

func (GetImageRecipeComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeComponent)(nil)).Elem()
}

func (i GetImageRecipeComponentArray) ToGetImageRecipeComponentArrayOutput() GetImageRecipeComponentArrayOutput {
	return i.ToGetImageRecipeComponentArrayOutputWithContext(context.Background())
}

func (i GetImageRecipeComponentArray) ToGetImageRecipeComponentArrayOutputWithContext(ctx context.Context) GetImageRecipeComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeComponentArrayOutput)
}

type GetImageRecipeComponentOutput struct{ *pulumi.OutputState }

func (GetImageRecipeComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeComponent)(nil)).Elem()
}

func (o GetImageRecipeComponentOutput) ToGetImageRecipeComponentOutput() GetImageRecipeComponentOutput {
	return o
}

func (o GetImageRecipeComponentOutput) ToGetImageRecipeComponentOutputWithContext(ctx context.Context) GetImageRecipeComponentOutput {
	return o
}

// Amazon Resource Name (ARN) of the Image Builder Component.
func (o GetImageRecipeComponentOutput) ComponentArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeComponent) string { return v.ComponentArn }).(pulumi.StringOutput)
}

// Set of parameters that are used to configure the component.
func (o GetImageRecipeComponentOutput) Parameters() GetImageRecipeComponentParameterArrayOutput {
	return o.ApplyT(func(v GetImageRecipeComponent) []GetImageRecipeComponentParameter { return v.Parameters }).(GetImageRecipeComponentParameterArrayOutput)
}

type GetImageRecipeComponentArrayOutput struct{ *pulumi.OutputState }

func (GetImageRecipeComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeComponent)(nil)).Elem()
}

func (o GetImageRecipeComponentArrayOutput) ToGetImageRecipeComponentArrayOutput() GetImageRecipeComponentArrayOutput {
	return o
}

func (o GetImageRecipeComponentArrayOutput) ToGetImageRecipeComponentArrayOutputWithContext(ctx context.Context) GetImageRecipeComponentArrayOutput {
	return o
}

func (o GetImageRecipeComponentArrayOutput) Index(i pulumi.IntInput) GetImageRecipeComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageRecipeComponent {
		return vs[0].([]GetImageRecipeComponent)[vs[1].(int)]
	}).(GetImageRecipeComponentOutput)
}

type GetImageRecipeComponentParameter struct {
	// Name of the image recipe.
	Name string `pulumi:"name"`
	// Value of the component parameter.
	Value string `pulumi:"value"`
}

// GetImageRecipeComponentParameterInput is an input type that accepts GetImageRecipeComponentParameterArgs and GetImageRecipeComponentParameterOutput values.
// You can construct a concrete instance of `GetImageRecipeComponentParameterInput` via:
//
//          GetImageRecipeComponentParameterArgs{...}
type GetImageRecipeComponentParameterInput interface {
	pulumi.Input

	ToGetImageRecipeComponentParameterOutput() GetImageRecipeComponentParameterOutput
	ToGetImageRecipeComponentParameterOutputWithContext(context.Context) GetImageRecipeComponentParameterOutput
}

type GetImageRecipeComponentParameterArgs struct {
	// Name of the image recipe.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the component parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetImageRecipeComponentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeComponentParameter)(nil)).Elem()
}

func (i GetImageRecipeComponentParameterArgs) ToGetImageRecipeComponentParameterOutput() GetImageRecipeComponentParameterOutput {
	return i.ToGetImageRecipeComponentParameterOutputWithContext(context.Background())
}

func (i GetImageRecipeComponentParameterArgs) ToGetImageRecipeComponentParameterOutputWithContext(ctx context.Context) GetImageRecipeComponentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeComponentParameterOutput)
}

// GetImageRecipeComponentParameterArrayInput is an input type that accepts GetImageRecipeComponentParameterArray and GetImageRecipeComponentParameterArrayOutput values.
// You can construct a concrete instance of `GetImageRecipeComponentParameterArrayInput` via:
//
//          GetImageRecipeComponentParameterArray{ GetImageRecipeComponentParameterArgs{...} }
type GetImageRecipeComponentParameterArrayInput interface {
	pulumi.Input

	ToGetImageRecipeComponentParameterArrayOutput() GetImageRecipeComponentParameterArrayOutput
	ToGetImageRecipeComponentParameterArrayOutputWithContext(context.Context) GetImageRecipeComponentParameterArrayOutput
}

type GetImageRecipeComponentParameterArray []GetImageRecipeComponentParameterInput

func (GetImageRecipeComponentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeComponentParameter)(nil)).Elem()
}

func (i GetImageRecipeComponentParameterArray) ToGetImageRecipeComponentParameterArrayOutput() GetImageRecipeComponentParameterArrayOutput {
	return i.ToGetImageRecipeComponentParameterArrayOutputWithContext(context.Background())
}

func (i GetImageRecipeComponentParameterArray) ToGetImageRecipeComponentParameterArrayOutputWithContext(ctx context.Context) GetImageRecipeComponentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipeComponentParameterArrayOutput)
}

type GetImageRecipeComponentParameterOutput struct{ *pulumi.OutputState }

func (GetImageRecipeComponentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipeComponentParameter)(nil)).Elem()
}

func (o GetImageRecipeComponentParameterOutput) ToGetImageRecipeComponentParameterOutput() GetImageRecipeComponentParameterOutput {
	return o
}

func (o GetImageRecipeComponentParameterOutput) ToGetImageRecipeComponentParameterOutputWithContext(ctx context.Context) GetImageRecipeComponentParameterOutput {
	return o
}

// Name of the image recipe.
func (o GetImageRecipeComponentParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeComponentParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the component parameter.
func (o GetImageRecipeComponentParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipeComponentParameter) string { return v.Value }).(pulumi.StringOutput)
}

type GetImageRecipeComponentParameterArrayOutput struct{ *pulumi.OutputState }

func (GetImageRecipeComponentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipeComponentParameter)(nil)).Elem()
}

func (o GetImageRecipeComponentParameterArrayOutput) ToGetImageRecipeComponentParameterArrayOutput() GetImageRecipeComponentParameterArrayOutput {
	return o
}

func (o GetImageRecipeComponentParameterArrayOutput) ToGetImageRecipeComponentParameterArrayOutputWithContext(ctx context.Context) GetImageRecipeComponentParameterArrayOutput {
	return o
}

func (o GetImageRecipeComponentParameterArrayOutput) Index(i pulumi.IntInput) GetImageRecipeComponentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageRecipeComponentParameter {
		return vs[0].([]GetImageRecipeComponentParameter)[vs[1].(int)]
	}).(GetImageRecipeComponentParameterOutput)
}

type GetImageRecipesFilter struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListImageRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImageRecipes.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetImageRecipesFilterInput is an input type that accepts GetImageRecipesFilterArgs and GetImageRecipesFilterOutput values.
// You can construct a concrete instance of `GetImageRecipesFilterInput` via:
//
//          GetImageRecipesFilterArgs{...}
type GetImageRecipesFilterInput interface {
	pulumi.Input

	ToGetImageRecipesFilterOutput() GetImageRecipesFilterOutput
	ToGetImageRecipesFilterOutputWithContext(context.Context) GetImageRecipesFilterOutput
}

type GetImageRecipesFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListImageRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImageRecipes.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImageRecipesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipesFilter)(nil)).Elem()
}

func (i GetImageRecipesFilterArgs) ToGetImageRecipesFilterOutput() GetImageRecipesFilterOutput {
	return i.ToGetImageRecipesFilterOutputWithContext(context.Background())
}

func (i GetImageRecipesFilterArgs) ToGetImageRecipesFilterOutputWithContext(ctx context.Context) GetImageRecipesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipesFilterOutput)
}

// GetImageRecipesFilterArrayInput is an input type that accepts GetImageRecipesFilterArray and GetImageRecipesFilterArrayOutput values.
// You can construct a concrete instance of `GetImageRecipesFilterArrayInput` via:
//
//          GetImageRecipesFilterArray{ GetImageRecipesFilterArgs{...} }
type GetImageRecipesFilterArrayInput interface {
	pulumi.Input

	ToGetImageRecipesFilterArrayOutput() GetImageRecipesFilterArrayOutput
	ToGetImageRecipesFilterArrayOutputWithContext(context.Context) GetImageRecipesFilterArrayOutput
}

type GetImageRecipesFilterArray []GetImageRecipesFilterInput

func (GetImageRecipesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipesFilter)(nil)).Elem()
}

func (i GetImageRecipesFilterArray) ToGetImageRecipesFilterArrayOutput() GetImageRecipesFilterArrayOutput {
	return i.ToGetImageRecipesFilterArrayOutputWithContext(context.Background())
}

func (i GetImageRecipesFilterArray) ToGetImageRecipesFilterArrayOutputWithContext(ctx context.Context) GetImageRecipesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageRecipesFilterArrayOutput)
}

type GetImageRecipesFilterOutput struct{ *pulumi.OutputState }

func (GetImageRecipesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageRecipesFilter)(nil)).Elem()
}

func (o GetImageRecipesFilterOutput) ToGetImageRecipesFilterOutput() GetImageRecipesFilterOutput {
	return o
}

func (o GetImageRecipesFilterOutput) ToGetImageRecipesFilterOutputWithContext(ctx context.Context) GetImageRecipesFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [Image Builder ListImageRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImageRecipes.html).
func (o GetImageRecipesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageRecipesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetImageRecipesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageRecipesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImageRecipesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImageRecipesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageRecipesFilter)(nil)).Elem()
}

func (o GetImageRecipesFilterArrayOutput) ToGetImageRecipesFilterArrayOutput() GetImageRecipesFilterArrayOutput {
	return o
}

func (o GetImageRecipesFilterArrayOutput) ToGetImageRecipesFilterArrayOutputWithContext(ctx context.Context) GetImageRecipesFilterArrayOutput {
	return o
}

func (o GetImageRecipesFilterArrayOutput) Index(i pulumi.IntInput) GetImageRecipesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageRecipesFilter {
		return vs[0].([]GetImageRecipesFilter)[vs[1].(int)]
	}).(GetImageRecipesFilterOutput)
}

type GetInfrastructureConfigurationInstanceMetadataOption struct {
	// Number of hops that an instance can traverse to reach its destonation.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// Whether a signed token is required for instance metadata retrieval requests.
	HttpTokens string `pulumi:"httpTokens"`
}

// GetInfrastructureConfigurationInstanceMetadataOptionInput is an input type that accepts GetInfrastructureConfigurationInstanceMetadataOptionArgs and GetInfrastructureConfigurationInstanceMetadataOptionOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationInstanceMetadataOptionInput` via:
//
//          GetInfrastructureConfigurationInstanceMetadataOptionArgs{...}
type GetInfrastructureConfigurationInstanceMetadataOptionInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationInstanceMetadataOptionOutput() GetInfrastructureConfigurationInstanceMetadataOptionOutput
	ToGetInfrastructureConfigurationInstanceMetadataOptionOutputWithContext(context.Context) GetInfrastructureConfigurationInstanceMetadataOptionOutput
}

type GetInfrastructureConfigurationInstanceMetadataOptionArgs struct {
	// Number of hops that an instance can traverse to reach its destonation.
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// Whether a signed token is required for instance metadata retrieval requests.
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (GetInfrastructureConfigurationInstanceMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationInstanceMetadataOption)(nil)).Elem()
}

func (i GetInfrastructureConfigurationInstanceMetadataOptionArgs) ToGetInfrastructureConfigurationInstanceMetadataOptionOutput() GetInfrastructureConfigurationInstanceMetadataOptionOutput {
	return i.ToGetInfrastructureConfigurationInstanceMetadataOptionOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationInstanceMetadataOptionArgs) ToGetInfrastructureConfigurationInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInfrastructureConfigurationInstanceMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationInstanceMetadataOptionOutput)
}

// GetInfrastructureConfigurationInstanceMetadataOptionArrayInput is an input type that accepts GetInfrastructureConfigurationInstanceMetadataOptionArray and GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationInstanceMetadataOptionArrayInput` via:
//
//          GetInfrastructureConfigurationInstanceMetadataOptionArray{ GetInfrastructureConfigurationInstanceMetadataOptionArgs{...} }
type GetInfrastructureConfigurationInstanceMetadataOptionArrayInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationInstanceMetadataOptionArrayOutput() GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput
	ToGetInfrastructureConfigurationInstanceMetadataOptionArrayOutputWithContext(context.Context) GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput
}

type GetInfrastructureConfigurationInstanceMetadataOptionArray []GetInfrastructureConfigurationInstanceMetadataOptionInput

func (GetInfrastructureConfigurationInstanceMetadataOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationInstanceMetadataOption)(nil)).Elem()
}

func (i GetInfrastructureConfigurationInstanceMetadataOptionArray) ToGetInfrastructureConfigurationInstanceMetadataOptionArrayOutput() GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput {
	return i.ToGetInfrastructureConfigurationInstanceMetadataOptionArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationInstanceMetadataOptionArray) ToGetInfrastructureConfigurationInstanceMetadataOptionArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput)
}

type GetInfrastructureConfigurationInstanceMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationInstanceMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationInstanceMetadataOption)(nil)).Elem()
}

func (o GetInfrastructureConfigurationInstanceMetadataOptionOutput) ToGetInfrastructureConfigurationInstanceMetadataOptionOutput() GetInfrastructureConfigurationInstanceMetadataOptionOutput {
	return o
}

func (o GetInfrastructureConfigurationInstanceMetadataOptionOutput) ToGetInfrastructureConfigurationInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInfrastructureConfigurationInstanceMetadataOptionOutput {
	return o
}

// Number of hops that an instance can traverse to reach its destonation.
func (o GetInfrastructureConfigurationInstanceMetadataOptionOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationInstanceMetadataOption) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// Whether a signed token is required for instance metadata retrieval requests.
func (o GetInfrastructureConfigurationInstanceMetadataOptionOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationInstanceMetadataOption) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationInstanceMetadataOption)(nil)).Elem()
}

func (o GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput) ToGetInfrastructureConfigurationInstanceMetadataOptionArrayOutput() GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput) ToGetInfrastructureConfigurationInstanceMetadataOptionArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput) Index(i pulumi.IntInput) GetInfrastructureConfigurationInstanceMetadataOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureConfigurationInstanceMetadataOption {
		return vs[0].([]GetInfrastructureConfigurationInstanceMetadataOption)[vs[1].(int)]
	}).(GetInfrastructureConfigurationInstanceMetadataOptionOutput)
}

type GetInfrastructureConfigurationLogging struct {
	// Nested list of S3 logs settings.
	S3Logs []GetInfrastructureConfigurationLoggingS3Log `pulumi:"s3Logs"`
}

// GetInfrastructureConfigurationLoggingInput is an input type that accepts GetInfrastructureConfigurationLoggingArgs and GetInfrastructureConfigurationLoggingOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingInput` via:
//
//          GetInfrastructureConfigurationLoggingArgs{...}
type GetInfrastructureConfigurationLoggingInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingOutput() GetInfrastructureConfigurationLoggingOutput
	ToGetInfrastructureConfigurationLoggingOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingOutput
}

type GetInfrastructureConfigurationLoggingArgs struct {
	// Nested list of S3 logs settings.
	S3Logs GetInfrastructureConfigurationLoggingS3LogArrayInput `pulumi:"s3Logs"`
}

func (GetInfrastructureConfigurationLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingArgs) ToGetInfrastructureConfigurationLoggingOutput() GetInfrastructureConfigurationLoggingOutput {
	return i.ToGetInfrastructureConfigurationLoggingOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingArgs) ToGetInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingOutput)
}

// GetInfrastructureConfigurationLoggingArrayInput is an input type that accepts GetInfrastructureConfigurationLoggingArray and GetInfrastructureConfigurationLoggingArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingArrayInput` via:
//
//          GetInfrastructureConfigurationLoggingArray{ GetInfrastructureConfigurationLoggingArgs{...} }
type GetInfrastructureConfigurationLoggingArrayInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingArrayOutput() GetInfrastructureConfigurationLoggingArrayOutput
	ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingArrayOutput
}

type GetInfrastructureConfigurationLoggingArray []GetInfrastructureConfigurationLoggingInput

func (GetInfrastructureConfigurationLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingArray) ToGetInfrastructureConfigurationLoggingArrayOutput() GetInfrastructureConfigurationLoggingArrayOutput {
	return i.ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingArray) ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingArrayOutput)
}

type GetInfrastructureConfigurationLoggingOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingOutput) ToGetInfrastructureConfigurationLoggingOutput() GetInfrastructureConfigurationLoggingOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingOutput) ToGetInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingOutput {
	return o
}

// Nested list of S3 logs settings.
func (o GetInfrastructureConfigurationLoggingOutput) S3Logs() GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationLogging) []GetInfrastructureConfigurationLoggingS3Log {
		return v.S3Logs
	}).(GetInfrastructureConfigurationLoggingS3LogArrayOutput)
}

type GetInfrastructureConfigurationLoggingArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingArrayOutput) ToGetInfrastructureConfigurationLoggingArrayOutput() GetInfrastructureConfigurationLoggingArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingArrayOutput) ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingArrayOutput) Index(i pulumi.IntInput) GetInfrastructureConfigurationLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureConfigurationLogging {
		return vs[0].([]GetInfrastructureConfigurationLogging)[vs[1].(int)]
	}).(GetInfrastructureConfigurationLoggingOutput)
}

type GetInfrastructureConfigurationLoggingS3Log struct {
	// Name of the S3 Bucket for logging.
	S3BucketName string `pulumi:"s3BucketName"`
	// Key prefix for S3 Bucket logging.
	S3KeyPrefix string `pulumi:"s3KeyPrefix"`
}

// GetInfrastructureConfigurationLoggingS3LogInput is an input type that accepts GetInfrastructureConfigurationLoggingS3LogArgs and GetInfrastructureConfigurationLoggingS3LogOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingS3LogInput` via:
//
//          GetInfrastructureConfigurationLoggingS3LogArgs{...}
type GetInfrastructureConfigurationLoggingS3LogInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingS3LogOutput() GetInfrastructureConfigurationLoggingS3LogOutput
	ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingS3LogOutput
}

type GetInfrastructureConfigurationLoggingS3LogArgs struct {
	// Name of the S3 Bucket for logging.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// Key prefix for S3 Bucket logging.
	S3KeyPrefix pulumi.StringInput `pulumi:"s3KeyPrefix"`
}

func (GetInfrastructureConfigurationLoggingS3LogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingS3LogArgs) ToGetInfrastructureConfigurationLoggingS3LogOutput() GetInfrastructureConfigurationLoggingS3LogOutput {
	return i.ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingS3LogArgs) ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingS3LogOutput)
}

// GetInfrastructureConfigurationLoggingS3LogArrayInput is an input type that accepts GetInfrastructureConfigurationLoggingS3LogArray and GetInfrastructureConfigurationLoggingS3LogArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingS3LogArrayInput` via:
//
//          GetInfrastructureConfigurationLoggingS3LogArray{ GetInfrastructureConfigurationLoggingS3LogArgs{...} }
type GetInfrastructureConfigurationLoggingS3LogArrayInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingS3LogArrayOutput() GetInfrastructureConfigurationLoggingS3LogArrayOutput
	ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingS3LogArrayOutput
}

type GetInfrastructureConfigurationLoggingS3LogArray []GetInfrastructureConfigurationLoggingS3LogInput

func (GetInfrastructureConfigurationLoggingS3LogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingS3LogArray) ToGetInfrastructureConfigurationLoggingS3LogArrayOutput() GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return i.ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingS3LogArray) ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingS3LogArrayOutput)
}

type GetInfrastructureConfigurationLoggingS3LogOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingS3LogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingS3LogOutput) ToGetInfrastructureConfigurationLoggingS3LogOutput() GetInfrastructureConfigurationLoggingS3LogOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingS3LogOutput) ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogOutput {
	return o
}

// Name of the S3 Bucket for logging.
func (o GetInfrastructureConfigurationLoggingS3LogOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationLoggingS3Log) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// Key prefix for S3 Bucket logging.
func (o GetInfrastructureConfigurationLoggingS3LogOutput) S3KeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationLoggingS3Log) string { return v.S3KeyPrefix }).(pulumi.StringOutput)
}

type GetInfrastructureConfigurationLoggingS3LogArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingS3LogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingS3LogArrayOutput) ToGetInfrastructureConfigurationLoggingS3LogArrayOutput() GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingS3LogArrayOutput) ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingS3LogArrayOutput) Index(i pulumi.IntInput) GetInfrastructureConfigurationLoggingS3LogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureConfigurationLoggingS3Log {
		return vs[0].([]GetInfrastructureConfigurationLoggingS3Log)[vs[1].(int)]
	}).(GetInfrastructureConfigurationLoggingS3LogOutput)
}

type GetInfrastructureConfigurationsFilter struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListInfrastructureConfigurations API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListInfrastructureConfigurations.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetInfrastructureConfigurationsFilterInput is an input type that accepts GetInfrastructureConfigurationsFilterArgs and GetInfrastructureConfigurationsFilterOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationsFilterInput` via:
//
//          GetInfrastructureConfigurationsFilterArgs{...}
type GetInfrastructureConfigurationsFilterInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationsFilterOutput() GetInfrastructureConfigurationsFilterOutput
	ToGetInfrastructureConfigurationsFilterOutputWithContext(context.Context) GetInfrastructureConfigurationsFilterOutput
}

type GetInfrastructureConfigurationsFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [Image Builder ListInfrastructureConfigurations API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListInfrastructureConfigurations.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInfrastructureConfigurationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationsFilter)(nil)).Elem()
}

func (i GetInfrastructureConfigurationsFilterArgs) ToGetInfrastructureConfigurationsFilterOutput() GetInfrastructureConfigurationsFilterOutput {
	return i.ToGetInfrastructureConfigurationsFilterOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationsFilterArgs) ToGetInfrastructureConfigurationsFilterOutputWithContext(ctx context.Context) GetInfrastructureConfigurationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationsFilterOutput)
}

// GetInfrastructureConfigurationsFilterArrayInput is an input type that accepts GetInfrastructureConfigurationsFilterArray and GetInfrastructureConfigurationsFilterArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationsFilterArrayInput` via:
//
//          GetInfrastructureConfigurationsFilterArray{ GetInfrastructureConfigurationsFilterArgs{...} }
type GetInfrastructureConfigurationsFilterArrayInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationsFilterArrayOutput() GetInfrastructureConfigurationsFilterArrayOutput
	ToGetInfrastructureConfigurationsFilterArrayOutputWithContext(context.Context) GetInfrastructureConfigurationsFilterArrayOutput
}

type GetInfrastructureConfigurationsFilterArray []GetInfrastructureConfigurationsFilterInput

func (GetInfrastructureConfigurationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationsFilter)(nil)).Elem()
}

func (i GetInfrastructureConfigurationsFilterArray) ToGetInfrastructureConfigurationsFilterArrayOutput() GetInfrastructureConfigurationsFilterArrayOutput {
	return i.ToGetInfrastructureConfigurationsFilterArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationsFilterArray) ToGetInfrastructureConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationsFilterArrayOutput)
}

type GetInfrastructureConfigurationsFilterOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationsFilter)(nil)).Elem()
}

func (o GetInfrastructureConfigurationsFilterOutput) ToGetInfrastructureConfigurationsFilterOutput() GetInfrastructureConfigurationsFilterOutput {
	return o
}

func (o GetInfrastructureConfigurationsFilterOutput) ToGetInfrastructureConfigurationsFilterOutputWithContext(ctx context.Context) GetInfrastructureConfigurationsFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [Image Builder ListInfrastructureConfigurations API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListInfrastructureConfigurations.html).
func (o GetInfrastructureConfigurationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetInfrastructureConfigurationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInfrastructureConfigurationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationsFilter)(nil)).Elem()
}

func (o GetInfrastructureConfigurationsFilterArrayOutput) ToGetInfrastructureConfigurationsFilterArrayOutput() GetInfrastructureConfigurationsFilterArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationsFilterArrayOutput) ToGetInfrastructureConfigurationsFilterArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationsFilterArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationsFilterArrayOutput) Index(i pulumi.IntInput) GetInfrastructureConfigurationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureConfigurationsFilter {
		return vs[0].([]GetInfrastructureConfigurationsFilter)[vs[1].(int)]
	}).(GetInfrastructureConfigurationsFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeComponentInput)(nil)).Elem(), ContainerRecipeComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeComponentArrayInput)(nil)).Elem(), ContainerRecipeComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeComponentParameterInput)(nil)).Elem(), ContainerRecipeComponentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeComponentParameterArrayInput)(nil)).Elem(), ContainerRecipeComponentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeInstanceConfigurationInput)(nil)).Elem(), ContainerRecipeInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeInstanceConfigurationPtrInput)(nil)).Elem(), ContainerRecipeInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMappingInput)(nil)).Elem(), ContainerRecipeInstanceConfigurationBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput)(nil)).Elem(), ContainerRecipeInstanceConfigurationBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsInput)(nil)).Elem(), ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrInput)(nil)).Elem(), ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeTargetRepositoryInput)(nil)).Elem(), ContainerRecipeTargetRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeTargetRepositoryPtrInput)(nil)).Elem(), ContainerRecipeTargetRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionInput)(nil)).Elem(), DistributionConfigurationDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionArrayInput)(nil)).Elem(), DistributionConfigurationDistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationInput)(nil)).Elem(), DistributionConfigurationDistributionAmiDistributionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput)(nil)).Elem(), DistributionConfigurationDistributionAmiDistributionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput)(nil)).Elem(), DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput)(nil)).Elem(), DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfigurationInput)(nil)).Elem(), DistributionConfigurationDistributionContainerDistributionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfigurationPtrInput)(nil)).Elem(), DistributionConfigurationDistributionContainerDistributionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput)(nil)).Elem(), DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrInput)(nil)).Elem(), DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionLaunchTemplateConfigurationInput)(nil)).Elem(), DistributionConfigurationDistributionLaunchTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput)(nil)).Elem(), DistributionConfigurationDistributionLaunchTemplateConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageImageTestsConfigurationInput)(nil)).Elem(), ImageImageTestsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageImageTestsConfigurationPtrInput)(nil)).Elem(), ImageImageTestsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageOutputResourceInput)(nil)).Elem(), ImageOutputResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageOutputResourceArrayInput)(nil)).Elem(), ImageOutputResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageOutputResourceAmiInput)(nil)).Elem(), ImageOutputResourceAmiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageOutputResourceAmiArrayInput)(nil)).Elem(), ImageOutputResourceAmiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePipelineImageTestsConfigurationInput)(nil)).Elem(), ImagePipelineImageTestsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePipelineImageTestsConfigurationPtrInput)(nil)).Elem(), ImagePipelineImageTestsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePipelineScheduleInput)(nil)).Elem(), ImagePipelineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImagePipelineSchedulePtrInput)(nil)).Elem(), ImagePipelineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeBlockDeviceMappingInput)(nil)).Elem(), ImageRecipeBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeBlockDeviceMappingArrayInput)(nil)).Elem(), ImageRecipeBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeBlockDeviceMappingEbsInput)(nil)).Elem(), ImageRecipeBlockDeviceMappingEbsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeBlockDeviceMappingEbsPtrInput)(nil)).Elem(), ImageRecipeBlockDeviceMappingEbsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeComponentInput)(nil)).Elem(), ImageRecipeComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeComponentArrayInput)(nil)).Elem(), ImageRecipeComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeComponentParameterInput)(nil)).Elem(), ImageRecipeComponentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeComponentParameterArrayInput)(nil)).Elem(), ImageRecipeComponentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeSystemsManagerAgentInput)(nil)).Elem(), ImageRecipeSystemsManagerAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageRecipeSystemsManagerAgentPtrInput)(nil)).Elem(), ImageRecipeSystemsManagerAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureConfigurationInstanceMetadataOptionsInput)(nil)).Elem(), InfrastructureConfigurationInstanceMetadataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureConfigurationInstanceMetadataOptionsPtrInput)(nil)).Elem(), InfrastructureConfigurationInstanceMetadataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureConfigurationLoggingInput)(nil)).Elem(), InfrastructureConfigurationLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureConfigurationLoggingPtrInput)(nil)).Elem(), InfrastructureConfigurationLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureConfigurationLoggingS3LogsInput)(nil)).Elem(), InfrastructureConfigurationLoggingS3LogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfrastructureConfigurationLoggingS3LogsPtrInput)(nil)).Elem(), InfrastructureConfigurationLoggingS3LogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsFilterInput)(nil)).Elem(), GetComponentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentsFilterArrayInput)(nil)).Elem(), GetComponentsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeComponentInput)(nil)).Elem(), GetContainerRecipeComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeComponentArrayInput)(nil)).Elem(), GetContainerRecipeComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeComponentParameterInput)(nil)).Elem(), GetContainerRecipeComponentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeComponentParameterArrayInput)(nil)).Elem(), GetContainerRecipeComponentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeInstanceConfigurationInput)(nil)).Elem(), GetContainerRecipeInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeInstanceConfigurationArrayInput)(nil)).Elem(), GetContainerRecipeInstanceConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMappingInput)(nil)).Elem(), GetContainerRecipeInstanceConfigurationBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayInput)(nil)).Elem(), GetContainerRecipeInstanceConfigurationBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbInput)(nil)).Elem(), GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayInput)(nil)).Elem(), GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeTargetRepositoryInput)(nil)).Elem(), GetContainerRecipeTargetRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipeTargetRepositoryArrayInput)(nil)).Elem(), GetContainerRecipeTargetRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipesFilterInput)(nil)).Elem(), GetContainerRecipesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRecipesFilterArrayInput)(nil)).Elem(), GetContainerRecipesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionInput)(nil)).Elem(), GetDistributionConfigurationDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionArrayInput)(nil)).Elem(), GetDistributionConfigurationDistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationInput)(nil)).Elem(), GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput)(nil)).Elem(), GetDistributionConfigurationDistributionAmiDistributionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput)(nil)).Elem(), GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput)(nil)).Elem(), GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfigurationInput)(nil)).Elem(), GetDistributionConfigurationDistributionContainerDistributionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayInput)(nil)).Elem(), GetDistributionConfigurationDistributionContainerDistributionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryInput)(nil)).Elem(), GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayInput)(nil)).Elem(), GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionLaunchTemplateConfigurationInput)(nil)).Elem(), GetDistributionConfigurationDistributionLaunchTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayInput)(nil)).Elem(), GetDistributionConfigurationDistributionLaunchTemplateConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationsFilterInput)(nil)).Elem(), GetDistributionConfigurationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionConfigurationsFilterArrayInput)(nil)).Elem(), GetDistributionConfigurationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageImageTestsConfigurationInput)(nil)).Elem(), GetImageImageTestsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageImageTestsConfigurationArrayInput)(nil)).Elem(), GetImageImageTestsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageOutputResourceInput)(nil)).Elem(), GetImageOutputResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageOutputResourceArrayInput)(nil)).Elem(), GetImageOutputResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageOutputResourceAmiInput)(nil)).Elem(), GetImageOutputResourceAmiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageOutputResourceAmiArrayInput)(nil)).Elem(), GetImageOutputResourceAmiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePipelineImageTestsConfigurationInput)(nil)).Elem(), GetImagePipelineImageTestsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePipelineImageTestsConfigurationArrayInput)(nil)).Elem(), GetImagePipelineImageTestsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePipelineScheduleInput)(nil)).Elem(), GetImagePipelineScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePipelineScheduleArrayInput)(nil)).Elem(), GetImagePipelineScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePipelinesFilterInput)(nil)).Elem(), GetImagePipelinesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagePipelinesFilterArrayInput)(nil)).Elem(), GetImagePipelinesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeBlockDeviceMappingInput)(nil)).Elem(), GetImageRecipeBlockDeviceMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeBlockDeviceMappingArrayInput)(nil)).Elem(), GetImageRecipeBlockDeviceMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeBlockDeviceMappingEbInput)(nil)).Elem(), GetImageRecipeBlockDeviceMappingEbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeBlockDeviceMappingEbArrayInput)(nil)).Elem(), GetImageRecipeBlockDeviceMappingEbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeComponentInput)(nil)).Elem(), GetImageRecipeComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeComponentArrayInput)(nil)).Elem(), GetImageRecipeComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeComponentParameterInput)(nil)).Elem(), GetImageRecipeComponentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipeComponentParameterArrayInput)(nil)).Elem(), GetImageRecipeComponentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipesFilterInput)(nil)).Elem(), GetImageRecipesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImageRecipesFilterArrayInput)(nil)).Elem(), GetImageRecipesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationInstanceMetadataOptionInput)(nil)).Elem(), GetInfrastructureConfigurationInstanceMetadataOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationInstanceMetadataOptionArrayInput)(nil)).Elem(), GetInfrastructureConfigurationInstanceMetadataOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationLoggingInput)(nil)).Elem(), GetInfrastructureConfigurationLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationLoggingArrayInput)(nil)).Elem(), GetInfrastructureConfigurationLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationLoggingS3LogInput)(nil)).Elem(), GetInfrastructureConfigurationLoggingS3LogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationLoggingS3LogArrayInput)(nil)).Elem(), GetInfrastructureConfigurationLoggingS3LogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationsFilterInput)(nil)).Elem(), GetInfrastructureConfigurationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInfrastructureConfigurationsFilterArrayInput)(nil)).Elem(), GetInfrastructureConfigurationsFilterArray{})
	pulumi.RegisterOutputType(ContainerRecipeComponentOutput{})
	pulumi.RegisterOutputType(ContainerRecipeComponentArrayOutput{})
	pulumi.RegisterOutputType(ContainerRecipeComponentParameterOutput{})
	pulumi.RegisterOutputType(ContainerRecipeComponentParameterArrayOutput{})
	pulumi.RegisterOutputType(ContainerRecipeInstanceConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerRecipeInstanceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ContainerRecipeInstanceConfigurationBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(ContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsOutput{})
	pulumi.RegisterOutputType(ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsPtrOutput{})
	pulumi.RegisterOutputType(ContainerRecipeTargetRepositoryOutput{})
	pulumi.RegisterOutputType(ContainerRecipeTargetRepositoryPtrOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionArrayOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionContainerDistributionConfigurationOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionContainerDistributionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryPtrOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionLaunchTemplateConfigurationOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ImageImageTestsConfigurationOutput{})
	pulumi.RegisterOutputType(ImageImageTestsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ImageOutputResourceOutput{})
	pulumi.RegisterOutputType(ImageOutputResourceArrayOutput{})
	pulumi.RegisterOutputType(ImageOutputResourceAmiOutput{})
	pulumi.RegisterOutputType(ImageOutputResourceAmiArrayOutput{})
	pulumi.RegisterOutputType(ImagePipelineImageTestsConfigurationOutput{})
	pulumi.RegisterOutputType(ImagePipelineImageTestsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ImagePipelineScheduleOutput{})
	pulumi.RegisterOutputType(ImagePipelineSchedulePtrOutput{})
	pulumi.RegisterOutputType(ImageRecipeBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(ImageRecipeBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(ImageRecipeBlockDeviceMappingEbsOutput{})
	pulumi.RegisterOutputType(ImageRecipeBlockDeviceMappingEbsPtrOutput{})
	pulumi.RegisterOutputType(ImageRecipeComponentOutput{})
	pulumi.RegisterOutputType(ImageRecipeComponentArrayOutput{})
	pulumi.RegisterOutputType(ImageRecipeComponentParameterOutput{})
	pulumi.RegisterOutputType(ImageRecipeComponentParameterArrayOutput{})
	pulumi.RegisterOutputType(ImageRecipeSystemsManagerAgentOutput{})
	pulumi.RegisterOutputType(ImageRecipeSystemsManagerAgentPtrOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationInstanceMetadataOptionsOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationInstanceMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingPtrOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingS3LogsOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingS3LogsPtrOutput{})
	pulumi.RegisterOutputType(GetComponentsFilterOutput{})
	pulumi.RegisterOutputType(GetComponentsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeComponentOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeComponentArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeComponentParameterOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeComponentParameterArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeInstanceConfigurationOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeInstanceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeInstanceConfigurationBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeInstanceConfigurationBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeInstanceConfigurationBlockDeviceMappingEbArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeTargetRepositoryOutput{})
	pulumi.RegisterOutputType(GetContainerRecipeTargetRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRecipesFilterOutput{})
	pulumi.RegisterOutputType(GetContainerRecipesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionContainerDistributionConfigurationOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionContainerDistributionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionContainerDistributionConfigurationTargetRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionLaunchTemplateConfigurationOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionLaunchTemplateConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationsFilterOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImageImageTestsConfigurationOutput{})
	pulumi.RegisterOutputType(GetImageImageTestsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetImageOutputResourceOutput{})
	pulumi.RegisterOutputType(GetImageOutputResourceArrayOutput{})
	pulumi.RegisterOutputType(GetImageOutputResourceAmiOutput{})
	pulumi.RegisterOutputType(GetImageOutputResourceAmiArrayOutput{})
	pulumi.RegisterOutputType(GetImagePipelineImageTestsConfigurationOutput{})
	pulumi.RegisterOutputType(GetImagePipelineImageTestsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetImagePipelineScheduleOutput{})
	pulumi.RegisterOutputType(GetImagePipelineScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetImagePipelinesFilterOutput{})
	pulumi.RegisterOutputType(GetImagePipelinesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImageRecipeBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetImageRecipeBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetImageRecipeBlockDeviceMappingEbOutput{})
	pulumi.RegisterOutputType(GetImageRecipeBlockDeviceMappingEbArrayOutput{})
	pulumi.RegisterOutputType(GetImageRecipeComponentOutput{})
	pulumi.RegisterOutputType(GetImageRecipeComponentArrayOutput{})
	pulumi.RegisterOutputType(GetImageRecipeComponentParameterOutput{})
	pulumi.RegisterOutputType(GetImageRecipeComponentParameterArrayOutput{})
	pulumi.RegisterOutputType(GetImageRecipesFilterOutput{})
	pulumi.RegisterOutputType(GetImageRecipesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationInstanceMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationInstanceMetadataOptionArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingS3LogOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingS3LogArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationsFilterOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationsFilterArrayOutput{})
}
