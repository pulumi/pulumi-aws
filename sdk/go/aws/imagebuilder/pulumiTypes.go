// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DistributionConfigurationDistribution struct {
	// Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
	AmiDistributionConfiguration *DistributionConfigurationDistributionAmiDistributionConfiguration `pulumi:"amiDistributionConfiguration"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns []string `pulumi:"licenseConfigurationArns"`
	// AWS Region for the distribution.
	Region string `pulumi:"region"`
}

// DistributionConfigurationDistributionInput is an input type that accepts DistributionConfigurationDistributionArgs and DistributionConfigurationDistributionOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionInput` via:
//
//          DistributionConfigurationDistributionArgs{...}
type DistributionConfigurationDistributionInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionOutput() DistributionConfigurationDistributionOutput
	ToDistributionConfigurationDistributionOutputWithContext(context.Context) DistributionConfigurationDistributionOutput
}

type DistributionConfigurationDistributionArgs struct {
	// Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
	AmiDistributionConfiguration DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput `pulumi:"amiDistributionConfiguration"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns pulumi.StringArrayInput `pulumi:"licenseConfigurationArns"`
	// AWS Region for the distribution.
	Region pulumi.StringInput `pulumi:"region"`
}

func (DistributionConfigurationDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistribution)(nil)).Elem()
}

func (i DistributionConfigurationDistributionArgs) ToDistributionConfigurationDistributionOutput() DistributionConfigurationDistributionOutput {
	return i.ToDistributionConfigurationDistributionOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionArgs) ToDistributionConfigurationDistributionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionOutput)
}

// DistributionConfigurationDistributionArrayInput is an input type that accepts DistributionConfigurationDistributionArray and DistributionConfigurationDistributionArrayOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionArrayInput` via:
//
//          DistributionConfigurationDistributionArray{ DistributionConfigurationDistributionArgs{...} }
type DistributionConfigurationDistributionArrayInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionArrayOutput() DistributionConfigurationDistributionArrayOutput
	ToDistributionConfigurationDistributionArrayOutputWithContext(context.Context) DistributionConfigurationDistributionArrayOutput
}

type DistributionConfigurationDistributionArray []DistributionConfigurationDistributionInput

func (DistributionConfigurationDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionConfigurationDistribution)(nil)).Elem()
}

func (i DistributionConfigurationDistributionArray) ToDistributionConfigurationDistributionArrayOutput() DistributionConfigurationDistributionArrayOutput {
	return i.ToDistributionConfigurationDistributionArrayOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionArray) ToDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) DistributionConfigurationDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionArrayOutput)
}

type DistributionConfigurationDistributionOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistribution)(nil)).Elem()
}

func (o DistributionConfigurationDistributionOutput) ToDistributionConfigurationDistributionOutput() DistributionConfigurationDistributionOutput {
	return o
}

func (o DistributionConfigurationDistributionOutput) ToDistributionConfigurationDistributionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionOutput {
	return o
}

// Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
func (o DistributionConfigurationDistributionOutput) AmiDistributionConfiguration() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) *DistributionConfigurationDistributionAmiDistributionConfiguration {
		return v.AmiDistributionConfiguration
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput)
}

// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
func (o DistributionConfigurationDistributionOutput) LicenseConfigurationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) []string { return v.LicenseConfigurationArns }).(pulumi.StringArrayOutput)
}

// AWS Region for the distribution.
func (o DistributionConfigurationDistributionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionConfigurationDistribution) string { return v.Region }).(pulumi.StringOutput)
}

type DistributionConfigurationDistributionArrayOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionConfigurationDistribution)(nil)).Elem()
}

func (o DistributionConfigurationDistributionArrayOutput) ToDistributionConfigurationDistributionArrayOutput() DistributionConfigurationDistributionArrayOutput {
	return o
}

func (o DistributionConfigurationDistributionArrayOutput) ToDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) DistributionConfigurationDistributionArrayOutput {
	return o
}

func (o DistributionConfigurationDistributionArrayOutput) Index(i pulumi.IntInput) DistributionConfigurationDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionConfigurationDistribution {
		return vs[0].([]DistributionConfigurationDistribution)[vs[1].(int)]
	}).(DistributionConfigurationDistributionOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfiguration struct {
	// Key-value map of tags to apply to the distributed AMI.
	AmiTags map[string]string `pulumi:"amiTags"`
	// Description to apply to the distributed AMI.
	Description *string `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
	LaunchPermission *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission `pulumi:"launchPermission"`
	// Name to apply to the distributed AMI.
	Name *string `pulumi:"name"`
	// Set of AWS Account identifiers to distribute the AMI.
	TargetAccountIds []string `pulumi:"targetAccountIds"`
}

// DistributionConfigurationDistributionAmiDistributionConfigurationInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationArgs and DistributionConfigurationDistributionAmiDistributionConfigurationOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationArgs{...}
type DistributionConfigurationDistributionAmiDistributionConfigurationInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationOutput() DistributionConfigurationDistributionAmiDistributionConfigurationOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationOutput
}

type DistributionConfigurationDistributionAmiDistributionConfigurationArgs struct {
	// Key-value map of tags to apply to the distributed AMI.
	AmiTags pulumi.StringMapInput `pulumi:"amiTags"`
	// Description to apply to the distributed AMI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
	LaunchPermission DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput `pulumi:"launchPermission"`
	// Name to apply to the distributed AMI.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Set of AWS Account identifiers to distribute the AMI.
	TargetAccountIds pulumi.StringArrayInput `pulumi:"targetAccountIds"`
}

func (DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutput() DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationOutput).ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx)
}

// DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationArgs, DistributionConfigurationDistributionAmiDistributionConfigurationPtr and DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationArgs{...}
//
//  or:
//
//          nil
type DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput
}

type distributionConfigurationDistributionAmiDistributionConfigurationPtrType DistributionConfigurationDistributionAmiDistributionConfigurationArgs

func DistributionConfigurationDistributionAmiDistributionConfigurationPtr(v *DistributionConfigurationDistributionAmiDistributionConfigurationArgs) DistributionConfigurationDistributionAmiDistributionConfigurationPtrInput {
	return (*distributionConfigurationDistributionAmiDistributionConfigurationPtrType)(v)
}

func (*distributionConfigurationDistributionAmiDistributionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutput() DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o.ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *DistributionConfigurationDistributionAmiDistributionConfiguration {
		return &v
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput)
}

// Key-value map of tags to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) AmiTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) map[string]string {
		return v.AmiTags
	}).(pulumi.StringMapOutput)
}

// Description to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) LaunchPermission() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return v.LaunchPermission
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

// Name to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Set of AWS Account identifiers to distribute the AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationOutput) TargetAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfiguration) []string {
		return v.TargetAccountIds
	}).(pulumi.StringArrayOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) Elem() DistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) DistributionConfigurationDistributionAmiDistributionConfiguration {
		return *v
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

// Key-value map of tags to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) AmiTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.AmiTags
	}).(pulumi.StringMapOutput)
}

// Description to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) LaunchPermission() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		if v == nil {
			return nil
		}
		return v.LaunchPermission
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

// Name to apply to the distributed AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Set of AWS Account identifiers to distribute the AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput) TargetAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.TargetAccountIds
	}).(pulumi.StringArrayOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission struct {
	// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
	UserGroups []string `pulumi:"userGroups"`
	// Set of AWS Account identifiers to assign.
	UserIds []string `pulumi:"userIds"`
}

// DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs and DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...}
type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs struct {
	// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
	UserGroups pulumi.StringArrayInput `pulumi:"userGroups"`
	// Set of AWS Account identifiers to assign.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
}

func (DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Background())
}

func (i DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput).ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx)
}

// DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput is an input type that accepts DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs, DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtr and DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput values.
// You can construct a concrete instance of `DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput` via:
//
//          DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...}
//
//  or:
//
//          nil
type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput interface {
	pulumi.Input

	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput
	ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput
}

type distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs

func DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtr(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrInput {
	return (*distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType)(v)
}

func (*distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return i.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Background())
}

func (i *distributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrType) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(context.Background())
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return &v
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput)
}

// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserGroups
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Account identifiers to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

type DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) ToDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutputWithContext(ctx context.Context) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput {
	return o
}

func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) Elem() DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return *v
	}).(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

// Set of EC2 launch permission user groups to assign. Use `all` to distribute a public AMI.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) UserGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		if v == nil {
			return nil
		}
		return v.UserGroups
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Account identifiers to assign.
func (o DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		if v == nil {
			return nil
		}
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

type InfrastructureConfigurationLogging struct {
	// Configuration block with S3 logging settings. Detailed below.
	S3Logs InfrastructureConfigurationLoggingS3Logs `pulumi:"s3Logs"`
}

// InfrastructureConfigurationLoggingInput is an input type that accepts InfrastructureConfigurationLoggingArgs and InfrastructureConfigurationLoggingOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingInput` via:
//
//          InfrastructureConfigurationLoggingArgs{...}
type InfrastructureConfigurationLoggingInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingOutput() InfrastructureConfigurationLoggingOutput
	ToInfrastructureConfigurationLoggingOutputWithContext(context.Context) InfrastructureConfigurationLoggingOutput
}

type InfrastructureConfigurationLoggingArgs struct {
	// Configuration block with S3 logging settings. Detailed below.
	S3Logs InfrastructureConfigurationLoggingS3LogsInput `pulumi:"s3Logs"`
}

func (InfrastructureConfigurationLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLogging)(nil)).Elem()
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingOutput() InfrastructureConfigurationLoggingOutput {
	return i.ToInfrastructureConfigurationLoggingOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingOutput)
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return i.ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingArgs) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingOutput).ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx)
}

// InfrastructureConfigurationLoggingPtrInput is an input type that accepts InfrastructureConfigurationLoggingArgs, InfrastructureConfigurationLoggingPtr and InfrastructureConfigurationLoggingPtrOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingPtrInput` via:
//
//          InfrastructureConfigurationLoggingArgs{...}
//
//  or:
//
//          nil
type InfrastructureConfigurationLoggingPtrInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput
	ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Context) InfrastructureConfigurationLoggingPtrOutput
}

type infrastructureConfigurationLoggingPtrType InfrastructureConfigurationLoggingArgs

func InfrastructureConfigurationLoggingPtr(v *InfrastructureConfigurationLoggingArgs) InfrastructureConfigurationLoggingPtrInput {
	return (*infrastructureConfigurationLoggingPtrType)(v)
}

func (*infrastructureConfigurationLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLogging)(nil)).Elem()
}

func (i *infrastructureConfigurationLoggingPtrType) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return i.ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Background())
}

func (i *infrastructureConfigurationLoggingPtrType) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingPtrOutput)
}

type InfrastructureConfigurationLoggingOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLogging)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingOutput() InfrastructureConfigurationLoggingOutput {
	return o
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingOutput {
	return o
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return o.ToInfrastructureConfigurationLoggingPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationLoggingOutput) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLogging) *InfrastructureConfigurationLogging {
		return &v
	}).(InfrastructureConfigurationLoggingPtrOutput)
}

// Configuration block with S3 logging settings. Detailed below.
func (o InfrastructureConfigurationLoggingOutput) S3Logs() InfrastructureConfigurationLoggingS3LogsOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLogging) InfrastructureConfigurationLoggingS3Logs { return v.S3Logs }).(InfrastructureConfigurationLoggingS3LogsOutput)
}

type InfrastructureConfigurationLoggingPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLogging)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingPtrOutput) ToInfrastructureConfigurationLoggingPtrOutput() InfrastructureConfigurationLoggingPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingPtrOutput) ToInfrastructureConfigurationLoggingPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingPtrOutput) Elem() InfrastructureConfigurationLoggingOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLogging) InfrastructureConfigurationLogging { return *v }).(InfrastructureConfigurationLoggingOutput)
}

// Configuration block with S3 logging settings. Detailed below.
func (o InfrastructureConfigurationLoggingPtrOutput) S3Logs() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLogging) *InfrastructureConfigurationLoggingS3Logs {
		if v == nil {
			return nil
		}
		return &v.S3Logs
	}).(InfrastructureConfigurationLoggingS3LogsPtrOutput)
}

type InfrastructureConfigurationLoggingS3Logs struct {
	// Name of the S3 Bucket.
	S3BucketName string `pulumi:"s3BucketName"`
	// Prefix to use for S3 logs. Defaults to `/`.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// InfrastructureConfigurationLoggingS3LogsInput is an input type that accepts InfrastructureConfigurationLoggingS3LogsArgs and InfrastructureConfigurationLoggingS3LogsOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingS3LogsInput` via:
//
//          InfrastructureConfigurationLoggingS3LogsArgs{...}
type InfrastructureConfigurationLoggingS3LogsInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingS3LogsOutput() InfrastructureConfigurationLoggingS3LogsOutput
	ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(context.Context) InfrastructureConfigurationLoggingS3LogsOutput
}

type InfrastructureConfigurationLoggingS3LogsArgs struct {
	// Name of the S3 Bucket.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// Prefix to use for S3 logs. Defaults to `/`.
	S3KeyPrefix pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
}

func (InfrastructureConfigurationLoggingS3LogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsOutput() InfrastructureConfigurationLoggingS3LogsOutput {
	return i.ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingS3LogsOutput)
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return i.ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Background())
}

func (i InfrastructureConfigurationLoggingS3LogsArgs) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingS3LogsOutput).ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx)
}

// InfrastructureConfigurationLoggingS3LogsPtrInput is an input type that accepts InfrastructureConfigurationLoggingS3LogsArgs, InfrastructureConfigurationLoggingS3LogsPtr and InfrastructureConfigurationLoggingS3LogsPtrOutput values.
// You can construct a concrete instance of `InfrastructureConfigurationLoggingS3LogsPtrInput` via:
//
//          InfrastructureConfigurationLoggingS3LogsArgs{...}
//
//  or:
//
//          nil
type InfrastructureConfigurationLoggingS3LogsPtrInput interface {
	pulumi.Input

	ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput
	ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput
}

type infrastructureConfigurationLoggingS3LogsPtrType InfrastructureConfigurationLoggingS3LogsArgs

func InfrastructureConfigurationLoggingS3LogsPtr(v *InfrastructureConfigurationLoggingS3LogsArgs) InfrastructureConfigurationLoggingS3LogsPtrInput {
	return (*infrastructureConfigurationLoggingS3LogsPtrType)(v)
}

func (*infrastructureConfigurationLoggingS3LogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (i *infrastructureConfigurationLoggingS3LogsPtrType) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return i.ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Background())
}

func (i *infrastructureConfigurationLoggingS3LogsPtrType) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfrastructureConfigurationLoggingS3LogsPtrOutput)
}

type InfrastructureConfigurationLoggingS3LogsOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingS3LogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsOutput() InfrastructureConfigurationLoggingS3LogsOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o.ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(context.Background())
}

func (o InfrastructureConfigurationLoggingS3LogsOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLoggingS3Logs) *InfrastructureConfigurationLoggingS3Logs {
		return &v
	}).(InfrastructureConfigurationLoggingS3LogsPtrOutput)
}

// Name of the S3 Bucket.
func (o InfrastructureConfigurationLoggingS3LogsOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLoggingS3Logs) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// Prefix to use for S3 logs. Defaults to `/`.
func (o InfrastructureConfigurationLoggingS3LogsOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfrastructureConfigurationLoggingS3Logs) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type InfrastructureConfigurationLoggingS3LogsPtrOutput struct{ *pulumi.OutputState }

func (InfrastructureConfigurationLoggingS3LogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfrastructureConfigurationLoggingS3Logs)(nil)).Elem()
}

func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutput() InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) ToInfrastructureConfigurationLoggingS3LogsPtrOutputWithContext(ctx context.Context) InfrastructureConfigurationLoggingS3LogsPtrOutput {
	return o
}

func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) Elem() InfrastructureConfigurationLoggingS3LogsOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLoggingS3Logs) InfrastructureConfigurationLoggingS3Logs { return *v }).(InfrastructureConfigurationLoggingS3LogsOutput)
}

// Name of the S3 Bucket.
func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLoggingS3Logs) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// Prefix to use for S3 logs. Defaults to `/`.
func (o InfrastructureConfigurationLoggingS3LogsPtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfrastructureConfigurationLoggingS3Logs) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

type GetDistributionConfigurationDistribution struct {
	// Nested list of AMI distribution configuration.
	AmiDistributionConfigurations []GetDistributionConfigurationDistributionAmiDistributionConfiguration `pulumi:"amiDistributionConfigurations"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns []string `pulumi:"licenseConfigurationArns"`
	// AWS Region of distribution.
	Region string `pulumi:"region"`
}

// GetDistributionConfigurationDistributionInput is an input type that accepts GetDistributionConfigurationDistributionArgs and GetDistributionConfigurationDistributionOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionInput` via:
//
//          GetDistributionConfigurationDistributionArgs{...}
type GetDistributionConfigurationDistributionInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionOutput() GetDistributionConfigurationDistributionOutput
	ToGetDistributionConfigurationDistributionOutputWithContext(context.Context) GetDistributionConfigurationDistributionOutput
}

type GetDistributionConfigurationDistributionArgs struct {
	// Nested list of AMI distribution configuration.
	AmiDistributionConfigurations GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput `pulumi:"amiDistributionConfigurations"`
	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	LicenseConfigurationArns pulumi.StringArrayInput `pulumi:"licenseConfigurationArns"`
	// AWS Region of distribution.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetDistributionConfigurationDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionArgs) ToGetDistributionConfigurationDistributionOutput() GetDistributionConfigurationDistributionOutput {
	return i.ToGetDistributionConfigurationDistributionOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionArgs) ToGetDistributionConfigurationDistributionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionOutput)
}

// GetDistributionConfigurationDistributionArrayInput is an input type that accepts GetDistributionConfigurationDistributionArray and GetDistributionConfigurationDistributionArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionArrayInput` via:
//
//          GetDistributionConfigurationDistributionArray{ GetDistributionConfigurationDistributionArgs{...} }
type GetDistributionConfigurationDistributionArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionArrayOutput() GetDistributionConfigurationDistributionArrayOutput
	ToGetDistributionConfigurationDistributionArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionArrayOutput
}

type GetDistributionConfigurationDistributionArray []GetDistributionConfigurationDistributionInput

func (GetDistributionConfigurationDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionArray) ToGetDistributionConfigurationDistributionArrayOutput() GetDistributionConfigurationDistributionArrayOutput {
	return i.ToGetDistributionConfigurationDistributionArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionArray) ToGetDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionArrayOutput)
}

type GetDistributionConfigurationDistributionOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionOutput) ToGetDistributionConfigurationDistributionOutput() GetDistributionConfigurationDistributionOutput {
	return o
}

func (o GetDistributionConfigurationDistributionOutput) ToGetDistributionConfigurationDistributionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionOutput {
	return o
}

// Nested list of AMI distribution configuration.
func (o GetDistributionConfigurationDistributionOutput) AmiDistributionConfigurations() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) []GetDistributionConfigurationDistributionAmiDistributionConfiguration {
		return v.AmiDistributionConfigurations
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput)
}

// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
func (o GetDistributionConfigurationDistributionOutput) LicenseConfigurationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) []string { return v.LicenseConfigurationArns }).(pulumi.StringArrayOutput)
}

// AWS Region of distribution.
func (o GetDistributionConfigurationDistributionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistribution) string { return v.Region }).(pulumi.StringOutput)
}

type GetDistributionConfigurationDistributionArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistribution)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionArrayOutput) ToGetDistributionConfigurationDistributionArrayOutput() GetDistributionConfigurationDistributionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionArrayOutput) ToGetDistributionConfigurationDistributionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistribution {
		return vs[0].([]GetDistributionConfigurationDistribution)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfiguration struct {
	// Key-value map of tags to apply to distributed AMI.
	AmiTags map[string]string `pulumi:"amiTags"`
	// Description to apply to distributed AMI.
	Description string `pulumi:"description"`
	// Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// Nested list of EC2 launch permissions.
	LaunchPermissions []GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission `pulumi:"launchPermissions"`
	// Name of the distribution configuration.
	Name string `pulumi:"name"`
	// Set of target AWS Account identifiers.
	TargetAccountIds []string `pulumi:"targetAccountIds"`
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs and GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs{...}
type GetDistributionConfigurationDistributionAmiDistributionConfigurationInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs struct {
	// Key-value map of tags to apply to distributed AMI.
	AmiTags pulumi.StringMapInput `pulumi:"amiTags"`
	// Description to apply to distributed AMI.
	Description pulumi.StringInput `pulumi:"description"`
	// Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// Nested list of EC2 launch permissions.
	LaunchPermissions GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput `pulumi:"launchPermissions"`
	// Name of the distribution configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of target AWS Account identifiers.
	TargetAccountIds pulumi.StringArrayInput `pulumi:"targetAccountIds"`
}

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationArray and GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationArray{ GetDistributionConfigurationDistributionAmiDistributionConfigurationArgs{...} }
type GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationArray []GetDistributionConfigurationDistributionAmiDistributionConfigurationInput

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return o
}

// Key-value map of tags to apply to distributed AMI.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) AmiTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) map[string]string {
		return v.AmiTags
	}).(pulumi.StringMapOutput)
}

// Description to apply to distributed AMI.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) string {
		return v.Description
	}).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Nested list of EC2 launch permissions.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) LaunchPermissions() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) []GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return v.LaunchPermissions
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput)
}

// Name of the distribution configuration.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Set of target AWS Account identifiers.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput) TargetAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfiguration) []string {
		return v.TargetAccountIds
	}).(pulumi.StringArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfiguration)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistributionAmiDistributionConfiguration {
		return vs[0].([]GetDistributionConfigurationDistributionAmiDistributionConfiguration)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission struct {
	// Set of EC2 launch permission user groups.
	UserGroups []string `pulumi:"userGroups"`
	// Set of AWS Account identifiers.
	UserIds []string `pulumi:"userIds"`
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs and GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...}
type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs struct {
	// Set of EC2 launch permission user groups.
	UserGroups pulumi.StringArrayInput `pulumi:"userGroups"`
	// Set of AWS Account identifiers.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
}

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

// GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput is an input type that accepts GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray and GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput values.
// You can construct a concrete instance of `GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput` via:
//
//          GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray{ GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs{...} }
type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayInput interface {
	pulumi.Input

	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput
	ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray []GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionInput

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return i.ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(context.Background())
}

func (i GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArray) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return o
}

// Set of EC2 launch permission user groups.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserGroups
	}).(pulumi.StringArrayOutput)
}

// Set of AWS Account identifiers.
func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission) []string {
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

type GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)(nil)).Elem()
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput() GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) ToGetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutputWithContext(ctx context.Context) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput {
	return o
}

func (o GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput) Index(i pulumi.IntInput) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission {
		return vs[0].([]GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermission)[vs[1].(int)]
	}).(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput)
}

type GetInfrastructureConfigurationLogging struct {
	// Nested list of S3 logs settings.
	S3Logs []GetInfrastructureConfigurationLoggingS3Log `pulumi:"s3Logs"`
}

// GetInfrastructureConfigurationLoggingInput is an input type that accepts GetInfrastructureConfigurationLoggingArgs and GetInfrastructureConfigurationLoggingOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingInput` via:
//
//          GetInfrastructureConfigurationLoggingArgs{...}
type GetInfrastructureConfigurationLoggingInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingOutput() GetInfrastructureConfigurationLoggingOutput
	ToGetInfrastructureConfigurationLoggingOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingOutput
}

type GetInfrastructureConfigurationLoggingArgs struct {
	// Nested list of S3 logs settings.
	S3Logs GetInfrastructureConfigurationLoggingS3LogArrayInput `pulumi:"s3Logs"`
}

func (GetInfrastructureConfigurationLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingArgs) ToGetInfrastructureConfigurationLoggingOutput() GetInfrastructureConfigurationLoggingOutput {
	return i.ToGetInfrastructureConfigurationLoggingOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingArgs) ToGetInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingOutput)
}

// GetInfrastructureConfigurationLoggingArrayInput is an input type that accepts GetInfrastructureConfigurationLoggingArray and GetInfrastructureConfigurationLoggingArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingArrayInput` via:
//
//          GetInfrastructureConfigurationLoggingArray{ GetInfrastructureConfigurationLoggingArgs{...} }
type GetInfrastructureConfigurationLoggingArrayInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingArrayOutput() GetInfrastructureConfigurationLoggingArrayOutput
	ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingArrayOutput
}

type GetInfrastructureConfigurationLoggingArray []GetInfrastructureConfigurationLoggingInput

func (GetInfrastructureConfigurationLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingArray) ToGetInfrastructureConfigurationLoggingArrayOutput() GetInfrastructureConfigurationLoggingArrayOutput {
	return i.ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingArray) ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingArrayOutput)
}

type GetInfrastructureConfigurationLoggingOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingOutput) ToGetInfrastructureConfigurationLoggingOutput() GetInfrastructureConfigurationLoggingOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingOutput) ToGetInfrastructureConfigurationLoggingOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingOutput {
	return o
}

// Nested list of S3 logs settings.
func (o GetInfrastructureConfigurationLoggingOutput) S3Logs() GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationLogging) []GetInfrastructureConfigurationLoggingS3Log {
		return v.S3Logs
	}).(GetInfrastructureConfigurationLoggingS3LogArrayOutput)
}

type GetInfrastructureConfigurationLoggingArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLogging)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingArrayOutput) ToGetInfrastructureConfigurationLoggingArrayOutput() GetInfrastructureConfigurationLoggingArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingArrayOutput) ToGetInfrastructureConfigurationLoggingArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingArrayOutput) Index(i pulumi.IntInput) GetInfrastructureConfigurationLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureConfigurationLogging {
		return vs[0].([]GetInfrastructureConfigurationLogging)[vs[1].(int)]
	}).(GetInfrastructureConfigurationLoggingOutput)
}

type GetInfrastructureConfigurationLoggingS3Log struct {
	// Name of the S3 Bucket for logging.
	S3BucketName string `pulumi:"s3BucketName"`
	// Key prefix for S3 Bucket logging.
	S3KeyPrefix string `pulumi:"s3KeyPrefix"`
}

// GetInfrastructureConfigurationLoggingS3LogInput is an input type that accepts GetInfrastructureConfigurationLoggingS3LogArgs and GetInfrastructureConfigurationLoggingS3LogOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingS3LogInput` via:
//
//          GetInfrastructureConfigurationLoggingS3LogArgs{...}
type GetInfrastructureConfigurationLoggingS3LogInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingS3LogOutput() GetInfrastructureConfigurationLoggingS3LogOutput
	ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingS3LogOutput
}

type GetInfrastructureConfigurationLoggingS3LogArgs struct {
	// Name of the S3 Bucket for logging.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// Key prefix for S3 Bucket logging.
	S3KeyPrefix pulumi.StringInput `pulumi:"s3KeyPrefix"`
}

func (GetInfrastructureConfigurationLoggingS3LogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingS3LogArgs) ToGetInfrastructureConfigurationLoggingS3LogOutput() GetInfrastructureConfigurationLoggingS3LogOutput {
	return i.ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingS3LogArgs) ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingS3LogOutput)
}

// GetInfrastructureConfigurationLoggingS3LogArrayInput is an input type that accepts GetInfrastructureConfigurationLoggingS3LogArray and GetInfrastructureConfigurationLoggingS3LogArrayOutput values.
// You can construct a concrete instance of `GetInfrastructureConfigurationLoggingS3LogArrayInput` via:
//
//          GetInfrastructureConfigurationLoggingS3LogArray{ GetInfrastructureConfigurationLoggingS3LogArgs{...} }
type GetInfrastructureConfigurationLoggingS3LogArrayInput interface {
	pulumi.Input

	ToGetInfrastructureConfigurationLoggingS3LogArrayOutput() GetInfrastructureConfigurationLoggingS3LogArrayOutput
	ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(context.Context) GetInfrastructureConfigurationLoggingS3LogArrayOutput
}

type GetInfrastructureConfigurationLoggingS3LogArray []GetInfrastructureConfigurationLoggingS3LogInput

func (GetInfrastructureConfigurationLoggingS3LogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (i GetInfrastructureConfigurationLoggingS3LogArray) ToGetInfrastructureConfigurationLoggingS3LogArrayOutput() GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return i.ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(context.Background())
}

func (i GetInfrastructureConfigurationLoggingS3LogArray) ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInfrastructureConfigurationLoggingS3LogArrayOutput)
}

type GetInfrastructureConfigurationLoggingS3LogOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingS3LogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingS3LogOutput) ToGetInfrastructureConfigurationLoggingS3LogOutput() GetInfrastructureConfigurationLoggingS3LogOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingS3LogOutput) ToGetInfrastructureConfigurationLoggingS3LogOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogOutput {
	return o
}

// Name of the S3 Bucket for logging.
func (o GetInfrastructureConfigurationLoggingS3LogOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationLoggingS3Log) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// Key prefix for S3 Bucket logging.
func (o GetInfrastructureConfigurationLoggingS3LogOutput) S3KeyPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInfrastructureConfigurationLoggingS3Log) string { return v.S3KeyPrefix }).(pulumi.StringOutput)
}

type GetInfrastructureConfigurationLoggingS3LogArrayOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationLoggingS3LogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInfrastructureConfigurationLoggingS3Log)(nil)).Elem()
}

func (o GetInfrastructureConfigurationLoggingS3LogArrayOutput) ToGetInfrastructureConfigurationLoggingS3LogArrayOutput() GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingS3LogArrayOutput) ToGetInfrastructureConfigurationLoggingS3LogArrayOutputWithContext(ctx context.Context) GetInfrastructureConfigurationLoggingS3LogArrayOutput {
	return o
}

func (o GetInfrastructureConfigurationLoggingS3LogArrayOutput) Index(i pulumi.IntInput) GetInfrastructureConfigurationLoggingS3LogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInfrastructureConfigurationLoggingS3Log {
		return vs[0].([]GetInfrastructureConfigurationLoggingS3Log)[vs[1].(int)]
	}).(GetInfrastructureConfigurationLoggingS3LogOutput)
}

func init() {
	pulumi.RegisterOutputType(DistributionConfigurationDistributionOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionArrayOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput{})
	pulumi.RegisterOutputType(DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionPtrOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingPtrOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingS3LogsOutput{})
	pulumi.RegisterOutputType(InfrastructureConfigurationLoggingS3LogsPtrOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionOutput{})
	pulumi.RegisterOutputType(GetDistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingArrayOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingS3LogOutput{})
	pulumi.RegisterOutputType(GetInfrastructureConfigurationLoggingS3LogArrayOutput{})
}
