// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about an Image Builder Image Pipeline.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/imagebuilder"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := imagebuilder.LookupImagePipeline(ctx, &imagebuilder.LookupImagePipelineArgs{
//				Arn: "arn:aws:imagebuilder:us-west-2:aws:image-pipeline/example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupImagePipeline(ctx *pulumi.Context, args *LookupImagePipelineArgs, opts ...pulumi.InvokeOption) (*LookupImagePipelineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImagePipelineResult
	err := ctx.Invoke("aws:imagebuilder/getImagePipeline:getImagePipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImagePipeline.
type LookupImagePipelineArgs struct {
	// ARN of the image pipeline.
	Arn string `pulumi:"arn"`
	// Key-value map of resource tags for the image pipeline.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getImagePipeline.
type LookupImagePipelineResult struct {
	Arn string `pulumi:"arn"`
	// ARN of the container recipe.
	ContainerRecipeArn *string `pulumi:"containerRecipeArn"`
	// Date the image pipeline was created.
	DateCreated *string `pulumi:"dateCreated"`
	// Date the image pipeline was last run.
	DateLastRun *string `pulumi:"dateLastRun"`
	// Date the image pipeline will run next.
	DateNextRun *string `pulumi:"dateNextRun"`
	// Date the image pipeline was updated.
	DateUpdated *string `pulumi:"dateUpdated"`
	// Description of the image pipeline.
	Description *string `pulumi:"description"`
	// ARN of the Image Builder Distribution Configuration.
	DistributionConfigurationArn *string `pulumi:"distributionConfigurationArn"`
	// Whether additional information about the image being created is collected.
	EnhancedImageMetadataEnabled *bool `pulumi:"enhancedImageMetadataEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// ARN of the image recipe.
	ImageRecipeArn              *string                                      `pulumi:"imageRecipeArn"`
	ImageScanningConfigurations []GetImagePipelineImageScanningConfiguration `pulumi:"imageScanningConfigurations"`
	// List of an object with image tests configuration.
	ImageTestsConfigurations []GetImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfigurations"`
	// ARN of the Image Builder Infrastructure Configuration.
	InfrastructureConfigurationArn *string `pulumi:"infrastructureConfigurationArn"`
	// Name of the image pipeline.
	Name *string `pulumi:"name"`
	// Platform of the image pipeline.
	Platform *string `pulumi:"platform"`
	// List of an object with schedule settings.
	Schedules []GetImagePipelineSchedule `pulumi:"schedules"`
	// Status of the image pipeline.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags for the image pipeline.
	Tags map[string]string `pulumi:"tags"`
}

func LookupImagePipelineOutput(ctx *pulumi.Context, args LookupImagePipelineOutputArgs, opts ...pulumi.InvokeOption) LookupImagePipelineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImagePipelineResult, error) {
			args := v.(LookupImagePipelineArgs)
			r, err := LookupImagePipeline(ctx, &args, opts...)
			var s LookupImagePipelineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImagePipelineResultOutput)
}

// A collection of arguments for invoking getImagePipeline.
type LookupImagePipelineOutputArgs struct {
	// ARN of the image pipeline.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Key-value map of resource tags for the image pipeline.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupImagePipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImagePipelineArgs)(nil)).Elem()
}

// A collection of values returned by getImagePipeline.
type LookupImagePipelineResultOutput struct{ *pulumi.OutputState }

func (LookupImagePipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImagePipelineResult)(nil)).Elem()
}

func (o LookupImagePipelineResultOutput) ToLookupImagePipelineResultOutput() LookupImagePipelineResultOutput {
	return o
}

func (o LookupImagePipelineResultOutput) ToLookupImagePipelineResultOutputWithContext(ctx context.Context) LookupImagePipelineResultOutput {
	return o
}

func (o LookupImagePipelineResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.Arn }).(pulumi.StringOutput)
}

// ARN of the container recipe.
func (o LookupImagePipelineResultOutput) ContainerRecipeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.ContainerRecipeArn }).(pulumi.StringPtrOutput)
}

// Date the image pipeline was created.
func (o LookupImagePipelineResultOutput) DateCreated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.DateCreated }).(pulumi.StringPtrOutput)
}

// Date the image pipeline was last run.
func (o LookupImagePipelineResultOutput) DateLastRun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.DateLastRun }).(pulumi.StringPtrOutput)
}

// Date the image pipeline will run next.
func (o LookupImagePipelineResultOutput) DateNextRun() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.DateNextRun }).(pulumi.StringPtrOutput)
}

// Date the image pipeline was updated.
func (o LookupImagePipelineResultOutput) DateUpdated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.DateUpdated }).(pulumi.StringPtrOutput)
}

// Description of the image pipeline.
func (o LookupImagePipelineResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// ARN of the Image Builder Distribution Configuration.
func (o LookupImagePipelineResultOutput) DistributionConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.DistributionConfigurationArn }).(pulumi.StringPtrOutput)
}

// Whether additional information about the image being created is collected.
func (o LookupImagePipelineResultOutput) EnhancedImageMetadataEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *bool { return v.EnhancedImageMetadataEnabled }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImagePipelineResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// ARN of the image recipe.
func (o LookupImagePipelineResultOutput) ImageRecipeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.ImageRecipeArn }).(pulumi.StringPtrOutput)
}

func (o LookupImagePipelineResultOutput) ImageScanningConfigurations() GetImagePipelineImageScanningConfigurationArrayOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) []GetImagePipelineImageScanningConfiguration {
		return v.ImageScanningConfigurations
	}).(GetImagePipelineImageScanningConfigurationArrayOutput)
}

// List of an object with image tests configuration.
func (o LookupImagePipelineResultOutput) ImageTestsConfigurations() GetImagePipelineImageTestsConfigurationArrayOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) []GetImagePipelineImageTestsConfiguration {
		return v.ImageTestsConfigurations
	}).(GetImagePipelineImageTestsConfigurationArrayOutput)
}

// ARN of the Image Builder Infrastructure Configuration.
func (o LookupImagePipelineResultOutput) InfrastructureConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.InfrastructureConfigurationArn }).(pulumi.StringPtrOutput)
}

// Name of the image pipeline.
func (o LookupImagePipelineResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Platform of the image pipeline.
func (o LookupImagePipelineResultOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// List of an object with schedule settings.
func (o LookupImagePipelineResultOutput) Schedules() GetImagePipelineScheduleArrayOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) []GetImagePipelineSchedule { return v.Schedules }).(GetImagePipelineScheduleArrayOutput)
}

// Status of the image pipeline.
func (o LookupImagePipelineResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Key-value map of resource tags for the image pipeline.
func (o LookupImagePipelineResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImagePipelineResultOutput{})
}
