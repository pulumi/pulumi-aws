// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupImagePipeline(ctx *pulumi.Context, args *LookupImagePipelineArgs, opts ...pulumi.InvokeOption) (*LookupImagePipelineResult, error) {
	var rv LookupImagePipelineResult
	err := ctx.Invoke("aws:imagebuilder/getImagePipeline:getImagePipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImagePipeline.
type LookupImagePipelineArgs struct {
	Arn  string            `pulumi:"arn"`
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getImagePipeline.
type LookupImagePipelineResult struct {
	Arn                          string `pulumi:"arn"`
	ContainerRecipeArn           string `pulumi:"containerRecipeArn"`
	DateCreated                  string `pulumi:"dateCreated"`
	DateLastRun                  string `pulumi:"dateLastRun"`
	DateNextRun                  string `pulumi:"dateNextRun"`
	DateUpdated                  string `pulumi:"dateUpdated"`
	Description                  string `pulumi:"description"`
	DistributionConfigurationArn string `pulumi:"distributionConfigurationArn"`
	EnhancedImageMetadataEnabled bool   `pulumi:"enhancedImageMetadataEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id                             string                                    `pulumi:"id"`
	ImageRecipeArn                 string                                    `pulumi:"imageRecipeArn"`
	ImageTestsConfigurations       []GetImagePipelineImageTestsConfiguration `pulumi:"imageTestsConfigurations"`
	InfrastructureConfigurationArn string                                    `pulumi:"infrastructureConfigurationArn"`
	Name                           string                                    `pulumi:"name"`
	Platform                       string                                    `pulumi:"platform"`
	Schedules                      []GetImagePipelineSchedule                `pulumi:"schedules"`
	Status                         string                                    `pulumi:"status"`
	Tags                           map[string]string                         `pulumi:"tags"`
}

func LookupImagePipelineOutput(ctx *pulumi.Context, args LookupImagePipelineOutputArgs, opts ...pulumi.InvokeOption) LookupImagePipelineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImagePipelineResult, error) {
			args := v.(LookupImagePipelineArgs)
			r, err := LookupImagePipeline(ctx, &args, opts...)
			var s LookupImagePipelineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImagePipelineResultOutput)
}

// A collection of arguments for invoking getImagePipeline.
type LookupImagePipelineOutputArgs struct {
	Arn  pulumi.StringInput    `pulumi:"arn"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupImagePipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImagePipelineArgs)(nil)).Elem()
}

// A collection of values returned by getImagePipeline.
type LookupImagePipelineResultOutput struct{ *pulumi.OutputState }

func (LookupImagePipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImagePipelineResult)(nil)).Elem()
}

func (o LookupImagePipelineResultOutput) ToLookupImagePipelineResultOutput() LookupImagePipelineResultOutput {
	return o
}

func (o LookupImagePipelineResultOutput) ToLookupImagePipelineResultOutputWithContext(ctx context.Context) LookupImagePipelineResultOutput {
	return o
}

func (o LookupImagePipelineResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) ContainerRecipeArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.ContainerRecipeArn }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) DateLastRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.DateLastRun }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) DateNextRun() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.DateNextRun }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) DateUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.DateUpdated }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) DistributionConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.DistributionConfigurationArn }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) EnhancedImageMetadataEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) bool { return v.EnhancedImageMetadataEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImagePipelineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) ImageRecipeArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.ImageRecipeArn }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) ImageTestsConfigurations() GetImagePipelineImageTestsConfigurationArrayOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) []GetImagePipelineImageTestsConfiguration {
		return v.ImageTestsConfigurations
	}).(GetImagePipelineImageTestsConfigurationArrayOutput)
}

func (o LookupImagePipelineResultOutput) InfrastructureConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.InfrastructureConfigurationArn }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.Platform }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) Schedules() GetImagePipelineScheduleArrayOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) []GetImagePipelineSchedule { return v.Schedules }).(GetImagePipelineScheduleArrayOutput)
}

func (o LookupImagePipelineResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupImagePipelineResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImagePipelineResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImagePipelineResultOutput{})
}
