// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContainerRecipe struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput                           `pulumi:"arn"`
	Components             ContainerRecipeComponentArrayOutput           `pulumi:"components"`
	ContainerType          pulumi.StringOutput                           `pulumi:"containerType"`
	DateCreated            pulumi.StringOutput                           `pulumi:"dateCreated"`
	Description            pulumi.StringPtrOutput                        `pulumi:"description"`
	DockerfileTemplateData pulumi.StringOutput                           `pulumi:"dockerfileTemplateData"`
	DockerfileTemplateUri  pulumi.StringPtrOutput                        `pulumi:"dockerfileTemplateUri"`
	Encrypted              pulumi.BoolOutput                             `pulumi:"encrypted"`
	InstanceConfiguration  ContainerRecipeInstanceConfigurationPtrOutput `pulumi:"instanceConfiguration"`
	KmsKeyId               pulumi.StringPtrOutput                        `pulumi:"kmsKeyId"`
	Name                   pulumi.StringOutput                           `pulumi:"name"`
	Owner                  pulumi.StringOutput                           `pulumi:"owner"`
	ParentImage            pulumi.StringOutput                           `pulumi:"parentImage"`
	Platform               pulumi.StringOutput                           `pulumi:"platform"`
	Tags                   pulumi.StringMapOutput                        `pulumi:"tags"`
	TagsAll                pulumi.StringMapOutput                        `pulumi:"tagsAll"`
	TargetRepository       ContainerRecipeTargetRepositoryOutput         `pulumi:"targetRepository"`
	Version                pulumi.StringOutput                           `pulumi:"version"`
	WorkingDirectory       pulumi.StringPtrOutput                        `pulumi:"workingDirectory"`
}

// NewContainerRecipe registers a new resource with the given unique name, arguments, and options.
func NewContainerRecipe(ctx *pulumi.Context,
	name string, args *ContainerRecipeArgs, opts ...pulumi.ResourceOption) (*ContainerRecipe, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Components == nil {
		return nil, errors.New("invalid value for required argument 'Components'")
	}
	if args.ContainerType == nil {
		return nil, errors.New("invalid value for required argument 'ContainerType'")
	}
	if args.ParentImage == nil {
		return nil, errors.New("invalid value for required argument 'ParentImage'")
	}
	if args.TargetRepository == nil {
		return nil, errors.New("invalid value for required argument 'TargetRepository'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource ContainerRecipe
	err := ctx.RegisterResource("aws:imagebuilder/containerRecipe:ContainerRecipe", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerRecipe gets an existing ContainerRecipe resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerRecipe(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerRecipeState, opts ...pulumi.ResourceOption) (*ContainerRecipe, error) {
	var resource ContainerRecipe
	err := ctx.ReadResource("aws:imagebuilder/containerRecipe:ContainerRecipe", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerRecipe resources.
type containerRecipeState struct {
	Arn                    *string                               `pulumi:"arn"`
	Components             []ContainerRecipeComponent            `pulumi:"components"`
	ContainerType          *string                               `pulumi:"containerType"`
	DateCreated            *string                               `pulumi:"dateCreated"`
	Description            *string                               `pulumi:"description"`
	DockerfileTemplateData *string                               `pulumi:"dockerfileTemplateData"`
	DockerfileTemplateUri  *string                               `pulumi:"dockerfileTemplateUri"`
	Encrypted              *bool                                 `pulumi:"encrypted"`
	InstanceConfiguration  *ContainerRecipeInstanceConfiguration `pulumi:"instanceConfiguration"`
	KmsKeyId               *string                               `pulumi:"kmsKeyId"`
	Name                   *string                               `pulumi:"name"`
	Owner                  *string                               `pulumi:"owner"`
	ParentImage            *string                               `pulumi:"parentImage"`
	Platform               *string                               `pulumi:"platform"`
	Tags                   map[string]string                     `pulumi:"tags"`
	TagsAll                map[string]string                     `pulumi:"tagsAll"`
	TargetRepository       *ContainerRecipeTargetRepository      `pulumi:"targetRepository"`
	Version                *string                               `pulumi:"version"`
	WorkingDirectory       *string                               `pulumi:"workingDirectory"`
}

type ContainerRecipeState struct {
	Arn                    pulumi.StringPtrInput
	Components             ContainerRecipeComponentArrayInput
	ContainerType          pulumi.StringPtrInput
	DateCreated            pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	DockerfileTemplateData pulumi.StringPtrInput
	DockerfileTemplateUri  pulumi.StringPtrInput
	Encrypted              pulumi.BoolPtrInput
	InstanceConfiguration  ContainerRecipeInstanceConfigurationPtrInput
	KmsKeyId               pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	Owner                  pulumi.StringPtrInput
	ParentImage            pulumi.StringPtrInput
	Platform               pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TagsAll                pulumi.StringMapInput
	TargetRepository       ContainerRecipeTargetRepositoryPtrInput
	Version                pulumi.StringPtrInput
	WorkingDirectory       pulumi.StringPtrInput
}

func (ContainerRecipeState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRecipeState)(nil)).Elem()
}

type containerRecipeArgs struct {
	Components             []ContainerRecipeComponent            `pulumi:"components"`
	ContainerType          string                                `pulumi:"containerType"`
	Description            *string                               `pulumi:"description"`
	DockerfileTemplateData *string                               `pulumi:"dockerfileTemplateData"`
	DockerfileTemplateUri  *string                               `pulumi:"dockerfileTemplateUri"`
	InstanceConfiguration  *ContainerRecipeInstanceConfiguration `pulumi:"instanceConfiguration"`
	KmsKeyId               *string                               `pulumi:"kmsKeyId"`
	Name                   *string                               `pulumi:"name"`
	ParentImage            string                                `pulumi:"parentImage"`
	Tags                   map[string]string                     `pulumi:"tags"`
	TargetRepository       ContainerRecipeTargetRepository       `pulumi:"targetRepository"`
	Version                string                                `pulumi:"version"`
	WorkingDirectory       *string                               `pulumi:"workingDirectory"`
}

// The set of arguments for constructing a ContainerRecipe resource.
type ContainerRecipeArgs struct {
	Components             ContainerRecipeComponentArrayInput
	ContainerType          pulumi.StringInput
	Description            pulumi.StringPtrInput
	DockerfileTemplateData pulumi.StringPtrInput
	DockerfileTemplateUri  pulumi.StringPtrInput
	InstanceConfiguration  ContainerRecipeInstanceConfigurationPtrInput
	KmsKeyId               pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	ParentImage            pulumi.StringInput
	Tags                   pulumi.StringMapInput
	TargetRepository       ContainerRecipeTargetRepositoryInput
	Version                pulumi.StringInput
	WorkingDirectory       pulumi.StringPtrInput
}

func (ContainerRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRecipeArgs)(nil)).Elem()
}

type ContainerRecipeInput interface {
	pulumi.Input

	ToContainerRecipeOutput() ContainerRecipeOutput
	ToContainerRecipeOutputWithContext(ctx context.Context) ContainerRecipeOutput
}

func (*ContainerRecipe) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipe)(nil)).Elem()
}

func (i *ContainerRecipe) ToContainerRecipeOutput() ContainerRecipeOutput {
	return i.ToContainerRecipeOutputWithContext(context.Background())
}

func (i *ContainerRecipe) ToContainerRecipeOutputWithContext(ctx context.Context) ContainerRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeOutput)
}

// ContainerRecipeArrayInput is an input type that accepts ContainerRecipeArray and ContainerRecipeArrayOutput values.
// You can construct a concrete instance of `ContainerRecipeArrayInput` via:
//
//	ContainerRecipeArray{ ContainerRecipeArgs{...} }
type ContainerRecipeArrayInput interface {
	pulumi.Input

	ToContainerRecipeArrayOutput() ContainerRecipeArrayOutput
	ToContainerRecipeArrayOutputWithContext(context.Context) ContainerRecipeArrayOutput
}

type ContainerRecipeArray []ContainerRecipeInput

func (ContainerRecipeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerRecipe)(nil)).Elem()
}

func (i ContainerRecipeArray) ToContainerRecipeArrayOutput() ContainerRecipeArrayOutput {
	return i.ToContainerRecipeArrayOutputWithContext(context.Background())
}

func (i ContainerRecipeArray) ToContainerRecipeArrayOutputWithContext(ctx context.Context) ContainerRecipeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeArrayOutput)
}

// ContainerRecipeMapInput is an input type that accepts ContainerRecipeMap and ContainerRecipeMapOutput values.
// You can construct a concrete instance of `ContainerRecipeMapInput` via:
//
//	ContainerRecipeMap{ "key": ContainerRecipeArgs{...} }
type ContainerRecipeMapInput interface {
	pulumi.Input

	ToContainerRecipeMapOutput() ContainerRecipeMapOutput
	ToContainerRecipeMapOutputWithContext(context.Context) ContainerRecipeMapOutput
}

type ContainerRecipeMap map[string]ContainerRecipeInput

func (ContainerRecipeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerRecipe)(nil)).Elem()
}

func (i ContainerRecipeMap) ToContainerRecipeMapOutput() ContainerRecipeMapOutput {
	return i.ToContainerRecipeMapOutputWithContext(context.Background())
}

func (i ContainerRecipeMap) ToContainerRecipeMapOutputWithContext(ctx context.Context) ContainerRecipeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRecipeMapOutput)
}

type ContainerRecipeOutput struct{ *pulumi.OutputState }

func (ContainerRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRecipe)(nil)).Elem()
}

func (o ContainerRecipeOutput) ToContainerRecipeOutput() ContainerRecipeOutput {
	return o
}

func (o ContainerRecipeOutput) ToContainerRecipeOutputWithContext(ctx context.Context) ContainerRecipeOutput {
	return o
}

func (o ContainerRecipeOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) Components() ContainerRecipeComponentArrayOutput {
	return o.ApplyT(func(v *ContainerRecipe) ContainerRecipeComponentArrayOutput { return v.Components }).(ContainerRecipeComponentArrayOutput)
}

func (o ContainerRecipeOutput) ContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.ContainerType }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.DateCreated }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ContainerRecipeOutput) DockerfileTemplateData() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.DockerfileTemplateData }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) DockerfileTemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringPtrOutput { return v.DockerfileTemplateUri }).(pulumi.StringPtrOutput)
}

func (o ContainerRecipeOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.BoolOutput { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o ContainerRecipeOutput) InstanceConfiguration() ContainerRecipeInstanceConfigurationPtrOutput {
	return o.ApplyT(func(v *ContainerRecipe) ContainerRecipeInstanceConfigurationPtrOutput { return v.InstanceConfiguration }).(ContainerRecipeInstanceConfigurationPtrOutput)
}

func (o ContainerRecipeOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o ContainerRecipeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) ParentImage() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.ParentImage }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ContainerRecipeOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ContainerRecipeOutput) TargetRepository() ContainerRecipeTargetRepositoryOutput {
	return o.ApplyT(func(v *ContainerRecipe) ContainerRecipeTargetRepositoryOutput { return v.TargetRepository }).(ContainerRecipeTargetRepositoryOutput)
}

func (o ContainerRecipeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o ContainerRecipeOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRecipe) pulumi.StringPtrOutput { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type ContainerRecipeArrayOutput struct{ *pulumi.OutputState }

func (ContainerRecipeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerRecipe)(nil)).Elem()
}

func (o ContainerRecipeArrayOutput) ToContainerRecipeArrayOutput() ContainerRecipeArrayOutput {
	return o
}

func (o ContainerRecipeArrayOutput) ToContainerRecipeArrayOutputWithContext(ctx context.Context) ContainerRecipeArrayOutput {
	return o
}

func (o ContainerRecipeArrayOutput) Index(i pulumi.IntInput) ContainerRecipeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ContainerRecipe {
		return vs[0].([]*ContainerRecipe)[vs[1].(int)]
	}).(ContainerRecipeOutput)
}

type ContainerRecipeMapOutput struct{ *pulumi.OutputState }

func (ContainerRecipeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerRecipe)(nil)).Elem()
}

func (o ContainerRecipeMapOutput) ToContainerRecipeMapOutput() ContainerRecipeMapOutput {
	return o
}

func (o ContainerRecipeMapOutput) ToContainerRecipeMapOutputWithContext(ctx context.Context) ContainerRecipeMapOutput {
	return o
}

func (o ContainerRecipeMapOutput) MapIndex(k pulumi.StringInput) ContainerRecipeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ContainerRecipe {
		return vs[0].(map[string]*ContainerRecipe)[vs[1].(string)]
	}).(ContainerRecipeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeInput)(nil)).Elem(), &ContainerRecipe{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeArrayInput)(nil)).Elem(), ContainerRecipeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRecipeMapInput)(nil)).Elem(), ContainerRecipeMap{})
	pulumi.RegisterOutputType(ContainerRecipeOutput{})
	pulumi.RegisterOutputType(ContainerRecipeArrayOutput{})
	pulumi.RegisterOutputType(ContainerRecipeMapOutput{})
}
