// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupImage(ctx *pulumi.Context, args *LookupImageArgs, opts ...pulumi.InvokeOption) (*LookupImageResult, error) {
	var rv LookupImageResult
	err := ctx.Invoke("aws:imagebuilder/getImage:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImage.
type LookupImageArgs struct {
	Arn  string            `pulumi:"arn"`
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getImage.
type LookupImageResult struct {
	Arn                          string `pulumi:"arn"`
	BuildVersionArn              string `pulumi:"buildVersionArn"`
	ContainerRecipeArn           string `pulumi:"containerRecipeArn"`
	DateCreated                  string `pulumi:"dateCreated"`
	DistributionConfigurationArn string `pulumi:"distributionConfigurationArn"`
	EnhancedImageMetadataEnabled bool   `pulumi:"enhancedImageMetadataEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id                             string                            `pulumi:"id"`
	ImageRecipeArn                 string                            `pulumi:"imageRecipeArn"`
	ImageTestsConfigurations       []GetImageImageTestsConfiguration `pulumi:"imageTestsConfigurations"`
	InfrastructureConfigurationArn string                            `pulumi:"infrastructureConfigurationArn"`
	Name                           string                            `pulumi:"name"`
	OsVersion                      string                            `pulumi:"osVersion"`
	OutputResources                []GetImageOutputResource          `pulumi:"outputResources"`
	Platform                       string                            `pulumi:"platform"`
	Tags                           map[string]string                 `pulumi:"tags"`
	Version                        string                            `pulumi:"version"`
}

func LookupImageOutput(ctx *pulumi.Context, args LookupImageOutputArgs, opts ...pulumi.InvokeOption) LookupImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupImageResult, error) {
			args := v.(LookupImageArgs)
			r, err := LookupImage(ctx, &args, opts...)
			var s LookupImageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupImageResultOutput)
}

// A collection of arguments for invoking getImage.
type LookupImageOutputArgs struct {
	Arn  pulumi.StringInput    `pulumi:"arn"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageArgs)(nil)).Elem()
}

// A collection of values returned by getImage.
type LookupImageResultOutput struct{ *pulumi.OutputState }

func (LookupImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageResult)(nil)).Elem()
}

func (o LookupImageResultOutput) ToLookupImageResultOutput() LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) ToLookupImageResultOutputWithContext(ctx context.Context) LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) BuildVersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.BuildVersionArn }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) ContainerRecipeArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ContainerRecipeArn }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) DistributionConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.DistributionConfigurationArn }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) EnhancedImageMetadataEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupImageResult) bool { return v.EnhancedImageMetadataEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) ImageRecipeArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ImageRecipeArn }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) ImageTestsConfigurations() GetImageImageTestsConfigurationArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageImageTestsConfiguration { return v.ImageTestsConfigurations }).(GetImageImageTestsConfigurationArrayOutput)
}

func (o LookupImageResultOutput) InfrastructureConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.InfrastructureConfigurationArn }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) OsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.OsVersion }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) OutputResources() GetImageOutputResourceArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageOutputResource { return v.OutputResources }).(GetImageOutputResourceArrayOutput)
}

func (o LookupImageResultOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Platform }).(pulumi.StringOutput)
}

func (o LookupImageResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupImageResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupImageResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageResultOutput{})
}
