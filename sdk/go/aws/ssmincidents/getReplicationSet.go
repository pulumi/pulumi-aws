// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **NOTE:** The AWS Region specified by a provider must always be one of the Regions specified for the replication set.
//
// Use this data source to manage a replication set in AWS Systems Manager Incident Manager.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssmincidents"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssmincidents.LookupReplicationSet(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupReplicationSet(ctx *pulumi.Context, args *LookupReplicationSetArgs, opts ...pulumi.InvokeOption) (*LookupReplicationSetResult, error) {
	var rv LookupReplicationSetResult
	err := ctx.Invoke("aws:ssmincidents/getReplicationSet:getReplicationSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplicationSet.
type LookupReplicationSetArgs struct {
	// All tags applied to the replication set.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getReplicationSet.
type LookupReplicationSetResult struct {
	// The Amazon Resouce Name (ARN) of the replication set.
	Arn string `pulumi:"arn"`
	// The ARN of the user who created the replication set.
	CreatedBy string `pulumi:"createdBy"`
	// If `true`, the last remaining Region in a replication set can’t be deleted.
	DeletionProtected bool `pulumi:"deletionProtected"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ARN of the user who last modified the replication set.
	LastModifiedBy string                    `pulumi:"lastModifiedBy"`
	Regions        []GetReplicationSetRegion `pulumi:"regions"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status string `pulumi:"status"`
	// All tags applied to the replication set.
	Tags map[string]string `pulumi:"tags"`
}

func LookupReplicationSetOutput(ctx *pulumi.Context, args LookupReplicationSetOutputArgs, opts ...pulumi.InvokeOption) LookupReplicationSetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReplicationSetResult, error) {
			args := v.(LookupReplicationSetArgs)
			r, err := LookupReplicationSet(ctx, &args, opts...)
			var s LookupReplicationSetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReplicationSetResultOutput)
}

// A collection of arguments for invoking getReplicationSet.
type LookupReplicationSetOutputArgs struct {
	// All tags applied to the replication set.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupReplicationSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationSetArgs)(nil)).Elem()
}

// A collection of values returned by getReplicationSet.
type LookupReplicationSetResultOutput struct{ *pulumi.OutputState }

func (LookupReplicationSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationSetResult)(nil)).Elem()
}

func (o LookupReplicationSetResultOutput) ToLookupReplicationSetResultOutput() LookupReplicationSetResultOutput {
	return o
}

func (o LookupReplicationSetResultOutput) ToLookupReplicationSetResultOutputWithContext(ctx context.Context) LookupReplicationSetResultOutput {
	return o
}

// The Amazon Resouce Name (ARN) of the replication set.
func (o LookupReplicationSetResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The ARN of the user who created the replication set.
func (o LookupReplicationSetResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// If `true`, the last remaining Region in a replication set can’t be deleted.
func (o LookupReplicationSetResultOutput) DeletionProtected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) bool { return v.DeletionProtected }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupReplicationSetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ARN of the user who last modified the replication set.
func (o LookupReplicationSetResultOutput) LastModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) string { return v.LastModifiedBy }).(pulumi.StringOutput)
}

func (o LookupReplicationSetResultOutput) Regions() GetReplicationSetRegionArrayOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) []GetReplicationSetRegion { return v.Regions }).(GetReplicationSetRegionArrayOutput)
}

// The current status of the Region.
// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
func (o LookupReplicationSetResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) string { return v.Status }).(pulumi.StringOutput)
}

// All tags applied to the replication set.
func (o LookupReplicationSetResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupReplicationSetResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReplicationSetResultOutput{})
}
