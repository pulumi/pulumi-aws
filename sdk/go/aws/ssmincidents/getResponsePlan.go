// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to manage a response plan in AWS Systems Manager Incident Manager.
//
// ## Example Usage
func LookupResponsePlan(ctx *pulumi.Context, args *LookupResponsePlanArgs, opts ...pulumi.InvokeOption) (*LookupResponsePlanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResponsePlanResult
	err := ctx.Invoke("aws:ssmincidents/getResponsePlan:getResponsePlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResponsePlan.
type LookupResponsePlanArgs struct {
	// The Amazon Resource Name (ARN) of the response plan.
	Arn string `pulumi:"arn"`
	// The tags applied to the response plan.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getResponsePlan.
type LookupResponsePlanResult struct {
	// (Optional) The actions that the response plan starts at the beginning of an incident.
	Actions []GetResponsePlanAction `pulumi:"actions"`
	Arn     string                  `pulumi:"arn"`
	// The Chatbot chat channel used for collaboration during an incident.
	ChatChannels []string `pulumi:"chatChannels"`
	// The long format of the response plan name. This field can contain spaces.
	DisplayName string `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
	Engagements []string `pulumi:"engagements"`
	// The provider-assigned unique ID for this managed resource.
	Id                string                            `pulumi:"id"`
	IncidentTemplates []GetResponsePlanIncidentTemplate `pulumi:"incidentTemplates"`
	// Information about third-party services integrated into the response plan. The following values are supported:
	Integrations []GetResponsePlanIntegration `pulumi:"integrations"`
	// The name of the PagerDuty configuration.
	Name string `pulumi:"name"`
	// The tags applied to the response plan.
	Tags map[string]string `pulumi:"tags"`
}

func LookupResponsePlanOutput(ctx *pulumi.Context, args LookupResponsePlanOutputArgs, opts ...pulumi.InvokeOption) LookupResponsePlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResponsePlanResult, error) {
			args := v.(LookupResponsePlanArgs)
			r, err := LookupResponsePlan(ctx, &args, opts...)
			var s LookupResponsePlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResponsePlanResultOutput)
}

// A collection of arguments for invoking getResponsePlan.
type LookupResponsePlanOutputArgs struct {
	// The Amazon Resource Name (ARN) of the response plan.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The tags applied to the response plan.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupResponsePlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResponsePlanArgs)(nil)).Elem()
}

// A collection of values returned by getResponsePlan.
type LookupResponsePlanResultOutput struct{ *pulumi.OutputState }

func (LookupResponsePlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResponsePlanResult)(nil)).Elem()
}

func (o LookupResponsePlanResultOutput) ToLookupResponsePlanResultOutput() LookupResponsePlanResultOutput {
	return o
}

func (o LookupResponsePlanResultOutput) ToLookupResponsePlanResultOutputWithContext(ctx context.Context) LookupResponsePlanResultOutput {
	return o
}

// (Optional) The actions that the response plan starts at the beginning of an incident.
func (o LookupResponsePlanResultOutput) Actions() GetResponsePlanActionArrayOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) []GetResponsePlanAction { return v.Actions }).(GetResponsePlanActionArrayOutput)
}

func (o LookupResponsePlanResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The Chatbot chat channel used for collaboration during an incident.
func (o LookupResponsePlanResultOutput) ChatChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) []string { return v.ChatChannels }).(pulumi.StringArrayOutput)
}

// The long format of the response plan name. This field can contain spaces.
func (o LookupResponsePlanResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
func (o LookupResponsePlanResultOutput) Engagements() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) []string { return v.Engagements }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResponsePlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupResponsePlanResultOutput) IncidentTemplates() GetResponsePlanIncidentTemplateArrayOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) []GetResponsePlanIncidentTemplate { return v.IncidentTemplates }).(GetResponsePlanIncidentTemplateArrayOutput)
}

// Information about third-party services integrated into the response plan. The following values are supported:
func (o LookupResponsePlanResultOutput) Integrations() GetResponsePlanIntegrationArrayOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) []GetResponsePlanIntegration { return v.Integrations }).(GetResponsePlanIntegrationArrayOutput)
}

// The name of the PagerDuty configuration.
func (o LookupResponsePlanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) string { return v.Name }).(pulumi.StringOutput)
}

// The tags applied to the response plan.
func (o LookupResponsePlanResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupResponsePlanResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResponsePlanResultOutput{})
}
