// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReplicationSetRegion struct {
	// The Amazon Resource name (ARN) of the customer managed key. If omitted, AWS manages the AWS KMS keys for you, using an AWS owned key, as indicated by a default value of `DefaultKey`.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The name of the Region, such as `ap-southeast-2`.
	Name string `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status *string `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage *string `pulumi:"statusMessage"`
}

// ReplicationSetRegionInput is an input type that accepts ReplicationSetRegionArgs and ReplicationSetRegionOutput values.
// You can construct a concrete instance of `ReplicationSetRegionInput` via:
//
//	ReplicationSetRegionArgs{...}
type ReplicationSetRegionInput interface {
	pulumi.Input

	ToReplicationSetRegionOutput() ReplicationSetRegionOutput
	ToReplicationSetRegionOutputWithContext(context.Context) ReplicationSetRegionOutput
}

type ReplicationSetRegionArgs struct {
	// The Amazon Resource name (ARN) of the customer managed key. If omitted, AWS manages the AWS KMS keys for you, using an AWS owned key, as indicated by a default value of `DefaultKey`.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The name of the Region, such as `ap-southeast-2`.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status pulumi.StringPtrInput `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage pulumi.StringPtrInput `pulumi:"statusMessage"`
}

func (ReplicationSetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetRegion)(nil)).Elem()
}

func (i ReplicationSetRegionArgs) ToReplicationSetRegionOutput() ReplicationSetRegionOutput {
	return i.ToReplicationSetRegionOutputWithContext(context.Background())
}

func (i ReplicationSetRegionArgs) ToReplicationSetRegionOutputWithContext(ctx context.Context) ReplicationSetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetRegionOutput)
}

// ReplicationSetRegionArrayInput is an input type that accepts ReplicationSetRegionArray and ReplicationSetRegionArrayOutput values.
// You can construct a concrete instance of `ReplicationSetRegionArrayInput` via:
//
//	ReplicationSetRegionArray{ ReplicationSetRegionArgs{...} }
type ReplicationSetRegionArrayInput interface {
	pulumi.Input

	ToReplicationSetRegionArrayOutput() ReplicationSetRegionArrayOutput
	ToReplicationSetRegionArrayOutputWithContext(context.Context) ReplicationSetRegionArrayOutput
}

type ReplicationSetRegionArray []ReplicationSetRegionInput

func (ReplicationSetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationSetRegion)(nil)).Elem()
}

func (i ReplicationSetRegionArray) ToReplicationSetRegionArrayOutput() ReplicationSetRegionArrayOutput {
	return i.ToReplicationSetRegionArrayOutputWithContext(context.Background())
}

func (i ReplicationSetRegionArray) ToReplicationSetRegionArrayOutputWithContext(ctx context.Context) ReplicationSetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetRegionArrayOutput)
}

type ReplicationSetRegionOutput struct{ *pulumi.OutputState }

func (ReplicationSetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetRegion)(nil)).Elem()
}

func (o ReplicationSetRegionOutput) ToReplicationSetRegionOutput() ReplicationSetRegionOutput {
	return o
}

func (o ReplicationSetRegionOutput) ToReplicationSetRegionOutputWithContext(ctx context.Context) ReplicationSetRegionOutput {
	return o
}

// The Amazon Resource name (ARN) of the customer managed key. If omitted, AWS manages the AWS KMS keys for you, using an AWS owned key, as indicated by a default value of `DefaultKey`.
func (o ReplicationSetRegionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSetRegion) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The name of the Region, such as `ap-southeast-2`.
func (o ReplicationSetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationSetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of the Region.
// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
func (o ReplicationSetRegionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSetRegion) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// More information about the status of a Region.
func (o ReplicationSetRegionOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSetRegion) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

type ReplicationSetRegionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationSetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationSetRegion)(nil)).Elem()
}

func (o ReplicationSetRegionArrayOutput) ToReplicationSetRegionArrayOutput() ReplicationSetRegionArrayOutput {
	return o
}

func (o ReplicationSetRegionArrayOutput) ToReplicationSetRegionArrayOutputWithContext(ctx context.Context) ReplicationSetRegionArrayOutput {
	return o
}

func (o ReplicationSetRegionArrayOutput) Index(i pulumi.IntInput) ReplicationSetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationSetRegion {
		return vs[0].([]ReplicationSetRegion)[vs[1].(int)]
	}).(ReplicationSetRegionOutput)
}

type GetReplicationSetRegion struct {
	// The ARN of the AWS Key Management Service (AWS KMS) encryption key.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
	// The name of the Region.
	Name string `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status string `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage string `pulumi:"statusMessage"`
}

// GetReplicationSetRegionInput is an input type that accepts GetReplicationSetRegionArgs and GetReplicationSetRegionOutput values.
// You can construct a concrete instance of `GetReplicationSetRegionInput` via:
//
//	GetReplicationSetRegionArgs{...}
type GetReplicationSetRegionInput interface {
	pulumi.Input

	ToGetReplicationSetRegionOutput() GetReplicationSetRegionOutput
	ToGetReplicationSetRegionOutputWithContext(context.Context) GetReplicationSetRegionOutput
}

type GetReplicationSetRegionArgs struct {
	// The ARN of the AWS Key Management Service (AWS KMS) encryption key.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
	// The name of the Region.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status pulumi.StringInput `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (GetReplicationSetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSetRegion)(nil)).Elem()
}

func (i GetReplicationSetRegionArgs) ToGetReplicationSetRegionOutput() GetReplicationSetRegionOutput {
	return i.ToGetReplicationSetRegionOutputWithContext(context.Background())
}

func (i GetReplicationSetRegionArgs) ToGetReplicationSetRegionOutputWithContext(ctx context.Context) GetReplicationSetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationSetRegionOutput)
}

// GetReplicationSetRegionArrayInput is an input type that accepts GetReplicationSetRegionArray and GetReplicationSetRegionArrayOutput values.
// You can construct a concrete instance of `GetReplicationSetRegionArrayInput` via:
//
//	GetReplicationSetRegionArray{ GetReplicationSetRegionArgs{...} }
type GetReplicationSetRegionArrayInput interface {
	pulumi.Input

	ToGetReplicationSetRegionArrayOutput() GetReplicationSetRegionArrayOutput
	ToGetReplicationSetRegionArrayOutputWithContext(context.Context) GetReplicationSetRegionArrayOutput
}

type GetReplicationSetRegionArray []GetReplicationSetRegionInput

func (GetReplicationSetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationSetRegion)(nil)).Elem()
}

func (i GetReplicationSetRegionArray) ToGetReplicationSetRegionArrayOutput() GetReplicationSetRegionArrayOutput {
	return i.ToGetReplicationSetRegionArrayOutputWithContext(context.Background())
}

func (i GetReplicationSetRegionArray) ToGetReplicationSetRegionArrayOutputWithContext(ctx context.Context) GetReplicationSetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationSetRegionArrayOutput)
}

type GetReplicationSetRegionOutput struct{ *pulumi.OutputState }

func (GetReplicationSetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSetRegion)(nil)).Elem()
}

func (o GetReplicationSetRegionOutput) ToGetReplicationSetRegionOutput() GetReplicationSetRegionOutput {
	return o
}

func (o GetReplicationSetRegionOutput) ToGetReplicationSetRegionOutputWithContext(ctx context.Context) GetReplicationSetRegionOutput {
	return o
}

// The ARN of the AWS Key Management Service (AWS KMS) encryption key.
func (o GetReplicationSetRegionOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

// The name of the Region.
func (o GetReplicationSetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of the Region.
// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
func (o GetReplicationSetRegionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.Status }).(pulumi.StringOutput)
}

// More information about the status of a Region.
func (o GetReplicationSetRegionOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type GetReplicationSetRegionArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationSetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationSetRegion)(nil)).Elem()
}

func (o GetReplicationSetRegionArrayOutput) ToGetReplicationSetRegionArrayOutput() GetReplicationSetRegionArrayOutput {
	return o
}

func (o GetReplicationSetRegionArrayOutput) ToGetReplicationSetRegionArrayOutputWithContext(ctx context.Context) GetReplicationSetRegionArrayOutput {
	return o
}

func (o GetReplicationSetRegionArrayOutput) Index(i pulumi.IntInput) GetReplicationSetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationSetRegion {
		return vs[0].([]GetReplicationSetRegion)[vs[1].(int)]
	}).(GetReplicationSetRegionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationSetRegionInput)(nil)).Elem(), ReplicationSetRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationSetRegionArrayInput)(nil)).Elem(), ReplicationSetRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationSetRegionInput)(nil)).Elem(), GetReplicationSetRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationSetRegionArrayInput)(nil)).Elem(), GetReplicationSetRegionArray{})
	pulumi.RegisterOutputType(ReplicationSetRegionOutput{})
	pulumi.RegisterOutputType(ReplicationSetRegionArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationSetRegionOutput{})
	pulumi.RegisterOutputType(GetReplicationSetRegionArrayOutput{})
}
