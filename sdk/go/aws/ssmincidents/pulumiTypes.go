// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReplicationSetRegion struct {
	// The Amazon Resource name (ARN) of the customer managed key. If omitted, AWS manages the AWS KMS keys for you, using an AWS owned key, as indicated by a default value of `DefaultKey`.
	//
	// The following arguments are optional:
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The name of the Region, such as `ap-southeast-2`.
	Name string `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status *string `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage *string `pulumi:"statusMessage"`
}

// ReplicationSetRegionInput is an input type that accepts ReplicationSetRegionArgs and ReplicationSetRegionOutput values.
// You can construct a concrete instance of `ReplicationSetRegionInput` via:
//
//	ReplicationSetRegionArgs{...}
type ReplicationSetRegionInput interface {
	pulumi.Input

	ToReplicationSetRegionOutput() ReplicationSetRegionOutput
	ToReplicationSetRegionOutputWithContext(context.Context) ReplicationSetRegionOutput
}

type ReplicationSetRegionArgs struct {
	// The Amazon Resource name (ARN) of the customer managed key. If omitted, AWS manages the AWS KMS keys for you, using an AWS owned key, as indicated by a default value of `DefaultKey`.
	//
	// The following arguments are optional:
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The name of the Region, such as `ap-southeast-2`.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status pulumi.StringPtrInput `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage pulumi.StringPtrInput `pulumi:"statusMessage"`
}

func (ReplicationSetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetRegion)(nil)).Elem()
}

func (i ReplicationSetRegionArgs) ToReplicationSetRegionOutput() ReplicationSetRegionOutput {
	return i.ToReplicationSetRegionOutputWithContext(context.Background())
}

func (i ReplicationSetRegionArgs) ToReplicationSetRegionOutputWithContext(ctx context.Context) ReplicationSetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetRegionOutput)
}

// ReplicationSetRegionArrayInput is an input type that accepts ReplicationSetRegionArray and ReplicationSetRegionArrayOutput values.
// You can construct a concrete instance of `ReplicationSetRegionArrayInput` via:
//
//	ReplicationSetRegionArray{ ReplicationSetRegionArgs{...} }
type ReplicationSetRegionArrayInput interface {
	pulumi.Input

	ToReplicationSetRegionArrayOutput() ReplicationSetRegionArrayOutput
	ToReplicationSetRegionArrayOutputWithContext(context.Context) ReplicationSetRegionArrayOutput
}

type ReplicationSetRegionArray []ReplicationSetRegionInput

func (ReplicationSetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationSetRegion)(nil)).Elem()
}

func (i ReplicationSetRegionArray) ToReplicationSetRegionArrayOutput() ReplicationSetRegionArrayOutput {
	return i.ToReplicationSetRegionArrayOutputWithContext(context.Background())
}

func (i ReplicationSetRegionArray) ToReplicationSetRegionArrayOutputWithContext(ctx context.Context) ReplicationSetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetRegionArrayOutput)
}

type ReplicationSetRegionOutput struct{ *pulumi.OutputState }

func (ReplicationSetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetRegion)(nil)).Elem()
}

func (o ReplicationSetRegionOutput) ToReplicationSetRegionOutput() ReplicationSetRegionOutput {
	return o
}

func (o ReplicationSetRegionOutput) ToReplicationSetRegionOutputWithContext(ctx context.Context) ReplicationSetRegionOutput {
	return o
}

// The Amazon Resource name (ARN) of the customer managed key. If omitted, AWS manages the AWS KMS keys for you, using an AWS owned key, as indicated by a default value of `DefaultKey`.
//
// The following arguments are optional:
func (o ReplicationSetRegionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSetRegion) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The name of the Region, such as `ap-southeast-2`.
func (o ReplicationSetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationSetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of the Region.
// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
func (o ReplicationSetRegionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSetRegion) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// More information about the status of a Region.
func (o ReplicationSetRegionOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSetRegion) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

type ReplicationSetRegionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationSetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationSetRegion)(nil)).Elem()
}

func (o ReplicationSetRegionArrayOutput) ToReplicationSetRegionArrayOutput() ReplicationSetRegionArrayOutput {
	return o
}

func (o ReplicationSetRegionArrayOutput) ToReplicationSetRegionArrayOutputWithContext(ctx context.Context) ReplicationSetRegionArrayOutput {
	return o
}

func (o ReplicationSetRegionArrayOutput) Index(i pulumi.IntInput) ReplicationSetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationSetRegion {
		return vs[0].([]ReplicationSetRegion)[vs[1].(int)]
	}).(ReplicationSetRegionOutput)
}

type ResponsePlanAction struct {
	// The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
	SsmAutomations []ResponsePlanActionSsmAutomation `pulumi:"ssmAutomations"`
}

// ResponsePlanActionInput is an input type that accepts ResponsePlanActionArgs and ResponsePlanActionOutput values.
// You can construct a concrete instance of `ResponsePlanActionInput` via:
//
//	ResponsePlanActionArgs{...}
type ResponsePlanActionInput interface {
	pulumi.Input

	ToResponsePlanActionOutput() ResponsePlanActionOutput
	ToResponsePlanActionOutputWithContext(context.Context) ResponsePlanActionOutput
}

type ResponsePlanActionArgs struct {
	// The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
	SsmAutomations ResponsePlanActionSsmAutomationArrayInput `pulumi:"ssmAutomations"`
}

func (ResponsePlanActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanAction)(nil)).Elem()
}

func (i ResponsePlanActionArgs) ToResponsePlanActionOutput() ResponsePlanActionOutput {
	return i.ToResponsePlanActionOutputWithContext(context.Background())
}

func (i ResponsePlanActionArgs) ToResponsePlanActionOutputWithContext(ctx context.Context) ResponsePlanActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionOutput)
}

func (i ResponsePlanActionArgs) ToResponsePlanActionPtrOutput() ResponsePlanActionPtrOutput {
	return i.ToResponsePlanActionPtrOutputWithContext(context.Background())
}

func (i ResponsePlanActionArgs) ToResponsePlanActionPtrOutputWithContext(ctx context.Context) ResponsePlanActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionOutput).ToResponsePlanActionPtrOutputWithContext(ctx)
}

// ResponsePlanActionPtrInput is an input type that accepts ResponsePlanActionArgs, ResponsePlanActionPtr and ResponsePlanActionPtrOutput values.
// You can construct a concrete instance of `ResponsePlanActionPtrInput` via:
//
//	        ResponsePlanActionArgs{...}
//
//	or:
//
//	        nil
type ResponsePlanActionPtrInput interface {
	pulumi.Input

	ToResponsePlanActionPtrOutput() ResponsePlanActionPtrOutput
	ToResponsePlanActionPtrOutputWithContext(context.Context) ResponsePlanActionPtrOutput
}

type responsePlanActionPtrType ResponsePlanActionArgs

func ResponsePlanActionPtr(v *ResponsePlanActionArgs) ResponsePlanActionPtrInput {
	return (*responsePlanActionPtrType)(v)
}

func (*responsePlanActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanAction)(nil)).Elem()
}

func (i *responsePlanActionPtrType) ToResponsePlanActionPtrOutput() ResponsePlanActionPtrOutput {
	return i.ToResponsePlanActionPtrOutputWithContext(context.Background())
}

func (i *responsePlanActionPtrType) ToResponsePlanActionPtrOutputWithContext(ctx context.Context) ResponsePlanActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionPtrOutput)
}

type ResponsePlanActionOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanAction)(nil)).Elem()
}

func (o ResponsePlanActionOutput) ToResponsePlanActionOutput() ResponsePlanActionOutput {
	return o
}

func (o ResponsePlanActionOutput) ToResponsePlanActionOutputWithContext(ctx context.Context) ResponsePlanActionOutput {
	return o
}

func (o ResponsePlanActionOutput) ToResponsePlanActionPtrOutput() ResponsePlanActionPtrOutput {
	return o.ToResponsePlanActionPtrOutputWithContext(context.Background())
}

func (o ResponsePlanActionOutput) ToResponsePlanActionPtrOutputWithContext(ctx context.Context) ResponsePlanActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponsePlanAction) *ResponsePlanAction {
		return &v
	}).(ResponsePlanActionPtrOutput)
}

// The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
func (o ResponsePlanActionOutput) SsmAutomations() ResponsePlanActionSsmAutomationArrayOutput {
	return o.ApplyT(func(v ResponsePlanAction) []ResponsePlanActionSsmAutomation { return v.SsmAutomations }).(ResponsePlanActionSsmAutomationArrayOutput)
}

type ResponsePlanActionPtrOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanAction)(nil)).Elem()
}

func (o ResponsePlanActionPtrOutput) ToResponsePlanActionPtrOutput() ResponsePlanActionPtrOutput {
	return o
}

func (o ResponsePlanActionPtrOutput) ToResponsePlanActionPtrOutputWithContext(ctx context.Context) ResponsePlanActionPtrOutput {
	return o
}

func (o ResponsePlanActionPtrOutput) Elem() ResponsePlanActionOutput {
	return o.ApplyT(func(v *ResponsePlanAction) ResponsePlanAction {
		if v != nil {
			return *v
		}
		var ret ResponsePlanAction
		return ret
	}).(ResponsePlanActionOutput)
}

// The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
func (o ResponsePlanActionPtrOutput) SsmAutomations() ResponsePlanActionSsmAutomationArrayOutput {
	return o.ApplyT(func(v *ResponsePlanAction) []ResponsePlanActionSsmAutomation {
		if v == nil {
			return nil
		}
		return v.SsmAutomations
	}).(ResponsePlanActionSsmAutomationArrayOutput)
}

type ResponsePlanActionSsmAutomation struct {
	// The automation document's name.
	DocumentName string `pulumi:"documentName"`
	// The version of the automation document to use at runtime.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The key-value pair to resolve dynamic parameter values when processing a Systems Manager Automation runbook.
	DynamicParameters map[string]string `pulumi:"dynamicParameters"`
	// The key-value pair parameters to use when the automation document runs. The following values are supported:
	Parameters []ResponsePlanActionSsmAutomationParameter `pulumi:"parameters"`
	// The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.
	RoleArn string `pulumi:"roleArn"`
	// The account that the automation document runs in. This can be in either the management account or an application account.
	TargetAccount *string `pulumi:"targetAccount"`
}

// ResponsePlanActionSsmAutomationInput is an input type that accepts ResponsePlanActionSsmAutomationArgs and ResponsePlanActionSsmAutomationOutput values.
// You can construct a concrete instance of `ResponsePlanActionSsmAutomationInput` via:
//
//	ResponsePlanActionSsmAutomationArgs{...}
type ResponsePlanActionSsmAutomationInput interface {
	pulumi.Input

	ToResponsePlanActionSsmAutomationOutput() ResponsePlanActionSsmAutomationOutput
	ToResponsePlanActionSsmAutomationOutputWithContext(context.Context) ResponsePlanActionSsmAutomationOutput
}

type ResponsePlanActionSsmAutomationArgs struct {
	// The automation document's name.
	DocumentName pulumi.StringInput `pulumi:"documentName"`
	// The version of the automation document to use at runtime.
	DocumentVersion pulumi.StringPtrInput `pulumi:"documentVersion"`
	// The key-value pair to resolve dynamic parameter values when processing a Systems Manager Automation runbook.
	DynamicParameters pulumi.StringMapInput `pulumi:"dynamicParameters"`
	// The key-value pair parameters to use when the automation document runs. The following values are supported:
	Parameters ResponsePlanActionSsmAutomationParameterArrayInput `pulumi:"parameters"`
	// The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The account that the automation document runs in. This can be in either the management account or an application account.
	TargetAccount pulumi.StringPtrInput `pulumi:"targetAccount"`
}

func (ResponsePlanActionSsmAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (i ResponsePlanActionSsmAutomationArgs) ToResponsePlanActionSsmAutomationOutput() ResponsePlanActionSsmAutomationOutput {
	return i.ToResponsePlanActionSsmAutomationOutputWithContext(context.Background())
}

func (i ResponsePlanActionSsmAutomationArgs) ToResponsePlanActionSsmAutomationOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionSsmAutomationOutput)
}

// ResponsePlanActionSsmAutomationArrayInput is an input type that accepts ResponsePlanActionSsmAutomationArray and ResponsePlanActionSsmAutomationArrayOutput values.
// You can construct a concrete instance of `ResponsePlanActionSsmAutomationArrayInput` via:
//
//	ResponsePlanActionSsmAutomationArray{ ResponsePlanActionSsmAutomationArgs{...} }
type ResponsePlanActionSsmAutomationArrayInput interface {
	pulumi.Input

	ToResponsePlanActionSsmAutomationArrayOutput() ResponsePlanActionSsmAutomationArrayOutput
	ToResponsePlanActionSsmAutomationArrayOutputWithContext(context.Context) ResponsePlanActionSsmAutomationArrayOutput
}

type ResponsePlanActionSsmAutomationArray []ResponsePlanActionSsmAutomationInput

func (ResponsePlanActionSsmAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (i ResponsePlanActionSsmAutomationArray) ToResponsePlanActionSsmAutomationArrayOutput() ResponsePlanActionSsmAutomationArrayOutput {
	return i.ToResponsePlanActionSsmAutomationArrayOutputWithContext(context.Background())
}

func (i ResponsePlanActionSsmAutomationArray) ToResponsePlanActionSsmAutomationArrayOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionSsmAutomationArrayOutput)
}

type ResponsePlanActionSsmAutomationOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionSsmAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (o ResponsePlanActionSsmAutomationOutput) ToResponsePlanActionSsmAutomationOutput() ResponsePlanActionSsmAutomationOutput {
	return o
}

func (o ResponsePlanActionSsmAutomationOutput) ToResponsePlanActionSsmAutomationOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationOutput {
	return o
}

// The automation document's name.
func (o ResponsePlanActionSsmAutomationOutput) DocumentName() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomation) string { return v.DocumentName }).(pulumi.StringOutput)
}

// The version of the automation document to use at runtime.
func (o ResponsePlanActionSsmAutomationOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomation) *string { return v.DocumentVersion }).(pulumi.StringPtrOutput)
}

// The key-value pair to resolve dynamic parameter values when processing a Systems Manager Automation runbook.
func (o ResponsePlanActionSsmAutomationOutput) DynamicParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomation) map[string]string { return v.DynamicParameters }).(pulumi.StringMapOutput)
}

// The key-value pair parameters to use when the automation document runs. The following values are supported:
func (o ResponsePlanActionSsmAutomationOutput) Parameters() ResponsePlanActionSsmAutomationParameterArrayOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomation) []ResponsePlanActionSsmAutomationParameter {
		return v.Parameters
	}).(ResponsePlanActionSsmAutomationParameterArrayOutput)
}

// The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.
func (o ResponsePlanActionSsmAutomationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomation) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The account that the automation document runs in. This can be in either the management account or an application account.
func (o ResponsePlanActionSsmAutomationOutput) TargetAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomation) *string { return v.TargetAccount }).(pulumi.StringPtrOutput)
}

type ResponsePlanActionSsmAutomationArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionSsmAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (o ResponsePlanActionSsmAutomationArrayOutput) ToResponsePlanActionSsmAutomationArrayOutput() ResponsePlanActionSsmAutomationArrayOutput {
	return o
}

func (o ResponsePlanActionSsmAutomationArrayOutput) ToResponsePlanActionSsmAutomationArrayOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationArrayOutput {
	return o
}

func (o ResponsePlanActionSsmAutomationArrayOutput) Index(i pulumi.IntInput) ResponsePlanActionSsmAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanActionSsmAutomation {
		return vs[0].([]ResponsePlanActionSsmAutomation)[vs[1].(int)]
	}).(ResponsePlanActionSsmAutomationOutput)
}

type ResponsePlanActionSsmAutomationParameter struct {
	// The name of the response plan.
	Name string `pulumi:"name"`
	// The values for the associated parameter name.
	Values []string `pulumi:"values"`
}

// ResponsePlanActionSsmAutomationParameterInput is an input type that accepts ResponsePlanActionSsmAutomationParameterArgs and ResponsePlanActionSsmAutomationParameterOutput values.
// You can construct a concrete instance of `ResponsePlanActionSsmAutomationParameterInput` via:
//
//	ResponsePlanActionSsmAutomationParameterArgs{...}
type ResponsePlanActionSsmAutomationParameterInput interface {
	pulumi.Input

	ToResponsePlanActionSsmAutomationParameterOutput() ResponsePlanActionSsmAutomationParameterOutput
	ToResponsePlanActionSsmAutomationParameterOutputWithContext(context.Context) ResponsePlanActionSsmAutomationParameterOutput
}

type ResponsePlanActionSsmAutomationParameterArgs struct {
	// The name of the response plan.
	Name pulumi.StringInput `pulumi:"name"`
	// The values for the associated parameter name.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ResponsePlanActionSsmAutomationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (i ResponsePlanActionSsmAutomationParameterArgs) ToResponsePlanActionSsmAutomationParameterOutput() ResponsePlanActionSsmAutomationParameterOutput {
	return i.ToResponsePlanActionSsmAutomationParameterOutputWithContext(context.Background())
}

func (i ResponsePlanActionSsmAutomationParameterArgs) ToResponsePlanActionSsmAutomationParameterOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionSsmAutomationParameterOutput)
}

// ResponsePlanActionSsmAutomationParameterArrayInput is an input type that accepts ResponsePlanActionSsmAutomationParameterArray and ResponsePlanActionSsmAutomationParameterArrayOutput values.
// You can construct a concrete instance of `ResponsePlanActionSsmAutomationParameterArrayInput` via:
//
//	ResponsePlanActionSsmAutomationParameterArray{ ResponsePlanActionSsmAutomationParameterArgs{...} }
type ResponsePlanActionSsmAutomationParameterArrayInput interface {
	pulumi.Input

	ToResponsePlanActionSsmAutomationParameterArrayOutput() ResponsePlanActionSsmAutomationParameterArrayOutput
	ToResponsePlanActionSsmAutomationParameterArrayOutputWithContext(context.Context) ResponsePlanActionSsmAutomationParameterArrayOutput
}

type ResponsePlanActionSsmAutomationParameterArray []ResponsePlanActionSsmAutomationParameterInput

func (ResponsePlanActionSsmAutomationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (i ResponsePlanActionSsmAutomationParameterArray) ToResponsePlanActionSsmAutomationParameterArrayOutput() ResponsePlanActionSsmAutomationParameterArrayOutput {
	return i.ToResponsePlanActionSsmAutomationParameterArrayOutputWithContext(context.Background())
}

func (i ResponsePlanActionSsmAutomationParameterArray) ToResponsePlanActionSsmAutomationParameterArrayOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionSsmAutomationParameterArrayOutput)
}

type ResponsePlanActionSsmAutomationParameterOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionSsmAutomationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (o ResponsePlanActionSsmAutomationParameterOutput) ToResponsePlanActionSsmAutomationParameterOutput() ResponsePlanActionSsmAutomationParameterOutput {
	return o
}

func (o ResponsePlanActionSsmAutomationParameterOutput) ToResponsePlanActionSsmAutomationParameterOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationParameterOutput {
	return o
}

// The name of the response plan.
func (o ResponsePlanActionSsmAutomationParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomationParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The values for the associated parameter name.
func (o ResponsePlanActionSsmAutomationParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponsePlanActionSsmAutomationParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ResponsePlanActionSsmAutomationParameterArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionSsmAutomationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (o ResponsePlanActionSsmAutomationParameterArrayOutput) ToResponsePlanActionSsmAutomationParameterArrayOutput() ResponsePlanActionSsmAutomationParameterArrayOutput {
	return o
}

func (o ResponsePlanActionSsmAutomationParameterArrayOutput) ToResponsePlanActionSsmAutomationParameterArrayOutputWithContext(ctx context.Context) ResponsePlanActionSsmAutomationParameterArrayOutput {
	return o
}

func (o ResponsePlanActionSsmAutomationParameterArrayOutput) Index(i pulumi.IntInput) ResponsePlanActionSsmAutomationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanActionSsmAutomationParameter {
		return vs[0].([]ResponsePlanActionSsmAutomationParameter)[vs[1].(int)]
	}).(ResponsePlanActionSsmAutomationParameterOutput)
}

type ResponsePlanIncidentTemplate struct {
	// A string used to stop Incident Manager from creating multiple incident records for the same incident.
	DedupeString *string `pulumi:"dedupeString"`
	// The impact value of a generated incident. The following values are supported:
	Impact int `pulumi:"impact"`
	// The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
	IncidentTags map[string]string `pulumi:"incidentTags"`
	// The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
	NotificationTargets []ResponsePlanIncidentTemplateNotificationTarget `pulumi:"notificationTargets"`
	// The summary of an incident.
	Summary *string `pulumi:"summary"`
	// The title of a generated incident.
	Title string `pulumi:"title"`
}

// ResponsePlanIncidentTemplateInput is an input type that accepts ResponsePlanIncidentTemplateArgs and ResponsePlanIncidentTemplateOutput values.
// You can construct a concrete instance of `ResponsePlanIncidentTemplateInput` via:
//
//	ResponsePlanIncidentTemplateArgs{...}
type ResponsePlanIncidentTemplateInput interface {
	pulumi.Input

	ToResponsePlanIncidentTemplateOutput() ResponsePlanIncidentTemplateOutput
	ToResponsePlanIncidentTemplateOutputWithContext(context.Context) ResponsePlanIncidentTemplateOutput
}

type ResponsePlanIncidentTemplateArgs struct {
	// A string used to stop Incident Manager from creating multiple incident records for the same incident.
	DedupeString pulumi.StringPtrInput `pulumi:"dedupeString"`
	// The impact value of a generated incident. The following values are supported:
	Impact pulumi.IntInput `pulumi:"impact"`
	// The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
	IncidentTags pulumi.StringMapInput `pulumi:"incidentTags"`
	// The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
	NotificationTargets ResponsePlanIncidentTemplateNotificationTargetArrayInput `pulumi:"notificationTargets"`
	// The summary of an incident.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The title of a generated incident.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ResponsePlanIncidentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplateOutput() ResponsePlanIncidentTemplateOutput {
	return i.ToResponsePlanIncidentTemplateOutputWithContext(context.Background())
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplateOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplateOutput)
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return i.ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Background())
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplateOutput).ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx)
}

// ResponsePlanIncidentTemplatePtrInput is an input type that accepts ResponsePlanIncidentTemplateArgs, ResponsePlanIncidentTemplatePtr and ResponsePlanIncidentTemplatePtrOutput values.
// You can construct a concrete instance of `ResponsePlanIncidentTemplatePtrInput` via:
//
//	        ResponsePlanIncidentTemplateArgs{...}
//
//	or:
//
//	        nil
type ResponsePlanIncidentTemplatePtrInput interface {
	pulumi.Input

	ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput
	ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Context) ResponsePlanIncidentTemplatePtrOutput
}

type responsePlanIncidentTemplatePtrType ResponsePlanIncidentTemplateArgs

func ResponsePlanIncidentTemplatePtr(v *ResponsePlanIncidentTemplateArgs) ResponsePlanIncidentTemplatePtrInput {
	return (*responsePlanIncidentTemplatePtrType)(v)
}

func (*responsePlanIncidentTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (i *responsePlanIncidentTemplatePtrType) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return i.ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Background())
}

func (i *responsePlanIncidentTemplatePtrType) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplatePtrOutput)
}

type ResponsePlanIncidentTemplateOutput struct{ *pulumi.OutputState }

func (ResponsePlanIncidentTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplateOutput() ResponsePlanIncidentTemplateOutput {
	return o
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplateOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateOutput {
	return o
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return o.ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Background())
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponsePlanIncidentTemplate) *ResponsePlanIncidentTemplate {
		return &v
	}).(ResponsePlanIncidentTemplatePtrOutput)
}

// A string used to stop Incident Manager from creating multiple incident records for the same incident.
func (o ResponsePlanIncidentTemplateOutput) DedupeString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) *string { return v.DedupeString }).(pulumi.StringPtrOutput)
}

// The impact value of a generated incident. The following values are supported:
func (o ResponsePlanIncidentTemplateOutput) Impact() pulumi.IntOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) int { return v.Impact }).(pulumi.IntOutput)
}

// The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
func (o ResponsePlanIncidentTemplateOutput) IncidentTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) map[string]string { return v.IncidentTags }).(pulumi.StringMapOutput)
}

// The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
func (o ResponsePlanIncidentTemplateOutput) NotificationTargets() ResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) []ResponsePlanIncidentTemplateNotificationTarget {
		return v.NotificationTargets
	}).(ResponsePlanIncidentTemplateNotificationTargetArrayOutput)
}

// The summary of an incident.
func (o ResponsePlanIncidentTemplateOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The title of a generated incident.
func (o ResponsePlanIncidentTemplateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) string { return v.Title }).(pulumi.StringOutput)
}

type ResponsePlanIncidentTemplatePtrOutput struct{ *pulumi.OutputState }

func (ResponsePlanIncidentTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (o ResponsePlanIncidentTemplatePtrOutput) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return o
}

func (o ResponsePlanIncidentTemplatePtrOutput) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return o
}

func (o ResponsePlanIncidentTemplatePtrOutput) Elem() ResponsePlanIncidentTemplateOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) ResponsePlanIncidentTemplate {
		if v != nil {
			return *v
		}
		var ret ResponsePlanIncidentTemplate
		return ret
	}).(ResponsePlanIncidentTemplateOutput)
}

// A string used to stop Incident Manager from creating multiple incident records for the same incident.
func (o ResponsePlanIncidentTemplatePtrOutput) DedupeString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *string {
		if v == nil {
			return nil
		}
		return v.DedupeString
	}).(pulumi.StringPtrOutput)
}

// The impact value of a generated incident. The following values are supported:
func (o ResponsePlanIncidentTemplatePtrOutput) Impact() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *int {
		if v == nil {
			return nil
		}
		return &v.Impact
	}).(pulumi.IntPtrOutput)
}

// The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
func (o ResponsePlanIncidentTemplatePtrOutput) IncidentTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.IncidentTags
	}).(pulumi.StringMapOutput)
}

// The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
func (o ResponsePlanIncidentTemplatePtrOutput) NotificationTargets() ResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) []ResponsePlanIncidentTemplateNotificationTarget {
		if v == nil {
			return nil
		}
		return v.NotificationTargets
	}).(ResponsePlanIncidentTemplateNotificationTargetArrayOutput)
}

// The summary of an incident.
func (o ResponsePlanIncidentTemplatePtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

// The title of a generated incident.
func (o ResponsePlanIncidentTemplatePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type ResponsePlanIncidentTemplateNotificationTarget struct {
	// The ARN of the Amazon SNS topic.
	//
	// The following arguments are optional:
	SnsTopicArn string `pulumi:"snsTopicArn"`
}

// ResponsePlanIncidentTemplateNotificationTargetInput is an input type that accepts ResponsePlanIncidentTemplateNotificationTargetArgs and ResponsePlanIncidentTemplateNotificationTargetOutput values.
// You can construct a concrete instance of `ResponsePlanIncidentTemplateNotificationTargetInput` via:
//
//	ResponsePlanIncidentTemplateNotificationTargetArgs{...}
type ResponsePlanIncidentTemplateNotificationTargetInput interface {
	pulumi.Input

	ToResponsePlanIncidentTemplateNotificationTargetOutput() ResponsePlanIncidentTemplateNotificationTargetOutput
	ToResponsePlanIncidentTemplateNotificationTargetOutputWithContext(context.Context) ResponsePlanIncidentTemplateNotificationTargetOutput
}

type ResponsePlanIncidentTemplateNotificationTargetArgs struct {
	// The ARN of the Amazon SNS topic.
	//
	// The following arguments are optional:
	SnsTopicArn pulumi.StringInput `pulumi:"snsTopicArn"`
}

func (ResponsePlanIncidentTemplateNotificationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (i ResponsePlanIncidentTemplateNotificationTargetArgs) ToResponsePlanIncidentTemplateNotificationTargetOutput() ResponsePlanIncidentTemplateNotificationTargetOutput {
	return i.ToResponsePlanIncidentTemplateNotificationTargetOutputWithContext(context.Background())
}

func (i ResponsePlanIncidentTemplateNotificationTargetArgs) ToResponsePlanIncidentTemplateNotificationTargetOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateNotificationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplateNotificationTargetOutput)
}

// ResponsePlanIncidentTemplateNotificationTargetArrayInput is an input type that accepts ResponsePlanIncidentTemplateNotificationTargetArray and ResponsePlanIncidentTemplateNotificationTargetArrayOutput values.
// You can construct a concrete instance of `ResponsePlanIncidentTemplateNotificationTargetArrayInput` via:
//
//	ResponsePlanIncidentTemplateNotificationTargetArray{ ResponsePlanIncidentTemplateNotificationTargetArgs{...} }
type ResponsePlanIncidentTemplateNotificationTargetArrayInput interface {
	pulumi.Input

	ToResponsePlanIncidentTemplateNotificationTargetArrayOutput() ResponsePlanIncidentTemplateNotificationTargetArrayOutput
	ToResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(context.Context) ResponsePlanIncidentTemplateNotificationTargetArrayOutput
}

type ResponsePlanIncidentTemplateNotificationTargetArray []ResponsePlanIncidentTemplateNotificationTargetInput

func (ResponsePlanIncidentTemplateNotificationTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (i ResponsePlanIncidentTemplateNotificationTargetArray) ToResponsePlanIncidentTemplateNotificationTargetArrayOutput() ResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return i.ToResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(context.Background())
}

func (i ResponsePlanIncidentTemplateNotificationTargetArray) ToResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplateNotificationTargetArrayOutput)
}

type ResponsePlanIncidentTemplateNotificationTargetOutput struct{ *pulumi.OutputState }

func (ResponsePlanIncidentTemplateNotificationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (o ResponsePlanIncidentTemplateNotificationTargetOutput) ToResponsePlanIncidentTemplateNotificationTargetOutput() ResponsePlanIncidentTemplateNotificationTargetOutput {
	return o
}

func (o ResponsePlanIncidentTemplateNotificationTargetOutput) ToResponsePlanIncidentTemplateNotificationTargetOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateNotificationTargetOutput {
	return o
}

// The ARN of the Amazon SNS topic.
//
// The following arguments are optional:
func (o ResponsePlanIncidentTemplateNotificationTargetOutput) SnsTopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplateNotificationTarget) string { return v.SnsTopicArn }).(pulumi.StringOutput)
}

type ResponsePlanIncidentTemplateNotificationTargetArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanIncidentTemplateNotificationTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (o ResponsePlanIncidentTemplateNotificationTargetArrayOutput) ToResponsePlanIncidentTemplateNotificationTargetArrayOutput() ResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return o
}

func (o ResponsePlanIncidentTemplateNotificationTargetArrayOutput) ToResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return o
}

func (o ResponsePlanIncidentTemplateNotificationTargetArrayOutput) Index(i pulumi.IntInput) ResponsePlanIncidentTemplateNotificationTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanIncidentTemplateNotificationTarget {
		return vs[0].([]ResponsePlanIncidentTemplateNotificationTarget)[vs[1].(int)]
	}).(ResponsePlanIncidentTemplateNotificationTargetOutput)
}

type ResponsePlanIntegration struct {
	// Details about the PagerDuty configuration for a response plan. The following values are supported:
	Pagerduties []ResponsePlanIntegrationPagerduty `pulumi:"pagerduties"`
}

// ResponsePlanIntegrationInput is an input type that accepts ResponsePlanIntegrationArgs and ResponsePlanIntegrationOutput values.
// You can construct a concrete instance of `ResponsePlanIntegrationInput` via:
//
//	ResponsePlanIntegrationArgs{...}
type ResponsePlanIntegrationInput interface {
	pulumi.Input

	ToResponsePlanIntegrationOutput() ResponsePlanIntegrationOutput
	ToResponsePlanIntegrationOutputWithContext(context.Context) ResponsePlanIntegrationOutput
}

type ResponsePlanIntegrationArgs struct {
	// Details about the PagerDuty configuration for a response plan. The following values are supported:
	Pagerduties ResponsePlanIntegrationPagerdutyArrayInput `pulumi:"pagerduties"`
}

func (ResponsePlanIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIntegration)(nil)).Elem()
}

func (i ResponsePlanIntegrationArgs) ToResponsePlanIntegrationOutput() ResponsePlanIntegrationOutput {
	return i.ToResponsePlanIntegrationOutputWithContext(context.Background())
}

func (i ResponsePlanIntegrationArgs) ToResponsePlanIntegrationOutputWithContext(ctx context.Context) ResponsePlanIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIntegrationOutput)
}

func (i ResponsePlanIntegrationArgs) ToResponsePlanIntegrationPtrOutput() ResponsePlanIntegrationPtrOutput {
	return i.ToResponsePlanIntegrationPtrOutputWithContext(context.Background())
}

func (i ResponsePlanIntegrationArgs) ToResponsePlanIntegrationPtrOutputWithContext(ctx context.Context) ResponsePlanIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIntegrationOutput).ToResponsePlanIntegrationPtrOutputWithContext(ctx)
}

// ResponsePlanIntegrationPtrInput is an input type that accepts ResponsePlanIntegrationArgs, ResponsePlanIntegrationPtr and ResponsePlanIntegrationPtrOutput values.
// You can construct a concrete instance of `ResponsePlanIntegrationPtrInput` via:
//
//	        ResponsePlanIntegrationArgs{...}
//
//	or:
//
//	        nil
type ResponsePlanIntegrationPtrInput interface {
	pulumi.Input

	ToResponsePlanIntegrationPtrOutput() ResponsePlanIntegrationPtrOutput
	ToResponsePlanIntegrationPtrOutputWithContext(context.Context) ResponsePlanIntegrationPtrOutput
}

type responsePlanIntegrationPtrType ResponsePlanIntegrationArgs

func ResponsePlanIntegrationPtr(v *ResponsePlanIntegrationArgs) ResponsePlanIntegrationPtrInput {
	return (*responsePlanIntegrationPtrType)(v)
}

func (*responsePlanIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanIntegration)(nil)).Elem()
}

func (i *responsePlanIntegrationPtrType) ToResponsePlanIntegrationPtrOutput() ResponsePlanIntegrationPtrOutput {
	return i.ToResponsePlanIntegrationPtrOutputWithContext(context.Background())
}

func (i *responsePlanIntegrationPtrType) ToResponsePlanIntegrationPtrOutputWithContext(ctx context.Context) ResponsePlanIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIntegrationPtrOutput)
}

type ResponsePlanIntegrationOutput struct{ *pulumi.OutputState }

func (ResponsePlanIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIntegration)(nil)).Elem()
}

func (o ResponsePlanIntegrationOutput) ToResponsePlanIntegrationOutput() ResponsePlanIntegrationOutput {
	return o
}

func (o ResponsePlanIntegrationOutput) ToResponsePlanIntegrationOutputWithContext(ctx context.Context) ResponsePlanIntegrationOutput {
	return o
}

func (o ResponsePlanIntegrationOutput) ToResponsePlanIntegrationPtrOutput() ResponsePlanIntegrationPtrOutput {
	return o.ToResponsePlanIntegrationPtrOutputWithContext(context.Background())
}

func (o ResponsePlanIntegrationOutput) ToResponsePlanIntegrationPtrOutputWithContext(ctx context.Context) ResponsePlanIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponsePlanIntegration) *ResponsePlanIntegration {
		return &v
	}).(ResponsePlanIntegrationPtrOutput)
}

// Details about the PagerDuty configuration for a response plan. The following values are supported:
func (o ResponsePlanIntegrationOutput) Pagerduties() ResponsePlanIntegrationPagerdutyArrayOutput {
	return o.ApplyT(func(v ResponsePlanIntegration) []ResponsePlanIntegrationPagerduty { return v.Pagerduties }).(ResponsePlanIntegrationPagerdutyArrayOutput)
}

type ResponsePlanIntegrationPtrOutput struct{ *pulumi.OutputState }

func (ResponsePlanIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanIntegration)(nil)).Elem()
}

func (o ResponsePlanIntegrationPtrOutput) ToResponsePlanIntegrationPtrOutput() ResponsePlanIntegrationPtrOutput {
	return o
}

func (o ResponsePlanIntegrationPtrOutput) ToResponsePlanIntegrationPtrOutputWithContext(ctx context.Context) ResponsePlanIntegrationPtrOutput {
	return o
}

func (o ResponsePlanIntegrationPtrOutput) Elem() ResponsePlanIntegrationOutput {
	return o.ApplyT(func(v *ResponsePlanIntegration) ResponsePlanIntegration {
		if v != nil {
			return *v
		}
		var ret ResponsePlanIntegration
		return ret
	}).(ResponsePlanIntegrationOutput)
}

// Details about the PagerDuty configuration for a response plan. The following values are supported:
func (o ResponsePlanIntegrationPtrOutput) Pagerduties() ResponsePlanIntegrationPagerdutyArrayOutput {
	return o.ApplyT(func(v *ResponsePlanIntegration) []ResponsePlanIntegrationPagerduty {
		if v == nil {
			return nil
		}
		return v.Pagerduties
	}).(ResponsePlanIntegrationPagerdutyArrayOutput)
}

type ResponsePlanIntegrationPagerduty struct {
	// The name of the response plan.
	Name string `pulumi:"name"`
	// The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials.
	//
	// For more information about the constraints for each field, see [CreateResponsePlan](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateResponsePlan.html) in the *AWS Systems Manager Incident Manager API Reference*.
	SecretId string `pulumi:"secretId"`
	// The ID of the PagerDuty service that the response plan associated with the incident at launch.
	ServiceId string `pulumi:"serviceId"`
}

// ResponsePlanIntegrationPagerdutyInput is an input type that accepts ResponsePlanIntegrationPagerdutyArgs and ResponsePlanIntegrationPagerdutyOutput values.
// You can construct a concrete instance of `ResponsePlanIntegrationPagerdutyInput` via:
//
//	ResponsePlanIntegrationPagerdutyArgs{...}
type ResponsePlanIntegrationPagerdutyInput interface {
	pulumi.Input

	ToResponsePlanIntegrationPagerdutyOutput() ResponsePlanIntegrationPagerdutyOutput
	ToResponsePlanIntegrationPagerdutyOutputWithContext(context.Context) ResponsePlanIntegrationPagerdutyOutput
}

type ResponsePlanIntegrationPagerdutyArgs struct {
	// The name of the response plan.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials.
	//
	// For more information about the constraints for each field, see [CreateResponsePlan](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateResponsePlan.html) in the *AWS Systems Manager Incident Manager API Reference*.
	SecretId pulumi.StringInput `pulumi:"secretId"`
	// The ID of the PagerDuty service that the response plan associated with the incident at launch.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (ResponsePlanIntegrationPagerdutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (i ResponsePlanIntegrationPagerdutyArgs) ToResponsePlanIntegrationPagerdutyOutput() ResponsePlanIntegrationPagerdutyOutput {
	return i.ToResponsePlanIntegrationPagerdutyOutputWithContext(context.Background())
}

func (i ResponsePlanIntegrationPagerdutyArgs) ToResponsePlanIntegrationPagerdutyOutputWithContext(ctx context.Context) ResponsePlanIntegrationPagerdutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIntegrationPagerdutyOutput)
}

// ResponsePlanIntegrationPagerdutyArrayInput is an input type that accepts ResponsePlanIntegrationPagerdutyArray and ResponsePlanIntegrationPagerdutyArrayOutput values.
// You can construct a concrete instance of `ResponsePlanIntegrationPagerdutyArrayInput` via:
//
//	ResponsePlanIntegrationPagerdutyArray{ ResponsePlanIntegrationPagerdutyArgs{...} }
type ResponsePlanIntegrationPagerdutyArrayInput interface {
	pulumi.Input

	ToResponsePlanIntegrationPagerdutyArrayOutput() ResponsePlanIntegrationPagerdutyArrayOutput
	ToResponsePlanIntegrationPagerdutyArrayOutputWithContext(context.Context) ResponsePlanIntegrationPagerdutyArrayOutput
}

type ResponsePlanIntegrationPagerdutyArray []ResponsePlanIntegrationPagerdutyInput

func (ResponsePlanIntegrationPagerdutyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (i ResponsePlanIntegrationPagerdutyArray) ToResponsePlanIntegrationPagerdutyArrayOutput() ResponsePlanIntegrationPagerdutyArrayOutput {
	return i.ToResponsePlanIntegrationPagerdutyArrayOutputWithContext(context.Background())
}

func (i ResponsePlanIntegrationPagerdutyArray) ToResponsePlanIntegrationPagerdutyArrayOutputWithContext(ctx context.Context) ResponsePlanIntegrationPagerdutyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIntegrationPagerdutyArrayOutput)
}

type ResponsePlanIntegrationPagerdutyOutput struct{ *pulumi.OutputState }

func (ResponsePlanIntegrationPagerdutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (o ResponsePlanIntegrationPagerdutyOutput) ToResponsePlanIntegrationPagerdutyOutput() ResponsePlanIntegrationPagerdutyOutput {
	return o
}

func (o ResponsePlanIntegrationPagerdutyOutput) ToResponsePlanIntegrationPagerdutyOutputWithContext(ctx context.Context) ResponsePlanIntegrationPagerdutyOutput {
	return o
}

// The name of the response plan.
func (o ResponsePlanIntegrationPagerdutyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanIntegrationPagerduty) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials.
//
// For more information about the constraints for each field, see [CreateResponsePlan](https://docs.aws.amazon.com/incident-manager/latest/APIReference/API_CreateResponsePlan.html) in the *AWS Systems Manager Incident Manager API Reference*.
func (o ResponsePlanIntegrationPagerdutyOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanIntegrationPagerduty) string { return v.SecretId }).(pulumi.StringOutput)
}

// The ID of the PagerDuty service that the response plan associated with the incident at launch.
func (o ResponsePlanIntegrationPagerdutyOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanIntegrationPagerduty) string { return v.ServiceId }).(pulumi.StringOutput)
}

type ResponsePlanIntegrationPagerdutyArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanIntegrationPagerdutyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (o ResponsePlanIntegrationPagerdutyArrayOutput) ToResponsePlanIntegrationPagerdutyArrayOutput() ResponsePlanIntegrationPagerdutyArrayOutput {
	return o
}

func (o ResponsePlanIntegrationPagerdutyArrayOutput) ToResponsePlanIntegrationPagerdutyArrayOutputWithContext(ctx context.Context) ResponsePlanIntegrationPagerdutyArrayOutput {
	return o
}

func (o ResponsePlanIntegrationPagerdutyArrayOutput) Index(i pulumi.IntInput) ResponsePlanIntegrationPagerdutyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanIntegrationPagerduty {
		return vs[0].([]ResponsePlanIntegrationPagerduty)[vs[1].(int)]
	}).(ResponsePlanIntegrationPagerdutyOutput)
}

type GetReplicationSetRegion struct {
	// The ARN of the AWS Key Management Service (AWS KMS) encryption key.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
	// The name of the Region.
	Name string `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status string `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage string `pulumi:"statusMessage"`
}

// GetReplicationSetRegionInput is an input type that accepts GetReplicationSetRegionArgs and GetReplicationSetRegionOutput values.
// You can construct a concrete instance of `GetReplicationSetRegionInput` via:
//
//	GetReplicationSetRegionArgs{...}
type GetReplicationSetRegionInput interface {
	pulumi.Input

	ToGetReplicationSetRegionOutput() GetReplicationSetRegionOutput
	ToGetReplicationSetRegionOutputWithContext(context.Context) GetReplicationSetRegionOutput
}

type GetReplicationSetRegionArgs struct {
	// The ARN of the AWS Key Management Service (AWS KMS) encryption key.
	KmsKeyArn pulumi.StringInput `pulumi:"kmsKeyArn"`
	// The name of the Region.
	Name pulumi.StringInput `pulumi:"name"`
	// The current status of the Region.
	// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
	Status pulumi.StringInput `pulumi:"status"`
	// More information about the status of a Region.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (GetReplicationSetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSetRegion)(nil)).Elem()
}

func (i GetReplicationSetRegionArgs) ToGetReplicationSetRegionOutput() GetReplicationSetRegionOutput {
	return i.ToGetReplicationSetRegionOutputWithContext(context.Background())
}

func (i GetReplicationSetRegionArgs) ToGetReplicationSetRegionOutputWithContext(ctx context.Context) GetReplicationSetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationSetRegionOutput)
}

// GetReplicationSetRegionArrayInput is an input type that accepts GetReplicationSetRegionArray and GetReplicationSetRegionArrayOutput values.
// You can construct a concrete instance of `GetReplicationSetRegionArrayInput` via:
//
//	GetReplicationSetRegionArray{ GetReplicationSetRegionArgs{...} }
type GetReplicationSetRegionArrayInput interface {
	pulumi.Input

	ToGetReplicationSetRegionArrayOutput() GetReplicationSetRegionArrayOutput
	ToGetReplicationSetRegionArrayOutputWithContext(context.Context) GetReplicationSetRegionArrayOutput
}

type GetReplicationSetRegionArray []GetReplicationSetRegionInput

func (GetReplicationSetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationSetRegion)(nil)).Elem()
}

func (i GetReplicationSetRegionArray) ToGetReplicationSetRegionArrayOutput() GetReplicationSetRegionArrayOutput {
	return i.ToGetReplicationSetRegionArrayOutputWithContext(context.Background())
}

func (i GetReplicationSetRegionArray) ToGetReplicationSetRegionArrayOutputWithContext(ctx context.Context) GetReplicationSetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationSetRegionArrayOutput)
}

type GetReplicationSetRegionOutput struct{ *pulumi.OutputState }

func (GetReplicationSetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationSetRegion)(nil)).Elem()
}

func (o GetReplicationSetRegionOutput) ToGetReplicationSetRegionOutput() GetReplicationSetRegionOutput {
	return o
}

func (o GetReplicationSetRegionOutput) ToGetReplicationSetRegionOutputWithContext(ctx context.Context) GetReplicationSetRegionOutput {
	return o
}

// The ARN of the AWS Key Management Service (AWS KMS) encryption key.
func (o GetReplicationSetRegionOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

// The name of the Region.
func (o GetReplicationSetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of the Region.
// * Valid Values: `ACTIVE` | `CREATING` | `UPDATING` | `DELETING` | `FAILED`
func (o GetReplicationSetRegionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.Status }).(pulumi.StringOutput)
}

// More information about the status of a Region.
func (o GetReplicationSetRegionOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationSetRegion) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type GetReplicationSetRegionArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationSetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationSetRegion)(nil)).Elem()
}

func (o GetReplicationSetRegionArrayOutput) ToGetReplicationSetRegionArrayOutput() GetReplicationSetRegionArrayOutput {
	return o
}

func (o GetReplicationSetRegionArrayOutput) ToGetReplicationSetRegionArrayOutputWithContext(ctx context.Context) GetReplicationSetRegionArrayOutput {
	return o
}

func (o GetReplicationSetRegionArrayOutput) Index(i pulumi.IntInput) GetReplicationSetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationSetRegion {
		return vs[0].([]GetReplicationSetRegion)[vs[1].(int)]
	}).(GetReplicationSetRegionOutput)
}

type GetResponsePlanAction struct {
	// The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
	SsmAutomations []GetResponsePlanActionSsmAutomation `pulumi:"ssmAutomations"`
}

// GetResponsePlanActionInput is an input type that accepts GetResponsePlanActionArgs and GetResponsePlanActionOutput values.
// You can construct a concrete instance of `GetResponsePlanActionInput` via:
//
//	GetResponsePlanActionArgs{...}
type GetResponsePlanActionInput interface {
	pulumi.Input

	ToGetResponsePlanActionOutput() GetResponsePlanActionOutput
	ToGetResponsePlanActionOutputWithContext(context.Context) GetResponsePlanActionOutput
}

type GetResponsePlanActionArgs struct {
	// The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
	SsmAutomations GetResponsePlanActionSsmAutomationArrayInput `pulumi:"ssmAutomations"`
}

func (GetResponsePlanActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanAction)(nil)).Elem()
}

func (i GetResponsePlanActionArgs) ToGetResponsePlanActionOutput() GetResponsePlanActionOutput {
	return i.ToGetResponsePlanActionOutputWithContext(context.Background())
}

func (i GetResponsePlanActionArgs) ToGetResponsePlanActionOutputWithContext(ctx context.Context) GetResponsePlanActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanActionOutput)
}

// GetResponsePlanActionArrayInput is an input type that accepts GetResponsePlanActionArray and GetResponsePlanActionArrayOutput values.
// You can construct a concrete instance of `GetResponsePlanActionArrayInput` via:
//
//	GetResponsePlanActionArray{ GetResponsePlanActionArgs{...} }
type GetResponsePlanActionArrayInput interface {
	pulumi.Input

	ToGetResponsePlanActionArrayOutput() GetResponsePlanActionArrayOutput
	ToGetResponsePlanActionArrayOutputWithContext(context.Context) GetResponsePlanActionArrayOutput
}

type GetResponsePlanActionArray []GetResponsePlanActionInput

func (GetResponsePlanActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanAction)(nil)).Elem()
}

func (i GetResponsePlanActionArray) ToGetResponsePlanActionArrayOutput() GetResponsePlanActionArrayOutput {
	return i.ToGetResponsePlanActionArrayOutputWithContext(context.Background())
}

func (i GetResponsePlanActionArray) ToGetResponsePlanActionArrayOutputWithContext(ctx context.Context) GetResponsePlanActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanActionArrayOutput)
}

type GetResponsePlanActionOutput struct{ *pulumi.OutputState }

func (GetResponsePlanActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanAction)(nil)).Elem()
}

func (o GetResponsePlanActionOutput) ToGetResponsePlanActionOutput() GetResponsePlanActionOutput {
	return o
}

func (o GetResponsePlanActionOutput) ToGetResponsePlanActionOutputWithContext(ctx context.Context) GetResponsePlanActionOutput {
	return o
}

// The Systems Manager automation document to start as the runbook at the beginning of the incident. The following values are supported:
func (o GetResponsePlanActionOutput) SsmAutomations() GetResponsePlanActionSsmAutomationArrayOutput {
	return o.ApplyT(func(v GetResponsePlanAction) []GetResponsePlanActionSsmAutomation { return v.SsmAutomations }).(GetResponsePlanActionSsmAutomationArrayOutput)
}

type GetResponsePlanActionArrayOutput struct{ *pulumi.OutputState }

func (GetResponsePlanActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanAction)(nil)).Elem()
}

func (o GetResponsePlanActionArrayOutput) ToGetResponsePlanActionArrayOutput() GetResponsePlanActionArrayOutput {
	return o
}

func (o GetResponsePlanActionArrayOutput) ToGetResponsePlanActionArrayOutputWithContext(ctx context.Context) GetResponsePlanActionArrayOutput {
	return o
}

func (o GetResponsePlanActionArrayOutput) Index(i pulumi.IntInput) GetResponsePlanActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponsePlanAction {
		return vs[0].([]GetResponsePlanAction)[vs[1].(int)]
	}).(GetResponsePlanActionOutput)
}

type GetResponsePlanActionSsmAutomation struct {
	// The automation document's name.
	DocumentName string `pulumi:"documentName"`
	// The version of the automation document to use at runtime.
	DocumentVersion string `pulumi:"documentVersion"`
	// The key-value pair used to resolve dynamic parameter values when processing a Systems Manager Automation runbook.
	DynamicParameters map[string]string `pulumi:"dynamicParameters"`
	// The key-value pair parameters used when the automation document runs. The following values are supported:
	Parameters []GetResponsePlanActionSsmAutomationParameter `pulumi:"parameters"`
	// The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.
	RoleArn string `pulumi:"roleArn"`
	// The account that runs the automation document. This can be in either the management account or an application account.
	TargetAccount string `pulumi:"targetAccount"`
}

// GetResponsePlanActionSsmAutomationInput is an input type that accepts GetResponsePlanActionSsmAutomationArgs and GetResponsePlanActionSsmAutomationOutput values.
// You can construct a concrete instance of `GetResponsePlanActionSsmAutomationInput` via:
//
//	GetResponsePlanActionSsmAutomationArgs{...}
type GetResponsePlanActionSsmAutomationInput interface {
	pulumi.Input

	ToGetResponsePlanActionSsmAutomationOutput() GetResponsePlanActionSsmAutomationOutput
	ToGetResponsePlanActionSsmAutomationOutputWithContext(context.Context) GetResponsePlanActionSsmAutomationOutput
}

type GetResponsePlanActionSsmAutomationArgs struct {
	// The automation document's name.
	DocumentName pulumi.StringInput `pulumi:"documentName"`
	// The version of the automation document to use at runtime.
	DocumentVersion pulumi.StringInput `pulumi:"documentVersion"`
	// The key-value pair used to resolve dynamic parameter values when processing a Systems Manager Automation runbook.
	DynamicParameters pulumi.StringMapInput `pulumi:"dynamicParameters"`
	// The key-value pair parameters used when the automation document runs. The following values are supported:
	Parameters GetResponsePlanActionSsmAutomationParameterArrayInput `pulumi:"parameters"`
	// The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The account that runs the automation document. This can be in either the management account or an application account.
	TargetAccount pulumi.StringInput `pulumi:"targetAccount"`
}

func (GetResponsePlanActionSsmAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (i GetResponsePlanActionSsmAutomationArgs) ToGetResponsePlanActionSsmAutomationOutput() GetResponsePlanActionSsmAutomationOutput {
	return i.ToGetResponsePlanActionSsmAutomationOutputWithContext(context.Background())
}

func (i GetResponsePlanActionSsmAutomationArgs) ToGetResponsePlanActionSsmAutomationOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanActionSsmAutomationOutput)
}

// GetResponsePlanActionSsmAutomationArrayInput is an input type that accepts GetResponsePlanActionSsmAutomationArray and GetResponsePlanActionSsmAutomationArrayOutput values.
// You can construct a concrete instance of `GetResponsePlanActionSsmAutomationArrayInput` via:
//
//	GetResponsePlanActionSsmAutomationArray{ GetResponsePlanActionSsmAutomationArgs{...} }
type GetResponsePlanActionSsmAutomationArrayInput interface {
	pulumi.Input

	ToGetResponsePlanActionSsmAutomationArrayOutput() GetResponsePlanActionSsmAutomationArrayOutput
	ToGetResponsePlanActionSsmAutomationArrayOutputWithContext(context.Context) GetResponsePlanActionSsmAutomationArrayOutput
}

type GetResponsePlanActionSsmAutomationArray []GetResponsePlanActionSsmAutomationInput

func (GetResponsePlanActionSsmAutomationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (i GetResponsePlanActionSsmAutomationArray) ToGetResponsePlanActionSsmAutomationArrayOutput() GetResponsePlanActionSsmAutomationArrayOutput {
	return i.ToGetResponsePlanActionSsmAutomationArrayOutputWithContext(context.Background())
}

func (i GetResponsePlanActionSsmAutomationArray) ToGetResponsePlanActionSsmAutomationArrayOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanActionSsmAutomationArrayOutput)
}

type GetResponsePlanActionSsmAutomationOutput struct{ *pulumi.OutputState }

func (GetResponsePlanActionSsmAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (o GetResponsePlanActionSsmAutomationOutput) ToGetResponsePlanActionSsmAutomationOutput() GetResponsePlanActionSsmAutomationOutput {
	return o
}

func (o GetResponsePlanActionSsmAutomationOutput) ToGetResponsePlanActionSsmAutomationOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationOutput {
	return o
}

// The automation document's name.
func (o GetResponsePlanActionSsmAutomationOutput) DocumentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomation) string { return v.DocumentName }).(pulumi.StringOutput)
}

// The version of the automation document to use at runtime.
func (o GetResponsePlanActionSsmAutomationOutput) DocumentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomation) string { return v.DocumentVersion }).(pulumi.StringOutput)
}

// The key-value pair used to resolve dynamic parameter values when processing a Systems Manager Automation runbook.
func (o GetResponsePlanActionSsmAutomationOutput) DynamicParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomation) map[string]string { return v.DynamicParameters }).(pulumi.StringMapOutput)
}

// The key-value pair parameters used when the automation document runs. The following values are supported:
func (o GetResponsePlanActionSsmAutomationOutput) Parameters() GetResponsePlanActionSsmAutomationParameterArrayOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomation) []GetResponsePlanActionSsmAutomationParameter {
		return v.Parameters
	}).(GetResponsePlanActionSsmAutomationParameterArrayOutput)
}

// The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.
func (o GetResponsePlanActionSsmAutomationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomation) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The account that runs the automation document. This can be in either the management account or an application account.
func (o GetResponsePlanActionSsmAutomationOutput) TargetAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomation) string { return v.TargetAccount }).(pulumi.StringOutput)
}

type GetResponsePlanActionSsmAutomationArrayOutput struct{ *pulumi.OutputState }

func (GetResponsePlanActionSsmAutomationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanActionSsmAutomation)(nil)).Elem()
}

func (o GetResponsePlanActionSsmAutomationArrayOutput) ToGetResponsePlanActionSsmAutomationArrayOutput() GetResponsePlanActionSsmAutomationArrayOutput {
	return o
}

func (o GetResponsePlanActionSsmAutomationArrayOutput) ToGetResponsePlanActionSsmAutomationArrayOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationArrayOutput {
	return o
}

func (o GetResponsePlanActionSsmAutomationArrayOutput) Index(i pulumi.IntInput) GetResponsePlanActionSsmAutomationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponsePlanActionSsmAutomation {
		return vs[0].([]GetResponsePlanActionSsmAutomation)[vs[1].(int)]
	}).(GetResponsePlanActionSsmAutomationOutput)
}

type GetResponsePlanActionSsmAutomationParameter struct {
	// The name of the PagerDuty configuration.
	Name string `pulumi:"name"`
	// The values for the associated parameter name.
	Values []string `pulumi:"values"`
}

// GetResponsePlanActionSsmAutomationParameterInput is an input type that accepts GetResponsePlanActionSsmAutomationParameterArgs and GetResponsePlanActionSsmAutomationParameterOutput values.
// You can construct a concrete instance of `GetResponsePlanActionSsmAutomationParameterInput` via:
//
//	GetResponsePlanActionSsmAutomationParameterArgs{...}
type GetResponsePlanActionSsmAutomationParameterInput interface {
	pulumi.Input

	ToGetResponsePlanActionSsmAutomationParameterOutput() GetResponsePlanActionSsmAutomationParameterOutput
	ToGetResponsePlanActionSsmAutomationParameterOutputWithContext(context.Context) GetResponsePlanActionSsmAutomationParameterOutput
}

type GetResponsePlanActionSsmAutomationParameterArgs struct {
	// The name of the PagerDuty configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The values for the associated parameter name.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetResponsePlanActionSsmAutomationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (i GetResponsePlanActionSsmAutomationParameterArgs) ToGetResponsePlanActionSsmAutomationParameterOutput() GetResponsePlanActionSsmAutomationParameterOutput {
	return i.ToGetResponsePlanActionSsmAutomationParameterOutputWithContext(context.Background())
}

func (i GetResponsePlanActionSsmAutomationParameterArgs) ToGetResponsePlanActionSsmAutomationParameterOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanActionSsmAutomationParameterOutput)
}

// GetResponsePlanActionSsmAutomationParameterArrayInput is an input type that accepts GetResponsePlanActionSsmAutomationParameterArray and GetResponsePlanActionSsmAutomationParameterArrayOutput values.
// You can construct a concrete instance of `GetResponsePlanActionSsmAutomationParameterArrayInput` via:
//
//	GetResponsePlanActionSsmAutomationParameterArray{ GetResponsePlanActionSsmAutomationParameterArgs{...} }
type GetResponsePlanActionSsmAutomationParameterArrayInput interface {
	pulumi.Input

	ToGetResponsePlanActionSsmAutomationParameterArrayOutput() GetResponsePlanActionSsmAutomationParameterArrayOutput
	ToGetResponsePlanActionSsmAutomationParameterArrayOutputWithContext(context.Context) GetResponsePlanActionSsmAutomationParameterArrayOutput
}

type GetResponsePlanActionSsmAutomationParameterArray []GetResponsePlanActionSsmAutomationParameterInput

func (GetResponsePlanActionSsmAutomationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (i GetResponsePlanActionSsmAutomationParameterArray) ToGetResponsePlanActionSsmAutomationParameterArrayOutput() GetResponsePlanActionSsmAutomationParameterArrayOutput {
	return i.ToGetResponsePlanActionSsmAutomationParameterArrayOutputWithContext(context.Background())
}

func (i GetResponsePlanActionSsmAutomationParameterArray) ToGetResponsePlanActionSsmAutomationParameterArrayOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanActionSsmAutomationParameterArrayOutput)
}

type GetResponsePlanActionSsmAutomationParameterOutput struct{ *pulumi.OutputState }

func (GetResponsePlanActionSsmAutomationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (o GetResponsePlanActionSsmAutomationParameterOutput) ToGetResponsePlanActionSsmAutomationParameterOutput() GetResponsePlanActionSsmAutomationParameterOutput {
	return o
}

func (o GetResponsePlanActionSsmAutomationParameterOutput) ToGetResponsePlanActionSsmAutomationParameterOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationParameterOutput {
	return o
}

// The name of the PagerDuty configuration.
func (o GetResponsePlanActionSsmAutomationParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomationParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The values for the associated parameter name.
func (o GetResponsePlanActionSsmAutomationParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResponsePlanActionSsmAutomationParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetResponsePlanActionSsmAutomationParameterArrayOutput struct{ *pulumi.OutputState }

func (GetResponsePlanActionSsmAutomationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanActionSsmAutomationParameter)(nil)).Elem()
}

func (o GetResponsePlanActionSsmAutomationParameterArrayOutput) ToGetResponsePlanActionSsmAutomationParameterArrayOutput() GetResponsePlanActionSsmAutomationParameterArrayOutput {
	return o
}

func (o GetResponsePlanActionSsmAutomationParameterArrayOutput) ToGetResponsePlanActionSsmAutomationParameterArrayOutputWithContext(ctx context.Context) GetResponsePlanActionSsmAutomationParameterArrayOutput {
	return o
}

func (o GetResponsePlanActionSsmAutomationParameterArrayOutput) Index(i pulumi.IntInput) GetResponsePlanActionSsmAutomationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponsePlanActionSsmAutomationParameter {
		return vs[0].([]GetResponsePlanActionSsmAutomationParameter)[vs[1].(int)]
	}).(GetResponsePlanActionSsmAutomationParameterOutput)
}

type GetResponsePlanIncidentTemplate struct {
	// A string used to stop Incident Manager from creating multiple incident records for the same incident.
	DedupeString string `pulumi:"dedupeString"`
	// The impact value of a generated incident. The following values are supported:
	Impact int `pulumi:"impact"`
	// The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
	IncidentTags map[string]string `pulumi:"incidentTags"`
	// The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
	NotificationTargets []GetResponsePlanIncidentTemplateNotificationTarget `pulumi:"notificationTargets"`
	// The summary of an incident.
	Summary string `pulumi:"summary"`
	// The title of a generated incident.
	Title string `pulumi:"title"`
}

// GetResponsePlanIncidentTemplateInput is an input type that accepts GetResponsePlanIncidentTemplateArgs and GetResponsePlanIncidentTemplateOutput values.
// You can construct a concrete instance of `GetResponsePlanIncidentTemplateInput` via:
//
//	GetResponsePlanIncidentTemplateArgs{...}
type GetResponsePlanIncidentTemplateInput interface {
	pulumi.Input

	ToGetResponsePlanIncidentTemplateOutput() GetResponsePlanIncidentTemplateOutput
	ToGetResponsePlanIncidentTemplateOutputWithContext(context.Context) GetResponsePlanIncidentTemplateOutput
}

type GetResponsePlanIncidentTemplateArgs struct {
	// A string used to stop Incident Manager from creating multiple incident records for the same incident.
	DedupeString pulumi.StringInput `pulumi:"dedupeString"`
	// The impact value of a generated incident. The following values are supported:
	Impact pulumi.IntInput `pulumi:"impact"`
	// The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
	IncidentTags pulumi.StringMapInput `pulumi:"incidentTags"`
	// The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
	NotificationTargets GetResponsePlanIncidentTemplateNotificationTargetArrayInput `pulumi:"notificationTargets"`
	// The summary of an incident.
	Summary pulumi.StringInput `pulumi:"summary"`
	// The title of a generated incident.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetResponsePlanIncidentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIncidentTemplate)(nil)).Elem()
}

func (i GetResponsePlanIncidentTemplateArgs) ToGetResponsePlanIncidentTemplateOutput() GetResponsePlanIncidentTemplateOutput {
	return i.ToGetResponsePlanIncidentTemplateOutputWithContext(context.Background())
}

func (i GetResponsePlanIncidentTemplateArgs) ToGetResponsePlanIncidentTemplateOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIncidentTemplateOutput)
}

// GetResponsePlanIncidentTemplateArrayInput is an input type that accepts GetResponsePlanIncidentTemplateArray and GetResponsePlanIncidentTemplateArrayOutput values.
// You can construct a concrete instance of `GetResponsePlanIncidentTemplateArrayInput` via:
//
//	GetResponsePlanIncidentTemplateArray{ GetResponsePlanIncidentTemplateArgs{...} }
type GetResponsePlanIncidentTemplateArrayInput interface {
	pulumi.Input

	ToGetResponsePlanIncidentTemplateArrayOutput() GetResponsePlanIncidentTemplateArrayOutput
	ToGetResponsePlanIncidentTemplateArrayOutputWithContext(context.Context) GetResponsePlanIncidentTemplateArrayOutput
}

type GetResponsePlanIncidentTemplateArray []GetResponsePlanIncidentTemplateInput

func (GetResponsePlanIncidentTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIncidentTemplate)(nil)).Elem()
}

func (i GetResponsePlanIncidentTemplateArray) ToGetResponsePlanIncidentTemplateArrayOutput() GetResponsePlanIncidentTemplateArrayOutput {
	return i.ToGetResponsePlanIncidentTemplateArrayOutputWithContext(context.Background())
}

func (i GetResponsePlanIncidentTemplateArray) ToGetResponsePlanIncidentTemplateArrayOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIncidentTemplateArrayOutput)
}

type GetResponsePlanIncidentTemplateOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIncidentTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIncidentTemplate)(nil)).Elem()
}

func (o GetResponsePlanIncidentTemplateOutput) ToGetResponsePlanIncidentTemplateOutput() GetResponsePlanIncidentTemplateOutput {
	return o
}

func (o GetResponsePlanIncidentTemplateOutput) ToGetResponsePlanIncidentTemplateOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateOutput {
	return o
}

// A string used to stop Incident Manager from creating multiple incident records for the same incident.
func (o GetResponsePlanIncidentTemplateOutput) DedupeString() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanIncidentTemplate) string { return v.DedupeString }).(pulumi.StringOutput)
}

// The impact value of a generated incident. The following values are supported:
func (o GetResponsePlanIncidentTemplateOutput) Impact() pulumi.IntOutput {
	return o.ApplyT(func(v GetResponsePlanIncidentTemplate) int { return v.Impact }).(pulumi.IntOutput)
}

// The tags assigned to an incident template. When an incident starts, Incident Manager assigns the tags specified in the template to the incident.
func (o GetResponsePlanIncidentTemplateOutput) IncidentTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetResponsePlanIncidentTemplate) map[string]string { return v.IncidentTags }).(pulumi.StringMapOutput)
}

// The Amazon Simple Notification Service (Amazon SNS) targets that this incident notifies when it is updated. The `notificationTarget` configuration block supports the following argument:
func (o GetResponsePlanIncidentTemplateOutput) NotificationTargets() GetResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return o.ApplyT(func(v GetResponsePlanIncidentTemplate) []GetResponsePlanIncidentTemplateNotificationTarget {
		return v.NotificationTargets
	}).(GetResponsePlanIncidentTemplateNotificationTargetArrayOutput)
}

// The summary of an incident.
func (o GetResponsePlanIncidentTemplateOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanIncidentTemplate) string { return v.Summary }).(pulumi.StringOutput)
}

// The title of a generated incident.
func (o GetResponsePlanIncidentTemplateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanIncidentTemplate) string { return v.Title }).(pulumi.StringOutput)
}

type GetResponsePlanIncidentTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIncidentTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIncidentTemplate)(nil)).Elem()
}

func (o GetResponsePlanIncidentTemplateArrayOutput) ToGetResponsePlanIncidentTemplateArrayOutput() GetResponsePlanIncidentTemplateArrayOutput {
	return o
}

func (o GetResponsePlanIncidentTemplateArrayOutput) ToGetResponsePlanIncidentTemplateArrayOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateArrayOutput {
	return o
}

func (o GetResponsePlanIncidentTemplateArrayOutput) Index(i pulumi.IntInput) GetResponsePlanIncidentTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponsePlanIncidentTemplate {
		return vs[0].([]GetResponsePlanIncidentTemplate)[vs[1].(int)]
	}).(GetResponsePlanIncidentTemplateOutput)
}

type GetResponsePlanIncidentTemplateNotificationTarget struct {
	// The ARN of the Amazon SNS topic.
	SnsTopicArn string `pulumi:"snsTopicArn"`
}

// GetResponsePlanIncidentTemplateNotificationTargetInput is an input type that accepts GetResponsePlanIncidentTemplateNotificationTargetArgs and GetResponsePlanIncidentTemplateNotificationTargetOutput values.
// You can construct a concrete instance of `GetResponsePlanIncidentTemplateNotificationTargetInput` via:
//
//	GetResponsePlanIncidentTemplateNotificationTargetArgs{...}
type GetResponsePlanIncidentTemplateNotificationTargetInput interface {
	pulumi.Input

	ToGetResponsePlanIncidentTemplateNotificationTargetOutput() GetResponsePlanIncidentTemplateNotificationTargetOutput
	ToGetResponsePlanIncidentTemplateNotificationTargetOutputWithContext(context.Context) GetResponsePlanIncidentTemplateNotificationTargetOutput
}

type GetResponsePlanIncidentTemplateNotificationTargetArgs struct {
	// The ARN of the Amazon SNS topic.
	SnsTopicArn pulumi.StringInput `pulumi:"snsTopicArn"`
}

func (GetResponsePlanIncidentTemplateNotificationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (i GetResponsePlanIncidentTemplateNotificationTargetArgs) ToGetResponsePlanIncidentTemplateNotificationTargetOutput() GetResponsePlanIncidentTemplateNotificationTargetOutput {
	return i.ToGetResponsePlanIncidentTemplateNotificationTargetOutputWithContext(context.Background())
}

func (i GetResponsePlanIncidentTemplateNotificationTargetArgs) ToGetResponsePlanIncidentTemplateNotificationTargetOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateNotificationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIncidentTemplateNotificationTargetOutput)
}

// GetResponsePlanIncidentTemplateNotificationTargetArrayInput is an input type that accepts GetResponsePlanIncidentTemplateNotificationTargetArray and GetResponsePlanIncidentTemplateNotificationTargetArrayOutput values.
// You can construct a concrete instance of `GetResponsePlanIncidentTemplateNotificationTargetArrayInput` via:
//
//	GetResponsePlanIncidentTemplateNotificationTargetArray{ GetResponsePlanIncidentTemplateNotificationTargetArgs{...} }
type GetResponsePlanIncidentTemplateNotificationTargetArrayInput interface {
	pulumi.Input

	ToGetResponsePlanIncidentTemplateNotificationTargetArrayOutput() GetResponsePlanIncidentTemplateNotificationTargetArrayOutput
	ToGetResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(context.Context) GetResponsePlanIncidentTemplateNotificationTargetArrayOutput
}

type GetResponsePlanIncidentTemplateNotificationTargetArray []GetResponsePlanIncidentTemplateNotificationTargetInput

func (GetResponsePlanIncidentTemplateNotificationTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (i GetResponsePlanIncidentTemplateNotificationTargetArray) ToGetResponsePlanIncidentTemplateNotificationTargetArrayOutput() GetResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return i.ToGetResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(context.Background())
}

func (i GetResponsePlanIncidentTemplateNotificationTargetArray) ToGetResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIncidentTemplateNotificationTargetArrayOutput)
}

type GetResponsePlanIncidentTemplateNotificationTargetOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIncidentTemplateNotificationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (o GetResponsePlanIncidentTemplateNotificationTargetOutput) ToGetResponsePlanIncidentTemplateNotificationTargetOutput() GetResponsePlanIncidentTemplateNotificationTargetOutput {
	return o
}

func (o GetResponsePlanIncidentTemplateNotificationTargetOutput) ToGetResponsePlanIncidentTemplateNotificationTargetOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateNotificationTargetOutput {
	return o
}

// The ARN of the Amazon SNS topic.
func (o GetResponsePlanIncidentTemplateNotificationTargetOutput) SnsTopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanIncidentTemplateNotificationTarget) string { return v.SnsTopicArn }).(pulumi.StringOutput)
}

type GetResponsePlanIncidentTemplateNotificationTargetArrayOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIncidentTemplateNotificationTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIncidentTemplateNotificationTarget)(nil)).Elem()
}

func (o GetResponsePlanIncidentTemplateNotificationTargetArrayOutput) ToGetResponsePlanIncidentTemplateNotificationTargetArrayOutput() GetResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return o
}

func (o GetResponsePlanIncidentTemplateNotificationTargetArrayOutput) ToGetResponsePlanIncidentTemplateNotificationTargetArrayOutputWithContext(ctx context.Context) GetResponsePlanIncidentTemplateNotificationTargetArrayOutput {
	return o
}

func (o GetResponsePlanIncidentTemplateNotificationTargetArrayOutput) Index(i pulumi.IntInput) GetResponsePlanIncidentTemplateNotificationTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponsePlanIncidentTemplateNotificationTarget {
		return vs[0].([]GetResponsePlanIncidentTemplateNotificationTarget)[vs[1].(int)]
	}).(GetResponsePlanIncidentTemplateNotificationTargetOutput)
}

type GetResponsePlanIntegration struct {
	// Details about the PagerDuty configuration for a response plan. The following values are supported:
	Pagerduties []GetResponsePlanIntegrationPagerduty `pulumi:"pagerduties"`
}

// GetResponsePlanIntegrationInput is an input type that accepts GetResponsePlanIntegrationArgs and GetResponsePlanIntegrationOutput values.
// You can construct a concrete instance of `GetResponsePlanIntegrationInput` via:
//
//	GetResponsePlanIntegrationArgs{...}
type GetResponsePlanIntegrationInput interface {
	pulumi.Input

	ToGetResponsePlanIntegrationOutput() GetResponsePlanIntegrationOutput
	ToGetResponsePlanIntegrationOutputWithContext(context.Context) GetResponsePlanIntegrationOutput
}

type GetResponsePlanIntegrationArgs struct {
	// Details about the PagerDuty configuration for a response plan. The following values are supported:
	Pagerduties GetResponsePlanIntegrationPagerdutyArrayInput `pulumi:"pagerduties"`
}

func (GetResponsePlanIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIntegration)(nil)).Elem()
}

func (i GetResponsePlanIntegrationArgs) ToGetResponsePlanIntegrationOutput() GetResponsePlanIntegrationOutput {
	return i.ToGetResponsePlanIntegrationOutputWithContext(context.Background())
}

func (i GetResponsePlanIntegrationArgs) ToGetResponsePlanIntegrationOutputWithContext(ctx context.Context) GetResponsePlanIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIntegrationOutput)
}

// GetResponsePlanIntegrationArrayInput is an input type that accepts GetResponsePlanIntegrationArray and GetResponsePlanIntegrationArrayOutput values.
// You can construct a concrete instance of `GetResponsePlanIntegrationArrayInput` via:
//
//	GetResponsePlanIntegrationArray{ GetResponsePlanIntegrationArgs{...} }
type GetResponsePlanIntegrationArrayInput interface {
	pulumi.Input

	ToGetResponsePlanIntegrationArrayOutput() GetResponsePlanIntegrationArrayOutput
	ToGetResponsePlanIntegrationArrayOutputWithContext(context.Context) GetResponsePlanIntegrationArrayOutput
}

type GetResponsePlanIntegrationArray []GetResponsePlanIntegrationInput

func (GetResponsePlanIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIntegration)(nil)).Elem()
}

func (i GetResponsePlanIntegrationArray) ToGetResponsePlanIntegrationArrayOutput() GetResponsePlanIntegrationArrayOutput {
	return i.ToGetResponsePlanIntegrationArrayOutputWithContext(context.Background())
}

func (i GetResponsePlanIntegrationArray) ToGetResponsePlanIntegrationArrayOutputWithContext(ctx context.Context) GetResponsePlanIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIntegrationArrayOutput)
}

type GetResponsePlanIntegrationOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIntegration)(nil)).Elem()
}

func (o GetResponsePlanIntegrationOutput) ToGetResponsePlanIntegrationOutput() GetResponsePlanIntegrationOutput {
	return o
}

func (o GetResponsePlanIntegrationOutput) ToGetResponsePlanIntegrationOutputWithContext(ctx context.Context) GetResponsePlanIntegrationOutput {
	return o
}

// Details about the PagerDuty configuration for a response plan. The following values are supported:
func (o GetResponsePlanIntegrationOutput) Pagerduties() GetResponsePlanIntegrationPagerdutyArrayOutput {
	return o.ApplyT(func(v GetResponsePlanIntegration) []GetResponsePlanIntegrationPagerduty { return v.Pagerduties }).(GetResponsePlanIntegrationPagerdutyArrayOutput)
}

type GetResponsePlanIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIntegration)(nil)).Elem()
}

func (o GetResponsePlanIntegrationArrayOutput) ToGetResponsePlanIntegrationArrayOutput() GetResponsePlanIntegrationArrayOutput {
	return o
}

func (o GetResponsePlanIntegrationArrayOutput) ToGetResponsePlanIntegrationArrayOutputWithContext(ctx context.Context) GetResponsePlanIntegrationArrayOutput {
	return o
}

func (o GetResponsePlanIntegrationArrayOutput) Index(i pulumi.IntInput) GetResponsePlanIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponsePlanIntegration {
		return vs[0].([]GetResponsePlanIntegration)[vs[1].(int)]
	}).(GetResponsePlanIntegrationOutput)
}

type GetResponsePlanIntegrationPagerduty struct {
	// The name of the PagerDuty configuration.
	Name string `pulumi:"name"`
	// The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials.
	SecretId string `pulumi:"secretId"`
	// The ID of the PagerDuty service that the response plan associates with an incident when it launches.
	ServiceId string `pulumi:"serviceId"`
}

// GetResponsePlanIntegrationPagerdutyInput is an input type that accepts GetResponsePlanIntegrationPagerdutyArgs and GetResponsePlanIntegrationPagerdutyOutput values.
// You can construct a concrete instance of `GetResponsePlanIntegrationPagerdutyInput` via:
//
//	GetResponsePlanIntegrationPagerdutyArgs{...}
type GetResponsePlanIntegrationPagerdutyInput interface {
	pulumi.Input

	ToGetResponsePlanIntegrationPagerdutyOutput() GetResponsePlanIntegrationPagerdutyOutput
	ToGetResponsePlanIntegrationPagerdutyOutputWithContext(context.Context) GetResponsePlanIntegrationPagerdutyOutput
}

type GetResponsePlanIntegrationPagerdutyArgs struct {
	// The name of the PagerDuty configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials.
	SecretId pulumi.StringInput `pulumi:"secretId"`
	// The ID of the PagerDuty service that the response plan associates with an incident when it launches.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (GetResponsePlanIntegrationPagerdutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (i GetResponsePlanIntegrationPagerdutyArgs) ToGetResponsePlanIntegrationPagerdutyOutput() GetResponsePlanIntegrationPagerdutyOutput {
	return i.ToGetResponsePlanIntegrationPagerdutyOutputWithContext(context.Background())
}

func (i GetResponsePlanIntegrationPagerdutyArgs) ToGetResponsePlanIntegrationPagerdutyOutputWithContext(ctx context.Context) GetResponsePlanIntegrationPagerdutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIntegrationPagerdutyOutput)
}

// GetResponsePlanIntegrationPagerdutyArrayInput is an input type that accepts GetResponsePlanIntegrationPagerdutyArray and GetResponsePlanIntegrationPagerdutyArrayOutput values.
// You can construct a concrete instance of `GetResponsePlanIntegrationPagerdutyArrayInput` via:
//
//	GetResponsePlanIntegrationPagerdutyArray{ GetResponsePlanIntegrationPagerdutyArgs{...} }
type GetResponsePlanIntegrationPagerdutyArrayInput interface {
	pulumi.Input

	ToGetResponsePlanIntegrationPagerdutyArrayOutput() GetResponsePlanIntegrationPagerdutyArrayOutput
	ToGetResponsePlanIntegrationPagerdutyArrayOutputWithContext(context.Context) GetResponsePlanIntegrationPagerdutyArrayOutput
}

type GetResponsePlanIntegrationPagerdutyArray []GetResponsePlanIntegrationPagerdutyInput

func (GetResponsePlanIntegrationPagerdutyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (i GetResponsePlanIntegrationPagerdutyArray) ToGetResponsePlanIntegrationPagerdutyArrayOutput() GetResponsePlanIntegrationPagerdutyArrayOutput {
	return i.ToGetResponsePlanIntegrationPagerdutyArrayOutputWithContext(context.Background())
}

func (i GetResponsePlanIntegrationPagerdutyArray) ToGetResponsePlanIntegrationPagerdutyArrayOutputWithContext(ctx context.Context) GetResponsePlanIntegrationPagerdutyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResponsePlanIntegrationPagerdutyArrayOutput)
}

type GetResponsePlanIntegrationPagerdutyOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIntegrationPagerdutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (o GetResponsePlanIntegrationPagerdutyOutput) ToGetResponsePlanIntegrationPagerdutyOutput() GetResponsePlanIntegrationPagerdutyOutput {
	return o
}

func (o GetResponsePlanIntegrationPagerdutyOutput) ToGetResponsePlanIntegrationPagerdutyOutputWithContext(ctx context.Context) GetResponsePlanIntegrationPagerdutyOutput {
	return o
}

// The name of the PagerDuty configuration.
func (o GetResponsePlanIntegrationPagerdutyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanIntegrationPagerduty) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials.
func (o GetResponsePlanIntegrationPagerdutyOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanIntegrationPagerduty) string { return v.SecretId }).(pulumi.StringOutput)
}

// The ID of the PagerDuty service that the response plan associates with an incident when it launches.
func (o GetResponsePlanIntegrationPagerdutyOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResponsePlanIntegrationPagerduty) string { return v.ServiceId }).(pulumi.StringOutput)
}

type GetResponsePlanIntegrationPagerdutyArrayOutput struct{ *pulumi.OutputState }

func (GetResponsePlanIntegrationPagerdutyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResponsePlanIntegrationPagerduty)(nil)).Elem()
}

func (o GetResponsePlanIntegrationPagerdutyArrayOutput) ToGetResponsePlanIntegrationPagerdutyArrayOutput() GetResponsePlanIntegrationPagerdutyArrayOutput {
	return o
}

func (o GetResponsePlanIntegrationPagerdutyArrayOutput) ToGetResponsePlanIntegrationPagerdutyArrayOutputWithContext(ctx context.Context) GetResponsePlanIntegrationPagerdutyArrayOutput {
	return o
}

func (o GetResponsePlanIntegrationPagerdutyArrayOutput) Index(i pulumi.IntInput) GetResponsePlanIntegrationPagerdutyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResponsePlanIntegrationPagerduty {
		return vs[0].([]GetResponsePlanIntegrationPagerduty)[vs[1].(int)]
	}).(GetResponsePlanIntegrationPagerdutyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationSetRegionInput)(nil)).Elem(), ReplicationSetRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationSetRegionArrayInput)(nil)).Elem(), ReplicationSetRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanActionInput)(nil)).Elem(), ResponsePlanActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanActionPtrInput)(nil)).Elem(), ResponsePlanActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanActionSsmAutomationInput)(nil)).Elem(), ResponsePlanActionSsmAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanActionSsmAutomationArrayInput)(nil)).Elem(), ResponsePlanActionSsmAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanActionSsmAutomationParameterInput)(nil)).Elem(), ResponsePlanActionSsmAutomationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanActionSsmAutomationParameterArrayInput)(nil)).Elem(), ResponsePlanActionSsmAutomationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIncidentTemplateInput)(nil)).Elem(), ResponsePlanIncidentTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIncidentTemplatePtrInput)(nil)).Elem(), ResponsePlanIncidentTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIncidentTemplateNotificationTargetInput)(nil)).Elem(), ResponsePlanIncidentTemplateNotificationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIncidentTemplateNotificationTargetArrayInput)(nil)).Elem(), ResponsePlanIncidentTemplateNotificationTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIntegrationInput)(nil)).Elem(), ResponsePlanIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIntegrationPtrInput)(nil)).Elem(), ResponsePlanIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIntegrationPagerdutyInput)(nil)).Elem(), ResponsePlanIntegrationPagerdutyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponsePlanIntegrationPagerdutyArrayInput)(nil)).Elem(), ResponsePlanIntegrationPagerdutyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationSetRegionInput)(nil)).Elem(), GetReplicationSetRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationSetRegionArrayInput)(nil)).Elem(), GetReplicationSetRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanActionInput)(nil)).Elem(), GetResponsePlanActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanActionArrayInput)(nil)).Elem(), GetResponsePlanActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanActionSsmAutomationInput)(nil)).Elem(), GetResponsePlanActionSsmAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanActionSsmAutomationArrayInput)(nil)).Elem(), GetResponsePlanActionSsmAutomationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanActionSsmAutomationParameterInput)(nil)).Elem(), GetResponsePlanActionSsmAutomationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanActionSsmAutomationParameterArrayInput)(nil)).Elem(), GetResponsePlanActionSsmAutomationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIncidentTemplateInput)(nil)).Elem(), GetResponsePlanIncidentTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIncidentTemplateArrayInput)(nil)).Elem(), GetResponsePlanIncidentTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIncidentTemplateNotificationTargetInput)(nil)).Elem(), GetResponsePlanIncidentTemplateNotificationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIncidentTemplateNotificationTargetArrayInput)(nil)).Elem(), GetResponsePlanIncidentTemplateNotificationTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIntegrationInput)(nil)).Elem(), GetResponsePlanIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIntegrationArrayInput)(nil)).Elem(), GetResponsePlanIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIntegrationPagerdutyInput)(nil)).Elem(), GetResponsePlanIntegrationPagerdutyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResponsePlanIntegrationPagerdutyArrayInput)(nil)).Elem(), GetResponsePlanIntegrationPagerdutyArray{})
	pulumi.RegisterOutputType(ReplicationSetRegionOutput{})
	pulumi.RegisterOutputType(ReplicationSetRegionArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionPtrOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionSsmAutomationOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionSsmAutomationArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionSsmAutomationParameterOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionSsmAutomationParameterArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanIncidentTemplateOutput{})
	pulumi.RegisterOutputType(ResponsePlanIncidentTemplatePtrOutput{})
	pulumi.RegisterOutputType(ResponsePlanIncidentTemplateNotificationTargetOutput{})
	pulumi.RegisterOutputType(ResponsePlanIncidentTemplateNotificationTargetArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanIntegrationOutput{})
	pulumi.RegisterOutputType(ResponsePlanIntegrationPtrOutput{})
	pulumi.RegisterOutputType(ResponsePlanIntegrationPagerdutyOutput{})
	pulumi.RegisterOutputType(ResponsePlanIntegrationPagerdutyArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationSetRegionOutput{})
	pulumi.RegisterOutputType(GetReplicationSetRegionArrayOutput{})
	pulumi.RegisterOutputType(GetResponsePlanActionOutput{})
	pulumi.RegisterOutputType(GetResponsePlanActionArrayOutput{})
	pulumi.RegisterOutputType(GetResponsePlanActionSsmAutomationOutput{})
	pulumi.RegisterOutputType(GetResponsePlanActionSsmAutomationArrayOutput{})
	pulumi.RegisterOutputType(GetResponsePlanActionSsmAutomationParameterOutput{})
	pulumi.RegisterOutputType(GetResponsePlanActionSsmAutomationParameterArrayOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIncidentTemplateOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIncidentTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIncidentTemplateNotificationTargetOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIncidentTemplateNotificationTargetArrayOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIntegrationOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIntegrationPagerdutyOutput{})
	pulumi.RegisterOutputType(GetResponsePlanIntegrationPagerdutyArrayOutput{})
}
