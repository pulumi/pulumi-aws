// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ivs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS IVS (Interactive Video) Stream Key.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ivs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ivs.GetStreamKey(ctx, &ivs.GetStreamKeyArgs{
//				ChannelArn: "arn:aws:ivs:us-west-2:326937407773:channel/0Y1lcs4U7jk5",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetStreamKey(ctx *pulumi.Context, args *GetStreamKeyArgs, opts ...pulumi.InvokeOption) (*GetStreamKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamKeyResult
	err := ctx.Invoke("aws:ivs/getStreamKey:getStreamKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamKey.
type GetStreamKeyArgs struct {
	// ARN of the Channel.
	ChannelArn string `pulumi:"channelArn"`
	// Map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getStreamKey.
type GetStreamKeyResult struct {
	// ARN of the Stream Key.
	Arn        string `pulumi:"arn"`
	ChannelArn string `pulumi:"channelArn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Stream Key value.
	Value string `pulumi:"value"`
}

func GetStreamKeyOutput(ctx *pulumi.Context, args GetStreamKeyOutputArgs, opts ...pulumi.InvokeOption) GetStreamKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetStreamKeyResult, error) {
			args := v.(GetStreamKeyArgs)
			r, err := GetStreamKey(ctx, &args, opts...)
			var s GetStreamKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetStreamKeyResultOutput)
}

// A collection of arguments for invoking getStreamKey.
type GetStreamKeyOutputArgs struct {
	// ARN of the Channel.
	ChannelArn pulumi.StringInput `pulumi:"channelArn"`
	// Map of tags assigned to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetStreamKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamKeyArgs)(nil)).Elem()
}

// A collection of values returned by getStreamKey.
type GetStreamKeyResultOutput struct{ *pulumi.OutputState }

func (GetStreamKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamKeyResult)(nil)).Elem()
}

func (o GetStreamKeyResultOutput) ToGetStreamKeyResultOutput() GetStreamKeyResultOutput {
	return o
}

func (o GetStreamKeyResultOutput) ToGetStreamKeyResultOutputWithContext(ctx context.Context) GetStreamKeyResultOutput {
	return o
}

func (o GetStreamKeyResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetStreamKeyResult] {
	return pulumix.Output[GetStreamKeyResult]{
		OutputState: o.OutputState,
	}
}

// ARN of the Stream Key.
func (o GetStreamKeyResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamKeyResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetStreamKeyResultOutput) ChannelArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamKeyResult) string { return v.ChannelArn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetStreamKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// Map of tags assigned to the resource.
func (o GetStreamKeyResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStreamKeyResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Stream Key value.
func (o GetStreamKeyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamKeyResult) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStreamKeyResultOutput{})
}
