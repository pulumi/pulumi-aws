// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appfabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppAuthorizationCredential struct {
	// Contains API key credential information.
	ApiKeyCredentials []AppAuthorizationCredentialApiKeyCredential `pulumi:"apiKeyCredentials"`
	// Contains OAuth2 client credential information.
	Oauth2Credential *AppAuthorizationCredentialOauth2Credential `pulumi:"oauth2Credential"`
}

// AppAuthorizationCredentialInput is an input type that accepts AppAuthorizationCredentialArgs and AppAuthorizationCredentialOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialInput` via:
//
//	AppAuthorizationCredentialArgs{...}
type AppAuthorizationCredentialInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialOutput() AppAuthorizationCredentialOutput
	ToAppAuthorizationCredentialOutputWithContext(context.Context) AppAuthorizationCredentialOutput
}

type AppAuthorizationCredentialArgs struct {
	// Contains API key credential information.
	ApiKeyCredentials AppAuthorizationCredentialApiKeyCredentialArrayInput `pulumi:"apiKeyCredentials"`
	// Contains OAuth2 client credential information.
	Oauth2Credential AppAuthorizationCredentialOauth2CredentialPtrInput `pulumi:"oauth2Credential"`
}

func (AppAuthorizationCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredential)(nil)).Elem()
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialOutput() AppAuthorizationCredentialOutput {
	return i.ToAppAuthorizationCredentialOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOutput)
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return i.ToAppAuthorizationCredentialPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOutput).ToAppAuthorizationCredentialPtrOutputWithContext(ctx)
}

// AppAuthorizationCredentialPtrInput is an input type that accepts AppAuthorizationCredentialArgs, AppAuthorizationCredentialPtr and AppAuthorizationCredentialPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialPtrInput` via:
//
//	        AppAuthorizationCredentialArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationCredentialPtrInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput
	ToAppAuthorizationCredentialPtrOutputWithContext(context.Context) AppAuthorizationCredentialPtrOutput
}

type appAuthorizationCredentialPtrType AppAuthorizationCredentialArgs

func AppAuthorizationCredentialPtr(v *AppAuthorizationCredentialArgs) AppAuthorizationCredentialPtrInput {
	return (*appAuthorizationCredentialPtrType)(v)
}

func (*appAuthorizationCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredential)(nil)).Elem()
}

func (i *appAuthorizationCredentialPtrType) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return i.ToAppAuthorizationCredentialPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationCredentialPtrType) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialPtrOutput)
}

type AppAuthorizationCredentialOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialOutput() AppAuthorizationCredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return o.ToAppAuthorizationCredentialPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationCredential) *AppAuthorizationCredential {
		return &v
	}).(AppAuthorizationCredentialPtrOutput)
}

// Contains API key credential information.
func (o AppAuthorizationCredentialOutput) ApiKeyCredentials() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o.ApplyT(func(v AppAuthorizationCredential) []AppAuthorizationCredentialApiKeyCredential {
		return v.ApiKeyCredentials
	}).(AppAuthorizationCredentialApiKeyCredentialArrayOutput)
}

// Contains OAuth2 client credential information.
func (o AppAuthorizationCredentialOutput) Oauth2Credential() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ApplyT(func(v AppAuthorizationCredential) *AppAuthorizationCredentialOauth2Credential {
		return v.Oauth2Credential
	}).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

type AppAuthorizationCredentialPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialPtrOutput) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialPtrOutput) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialPtrOutput) Elem() AppAuthorizationCredentialOutput {
	return o.ApplyT(func(v *AppAuthorizationCredential) AppAuthorizationCredential {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationCredential
		return ret
	}).(AppAuthorizationCredentialOutput)
}

// Contains API key credential information.
func (o AppAuthorizationCredentialPtrOutput) ApiKeyCredentials() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o.ApplyT(func(v *AppAuthorizationCredential) []AppAuthorizationCredentialApiKeyCredential {
		if v == nil {
			return nil
		}
		return v.ApiKeyCredentials
	}).(AppAuthorizationCredentialApiKeyCredentialArrayOutput)
}

// Contains OAuth2 client credential information.
func (o AppAuthorizationCredentialPtrOutput) Oauth2Credential() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationCredential) *AppAuthorizationCredentialOauth2Credential {
		if v == nil {
			return nil
		}
		return v.Oauth2Credential
	}).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

type AppAuthorizationCredentialApiKeyCredential struct {
	// Contains API key credential information.
	ApiKey string `pulumi:"apiKey"`
}

// AppAuthorizationCredentialApiKeyCredentialInput is an input type that accepts AppAuthorizationCredentialApiKeyCredentialArgs and AppAuthorizationCredentialApiKeyCredentialOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialApiKeyCredentialInput` via:
//
//	AppAuthorizationCredentialApiKeyCredentialArgs{...}
type AppAuthorizationCredentialApiKeyCredentialInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialApiKeyCredentialOutput() AppAuthorizationCredentialApiKeyCredentialOutput
	ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(context.Context) AppAuthorizationCredentialApiKeyCredentialOutput
}

type AppAuthorizationCredentialApiKeyCredentialArgs struct {
	// Contains API key credential information.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
}

func (AppAuthorizationCredentialApiKeyCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (i AppAuthorizationCredentialApiKeyCredentialArgs) ToAppAuthorizationCredentialApiKeyCredentialOutput() AppAuthorizationCredentialApiKeyCredentialOutput {
	return i.ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialApiKeyCredentialArgs) ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialApiKeyCredentialOutput)
}

// AppAuthorizationCredentialApiKeyCredentialArrayInput is an input type that accepts AppAuthorizationCredentialApiKeyCredentialArray and AppAuthorizationCredentialApiKeyCredentialArrayOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialApiKeyCredentialArrayInput` via:
//
//	AppAuthorizationCredentialApiKeyCredentialArray{ AppAuthorizationCredentialApiKeyCredentialArgs{...} }
type AppAuthorizationCredentialApiKeyCredentialArrayInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialApiKeyCredentialArrayOutput() AppAuthorizationCredentialApiKeyCredentialArrayOutput
	ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(context.Context) AppAuthorizationCredentialApiKeyCredentialArrayOutput
}

type AppAuthorizationCredentialApiKeyCredentialArray []AppAuthorizationCredentialApiKeyCredentialInput

func (AppAuthorizationCredentialApiKeyCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (i AppAuthorizationCredentialApiKeyCredentialArray) ToAppAuthorizationCredentialApiKeyCredentialArrayOutput() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return i.ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialApiKeyCredentialArray) ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialApiKeyCredentialArrayOutput)
}

type AppAuthorizationCredentialApiKeyCredentialOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialApiKeyCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialApiKeyCredentialOutput) ToAppAuthorizationCredentialApiKeyCredentialOutput() AppAuthorizationCredentialApiKeyCredentialOutput {
	return o
}

func (o AppAuthorizationCredentialApiKeyCredentialOutput) ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialOutput {
	return o
}

// Contains API key credential information.
func (o AppAuthorizationCredentialApiKeyCredentialOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationCredentialApiKeyCredential) string { return v.ApiKey }).(pulumi.StringOutput)
}

type AppAuthorizationCredentialApiKeyCredentialArrayOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialApiKeyCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialApiKeyCredentialArrayOutput) ToAppAuthorizationCredentialApiKeyCredentialArrayOutput() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o
}

func (o AppAuthorizationCredentialApiKeyCredentialArrayOutput) ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o
}

func (o AppAuthorizationCredentialApiKeyCredentialArrayOutput) Index(i pulumi.IntInput) AppAuthorizationCredentialApiKeyCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAuthorizationCredentialApiKeyCredential {
		return vs[0].([]AppAuthorizationCredentialApiKeyCredential)[vs[1].(int)]
	}).(AppAuthorizationCredentialApiKeyCredentialOutput)
}

type AppAuthorizationCredentialOauth2Credential struct {
	// The client ID of the client application.
	ClientId string `pulumi:"clientId"`
	// The client secret of the client application.
	ClientSecret string `pulumi:"clientSecret"`
}

// AppAuthorizationCredentialOauth2CredentialInput is an input type that accepts AppAuthorizationCredentialOauth2CredentialArgs and AppAuthorizationCredentialOauth2CredentialOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialOauth2CredentialInput` via:
//
//	AppAuthorizationCredentialOauth2CredentialArgs{...}
type AppAuthorizationCredentialOauth2CredentialInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialOauth2CredentialOutput() AppAuthorizationCredentialOauth2CredentialOutput
	ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(context.Context) AppAuthorizationCredentialOauth2CredentialOutput
}

type AppAuthorizationCredentialOauth2CredentialArgs struct {
	// The client ID of the client application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret of the client application.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (AppAuthorizationCredentialOauth2CredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialOutput() AppAuthorizationCredentialOauth2CredentialOutput {
	return i.ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOauth2CredentialOutput)
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return i.ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOauth2CredentialOutput).ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx)
}

// AppAuthorizationCredentialOauth2CredentialPtrInput is an input type that accepts AppAuthorizationCredentialOauth2CredentialArgs, AppAuthorizationCredentialOauth2CredentialPtr and AppAuthorizationCredentialOauth2CredentialPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialOauth2CredentialPtrInput` via:
//
//	        AppAuthorizationCredentialOauth2CredentialArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationCredentialOauth2CredentialPtrInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput
	ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput
}

type appAuthorizationCredentialOauth2CredentialPtrType AppAuthorizationCredentialOauth2CredentialArgs

func AppAuthorizationCredentialOauth2CredentialPtr(v *AppAuthorizationCredentialOauth2CredentialArgs) AppAuthorizationCredentialOauth2CredentialPtrInput {
	return (*appAuthorizationCredentialOauth2CredentialPtrType)(v)
}

func (*appAuthorizationCredentialOauth2CredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (i *appAuthorizationCredentialOauth2CredentialPtrType) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return i.ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationCredentialOauth2CredentialPtrType) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

type AppAuthorizationCredentialOauth2CredentialOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialOauth2CredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialOutput() AppAuthorizationCredentialOauth2CredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationCredentialOauth2Credential) *AppAuthorizationCredentialOauth2Credential {
		return &v
	}).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

// The client ID of the client application.
func (o AppAuthorizationCredentialOauth2CredentialOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationCredentialOauth2Credential) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret of the client application.
func (o AppAuthorizationCredentialOauth2CredentialOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationCredentialOauth2Credential) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type AppAuthorizationCredentialOauth2CredentialPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialOauth2CredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) Elem() AppAuthorizationCredentialOauth2CredentialOutput {
	return o.ApplyT(func(v *AppAuthorizationCredentialOauth2Credential) AppAuthorizationCredentialOauth2Credential {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationCredentialOauth2Credential
		return ret
	}).(AppAuthorizationCredentialOauth2CredentialOutput)
}

// The client ID of the client application.
func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationCredentialOauth2Credential) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret of the client application.
func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationCredentialOauth2Credential) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type AppAuthorizationTenant struct {
	// The display name of the tenant.
	TenantDisplayName string `pulumi:"tenantDisplayName"`
	// The ID of the application tenant.
	TenantIdentifier string `pulumi:"tenantIdentifier"`
}

// AppAuthorizationTenantInput is an input type that accepts AppAuthorizationTenantArgs and AppAuthorizationTenantOutput values.
// You can construct a concrete instance of `AppAuthorizationTenantInput` via:
//
//	AppAuthorizationTenantArgs{...}
type AppAuthorizationTenantInput interface {
	pulumi.Input

	ToAppAuthorizationTenantOutput() AppAuthorizationTenantOutput
	ToAppAuthorizationTenantOutputWithContext(context.Context) AppAuthorizationTenantOutput
}

type AppAuthorizationTenantArgs struct {
	// The display name of the tenant.
	TenantDisplayName pulumi.StringInput `pulumi:"tenantDisplayName"`
	// The ID of the application tenant.
	TenantIdentifier pulumi.StringInput `pulumi:"tenantIdentifier"`
}

func (AppAuthorizationTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTenant)(nil)).Elem()
}

func (i AppAuthorizationTenantArgs) ToAppAuthorizationTenantOutput() AppAuthorizationTenantOutput {
	return i.ToAppAuthorizationTenantOutputWithContext(context.Background())
}

func (i AppAuthorizationTenantArgs) ToAppAuthorizationTenantOutputWithContext(ctx context.Context) AppAuthorizationTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTenantOutput)
}

// AppAuthorizationTenantArrayInput is an input type that accepts AppAuthorizationTenantArray and AppAuthorizationTenantArrayOutput values.
// You can construct a concrete instance of `AppAuthorizationTenantArrayInput` via:
//
//	AppAuthorizationTenantArray{ AppAuthorizationTenantArgs{...} }
type AppAuthorizationTenantArrayInput interface {
	pulumi.Input

	ToAppAuthorizationTenantArrayOutput() AppAuthorizationTenantArrayOutput
	ToAppAuthorizationTenantArrayOutputWithContext(context.Context) AppAuthorizationTenantArrayOutput
}

type AppAuthorizationTenantArray []AppAuthorizationTenantInput

func (AppAuthorizationTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationTenant)(nil)).Elem()
}

func (i AppAuthorizationTenantArray) ToAppAuthorizationTenantArrayOutput() AppAuthorizationTenantArrayOutput {
	return i.ToAppAuthorizationTenantArrayOutputWithContext(context.Background())
}

func (i AppAuthorizationTenantArray) ToAppAuthorizationTenantArrayOutputWithContext(ctx context.Context) AppAuthorizationTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTenantArrayOutput)
}

type AppAuthorizationTenantOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTenant)(nil)).Elem()
}

func (o AppAuthorizationTenantOutput) ToAppAuthorizationTenantOutput() AppAuthorizationTenantOutput {
	return o
}

func (o AppAuthorizationTenantOutput) ToAppAuthorizationTenantOutputWithContext(ctx context.Context) AppAuthorizationTenantOutput {
	return o
}

// The display name of the tenant.
func (o AppAuthorizationTenantOutput) TenantDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationTenant) string { return v.TenantDisplayName }).(pulumi.StringOutput)
}

// The ID of the application tenant.
func (o AppAuthorizationTenantOutput) TenantIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationTenant) string { return v.TenantIdentifier }).(pulumi.StringOutput)
}

type AppAuthorizationTenantArrayOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationTenant)(nil)).Elem()
}

func (o AppAuthorizationTenantArrayOutput) ToAppAuthorizationTenantArrayOutput() AppAuthorizationTenantArrayOutput {
	return o
}

func (o AppAuthorizationTenantArrayOutput) ToAppAuthorizationTenantArrayOutputWithContext(ctx context.Context) AppAuthorizationTenantArrayOutput {
	return o
}

func (o AppAuthorizationTenantArrayOutput) Index(i pulumi.IntInput) AppAuthorizationTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAuthorizationTenant {
		return vs[0].([]AppAuthorizationTenant)[vs[1].(int)]
	}).(AppAuthorizationTenantOutput)
}

type AppAuthorizationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// AppAuthorizationTimeoutsInput is an input type that accepts AppAuthorizationTimeoutsArgs and AppAuthorizationTimeoutsOutput values.
// You can construct a concrete instance of `AppAuthorizationTimeoutsInput` via:
//
//	AppAuthorizationTimeoutsArgs{...}
type AppAuthorizationTimeoutsInput interface {
	pulumi.Input

	ToAppAuthorizationTimeoutsOutput() AppAuthorizationTimeoutsOutput
	ToAppAuthorizationTimeoutsOutputWithContext(context.Context) AppAuthorizationTimeoutsOutput
}

type AppAuthorizationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (AppAuthorizationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTimeouts)(nil)).Elem()
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsOutput() AppAuthorizationTimeoutsOutput {
	return i.ToAppAuthorizationTimeoutsOutputWithContext(context.Background())
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTimeoutsOutput)
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return i.ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTimeoutsOutput).ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx)
}

// AppAuthorizationTimeoutsPtrInput is an input type that accepts AppAuthorizationTimeoutsArgs, AppAuthorizationTimeoutsPtr and AppAuthorizationTimeoutsPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationTimeoutsPtrInput` via:
//
//	        AppAuthorizationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationTimeoutsPtrInput interface {
	pulumi.Input

	ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput
	ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Context) AppAuthorizationTimeoutsPtrOutput
}

type appAuthorizationTimeoutsPtrType AppAuthorizationTimeoutsArgs

func AppAuthorizationTimeoutsPtr(v *AppAuthorizationTimeoutsArgs) AppAuthorizationTimeoutsPtrInput {
	return (*appAuthorizationTimeoutsPtrType)(v)
}

func (*appAuthorizationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationTimeouts)(nil)).Elem()
}

func (i *appAuthorizationTimeoutsPtrType) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return i.ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationTimeoutsPtrType) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTimeoutsPtrOutput)
}

type AppAuthorizationTimeoutsOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTimeouts)(nil)).Elem()
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsOutput() AppAuthorizationTimeoutsOutput {
	return o
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsOutput {
	return o
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return o.ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationTimeouts) *AppAuthorizationTimeouts {
		return &v
	}).(AppAuthorizationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAuthorizationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o AppAuthorizationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAuthorizationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAuthorizationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type AppAuthorizationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationTimeouts)(nil)).Elem()
}

func (o AppAuthorizationTimeoutsPtrOutput) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return o
}

func (o AppAuthorizationTimeoutsPtrOutput) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return o
}

func (o AppAuthorizationTimeoutsPtrOutput) Elem() AppAuthorizationTimeoutsOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) AppAuthorizationTimeouts {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationTimeouts
		return ret
	}).(AppAuthorizationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o AppAuthorizationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialInput)(nil)).Elem(), AppAuthorizationCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialPtrInput)(nil)).Elem(), AppAuthorizationCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredentialInput)(nil)).Elem(), AppAuthorizationCredentialApiKeyCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredentialArrayInput)(nil)).Elem(), AppAuthorizationCredentialApiKeyCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialOauth2CredentialInput)(nil)).Elem(), AppAuthorizationCredentialOauth2CredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialOauth2CredentialPtrInput)(nil)).Elem(), AppAuthorizationCredentialOauth2CredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTenantInput)(nil)).Elem(), AppAuthorizationTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTenantArrayInput)(nil)).Elem(), AppAuthorizationTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTimeoutsInput)(nil)).Elem(), AppAuthorizationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTimeoutsPtrInput)(nil)).Elem(), AppAuthorizationTimeoutsArgs{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialPtrOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialApiKeyCredentialOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialApiKeyCredentialArrayOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialOauth2CredentialOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialOauth2CredentialPtrOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTenantOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTenantArrayOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTimeoutsOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTimeoutsPtrOutput{})
}
