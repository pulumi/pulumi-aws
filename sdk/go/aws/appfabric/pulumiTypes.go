// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appfabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppAuthorizationConnectionAuthRequest struct {
	// The authorization code returned by the application after permission is granted in the application OAuth page (after clicking on the AuthURL)..
	Code string `pulumi:"code"`
	// The redirect URL that is specified in the AuthURL and the application client.
	RedirectUri string `pulumi:"redirectUri"`
}

// AppAuthorizationConnectionAuthRequestInput is an input type that accepts AppAuthorizationConnectionAuthRequestArgs and AppAuthorizationConnectionAuthRequestOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionAuthRequestInput` via:
//
//	AppAuthorizationConnectionAuthRequestArgs{...}
type AppAuthorizationConnectionAuthRequestInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionAuthRequestOutput() AppAuthorizationConnectionAuthRequestOutput
	ToAppAuthorizationConnectionAuthRequestOutputWithContext(context.Context) AppAuthorizationConnectionAuthRequestOutput
}

type AppAuthorizationConnectionAuthRequestArgs struct {
	// The authorization code returned by the application after permission is granted in the application OAuth page (after clicking on the AuthURL)..
	Code pulumi.StringInput `pulumi:"code"`
	// The redirect URL that is specified in the AuthURL and the application client.
	RedirectUri pulumi.StringInput `pulumi:"redirectUri"`
}

func (AppAuthorizationConnectionAuthRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationConnectionAuthRequest)(nil)).Elem()
}

func (i AppAuthorizationConnectionAuthRequestArgs) ToAppAuthorizationConnectionAuthRequestOutput() AppAuthorizationConnectionAuthRequestOutput {
	return i.ToAppAuthorizationConnectionAuthRequestOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionAuthRequestArgs) ToAppAuthorizationConnectionAuthRequestOutputWithContext(ctx context.Context) AppAuthorizationConnectionAuthRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionAuthRequestOutput)
}

func (i AppAuthorizationConnectionAuthRequestArgs) ToAppAuthorizationConnectionAuthRequestPtrOutput() AppAuthorizationConnectionAuthRequestPtrOutput {
	return i.ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionAuthRequestArgs) ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionAuthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionAuthRequestOutput).ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(ctx)
}

// AppAuthorizationConnectionAuthRequestPtrInput is an input type that accepts AppAuthorizationConnectionAuthRequestArgs, AppAuthorizationConnectionAuthRequestPtr and AppAuthorizationConnectionAuthRequestPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionAuthRequestPtrInput` via:
//
//	        AppAuthorizationConnectionAuthRequestArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationConnectionAuthRequestPtrInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionAuthRequestPtrOutput() AppAuthorizationConnectionAuthRequestPtrOutput
	ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(context.Context) AppAuthorizationConnectionAuthRequestPtrOutput
}

type appAuthorizationConnectionAuthRequestPtrType AppAuthorizationConnectionAuthRequestArgs

func AppAuthorizationConnectionAuthRequestPtr(v *AppAuthorizationConnectionAuthRequestArgs) AppAuthorizationConnectionAuthRequestPtrInput {
	return (*appAuthorizationConnectionAuthRequestPtrType)(v)
}

func (*appAuthorizationConnectionAuthRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationConnectionAuthRequest)(nil)).Elem()
}

func (i *appAuthorizationConnectionAuthRequestPtrType) ToAppAuthorizationConnectionAuthRequestPtrOutput() AppAuthorizationConnectionAuthRequestPtrOutput {
	return i.ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationConnectionAuthRequestPtrType) ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionAuthRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionAuthRequestPtrOutput)
}

type AppAuthorizationConnectionAuthRequestOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionAuthRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationConnectionAuthRequest)(nil)).Elem()
}

func (o AppAuthorizationConnectionAuthRequestOutput) ToAppAuthorizationConnectionAuthRequestOutput() AppAuthorizationConnectionAuthRequestOutput {
	return o
}

func (o AppAuthorizationConnectionAuthRequestOutput) ToAppAuthorizationConnectionAuthRequestOutputWithContext(ctx context.Context) AppAuthorizationConnectionAuthRequestOutput {
	return o
}

func (o AppAuthorizationConnectionAuthRequestOutput) ToAppAuthorizationConnectionAuthRequestPtrOutput() AppAuthorizationConnectionAuthRequestPtrOutput {
	return o.ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationConnectionAuthRequestOutput) ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionAuthRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationConnectionAuthRequest) *AppAuthorizationConnectionAuthRequest {
		return &v
	}).(AppAuthorizationConnectionAuthRequestPtrOutput)
}

// The authorization code returned by the application after permission is granted in the application OAuth page (after clicking on the AuthURL)..
func (o AppAuthorizationConnectionAuthRequestOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationConnectionAuthRequest) string { return v.Code }).(pulumi.StringOutput)
}

// The redirect URL that is specified in the AuthURL and the application client.
func (o AppAuthorizationConnectionAuthRequestOutput) RedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationConnectionAuthRequest) string { return v.RedirectUri }).(pulumi.StringOutput)
}

type AppAuthorizationConnectionAuthRequestPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionAuthRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationConnectionAuthRequest)(nil)).Elem()
}

func (o AppAuthorizationConnectionAuthRequestPtrOutput) ToAppAuthorizationConnectionAuthRequestPtrOutput() AppAuthorizationConnectionAuthRequestPtrOutput {
	return o
}

func (o AppAuthorizationConnectionAuthRequestPtrOutput) ToAppAuthorizationConnectionAuthRequestPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionAuthRequestPtrOutput {
	return o
}

func (o AppAuthorizationConnectionAuthRequestPtrOutput) Elem() AppAuthorizationConnectionAuthRequestOutput {
	return o.ApplyT(func(v *AppAuthorizationConnectionAuthRequest) AppAuthorizationConnectionAuthRequest {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationConnectionAuthRequest
		return ret
	}).(AppAuthorizationConnectionAuthRequestOutput)
}

// The authorization code returned by the application after permission is granted in the application OAuth page (after clicking on the AuthURL)..
func (o AppAuthorizationConnectionAuthRequestPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationConnectionAuthRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// The redirect URL that is specified in the AuthURL and the application client.
func (o AppAuthorizationConnectionAuthRequestPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationConnectionAuthRequest) *string {
		if v == nil {
			return nil
		}
		return &v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type AppAuthorizationConnectionTenant struct {
	TenantDisplayName string `pulumi:"tenantDisplayName"`
	TenantIdentifier  string `pulumi:"tenantIdentifier"`
}

// AppAuthorizationConnectionTenantInput is an input type that accepts AppAuthorizationConnectionTenantArgs and AppAuthorizationConnectionTenantOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionTenantInput` via:
//
//	AppAuthorizationConnectionTenantArgs{...}
type AppAuthorizationConnectionTenantInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionTenantOutput() AppAuthorizationConnectionTenantOutput
	ToAppAuthorizationConnectionTenantOutputWithContext(context.Context) AppAuthorizationConnectionTenantOutput
}

type AppAuthorizationConnectionTenantArgs struct {
	TenantDisplayName pulumi.StringInput `pulumi:"tenantDisplayName"`
	TenantIdentifier  pulumi.StringInput `pulumi:"tenantIdentifier"`
}

func (AppAuthorizationConnectionTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationConnectionTenant)(nil)).Elem()
}

func (i AppAuthorizationConnectionTenantArgs) ToAppAuthorizationConnectionTenantOutput() AppAuthorizationConnectionTenantOutput {
	return i.ToAppAuthorizationConnectionTenantOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionTenantArgs) ToAppAuthorizationConnectionTenantOutputWithContext(ctx context.Context) AppAuthorizationConnectionTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionTenantOutput)
}

// AppAuthorizationConnectionTenantArrayInput is an input type that accepts AppAuthorizationConnectionTenantArray and AppAuthorizationConnectionTenantArrayOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionTenantArrayInput` via:
//
//	AppAuthorizationConnectionTenantArray{ AppAuthorizationConnectionTenantArgs{...} }
type AppAuthorizationConnectionTenantArrayInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionTenantArrayOutput() AppAuthorizationConnectionTenantArrayOutput
	ToAppAuthorizationConnectionTenantArrayOutputWithContext(context.Context) AppAuthorizationConnectionTenantArrayOutput
}

type AppAuthorizationConnectionTenantArray []AppAuthorizationConnectionTenantInput

func (AppAuthorizationConnectionTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationConnectionTenant)(nil)).Elem()
}

func (i AppAuthorizationConnectionTenantArray) ToAppAuthorizationConnectionTenantArrayOutput() AppAuthorizationConnectionTenantArrayOutput {
	return i.ToAppAuthorizationConnectionTenantArrayOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionTenantArray) ToAppAuthorizationConnectionTenantArrayOutputWithContext(ctx context.Context) AppAuthorizationConnectionTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionTenantArrayOutput)
}

type AppAuthorizationConnectionTenantOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationConnectionTenant)(nil)).Elem()
}

func (o AppAuthorizationConnectionTenantOutput) ToAppAuthorizationConnectionTenantOutput() AppAuthorizationConnectionTenantOutput {
	return o
}

func (o AppAuthorizationConnectionTenantOutput) ToAppAuthorizationConnectionTenantOutputWithContext(ctx context.Context) AppAuthorizationConnectionTenantOutput {
	return o
}

func (o AppAuthorizationConnectionTenantOutput) TenantDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationConnectionTenant) string { return v.TenantDisplayName }).(pulumi.StringOutput)
}

func (o AppAuthorizationConnectionTenantOutput) TenantIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationConnectionTenant) string { return v.TenantIdentifier }).(pulumi.StringOutput)
}

type AppAuthorizationConnectionTenantArrayOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationConnectionTenant)(nil)).Elem()
}

func (o AppAuthorizationConnectionTenantArrayOutput) ToAppAuthorizationConnectionTenantArrayOutput() AppAuthorizationConnectionTenantArrayOutput {
	return o
}

func (o AppAuthorizationConnectionTenantArrayOutput) ToAppAuthorizationConnectionTenantArrayOutputWithContext(ctx context.Context) AppAuthorizationConnectionTenantArrayOutput {
	return o
}

func (o AppAuthorizationConnectionTenantArrayOutput) Index(i pulumi.IntInput) AppAuthorizationConnectionTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAuthorizationConnectionTenant {
		return vs[0].([]AppAuthorizationConnectionTenant)[vs[1].(int)]
	}).(AppAuthorizationConnectionTenantOutput)
}

type AppAuthorizationConnectionTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
}

// AppAuthorizationConnectionTimeoutsInput is an input type that accepts AppAuthorizationConnectionTimeoutsArgs and AppAuthorizationConnectionTimeoutsOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionTimeoutsInput` via:
//
//	AppAuthorizationConnectionTimeoutsArgs{...}
type AppAuthorizationConnectionTimeoutsInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionTimeoutsOutput() AppAuthorizationConnectionTimeoutsOutput
	ToAppAuthorizationConnectionTimeoutsOutputWithContext(context.Context) AppAuthorizationConnectionTimeoutsOutput
}

type AppAuthorizationConnectionTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
}

func (AppAuthorizationConnectionTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationConnectionTimeouts)(nil)).Elem()
}

func (i AppAuthorizationConnectionTimeoutsArgs) ToAppAuthorizationConnectionTimeoutsOutput() AppAuthorizationConnectionTimeoutsOutput {
	return i.ToAppAuthorizationConnectionTimeoutsOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionTimeoutsArgs) ToAppAuthorizationConnectionTimeoutsOutputWithContext(ctx context.Context) AppAuthorizationConnectionTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionTimeoutsOutput)
}

func (i AppAuthorizationConnectionTimeoutsArgs) ToAppAuthorizationConnectionTimeoutsPtrOutput() AppAuthorizationConnectionTimeoutsPtrOutput {
	return i.ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionTimeoutsArgs) ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionTimeoutsOutput).ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(ctx)
}

// AppAuthorizationConnectionTimeoutsPtrInput is an input type that accepts AppAuthorizationConnectionTimeoutsArgs, AppAuthorizationConnectionTimeoutsPtr and AppAuthorizationConnectionTimeoutsPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionTimeoutsPtrInput` via:
//
//	        AppAuthorizationConnectionTimeoutsArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationConnectionTimeoutsPtrInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionTimeoutsPtrOutput() AppAuthorizationConnectionTimeoutsPtrOutput
	ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(context.Context) AppAuthorizationConnectionTimeoutsPtrOutput
}

type appAuthorizationConnectionTimeoutsPtrType AppAuthorizationConnectionTimeoutsArgs

func AppAuthorizationConnectionTimeoutsPtr(v *AppAuthorizationConnectionTimeoutsArgs) AppAuthorizationConnectionTimeoutsPtrInput {
	return (*appAuthorizationConnectionTimeoutsPtrType)(v)
}

func (*appAuthorizationConnectionTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationConnectionTimeouts)(nil)).Elem()
}

func (i *appAuthorizationConnectionTimeoutsPtrType) ToAppAuthorizationConnectionTimeoutsPtrOutput() AppAuthorizationConnectionTimeoutsPtrOutput {
	return i.ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationConnectionTimeoutsPtrType) ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionTimeoutsPtrOutput)
}

type AppAuthorizationConnectionTimeoutsOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationConnectionTimeouts)(nil)).Elem()
}

func (o AppAuthorizationConnectionTimeoutsOutput) ToAppAuthorizationConnectionTimeoutsOutput() AppAuthorizationConnectionTimeoutsOutput {
	return o
}

func (o AppAuthorizationConnectionTimeoutsOutput) ToAppAuthorizationConnectionTimeoutsOutputWithContext(ctx context.Context) AppAuthorizationConnectionTimeoutsOutput {
	return o
}

func (o AppAuthorizationConnectionTimeoutsOutput) ToAppAuthorizationConnectionTimeoutsPtrOutput() AppAuthorizationConnectionTimeoutsPtrOutput {
	return o.ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationConnectionTimeoutsOutput) ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationConnectionTimeouts) *AppAuthorizationConnectionTimeouts {
		return &v
	}).(AppAuthorizationConnectionTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationConnectionTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAuthorizationConnectionTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

type AppAuthorizationConnectionTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationConnectionTimeouts)(nil)).Elem()
}

func (o AppAuthorizationConnectionTimeoutsPtrOutput) ToAppAuthorizationConnectionTimeoutsPtrOutput() AppAuthorizationConnectionTimeoutsPtrOutput {
	return o
}

func (o AppAuthorizationConnectionTimeoutsPtrOutput) ToAppAuthorizationConnectionTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationConnectionTimeoutsPtrOutput {
	return o
}

func (o AppAuthorizationConnectionTimeoutsPtrOutput) Elem() AppAuthorizationConnectionTimeoutsOutput {
	return o.ApplyT(func(v *AppAuthorizationConnectionTimeouts) AppAuthorizationConnectionTimeouts {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationConnectionTimeouts
		return ret
	}).(AppAuthorizationConnectionTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationConnectionTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationConnectionTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

type AppAuthorizationCredential struct {
	// Contains API key credential information.
	ApiKeyCredentials []AppAuthorizationCredentialApiKeyCredential `pulumi:"apiKeyCredentials"`
	// Contains OAuth2 client credential information.
	Oauth2Credential *AppAuthorizationCredentialOauth2Credential `pulumi:"oauth2Credential"`
}

// AppAuthorizationCredentialInput is an input type that accepts AppAuthorizationCredentialArgs and AppAuthorizationCredentialOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialInput` via:
//
//	AppAuthorizationCredentialArgs{...}
type AppAuthorizationCredentialInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialOutput() AppAuthorizationCredentialOutput
	ToAppAuthorizationCredentialOutputWithContext(context.Context) AppAuthorizationCredentialOutput
}

type AppAuthorizationCredentialArgs struct {
	// Contains API key credential information.
	ApiKeyCredentials AppAuthorizationCredentialApiKeyCredentialArrayInput `pulumi:"apiKeyCredentials"`
	// Contains OAuth2 client credential information.
	Oauth2Credential AppAuthorizationCredentialOauth2CredentialPtrInput `pulumi:"oauth2Credential"`
}

func (AppAuthorizationCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredential)(nil)).Elem()
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialOutput() AppAuthorizationCredentialOutput {
	return i.ToAppAuthorizationCredentialOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOutput)
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return i.ToAppAuthorizationCredentialPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialArgs) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOutput).ToAppAuthorizationCredentialPtrOutputWithContext(ctx)
}

// AppAuthorizationCredentialPtrInput is an input type that accepts AppAuthorizationCredentialArgs, AppAuthorizationCredentialPtr and AppAuthorizationCredentialPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialPtrInput` via:
//
//	        AppAuthorizationCredentialArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationCredentialPtrInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput
	ToAppAuthorizationCredentialPtrOutputWithContext(context.Context) AppAuthorizationCredentialPtrOutput
}

type appAuthorizationCredentialPtrType AppAuthorizationCredentialArgs

func AppAuthorizationCredentialPtr(v *AppAuthorizationCredentialArgs) AppAuthorizationCredentialPtrInput {
	return (*appAuthorizationCredentialPtrType)(v)
}

func (*appAuthorizationCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredential)(nil)).Elem()
}

func (i *appAuthorizationCredentialPtrType) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return i.ToAppAuthorizationCredentialPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationCredentialPtrType) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialPtrOutput)
}

type AppAuthorizationCredentialOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialOutput() AppAuthorizationCredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return o.ToAppAuthorizationCredentialPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationCredentialOutput) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationCredential) *AppAuthorizationCredential {
		return &v
	}).(AppAuthorizationCredentialPtrOutput)
}

// Contains API key credential information.
func (o AppAuthorizationCredentialOutput) ApiKeyCredentials() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o.ApplyT(func(v AppAuthorizationCredential) []AppAuthorizationCredentialApiKeyCredential {
		return v.ApiKeyCredentials
	}).(AppAuthorizationCredentialApiKeyCredentialArrayOutput)
}

// Contains OAuth2 client credential information.
func (o AppAuthorizationCredentialOutput) Oauth2Credential() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ApplyT(func(v AppAuthorizationCredential) *AppAuthorizationCredentialOauth2Credential {
		return v.Oauth2Credential
	}).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

type AppAuthorizationCredentialPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialPtrOutput) ToAppAuthorizationCredentialPtrOutput() AppAuthorizationCredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialPtrOutput) ToAppAuthorizationCredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialPtrOutput) Elem() AppAuthorizationCredentialOutput {
	return o.ApplyT(func(v *AppAuthorizationCredential) AppAuthorizationCredential {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationCredential
		return ret
	}).(AppAuthorizationCredentialOutput)
}

// Contains API key credential information.
func (o AppAuthorizationCredentialPtrOutput) ApiKeyCredentials() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o.ApplyT(func(v *AppAuthorizationCredential) []AppAuthorizationCredentialApiKeyCredential {
		if v == nil {
			return nil
		}
		return v.ApiKeyCredentials
	}).(AppAuthorizationCredentialApiKeyCredentialArrayOutput)
}

// Contains OAuth2 client credential information.
func (o AppAuthorizationCredentialPtrOutput) Oauth2Credential() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationCredential) *AppAuthorizationCredentialOauth2Credential {
		if v == nil {
			return nil
		}
		return v.Oauth2Credential
	}).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

type AppAuthorizationCredentialApiKeyCredential struct {
	// Contains API key credential information.
	ApiKey string `pulumi:"apiKey"`
}

// AppAuthorizationCredentialApiKeyCredentialInput is an input type that accepts AppAuthorizationCredentialApiKeyCredentialArgs and AppAuthorizationCredentialApiKeyCredentialOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialApiKeyCredentialInput` via:
//
//	AppAuthorizationCredentialApiKeyCredentialArgs{...}
type AppAuthorizationCredentialApiKeyCredentialInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialApiKeyCredentialOutput() AppAuthorizationCredentialApiKeyCredentialOutput
	ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(context.Context) AppAuthorizationCredentialApiKeyCredentialOutput
}

type AppAuthorizationCredentialApiKeyCredentialArgs struct {
	// Contains API key credential information.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
}

func (AppAuthorizationCredentialApiKeyCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (i AppAuthorizationCredentialApiKeyCredentialArgs) ToAppAuthorizationCredentialApiKeyCredentialOutput() AppAuthorizationCredentialApiKeyCredentialOutput {
	return i.ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialApiKeyCredentialArgs) ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialApiKeyCredentialOutput)
}

// AppAuthorizationCredentialApiKeyCredentialArrayInput is an input type that accepts AppAuthorizationCredentialApiKeyCredentialArray and AppAuthorizationCredentialApiKeyCredentialArrayOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialApiKeyCredentialArrayInput` via:
//
//	AppAuthorizationCredentialApiKeyCredentialArray{ AppAuthorizationCredentialApiKeyCredentialArgs{...} }
type AppAuthorizationCredentialApiKeyCredentialArrayInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialApiKeyCredentialArrayOutput() AppAuthorizationCredentialApiKeyCredentialArrayOutput
	ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(context.Context) AppAuthorizationCredentialApiKeyCredentialArrayOutput
}

type AppAuthorizationCredentialApiKeyCredentialArray []AppAuthorizationCredentialApiKeyCredentialInput

func (AppAuthorizationCredentialApiKeyCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (i AppAuthorizationCredentialApiKeyCredentialArray) ToAppAuthorizationCredentialApiKeyCredentialArrayOutput() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return i.ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialApiKeyCredentialArray) ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialApiKeyCredentialArrayOutput)
}

type AppAuthorizationCredentialApiKeyCredentialOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialApiKeyCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialApiKeyCredentialOutput) ToAppAuthorizationCredentialApiKeyCredentialOutput() AppAuthorizationCredentialApiKeyCredentialOutput {
	return o
}

func (o AppAuthorizationCredentialApiKeyCredentialOutput) ToAppAuthorizationCredentialApiKeyCredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialOutput {
	return o
}

// Contains API key credential information.
func (o AppAuthorizationCredentialApiKeyCredentialOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationCredentialApiKeyCredential) string { return v.ApiKey }).(pulumi.StringOutput)
}

type AppAuthorizationCredentialApiKeyCredentialArrayOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialApiKeyCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationCredentialApiKeyCredential)(nil)).Elem()
}

func (o AppAuthorizationCredentialApiKeyCredentialArrayOutput) ToAppAuthorizationCredentialApiKeyCredentialArrayOutput() AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o
}

func (o AppAuthorizationCredentialApiKeyCredentialArrayOutput) ToAppAuthorizationCredentialApiKeyCredentialArrayOutputWithContext(ctx context.Context) AppAuthorizationCredentialApiKeyCredentialArrayOutput {
	return o
}

func (o AppAuthorizationCredentialApiKeyCredentialArrayOutput) Index(i pulumi.IntInput) AppAuthorizationCredentialApiKeyCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAuthorizationCredentialApiKeyCredential {
		return vs[0].([]AppAuthorizationCredentialApiKeyCredential)[vs[1].(int)]
	}).(AppAuthorizationCredentialApiKeyCredentialOutput)
}

type AppAuthorizationCredentialOauth2Credential struct {
	// The client ID of the client application.
	ClientId string `pulumi:"clientId"`
	// The client secret of the client application.
	ClientSecret string `pulumi:"clientSecret"`
}

// AppAuthorizationCredentialOauth2CredentialInput is an input type that accepts AppAuthorizationCredentialOauth2CredentialArgs and AppAuthorizationCredentialOauth2CredentialOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialOauth2CredentialInput` via:
//
//	AppAuthorizationCredentialOauth2CredentialArgs{...}
type AppAuthorizationCredentialOauth2CredentialInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialOauth2CredentialOutput() AppAuthorizationCredentialOauth2CredentialOutput
	ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(context.Context) AppAuthorizationCredentialOauth2CredentialOutput
}

type AppAuthorizationCredentialOauth2CredentialArgs struct {
	// The client ID of the client application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret of the client application.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (AppAuthorizationCredentialOauth2CredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialOutput() AppAuthorizationCredentialOauth2CredentialOutput {
	return i.ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOauth2CredentialOutput)
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return i.ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationCredentialOauth2CredentialArgs) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOauth2CredentialOutput).ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx)
}

// AppAuthorizationCredentialOauth2CredentialPtrInput is an input type that accepts AppAuthorizationCredentialOauth2CredentialArgs, AppAuthorizationCredentialOauth2CredentialPtr and AppAuthorizationCredentialOauth2CredentialPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationCredentialOauth2CredentialPtrInput` via:
//
//	        AppAuthorizationCredentialOauth2CredentialArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationCredentialOauth2CredentialPtrInput interface {
	pulumi.Input

	ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput
	ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput
}

type appAuthorizationCredentialOauth2CredentialPtrType AppAuthorizationCredentialOauth2CredentialArgs

func AppAuthorizationCredentialOauth2CredentialPtr(v *AppAuthorizationCredentialOauth2CredentialArgs) AppAuthorizationCredentialOauth2CredentialPtrInput {
	return (*appAuthorizationCredentialOauth2CredentialPtrType)(v)
}

func (*appAuthorizationCredentialOauth2CredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (i *appAuthorizationCredentialOauth2CredentialPtrType) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return i.ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationCredentialOauth2CredentialPtrType) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

type AppAuthorizationCredentialOauth2CredentialOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialOauth2CredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialOutput() AppAuthorizationCredentialOauth2CredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationCredentialOauth2CredentialOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationCredentialOauth2Credential) *AppAuthorizationCredentialOauth2Credential {
		return &v
	}).(AppAuthorizationCredentialOauth2CredentialPtrOutput)
}

// The client ID of the client application.
func (o AppAuthorizationCredentialOauth2CredentialOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationCredentialOauth2Credential) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret of the client application.
func (o AppAuthorizationCredentialOauth2CredentialOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationCredentialOauth2Credential) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type AppAuthorizationCredentialOauth2CredentialPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationCredentialOauth2CredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationCredentialOauth2Credential)(nil)).Elem()
}

func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutput() AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ToAppAuthorizationCredentialOauth2CredentialPtrOutputWithContext(ctx context.Context) AppAuthorizationCredentialOauth2CredentialPtrOutput {
	return o
}

func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) Elem() AppAuthorizationCredentialOauth2CredentialOutput {
	return o.ApplyT(func(v *AppAuthorizationCredentialOauth2Credential) AppAuthorizationCredentialOauth2Credential {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationCredentialOauth2Credential
		return ret
	}).(AppAuthorizationCredentialOauth2CredentialOutput)
}

// The client ID of the client application.
func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationCredentialOauth2Credential) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret of the client application.
func (o AppAuthorizationCredentialOauth2CredentialPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationCredentialOauth2Credential) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type AppAuthorizationTenant struct {
	// The display name of the tenant.
	TenantDisplayName string `pulumi:"tenantDisplayName"`
	// The ID of the application tenant.
	TenantIdentifier string `pulumi:"tenantIdentifier"`
}

// AppAuthorizationTenantInput is an input type that accepts AppAuthorizationTenantArgs and AppAuthorizationTenantOutput values.
// You can construct a concrete instance of `AppAuthorizationTenantInput` via:
//
//	AppAuthorizationTenantArgs{...}
type AppAuthorizationTenantInput interface {
	pulumi.Input

	ToAppAuthorizationTenantOutput() AppAuthorizationTenantOutput
	ToAppAuthorizationTenantOutputWithContext(context.Context) AppAuthorizationTenantOutput
}

type AppAuthorizationTenantArgs struct {
	// The display name of the tenant.
	TenantDisplayName pulumi.StringInput `pulumi:"tenantDisplayName"`
	// The ID of the application tenant.
	TenantIdentifier pulumi.StringInput `pulumi:"tenantIdentifier"`
}

func (AppAuthorizationTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTenant)(nil)).Elem()
}

func (i AppAuthorizationTenantArgs) ToAppAuthorizationTenantOutput() AppAuthorizationTenantOutput {
	return i.ToAppAuthorizationTenantOutputWithContext(context.Background())
}

func (i AppAuthorizationTenantArgs) ToAppAuthorizationTenantOutputWithContext(ctx context.Context) AppAuthorizationTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTenantOutput)
}

// AppAuthorizationTenantArrayInput is an input type that accepts AppAuthorizationTenantArray and AppAuthorizationTenantArrayOutput values.
// You can construct a concrete instance of `AppAuthorizationTenantArrayInput` via:
//
//	AppAuthorizationTenantArray{ AppAuthorizationTenantArgs{...} }
type AppAuthorizationTenantArrayInput interface {
	pulumi.Input

	ToAppAuthorizationTenantArrayOutput() AppAuthorizationTenantArrayOutput
	ToAppAuthorizationTenantArrayOutputWithContext(context.Context) AppAuthorizationTenantArrayOutput
}

type AppAuthorizationTenantArray []AppAuthorizationTenantInput

func (AppAuthorizationTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationTenant)(nil)).Elem()
}

func (i AppAuthorizationTenantArray) ToAppAuthorizationTenantArrayOutput() AppAuthorizationTenantArrayOutput {
	return i.ToAppAuthorizationTenantArrayOutputWithContext(context.Background())
}

func (i AppAuthorizationTenantArray) ToAppAuthorizationTenantArrayOutputWithContext(ctx context.Context) AppAuthorizationTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTenantArrayOutput)
}

type AppAuthorizationTenantOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTenant)(nil)).Elem()
}

func (o AppAuthorizationTenantOutput) ToAppAuthorizationTenantOutput() AppAuthorizationTenantOutput {
	return o
}

func (o AppAuthorizationTenantOutput) ToAppAuthorizationTenantOutputWithContext(ctx context.Context) AppAuthorizationTenantOutput {
	return o
}

// The display name of the tenant.
func (o AppAuthorizationTenantOutput) TenantDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationTenant) string { return v.TenantDisplayName }).(pulumi.StringOutput)
}

// The ID of the application tenant.
func (o AppAuthorizationTenantOutput) TenantIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v AppAuthorizationTenant) string { return v.TenantIdentifier }).(pulumi.StringOutput)
}

type AppAuthorizationTenantArrayOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAuthorizationTenant)(nil)).Elem()
}

func (o AppAuthorizationTenantArrayOutput) ToAppAuthorizationTenantArrayOutput() AppAuthorizationTenantArrayOutput {
	return o
}

func (o AppAuthorizationTenantArrayOutput) ToAppAuthorizationTenantArrayOutputWithContext(ctx context.Context) AppAuthorizationTenantArrayOutput {
	return o
}

func (o AppAuthorizationTenantArrayOutput) Index(i pulumi.IntInput) AppAuthorizationTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAuthorizationTenant {
		return vs[0].([]AppAuthorizationTenant)[vs[1].(int)]
	}).(AppAuthorizationTenantOutput)
}

type AppAuthorizationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// AppAuthorizationTimeoutsInput is an input type that accepts AppAuthorizationTimeoutsArgs and AppAuthorizationTimeoutsOutput values.
// You can construct a concrete instance of `AppAuthorizationTimeoutsInput` via:
//
//	AppAuthorizationTimeoutsArgs{...}
type AppAuthorizationTimeoutsInput interface {
	pulumi.Input

	ToAppAuthorizationTimeoutsOutput() AppAuthorizationTimeoutsOutput
	ToAppAuthorizationTimeoutsOutputWithContext(context.Context) AppAuthorizationTimeoutsOutput
}

type AppAuthorizationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (AppAuthorizationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTimeouts)(nil)).Elem()
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsOutput() AppAuthorizationTimeoutsOutput {
	return i.ToAppAuthorizationTimeoutsOutputWithContext(context.Background())
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTimeoutsOutput)
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return i.ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Background())
}

func (i AppAuthorizationTimeoutsArgs) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTimeoutsOutput).ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx)
}

// AppAuthorizationTimeoutsPtrInput is an input type that accepts AppAuthorizationTimeoutsArgs, AppAuthorizationTimeoutsPtr and AppAuthorizationTimeoutsPtrOutput values.
// You can construct a concrete instance of `AppAuthorizationTimeoutsPtrInput` via:
//
//	        AppAuthorizationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type AppAuthorizationTimeoutsPtrInput interface {
	pulumi.Input

	ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput
	ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Context) AppAuthorizationTimeoutsPtrOutput
}

type appAuthorizationTimeoutsPtrType AppAuthorizationTimeoutsArgs

func AppAuthorizationTimeoutsPtr(v *AppAuthorizationTimeoutsArgs) AppAuthorizationTimeoutsPtrInput {
	return (*appAuthorizationTimeoutsPtrType)(v)
}

func (*appAuthorizationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationTimeouts)(nil)).Elem()
}

func (i *appAuthorizationTimeoutsPtrType) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return i.ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *appAuthorizationTimeoutsPtrType) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationTimeoutsPtrOutput)
}

type AppAuthorizationTimeoutsOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAuthorizationTimeouts)(nil)).Elem()
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsOutput() AppAuthorizationTimeoutsOutput {
	return o
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsOutput {
	return o
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return o.ToAppAuthorizationTimeoutsPtrOutputWithContext(context.Background())
}

func (o AppAuthorizationTimeoutsOutput) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppAuthorizationTimeouts) *AppAuthorizationTimeouts {
		return &v
	}).(AppAuthorizationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAuthorizationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o AppAuthorizationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAuthorizationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAuthorizationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type AppAuthorizationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (AppAuthorizationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationTimeouts)(nil)).Elem()
}

func (o AppAuthorizationTimeoutsPtrOutput) ToAppAuthorizationTimeoutsPtrOutput() AppAuthorizationTimeoutsPtrOutput {
	return o
}

func (o AppAuthorizationTimeoutsPtrOutput) ToAppAuthorizationTimeoutsPtrOutputWithContext(ctx context.Context) AppAuthorizationTimeoutsPtrOutput {
	return o
}

func (o AppAuthorizationTimeoutsPtrOutput) Elem() AppAuthorizationTimeoutsOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) AppAuthorizationTimeouts {
		if v != nil {
			return *v
		}
		var ret AppAuthorizationTimeouts
		return ret
	}).(AppAuthorizationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o AppAuthorizationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o AppAuthorizationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type IngestionDestinationDestinationConfiguration struct {
	// Contains information about an audit log processing configuration.
	AuditLog *IngestionDestinationDestinationConfigurationAuditLog `pulumi:"auditLog"`
}

// IngestionDestinationDestinationConfigurationInput is an input type that accepts IngestionDestinationDestinationConfigurationArgs and IngestionDestinationDestinationConfigurationOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationInput` via:
//
//	IngestionDestinationDestinationConfigurationArgs{...}
type IngestionDestinationDestinationConfigurationInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationOutput() IngestionDestinationDestinationConfigurationOutput
	ToIngestionDestinationDestinationConfigurationOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationOutput
}

type IngestionDestinationDestinationConfigurationArgs struct {
	// Contains information about an audit log processing configuration.
	AuditLog IngestionDestinationDestinationConfigurationAuditLogPtrInput `pulumi:"auditLog"`
}

func (IngestionDestinationDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfiguration)(nil)).Elem()
}

func (i IngestionDestinationDestinationConfigurationArgs) ToIngestionDestinationDestinationConfigurationOutput() IngestionDestinationDestinationConfigurationOutput {
	return i.ToIngestionDestinationDestinationConfigurationOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationArgs) ToIngestionDestinationDestinationConfigurationOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationOutput)
}

func (i IngestionDestinationDestinationConfigurationArgs) ToIngestionDestinationDestinationConfigurationPtrOutput() IngestionDestinationDestinationConfigurationPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationArgs) ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationOutput).ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(ctx)
}

// IngestionDestinationDestinationConfigurationPtrInput is an input type that accepts IngestionDestinationDestinationConfigurationArgs, IngestionDestinationDestinationConfigurationPtr and IngestionDestinationDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationPtrInput` via:
//
//	        IngestionDestinationDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationPtrOutput() IngestionDestinationDestinationConfigurationPtrOutput
	ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationPtrOutput
}

type ingestionDestinationDestinationConfigurationPtrType IngestionDestinationDestinationConfigurationArgs

func IngestionDestinationDestinationConfigurationPtr(v *IngestionDestinationDestinationConfigurationArgs) IngestionDestinationDestinationConfigurationPtrInput {
	return (*ingestionDestinationDestinationConfigurationPtrType)(v)
}

func (*ingestionDestinationDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfiguration)(nil)).Elem()
}

func (i *ingestionDestinationDestinationConfigurationPtrType) ToIngestionDestinationDestinationConfigurationPtrOutput() IngestionDestinationDestinationConfigurationPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationDestinationConfigurationPtrType) ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationPtrOutput)
}

type IngestionDestinationDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfiguration)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationOutput) ToIngestionDestinationDestinationConfigurationOutput() IngestionDestinationDestinationConfigurationOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationOutput) ToIngestionDestinationDestinationConfigurationOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationOutput) ToIngestionDestinationDestinationConfigurationPtrOutput() IngestionDestinationDestinationConfigurationPtrOutput {
	return o.ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationDestinationConfigurationOutput) ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationDestinationConfiguration) *IngestionDestinationDestinationConfiguration {
		return &v
	}).(IngestionDestinationDestinationConfigurationPtrOutput)
}

// Contains information about an audit log processing configuration.
func (o IngestionDestinationDestinationConfigurationOutput) AuditLog() IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return o.ApplyT(func(v IngestionDestinationDestinationConfiguration) *IngestionDestinationDestinationConfigurationAuditLog {
		return v.AuditLog
	}).(IngestionDestinationDestinationConfigurationAuditLogPtrOutput)
}

type IngestionDestinationDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfiguration)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationPtrOutput) ToIngestionDestinationDestinationConfigurationPtrOutput() IngestionDestinationDestinationConfigurationPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationPtrOutput) ToIngestionDestinationDestinationConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationPtrOutput) Elem() IngestionDestinationDestinationConfigurationOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfiguration) IngestionDestinationDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationDestinationConfiguration
		return ret
	}).(IngestionDestinationDestinationConfigurationOutput)
}

// Contains information about an audit log processing configuration.
func (o IngestionDestinationDestinationConfigurationPtrOutput) AuditLog() IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfiguration) *IngestionDestinationDestinationConfigurationAuditLog {
		if v == nil {
			return nil
		}
		return v.AuditLog
	}).(IngestionDestinationDestinationConfigurationAuditLogPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLog struct {
	// Contains information about an audit log destination. Only one destination (Firehose Stream) or (S3 Bucket) can be specified.
	Destination *IngestionDestinationDestinationConfigurationAuditLogDestination `pulumi:"destination"`
}

// IngestionDestinationDestinationConfigurationAuditLogInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogArgs and IngestionDestinationDestinationConfigurationAuditLogOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogInput` via:
//
//	IngestionDestinationDestinationConfigurationAuditLogArgs{...}
type IngestionDestinationDestinationConfigurationAuditLogInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogOutput() IngestionDestinationDestinationConfigurationAuditLogOutput
	ToIngestionDestinationDestinationConfigurationAuditLogOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogOutput
}

type IngestionDestinationDestinationConfigurationAuditLogArgs struct {
	// Contains information about an audit log destination. Only one destination (Firehose Stream) or (S3 Bucket) can be specified.
	Destination IngestionDestinationDestinationConfigurationAuditLogDestinationPtrInput `pulumi:"destination"`
}

func (IngestionDestinationDestinationConfigurationAuditLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLog)(nil)).Elem()
}

func (i IngestionDestinationDestinationConfigurationAuditLogArgs) ToIngestionDestinationDestinationConfigurationAuditLogOutput() IngestionDestinationDestinationConfigurationAuditLogOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogArgs) ToIngestionDestinationDestinationConfigurationAuditLogOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogOutput)
}

func (i IngestionDestinationDestinationConfigurationAuditLogArgs) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutput() IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogArgs) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogOutput).ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(ctx)
}

// IngestionDestinationDestinationConfigurationAuditLogPtrInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogArgs, IngestionDestinationDestinationConfigurationAuditLogPtr and IngestionDestinationDestinationConfigurationAuditLogPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogPtrInput` via:
//
//	        IngestionDestinationDestinationConfigurationAuditLogArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationDestinationConfigurationAuditLogPtrInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogPtrOutput() IngestionDestinationDestinationConfigurationAuditLogPtrOutput
	ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogPtrOutput
}

type ingestionDestinationDestinationConfigurationAuditLogPtrType IngestionDestinationDestinationConfigurationAuditLogArgs

func IngestionDestinationDestinationConfigurationAuditLogPtr(v *IngestionDestinationDestinationConfigurationAuditLogArgs) IngestionDestinationDestinationConfigurationAuditLogPtrInput {
	return (*ingestionDestinationDestinationConfigurationAuditLogPtrType)(v)
}

func (*ingestionDestinationDestinationConfigurationAuditLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLog)(nil)).Elem()
}

func (i *ingestionDestinationDestinationConfigurationAuditLogPtrType) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutput() IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationDestinationConfigurationAuditLogPtrType) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLog)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogOutput) ToIngestionDestinationDestinationConfigurationAuditLogOutput() IngestionDestinationDestinationConfigurationAuditLogOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogOutput) ToIngestionDestinationDestinationConfigurationAuditLogOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogOutput) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutput() IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return o.ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationDestinationConfigurationAuditLogOutput) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationDestinationConfigurationAuditLog) *IngestionDestinationDestinationConfigurationAuditLog {
		return &v
	}).(IngestionDestinationDestinationConfigurationAuditLogPtrOutput)
}

// Contains information about an audit log destination. Only one destination (Firehose Stream) or (S3 Bucket) can be specified.
func (o IngestionDestinationDestinationConfigurationAuditLogOutput) Destination() IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return o.ApplyT(func(v IngestionDestinationDestinationConfigurationAuditLog) *IngestionDestinationDestinationConfigurationAuditLogDestination {
		return v.Destination
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLog)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutput() IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogPtrOutput) Elem() IngestionDestinationDestinationConfigurationAuditLogOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLog) IngestionDestinationDestinationConfigurationAuditLog {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationDestinationConfigurationAuditLog
		return ret
	}).(IngestionDestinationDestinationConfigurationAuditLogOutput)
}

// Contains information about an audit log destination. Only one destination (Firehose Stream) or (S3 Bucket) can be specified.
func (o IngestionDestinationDestinationConfigurationAuditLogPtrOutput) Destination() IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLog) *IngestionDestinationDestinationConfigurationAuditLogDestination {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestination struct {
	// Contains information about an Amazon Data Firehose delivery stream.
	FirehoseStream *IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream `pulumi:"firehoseStream"`
	// Contains information about an Amazon S3 bucket.
	S3Bucket *IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket `pulumi:"s3Bucket"`
}

// IngestionDestinationDestinationConfigurationAuditLogDestinationInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogDestinationArgs and IngestionDestinationDestinationConfigurationAuditLogDestinationOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogDestinationInput` via:
//
//	IngestionDestinationDestinationConfigurationAuditLogDestinationArgs{...}
type IngestionDestinationDestinationConfigurationAuditLogDestinationInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogDestinationOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationOutput
	ToIngestionDestinationDestinationConfigurationAuditLogDestinationOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationOutput
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationArgs struct {
	// Contains information about an Amazon Data Firehose delivery stream.
	FirehoseStream IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrInput `pulumi:"firehoseStream"`
	// Contains information about an Amazon S3 bucket.
	S3Bucket IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrInput `pulumi:"s3Bucket"`
}

func (IngestionDestinationDestinationConfigurationAuditLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestination)(nil)).Elem()
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationOutput)
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationOutput).ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(ctx)
}

// IngestionDestinationDestinationConfigurationAuditLogDestinationPtrInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogDestinationArgs, IngestionDestinationDestinationConfigurationAuditLogDestinationPtr and IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogDestinationPtrInput` via:
//
//	        IngestionDestinationDestinationConfigurationAuditLogDestinationArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationDestinationConfigurationAuditLogDestinationPtrInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput
	ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput
}

type ingestionDestinationDestinationConfigurationAuditLogDestinationPtrType IngestionDestinationDestinationConfigurationAuditLogDestinationArgs

func IngestionDestinationDestinationConfigurationAuditLogDestinationPtr(v *IngestionDestinationDestinationConfigurationAuditLogDestinationArgs) IngestionDestinationDestinationConfigurationAuditLogDestinationPtrInput {
	return (*ingestionDestinationDestinationConfigurationAuditLogDestinationPtrType)(v)
}

func (*ingestionDestinationDestinationConfigurationAuditLogDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLogDestination)(nil)).Elem()
}

func (i *ingestionDestinationDestinationConfigurationAuditLogDestinationPtrType) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationDestinationConfigurationAuditLogDestinationPtrType) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestination)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return o.ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationDestinationConfigurationAuditLogDestination) *IngestionDestinationDestinationConfigurationAuditLogDestination {
		return &v
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput)
}

// Contains information about an Amazon Data Firehose delivery stream.
func (o IngestionDestinationDestinationConfigurationAuditLogDestinationOutput) FirehoseStream() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return o.ApplyT(func(v IngestionDestinationDestinationConfigurationAuditLogDestination) *IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream {
		return v.FirehoseStream
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput)
}

// Contains information about an Amazon S3 bucket.
func (o IngestionDestinationDestinationConfigurationAuditLogDestinationOutput) S3Bucket() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return o.ApplyT(func(v IngestionDestinationDestinationConfigurationAuditLogDestination) *IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket {
		return v.S3Bucket
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLogDestination)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput) Elem() IngestionDestinationDestinationConfigurationAuditLogDestinationOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestination) IngestionDestinationDestinationConfigurationAuditLogDestination {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationDestinationConfigurationAuditLogDestination
		return ret
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationOutput)
}

// Contains information about an Amazon Data Firehose delivery stream.
func (o IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput) FirehoseStream() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestination) *IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream {
		if v == nil {
			return nil
		}
		return v.FirehoseStream
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput)
}

// Contains information about an Amazon S3 bucket.
func (o IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput) S3Bucket() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestination) *IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket {
		if v == nil {
			return nil
		}
		return v.S3Bucket
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream struct {
	StreamName string `pulumi:"streamName"`
}

// IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs and IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamInput` via:
//
//	IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs{...}
type IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput
	ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs struct {
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream)(nil)).Elem()
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput)
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput).ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(ctx)
}

// IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs, IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtr and IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrInput` via:
//
//	        IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput
	ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput
}

type ingestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrType IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs

func IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtr(v *IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrInput {
	return (*ingestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrType)(v)
}

func (*ingestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream)(nil)).Elem()
}

func (i *ingestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrType) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrType) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return o.ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream) *IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream {
		return &v
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput)
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream) string {
		return v.StreamName
	}).(pulumi.StringOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput) Elem() IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream) IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream
		return ret
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput)
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStream) *string {
		if v == nil {
			return nil
		}
		return &v.StreamName
	}).(pulumi.StringPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket struct {
	BucketName string `pulumi:"bucketName"`
	// The object key to use.
	Prefix *string `pulumi:"prefix"`
}

// IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs and IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketInput` via:
//
//	IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs{...}
type IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput
	ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs struct {
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The object key to use.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket)(nil)).Elem()
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput)
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput).ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(ctx)
}

// IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrInput is an input type that accepts IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs, IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtr and IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrInput` via:
//
//	        IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrInput interface {
	pulumi.Input

	ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput
	ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput
}

type ingestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrType IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs

func IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtr(v *IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrInput {
	return (*ingestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrType)(v)
}

func (*ingestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket)(nil)).Elem()
}

func (i *ingestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrType) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return i.ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrType) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return o.ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket) *IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket {
		return &v
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput)
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket) string {
		return v.BucketName
	}).(pulumi.StringOutput)
}

// The object key to use.
func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket)(nil)).Elem()
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput) ToIngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutputWithContext(ctx context.Context) IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput {
	return o
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput) Elem() IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket) IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket
		return ret
	}).(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput)
}

func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The object key to use.
func (o IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationDestinationConfigurationAuditLogDestinationS3Bucket) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type IngestionDestinationProcessingConfiguration struct {
	// Contains information about an audit log processing configuration.
	AuditLog *IngestionDestinationProcessingConfigurationAuditLog `pulumi:"auditLog"`
}

// IngestionDestinationProcessingConfigurationInput is an input type that accepts IngestionDestinationProcessingConfigurationArgs and IngestionDestinationProcessingConfigurationOutput values.
// You can construct a concrete instance of `IngestionDestinationProcessingConfigurationInput` via:
//
//	IngestionDestinationProcessingConfigurationArgs{...}
type IngestionDestinationProcessingConfigurationInput interface {
	pulumi.Input

	ToIngestionDestinationProcessingConfigurationOutput() IngestionDestinationProcessingConfigurationOutput
	ToIngestionDestinationProcessingConfigurationOutputWithContext(context.Context) IngestionDestinationProcessingConfigurationOutput
}

type IngestionDestinationProcessingConfigurationArgs struct {
	// Contains information about an audit log processing configuration.
	AuditLog IngestionDestinationProcessingConfigurationAuditLogPtrInput `pulumi:"auditLog"`
}

func (IngestionDestinationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationProcessingConfiguration)(nil)).Elem()
}

func (i IngestionDestinationProcessingConfigurationArgs) ToIngestionDestinationProcessingConfigurationOutput() IngestionDestinationProcessingConfigurationOutput {
	return i.ToIngestionDestinationProcessingConfigurationOutputWithContext(context.Background())
}

func (i IngestionDestinationProcessingConfigurationArgs) ToIngestionDestinationProcessingConfigurationOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationProcessingConfigurationOutput)
}

func (i IngestionDestinationProcessingConfigurationArgs) ToIngestionDestinationProcessingConfigurationPtrOutput() IngestionDestinationProcessingConfigurationPtrOutput {
	return i.ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationProcessingConfigurationArgs) ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationProcessingConfigurationOutput).ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(ctx)
}

// IngestionDestinationProcessingConfigurationPtrInput is an input type that accepts IngestionDestinationProcessingConfigurationArgs, IngestionDestinationProcessingConfigurationPtr and IngestionDestinationProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationProcessingConfigurationPtrInput` via:
//
//	        IngestionDestinationProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToIngestionDestinationProcessingConfigurationPtrOutput() IngestionDestinationProcessingConfigurationPtrOutput
	ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(context.Context) IngestionDestinationProcessingConfigurationPtrOutput
}

type ingestionDestinationProcessingConfigurationPtrType IngestionDestinationProcessingConfigurationArgs

func IngestionDestinationProcessingConfigurationPtr(v *IngestionDestinationProcessingConfigurationArgs) IngestionDestinationProcessingConfigurationPtrInput {
	return (*ingestionDestinationProcessingConfigurationPtrType)(v)
}

func (*ingestionDestinationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationProcessingConfiguration)(nil)).Elem()
}

func (i *ingestionDestinationProcessingConfigurationPtrType) ToIngestionDestinationProcessingConfigurationPtrOutput() IngestionDestinationProcessingConfigurationPtrOutput {
	return i.ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationProcessingConfigurationPtrType) ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationProcessingConfigurationPtrOutput)
}

type IngestionDestinationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (IngestionDestinationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationProcessingConfiguration)(nil)).Elem()
}

func (o IngestionDestinationProcessingConfigurationOutput) ToIngestionDestinationProcessingConfigurationOutput() IngestionDestinationProcessingConfigurationOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationOutput) ToIngestionDestinationProcessingConfigurationOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationOutput) ToIngestionDestinationProcessingConfigurationPtrOutput() IngestionDestinationProcessingConfigurationPtrOutput {
	return o.ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationProcessingConfigurationOutput) ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationProcessingConfiguration) *IngestionDestinationProcessingConfiguration {
		return &v
	}).(IngestionDestinationProcessingConfigurationPtrOutput)
}

// Contains information about an audit log processing configuration.
func (o IngestionDestinationProcessingConfigurationOutput) AuditLog() IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return o.ApplyT(func(v IngestionDestinationProcessingConfiguration) *IngestionDestinationProcessingConfigurationAuditLog {
		return v.AuditLog
	}).(IngestionDestinationProcessingConfigurationAuditLogPtrOutput)
}

type IngestionDestinationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationProcessingConfiguration)(nil)).Elem()
}

func (o IngestionDestinationProcessingConfigurationPtrOutput) ToIngestionDestinationProcessingConfigurationPtrOutput() IngestionDestinationProcessingConfigurationPtrOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationPtrOutput) ToIngestionDestinationProcessingConfigurationPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationPtrOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationPtrOutput) Elem() IngestionDestinationProcessingConfigurationOutput {
	return o.ApplyT(func(v *IngestionDestinationProcessingConfiguration) IngestionDestinationProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationProcessingConfiguration
		return ret
	}).(IngestionDestinationProcessingConfigurationOutput)
}

// Contains information about an audit log processing configuration.
func (o IngestionDestinationProcessingConfigurationPtrOutput) AuditLog() IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationProcessingConfiguration) *IngestionDestinationProcessingConfigurationAuditLog {
		if v == nil {
			return nil
		}
		return v.AuditLog
	}).(IngestionDestinationProcessingConfigurationAuditLogPtrOutput)
}

type IngestionDestinationProcessingConfigurationAuditLog struct {
	// The format in which the audit logs need to be formatted. Valid values: `json`, `parquet`.
	Format string `pulumi:"format"`
	// The event schema in which the audit logs need to be formatted. Valid values: `ocsf`, `raw`.
	Schema string `pulumi:"schema"`
}

// IngestionDestinationProcessingConfigurationAuditLogInput is an input type that accepts IngestionDestinationProcessingConfigurationAuditLogArgs and IngestionDestinationProcessingConfigurationAuditLogOutput values.
// You can construct a concrete instance of `IngestionDestinationProcessingConfigurationAuditLogInput` via:
//
//	IngestionDestinationProcessingConfigurationAuditLogArgs{...}
type IngestionDestinationProcessingConfigurationAuditLogInput interface {
	pulumi.Input

	ToIngestionDestinationProcessingConfigurationAuditLogOutput() IngestionDestinationProcessingConfigurationAuditLogOutput
	ToIngestionDestinationProcessingConfigurationAuditLogOutputWithContext(context.Context) IngestionDestinationProcessingConfigurationAuditLogOutput
}

type IngestionDestinationProcessingConfigurationAuditLogArgs struct {
	// The format in which the audit logs need to be formatted. Valid values: `json`, `parquet`.
	Format pulumi.StringInput `pulumi:"format"`
	// The event schema in which the audit logs need to be formatted. Valid values: `ocsf`, `raw`.
	Schema pulumi.StringInput `pulumi:"schema"`
}

func (IngestionDestinationProcessingConfigurationAuditLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationProcessingConfigurationAuditLog)(nil)).Elem()
}

func (i IngestionDestinationProcessingConfigurationAuditLogArgs) ToIngestionDestinationProcessingConfigurationAuditLogOutput() IngestionDestinationProcessingConfigurationAuditLogOutput {
	return i.ToIngestionDestinationProcessingConfigurationAuditLogOutputWithContext(context.Background())
}

func (i IngestionDestinationProcessingConfigurationAuditLogArgs) ToIngestionDestinationProcessingConfigurationAuditLogOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationAuditLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationProcessingConfigurationAuditLogOutput)
}

func (i IngestionDestinationProcessingConfigurationAuditLogArgs) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutput() IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return i.ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationProcessingConfigurationAuditLogArgs) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationProcessingConfigurationAuditLogOutput).ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(ctx)
}

// IngestionDestinationProcessingConfigurationAuditLogPtrInput is an input type that accepts IngestionDestinationProcessingConfigurationAuditLogArgs, IngestionDestinationProcessingConfigurationAuditLogPtr and IngestionDestinationProcessingConfigurationAuditLogPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationProcessingConfigurationAuditLogPtrInput` via:
//
//	        IngestionDestinationProcessingConfigurationAuditLogArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationProcessingConfigurationAuditLogPtrInput interface {
	pulumi.Input

	ToIngestionDestinationProcessingConfigurationAuditLogPtrOutput() IngestionDestinationProcessingConfigurationAuditLogPtrOutput
	ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(context.Context) IngestionDestinationProcessingConfigurationAuditLogPtrOutput
}

type ingestionDestinationProcessingConfigurationAuditLogPtrType IngestionDestinationProcessingConfigurationAuditLogArgs

func IngestionDestinationProcessingConfigurationAuditLogPtr(v *IngestionDestinationProcessingConfigurationAuditLogArgs) IngestionDestinationProcessingConfigurationAuditLogPtrInput {
	return (*ingestionDestinationProcessingConfigurationAuditLogPtrType)(v)
}

func (*ingestionDestinationProcessingConfigurationAuditLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationProcessingConfigurationAuditLog)(nil)).Elem()
}

func (i *ingestionDestinationProcessingConfigurationAuditLogPtrType) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutput() IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return i.ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationProcessingConfigurationAuditLogPtrType) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationProcessingConfigurationAuditLogPtrOutput)
}

type IngestionDestinationProcessingConfigurationAuditLogOutput struct{ *pulumi.OutputState }

func (IngestionDestinationProcessingConfigurationAuditLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationProcessingConfigurationAuditLog)(nil)).Elem()
}

func (o IngestionDestinationProcessingConfigurationAuditLogOutput) ToIngestionDestinationProcessingConfigurationAuditLogOutput() IngestionDestinationProcessingConfigurationAuditLogOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationAuditLogOutput) ToIngestionDestinationProcessingConfigurationAuditLogOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationAuditLogOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationAuditLogOutput) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutput() IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return o.ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationProcessingConfigurationAuditLogOutput) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationProcessingConfigurationAuditLog) *IngestionDestinationProcessingConfigurationAuditLog {
		return &v
	}).(IngestionDestinationProcessingConfigurationAuditLogPtrOutput)
}

// The format in which the audit logs need to be formatted. Valid values: `json`, `parquet`.
func (o IngestionDestinationProcessingConfigurationAuditLogOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v IngestionDestinationProcessingConfigurationAuditLog) string { return v.Format }).(pulumi.StringOutput)
}

// The event schema in which the audit logs need to be formatted. Valid values: `ocsf`, `raw`.
func (o IngestionDestinationProcessingConfigurationAuditLogOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v IngestionDestinationProcessingConfigurationAuditLog) string { return v.Schema }).(pulumi.StringOutput)
}

type IngestionDestinationProcessingConfigurationAuditLogPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationProcessingConfigurationAuditLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationProcessingConfigurationAuditLog)(nil)).Elem()
}

func (o IngestionDestinationProcessingConfigurationAuditLogPtrOutput) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutput() IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationAuditLogPtrOutput) ToIngestionDestinationProcessingConfigurationAuditLogPtrOutputWithContext(ctx context.Context) IngestionDestinationProcessingConfigurationAuditLogPtrOutput {
	return o
}

func (o IngestionDestinationProcessingConfigurationAuditLogPtrOutput) Elem() IngestionDestinationProcessingConfigurationAuditLogOutput {
	return o.ApplyT(func(v *IngestionDestinationProcessingConfigurationAuditLog) IngestionDestinationProcessingConfigurationAuditLog {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationProcessingConfigurationAuditLog
		return ret
	}).(IngestionDestinationProcessingConfigurationAuditLogOutput)
}

// The format in which the audit logs need to be formatted. Valid values: `json`, `parquet`.
func (o IngestionDestinationProcessingConfigurationAuditLogPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationProcessingConfigurationAuditLog) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

// The event schema in which the audit logs need to be formatted. Valid values: `ocsf`, `raw`.
func (o IngestionDestinationProcessingConfigurationAuditLogPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationProcessingConfigurationAuditLog) *string {
		if v == nil {
			return nil
		}
		return &v.Schema
	}).(pulumi.StringPtrOutput)
}

type IngestionDestinationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// IngestionDestinationTimeoutsInput is an input type that accepts IngestionDestinationTimeoutsArgs and IngestionDestinationTimeoutsOutput values.
// You can construct a concrete instance of `IngestionDestinationTimeoutsInput` via:
//
//	IngestionDestinationTimeoutsArgs{...}
type IngestionDestinationTimeoutsInput interface {
	pulumi.Input

	ToIngestionDestinationTimeoutsOutput() IngestionDestinationTimeoutsOutput
	ToIngestionDestinationTimeoutsOutputWithContext(context.Context) IngestionDestinationTimeoutsOutput
}

type IngestionDestinationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (IngestionDestinationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationTimeouts)(nil)).Elem()
}

func (i IngestionDestinationTimeoutsArgs) ToIngestionDestinationTimeoutsOutput() IngestionDestinationTimeoutsOutput {
	return i.ToIngestionDestinationTimeoutsOutputWithContext(context.Background())
}

func (i IngestionDestinationTimeoutsArgs) ToIngestionDestinationTimeoutsOutputWithContext(ctx context.Context) IngestionDestinationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationTimeoutsOutput)
}

func (i IngestionDestinationTimeoutsArgs) ToIngestionDestinationTimeoutsPtrOutput() IngestionDestinationTimeoutsPtrOutput {
	return i.ToIngestionDestinationTimeoutsPtrOutputWithContext(context.Background())
}

func (i IngestionDestinationTimeoutsArgs) ToIngestionDestinationTimeoutsPtrOutputWithContext(ctx context.Context) IngestionDestinationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationTimeoutsOutput).ToIngestionDestinationTimeoutsPtrOutputWithContext(ctx)
}

// IngestionDestinationTimeoutsPtrInput is an input type that accepts IngestionDestinationTimeoutsArgs, IngestionDestinationTimeoutsPtr and IngestionDestinationTimeoutsPtrOutput values.
// You can construct a concrete instance of `IngestionDestinationTimeoutsPtrInput` via:
//
//	        IngestionDestinationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type IngestionDestinationTimeoutsPtrInput interface {
	pulumi.Input

	ToIngestionDestinationTimeoutsPtrOutput() IngestionDestinationTimeoutsPtrOutput
	ToIngestionDestinationTimeoutsPtrOutputWithContext(context.Context) IngestionDestinationTimeoutsPtrOutput
}

type ingestionDestinationTimeoutsPtrType IngestionDestinationTimeoutsArgs

func IngestionDestinationTimeoutsPtr(v *IngestionDestinationTimeoutsArgs) IngestionDestinationTimeoutsPtrInput {
	return (*ingestionDestinationTimeoutsPtrType)(v)
}

func (*ingestionDestinationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationTimeouts)(nil)).Elem()
}

func (i *ingestionDestinationTimeoutsPtrType) ToIngestionDestinationTimeoutsPtrOutput() IngestionDestinationTimeoutsPtrOutput {
	return i.ToIngestionDestinationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *ingestionDestinationTimeoutsPtrType) ToIngestionDestinationTimeoutsPtrOutputWithContext(ctx context.Context) IngestionDestinationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngestionDestinationTimeoutsPtrOutput)
}

type IngestionDestinationTimeoutsOutput struct{ *pulumi.OutputState }

func (IngestionDestinationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestionDestinationTimeouts)(nil)).Elem()
}

func (o IngestionDestinationTimeoutsOutput) ToIngestionDestinationTimeoutsOutput() IngestionDestinationTimeoutsOutput {
	return o
}

func (o IngestionDestinationTimeoutsOutput) ToIngestionDestinationTimeoutsOutputWithContext(ctx context.Context) IngestionDestinationTimeoutsOutput {
	return o
}

func (o IngestionDestinationTimeoutsOutput) ToIngestionDestinationTimeoutsPtrOutput() IngestionDestinationTimeoutsPtrOutput {
	return o.ToIngestionDestinationTimeoutsPtrOutputWithContext(context.Background())
}

func (o IngestionDestinationTimeoutsOutput) ToIngestionDestinationTimeoutsPtrOutputWithContext(ctx context.Context) IngestionDestinationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngestionDestinationTimeouts) *IngestionDestinationTimeouts {
		return &v
	}).(IngestionDestinationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o IngestionDestinationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestionDestinationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o IngestionDestinationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestionDestinationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o IngestionDestinationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestionDestinationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type IngestionDestinationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (IngestionDestinationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngestionDestinationTimeouts)(nil)).Elem()
}

func (o IngestionDestinationTimeoutsPtrOutput) ToIngestionDestinationTimeoutsPtrOutput() IngestionDestinationTimeoutsPtrOutput {
	return o
}

func (o IngestionDestinationTimeoutsPtrOutput) ToIngestionDestinationTimeoutsPtrOutputWithContext(ctx context.Context) IngestionDestinationTimeoutsPtrOutput {
	return o
}

func (o IngestionDestinationTimeoutsPtrOutput) Elem() IngestionDestinationTimeoutsOutput {
	return o.ApplyT(func(v *IngestionDestinationTimeouts) IngestionDestinationTimeouts {
		if v != nil {
			return *v
		}
		var ret IngestionDestinationTimeouts
		return ret
	}).(IngestionDestinationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o IngestionDestinationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o IngestionDestinationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o IngestionDestinationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngestionDestinationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionAuthRequestInput)(nil)).Elem(), AppAuthorizationConnectionAuthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionAuthRequestPtrInput)(nil)).Elem(), AppAuthorizationConnectionAuthRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionTenantInput)(nil)).Elem(), AppAuthorizationConnectionTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionTenantArrayInput)(nil)).Elem(), AppAuthorizationConnectionTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionTimeoutsInput)(nil)).Elem(), AppAuthorizationConnectionTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionTimeoutsPtrInput)(nil)).Elem(), AppAuthorizationConnectionTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialInput)(nil)).Elem(), AppAuthorizationCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialPtrInput)(nil)).Elem(), AppAuthorizationCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredentialInput)(nil)).Elem(), AppAuthorizationCredentialApiKeyCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialApiKeyCredentialArrayInput)(nil)).Elem(), AppAuthorizationCredentialApiKeyCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialOauth2CredentialInput)(nil)).Elem(), AppAuthorizationCredentialOauth2CredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationCredentialOauth2CredentialPtrInput)(nil)).Elem(), AppAuthorizationCredentialOauth2CredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTenantInput)(nil)).Elem(), AppAuthorizationTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTenantArrayInput)(nil)).Elem(), AppAuthorizationTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTimeoutsInput)(nil)).Elem(), AppAuthorizationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationTimeoutsPtrInput)(nil)).Elem(), AppAuthorizationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationPtrInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogPtrInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationPtrInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrInput)(nil)).Elem(), IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationProcessingConfigurationInput)(nil)).Elem(), IngestionDestinationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationProcessingConfigurationPtrInput)(nil)).Elem(), IngestionDestinationProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationProcessingConfigurationAuditLogInput)(nil)).Elem(), IngestionDestinationProcessingConfigurationAuditLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationProcessingConfigurationAuditLogPtrInput)(nil)).Elem(), IngestionDestinationProcessingConfigurationAuditLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationTimeoutsInput)(nil)).Elem(), IngestionDestinationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngestionDestinationTimeoutsPtrInput)(nil)).Elem(), IngestionDestinationTimeoutsArgs{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionAuthRequestOutput{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionAuthRequestPtrOutput{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionTenantOutput{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionTenantArrayOutput{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionTimeoutsOutput{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialPtrOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialApiKeyCredentialOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialApiKeyCredentialArrayOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialOauth2CredentialOutput{})
	pulumi.RegisterOutputType(AppAuthorizationCredentialOauth2CredentialPtrOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTenantOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTenantArrayOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTimeoutsOutput{})
	pulumi.RegisterOutputType(AppAuthorizationTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogDestinationOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogDestinationPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogDestinationFirehoseStreamPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketOutput{})
	pulumi.RegisterOutputType(IngestionDestinationDestinationConfigurationAuditLogDestinationS3BucketPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(IngestionDestinationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationProcessingConfigurationAuditLogOutput{})
	pulumi.RegisterOutputType(IngestionDestinationProcessingConfigurationAuditLogPtrOutput{})
	pulumi.RegisterOutputType(IngestionDestinationTimeoutsOutput{})
	pulumi.RegisterOutputType(IngestionDestinationTimeoutsPtrOutput{})
}
