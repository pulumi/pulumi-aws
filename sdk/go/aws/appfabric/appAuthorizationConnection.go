// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appfabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS AppFabric App Authorization Connection.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/appfabric"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := appfabric.NewAppAuthorizationConnection(ctx, "example", &appfabric.AppAuthorizationConnectionArgs{
//				AppAuthorizationArn: pulumi.Any(test.Arn),
//				AppBundleArn:        pulumi.Any(arn),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AppAuthorizationConnection struct {
	pulumi.CustomResourceState

	// The name of the application.
	App pulumi.StringOutput `pulumi:"app"`
	// The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
	AppAuthorizationArn pulumi.StringOutput `pulumi:"appAuthorizationArn"`
	// The Amazon Resource Name (ARN) of the app bundle to use for the request.
	AppBundleArn pulumi.StringOutput `pulumi:"appBundleArn"`
	// Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
	AuthRequest AppAuthorizationConnectionAuthRequestPtrOutput `pulumi:"authRequest"`
	// Contains information about an application tenant, such as the application display name and identifier.
	Tenants  AppAuthorizationConnectionTenantArrayOutput `pulumi:"tenants"`
	Timeouts AppAuthorizationConnectionTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewAppAuthorizationConnection registers a new resource with the given unique name, arguments, and options.
func NewAppAuthorizationConnection(ctx *pulumi.Context,
	name string, args *AppAuthorizationConnectionArgs, opts ...pulumi.ResourceOption) (*AppAuthorizationConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppAuthorizationArn == nil {
		return nil, errors.New("invalid value for required argument 'AppAuthorizationArn'")
	}
	if args.AppBundleArn == nil {
		return nil, errors.New("invalid value for required argument 'AppBundleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppAuthorizationConnection
	err := ctx.RegisterResource("aws:appfabric/appAuthorizationConnection:AppAuthorizationConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppAuthorizationConnection gets an existing AppAuthorizationConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppAuthorizationConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppAuthorizationConnectionState, opts ...pulumi.ResourceOption) (*AppAuthorizationConnection, error) {
	var resource AppAuthorizationConnection
	err := ctx.ReadResource("aws:appfabric/appAuthorizationConnection:AppAuthorizationConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppAuthorizationConnection resources.
type appAuthorizationConnectionState struct {
	// The name of the application.
	App *string `pulumi:"app"`
	// The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
	AppAuthorizationArn *string `pulumi:"appAuthorizationArn"`
	// The Amazon Resource Name (ARN) of the app bundle to use for the request.
	AppBundleArn *string `pulumi:"appBundleArn"`
	// Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
	AuthRequest *AppAuthorizationConnectionAuthRequest `pulumi:"authRequest"`
	// Contains information about an application tenant, such as the application display name and identifier.
	Tenants  []AppAuthorizationConnectionTenant  `pulumi:"tenants"`
	Timeouts *AppAuthorizationConnectionTimeouts `pulumi:"timeouts"`
}

type AppAuthorizationConnectionState struct {
	// The name of the application.
	App pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
	AppAuthorizationArn pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) of the app bundle to use for the request.
	AppBundleArn pulumi.StringPtrInput
	// Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
	AuthRequest AppAuthorizationConnectionAuthRequestPtrInput
	// Contains information about an application tenant, such as the application display name and identifier.
	Tenants  AppAuthorizationConnectionTenantArrayInput
	Timeouts AppAuthorizationConnectionTimeoutsPtrInput
}

func (AppAuthorizationConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*appAuthorizationConnectionState)(nil)).Elem()
}

type appAuthorizationConnectionArgs struct {
	// The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
	AppAuthorizationArn string `pulumi:"appAuthorizationArn"`
	// The Amazon Resource Name (ARN) of the app bundle to use for the request.
	AppBundleArn string `pulumi:"appBundleArn"`
	// Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
	AuthRequest *AppAuthorizationConnectionAuthRequest `pulumi:"authRequest"`
	Timeouts    *AppAuthorizationConnectionTimeouts    `pulumi:"timeouts"`
}

// The set of arguments for constructing a AppAuthorizationConnection resource.
type AppAuthorizationConnectionArgs struct {
	// The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
	AppAuthorizationArn pulumi.StringInput
	// The Amazon Resource Name (ARN) of the app bundle to use for the request.
	AppBundleArn pulumi.StringInput
	// Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
	AuthRequest AppAuthorizationConnectionAuthRequestPtrInput
	Timeouts    AppAuthorizationConnectionTimeoutsPtrInput
}

func (AppAuthorizationConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appAuthorizationConnectionArgs)(nil)).Elem()
}

type AppAuthorizationConnectionInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionOutput() AppAuthorizationConnectionOutput
	ToAppAuthorizationConnectionOutputWithContext(ctx context.Context) AppAuthorizationConnectionOutput
}

func (*AppAuthorizationConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationConnection)(nil)).Elem()
}

func (i *AppAuthorizationConnection) ToAppAuthorizationConnectionOutput() AppAuthorizationConnectionOutput {
	return i.ToAppAuthorizationConnectionOutputWithContext(context.Background())
}

func (i *AppAuthorizationConnection) ToAppAuthorizationConnectionOutputWithContext(ctx context.Context) AppAuthorizationConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionOutput)
}

// AppAuthorizationConnectionArrayInput is an input type that accepts AppAuthorizationConnectionArray and AppAuthorizationConnectionArrayOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionArrayInput` via:
//
//	AppAuthorizationConnectionArray{ AppAuthorizationConnectionArgs{...} }
type AppAuthorizationConnectionArrayInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionArrayOutput() AppAuthorizationConnectionArrayOutput
	ToAppAuthorizationConnectionArrayOutputWithContext(context.Context) AppAuthorizationConnectionArrayOutput
}

type AppAuthorizationConnectionArray []AppAuthorizationConnectionInput

func (AppAuthorizationConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppAuthorizationConnection)(nil)).Elem()
}

func (i AppAuthorizationConnectionArray) ToAppAuthorizationConnectionArrayOutput() AppAuthorizationConnectionArrayOutput {
	return i.ToAppAuthorizationConnectionArrayOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionArray) ToAppAuthorizationConnectionArrayOutputWithContext(ctx context.Context) AppAuthorizationConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionArrayOutput)
}

// AppAuthorizationConnectionMapInput is an input type that accepts AppAuthorizationConnectionMap and AppAuthorizationConnectionMapOutput values.
// You can construct a concrete instance of `AppAuthorizationConnectionMapInput` via:
//
//	AppAuthorizationConnectionMap{ "key": AppAuthorizationConnectionArgs{...} }
type AppAuthorizationConnectionMapInput interface {
	pulumi.Input

	ToAppAuthorizationConnectionMapOutput() AppAuthorizationConnectionMapOutput
	ToAppAuthorizationConnectionMapOutputWithContext(context.Context) AppAuthorizationConnectionMapOutput
}

type AppAuthorizationConnectionMap map[string]AppAuthorizationConnectionInput

func (AppAuthorizationConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppAuthorizationConnection)(nil)).Elem()
}

func (i AppAuthorizationConnectionMap) ToAppAuthorizationConnectionMapOutput() AppAuthorizationConnectionMapOutput {
	return i.ToAppAuthorizationConnectionMapOutputWithContext(context.Background())
}

func (i AppAuthorizationConnectionMap) ToAppAuthorizationConnectionMapOutputWithContext(ctx context.Context) AppAuthorizationConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAuthorizationConnectionMapOutput)
}

type AppAuthorizationConnectionOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAuthorizationConnection)(nil)).Elem()
}

func (o AppAuthorizationConnectionOutput) ToAppAuthorizationConnectionOutput() AppAuthorizationConnectionOutput {
	return o
}

func (o AppAuthorizationConnectionOutput) ToAppAuthorizationConnectionOutputWithContext(ctx context.Context) AppAuthorizationConnectionOutput {
	return o
}

// The name of the application.
func (o AppAuthorizationConnectionOutput) App() pulumi.StringOutput {
	return o.ApplyT(func(v *AppAuthorizationConnection) pulumi.StringOutput { return v.App }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.
func (o AppAuthorizationConnectionOutput) AppAuthorizationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AppAuthorizationConnection) pulumi.StringOutput { return v.AppAuthorizationArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the app bundle to use for the request.
func (o AppAuthorizationConnectionOutput) AppBundleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AppAuthorizationConnection) pulumi.StringOutput { return v.AppBundleArn }).(pulumi.StringOutput)
}

// Contains OAuth2 authorization information.This is required if the app authorization for the request is configured with an OAuth2 (oauth2) authorization type.
func (o AppAuthorizationConnectionOutput) AuthRequest() AppAuthorizationConnectionAuthRequestPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationConnection) AppAuthorizationConnectionAuthRequestPtrOutput {
		return v.AuthRequest
	}).(AppAuthorizationConnectionAuthRequestPtrOutput)
}

// Contains information about an application tenant, such as the application display name and identifier.
func (o AppAuthorizationConnectionOutput) Tenants() AppAuthorizationConnectionTenantArrayOutput {
	return o.ApplyT(func(v *AppAuthorizationConnection) AppAuthorizationConnectionTenantArrayOutput { return v.Tenants }).(AppAuthorizationConnectionTenantArrayOutput)
}

func (o AppAuthorizationConnectionOutput) Timeouts() AppAuthorizationConnectionTimeoutsPtrOutput {
	return o.ApplyT(func(v *AppAuthorizationConnection) AppAuthorizationConnectionTimeoutsPtrOutput { return v.Timeouts }).(AppAuthorizationConnectionTimeoutsPtrOutput)
}

type AppAuthorizationConnectionArrayOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppAuthorizationConnection)(nil)).Elem()
}

func (o AppAuthorizationConnectionArrayOutput) ToAppAuthorizationConnectionArrayOutput() AppAuthorizationConnectionArrayOutput {
	return o
}

func (o AppAuthorizationConnectionArrayOutput) ToAppAuthorizationConnectionArrayOutputWithContext(ctx context.Context) AppAuthorizationConnectionArrayOutput {
	return o
}

func (o AppAuthorizationConnectionArrayOutput) Index(i pulumi.IntInput) AppAuthorizationConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppAuthorizationConnection {
		return vs[0].([]*AppAuthorizationConnection)[vs[1].(int)]
	}).(AppAuthorizationConnectionOutput)
}

type AppAuthorizationConnectionMapOutput struct{ *pulumi.OutputState }

func (AppAuthorizationConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppAuthorizationConnection)(nil)).Elem()
}

func (o AppAuthorizationConnectionMapOutput) ToAppAuthorizationConnectionMapOutput() AppAuthorizationConnectionMapOutput {
	return o
}

func (o AppAuthorizationConnectionMapOutput) ToAppAuthorizationConnectionMapOutputWithContext(ctx context.Context) AppAuthorizationConnectionMapOutput {
	return o
}

func (o AppAuthorizationConnectionMapOutput) MapIndex(k pulumi.StringInput) AppAuthorizationConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppAuthorizationConnection {
		return vs[0].(map[string]*AppAuthorizationConnection)[vs[1].(string)]
	}).(AppAuthorizationConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionInput)(nil)).Elem(), &AppAuthorizationConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionArrayInput)(nil)).Elem(), AppAuthorizationConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAuthorizationConnectionMapInput)(nil)).Elem(), AppAuthorizationConnectionMap{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionOutput{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionArrayOutput{})
	pulumi.RegisterOutputType(AppAuthorizationConnectionMapOutput{})
}
