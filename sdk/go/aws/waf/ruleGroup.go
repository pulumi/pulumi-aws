// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a WAF Rule Group Resource
type RuleGroup struct {
	s *pulumi.ResourceState
}

// NewRuleGroup registers a new resource with the given unique name, arguments, and options.
func NewRuleGroup(ctx *pulumi.Context,
	name string, args *RuleGroupArgs, opts ...pulumi.ResourceOpt) (*RuleGroup, error) {
	if args == nil || args.MetricName == nil {
		return nil, errors.New("missing required argument 'MetricName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["activatedRules"] = nil
		inputs["metricName"] = nil
		inputs["name"] = nil
	} else {
		inputs["activatedRules"] = args.ActivatedRules
		inputs["metricName"] = args.MetricName
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("aws:waf/ruleGroup:RuleGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RuleGroup{s: s}, nil
}

// GetRuleGroup gets an existing RuleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RuleGroupState, opts ...pulumi.ResourceOpt) (*RuleGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["activatedRules"] = state.ActivatedRules
		inputs["metricName"] = state.MetricName
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("aws:waf/ruleGroup:RuleGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RuleGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RuleGroup) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RuleGroup) ID() *pulumi.IDOutput {
	return r.s.ID
}

// A list of activated rules, see below
func (r *RuleGroup) ActivatedRules() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["activatedRules"])
}

// A friendly name for the metrics from the rule group
func (r *RuleGroup) MetricName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["metricName"])
}

// A friendly name of the rule group
func (r *RuleGroup) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering RuleGroup resources.
type RuleGroupState struct {
	// A list of activated rules, see below
	ActivatedRules interface{}
	// A friendly name for the metrics from the rule group
	MetricName interface{}
	// A friendly name of the rule group
	Name interface{}
}

// The set of arguments for constructing a RuleGroup resource.
type RuleGroupArgs struct {
	// A list of activated rules, see below
	ActivatedRules interface{}
	// A friendly name for the metrics from the rule group
	MetricName interface{}
	// A friendly name of the rule group
	Name interface{}
}
