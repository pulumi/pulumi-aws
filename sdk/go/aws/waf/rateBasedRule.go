// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a WAF Rate Based Rule Resource
type RateBasedRule struct {
	s *pulumi.ResourceState
}

// NewRateBasedRule registers a new resource with the given unique name, arguments, and options.
func NewRateBasedRule(ctx *pulumi.Context,
	name string, args *RateBasedRuleArgs, opts ...pulumi.ResourceOpt) (*RateBasedRule, error) {
	if args == nil || args.MetricName == nil {
		return nil, errors.New("missing required argument 'MetricName'")
	}
	if args == nil || args.RateKey == nil {
		return nil, errors.New("missing required argument 'RateKey'")
	}
	if args == nil || args.RateLimit == nil {
		return nil, errors.New("missing required argument 'RateLimit'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["metricName"] = nil
		inputs["name"] = nil
		inputs["predicates"] = nil
		inputs["rateKey"] = nil
		inputs["rateLimit"] = nil
	} else {
		inputs["metricName"] = args.MetricName
		inputs["name"] = args.Name
		inputs["predicates"] = args.Predicates
		inputs["rateKey"] = args.RateKey
		inputs["rateLimit"] = args.RateLimit
	}
	s, err := ctx.RegisterResource("aws:waf/rateBasedRule:RateBasedRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RateBasedRule{s: s}, nil
}

// GetRateBasedRule gets an existing RateBasedRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRateBasedRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RateBasedRuleState, opts ...pulumi.ResourceOpt) (*RateBasedRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["metricName"] = state.MetricName
		inputs["name"] = state.Name
		inputs["predicates"] = state.Predicates
		inputs["rateKey"] = state.RateKey
		inputs["rateLimit"] = state.RateLimit
	}
	s, err := ctx.ReadResource("aws:waf/rateBasedRule:RateBasedRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RateBasedRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RateBasedRule) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RateBasedRule) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The name or description for the Amazon CloudWatch metric of this rule.
func (r *RateBasedRule) MetricName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["metricName"])
}

// The name or description of the rule.
func (r *RateBasedRule) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// One of ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or XssMatchSet objects to include in a rule.
func (r *RateBasedRule) Predicates() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["predicates"])
}

// Valid value is IP.
func (r *RateBasedRule) RateKey() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["rateKey"])
}

// The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 2000.
func (r *RateBasedRule) RateLimit() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["rateLimit"])
}

// Input properties used for looking up and filtering RateBasedRule resources.
type RateBasedRuleState struct {
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName interface{}
	// The name or description of the rule.
	Name interface{}
	// One of ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or XssMatchSet objects to include in a rule.
	Predicates interface{}
	// Valid value is IP.
	RateKey interface{}
	// The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 2000.
	RateLimit interface{}
}

// The set of arguments for constructing a RateBasedRule resource.
type RateBasedRuleArgs struct {
	// The name or description for the Amazon CloudWatch metric of this rule.
	MetricName interface{}
	// The name or description of the rule.
	Name interface{}
	// One of ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or XssMatchSet objects to include in a rule.
	Predicates interface{}
	// Valid value is IP.
	RateKey interface{}
	// The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 2000.
	RateLimit interface{}
}
