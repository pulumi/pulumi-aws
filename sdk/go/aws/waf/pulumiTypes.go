// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ByteMatchSetByteMatchTuple struct {
	// The part of a web request that you want to search, such as a specified header or a query string.
	FieldToMatch ByteMatchSetByteMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// Within the portion of a web request that you want to search
	// (for example, in the query string, if any), specify where you want to search.
	// e.g., `CONTAINS`, `CONTAINS_WORD` or `EXACTLY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-PositionalConstraint)
	// for all supported values.
	PositionalConstraint string `pulumi:"positionalConstraint"`
	// The value that you want to search for within the field specified by `fieldToMatch`, e.g., `badrefer1`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_ByteMatchTuple.html)
	// for all supported values.
	TargetString *string `pulumi:"targetString"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `targetString` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation string `pulumi:"textTransformation"`
}

// ByteMatchSetByteMatchTupleInput is an input type that accepts ByteMatchSetByteMatchTupleArgs and ByteMatchSetByteMatchTupleOutput values.
// You can construct a concrete instance of `ByteMatchSetByteMatchTupleInput` via:
//
//	ByteMatchSetByteMatchTupleArgs{...}
type ByteMatchSetByteMatchTupleInput interface {
	pulumi.Input

	ToByteMatchSetByteMatchTupleOutput() ByteMatchSetByteMatchTupleOutput
	ToByteMatchSetByteMatchTupleOutputWithContext(context.Context) ByteMatchSetByteMatchTupleOutput
}

type ByteMatchSetByteMatchTupleArgs struct {
	// The part of a web request that you want to search, such as a specified header or a query string.
	FieldToMatch ByteMatchSetByteMatchTupleFieldToMatchInput `pulumi:"fieldToMatch"`
	// Within the portion of a web request that you want to search
	// (for example, in the query string, if any), specify where you want to search.
	// e.g., `CONTAINS`, `CONTAINS_WORD` or `EXACTLY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-PositionalConstraint)
	// for all supported values.
	PositionalConstraint pulumi.StringInput `pulumi:"positionalConstraint"`
	// The value that you want to search for within the field specified by `fieldToMatch`, e.g., `badrefer1`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_ByteMatchTuple.html)
	// for all supported values.
	TargetString pulumi.StringPtrInput `pulumi:"targetString"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `targetString` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation pulumi.StringInput `pulumi:"textTransformation"`
}

func (ByteMatchSetByteMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTuple)(nil)).Elem()
}

func (i ByteMatchSetByteMatchTupleArgs) ToByteMatchSetByteMatchTupleOutput() ByteMatchSetByteMatchTupleOutput {
	return i.ToByteMatchSetByteMatchTupleOutputWithContext(context.Background())
}

func (i ByteMatchSetByteMatchTupleArgs) ToByteMatchSetByteMatchTupleOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByteMatchSetByteMatchTupleOutput)
}

func (i ByteMatchSetByteMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[ByteMatchSetByteMatchTuple] {
	return pulumix.Output[ByteMatchSetByteMatchTuple]{
		OutputState: i.ToByteMatchSetByteMatchTupleOutputWithContext(ctx).OutputState,
	}
}

// ByteMatchSetByteMatchTupleArrayInput is an input type that accepts ByteMatchSetByteMatchTupleArray and ByteMatchSetByteMatchTupleArrayOutput values.
// You can construct a concrete instance of `ByteMatchSetByteMatchTupleArrayInput` via:
//
//	ByteMatchSetByteMatchTupleArray{ ByteMatchSetByteMatchTupleArgs{...} }
type ByteMatchSetByteMatchTupleArrayInput interface {
	pulumi.Input

	ToByteMatchSetByteMatchTupleArrayOutput() ByteMatchSetByteMatchTupleArrayOutput
	ToByteMatchSetByteMatchTupleArrayOutputWithContext(context.Context) ByteMatchSetByteMatchTupleArrayOutput
}

type ByteMatchSetByteMatchTupleArray []ByteMatchSetByteMatchTupleInput

func (ByteMatchSetByteMatchTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ByteMatchSetByteMatchTuple)(nil)).Elem()
}

func (i ByteMatchSetByteMatchTupleArray) ToByteMatchSetByteMatchTupleArrayOutput() ByteMatchSetByteMatchTupleArrayOutput {
	return i.ToByteMatchSetByteMatchTupleArrayOutputWithContext(context.Background())
}

func (i ByteMatchSetByteMatchTupleArray) ToByteMatchSetByteMatchTupleArrayOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByteMatchSetByteMatchTupleArrayOutput)
}

func (i ByteMatchSetByteMatchTupleArray) ToOutput(ctx context.Context) pulumix.Output[[]ByteMatchSetByteMatchTuple] {
	return pulumix.Output[[]ByteMatchSetByteMatchTuple]{
		OutputState: i.ToByteMatchSetByteMatchTupleArrayOutputWithContext(ctx).OutputState,
	}
}

type ByteMatchSetByteMatchTupleOutput struct{ *pulumi.OutputState }

func (ByteMatchSetByteMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTuple)(nil)).Elem()
}

func (o ByteMatchSetByteMatchTupleOutput) ToByteMatchSetByteMatchTupleOutput() ByteMatchSetByteMatchTupleOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleOutput) ToByteMatchSetByteMatchTupleOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[ByteMatchSetByteMatchTuple] {
	return pulumix.Output[ByteMatchSetByteMatchTuple]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want to search, such as a specified header or a query string.
func (o ByteMatchSetByteMatchTupleOutput) FieldToMatch() ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return o.ApplyT(func(v ByteMatchSetByteMatchTuple) ByteMatchSetByteMatchTupleFieldToMatch { return v.FieldToMatch }).(ByteMatchSetByteMatchTupleFieldToMatchOutput)
}

// Within the portion of a web request that you want to search
// (for example, in the query string, if any), specify where you want to search.
// e.g., `CONTAINS`, `CONTAINS_WORD` or `EXACTLY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-PositionalConstraint)
// for all supported values.
func (o ByteMatchSetByteMatchTupleOutput) PositionalConstraint() pulumi.StringOutput {
	return o.ApplyT(func(v ByteMatchSetByteMatchTuple) string { return v.PositionalConstraint }).(pulumi.StringOutput)
}

// The value that you want to search for within the field specified by `fieldToMatch`, e.g., `badrefer1`.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_waf_ByteMatchTuple.html)
// for all supported values.
func (o ByteMatchSetByteMatchTupleOutput) TargetString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ByteMatchSetByteMatchTuple) *string { return v.TargetString }).(pulumi.StringPtrOutput)
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// If you specify a transformation, AWS WAF performs the transformation on `targetString` before inspecting a request for a match.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
// for all supported values.
func (o ByteMatchSetByteMatchTupleOutput) TextTransformation() pulumi.StringOutput {
	return o.ApplyT(func(v ByteMatchSetByteMatchTuple) string { return v.TextTransformation }).(pulumi.StringOutput)
}

type ByteMatchSetByteMatchTupleArrayOutput struct{ *pulumi.OutputState }

func (ByteMatchSetByteMatchTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ByteMatchSetByteMatchTuple)(nil)).Elem()
}

func (o ByteMatchSetByteMatchTupleArrayOutput) ToByteMatchSetByteMatchTupleArrayOutput() ByteMatchSetByteMatchTupleArrayOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleArrayOutput) ToByteMatchSetByteMatchTupleArrayOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleArrayOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ByteMatchSetByteMatchTuple] {
	return pulumix.Output[[]ByteMatchSetByteMatchTuple]{
		OutputState: o.OutputState,
	}
}

func (o ByteMatchSetByteMatchTupleArrayOutput) Index(i pulumi.IntInput) ByteMatchSetByteMatchTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ByteMatchSetByteMatchTuple {
		return vs[0].([]ByteMatchSetByteMatchTuple)[vs[1].(int)]
	}).(ByteMatchSetByteMatchTupleOutput)
}

type ByteMatchSetByteMatchTupleFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

// ByteMatchSetByteMatchTupleFieldToMatchInput is an input type that accepts ByteMatchSetByteMatchTupleFieldToMatchArgs and ByteMatchSetByteMatchTupleFieldToMatchOutput values.
// You can construct a concrete instance of `ByteMatchSetByteMatchTupleFieldToMatchInput` via:
//
//	ByteMatchSetByteMatchTupleFieldToMatchArgs{...}
type ByteMatchSetByteMatchTupleFieldToMatchInput interface {
	pulumi.Input

	ToByteMatchSetByteMatchTupleFieldToMatchOutput() ByteMatchSetByteMatchTupleFieldToMatchOutput
	ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(context.Context) ByteMatchSetByteMatchTupleFieldToMatchOutput
}

type ByteMatchSetByteMatchTupleFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ByteMatchSetByteMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTupleFieldToMatch)(nil)).Elem()
}

func (i ByteMatchSetByteMatchTupleFieldToMatchArgs) ToByteMatchSetByteMatchTupleFieldToMatchOutput() ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return i.ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i ByteMatchSetByteMatchTupleFieldToMatchArgs) ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByteMatchSetByteMatchTupleFieldToMatchOutput)
}

func (i ByteMatchSetByteMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[ByteMatchSetByteMatchTupleFieldToMatch] {
	return pulumix.Output[ByteMatchSetByteMatchTupleFieldToMatch]{
		OutputState: i.ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(ctx).OutputState,
	}
}

type ByteMatchSetByteMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (ByteMatchSetByteMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByteMatchSetByteMatchTupleFieldToMatch)(nil)).Elem()
}

func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) ToByteMatchSetByteMatchTupleFieldToMatchOutput() ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) ToByteMatchSetByteMatchTupleFieldToMatchOutputWithContext(ctx context.Context) ByteMatchSetByteMatchTupleFieldToMatchOutput {
	return o
}

func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[ByteMatchSetByteMatchTupleFieldToMatch] {
	return pulumix.Output[ByteMatchSetByteMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ByteMatchSetByteMatchTupleFieldToMatch) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
// for all supported values.
func (o ByteMatchSetByteMatchTupleFieldToMatchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ByteMatchSetByteMatchTupleFieldToMatch) string { return v.Type }).(pulumi.StringOutput)
}

type GeoMatchSetGeoMatchConstraint struct {
	// The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
	Type string `pulumi:"type"`
	// The country that you want AWS WAF to search for.
	// This is the two-letter country code, e.g., `US`, `CA`, `RU`, `CN`, etc.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
	Value string `pulumi:"value"`
}

// GeoMatchSetGeoMatchConstraintInput is an input type that accepts GeoMatchSetGeoMatchConstraintArgs and GeoMatchSetGeoMatchConstraintOutput values.
// You can construct a concrete instance of `GeoMatchSetGeoMatchConstraintInput` via:
//
//	GeoMatchSetGeoMatchConstraintArgs{...}
type GeoMatchSetGeoMatchConstraintInput interface {
	pulumi.Input

	ToGeoMatchSetGeoMatchConstraintOutput() GeoMatchSetGeoMatchConstraintOutput
	ToGeoMatchSetGeoMatchConstraintOutputWithContext(context.Context) GeoMatchSetGeoMatchConstraintOutput
}

type GeoMatchSetGeoMatchConstraintArgs struct {
	// The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
	Type pulumi.StringInput `pulumi:"type"`
	// The country that you want AWS WAF to search for.
	// This is the two-letter country code, e.g., `US`, `CA`, `RU`, `CN`, etc.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GeoMatchSetGeoMatchConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoMatchSetGeoMatchConstraint)(nil)).Elem()
}

func (i GeoMatchSetGeoMatchConstraintArgs) ToGeoMatchSetGeoMatchConstraintOutput() GeoMatchSetGeoMatchConstraintOutput {
	return i.ToGeoMatchSetGeoMatchConstraintOutputWithContext(context.Background())
}

func (i GeoMatchSetGeoMatchConstraintArgs) ToGeoMatchSetGeoMatchConstraintOutputWithContext(ctx context.Context) GeoMatchSetGeoMatchConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoMatchSetGeoMatchConstraintOutput)
}

func (i GeoMatchSetGeoMatchConstraintArgs) ToOutput(ctx context.Context) pulumix.Output[GeoMatchSetGeoMatchConstraint] {
	return pulumix.Output[GeoMatchSetGeoMatchConstraint]{
		OutputState: i.ToGeoMatchSetGeoMatchConstraintOutputWithContext(ctx).OutputState,
	}
}

// GeoMatchSetGeoMatchConstraintArrayInput is an input type that accepts GeoMatchSetGeoMatchConstraintArray and GeoMatchSetGeoMatchConstraintArrayOutput values.
// You can construct a concrete instance of `GeoMatchSetGeoMatchConstraintArrayInput` via:
//
//	GeoMatchSetGeoMatchConstraintArray{ GeoMatchSetGeoMatchConstraintArgs{...} }
type GeoMatchSetGeoMatchConstraintArrayInput interface {
	pulumi.Input

	ToGeoMatchSetGeoMatchConstraintArrayOutput() GeoMatchSetGeoMatchConstraintArrayOutput
	ToGeoMatchSetGeoMatchConstraintArrayOutputWithContext(context.Context) GeoMatchSetGeoMatchConstraintArrayOutput
}

type GeoMatchSetGeoMatchConstraintArray []GeoMatchSetGeoMatchConstraintInput

func (GeoMatchSetGeoMatchConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoMatchSetGeoMatchConstraint)(nil)).Elem()
}

func (i GeoMatchSetGeoMatchConstraintArray) ToGeoMatchSetGeoMatchConstraintArrayOutput() GeoMatchSetGeoMatchConstraintArrayOutput {
	return i.ToGeoMatchSetGeoMatchConstraintArrayOutputWithContext(context.Background())
}

func (i GeoMatchSetGeoMatchConstraintArray) ToGeoMatchSetGeoMatchConstraintArrayOutputWithContext(ctx context.Context) GeoMatchSetGeoMatchConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GeoMatchSetGeoMatchConstraintArrayOutput)
}

func (i GeoMatchSetGeoMatchConstraintArray) ToOutput(ctx context.Context) pulumix.Output[[]GeoMatchSetGeoMatchConstraint] {
	return pulumix.Output[[]GeoMatchSetGeoMatchConstraint]{
		OutputState: i.ToGeoMatchSetGeoMatchConstraintArrayOutputWithContext(ctx).OutputState,
	}
}

type GeoMatchSetGeoMatchConstraintOutput struct{ *pulumi.OutputState }

func (GeoMatchSetGeoMatchConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeoMatchSetGeoMatchConstraint)(nil)).Elem()
}

func (o GeoMatchSetGeoMatchConstraintOutput) ToGeoMatchSetGeoMatchConstraintOutput() GeoMatchSetGeoMatchConstraintOutput {
	return o
}

func (o GeoMatchSetGeoMatchConstraintOutput) ToGeoMatchSetGeoMatchConstraintOutputWithContext(ctx context.Context) GeoMatchSetGeoMatchConstraintOutput {
	return o
}

func (o GeoMatchSetGeoMatchConstraintOutput) ToOutput(ctx context.Context) pulumix.Output[GeoMatchSetGeoMatchConstraint] {
	return pulumix.Output[GeoMatchSetGeoMatchConstraint]{
		OutputState: o.OutputState,
	}
}

// The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
func (o GeoMatchSetGeoMatchConstraintOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GeoMatchSetGeoMatchConstraint) string { return v.Type }).(pulumi.StringOutput)
}

// The country that you want AWS WAF to search for.
// This is the two-letter country code, e.g., `US`, `CA`, `RU`, `CN`, etc.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
func (o GeoMatchSetGeoMatchConstraintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GeoMatchSetGeoMatchConstraint) string { return v.Value }).(pulumi.StringOutput)
}

type GeoMatchSetGeoMatchConstraintArrayOutput struct{ *pulumi.OutputState }

func (GeoMatchSetGeoMatchConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GeoMatchSetGeoMatchConstraint)(nil)).Elem()
}

func (o GeoMatchSetGeoMatchConstraintArrayOutput) ToGeoMatchSetGeoMatchConstraintArrayOutput() GeoMatchSetGeoMatchConstraintArrayOutput {
	return o
}

func (o GeoMatchSetGeoMatchConstraintArrayOutput) ToGeoMatchSetGeoMatchConstraintArrayOutputWithContext(ctx context.Context) GeoMatchSetGeoMatchConstraintArrayOutput {
	return o
}

func (o GeoMatchSetGeoMatchConstraintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GeoMatchSetGeoMatchConstraint] {
	return pulumix.Output[[]GeoMatchSetGeoMatchConstraint]{
		OutputState: o.OutputState,
	}
}

func (o GeoMatchSetGeoMatchConstraintArrayOutput) Index(i pulumi.IntInput) GeoMatchSetGeoMatchConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GeoMatchSetGeoMatchConstraint {
		return vs[0].([]GeoMatchSetGeoMatchConstraint)[vs[1].(int)]
	}).(GeoMatchSetGeoMatchConstraintOutput)
}

type IpSetIpSetDescriptor struct {
	// Type of the IP address - `IPV4` or `IPV6`.
	Type string `pulumi:"type"`
	// An IPv4 or IPv6 address specified via CIDR notationE.g., `192.0.2.44/32` or `1111:0000:0000:0000:0000:0000:0000:0000/64`
	Value string `pulumi:"value"`
}

// IpSetIpSetDescriptorInput is an input type that accepts IpSetIpSetDescriptorArgs and IpSetIpSetDescriptorOutput values.
// You can construct a concrete instance of `IpSetIpSetDescriptorInput` via:
//
//	IpSetIpSetDescriptorArgs{...}
type IpSetIpSetDescriptorInput interface {
	pulumi.Input

	ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput
	ToIpSetIpSetDescriptorOutputWithContext(context.Context) IpSetIpSetDescriptorOutput
}

type IpSetIpSetDescriptorArgs struct {
	// Type of the IP address - `IPV4` or `IPV6`.
	Type pulumi.StringInput `pulumi:"type"`
	// An IPv4 or IPv6 address specified via CIDR notationE.g., `192.0.2.44/32` or `1111:0000:0000:0000:0000:0000:0000:0000/64`
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpSetIpSetDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpSetDescriptor)(nil)).Elem()
}

func (i IpSetIpSetDescriptorArgs) ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput {
	return i.ToIpSetIpSetDescriptorOutputWithContext(context.Background())
}

func (i IpSetIpSetDescriptorArgs) ToIpSetIpSetDescriptorOutputWithContext(ctx context.Context) IpSetIpSetDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetIpSetDescriptorOutput)
}

func (i IpSetIpSetDescriptorArgs) ToOutput(ctx context.Context) pulumix.Output[IpSetIpSetDescriptor] {
	return pulumix.Output[IpSetIpSetDescriptor]{
		OutputState: i.ToIpSetIpSetDescriptorOutputWithContext(ctx).OutputState,
	}
}

// IpSetIpSetDescriptorArrayInput is an input type that accepts IpSetIpSetDescriptorArray and IpSetIpSetDescriptorArrayOutput values.
// You can construct a concrete instance of `IpSetIpSetDescriptorArrayInput` via:
//
//	IpSetIpSetDescriptorArray{ IpSetIpSetDescriptorArgs{...} }
type IpSetIpSetDescriptorArrayInput interface {
	pulumi.Input

	ToIpSetIpSetDescriptorArrayOutput() IpSetIpSetDescriptorArrayOutput
	ToIpSetIpSetDescriptorArrayOutputWithContext(context.Context) IpSetIpSetDescriptorArrayOutput
}

type IpSetIpSetDescriptorArray []IpSetIpSetDescriptorInput

func (IpSetIpSetDescriptorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetIpSetDescriptor)(nil)).Elem()
}

func (i IpSetIpSetDescriptorArray) ToIpSetIpSetDescriptorArrayOutput() IpSetIpSetDescriptorArrayOutput {
	return i.ToIpSetIpSetDescriptorArrayOutputWithContext(context.Background())
}

func (i IpSetIpSetDescriptorArray) ToIpSetIpSetDescriptorArrayOutputWithContext(ctx context.Context) IpSetIpSetDescriptorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetIpSetDescriptorArrayOutput)
}

func (i IpSetIpSetDescriptorArray) ToOutput(ctx context.Context) pulumix.Output[[]IpSetIpSetDescriptor] {
	return pulumix.Output[[]IpSetIpSetDescriptor]{
		OutputState: i.ToIpSetIpSetDescriptorArrayOutputWithContext(ctx).OutputState,
	}
}

type IpSetIpSetDescriptorOutput struct{ *pulumi.OutputState }

func (IpSetIpSetDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpSetDescriptor)(nil)).Elem()
}

func (o IpSetIpSetDescriptorOutput) ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput {
	return o
}

func (o IpSetIpSetDescriptorOutput) ToIpSetIpSetDescriptorOutputWithContext(ctx context.Context) IpSetIpSetDescriptorOutput {
	return o
}

func (o IpSetIpSetDescriptorOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetIpSetDescriptor] {
	return pulumix.Output[IpSetIpSetDescriptor]{
		OutputState: o.OutputState,
	}
}

// Type of the IP address - `IPV4` or `IPV6`.
func (o IpSetIpSetDescriptorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetIpSetDescriptor) string { return v.Type }).(pulumi.StringOutput)
}

// An IPv4 or IPv6 address specified via CIDR notationE.g., `192.0.2.44/32` or `1111:0000:0000:0000:0000:0000:0000:0000/64`
func (o IpSetIpSetDescriptorOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpSetIpSetDescriptor) string { return v.Value }).(pulumi.StringOutput)
}

type IpSetIpSetDescriptorArrayOutput struct{ *pulumi.OutputState }

func (IpSetIpSetDescriptorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetIpSetDescriptor)(nil)).Elem()
}

func (o IpSetIpSetDescriptorArrayOutput) ToIpSetIpSetDescriptorArrayOutput() IpSetIpSetDescriptorArrayOutput {
	return o
}

func (o IpSetIpSetDescriptorArrayOutput) ToIpSetIpSetDescriptorArrayOutputWithContext(ctx context.Context) IpSetIpSetDescriptorArrayOutput {
	return o
}

func (o IpSetIpSetDescriptorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IpSetIpSetDescriptor] {
	return pulumix.Output[[]IpSetIpSetDescriptor]{
		OutputState: o.OutputState,
	}
}

func (o IpSetIpSetDescriptorArrayOutput) Index(i pulumi.IntInput) IpSetIpSetDescriptorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSetIpSetDescriptor {
		return vs[0].([]IpSetIpSetDescriptor)[vs[1].(int)]
	}).(IpSetIpSetDescriptorOutput)
}

type RateBasedRulePredicate struct {
	// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
	DataId string `pulumi:"dataId"`
	// Set this to `false` if you want to allow, block, or count requests
	// based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
	// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
	// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
	Negated bool `pulumi:"negated"`
	// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
	Type string `pulumi:"type"`
}

// RateBasedRulePredicateInput is an input type that accepts RateBasedRulePredicateArgs and RateBasedRulePredicateOutput values.
// You can construct a concrete instance of `RateBasedRulePredicateInput` via:
//
//	RateBasedRulePredicateArgs{...}
type RateBasedRulePredicateInput interface {
	pulumi.Input

	ToRateBasedRulePredicateOutput() RateBasedRulePredicateOutput
	ToRateBasedRulePredicateOutputWithContext(context.Context) RateBasedRulePredicateOutput
}

type RateBasedRulePredicateArgs struct {
	// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
	DataId pulumi.StringInput `pulumi:"dataId"`
	// Set this to `false` if you want to allow, block, or count requests
	// based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
	// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
	// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
	Negated pulumi.BoolInput `pulumi:"negated"`
	// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RateBasedRulePredicateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateBasedRulePredicate)(nil)).Elem()
}

func (i RateBasedRulePredicateArgs) ToRateBasedRulePredicateOutput() RateBasedRulePredicateOutput {
	return i.ToRateBasedRulePredicateOutputWithContext(context.Background())
}

func (i RateBasedRulePredicateArgs) ToRateBasedRulePredicateOutputWithContext(ctx context.Context) RateBasedRulePredicateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateBasedRulePredicateOutput)
}

func (i RateBasedRulePredicateArgs) ToOutput(ctx context.Context) pulumix.Output[RateBasedRulePredicate] {
	return pulumix.Output[RateBasedRulePredicate]{
		OutputState: i.ToRateBasedRulePredicateOutputWithContext(ctx).OutputState,
	}
}

// RateBasedRulePredicateArrayInput is an input type that accepts RateBasedRulePredicateArray and RateBasedRulePredicateArrayOutput values.
// You can construct a concrete instance of `RateBasedRulePredicateArrayInput` via:
//
//	RateBasedRulePredicateArray{ RateBasedRulePredicateArgs{...} }
type RateBasedRulePredicateArrayInput interface {
	pulumi.Input

	ToRateBasedRulePredicateArrayOutput() RateBasedRulePredicateArrayOutput
	ToRateBasedRulePredicateArrayOutputWithContext(context.Context) RateBasedRulePredicateArrayOutput
}

type RateBasedRulePredicateArray []RateBasedRulePredicateInput

func (RateBasedRulePredicateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateBasedRulePredicate)(nil)).Elem()
}

func (i RateBasedRulePredicateArray) ToRateBasedRulePredicateArrayOutput() RateBasedRulePredicateArrayOutput {
	return i.ToRateBasedRulePredicateArrayOutputWithContext(context.Background())
}

func (i RateBasedRulePredicateArray) ToRateBasedRulePredicateArrayOutputWithContext(ctx context.Context) RateBasedRulePredicateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateBasedRulePredicateArrayOutput)
}

func (i RateBasedRulePredicateArray) ToOutput(ctx context.Context) pulumix.Output[[]RateBasedRulePredicate] {
	return pulumix.Output[[]RateBasedRulePredicate]{
		OutputState: i.ToRateBasedRulePredicateArrayOutputWithContext(ctx).OutputState,
	}
}

type RateBasedRulePredicateOutput struct{ *pulumi.OutputState }

func (RateBasedRulePredicateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateBasedRulePredicate)(nil)).Elem()
}

func (o RateBasedRulePredicateOutput) ToRateBasedRulePredicateOutput() RateBasedRulePredicateOutput {
	return o
}

func (o RateBasedRulePredicateOutput) ToRateBasedRulePredicateOutputWithContext(ctx context.Context) RateBasedRulePredicateOutput {
	return o
}

func (o RateBasedRulePredicateOutput) ToOutput(ctx context.Context) pulumix.Output[RateBasedRulePredicate] {
	return pulumix.Output[RateBasedRulePredicate]{
		OutputState: o.OutputState,
	}
}

// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
func (o RateBasedRulePredicateOutput) DataId() pulumi.StringOutput {
	return o.ApplyT(func(v RateBasedRulePredicate) string { return v.DataId }).(pulumi.StringOutput)
}

// Set this to `false` if you want to allow, block, or count requests
// based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
func (o RateBasedRulePredicateOutput) Negated() pulumi.BoolOutput {
	return o.ApplyT(func(v RateBasedRulePredicate) bool { return v.Negated }).(pulumi.BoolOutput)
}

// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
func (o RateBasedRulePredicateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RateBasedRulePredicate) string { return v.Type }).(pulumi.StringOutput)
}

type RateBasedRulePredicateArrayOutput struct{ *pulumi.OutputState }

func (RateBasedRulePredicateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RateBasedRulePredicate)(nil)).Elem()
}

func (o RateBasedRulePredicateArrayOutput) ToRateBasedRulePredicateArrayOutput() RateBasedRulePredicateArrayOutput {
	return o
}

func (o RateBasedRulePredicateArrayOutput) ToRateBasedRulePredicateArrayOutputWithContext(ctx context.Context) RateBasedRulePredicateArrayOutput {
	return o
}

func (o RateBasedRulePredicateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RateBasedRulePredicate] {
	return pulumix.Output[[]RateBasedRulePredicate]{
		OutputState: o.OutputState,
	}
}

func (o RateBasedRulePredicateArrayOutput) Index(i pulumi.IntInput) RateBasedRulePredicateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RateBasedRulePredicate {
		return vs[0].([]RateBasedRulePredicate)[vs[1].(int)]
	}).(RateBasedRulePredicateOutput)
}

type RegexMatchSetRegexMatchTuple struct {
	// The part of a web request that you want to search, such as a specified header or a query string.
	FieldToMatch RegexMatchSetRegexMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// The ID of a Regex Pattern Set.
	RegexPatternSetId string `pulumi:"regexPatternSetId"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation string `pulumi:"textTransformation"`
}

// RegexMatchSetRegexMatchTupleInput is an input type that accepts RegexMatchSetRegexMatchTupleArgs and RegexMatchSetRegexMatchTupleOutput values.
// You can construct a concrete instance of `RegexMatchSetRegexMatchTupleInput` via:
//
//	RegexMatchSetRegexMatchTupleArgs{...}
type RegexMatchSetRegexMatchTupleInput interface {
	pulumi.Input

	ToRegexMatchSetRegexMatchTupleOutput() RegexMatchSetRegexMatchTupleOutput
	ToRegexMatchSetRegexMatchTupleOutputWithContext(context.Context) RegexMatchSetRegexMatchTupleOutput
}

type RegexMatchSetRegexMatchTupleArgs struct {
	// The part of a web request that you want to search, such as a specified header or a query string.
	FieldToMatch RegexMatchSetRegexMatchTupleFieldToMatchInput `pulumi:"fieldToMatch"`
	// The ID of a Regex Pattern Set.
	RegexPatternSetId pulumi.StringInput `pulumi:"regexPatternSetId"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation pulumi.StringInput `pulumi:"textTransformation"`
}

func (RegexMatchSetRegexMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTuple)(nil)).Elem()
}

func (i RegexMatchSetRegexMatchTupleArgs) ToRegexMatchSetRegexMatchTupleOutput() RegexMatchSetRegexMatchTupleOutput {
	return i.ToRegexMatchSetRegexMatchTupleOutputWithContext(context.Background())
}

func (i RegexMatchSetRegexMatchTupleArgs) ToRegexMatchSetRegexMatchTupleOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexMatchSetRegexMatchTupleOutput)
}

func (i RegexMatchSetRegexMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[RegexMatchSetRegexMatchTuple] {
	return pulumix.Output[RegexMatchSetRegexMatchTuple]{
		OutputState: i.ToRegexMatchSetRegexMatchTupleOutputWithContext(ctx).OutputState,
	}
}

// RegexMatchSetRegexMatchTupleArrayInput is an input type that accepts RegexMatchSetRegexMatchTupleArray and RegexMatchSetRegexMatchTupleArrayOutput values.
// You can construct a concrete instance of `RegexMatchSetRegexMatchTupleArrayInput` via:
//
//	RegexMatchSetRegexMatchTupleArray{ RegexMatchSetRegexMatchTupleArgs{...} }
type RegexMatchSetRegexMatchTupleArrayInput interface {
	pulumi.Input

	ToRegexMatchSetRegexMatchTupleArrayOutput() RegexMatchSetRegexMatchTupleArrayOutput
	ToRegexMatchSetRegexMatchTupleArrayOutputWithContext(context.Context) RegexMatchSetRegexMatchTupleArrayOutput
}

type RegexMatchSetRegexMatchTupleArray []RegexMatchSetRegexMatchTupleInput

func (RegexMatchSetRegexMatchTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegexMatchSetRegexMatchTuple)(nil)).Elem()
}

func (i RegexMatchSetRegexMatchTupleArray) ToRegexMatchSetRegexMatchTupleArrayOutput() RegexMatchSetRegexMatchTupleArrayOutput {
	return i.ToRegexMatchSetRegexMatchTupleArrayOutputWithContext(context.Background())
}

func (i RegexMatchSetRegexMatchTupleArray) ToRegexMatchSetRegexMatchTupleArrayOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexMatchSetRegexMatchTupleArrayOutput)
}

func (i RegexMatchSetRegexMatchTupleArray) ToOutput(ctx context.Context) pulumix.Output[[]RegexMatchSetRegexMatchTuple] {
	return pulumix.Output[[]RegexMatchSetRegexMatchTuple]{
		OutputState: i.ToRegexMatchSetRegexMatchTupleArrayOutputWithContext(ctx).OutputState,
	}
}

type RegexMatchSetRegexMatchTupleOutput struct{ *pulumi.OutputState }

func (RegexMatchSetRegexMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTuple)(nil)).Elem()
}

func (o RegexMatchSetRegexMatchTupleOutput) ToRegexMatchSetRegexMatchTupleOutput() RegexMatchSetRegexMatchTupleOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleOutput) ToRegexMatchSetRegexMatchTupleOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[RegexMatchSetRegexMatchTuple] {
	return pulumix.Output[RegexMatchSetRegexMatchTuple]{
		OutputState: o.OutputState,
	}
}

// The part of a web request that you want to search, such as a specified header or a query string.
func (o RegexMatchSetRegexMatchTupleOutput) FieldToMatch() RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return o.ApplyT(func(v RegexMatchSetRegexMatchTuple) RegexMatchSetRegexMatchTupleFieldToMatch { return v.FieldToMatch }).(RegexMatchSetRegexMatchTupleFieldToMatchOutput)
}

// The ID of a Regex Pattern Set.
func (o RegexMatchSetRegexMatchTupleOutput) RegexPatternSetId() pulumi.StringOutput {
	return o.ApplyT(func(v RegexMatchSetRegexMatchTuple) string { return v.RegexPatternSetId }).(pulumi.StringOutput)
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
// for all supported values.
func (o RegexMatchSetRegexMatchTupleOutput) TextTransformation() pulumi.StringOutput {
	return o.ApplyT(func(v RegexMatchSetRegexMatchTuple) string { return v.TextTransformation }).(pulumi.StringOutput)
}

type RegexMatchSetRegexMatchTupleArrayOutput struct{ *pulumi.OutputState }

func (RegexMatchSetRegexMatchTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegexMatchSetRegexMatchTuple)(nil)).Elem()
}

func (o RegexMatchSetRegexMatchTupleArrayOutput) ToRegexMatchSetRegexMatchTupleArrayOutput() RegexMatchSetRegexMatchTupleArrayOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleArrayOutput) ToRegexMatchSetRegexMatchTupleArrayOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleArrayOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RegexMatchSetRegexMatchTuple] {
	return pulumix.Output[[]RegexMatchSetRegexMatchTuple]{
		OutputState: o.OutputState,
	}
}

func (o RegexMatchSetRegexMatchTupleArrayOutput) Index(i pulumi.IntInput) RegexMatchSetRegexMatchTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegexMatchSetRegexMatchTuple {
		return vs[0].([]RegexMatchSetRegexMatchTuple)[vs[1].(int)]
	}).(RegexMatchSetRegexMatchTupleOutput)
}

type RegexMatchSetRegexMatchTupleFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

// RegexMatchSetRegexMatchTupleFieldToMatchInput is an input type that accepts RegexMatchSetRegexMatchTupleFieldToMatchArgs and RegexMatchSetRegexMatchTupleFieldToMatchOutput values.
// You can construct a concrete instance of `RegexMatchSetRegexMatchTupleFieldToMatchInput` via:
//
//	RegexMatchSetRegexMatchTupleFieldToMatchArgs{...}
type RegexMatchSetRegexMatchTupleFieldToMatchInput interface {
	pulumi.Input

	ToRegexMatchSetRegexMatchTupleFieldToMatchOutput() RegexMatchSetRegexMatchTupleFieldToMatchOutput
	ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(context.Context) RegexMatchSetRegexMatchTupleFieldToMatchOutput
}

type RegexMatchSetRegexMatchTupleFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegexMatchSetRegexMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTupleFieldToMatch)(nil)).Elem()
}

func (i RegexMatchSetRegexMatchTupleFieldToMatchArgs) ToRegexMatchSetRegexMatchTupleFieldToMatchOutput() RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return i.ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i RegexMatchSetRegexMatchTupleFieldToMatchArgs) ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexMatchSetRegexMatchTupleFieldToMatchOutput)
}

func (i RegexMatchSetRegexMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[RegexMatchSetRegexMatchTupleFieldToMatch] {
	return pulumix.Output[RegexMatchSetRegexMatchTupleFieldToMatch]{
		OutputState: i.ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(ctx).OutputState,
	}
}

type RegexMatchSetRegexMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (RegexMatchSetRegexMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexMatchSetRegexMatchTupleFieldToMatch)(nil)).Elem()
}

func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) ToRegexMatchSetRegexMatchTupleFieldToMatchOutput() RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) ToRegexMatchSetRegexMatchTupleFieldToMatchOutputWithContext(ctx context.Context) RegexMatchSetRegexMatchTupleFieldToMatchOutput {
	return o
}

func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[RegexMatchSetRegexMatchTupleFieldToMatch] {
	return pulumix.Output[RegexMatchSetRegexMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegexMatchSetRegexMatchTupleFieldToMatch) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
// for all supported values.
func (o RegexMatchSetRegexMatchTupleFieldToMatchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegexMatchSetRegexMatchTupleFieldToMatch) string { return v.Type }).(pulumi.StringOutput)
}

type RuleGroupActivatedRule struct {
	// Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
	Action RuleGroupActivatedRuleAction `pulumi:"action"`
	// Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// The ID of a rule
	RuleId string `pulumi:"ruleId"`
	// The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
	Type *string `pulumi:"type"`
}

// RuleGroupActivatedRuleInput is an input type that accepts RuleGroupActivatedRuleArgs and RuleGroupActivatedRuleOutput values.
// You can construct a concrete instance of `RuleGroupActivatedRuleInput` via:
//
//	RuleGroupActivatedRuleArgs{...}
type RuleGroupActivatedRuleInput interface {
	pulumi.Input

	ToRuleGroupActivatedRuleOutput() RuleGroupActivatedRuleOutput
	ToRuleGroupActivatedRuleOutputWithContext(context.Context) RuleGroupActivatedRuleOutput
}

type RuleGroupActivatedRuleArgs struct {
	// Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
	Action RuleGroupActivatedRuleActionInput `pulumi:"action"`
	// Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The ID of a rule
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RuleGroupActivatedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRule)(nil)).Elem()
}

func (i RuleGroupActivatedRuleArgs) ToRuleGroupActivatedRuleOutput() RuleGroupActivatedRuleOutput {
	return i.ToRuleGroupActivatedRuleOutputWithContext(context.Background())
}

func (i RuleGroupActivatedRuleArgs) ToRuleGroupActivatedRuleOutputWithContext(ctx context.Context) RuleGroupActivatedRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupActivatedRuleOutput)
}

func (i RuleGroupActivatedRuleArgs) ToOutput(ctx context.Context) pulumix.Output[RuleGroupActivatedRule] {
	return pulumix.Output[RuleGroupActivatedRule]{
		OutputState: i.ToRuleGroupActivatedRuleOutputWithContext(ctx).OutputState,
	}
}

// RuleGroupActivatedRuleArrayInput is an input type that accepts RuleGroupActivatedRuleArray and RuleGroupActivatedRuleArrayOutput values.
// You can construct a concrete instance of `RuleGroupActivatedRuleArrayInput` via:
//
//	RuleGroupActivatedRuleArray{ RuleGroupActivatedRuleArgs{...} }
type RuleGroupActivatedRuleArrayInput interface {
	pulumi.Input

	ToRuleGroupActivatedRuleArrayOutput() RuleGroupActivatedRuleArrayOutput
	ToRuleGroupActivatedRuleArrayOutputWithContext(context.Context) RuleGroupActivatedRuleArrayOutput
}

type RuleGroupActivatedRuleArray []RuleGroupActivatedRuleInput

func (RuleGroupActivatedRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupActivatedRule)(nil)).Elem()
}

func (i RuleGroupActivatedRuleArray) ToRuleGroupActivatedRuleArrayOutput() RuleGroupActivatedRuleArrayOutput {
	return i.ToRuleGroupActivatedRuleArrayOutputWithContext(context.Background())
}

func (i RuleGroupActivatedRuleArray) ToRuleGroupActivatedRuleArrayOutputWithContext(ctx context.Context) RuleGroupActivatedRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupActivatedRuleArrayOutput)
}

func (i RuleGroupActivatedRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]RuleGroupActivatedRule] {
	return pulumix.Output[[]RuleGroupActivatedRule]{
		OutputState: i.ToRuleGroupActivatedRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupActivatedRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupActivatedRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRule)(nil)).Elem()
}

func (o RuleGroupActivatedRuleOutput) ToRuleGroupActivatedRuleOutput() RuleGroupActivatedRuleOutput {
	return o
}

func (o RuleGroupActivatedRuleOutput) ToRuleGroupActivatedRuleOutputWithContext(ctx context.Context) RuleGroupActivatedRuleOutput {
	return o
}

func (o RuleGroupActivatedRuleOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupActivatedRule] {
	return pulumix.Output[RuleGroupActivatedRule]{
		OutputState: o.OutputState,
	}
}

// Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
func (o RuleGroupActivatedRuleOutput) Action() RuleGroupActivatedRuleActionOutput {
	return o.ApplyT(func(v RuleGroupActivatedRule) RuleGroupActivatedRuleAction { return v.Action }).(RuleGroupActivatedRuleActionOutput)
}

// Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
func (o RuleGroupActivatedRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RuleGroupActivatedRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The ID of a rule
func (o RuleGroupActivatedRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupActivatedRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
func (o RuleGroupActivatedRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupActivatedRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RuleGroupActivatedRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupActivatedRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupActivatedRule)(nil)).Elem()
}

func (o RuleGroupActivatedRuleArrayOutput) ToRuleGroupActivatedRuleArrayOutput() RuleGroupActivatedRuleArrayOutput {
	return o
}

func (o RuleGroupActivatedRuleArrayOutput) ToRuleGroupActivatedRuleArrayOutputWithContext(ctx context.Context) RuleGroupActivatedRuleArrayOutput {
	return o
}

func (o RuleGroupActivatedRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RuleGroupActivatedRule] {
	return pulumix.Output[[]RuleGroupActivatedRule]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupActivatedRuleArrayOutput) Index(i pulumi.IntInput) RuleGroupActivatedRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupActivatedRule {
		return vs[0].([]RuleGroupActivatedRule)[vs[1].(int)]
	}).(RuleGroupActivatedRuleOutput)
}

type RuleGroupActivatedRuleAction struct {
	// The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
	Type string `pulumi:"type"`
}

// RuleGroupActivatedRuleActionInput is an input type that accepts RuleGroupActivatedRuleActionArgs and RuleGroupActivatedRuleActionOutput values.
// You can construct a concrete instance of `RuleGroupActivatedRuleActionInput` via:
//
//	RuleGroupActivatedRuleActionArgs{...}
type RuleGroupActivatedRuleActionInput interface {
	pulumi.Input

	ToRuleGroupActivatedRuleActionOutput() RuleGroupActivatedRuleActionOutput
	ToRuleGroupActivatedRuleActionOutputWithContext(context.Context) RuleGroupActivatedRuleActionOutput
}

type RuleGroupActivatedRuleActionArgs struct {
	// The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RuleGroupActivatedRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRuleAction)(nil)).Elem()
}

func (i RuleGroupActivatedRuleActionArgs) ToRuleGroupActivatedRuleActionOutput() RuleGroupActivatedRuleActionOutput {
	return i.ToRuleGroupActivatedRuleActionOutputWithContext(context.Background())
}

func (i RuleGroupActivatedRuleActionArgs) ToRuleGroupActivatedRuleActionOutputWithContext(ctx context.Context) RuleGroupActivatedRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupActivatedRuleActionOutput)
}

func (i RuleGroupActivatedRuleActionArgs) ToOutput(ctx context.Context) pulumix.Output[RuleGroupActivatedRuleAction] {
	return pulumix.Output[RuleGroupActivatedRuleAction]{
		OutputState: i.ToRuleGroupActivatedRuleActionOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupActivatedRuleActionOutput struct{ *pulumi.OutputState }

func (RuleGroupActivatedRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupActivatedRuleAction)(nil)).Elem()
}

func (o RuleGroupActivatedRuleActionOutput) ToRuleGroupActivatedRuleActionOutput() RuleGroupActivatedRuleActionOutput {
	return o
}

func (o RuleGroupActivatedRuleActionOutput) ToRuleGroupActivatedRuleActionOutputWithContext(ctx context.Context) RuleGroupActivatedRuleActionOutput {
	return o
}

func (o RuleGroupActivatedRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupActivatedRuleAction] {
	return pulumix.Output[RuleGroupActivatedRuleAction]{
		OutputState: o.OutputState,
	}
}

// The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
func (o RuleGroupActivatedRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupActivatedRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type RulePredicate struct {
	// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
	DataId string `pulumi:"dataId"`
	// Set this to `false` if you want to allow, block, or count requests
	// based on the settings in the specified waf_byte_match_set, waf_ipset, aws_waf_size_constraint_set, waf.SqlInjectionMatchSet or aws_waf_xss_match_set.
	// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
	// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses except `192.0.2.44`.
	Negated bool `pulumi:"negated"`
	// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
	Type string `pulumi:"type"`
}

// RulePredicateInput is an input type that accepts RulePredicateArgs and RulePredicateOutput values.
// You can construct a concrete instance of `RulePredicateInput` via:
//
//	RulePredicateArgs{...}
type RulePredicateInput interface {
	pulumi.Input

	ToRulePredicateOutput() RulePredicateOutput
	ToRulePredicateOutputWithContext(context.Context) RulePredicateOutput
}

type RulePredicateArgs struct {
	// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
	DataId pulumi.StringInput `pulumi:"dataId"`
	// Set this to `false` if you want to allow, block, or count requests
	// based on the settings in the specified waf_byte_match_set, waf_ipset, aws_waf_size_constraint_set, waf.SqlInjectionMatchSet or aws_waf_xss_match_set.
	// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
	// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses except `192.0.2.44`.
	Negated pulumi.BoolInput `pulumi:"negated"`
	// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RulePredicateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePredicate)(nil)).Elem()
}

func (i RulePredicateArgs) ToRulePredicateOutput() RulePredicateOutput {
	return i.ToRulePredicateOutputWithContext(context.Background())
}

func (i RulePredicateArgs) ToRulePredicateOutputWithContext(ctx context.Context) RulePredicateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulePredicateOutput)
}

func (i RulePredicateArgs) ToOutput(ctx context.Context) pulumix.Output[RulePredicate] {
	return pulumix.Output[RulePredicate]{
		OutputState: i.ToRulePredicateOutputWithContext(ctx).OutputState,
	}
}

// RulePredicateArrayInput is an input type that accepts RulePredicateArray and RulePredicateArrayOutput values.
// You can construct a concrete instance of `RulePredicateArrayInput` via:
//
//	RulePredicateArray{ RulePredicateArgs{...} }
type RulePredicateArrayInput interface {
	pulumi.Input

	ToRulePredicateArrayOutput() RulePredicateArrayOutput
	ToRulePredicateArrayOutputWithContext(context.Context) RulePredicateArrayOutput
}

type RulePredicateArray []RulePredicateInput

func (RulePredicateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulePredicate)(nil)).Elem()
}

func (i RulePredicateArray) ToRulePredicateArrayOutput() RulePredicateArrayOutput {
	return i.ToRulePredicateArrayOutputWithContext(context.Background())
}

func (i RulePredicateArray) ToRulePredicateArrayOutputWithContext(ctx context.Context) RulePredicateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulePredicateArrayOutput)
}

func (i RulePredicateArray) ToOutput(ctx context.Context) pulumix.Output[[]RulePredicate] {
	return pulumix.Output[[]RulePredicate]{
		OutputState: i.ToRulePredicateArrayOutputWithContext(ctx).OutputState,
	}
}

type RulePredicateOutput struct{ *pulumi.OutputState }

func (RulePredicateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePredicate)(nil)).Elem()
}

func (o RulePredicateOutput) ToRulePredicateOutput() RulePredicateOutput {
	return o
}

func (o RulePredicateOutput) ToRulePredicateOutputWithContext(ctx context.Context) RulePredicateOutput {
	return o
}

func (o RulePredicateOutput) ToOutput(ctx context.Context) pulumix.Output[RulePredicate] {
	return pulumix.Output[RulePredicate]{
		OutputState: o.OutputState,
	}
}

// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
func (o RulePredicateOutput) DataId() pulumi.StringOutput {
	return o.ApplyT(func(v RulePredicate) string { return v.DataId }).(pulumi.StringOutput)
}

// Set this to `false` if you want to allow, block, or count requests
// based on the settings in the specified waf_byte_match_set, waf_ipset, aws_waf_size_constraint_set, waf.SqlInjectionMatchSet or aws_waf_xss_match_set.
// For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
// If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses except `192.0.2.44`.
func (o RulePredicateOutput) Negated() pulumi.BoolOutput {
	return o.ApplyT(func(v RulePredicate) bool { return v.Negated }).(pulumi.BoolOutput)
}

// The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
func (o RulePredicateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RulePredicate) string { return v.Type }).(pulumi.StringOutput)
}

type RulePredicateArrayOutput struct{ *pulumi.OutputState }

func (RulePredicateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulePredicate)(nil)).Elem()
}

func (o RulePredicateArrayOutput) ToRulePredicateArrayOutput() RulePredicateArrayOutput {
	return o
}

func (o RulePredicateArrayOutput) ToRulePredicateArrayOutputWithContext(ctx context.Context) RulePredicateArrayOutput {
	return o
}

func (o RulePredicateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RulePredicate] {
	return pulumix.Output[[]RulePredicate]{
		OutputState: o.OutputState,
	}
}

func (o RulePredicateArrayOutput) Index(i pulumi.IntInput) RulePredicateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulePredicate {
		return vs[0].([]RulePredicate)[vs[1].(int)]
	}).(RulePredicateOutput)
}

type SizeConstraintSetSizeConstraint struct {
	// The type of comparison you want to perform.
	// e.g., `EQ`, `NE`, `LT`, `GT`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// Specifies where in a web request to look for the size constraint.
	FieldToMatch SizeConstraintSetSizeConstraintFieldToMatch `pulumi:"fieldToMatch"`
	// The size in bytes that you want to compare against the size of the specified `fieldToMatch`.
	// Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
	Size int `pulumi:"size"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
	// for all supported values.
	// **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
	TextTransformation string `pulumi:"textTransformation"`
}

// SizeConstraintSetSizeConstraintInput is an input type that accepts SizeConstraintSetSizeConstraintArgs and SizeConstraintSetSizeConstraintOutput values.
// You can construct a concrete instance of `SizeConstraintSetSizeConstraintInput` via:
//
//	SizeConstraintSetSizeConstraintArgs{...}
type SizeConstraintSetSizeConstraintInput interface {
	pulumi.Input

	ToSizeConstraintSetSizeConstraintOutput() SizeConstraintSetSizeConstraintOutput
	ToSizeConstraintSetSizeConstraintOutputWithContext(context.Context) SizeConstraintSetSizeConstraintOutput
}

type SizeConstraintSetSizeConstraintArgs struct {
	// The type of comparison you want to perform.
	// e.g., `EQ`, `NE`, `LT`, `GT`.
	// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// Specifies where in a web request to look for the size constraint.
	FieldToMatch SizeConstraintSetSizeConstraintFieldToMatchInput `pulumi:"fieldToMatch"`
	// The size in bytes that you want to compare against the size of the specified `fieldToMatch`.
	// Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
	Size pulumi.IntInput `pulumi:"size"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
	// for all supported values.
	// **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
	TextTransformation pulumi.StringInput `pulumi:"textTransformation"`
}

func (SizeConstraintSetSizeConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraint)(nil)).Elem()
}

func (i SizeConstraintSetSizeConstraintArgs) ToSizeConstraintSetSizeConstraintOutput() SizeConstraintSetSizeConstraintOutput {
	return i.ToSizeConstraintSetSizeConstraintOutputWithContext(context.Background())
}

func (i SizeConstraintSetSizeConstraintArgs) ToSizeConstraintSetSizeConstraintOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetSizeConstraintOutput)
}

func (i SizeConstraintSetSizeConstraintArgs) ToOutput(ctx context.Context) pulumix.Output[SizeConstraintSetSizeConstraint] {
	return pulumix.Output[SizeConstraintSetSizeConstraint]{
		OutputState: i.ToSizeConstraintSetSizeConstraintOutputWithContext(ctx).OutputState,
	}
}

// SizeConstraintSetSizeConstraintArrayInput is an input type that accepts SizeConstraintSetSizeConstraintArray and SizeConstraintSetSizeConstraintArrayOutput values.
// You can construct a concrete instance of `SizeConstraintSetSizeConstraintArrayInput` via:
//
//	SizeConstraintSetSizeConstraintArray{ SizeConstraintSetSizeConstraintArgs{...} }
type SizeConstraintSetSizeConstraintArrayInput interface {
	pulumi.Input

	ToSizeConstraintSetSizeConstraintArrayOutput() SizeConstraintSetSizeConstraintArrayOutput
	ToSizeConstraintSetSizeConstraintArrayOutputWithContext(context.Context) SizeConstraintSetSizeConstraintArrayOutput
}

type SizeConstraintSetSizeConstraintArray []SizeConstraintSetSizeConstraintInput

func (SizeConstraintSetSizeConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SizeConstraintSetSizeConstraint)(nil)).Elem()
}

func (i SizeConstraintSetSizeConstraintArray) ToSizeConstraintSetSizeConstraintArrayOutput() SizeConstraintSetSizeConstraintArrayOutput {
	return i.ToSizeConstraintSetSizeConstraintArrayOutputWithContext(context.Background())
}

func (i SizeConstraintSetSizeConstraintArray) ToSizeConstraintSetSizeConstraintArrayOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetSizeConstraintArrayOutput)
}

func (i SizeConstraintSetSizeConstraintArray) ToOutput(ctx context.Context) pulumix.Output[[]SizeConstraintSetSizeConstraint] {
	return pulumix.Output[[]SizeConstraintSetSizeConstraint]{
		OutputState: i.ToSizeConstraintSetSizeConstraintArrayOutputWithContext(ctx).OutputState,
	}
}

type SizeConstraintSetSizeConstraintOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetSizeConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraint)(nil)).Elem()
}

func (o SizeConstraintSetSizeConstraintOutput) ToSizeConstraintSetSizeConstraintOutput() SizeConstraintSetSizeConstraintOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintOutput) ToSizeConstraintSetSizeConstraintOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintOutput) ToOutput(ctx context.Context) pulumix.Output[SizeConstraintSetSizeConstraint] {
	return pulumix.Output[SizeConstraintSetSizeConstraint]{
		OutputState: o.OutputState,
	}
}

// The type of comparison you want to perform.
// e.g., `EQ`, `NE`, `LT`, `GT`.
// See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
func (o SizeConstraintSetSizeConstraintOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v SizeConstraintSetSizeConstraint) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// Specifies where in a web request to look for the size constraint.
func (o SizeConstraintSetSizeConstraintOutput) FieldToMatch() SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return o.ApplyT(func(v SizeConstraintSetSizeConstraint) SizeConstraintSetSizeConstraintFieldToMatch {
		return v.FieldToMatch
	}).(SizeConstraintSetSizeConstraintFieldToMatchOutput)
}

// The size in bytes that you want to compare against the size of the specified `fieldToMatch`.
// Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
func (o SizeConstraintSetSizeConstraintOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v SizeConstraintSetSizeConstraint) int { return v.Size }).(pulumi.IntOutput)
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
// for all supported values.
// **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
func (o SizeConstraintSetSizeConstraintOutput) TextTransformation() pulumi.StringOutput {
	return o.ApplyT(func(v SizeConstraintSetSizeConstraint) string { return v.TextTransformation }).(pulumi.StringOutput)
}

type SizeConstraintSetSizeConstraintArrayOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetSizeConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SizeConstraintSetSizeConstraint)(nil)).Elem()
}

func (o SizeConstraintSetSizeConstraintArrayOutput) ToSizeConstraintSetSizeConstraintArrayOutput() SizeConstraintSetSizeConstraintArrayOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintArrayOutput) ToSizeConstraintSetSizeConstraintArrayOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintArrayOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SizeConstraintSetSizeConstraint] {
	return pulumix.Output[[]SizeConstraintSetSizeConstraint]{
		OutputState: o.OutputState,
	}
}

func (o SizeConstraintSetSizeConstraintArrayOutput) Index(i pulumi.IntInput) SizeConstraintSetSizeConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SizeConstraintSetSizeConstraint {
		return vs[0].([]SizeConstraintSetSizeConstraint)[vs[1].(int)]
	}).(SizeConstraintSetSizeConstraintOutput)
}

type SizeConstraintSetSizeConstraintFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

// SizeConstraintSetSizeConstraintFieldToMatchInput is an input type that accepts SizeConstraintSetSizeConstraintFieldToMatchArgs and SizeConstraintSetSizeConstraintFieldToMatchOutput values.
// You can construct a concrete instance of `SizeConstraintSetSizeConstraintFieldToMatchInput` via:
//
//	SizeConstraintSetSizeConstraintFieldToMatchArgs{...}
type SizeConstraintSetSizeConstraintFieldToMatchInput interface {
	pulumi.Input

	ToSizeConstraintSetSizeConstraintFieldToMatchOutput() SizeConstraintSetSizeConstraintFieldToMatchOutput
	ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(context.Context) SizeConstraintSetSizeConstraintFieldToMatchOutput
}

type SizeConstraintSetSizeConstraintFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SizeConstraintSetSizeConstraintFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraintFieldToMatch)(nil)).Elem()
}

func (i SizeConstraintSetSizeConstraintFieldToMatchArgs) ToSizeConstraintSetSizeConstraintFieldToMatchOutput() SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return i.ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(context.Background())
}

func (i SizeConstraintSetSizeConstraintFieldToMatchArgs) ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetSizeConstraintFieldToMatchOutput)
}

func (i SizeConstraintSetSizeConstraintFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[SizeConstraintSetSizeConstraintFieldToMatch] {
	return pulumix.Output[SizeConstraintSetSizeConstraintFieldToMatch]{
		OutputState: i.ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(ctx).OutputState,
	}
}

type SizeConstraintSetSizeConstraintFieldToMatchOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetSizeConstraintFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConstraintSetSizeConstraintFieldToMatch)(nil)).Elem()
}

func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) ToSizeConstraintSetSizeConstraintFieldToMatchOutput() SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) ToSizeConstraintSetSizeConstraintFieldToMatchOutputWithContext(ctx context.Context) SizeConstraintSetSizeConstraintFieldToMatchOutput {
	return o
}

func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[SizeConstraintSetSizeConstraintFieldToMatch] {
	return pulumix.Output[SizeConstraintSetSizeConstraintFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SizeConstraintSetSizeConstraintFieldToMatch) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
// for all supported values.
func (o SizeConstraintSetSizeConstraintFieldToMatchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SizeConstraintSetSizeConstraintFieldToMatch) string { return v.Type }).(pulumi.StringOutput)
}

type SqlInjectionMatchSetSqlInjectionMatchTuple struct {
	// Specifies where in a web request to look for snippets of malicious SQL code.
	FieldToMatch SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SqlInjectionMatchTuple.html#WAF-Type-SqlInjectionMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation string `pulumi:"textTransformation"`
}

// SqlInjectionMatchSetSqlInjectionMatchTupleInput is an input type that accepts SqlInjectionMatchSetSqlInjectionMatchTupleArgs and SqlInjectionMatchSetSqlInjectionMatchTupleOutput values.
// You can construct a concrete instance of `SqlInjectionMatchSetSqlInjectionMatchTupleInput` via:
//
//	SqlInjectionMatchSetSqlInjectionMatchTupleArgs{...}
type SqlInjectionMatchSetSqlInjectionMatchTupleInput interface {
	pulumi.Input

	ToSqlInjectionMatchSetSqlInjectionMatchTupleOutput() SqlInjectionMatchSetSqlInjectionMatchTupleOutput
	ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleOutput
}

type SqlInjectionMatchSetSqlInjectionMatchTupleArgs struct {
	// Specifies where in a web request to look for snippets of malicious SQL code.
	FieldToMatch SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchInput `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SqlInjectionMatchTuple.html#WAF-Type-SqlInjectionMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation pulumi.StringInput `pulumi:"textTransformation"`
}

func (SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTuple)(nil)).Elem()
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutput() SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return i.ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(context.Background())
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlInjectionMatchSetSqlInjectionMatchTupleOutput)
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTuple] {
	return pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTuple]{
		OutputState: i.ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(ctx).OutputState,
	}
}

// SqlInjectionMatchSetSqlInjectionMatchTupleArrayInput is an input type that accepts SqlInjectionMatchSetSqlInjectionMatchTupleArray and SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput values.
// You can construct a concrete instance of `SqlInjectionMatchSetSqlInjectionMatchTupleArrayInput` via:
//
//	SqlInjectionMatchSetSqlInjectionMatchTupleArray{ SqlInjectionMatchSetSqlInjectionMatchTupleArgs{...} }
type SqlInjectionMatchSetSqlInjectionMatchTupleArrayInput interface {
	pulumi.Input

	ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput() SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput
	ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutputWithContext(context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput
}

type SqlInjectionMatchSetSqlInjectionMatchTupleArray []SqlInjectionMatchSetSqlInjectionMatchTupleInput

func (SqlInjectionMatchSetSqlInjectionMatchTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlInjectionMatchSetSqlInjectionMatchTuple)(nil)).Elem()
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArray) ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput() SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput {
	return i.ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutputWithContext(context.Background())
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArray) ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput)
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleArray) ToOutput(ctx context.Context) pulumix.Output[[]SqlInjectionMatchSetSqlInjectionMatchTuple] {
	return pulumix.Output[[]SqlInjectionMatchSetSqlInjectionMatchTuple]{
		OutputState: i.ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutputWithContext(ctx).OutputState,
	}
}

type SqlInjectionMatchSetSqlInjectionMatchTupleOutput struct{ *pulumi.OutputState }

func (SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTuple)(nil)).Elem()
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutput() SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTuple] {
	return pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTuple]{
		OutputState: o.OutputState,
	}
}

// Specifies where in a web request to look for snippets of malicious SQL code.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) FieldToMatch() SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return o.ApplyT(func(v SqlInjectionMatchSetSqlInjectionMatchTuple) SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch {
		return v.FieldToMatch
	}).(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput)
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// If you specify a transformation, AWS WAF performs the transformation on `fieldToMatch` before inspecting a request for a match.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SqlInjectionMatchTuple.html#WAF-Type-SqlInjectionMatchTuple-TextTransformation)
// for all supported values.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleOutput) TextTransformation() pulumi.StringOutput {
	return o.ApplyT(func(v SqlInjectionMatchSetSqlInjectionMatchTuple) string { return v.TextTransformation }).(pulumi.StringOutput)
}

type SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput struct{ *pulumi.OutputState }

func (SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlInjectionMatchSetSqlInjectionMatchTuple)(nil)).Elem()
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput() SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleArrayOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SqlInjectionMatchSetSqlInjectionMatchTuple] {
	return pulumix.Output[[]SqlInjectionMatchSetSqlInjectionMatchTuple]{
		OutputState: o.OutputState,
	}
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput) Index(i pulumi.IntInput) SqlInjectionMatchSetSqlInjectionMatchTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlInjectionMatchSetSqlInjectionMatchTuple {
		return vs[0].([]SqlInjectionMatchSetSqlInjectionMatchTuple)[vs[1].(int)]
	}).(SqlInjectionMatchSetSqlInjectionMatchTupleOutput)
}

type SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

// SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchInput is an input type that accepts SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs and SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput values.
// You can construct a concrete instance of `SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchInput` via:
//
//	SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs{...}
type SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchInput interface {
	pulumi.Input

	ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput
	ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput
}

type SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch)(nil)).Elem()
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return i.ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput)
}

func (i SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch] {
	return pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch]{
		OutputState: i.ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(ctx).OutputState,
	}
}

type SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch)(nil)).Elem()
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput() SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ToSqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutputWithContext(ctx context.Context) SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput {
	return o
}

func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch] {
	return pulumix.Output[SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
// for all supported values.
func (o SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch) string { return v.Type }).(pulumi.StringOutput)
}

type WebAclDefaultAction struct {
	// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
	// e.g., `ALLOW` or `BLOCK`
	Type string `pulumi:"type"`
}

// WebAclDefaultActionInput is an input type that accepts WebAclDefaultActionArgs and WebAclDefaultActionOutput values.
// You can construct a concrete instance of `WebAclDefaultActionInput` via:
//
//	WebAclDefaultActionArgs{...}
type WebAclDefaultActionInput interface {
	pulumi.Input

	ToWebAclDefaultActionOutput() WebAclDefaultActionOutput
	ToWebAclDefaultActionOutputWithContext(context.Context) WebAclDefaultActionOutput
}

type WebAclDefaultActionArgs struct {
	// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
	// e.g., `ALLOW` or `BLOCK`
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAclDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultAction)(nil)).Elem()
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionOutput() WebAclDefaultActionOutput {
	return i.ToWebAclDefaultActionOutputWithContext(context.Background())
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionOutputWithContext(ctx context.Context) WebAclDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionOutput)
}

func (i WebAclDefaultActionArgs) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultAction] {
	return pulumix.Output[WebAclDefaultAction]{
		OutputState: i.ToWebAclDefaultActionOutputWithContext(ctx).OutputState,
	}
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionPtrOutput() WebAclDefaultActionPtrOutput {
	return i.ToWebAclDefaultActionPtrOutputWithContext(context.Background())
}

func (i WebAclDefaultActionArgs) ToWebAclDefaultActionPtrOutputWithContext(ctx context.Context) WebAclDefaultActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionOutput).ToWebAclDefaultActionPtrOutputWithContext(ctx)
}

// WebAclDefaultActionPtrInput is an input type that accepts WebAclDefaultActionArgs, WebAclDefaultActionPtr and WebAclDefaultActionPtrOutput values.
// You can construct a concrete instance of `WebAclDefaultActionPtrInput` via:
//
//	        WebAclDefaultActionArgs{...}
//
//	or:
//
//	        nil
type WebAclDefaultActionPtrInput interface {
	pulumi.Input

	ToWebAclDefaultActionPtrOutput() WebAclDefaultActionPtrOutput
	ToWebAclDefaultActionPtrOutputWithContext(context.Context) WebAclDefaultActionPtrOutput
}

type webAclDefaultActionPtrType WebAclDefaultActionArgs

func WebAclDefaultActionPtr(v *WebAclDefaultActionArgs) WebAclDefaultActionPtrInput {
	return (*webAclDefaultActionPtrType)(v)
}

func (*webAclDefaultActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclDefaultAction)(nil)).Elem()
}

func (i *webAclDefaultActionPtrType) ToWebAclDefaultActionPtrOutput() WebAclDefaultActionPtrOutput {
	return i.ToWebAclDefaultActionPtrOutputWithContext(context.Background())
}

func (i *webAclDefaultActionPtrType) ToWebAclDefaultActionPtrOutputWithContext(ctx context.Context) WebAclDefaultActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclDefaultActionPtrOutput)
}

func (i *webAclDefaultActionPtrType) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultAction] {
	return pulumix.Output[*WebAclDefaultAction]{
		OutputState: i.ToWebAclDefaultActionPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclDefaultActionOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclDefaultAction)(nil)).Elem()
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionOutput() WebAclDefaultActionOutput {
	return o
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionOutputWithContext(ctx context.Context) WebAclDefaultActionOutput {
	return o
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionPtrOutput() WebAclDefaultActionPtrOutput {
	return o.ToWebAclDefaultActionPtrOutputWithContext(context.Background())
}

func (o WebAclDefaultActionOutput) ToWebAclDefaultActionPtrOutputWithContext(ctx context.Context) WebAclDefaultActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclDefaultAction) *WebAclDefaultAction {
		return &v
	}).(WebAclDefaultActionPtrOutput)
}

func (o WebAclDefaultActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclDefaultAction] {
	return pulumix.Output[WebAclDefaultAction]{
		OutputState: o.OutputState,
	}
}

// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
// e.g., `ALLOW` or `BLOCK`
func (o WebAclDefaultActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAclDefaultAction) string { return v.Type }).(pulumi.StringOutput)
}

type WebAclDefaultActionPtrOutput struct{ *pulumi.OutputState }

func (WebAclDefaultActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclDefaultAction)(nil)).Elem()
}

func (o WebAclDefaultActionPtrOutput) ToWebAclDefaultActionPtrOutput() WebAclDefaultActionPtrOutput {
	return o
}

func (o WebAclDefaultActionPtrOutput) ToWebAclDefaultActionPtrOutputWithContext(ctx context.Context) WebAclDefaultActionPtrOutput {
	return o
}

func (o WebAclDefaultActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclDefaultAction] {
	return pulumix.Output[*WebAclDefaultAction]{
		OutputState: o.OutputState,
	}
}

func (o WebAclDefaultActionPtrOutput) Elem() WebAclDefaultActionOutput {
	return o.ApplyT(func(v *WebAclDefaultAction) WebAclDefaultAction {
		if v != nil {
			return *v
		}
		var ret WebAclDefaultAction
		return ret
	}).(WebAclDefaultActionOutput)
}

// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
// e.g., `ALLOW` or `BLOCK`
func (o WebAclDefaultActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAclDefaultAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WebAclLoggingConfiguration struct {
	// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
	LogDestination string `pulumi:"logDestination"`
	// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
	RedactedFields *WebAclLoggingConfigurationRedactedFields `pulumi:"redactedFields"`
}

// WebAclLoggingConfigurationInput is an input type that accepts WebAclLoggingConfigurationArgs and WebAclLoggingConfigurationOutput values.
// You can construct a concrete instance of `WebAclLoggingConfigurationInput` via:
//
//	WebAclLoggingConfigurationArgs{...}
type WebAclLoggingConfigurationInput interface {
	pulumi.Input

	ToWebAclLoggingConfigurationOutput() WebAclLoggingConfigurationOutput
	ToWebAclLoggingConfigurationOutputWithContext(context.Context) WebAclLoggingConfigurationOutput
}

type WebAclLoggingConfigurationArgs struct {
	// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
	LogDestination pulumi.StringInput `pulumi:"logDestination"`
	// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
	RedactedFields WebAclLoggingConfigurationRedactedFieldsPtrInput `pulumi:"redactedFields"`
}

func (WebAclLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfiguration)(nil)).Elem()
}

func (i WebAclLoggingConfigurationArgs) ToWebAclLoggingConfigurationOutput() WebAclLoggingConfigurationOutput {
	return i.ToWebAclLoggingConfigurationOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationArgs) ToWebAclLoggingConfigurationOutputWithContext(ctx context.Context) WebAclLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationOutput)
}

func (i WebAclLoggingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfiguration] {
	return pulumix.Output[WebAclLoggingConfiguration]{
		OutputState: i.ToWebAclLoggingConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i WebAclLoggingConfigurationArgs) ToWebAclLoggingConfigurationPtrOutput() WebAclLoggingConfigurationPtrOutput {
	return i.ToWebAclLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationArgs) ToWebAclLoggingConfigurationPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationOutput).ToWebAclLoggingConfigurationPtrOutputWithContext(ctx)
}

// WebAclLoggingConfigurationPtrInput is an input type that accepts WebAclLoggingConfigurationArgs, WebAclLoggingConfigurationPtr and WebAclLoggingConfigurationPtrOutput values.
// You can construct a concrete instance of `WebAclLoggingConfigurationPtrInput` via:
//
//	        WebAclLoggingConfigurationArgs{...}
//
//	or:
//
//	        nil
type WebAclLoggingConfigurationPtrInput interface {
	pulumi.Input

	ToWebAclLoggingConfigurationPtrOutput() WebAclLoggingConfigurationPtrOutput
	ToWebAclLoggingConfigurationPtrOutputWithContext(context.Context) WebAclLoggingConfigurationPtrOutput
}

type webAclLoggingConfigurationPtrType WebAclLoggingConfigurationArgs

func WebAclLoggingConfigurationPtr(v *WebAclLoggingConfigurationArgs) WebAclLoggingConfigurationPtrInput {
	return (*webAclLoggingConfigurationPtrType)(v)
}

func (*webAclLoggingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclLoggingConfiguration)(nil)).Elem()
}

func (i *webAclLoggingConfigurationPtrType) ToWebAclLoggingConfigurationPtrOutput() WebAclLoggingConfigurationPtrOutput {
	return i.ToWebAclLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i *webAclLoggingConfigurationPtrType) ToWebAclLoggingConfigurationPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationPtrOutput)
}

func (i *webAclLoggingConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfiguration] {
	return pulumix.Output[*WebAclLoggingConfiguration]{
		OutputState: i.ToWebAclLoggingConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfiguration)(nil)).Elem()
}

func (o WebAclLoggingConfigurationOutput) ToWebAclLoggingConfigurationOutput() WebAclLoggingConfigurationOutput {
	return o
}

func (o WebAclLoggingConfigurationOutput) ToWebAclLoggingConfigurationOutputWithContext(ctx context.Context) WebAclLoggingConfigurationOutput {
	return o
}

func (o WebAclLoggingConfigurationOutput) ToWebAclLoggingConfigurationPtrOutput() WebAclLoggingConfigurationPtrOutput {
	return o.ToWebAclLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (o WebAclLoggingConfigurationOutput) ToWebAclLoggingConfigurationPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclLoggingConfiguration) *WebAclLoggingConfiguration {
		return &v
	}).(WebAclLoggingConfigurationPtrOutput)
}

func (o WebAclLoggingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfiguration] {
	return pulumix.Output[WebAclLoggingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
func (o WebAclLoggingConfigurationOutput) LogDestination() pulumi.StringOutput {
	return o.ApplyT(func(v WebAclLoggingConfiguration) string { return v.LogDestination }).(pulumi.StringOutput)
}

// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
func (o WebAclLoggingConfigurationOutput) RedactedFields() WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return o.ApplyT(func(v WebAclLoggingConfiguration) *WebAclLoggingConfigurationRedactedFields { return v.RedactedFields }).(WebAclLoggingConfigurationRedactedFieldsPtrOutput)
}

type WebAclLoggingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclLoggingConfiguration)(nil)).Elem()
}

func (o WebAclLoggingConfigurationPtrOutput) ToWebAclLoggingConfigurationPtrOutput() WebAclLoggingConfigurationPtrOutput {
	return o
}

func (o WebAclLoggingConfigurationPtrOutput) ToWebAclLoggingConfigurationPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationPtrOutput {
	return o
}

func (o WebAclLoggingConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfiguration] {
	return pulumix.Output[*WebAclLoggingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o WebAclLoggingConfigurationPtrOutput) Elem() WebAclLoggingConfigurationOutput {
	return o.ApplyT(func(v *WebAclLoggingConfiguration) WebAclLoggingConfiguration {
		if v != nil {
			return *v
		}
		var ret WebAclLoggingConfiguration
		return ret
	}).(WebAclLoggingConfigurationOutput)
}

// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
func (o WebAclLoggingConfigurationPtrOutput) LogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAclLoggingConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LogDestination
	}).(pulumi.StringPtrOutput)
}

// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
func (o WebAclLoggingConfigurationPtrOutput) RedactedFields() WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return o.ApplyT(func(v *WebAclLoggingConfiguration) *WebAclLoggingConfigurationRedactedFields {
		if v == nil {
			return nil
		}
		return v.RedactedFields
	}).(WebAclLoggingConfigurationRedactedFieldsPtrOutput)
}

type WebAclLoggingConfigurationRedactedFields struct {
	// Set of configuration blocks for fields to redact. Detailed below.
	FieldToMatches []WebAclLoggingConfigurationRedactedFieldsFieldToMatch `pulumi:"fieldToMatches"`
}

// WebAclLoggingConfigurationRedactedFieldsInput is an input type that accepts WebAclLoggingConfigurationRedactedFieldsArgs and WebAclLoggingConfigurationRedactedFieldsOutput values.
// You can construct a concrete instance of `WebAclLoggingConfigurationRedactedFieldsInput` via:
//
//	WebAclLoggingConfigurationRedactedFieldsArgs{...}
type WebAclLoggingConfigurationRedactedFieldsInput interface {
	pulumi.Input

	ToWebAclLoggingConfigurationRedactedFieldsOutput() WebAclLoggingConfigurationRedactedFieldsOutput
	ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(context.Context) WebAclLoggingConfigurationRedactedFieldsOutput
}

type WebAclLoggingConfigurationRedactedFieldsArgs struct {
	// Set of configuration blocks for fields to redact. Detailed below.
	FieldToMatches WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayInput `pulumi:"fieldToMatches"`
}

func (WebAclLoggingConfigurationRedactedFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFields)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldsArgs) ToWebAclLoggingConfigurationRedactedFieldsOutput() WebAclLoggingConfigurationRedactedFieldsOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldsArgs) ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldsOutput)
}

func (i WebAclLoggingConfigurationRedactedFieldsArgs) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFields] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFields]{
		OutputState: i.ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(ctx).OutputState,
	}
}

func (i WebAclLoggingConfigurationRedactedFieldsArgs) ToWebAclLoggingConfigurationRedactedFieldsPtrOutput() WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldsArgs) ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldsOutput).ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(ctx)
}

// WebAclLoggingConfigurationRedactedFieldsPtrInput is an input type that accepts WebAclLoggingConfigurationRedactedFieldsArgs, WebAclLoggingConfigurationRedactedFieldsPtr and WebAclLoggingConfigurationRedactedFieldsPtrOutput values.
// You can construct a concrete instance of `WebAclLoggingConfigurationRedactedFieldsPtrInput` via:
//
//	        WebAclLoggingConfigurationRedactedFieldsArgs{...}
//
//	or:
//
//	        nil
type WebAclLoggingConfigurationRedactedFieldsPtrInput interface {
	pulumi.Input

	ToWebAclLoggingConfigurationRedactedFieldsPtrOutput() WebAclLoggingConfigurationRedactedFieldsPtrOutput
	ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(context.Context) WebAclLoggingConfigurationRedactedFieldsPtrOutput
}

type webAclLoggingConfigurationRedactedFieldsPtrType WebAclLoggingConfigurationRedactedFieldsArgs

func WebAclLoggingConfigurationRedactedFieldsPtr(v *WebAclLoggingConfigurationRedactedFieldsArgs) WebAclLoggingConfigurationRedactedFieldsPtrInput {
	return (*webAclLoggingConfigurationRedactedFieldsPtrType)(v)
}

func (*webAclLoggingConfigurationRedactedFieldsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclLoggingConfigurationRedactedFields)(nil)).Elem()
}

func (i *webAclLoggingConfigurationRedactedFieldsPtrType) ToWebAclLoggingConfigurationRedactedFieldsPtrOutput() WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(context.Background())
}

func (i *webAclLoggingConfigurationRedactedFieldsPtrType) ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldsPtrOutput)
}

func (i *webAclLoggingConfigurationRedactedFieldsPtrType) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFields] {
	return pulumix.Output[*WebAclLoggingConfigurationRedactedFields]{
		OutputState: i.ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclLoggingConfigurationRedactedFieldsOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFields)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToWebAclLoggingConfigurationRedactedFieldsOutput() WebAclLoggingConfigurationRedactedFieldsOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToWebAclLoggingConfigurationRedactedFieldsOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToWebAclLoggingConfigurationRedactedFieldsPtrOutput() WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return o.ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(context.Background())
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclLoggingConfigurationRedactedFields) *WebAclLoggingConfigurationRedactedFields {
		return &v
	}).(WebAclLoggingConfigurationRedactedFieldsPtrOutput)
}

func (o WebAclLoggingConfigurationRedactedFieldsOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFields] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFields]{
		OutputState: o.OutputState,
	}
}

// Set of configuration blocks for fields to redact. Detailed below.
func (o WebAclLoggingConfigurationRedactedFieldsOutput) FieldToMatches() WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput {
	return o.ApplyT(func(v WebAclLoggingConfigurationRedactedFields) []WebAclLoggingConfigurationRedactedFieldsFieldToMatch {
		return v.FieldToMatches
	}).(WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput)
}

type WebAclLoggingConfigurationRedactedFieldsPtrOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclLoggingConfigurationRedactedFields)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldsPtrOutput) ToWebAclLoggingConfigurationRedactedFieldsPtrOutput() WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsPtrOutput) ToWebAclLoggingConfigurationRedactedFieldsPtrOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsPtrOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclLoggingConfigurationRedactedFields] {
	return pulumix.Output[*WebAclLoggingConfigurationRedactedFields]{
		OutputState: o.OutputState,
	}
}

func (o WebAclLoggingConfigurationRedactedFieldsPtrOutput) Elem() WebAclLoggingConfigurationRedactedFieldsOutput {
	return o.ApplyT(func(v *WebAclLoggingConfigurationRedactedFields) WebAclLoggingConfigurationRedactedFields {
		if v != nil {
			return *v
		}
		var ret WebAclLoggingConfigurationRedactedFields
		return ret
	}).(WebAclLoggingConfigurationRedactedFieldsOutput)
}

// Set of configuration blocks for fields to redact. Detailed below.
func (o WebAclLoggingConfigurationRedactedFieldsPtrOutput) FieldToMatches() WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput {
	return o.ApplyT(func(v *WebAclLoggingConfigurationRedactedFields) []WebAclLoggingConfigurationRedactedFieldsFieldToMatch {
		if v == nil {
			return nil
		}
		return v.FieldToMatches
	}).(WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput)
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatch struct {
	// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
	Type string `pulumi:"type"`
}

// WebAclLoggingConfigurationRedactedFieldsFieldToMatchInput is an input type that accepts WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs and WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput values.
// You can construct a concrete instance of `WebAclLoggingConfigurationRedactedFieldsFieldToMatchInput` via:
//
//	WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs{...}
type WebAclLoggingConfigurationRedactedFieldsFieldToMatchInput interface {
	pulumi.Input

	ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput
	ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs struct {
	// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsFieldToMatch)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput)
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFieldsFieldToMatch] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFieldsFieldToMatch]{
		OutputState: i.ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(ctx).OutputState,
	}
}

// WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayInput is an input type that accepts WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray and WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput values.
// You can construct a concrete instance of `WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayInput` via:
//
//	WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray{ WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs{...} }
type WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayInput interface {
	pulumi.Input

	ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput
	ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutputWithContext(context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray []WebAclLoggingConfigurationRedactedFieldsFieldToMatchInput

func (WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAclLoggingConfigurationRedactedFieldsFieldToMatch)(nil)).Elem()
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput {
	return i.ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutputWithContext(context.Background())
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput)
}

func (i WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray) ToOutput(ctx context.Context) pulumix.Output[[]WebAclLoggingConfigurationRedactedFieldsFieldToMatch] {
	return pulumix.Output[[]WebAclLoggingConfigurationRedactedFieldsFieldToMatch]{
		OutputState: i.ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutputWithContext(ctx).OutputState,
	}
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsFieldToMatch)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLoggingConfigurationRedactedFieldsFieldToMatch] {
	return pulumix.Output[WebAclLoggingConfigurationRedactedFieldsFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAclLoggingConfigurationRedactedFieldsFieldToMatch) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`
func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAclLoggingConfigurationRedactedFieldsFieldToMatch) string { return v.Type }).(pulumi.StringOutput)
}

type WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput struct{ *pulumi.OutputState }

func (WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAclLoggingConfigurationRedactedFieldsFieldToMatch)(nil)).Elem()
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput() WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput) ToWebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutputWithContext(ctx context.Context) WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput {
	return o
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WebAclLoggingConfigurationRedactedFieldsFieldToMatch] {
	return pulumix.Output[[]WebAclLoggingConfigurationRedactedFieldsFieldToMatch]{
		OutputState: o.OutputState,
	}
}

func (o WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput) Index(i pulumi.IntInput) WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebAclLoggingConfigurationRedactedFieldsFieldToMatch {
		return vs[0].([]WebAclLoggingConfigurationRedactedFieldsFieldToMatch)[vs[1].(int)]
	}).(WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput)
}

type WebAclRule struct {
	// The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if `type` is `GROUP`.
	Action *WebAclRuleAction `pulumi:"action"`
	// Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if `type` is `GROUP`.
	OverrideAction *WebAclRuleOverrideAction `pulumi:"overrideAction"`
	// Specifies the order in which the rules in a WebACL are evaluated.
	// Rules with a lower value are evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// ID of the associated WAF (Global) rule (e.g., `waf.Rule`). WAF (Regional) rules cannot be used.
	RuleId string `pulumi:"ruleId"`
	// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
	Type *string `pulumi:"type"`
}

// WebAclRuleInput is an input type that accepts WebAclRuleArgs and WebAclRuleOutput values.
// You can construct a concrete instance of `WebAclRuleInput` via:
//
//	WebAclRuleArgs{...}
type WebAclRuleInput interface {
	pulumi.Input

	ToWebAclRuleOutput() WebAclRuleOutput
	ToWebAclRuleOutputWithContext(context.Context) WebAclRuleOutput
}

type WebAclRuleArgs struct {
	// The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if `type` is `GROUP`.
	Action WebAclRuleActionPtrInput `pulumi:"action"`
	// Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if `type` is `GROUP`.
	OverrideAction WebAclRuleOverrideActionPtrInput `pulumi:"overrideAction"`
	// Specifies the order in which the rules in a WebACL are evaluated.
	// Rules with a lower value are evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// ID of the associated WAF (Global) rule (e.g., `waf.Rule`). WAF (Regional) rules cannot be used.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WebAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRule)(nil)).Elem()
}

func (i WebAclRuleArgs) ToWebAclRuleOutput() WebAclRuleOutput {
	return i.ToWebAclRuleOutputWithContext(context.Background())
}

func (i WebAclRuleArgs) ToWebAclRuleOutputWithContext(ctx context.Context) WebAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOutput)
}

func (i WebAclRuleArgs) ToOutput(ctx context.Context) pulumix.Output[WebAclRule] {
	return pulumix.Output[WebAclRule]{
		OutputState: i.ToWebAclRuleOutputWithContext(ctx).OutputState,
	}
}

// WebAclRuleArrayInput is an input type that accepts WebAclRuleArray and WebAclRuleArrayOutput values.
// You can construct a concrete instance of `WebAclRuleArrayInput` via:
//
//	WebAclRuleArray{ WebAclRuleArgs{...} }
type WebAclRuleArrayInput interface {
	pulumi.Input

	ToWebAclRuleArrayOutput() WebAclRuleArrayOutput
	ToWebAclRuleArrayOutputWithContext(context.Context) WebAclRuleArrayOutput
}

type WebAclRuleArray []WebAclRuleInput

func (WebAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAclRule)(nil)).Elem()
}

func (i WebAclRuleArray) ToWebAclRuleArrayOutput() WebAclRuleArrayOutput {
	return i.ToWebAclRuleArrayOutputWithContext(context.Background())
}

func (i WebAclRuleArray) ToWebAclRuleArrayOutputWithContext(ctx context.Context) WebAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleArrayOutput)
}

func (i WebAclRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]WebAclRule] {
	return pulumix.Output[[]WebAclRule]{
		OutputState: i.ToWebAclRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type WebAclRuleOutput struct{ *pulumi.OutputState }

func (WebAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRule)(nil)).Elem()
}

func (o WebAclRuleOutput) ToWebAclRuleOutput() WebAclRuleOutput {
	return o
}

func (o WebAclRuleOutput) ToWebAclRuleOutputWithContext(ctx context.Context) WebAclRuleOutput {
	return o
}

func (o WebAclRuleOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRule] {
	return pulumix.Output[WebAclRule]{
		OutputState: o.OutputState,
	}
}

// The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if `type` is `GROUP`.
func (o WebAclRuleOutput) Action() WebAclRuleActionPtrOutput {
	return o.ApplyT(func(v WebAclRule) *WebAclRuleAction { return v.Action }).(WebAclRuleActionPtrOutput)
}

// Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if `type` is `GROUP`.
func (o WebAclRuleOutput) OverrideAction() WebAclRuleOverrideActionPtrOutput {
	return o.ApplyT(func(v WebAclRule) *WebAclRuleOverrideAction { return v.OverrideAction }).(WebAclRuleOverrideActionPtrOutput)
}

// Specifies the order in which the rules in a WebACL are evaluated.
// Rules with a lower value are evaluated before rules with a higher value.
func (o WebAclRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebAclRule) int { return v.Priority }).(pulumi.IntOutput)
}

// ID of the associated WAF (Global) rule (e.g., `waf.Rule`). WAF (Regional) rules cannot be used.
func (o WebAclRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v WebAclRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
func (o WebAclRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAclRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WebAclRuleArrayOutput struct{ *pulumi.OutputState }

func (WebAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAclRule)(nil)).Elem()
}

func (o WebAclRuleArrayOutput) ToWebAclRuleArrayOutput() WebAclRuleArrayOutput {
	return o
}

func (o WebAclRuleArrayOutput) ToWebAclRuleArrayOutputWithContext(ctx context.Context) WebAclRuleArrayOutput {
	return o
}

func (o WebAclRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WebAclRule] {
	return pulumix.Output[[]WebAclRule]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRuleArrayOutput) Index(i pulumi.IntInput) WebAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebAclRule {
		return vs[0].([]WebAclRule)[vs[1].(int)]
	}).(WebAclRuleOutput)
}

type WebAclRuleAction struct {
	// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
	// e.g., `ALLOW` or `BLOCK`
	Type string `pulumi:"type"`
}

// WebAclRuleActionInput is an input type that accepts WebAclRuleActionArgs and WebAclRuleActionOutput values.
// You can construct a concrete instance of `WebAclRuleActionInput` via:
//
//	WebAclRuleActionArgs{...}
type WebAclRuleActionInput interface {
	pulumi.Input

	ToWebAclRuleActionOutput() WebAclRuleActionOutput
	ToWebAclRuleActionOutputWithContext(context.Context) WebAclRuleActionOutput
}

type WebAclRuleActionArgs struct {
	// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
	// e.g., `ALLOW` or `BLOCK`
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAclRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleAction)(nil)).Elem()
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionOutput() WebAclRuleActionOutput {
	return i.ToWebAclRuleActionOutputWithContext(context.Background())
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionOutputWithContext(ctx context.Context) WebAclRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionOutput)
}

func (i WebAclRuleActionArgs) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleAction] {
	return pulumix.Output[WebAclRuleAction]{
		OutputState: i.ToWebAclRuleActionOutputWithContext(ctx).OutputState,
	}
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionPtrOutput() WebAclRuleActionPtrOutput {
	return i.ToWebAclRuleActionPtrOutputWithContext(context.Background())
}

func (i WebAclRuleActionArgs) ToWebAclRuleActionPtrOutputWithContext(ctx context.Context) WebAclRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionOutput).ToWebAclRuleActionPtrOutputWithContext(ctx)
}

// WebAclRuleActionPtrInput is an input type that accepts WebAclRuleActionArgs, WebAclRuleActionPtr and WebAclRuleActionPtrOutput values.
// You can construct a concrete instance of `WebAclRuleActionPtrInput` via:
//
//	        WebAclRuleActionArgs{...}
//
//	or:
//
//	        nil
type WebAclRuleActionPtrInput interface {
	pulumi.Input

	ToWebAclRuleActionPtrOutput() WebAclRuleActionPtrOutput
	ToWebAclRuleActionPtrOutputWithContext(context.Context) WebAclRuleActionPtrOutput
}

type webAclRuleActionPtrType WebAclRuleActionArgs

func WebAclRuleActionPtr(v *WebAclRuleActionArgs) WebAclRuleActionPtrInput {
	return (*webAclRuleActionPtrType)(v)
}

func (*webAclRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRuleAction)(nil)).Elem()
}

func (i *webAclRuleActionPtrType) ToWebAclRuleActionPtrOutput() WebAclRuleActionPtrOutput {
	return i.ToWebAclRuleActionPtrOutputWithContext(context.Background())
}

func (i *webAclRuleActionPtrType) ToWebAclRuleActionPtrOutputWithContext(ctx context.Context) WebAclRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleActionPtrOutput)
}

func (i *webAclRuleActionPtrType) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleAction] {
	return pulumix.Output[*WebAclRuleAction]{
		OutputState: i.ToWebAclRuleActionPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclRuleActionOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleAction)(nil)).Elem()
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionOutput() WebAclRuleActionOutput {
	return o
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionOutputWithContext(ctx context.Context) WebAclRuleActionOutput {
	return o
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionPtrOutput() WebAclRuleActionPtrOutput {
	return o.ToWebAclRuleActionPtrOutputWithContext(context.Background())
}

func (o WebAclRuleActionOutput) ToWebAclRuleActionPtrOutputWithContext(ctx context.Context) WebAclRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclRuleAction) *WebAclRuleAction {
		return &v
	}).(WebAclRuleActionPtrOutput)
}

func (o WebAclRuleActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleAction] {
	return pulumix.Output[WebAclRuleAction]{
		OutputState: o.OutputState,
	}
}

// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
// e.g., `ALLOW` or `BLOCK`
func (o WebAclRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAclRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type WebAclRuleActionPtrOutput struct{ *pulumi.OutputState }

func (WebAclRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRuleAction)(nil)).Elem()
}

func (o WebAclRuleActionPtrOutput) ToWebAclRuleActionPtrOutput() WebAclRuleActionPtrOutput {
	return o
}

func (o WebAclRuleActionPtrOutput) ToWebAclRuleActionPtrOutputWithContext(ctx context.Context) WebAclRuleActionPtrOutput {
	return o
}

func (o WebAclRuleActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleAction] {
	return pulumix.Output[*WebAclRuleAction]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRuleActionPtrOutput) Elem() WebAclRuleActionOutput {
	return o.ApplyT(func(v *WebAclRuleAction) WebAclRuleAction {
		if v != nil {
			return *v
		}
		var ret WebAclRuleAction
		return ret
	}).(WebAclRuleActionOutput)
}

// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
// e.g., `ALLOW` or `BLOCK`
func (o WebAclRuleActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAclRuleAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WebAclRuleOverrideAction struct {
	// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
	// e.g., `ALLOW` or `BLOCK`
	Type string `pulumi:"type"`
}

// WebAclRuleOverrideActionInput is an input type that accepts WebAclRuleOverrideActionArgs and WebAclRuleOverrideActionOutput values.
// You can construct a concrete instance of `WebAclRuleOverrideActionInput` via:
//
//	WebAclRuleOverrideActionArgs{...}
type WebAclRuleOverrideActionInput interface {
	pulumi.Input

	ToWebAclRuleOverrideActionOutput() WebAclRuleOverrideActionOutput
	ToWebAclRuleOverrideActionOutputWithContext(context.Context) WebAclRuleOverrideActionOutput
}

type WebAclRuleOverrideActionArgs struct {
	// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
	// e.g., `ALLOW` or `BLOCK`
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebAclRuleOverrideActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideAction)(nil)).Elem()
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionOutput() WebAclRuleOverrideActionOutput {
	return i.ToWebAclRuleOverrideActionOutputWithContext(context.Background())
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionOutputWithContext(ctx context.Context) WebAclRuleOverrideActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOverrideActionOutput)
}

func (i WebAclRuleOverrideActionArgs) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleOverrideAction] {
	return pulumix.Output[WebAclRuleOverrideAction]{
		OutputState: i.ToWebAclRuleOverrideActionOutputWithContext(ctx).OutputState,
	}
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionPtrOutput() WebAclRuleOverrideActionPtrOutput {
	return i.ToWebAclRuleOverrideActionPtrOutputWithContext(context.Background())
}

func (i WebAclRuleOverrideActionArgs) ToWebAclRuleOverrideActionPtrOutputWithContext(ctx context.Context) WebAclRuleOverrideActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOverrideActionOutput).ToWebAclRuleOverrideActionPtrOutputWithContext(ctx)
}

// WebAclRuleOverrideActionPtrInput is an input type that accepts WebAclRuleOverrideActionArgs, WebAclRuleOverrideActionPtr and WebAclRuleOverrideActionPtrOutput values.
// You can construct a concrete instance of `WebAclRuleOverrideActionPtrInput` via:
//
//	        WebAclRuleOverrideActionArgs{...}
//
//	or:
//
//	        nil
type WebAclRuleOverrideActionPtrInput interface {
	pulumi.Input

	ToWebAclRuleOverrideActionPtrOutput() WebAclRuleOverrideActionPtrOutput
	ToWebAclRuleOverrideActionPtrOutputWithContext(context.Context) WebAclRuleOverrideActionPtrOutput
}

type webAclRuleOverrideActionPtrType WebAclRuleOverrideActionArgs

func WebAclRuleOverrideActionPtr(v *WebAclRuleOverrideActionArgs) WebAclRuleOverrideActionPtrInput {
	return (*webAclRuleOverrideActionPtrType)(v)
}

func (*webAclRuleOverrideActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRuleOverrideAction)(nil)).Elem()
}

func (i *webAclRuleOverrideActionPtrType) ToWebAclRuleOverrideActionPtrOutput() WebAclRuleOverrideActionPtrOutput {
	return i.ToWebAclRuleOverrideActionPtrOutputWithContext(context.Background())
}

func (i *webAclRuleOverrideActionPtrType) ToWebAclRuleOverrideActionPtrOutputWithContext(ctx context.Context) WebAclRuleOverrideActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclRuleOverrideActionPtrOutput)
}

func (i *webAclRuleOverrideActionPtrType) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleOverrideAction] {
	return pulumix.Output[*WebAclRuleOverrideAction]{
		OutputState: i.ToWebAclRuleOverrideActionPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclRuleOverrideActionOutput struct{ *pulumi.OutputState }

func (WebAclRuleOverrideActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRuleOverrideAction)(nil)).Elem()
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionOutput() WebAclRuleOverrideActionOutput {
	return o
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionOutputWithContext(ctx context.Context) WebAclRuleOverrideActionOutput {
	return o
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionPtrOutput() WebAclRuleOverrideActionPtrOutput {
	return o.ToWebAclRuleOverrideActionPtrOutputWithContext(context.Background())
}

func (o WebAclRuleOverrideActionOutput) ToWebAclRuleOverrideActionPtrOutputWithContext(ctx context.Context) WebAclRuleOverrideActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclRuleOverrideAction) *WebAclRuleOverrideAction {
		return &v
	}).(WebAclRuleOverrideActionPtrOutput)
}

func (o WebAclRuleOverrideActionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRuleOverrideAction] {
	return pulumix.Output[WebAclRuleOverrideAction]{
		OutputState: o.OutputState,
	}
}

// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
// e.g., `ALLOW` or `BLOCK`
func (o WebAclRuleOverrideActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebAclRuleOverrideAction) string { return v.Type }).(pulumi.StringOutput)
}

type WebAclRuleOverrideActionPtrOutput struct{ *pulumi.OutputState }

func (WebAclRuleOverrideActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRuleOverrideAction)(nil)).Elem()
}

func (o WebAclRuleOverrideActionPtrOutput) ToWebAclRuleOverrideActionPtrOutput() WebAclRuleOverrideActionPtrOutput {
	return o
}

func (o WebAclRuleOverrideActionPtrOutput) ToWebAclRuleOverrideActionPtrOutputWithContext(ctx context.Context) WebAclRuleOverrideActionPtrOutput {
	return o
}

func (o WebAclRuleOverrideActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclRuleOverrideAction] {
	return pulumix.Output[*WebAclRuleOverrideAction]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRuleOverrideActionPtrOutput) Elem() WebAclRuleOverrideActionOutput {
	return o.ApplyT(func(v *WebAclRuleOverrideAction) WebAclRuleOverrideAction {
		if v != nil {
			return *v
		}
		var ret WebAclRuleOverrideAction
		return ret
	}).(WebAclRuleOverrideActionOutput)
}

// Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the `rules`.
// e.g., `ALLOW` or `BLOCK`
func (o WebAclRuleOverrideActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAclRuleOverrideAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type XssMatchSetXssMatchTuple struct {
	// Specifies where in a web request to look for cross-site scripting attacks.
	FieldToMatch XssMatchSetXssMatchTupleFieldToMatch `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `targetString` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_XssMatchTuple.html#WAF-Type-XssMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation string `pulumi:"textTransformation"`
}

// XssMatchSetXssMatchTupleInput is an input type that accepts XssMatchSetXssMatchTupleArgs and XssMatchSetXssMatchTupleOutput values.
// You can construct a concrete instance of `XssMatchSetXssMatchTupleInput` via:
//
//	XssMatchSetXssMatchTupleArgs{...}
type XssMatchSetXssMatchTupleInput interface {
	pulumi.Input

	ToXssMatchSetXssMatchTupleOutput() XssMatchSetXssMatchTupleOutput
	ToXssMatchSetXssMatchTupleOutputWithContext(context.Context) XssMatchSetXssMatchTupleOutput
}

type XssMatchSetXssMatchTupleArgs struct {
	// Specifies where in a web request to look for cross-site scripting attacks.
	FieldToMatch XssMatchSetXssMatchTupleFieldToMatchInput `pulumi:"fieldToMatch"`
	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on `targetString` before inspecting a request for a match.
	// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_XssMatchTuple.html#WAF-Type-XssMatchTuple-TextTransformation)
	// for all supported values.
	TextTransformation pulumi.StringInput `pulumi:"textTransformation"`
}

func (XssMatchSetXssMatchTupleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTuple)(nil)).Elem()
}

func (i XssMatchSetXssMatchTupleArgs) ToXssMatchSetXssMatchTupleOutput() XssMatchSetXssMatchTupleOutput {
	return i.ToXssMatchSetXssMatchTupleOutputWithContext(context.Background())
}

func (i XssMatchSetXssMatchTupleArgs) ToXssMatchSetXssMatchTupleOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XssMatchSetXssMatchTupleOutput)
}

func (i XssMatchSetXssMatchTupleArgs) ToOutput(ctx context.Context) pulumix.Output[XssMatchSetXssMatchTuple] {
	return pulumix.Output[XssMatchSetXssMatchTuple]{
		OutputState: i.ToXssMatchSetXssMatchTupleOutputWithContext(ctx).OutputState,
	}
}

// XssMatchSetXssMatchTupleArrayInput is an input type that accepts XssMatchSetXssMatchTupleArray and XssMatchSetXssMatchTupleArrayOutput values.
// You can construct a concrete instance of `XssMatchSetXssMatchTupleArrayInput` via:
//
//	XssMatchSetXssMatchTupleArray{ XssMatchSetXssMatchTupleArgs{...} }
type XssMatchSetXssMatchTupleArrayInput interface {
	pulumi.Input

	ToXssMatchSetXssMatchTupleArrayOutput() XssMatchSetXssMatchTupleArrayOutput
	ToXssMatchSetXssMatchTupleArrayOutputWithContext(context.Context) XssMatchSetXssMatchTupleArrayOutput
}

type XssMatchSetXssMatchTupleArray []XssMatchSetXssMatchTupleInput

func (XssMatchSetXssMatchTupleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XssMatchSetXssMatchTuple)(nil)).Elem()
}

func (i XssMatchSetXssMatchTupleArray) ToXssMatchSetXssMatchTupleArrayOutput() XssMatchSetXssMatchTupleArrayOutput {
	return i.ToXssMatchSetXssMatchTupleArrayOutputWithContext(context.Background())
}

func (i XssMatchSetXssMatchTupleArray) ToXssMatchSetXssMatchTupleArrayOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XssMatchSetXssMatchTupleArrayOutput)
}

func (i XssMatchSetXssMatchTupleArray) ToOutput(ctx context.Context) pulumix.Output[[]XssMatchSetXssMatchTuple] {
	return pulumix.Output[[]XssMatchSetXssMatchTuple]{
		OutputState: i.ToXssMatchSetXssMatchTupleArrayOutputWithContext(ctx).OutputState,
	}
}

type XssMatchSetXssMatchTupleOutput struct{ *pulumi.OutputState }

func (XssMatchSetXssMatchTupleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTuple)(nil)).Elem()
}

func (o XssMatchSetXssMatchTupleOutput) ToXssMatchSetXssMatchTupleOutput() XssMatchSetXssMatchTupleOutput {
	return o
}

func (o XssMatchSetXssMatchTupleOutput) ToXssMatchSetXssMatchTupleOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleOutput {
	return o
}

func (o XssMatchSetXssMatchTupleOutput) ToOutput(ctx context.Context) pulumix.Output[XssMatchSetXssMatchTuple] {
	return pulumix.Output[XssMatchSetXssMatchTuple]{
		OutputState: o.OutputState,
	}
}

// Specifies where in a web request to look for cross-site scripting attacks.
func (o XssMatchSetXssMatchTupleOutput) FieldToMatch() XssMatchSetXssMatchTupleFieldToMatchOutput {
	return o.ApplyT(func(v XssMatchSetXssMatchTuple) XssMatchSetXssMatchTupleFieldToMatch { return v.FieldToMatch }).(XssMatchSetXssMatchTupleFieldToMatchOutput)
}

// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
// If you specify a transformation, AWS WAF performs the transformation on `targetString` before inspecting a request for a match.
// e.g., `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_XssMatchTuple.html#WAF-Type-XssMatchTuple-TextTransformation)
// for all supported values.
func (o XssMatchSetXssMatchTupleOutput) TextTransformation() pulumi.StringOutput {
	return o.ApplyT(func(v XssMatchSetXssMatchTuple) string { return v.TextTransformation }).(pulumi.StringOutput)
}

type XssMatchSetXssMatchTupleArrayOutput struct{ *pulumi.OutputState }

func (XssMatchSetXssMatchTupleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XssMatchSetXssMatchTuple)(nil)).Elem()
}

func (o XssMatchSetXssMatchTupleArrayOutput) ToXssMatchSetXssMatchTupleArrayOutput() XssMatchSetXssMatchTupleArrayOutput {
	return o
}

func (o XssMatchSetXssMatchTupleArrayOutput) ToXssMatchSetXssMatchTupleArrayOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleArrayOutput {
	return o
}

func (o XssMatchSetXssMatchTupleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]XssMatchSetXssMatchTuple] {
	return pulumix.Output[[]XssMatchSetXssMatchTuple]{
		OutputState: o.OutputState,
	}
}

func (o XssMatchSetXssMatchTupleArrayOutput) Index(i pulumi.IntInput) XssMatchSetXssMatchTupleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) XssMatchSetXssMatchTuple {
		return vs[0].([]XssMatchSetXssMatchTuple)[vs[1].(int)]
	}).(XssMatchSetXssMatchTupleOutput)
}

type XssMatchSetXssMatchTupleFieldToMatch struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data *string `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type string `pulumi:"type"`
}

// XssMatchSetXssMatchTupleFieldToMatchInput is an input type that accepts XssMatchSetXssMatchTupleFieldToMatchArgs and XssMatchSetXssMatchTupleFieldToMatchOutput values.
// You can construct a concrete instance of `XssMatchSetXssMatchTupleFieldToMatchInput` via:
//
//	XssMatchSetXssMatchTupleFieldToMatchArgs{...}
type XssMatchSetXssMatchTupleFieldToMatchInput interface {
	pulumi.Input

	ToXssMatchSetXssMatchTupleFieldToMatchOutput() XssMatchSetXssMatchTupleFieldToMatchOutput
	ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(context.Context) XssMatchSetXssMatchTupleFieldToMatchOutput
}

type XssMatchSetXssMatchTupleFieldToMatchArgs struct {
	// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
	// If `type` is any other value, omit this field.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., `HEADER`, `METHOD` or `BODY`.
	// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
	// for all supported values.
	Type pulumi.StringInput `pulumi:"type"`
}

func (XssMatchSetXssMatchTupleFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTupleFieldToMatch)(nil)).Elem()
}

func (i XssMatchSetXssMatchTupleFieldToMatchArgs) ToXssMatchSetXssMatchTupleFieldToMatchOutput() XssMatchSetXssMatchTupleFieldToMatchOutput {
	return i.ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(context.Background())
}

func (i XssMatchSetXssMatchTupleFieldToMatchArgs) ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XssMatchSetXssMatchTupleFieldToMatchOutput)
}

func (i XssMatchSetXssMatchTupleFieldToMatchArgs) ToOutput(ctx context.Context) pulumix.Output[XssMatchSetXssMatchTupleFieldToMatch] {
	return pulumix.Output[XssMatchSetXssMatchTupleFieldToMatch]{
		OutputState: i.ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(ctx).OutputState,
	}
}

type XssMatchSetXssMatchTupleFieldToMatchOutput struct{ *pulumi.OutputState }

func (XssMatchSetXssMatchTupleFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XssMatchSetXssMatchTupleFieldToMatch)(nil)).Elem()
}

func (o XssMatchSetXssMatchTupleFieldToMatchOutput) ToXssMatchSetXssMatchTupleFieldToMatchOutput() XssMatchSetXssMatchTupleFieldToMatchOutput {
	return o
}

func (o XssMatchSetXssMatchTupleFieldToMatchOutput) ToXssMatchSetXssMatchTupleFieldToMatchOutputWithContext(ctx context.Context) XssMatchSetXssMatchTupleFieldToMatchOutput {
	return o
}

func (o XssMatchSetXssMatchTupleFieldToMatchOutput) ToOutput(ctx context.Context) pulumix.Output[XssMatchSetXssMatchTupleFieldToMatch] {
	return pulumix.Output[XssMatchSetXssMatchTupleFieldToMatch]{
		OutputState: o.OutputState,
	}
}

// When `type` is `HEADER`, enter the name of the header that you want to search, e.g., `User-Agent` or `Referer`.
// If `type` is any other value, omit this field.
func (o XssMatchSetXssMatchTupleFieldToMatchOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XssMatchSetXssMatchTupleFieldToMatch) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The part of the web request that you want AWS WAF to search for a specified string.
// e.g., `HEADER`, `METHOD` or `BODY`.
// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
// for all supported values.
func (o XssMatchSetXssMatchTupleFieldToMatchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v XssMatchSetXssMatchTupleFieldToMatch) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ByteMatchSetByteMatchTupleInput)(nil)).Elem(), ByteMatchSetByteMatchTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByteMatchSetByteMatchTupleArrayInput)(nil)).Elem(), ByteMatchSetByteMatchTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByteMatchSetByteMatchTupleFieldToMatchInput)(nil)).Elem(), ByteMatchSetByteMatchTupleFieldToMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeoMatchSetGeoMatchConstraintInput)(nil)).Elem(), GeoMatchSetGeoMatchConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GeoMatchSetGeoMatchConstraintArrayInput)(nil)).Elem(), GeoMatchSetGeoMatchConstraintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetIpSetDescriptorInput)(nil)).Elem(), IpSetIpSetDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetIpSetDescriptorArrayInput)(nil)).Elem(), IpSetIpSetDescriptorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateBasedRulePredicateInput)(nil)).Elem(), RateBasedRulePredicateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RateBasedRulePredicateArrayInput)(nil)).Elem(), RateBasedRulePredicateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegexMatchSetRegexMatchTupleInput)(nil)).Elem(), RegexMatchSetRegexMatchTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegexMatchSetRegexMatchTupleArrayInput)(nil)).Elem(), RegexMatchSetRegexMatchTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegexMatchSetRegexMatchTupleFieldToMatchInput)(nil)).Elem(), RegexMatchSetRegexMatchTupleFieldToMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupActivatedRuleInput)(nil)).Elem(), RuleGroupActivatedRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupActivatedRuleArrayInput)(nil)).Elem(), RuleGroupActivatedRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupActivatedRuleActionInput)(nil)).Elem(), RuleGroupActivatedRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulePredicateInput)(nil)).Elem(), RulePredicateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulePredicateArrayInput)(nil)).Elem(), RulePredicateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SizeConstraintSetSizeConstraintInput)(nil)).Elem(), SizeConstraintSetSizeConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SizeConstraintSetSizeConstraintArrayInput)(nil)).Elem(), SizeConstraintSetSizeConstraintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SizeConstraintSetSizeConstraintFieldToMatchInput)(nil)).Elem(), SizeConstraintSetSizeConstraintFieldToMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTupleInput)(nil)).Elem(), SqlInjectionMatchSetSqlInjectionMatchTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTupleArrayInput)(nil)).Elem(), SqlInjectionMatchSetSqlInjectionMatchTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchInput)(nil)).Elem(), SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclDefaultActionInput)(nil)).Elem(), WebAclDefaultActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclDefaultActionPtrInput)(nil)).Elem(), WebAclDefaultActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLoggingConfigurationInput)(nil)).Elem(), WebAclLoggingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLoggingConfigurationPtrInput)(nil)).Elem(), WebAclLoggingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsInput)(nil)).Elem(), WebAclLoggingConfigurationRedactedFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsPtrInput)(nil)).Elem(), WebAclLoggingConfigurationRedactedFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsFieldToMatchInput)(nil)).Elem(), WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayInput)(nil)).Elem(), WebAclLoggingConfigurationRedactedFieldsFieldToMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleInput)(nil)).Elem(), WebAclRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleArrayInput)(nil)).Elem(), WebAclRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleActionInput)(nil)).Elem(), WebAclRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleActionPtrInput)(nil)).Elem(), WebAclRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleOverrideActionInput)(nil)).Elem(), WebAclRuleOverrideActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRuleOverrideActionPtrInput)(nil)).Elem(), WebAclRuleOverrideActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XssMatchSetXssMatchTupleInput)(nil)).Elem(), XssMatchSetXssMatchTupleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XssMatchSetXssMatchTupleArrayInput)(nil)).Elem(), XssMatchSetXssMatchTupleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*XssMatchSetXssMatchTupleFieldToMatchInput)(nil)).Elem(), XssMatchSetXssMatchTupleFieldToMatchArgs{})
	pulumi.RegisterOutputType(ByteMatchSetByteMatchTupleOutput{})
	pulumi.RegisterOutputType(ByteMatchSetByteMatchTupleArrayOutput{})
	pulumi.RegisterOutputType(ByteMatchSetByteMatchTupleFieldToMatchOutput{})
	pulumi.RegisterOutputType(GeoMatchSetGeoMatchConstraintOutput{})
	pulumi.RegisterOutputType(GeoMatchSetGeoMatchConstraintArrayOutput{})
	pulumi.RegisterOutputType(IpSetIpSetDescriptorOutput{})
	pulumi.RegisterOutputType(IpSetIpSetDescriptorArrayOutput{})
	pulumi.RegisterOutputType(RateBasedRulePredicateOutput{})
	pulumi.RegisterOutputType(RateBasedRulePredicateArrayOutput{})
	pulumi.RegisterOutputType(RegexMatchSetRegexMatchTupleOutput{})
	pulumi.RegisterOutputType(RegexMatchSetRegexMatchTupleArrayOutput{})
	pulumi.RegisterOutputType(RegexMatchSetRegexMatchTupleFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupActivatedRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupActivatedRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupActivatedRuleActionOutput{})
	pulumi.RegisterOutputType(RulePredicateOutput{})
	pulumi.RegisterOutputType(RulePredicateArrayOutput{})
	pulumi.RegisterOutputType(SizeConstraintSetSizeConstraintOutput{})
	pulumi.RegisterOutputType(SizeConstraintSetSizeConstraintArrayOutput{})
	pulumi.RegisterOutputType(SizeConstraintSetSizeConstraintFieldToMatchOutput{})
	pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTupleOutput{})
	pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTupleArrayOutput{})
	pulumi.RegisterOutputType(SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionOutput{})
	pulumi.RegisterOutputType(WebAclDefaultActionPtrOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldsOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldsPtrOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldsFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebAclLoggingConfigurationRedactedFieldsFieldToMatchArrayOutput{})
	pulumi.RegisterOutputType(WebAclRuleOutput{})
	pulumi.RegisterOutputType(WebAclRuleArrayOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionOutput{})
	pulumi.RegisterOutputType(WebAclRuleActionPtrOutput{})
	pulumi.RegisterOutputType(WebAclRuleOverrideActionOutput{})
	pulumi.RegisterOutputType(WebAclRuleOverrideActionPtrOutput{})
	pulumi.RegisterOutputType(XssMatchSetXssMatchTupleOutput{})
	pulumi.RegisterOutputType(XssMatchSetXssMatchTupleArrayOutput{})
	pulumi.RegisterOutputType(XssMatchSetXssMatchTupleFieldToMatchOutput{})
}
