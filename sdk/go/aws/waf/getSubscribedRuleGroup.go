// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `waf.getSubscribedRuleGroup` retrieves information about a Managed WAF Rule Group from AWS Marketplace (needs to be subscribed to first).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			byName, err := waf.GetSubscribedRuleGroup(ctx, &waf.GetSubscribedRuleGroupArgs{
//				Name: pulumi.StringRef("F5 Bot Detection Signatures For AWS WAF"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			byMetricName, err := waf.GetSubscribedRuleGroup(ctx, &waf.GetSubscribedRuleGroupArgs{
//				MetricName: pulumi.StringRef("F5BotDetectionSignatures"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = waf.NewWebAcl(ctx, "acl", &waf.WebAclArgs{
//				Rules: waf.WebAclRuleArray{
//					&waf.WebAclRuleArgs{
//						Priority: pulumi.Int(1),
//						RuleId:   *pulumi.String(byName.Id),
//						Type:     pulumi.String("GROUP"),
//					},
//					&waf.WebAclRuleArgs{
//						Priority: pulumi.Int(2),
//						RuleId:   *pulumi.String(byMetricName.Id),
//						Type:     pulumi.String("GROUP"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubscribedRuleGroup(ctx *pulumi.Context, args *GetSubscribedRuleGroupArgs, opts ...pulumi.InvokeOption) (*GetSubscribedRuleGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubscribedRuleGroupResult
	err := ctx.Invoke("aws:waf/getSubscribedRuleGroup:getSubscribedRuleGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscribedRuleGroup.
type GetSubscribedRuleGroupArgs struct {
	// Name of the WAF rule group.
	MetricName *string `pulumi:"metricName"`
	// Name of the WAF rule group.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getSubscribedRuleGroup.
type GetSubscribedRuleGroupResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	MetricName *string `pulumi:"metricName"`
	Name       *string `pulumi:"name"`
}

func GetSubscribedRuleGroupOutput(ctx *pulumi.Context, args GetSubscribedRuleGroupOutputArgs, opts ...pulumi.InvokeOption) GetSubscribedRuleGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubscribedRuleGroupResult, error) {
			args := v.(GetSubscribedRuleGroupArgs)
			r, err := GetSubscribedRuleGroup(ctx, &args, opts...)
			var s GetSubscribedRuleGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubscribedRuleGroupResultOutput)
}

// A collection of arguments for invoking getSubscribedRuleGroup.
type GetSubscribedRuleGroupOutputArgs struct {
	// Name of the WAF rule group.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Name of the WAF rule group.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetSubscribedRuleGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedRuleGroupArgs)(nil)).Elem()
}

// A collection of values returned by getSubscribedRuleGroup.
type GetSubscribedRuleGroupResultOutput struct{ *pulumi.OutputState }

func (GetSubscribedRuleGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubscribedRuleGroupResult)(nil)).Elem()
}

func (o GetSubscribedRuleGroupResultOutput) ToGetSubscribedRuleGroupResultOutput() GetSubscribedRuleGroupResultOutput {
	return o
}

func (o GetSubscribedRuleGroupResultOutput) ToGetSubscribedRuleGroupResultOutputWithContext(ctx context.Context) GetSubscribedRuleGroupResultOutput {
	return o
}

func (o GetSubscribedRuleGroupResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubscribedRuleGroupResult] {
	return pulumix.Output[GetSubscribedRuleGroupResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubscribedRuleGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubscribedRuleGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubscribedRuleGroupResultOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscribedRuleGroupResult) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

func (o GetSubscribedRuleGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubscribedRuleGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubscribedRuleGroupResultOutput{})
}
