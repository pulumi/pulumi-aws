// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/chime"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultVoiceConnector, err := chime.NewVoiceConnector(ctx, "defaultVoiceConnector", &chime.VoiceConnectorArgs{
// 			RequireEncryption: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = chime.NewVoiceConnectorLogging(ctx, "defaultVoiceConnectorLogging", &chime.VoiceConnectorLoggingArgs{
// 			EnableSipLogs:    pulumi.Bool(true),
// 			VoiceConnectorId: defaultVoiceConnector.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Chime Voice Connector Logging can be imported using the `voice_connector_id`, e.g.,
//
// ```sh
//  $ pulumi import aws:chime/voiceConnectorLogging:VoiceConnectorLogging default abcdef1ghij2klmno3pqr4
// ```
type VoiceConnectorLogging struct {
	pulumi.CustomResourceState

	// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
	EnableSipLogs pulumi.BoolPtrOutput `pulumi:"enableSipLogs"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumi.StringOutput `pulumi:"voiceConnectorId"`
}

// NewVoiceConnectorLogging registers a new resource with the given unique name, arguments, and options.
func NewVoiceConnectorLogging(ctx *pulumi.Context,
	name string, args *VoiceConnectorLoggingArgs, opts ...pulumi.ResourceOption) (*VoiceConnectorLogging, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VoiceConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'VoiceConnectorId'")
	}
	var resource VoiceConnectorLogging
	err := ctx.RegisterResource("aws:chime/voiceConnectorLogging:VoiceConnectorLogging", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVoiceConnectorLogging gets an existing VoiceConnectorLogging resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVoiceConnectorLogging(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VoiceConnectorLoggingState, opts ...pulumi.ResourceOption) (*VoiceConnectorLogging, error) {
	var resource VoiceConnectorLogging
	err := ctx.ReadResource("aws:chime/voiceConnectorLogging:VoiceConnectorLogging", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VoiceConnectorLogging resources.
type voiceConnectorLoggingState struct {
	// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
	EnableSipLogs *bool `pulumi:"enableSipLogs"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId *string `pulumi:"voiceConnectorId"`
}

type VoiceConnectorLoggingState struct {
	// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
	EnableSipLogs pulumi.BoolPtrInput
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumi.StringPtrInput
}

func (VoiceConnectorLoggingState) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorLoggingState)(nil)).Elem()
}

type voiceConnectorLoggingArgs struct {
	// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
	EnableSipLogs *bool `pulumi:"enableSipLogs"`
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId string `pulumi:"voiceConnectorId"`
}

// The set of arguments for constructing a VoiceConnectorLogging resource.
type VoiceConnectorLoggingArgs struct {
	// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
	EnableSipLogs pulumi.BoolPtrInput
	// The Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumi.StringInput
}

func (VoiceConnectorLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorLoggingArgs)(nil)).Elem()
}

type VoiceConnectorLoggingInput interface {
	pulumi.Input

	ToVoiceConnectorLoggingOutput() VoiceConnectorLoggingOutput
	ToVoiceConnectorLoggingOutputWithContext(ctx context.Context) VoiceConnectorLoggingOutput
}

func (*VoiceConnectorLogging) ElementType() reflect.Type {
	return reflect.TypeOf((**VoiceConnectorLogging)(nil)).Elem()
}

func (i *VoiceConnectorLogging) ToVoiceConnectorLoggingOutput() VoiceConnectorLoggingOutput {
	return i.ToVoiceConnectorLoggingOutputWithContext(context.Background())
}

func (i *VoiceConnectorLogging) ToVoiceConnectorLoggingOutputWithContext(ctx context.Context) VoiceConnectorLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorLoggingOutput)
}

// VoiceConnectorLoggingArrayInput is an input type that accepts VoiceConnectorLoggingArray and VoiceConnectorLoggingArrayOutput values.
// You can construct a concrete instance of `VoiceConnectorLoggingArrayInput` via:
//
//          VoiceConnectorLoggingArray{ VoiceConnectorLoggingArgs{...} }
type VoiceConnectorLoggingArrayInput interface {
	pulumi.Input

	ToVoiceConnectorLoggingArrayOutput() VoiceConnectorLoggingArrayOutput
	ToVoiceConnectorLoggingArrayOutputWithContext(context.Context) VoiceConnectorLoggingArrayOutput
}

type VoiceConnectorLoggingArray []VoiceConnectorLoggingInput

func (VoiceConnectorLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VoiceConnectorLogging)(nil)).Elem()
}

func (i VoiceConnectorLoggingArray) ToVoiceConnectorLoggingArrayOutput() VoiceConnectorLoggingArrayOutput {
	return i.ToVoiceConnectorLoggingArrayOutputWithContext(context.Background())
}

func (i VoiceConnectorLoggingArray) ToVoiceConnectorLoggingArrayOutputWithContext(ctx context.Context) VoiceConnectorLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorLoggingArrayOutput)
}

// VoiceConnectorLoggingMapInput is an input type that accepts VoiceConnectorLoggingMap and VoiceConnectorLoggingMapOutput values.
// You can construct a concrete instance of `VoiceConnectorLoggingMapInput` via:
//
//          VoiceConnectorLoggingMap{ "key": VoiceConnectorLoggingArgs{...} }
type VoiceConnectorLoggingMapInput interface {
	pulumi.Input

	ToVoiceConnectorLoggingMapOutput() VoiceConnectorLoggingMapOutput
	ToVoiceConnectorLoggingMapOutputWithContext(context.Context) VoiceConnectorLoggingMapOutput
}

type VoiceConnectorLoggingMap map[string]VoiceConnectorLoggingInput

func (VoiceConnectorLoggingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VoiceConnectorLogging)(nil)).Elem()
}

func (i VoiceConnectorLoggingMap) ToVoiceConnectorLoggingMapOutput() VoiceConnectorLoggingMapOutput {
	return i.ToVoiceConnectorLoggingMapOutputWithContext(context.Background())
}

func (i VoiceConnectorLoggingMap) ToVoiceConnectorLoggingMapOutputWithContext(ctx context.Context) VoiceConnectorLoggingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorLoggingMapOutput)
}

type VoiceConnectorLoggingOutput struct{ *pulumi.OutputState }

func (VoiceConnectorLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VoiceConnectorLogging)(nil)).Elem()
}

func (o VoiceConnectorLoggingOutput) ToVoiceConnectorLoggingOutput() VoiceConnectorLoggingOutput {
	return o
}

func (o VoiceConnectorLoggingOutput) ToVoiceConnectorLoggingOutputWithContext(ctx context.Context) VoiceConnectorLoggingOutput {
	return o
}

type VoiceConnectorLoggingArrayOutput struct{ *pulumi.OutputState }

func (VoiceConnectorLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VoiceConnectorLogging)(nil)).Elem()
}

func (o VoiceConnectorLoggingArrayOutput) ToVoiceConnectorLoggingArrayOutput() VoiceConnectorLoggingArrayOutput {
	return o
}

func (o VoiceConnectorLoggingArrayOutput) ToVoiceConnectorLoggingArrayOutputWithContext(ctx context.Context) VoiceConnectorLoggingArrayOutput {
	return o
}

func (o VoiceConnectorLoggingArrayOutput) Index(i pulumi.IntInput) VoiceConnectorLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VoiceConnectorLogging {
		return vs[0].([]*VoiceConnectorLogging)[vs[1].(int)]
	}).(VoiceConnectorLoggingOutput)
}

type VoiceConnectorLoggingMapOutput struct{ *pulumi.OutputState }

func (VoiceConnectorLoggingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VoiceConnectorLogging)(nil)).Elem()
}

func (o VoiceConnectorLoggingMapOutput) ToVoiceConnectorLoggingMapOutput() VoiceConnectorLoggingMapOutput {
	return o
}

func (o VoiceConnectorLoggingMapOutput) ToVoiceConnectorLoggingMapOutputWithContext(ctx context.Context) VoiceConnectorLoggingMapOutput {
	return o
}

func (o VoiceConnectorLoggingMapOutput) MapIndex(k pulumi.StringInput) VoiceConnectorLoggingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VoiceConnectorLogging {
		return vs[0].(map[string]*VoiceConnectorLogging)[vs[1].(string)]
	}).(VoiceConnectorLoggingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorLoggingInput)(nil)).Elem(), &VoiceConnectorLogging{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorLoggingArrayInput)(nil)).Elem(), VoiceConnectorLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorLoggingMapInput)(nil)).Elem(), VoiceConnectorLoggingMap{})
	pulumi.RegisterOutputType(VoiceConnectorLoggingOutput{})
	pulumi.RegisterOutputType(VoiceConnectorLoggingArrayOutput{})
	pulumi.RegisterOutputType(VoiceConnectorLoggingMapOutput{})
}
