// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VoiceConnectorStreaming struct {
	pulumi.CustomResourceState

	DataRetention                pulumi.IntOutput         `pulumi:"dataRetention"`
	Disabled                     pulumi.BoolPtrOutput     `pulumi:"disabled"`
	StreamingNotificationTargets pulumi.StringArrayOutput `pulumi:"streamingNotificationTargets"`
	VoiceConnectorId             pulumi.StringOutput      `pulumi:"voiceConnectorId"`
}

// NewVoiceConnectorStreaming registers a new resource with the given unique name, arguments, and options.
func NewVoiceConnectorStreaming(ctx *pulumi.Context,
	name string, args *VoiceConnectorStreamingArgs, opts ...pulumi.ResourceOption) (*VoiceConnectorStreaming, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataRetention == nil {
		return nil, errors.New("invalid value for required argument 'DataRetention'")
	}
	if args.VoiceConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'VoiceConnectorId'")
	}
	var resource VoiceConnectorStreaming
	err := ctx.RegisterResource("aws:chime/voiceConnectorStreaming:VoiceConnectorStreaming", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVoiceConnectorStreaming gets an existing VoiceConnectorStreaming resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVoiceConnectorStreaming(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VoiceConnectorStreamingState, opts ...pulumi.ResourceOption) (*VoiceConnectorStreaming, error) {
	var resource VoiceConnectorStreaming
	err := ctx.ReadResource("aws:chime/voiceConnectorStreaming:VoiceConnectorStreaming", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VoiceConnectorStreaming resources.
type voiceConnectorStreamingState struct {
	DataRetention                *int     `pulumi:"dataRetention"`
	Disabled                     *bool    `pulumi:"disabled"`
	StreamingNotificationTargets []string `pulumi:"streamingNotificationTargets"`
	VoiceConnectorId             *string  `pulumi:"voiceConnectorId"`
}

type VoiceConnectorStreamingState struct {
	DataRetention                pulumi.IntPtrInput
	Disabled                     pulumi.BoolPtrInput
	StreamingNotificationTargets pulumi.StringArrayInput
	VoiceConnectorId             pulumi.StringPtrInput
}

func (VoiceConnectorStreamingState) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorStreamingState)(nil)).Elem()
}

type voiceConnectorStreamingArgs struct {
	DataRetention                int      `pulumi:"dataRetention"`
	Disabled                     *bool    `pulumi:"disabled"`
	StreamingNotificationTargets []string `pulumi:"streamingNotificationTargets"`
	VoiceConnectorId             string   `pulumi:"voiceConnectorId"`
}

// The set of arguments for constructing a VoiceConnectorStreaming resource.
type VoiceConnectorStreamingArgs struct {
	DataRetention                pulumi.IntInput
	Disabled                     pulumi.BoolPtrInput
	StreamingNotificationTargets pulumi.StringArrayInput
	VoiceConnectorId             pulumi.StringInput
}

func (VoiceConnectorStreamingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorStreamingArgs)(nil)).Elem()
}

type VoiceConnectorStreamingInput interface {
	pulumi.Input

	ToVoiceConnectorStreamingOutput() VoiceConnectorStreamingOutput
	ToVoiceConnectorStreamingOutputWithContext(ctx context.Context) VoiceConnectorStreamingOutput
}

func (*VoiceConnectorStreaming) ElementType() reflect.Type {
	return reflect.TypeOf((**VoiceConnectorStreaming)(nil)).Elem()
}

func (i *VoiceConnectorStreaming) ToVoiceConnectorStreamingOutput() VoiceConnectorStreamingOutput {
	return i.ToVoiceConnectorStreamingOutputWithContext(context.Background())
}

func (i *VoiceConnectorStreaming) ToVoiceConnectorStreamingOutputWithContext(ctx context.Context) VoiceConnectorStreamingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorStreamingOutput)
}

// VoiceConnectorStreamingArrayInput is an input type that accepts VoiceConnectorStreamingArray and VoiceConnectorStreamingArrayOutput values.
// You can construct a concrete instance of `VoiceConnectorStreamingArrayInput` via:
//
//	VoiceConnectorStreamingArray{ VoiceConnectorStreamingArgs{...} }
type VoiceConnectorStreamingArrayInput interface {
	pulumi.Input

	ToVoiceConnectorStreamingArrayOutput() VoiceConnectorStreamingArrayOutput
	ToVoiceConnectorStreamingArrayOutputWithContext(context.Context) VoiceConnectorStreamingArrayOutput
}

type VoiceConnectorStreamingArray []VoiceConnectorStreamingInput

func (VoiceConnectorStreamingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VoiceConnectorStreaming)(nil)).Elem()
}

func (i VoiceConnectorStreamingArray) ToVoiceConnectorStreamingArrayOutput() VoiceConnectorStreamingArrayOutput {
	return i.ToVoiceConnectorStreamingArrayOutputWithContext(context.Background())
}

func (i VoiceConnectorStreamingArray) ToVoiceConnectorStreamingArrayOutputWithContext(ctx context.Context) VoiceConnectorStreamingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorStreamingArrayOutput)
}

// VoiceConnectorStreamingMapInput is an input type that accepts VoiceConnectorStreamingMap and VoiceConnectorStreamingMapOutput values.
// You can construct a concrete instance of `VoiceConnectorStreamingMapInput` via:
//
//	VoiceConnectorStreamingMap{ "key": VoiceConnectorStreamingArgs{...} }
type VoiceConnectorStreamingMapInput interface {
	pulumi.Input

	ToVoiceConnectorStreamingMapOutput() VoiceConnectorStreamingMapOutput
	ToVoiceConnectorStreamingMapOutputWithContext(context.Context) VoiceConnectorStreamingMapOutput
}

type VoiceConnectorStreamingMap map[string]VoiceConnectorStreamingInput

func (VoiceConnectorStreamingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VoiceConnectorStreaming)(nil)).Elem()
}

func (i VoiceConnectorStreamingMap) ToVoiceConnectorStreamingMapOutput() VoiceConnectorStreamingMapOutput {
	return i.ToVoiceConnectorStreamingMapOutputWithContext(context.Background())
}

func (i VoiceConnectorStreamingMap) ToVoiceConnectorStreamingMapOutputWithContext(ctx context.Context) VoiceConnectorStreamingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorStreamingMapOutput)
}

type VoiceConnectorStreamingOutput struct{ *pulumi.OutputState }

func (VoiceConnectorStreamingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VoiceConnectorStreaming)(nil)).Elem()
}

func (o VoiceConnectorStreamingOutput) ToVoiceConnectorStreamingOutput() VoiceConnectorStreamingOutput {
	return o
}

func (o VoiceConnectorStreamingOutput) ToVoiceConnectorStreamingOutputWithContext(ctx context.Context) VoiceConnectorStreamingOutput {
	return o
}

func (o VoiceConnectorStreamingOutput) DataRetention() pulumi.IntOutput {
	return o.ApplyT(func(v *VoiceConnectorStreaming) pulumi.IntOutput { return v.DataRetention }).(pulumi.IntOutput)
}

func (o VoiceConnectorStreamingOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VoiceConnectorStreaming) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o VoiceConnectorStreamingOutput) StreamingNotificationTargets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VoiceConnectorStreaming) pulumi.StringArrayOutput { return v.StreamingNotificationTargets }).(pulumi.StringArrayOutput)
}

func (o VoiceConnectorStreamingOutput) VoiceConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *VoiceConnectorStreaming) pulumi.StringOutput { return v.VoiceConnectorId }).(pulumi.StringOutput)
}

type VoiceConnectorStreamingArrayOutput struct{ *pulumi.OutputState }

func (VoiceConnectorStreamingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VoiceConnectorStreaming)(nil)).Elem()
}

func (o VoiceConnectorStreamingArrayOutput) ToVoiceConnectorStreamingArrayOutput() VoiceConnectorStreamingArrayOutput {
	return o
}

func (o VoiceConnectorStreamingArrayOutput) ToVoiceConnectorStreamingArrayOutputWithContext(ctx context.Context) VoiceConnectorStreamingArrayOutput {
	return o
}

func (o VoiceConnectorStreamingArrayOutput) Index(i pulumi.IntInput) VoiceConnectorStreamingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VoiceConnectorStreaming {
		return vs[0].([]*VoiceConnectorStreaming)[vs[1].(int)]
	}).(VoiceConnectorStreamingOutput)
}

type VoiceConnectorStreamingMapOutput struct{ *pulumi.OutputState }

func (VoiceConnectorStreamingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VoiceConnectorStreaming)(nil)).Elem()
}

func (o VoiceConnectorStreamingMapOutput) ToVoiceConnectorStreamingMapOutput() VoiceConnectorStreamingMapOutput {
	return o
}

func (o VoiceConnectorStreamingMapOutput) ToVoiceConnectorStreamingMapOutputWithContext(ctx context.Context) VoiceConnectorStreamingMapOutput {
	return o
}

func (o VoiceConnectorStreamingMapOutput) MapIndex(k pulumi.StringInput) VoiceConnectorStreamingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VoiceConnectorStreaming {
		return vs[0].(map[string]*VoiceConnectorStreaming)[vs[1].(string)]
	}).(VoiceConnectorStreamingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorStreamingInput)(nil)).Elem(), &VoiceConnectorStreaming{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorStreamingArrayInput)(nil)).Elem(), VoiceConnectorStreamingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorStreamingMapInput)(nil)).Elem(), VoiceConnectorStreamingMap{})
	pulumi.RegisterOutputType(VoiceConnectorStreamingOutput{})
	pulumi.RegisterOutputType(VoiceConnectorStreamingArrayOutput{})
	pulumi.RegisterOutputType(VoiceConnectorStreamingMapOutput{})
}
