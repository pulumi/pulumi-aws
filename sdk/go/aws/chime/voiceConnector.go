// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VoiceConnector struct {
	pulumi.CustomResourceState

	AwsRegion         pulumi.StringPtrOutput `pulumi:"awsRegion"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	OutboundHostName  pulumi.StringOutput    `pulumi:"outboundHostName"`
	RequireEncryption pulumi.BoolOutput      `pulumi:"requireEncryption"`
}

// NewVoiceConnector registers a new resource with the given unique name, arguments, and options.
func NewVoiceConnector(ctx *pulumi.Context,
	name string, args *VoiceConnectorArgs, opts ...pulumi.ResourceOption) (*VoiceConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RequireEncryption == nil {
		return nil, errors.New("invalid value for required argument 'RequireEncryption'")
	}
	var resource VoiceConnector
	err := ctx.RegisterResource("aws:chime/voiceConnector:VoiceConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVoiceConnector gets an existing VoiceConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVoiceConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VoiceConnectorState, opts ...pulumi.ResourceOption) (*VoiceConnector, error) {
	var resource VoiceConnector
	err := ctx.ReadResource("aws:chime/voiceConnector:VoiceConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VoiceConnector resources.
type voiceConnectorState struct {
	AwsRegion         *string `pulumi:"awsRegion"`
	Name              *string `pulumi:"name"`
	OutboundHostName  *string `pulumi:"outboundHostName"`
	RequireEncryption *bool   `pulumi:"requireEncryption"`
}

type VoiceConnectorState struct {
	AwsRegion         pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	OutboundHostName  pulumi.StringPtrInput
	RequireEncryption pulumi.BoolPtrInput
}

func (VoiceConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorState)(nil)).Elem()
}

type voiceConnectorArgs struct {
	AwsRegion         *string `pulumi:"awsRegion"`
	Name              *string `pulumi:"name"`
	RequireEncryption bool    `pulumi:"requireEncryption"`
}

// The set of arguments for constructing a VoiceConnector resource.
type VoiceConnectorArgs struct {
	AwsRegion         pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	RequireEncryption pulumi.BoolInput
}

func (VoiceConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorArgs)(nil)).Elem()
}

type VoiceConnectorInput interface {
	pulumi.Input

	ToVoiceConnectorOutput() VoiceConnectorOutput
	ToVoiceConnectorOutputWithContext(ctx context.Context) VoiceConnectorOutput
}

func (*VoiceConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**VoiceConnector)(nil)).Elem()
}

func (i *VoiceConnector) ToVoiceConnectorOutput() VoiceConnectorOutput {
	return i.ToVoiceConnectorOutputWithContext(context.Background())
}

func (i *VoiceConnector) ToVoiceConnectorOutputWithContext(ctx context.Context) VoiceConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorOutput)
}

// VoiceConnectorArrayInput is an input type that accepts VoiceConnectorArray and VoiceConnectorArrayOutput values.
// You can construct a concrete instance of `VoiceConnectorArrayInput` via:
//
//	VoiceConnectorArray{ VoiceConnectorArgs{...} }
type VoiceConnectorArrayInput interface {
	pulumi.Input

	ToVoiceConnectorArrayOutput() VoiceConnectorArrayOutput
	ToVoiceConnectorArrayOutputWithContext(context.Context) VoiceConnectorArrayOutput
}

type VoiceConnectorArray []VoiceConnectorInput

func (VoiceConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VoiceConnector)(nil)).Elem()
}

func (i VoiceConnectorArray) ToVoiceConnectorArrayOutput() VoiceConnectorArrayOutput {
	return i.ToVoiceConnectorArrayOutputWithContext(context.Background())
}

func (i VoiceConnectorArray) ToVoiceConnectorArrayOutputWithContext(ctx context.Context) VoiceConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorArrayOutput)
}

// VoiceConnectorMapInput is an input type that accepts VoiceConnectorMap and VoiceConnectorMapOutput values.
// You can construct a concrete instance of `VoiceConnectorMapInput` via:
//
//	VoiceConnectorMap{ "key": VoiceConnectorArgs{...} }
type VoiceConnectorMapInput interface {
	pulumi.Input

	ToVoiceConnectorMapOutput() VoiceConnectorMapOutput
	ToVoiceConnectorMapOutputWithContext(context.Context) VoiceConnectorMapOutput
}

type VoiceConnectorMap map[string]VoiceConnectorInput

func (VoiceConnectorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VoiceConnector)(nil)).Elem()
}

func (i VoiceConnectorMap) ToVoiceConnectorMapOutput() VoiceConnectorMapOutput {
	return i.ToVoiceConnectorMapOutputWithContext(context.Background())
}

func (i VoiceConnectorMap) ToVoiceConnectorMapOutputWithContext(ctx context.Context) VoiceConnectorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoiceConnectorMapOutput)
}

type VoiceConnectorOutput struct{ *pulumi.OutputState }

func (VoiceConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VoiceConnector)(nil)).Elem()
}

func (o VoiceConnectorOutput) ToVoiceConnectorOutput() VoiceConnectorOutput {
	return o
}

func (o VoiceConnectorOutput) ToVoiceConnectorOutputWithContext(ctx context.Context) VoiceConnectorOutput {
	return o
}

func (o VoiceConnectorOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VoiceConnector) pulumi.StringPtrOutput { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

func (o VoiceConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VoiceConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VoiceConnectorOutput) OutboundHostName() pulumi.StringOutput {
	return o.ApplyT(func(v *VoiceConnector) pulumi.StringOutput { return v.OutboundHostName }).(pulumi.StringOutput)
}

func (o VoiceConnectorOutput) RequireEncryption() pulumi.BoolOutput {
	return o.ApplyT(func(v *VoiceConnector) pulumi.BoolOutput { return v.RequireEncryption }).(pulumi.BoolOutput)
}

type VoiceConnectorArrayOutput struct{ *pulumi.OutputState }

func (VoiceConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VoiceConnector)(nil)).Elem()
}

func (o VoiceConnectorArrayOutput) ToVoiceConnectorArrayOutput() VoiceConnectorArrayOutput {
	return o
}

func (o VoiceConnectorArrayOutput) ToVoiceConnectorArrayOutputWithContext(ctx context.Context) VoiceConnectorArrayOutput {
	return o
}

func (o VoiceConnectorArrayOutput) Index(i pulumi.IntInput) VoiceConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VoiceConnector {
		return vs[0].([]*VoiceConnector)[vs[1].(int)]
	}).(VoiceConnectorOutput)
}

type VoiceConnectorMapOutput struct{ *pulumi.OutputState }

func (VoiceConnectorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VoiceConnector)(nil)).Elem()
}

func (o VoiceConnectorMapOutput) ToVoiceConnectorMapOutput() VoiceConnectorMapOutput {
	return o
}

func (o VoiceConnectorMapOutput) ToVoiceConnectorMapOutputWithContext(ctx context.Context) VoiceConnectorMapOutput {
	return o
}

func (o VoiceConnectorMapOutput) MapIndex(k pulumi.StringInput) VoiceConnectorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VoiceConnector {
		return vs[0].(map[string]*VoiceConnector)[vs[1].(string)]
	}).(VoiceConnectorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorInput)(nil)).Elem(), &VoiceConnector{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorArrayInput)(nil)).Elem(), VoiceConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoiceConnectorMapInput)(nil)).Elem(), VoiceConnectorMap{})
	pulumi.RegisterOutputType(VoiceConnectorOutput{})
	pulumi.RegisterOutputType(VoiceConnectorArrayOutput{})
	pulumi.RegisterOutputType(VoiceConnectorMapOutput{})
}
