// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an EKS Cluster.
type Cluster struct {
	s *pulumi.ResourceState
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOpt) (*Cluster, error) {
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil || args.VpcConfig == nil {
		return nil, errors.New("missing required argument 'VpcConfig'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["enabledClusterLogTypes"] = nil
		inputs["name"] = nil
		inputs["roleArn"] = nil
		inputs["version"] = nil
		inputs["vpcConfig"] = nil
	} else {
		inputs["enabledClusterLogTypes"] = args.EnabledClusterLogTypes
		inputs["name"] = args.Name
		inputs["roleArn"] = args.RoleArn
		inputs["version"] = args.Version
		inputs["vpcConfig"] = args.VpcConfig
	}
	inputs["arn"] = nil
	inputs["certificateAuthority"] = nil
	inputs["createdAt"] = nil
	inputs["endpoint"] = nil
	inputs["platformVersion"] = nil
	s, err := ctx.RegisterResource("aws:eks/cluster:Cluster", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Cluster{s: s}, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ClusterState, opts ...pulumi.ResourceOpt) (*Cluster, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["certificateAuthority"] = state.CertificateAuthority
		inputs["createdAt"] = state.CreatedAt
		inputs["enabledClusterLogTypes"] = state.EnabledClusterLogTypes
		inputs["endpoint"] = state.Endpoint
		inputs["name"] = state.Name
		inputs["platformVersion"] = state.PlatformVersion
		inputs["roleArn"] = state.RoleArn
		inputs["version"] = state.Version
		inputs["vpcConfig"] = state.VpcConfig
	}
	s, err := ctx.ReadResource("aws:eks/cluster:Cluster", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Cluster{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Cluster) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Cluster) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The Amazon Resource Name (ARN) of the cluster.
func (r *Cluster) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// Nested attribute containing `certificate-authority-data` for your cluster.
func (r *Cluster) CertificateAuthority() *pulumi.Output {
	return r.s.State["certificateAuthority"]
}

func (r *Cluster) CreatedAt() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createdAt"])
}

// A list of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
func (r *Cluster) EnabledClusterLogTypes() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["enabledClusterLogTypes"])
}

// The endpoint for your Kubernetes API server.
func (r *Cluster) Endpoint() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["endpoint"])
}

// Name of the cluster.
func (r *Cluster) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The platform version for the cluster.
func (r *Cluster) PlatformVersion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["platformVersion"])
}

// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
func (r *Cluster) RoleArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["roleArn"])
}

// Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
func (r *Cluster) Version() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["version"])
}

// Nested argument for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Configuration detailed below.
func (r *Cluster) VpcConfig() *pulumi.Output {
	return r.s.State["vpcConfig"]
}

// Input properties used for looking up and filtering Cluster resources.
type ClusterState struct {
	// The Amazon Resource Name (ARN) of the cluster.
	Arn interface{}
	// Nested attribute containing `certificate-authority-data` for your cluster.
	CertificateAuthority interface{}
	CreatedAt interface{}
	// A list of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
	EnabledClusterLogTypes interface{}
	// The endpoint for your Kubernetes API server.
	Endpoint interface{}
	// Name of the cluster.
	Name interface{}
	// The platform version for the cluster.
	PlatformVersion interface{}
	// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
	RoleArn interface{}
	// Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
	Version interface{}
	// Nested argument for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Configuration detailed below.
	VpcConfig interface{}
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// A list of the desired control plane logging to enable. For more information, see [Amazon EKS Control Plane Logging](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
	EnabledClusterLogTypes interface{}
	// Name of the cluster.
	Name interface{}
	// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
	RoleArn interface{}
	// Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
	Version interface{}
	// Nested argument for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Configuration detailed below.
	VpcConfig interface{}
}
