// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNodeGroup(ctx *pulumi.Context, args *LookupNodeGroupArgs, opts ...pulumi.InvokeOption) (*LookupNodeGroupResult, error) {
	var rv LookupNodeGroupResult
	err := ctx.Invoke("aws:eks/getNodeGroup:getNodeGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNodeGroup.
type LookupNodeGroupArgs struct {
	ClusterName   string            `pulumi:"clusterName"`
	NodeGroupName string            `pulumi:"nodeGroupName"`
	Tags          map[string]string `pulumi:"tags"`
}

// A collection of values returned by getNodeGroup.
type LookupNodeGroupResult struct {
	AmiType      string `pulumi:"amiType"`
	Arn          string `pulumi:"arn"`
	CapacityType string `pulumi:"capacityType"`
	ClusterName  string `pulumi:"clusterName"`
	DiskSize     int    `pulumi:"diskSize"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                      `pulumi:"id"`
	InstanceTypes  []string                    `pulumi:"instanceTypes"`
	Labels         map[string]string           `pulumi:"labels"`
	NodeGroupName  string                      `pulumi:"nodeGroupName"`
	NodeRoleArn    string                      `pulumi:"nodeRoleArn"`
	ReleaseVersion string                      `pulumi:"releaseVersion"`
	RemoteAccesses []GetNodeGroupRemoteAccess  `pulumi:"remoteAccesses"`
	Resources      []GetNodeGroupResource      `pulumi:"resources"`
	ScalingConfigs []GetNodeGroupScalingConfig `pulumi:"scalingConfigs"`
	Status         string                      `pulumi:"status"`
	SubnetIds      []string                    `pulumi:"subnetIds"`
	Tags           map[string]string           `pulumi:"tags"`
	Taints         []GetNodeGroupTaint         `pulumi:"taints"`
	Version        string                      `pulumi:"version"`
}

func LookupNodeGroupOutput(ctx *pulumi.Context, args LookupNodeGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNodeGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNodeGroupResult, error) {
			args := v.(LookupNodeGroupArgs)
			r, err := LookupNodeGroup(ctx, &args, opts...)
			var s LookupNodeGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNodeGroupResultOutput)
}

// A collection of arguments for invoking getNodeGroup.
type LookupNodeGroupOutputArgs struct {
	ClusterName   pulumi.StringInput    `pulumi:"clusterName"`
	NodeGroupName pulumi.StringInput    `pulumi:"nodeGroupName"`
	Tags          pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupNodeGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodeGroupArgs)(nil)).Elem()
}

// A collection of values returned by getNodeGroup.
type LookupNodeGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNodeGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodeGroupResult)(nil)).Elem()
}

func (o LookupNodeGroupResultOutput) ToLookupNodeGroupResultOutput() LookupNodeGroupResultOutput {
	return o
}

func (o LookupNodeGroupResultOutput) ToLookupNodeGroupResultOutputWithContext(ctx context.Context) LookupNodeGroupResultOutput {
	return o
}

func (o LookupNodeGroupResultOutput) AmiType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.AmiType }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) CapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.CapacityType }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNodeGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) []string { return v.InstanceTypes }).(pulumi.StringArrayOutput)
}

func (o LookupNodeGroupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupNodeGroupResultOutput) NodeGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.NodeGroupName }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) NodeRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.NodeRoleArn }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) ReleaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.ReleaseVersion }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) RemoteAccesses() GetNodeGroupRemoteAccessArrayOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) []GetNodeGroupRemoteAccess { return v.RemoteAccesses }).(GetNodeGroupRemoteAccessArrayOutput)
}

func (o LookupNodeGroupResultOutput) Resources() GetNodeGroupResourceArrayOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) []GetNodeGroupResource { return v.Resources }).(GetNodeGroupResourceArrayOutput)
}

func (o LookupNodeGroupResultOutput) ScalingConfigs() GetNodeGroupScalingConfigArrayOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) []GetNodeGroupScalingConfig { return v.ScalingConfigs }).(GetNodeGroupScalingConfigArrayOutput)
}

func (o LookupNodeGroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupNodeGroupResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o LookupNodeGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupNodeGroupResultOutput) Taints() GetNodeGroupTaintArrayOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) []GetNodeGroupTaint { return v.Taints }).(GetNodeGroupTaintArrayOutput)
}

func (o LookupNodeGroupResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeGroupResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNodeGroupResultOutput{})
}
