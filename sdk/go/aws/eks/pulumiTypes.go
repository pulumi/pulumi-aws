// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessPolicyAssociationAccessScope struct {
	// The namespaces to which the access scope applies when type is namespace.
	Namespaces []string `pulumi:"namespaces"`
	// Valid values are `namespace` or `cluster`.
	Type string `pulumi:"type"`
}

// AccessPolicyAssociationAccessScopeInput is an input type that accepts AccessPolicyAssociationAccessScopeArgs and AccessPolicyAssociationAccessScopeOutput values.
// You can construct a concrete instance of `AccessPolicyAssociationAccessScopeInput` via:
//
//	AccessPolicyAssociationAccessScopeArgs{...}
type AccessPolicyAssociationAccessScopeInput interface {
	pulumi.Input

	ToAccessPolicyAssociationAccessScopeOutput() AccessPolicyAssociationAccessScopeOutput
	ToAccessPolicyAssociationAccessScopeOutputWithContext(context.Context) AccessPolicyAssociationAccessScopeOutput
}

type AccessPolicyAssociationAccessScopeArgs struct {
	// The namespaces to which the access scope applies when type is namespace.
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
	// Valid values are `namespace` or `cluster`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccessPolicyAssociationAccessScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyAssociationAccessScope)(nil)).Elem()
}

func (i AccessPolicyAssociationAccessScopeArgs) ToAccessPolicyAssociationAccessScopeOutput() AccessPolicyAssociationAccessScopeOutput {
	return i.ToAccessPolicyAssociationAccessScopeOutputWithContext(context.Background())
}

func (i AccessPolicyAssociationAccessScopeArgs) ToAccessPolicyAssociationAccessScopeOutputWithContext(ctx context.Context) AccessPolicyAssociationAccessScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyAssociationAccessScopeOutput)
}

func (i AccessPolicyAssociationAccessScopeArgs) ToAccessPolicyAssociationAccessScopePtrOutput() AccessPolicyAssociationAccessScopePtrOutput {
	return i.ToAccessPolicyAssociationAccessScopePtrOutputWithContext(context.Background())
}

func (i AccessPolicyAssociationAccessScopeArgs) ToAccessPolicyAssociationAccessScopePtrOutputWithContext(ctx context.Context) AccessPolicyAssociationAccessScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyAssociationAccessScopeOutput).ToAccessPolicyAssociationAccessScopePtrOutputWithContext(ctx)
}

// AccessPolicyAssociationAccessScopePtrInput is an input type that accepts AccessPolicyAssociationAccessScopeArgs, AccessPolicyAssociationAccessScopePtr and AccessPolicyAssociationAccessScopePtrOutput values.
// You can construct a concrete instance of `AccessPolicyAssociationAccessScopePtrInput` via:
//
//	        AccessPolicyAssociationAccessScopeArgs{...}
//
//	or:
//
//	        nil
type AccessPolicyAssociationAccessScopePtrInput interface {
	pulumi.Input

	ToAccessPolicyAssociationAccessScopePtrOutput() AccessPolicyAssociationAccessScopePtrOutput
	ToAccessPolicyAssociationAccessScopePtrOutputWithContext(context.Context) AccessPolicyAssociationAccessScopePtrOutput
}

type accessPolicyAssociationAccessScopePtrType AccessPolicyAssociationAccessScopeArgs

func AccessPolicyAssociationAccessScopePtr(v *AccessPolicyAssociationAccessScopeArgs) AccessPolicyAssociationAccessScopePtrInput {
	return (*accessPolicyAssociationAccessScopePtrType)(v)
}

func (*accessPolicyAssociationAccessScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyAssociationAccessScope)(nil)).Elem()
}

func (i *accessPolicyAssociationAccessScopePtrType) ToAccessPolicyAssociationAccessScopePtrOutput() AccessPolicyAssociationAccessScopePtrOutput {
	return i.ToAccessPolicyAssociationAccessScopePtrOutputWithContext(context.Background())
}

func (i *accessPolicyAssociationAccessScopePtrType) ToAccessPolicyAssociationAccessScopePtrOutputWithContext(ctx context.Context) AccessPolicyAssociationAccessScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPolicyAssociationAccessScopePtrOutput)
}

type AccessPolicyAssociationAccessScopeOutput struct{ *pulumi.OutputState }

func (AccessPolicyAssociationAccessScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPolicyAssociationAccessScope)(nil)).Elem()
}

func (o AccessPolicyAssociationAccessScopeOutput) ToAccessPolicyAssociationAccessScopeOutput() AccessPolicyAssociationAccessScopeOutput {
	return o
}

func (o AccessPolicyAssociationAccessScopeOutput) ToAccessPolicyAssociationAccessScopeOutputWithContext(ctx context.Context) AccessPolicyAssociationAccessScopeOutput {
	return o
}

func (o AccessPolicyAssociationAccessScopeOutput) ToAccessPolicyAssociationAccessScopePtrOutput() AccessPolicyAssociationAccessScopePtrOutput {
	return o.ToAccessPolicyAssociationAccessScopePtrOutputWithContext(context.Background())
}

func (o AccessPolicyAssociationAccessScopeOutput) ToAccessPolicyAssociationAccessScopePtrOutputWithContext(ctx context.Context) AccessPolicyAssociationAccessScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPolicyAssociationAccessScope) *AccessPolicyAssociationAccessScope {
		return &v
	}).(AccessPolicyAssociationAccessScopePtrOutput)
}

// The namespaces to which the access scope applies when type is namespace.
func (o AccessPolicyAssociationAccessScopeOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPolicyAssociationAccessScope) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// Valid values are `namespace` or `cluster`.
func (o AccessPolicyAssociationAccessScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPolicyAssociationAccessScope) string { return v.Type }).(pulumi.StringOutput)
}

type AccessPolicyAssociationAccessScopePtrOutput struct{ *pulumi.OutputState }

func (AccessPolicyAssociationAccessScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPolicyAssociationAccessScope)(nil)).Elem()
}

func (o AccessPolicyAssociationAccessScopePtrOutput) ToAccessPolicyAssociationAccessScopePtrOutput() AccessPolicyAssociationAccessScopePtrOutput {
	return o
}

func (o AccessPolicyAssociationAccessScopePtrOutput) ToAccessPolicyAssociationAccessScopePtrOutputWithContext(ctx context.Context) AccessPolicyAssociationAccessScopePtrOutput {
	return o
}

func (o AccessPolicyAssociationAccessScopePtrOutput) Elem() AccessPolicyAssociationAccessScopeOutput {
	return o.ApplyT(func(v *AccessPolicyAssociationAccessScope) AccessPolicyAssociationAccessScope {
		if v != nil {
			return *v
		}
		var ret AccessPolicyAssociationAccessScope
		return ret
	}).(AccessPolicyAssociationAccessScopeOutput)
}

// The namespaces to which the access scope applies when type is namespace.
func (o AccessPolicyAssociationAccessScopePtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPolicyAssociationAccessScope) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// Valid values are `namespace` or `cluster`.
func (o AccessPolicyAssociationAccessScopePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPolicyAssociationAccessScope) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterAccessConfig struct {
	// The authentication mode for the cluster. Valid values are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// Whether or not to bootstrap the access config values to the cluster. Default is `true`.
	BootstrapClusterCreatorAdminPermissions *bool `pulumi:"bootstrapClusterCreatorAdminPermissions"`
}

// ClusterAccessConfigInput is an input type that accepts ClusterAccessConfigArgs and ClusterAccessConfigOutput values.
// You can construct a concrete instance of `ClusterAccessConfigInput` via:
//
//	ClusterAccessConfigArgs{...}
type ClusterAccessConfigInput interface {
	pulumi.Input

	ToClusterAccessConfigOutput() ClusterAccessConfigOutput
	ToClusterAccessConfigOutputWithContext(context.Context) ClusterAccessConfigOutput
}

type ClusterAccessConfigArgs struct {
	// The authentication mode for the cluster. Valid values are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// Whether or not to bootstrap the access config values to the cluster. Default is `true`.
	BootstrapClusterCreatorAdminPermissions pulumi.BoolPtrInput `pulumi:"bootstrapClusterCreatorAdminPermissions"`
}

func (ClusterAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAccessConfig)(nil)).Elem()
}

func (i ClusterAccessConfigArgs) ToClusterAccessConfigOutput() ClusterAccessConfigOutput {
	return i.ToClusterAccessConfigOutputWithContext(context.Background())
}

func (i ClusterAccessConfigArgs) ToClusterAccessConfigOutputWithContext(ctx context.Context) ClusterAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAccessConfigOutput)
}

func (i ClusterAccessConfigArgs) ToClusterAccessConfigPtrOutput() ClusterAccessConfigPtrOutput {
	return i.ToClusterAccessConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAccessConfigArgs) ToClusterAccessConfigPtrOutputWithContext(ctx context.Context) ClusterAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAccessConfigOutput).ToClusterAccessConfigPtrOutputWithContext(ctx)
}

// ClusterAccessConfigPtrInput is an input type that accepts ClusterAccessConfigArgs, ClusterAccessConfigPtr and ClusterAccessConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAccessConfigPtrInput` via:
//
//	        ClusterAccessConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAccessConfigPtrInput interface {
	pulumi.Input

	ToClusterAccessConfigPtrOutput() ClusterAccessConfigPtrOutput
	ToClusterAccessConfigPtrOutputWithContext(context.Context) ClusterAccessConfigPtrOutput
}

type clusterAccessConfigPtrType ClusterAccessConfigArgs

func ClusterAccessConfigPtr(v *ClusterAccessConfigArgs) ClusterAccessConfigPtrInput {
	return (*clusterAccessConfigPtrType)(v)
}

func (*clusterAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAccessConfig)(nil)).Elem()
}

func (i *clusterAccessConfigPtrType) ToClusterAccessConfigPtrOutput() ClusterAccessConfigPtrOutput {
	return i.ToClusterAccessConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAccessConfigPtrType) ToClusterAccessConfigPtrOutputWithContext(ctx context.Context) ClusterAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAccessConfigPtrOutput)
}

type ClusterAccessConfigOutput struct{ *pulumi.OutputState }

func (ClusterAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAccessConfig)(nil)).Elem()
}

func (o ClusterAccessConfigOutput) ToClusterAccessConfigOutput() ClusterAccessConfigOutput {
	return o
}

func (o ClusterAccessConfigOutput) ToClusterAccessConfigOutputWithContext(ctx context.Context) ClusterAccessConfigOutput {
	return o
}

func (o ClusterAccessConfigOutput) ToClusterAccessConfigPtrOutput() ClusterAccessConfigPtrOutput {
	return o.ToClusterAccessConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAccessConfigOutput) ToClusterAccessConfigPtrOutputWithContext(ctx context.Context) ClusterAccessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAccessConfig) *ClusterAccessConfig {
		return &v
	}).(ClusterAccessConfigPtrOutput)
}

// The authentication mode for the cluster. Valid values are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`
func (o ClusterAccessConfigOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAccessConfig) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// Whether or not to bootstrap the access config values to the cluster. Default is `true`.
func (o ClusterAccessConfigOutput) BootstrapClusterCreatorAdminPermissions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAccessConfig) *bool { return v.BootstrapClusterCreatorAdminPermissions }).(pulumi.BoolPtrOutput)
}

type ClusterAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAccessConfig)(nil)).Elem()
}

func (o ClusterAccessConfigPtrOutput) ToClusterAccessConfigPtrOutput() ClusterAccessConfigPtrOutput {
	return o
}

func (o ClusterAccessConfigPtrOutput) ToClusterAccessConfigPtrOutputWithContext(ctx context.Context) ClusterAccessConfigPtrOutput {
	return o
}

func (o ClusterAccessConfigPtrOutput) Elem() ClusterAccessConfigOutput {
	return o.ApplyT(func(v *ClusterAccessConfig) ClusterAccessConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAccessConfig
		return ret
	}).(ClusterAccessConfigOutput)
}

// The authentication mode for the cluster. Valid values are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`
func (o ClusterAccessConfigPtrOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAccessConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMode
	}).(pulumi.StringPtrOutput)
}

// Whether or not to bootstrap the access config values to the cluster. Default is `true`.
func (o ClusterAccessConfigPtrOutput) BootstrapClusterCreatorAdminPermissions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAccessConfig) *bool {
		if v == nil {
			return nil
		}
		return v.BootstrapClusterCreatorAdminPermissions
	}).(pulumi.BoolPtrOutput)
}

type ClusterCertificateAuthority struct {
	// Base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
	Data *string `pulumi:"data"`
}

// ClusterCertificateAuthorityInput is an input type that accepts ClusterCertificateAuthorityArgs and ClusterCertificateAuthorityOutput values.
// You can construct a concrete instance of `ClusterCertificateAuthorityInput` via:
//
//	ClusterCertificateAuthorityArgs{...}
type ClusterCertificateAuthorityInput interface {
	pulumi.Input

	ToClusterCertificateAuthorityOutput() ClusterCertificateAuthorityOutput
	ToClusterCertificateAuthorityOutputWithContext(context.Context) ClusterCertificateAuthorityOutput
}

type ClusterCertificateAuthorityArgs struct {
	// Base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
	Data pulumi.StringPtrInput `pulumi:"data"`
}

func (ClusterCertificateAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCertificateAuthority)(nil)).Elem()
}

func (i ClusterCertificateAuthorityArgs) ToClusterCertificateAuthorityOutput() ClusterCertificateAuthorityOutput {
	return i.ToClusterCertificateAuthorityOutputWithContext(context.Background())
}

func (i ClusterCertificateAuthorityArgs) ToClusterCertificateAuthorityOutputWithContext(ctx context.Context) ClusterCertificateAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateAuthorityOutput)
}

func (i ClusterCertificateAuthorityArgs) ToClusterCertificateAuthorityPtrOutput() ClusterCertificateAuthorityPtrOutput {
	return i.ToClusterCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i ClusterCertificateAuthorityArgs) ToClusterCertificateAuthorityPtrOutputWithContext(ctx context.Context) ClusterCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateAuthorityOutput).ToClusterCertificateAuthorityPtrOutputWithContext(ctx)
}

// ClusterCertificateAuthorityPtrInput is an input type that accepts ClusterCertificateAuthorityArgs, ClusterCertificateAuthorityPtr and ClusterCertificateAuthorityPtrOutput values.
// You can construct a concrete instance of `ClusterCertificateAuthorityPtrInput` via:
//
//	        ClusterCertificateAuthorityArgs{...}
//
//	or:
//
//	        nil
type ClusterCertificateAuthorityPtrInput interface {
	pulumi.Input

	ToClusterCertificateAuthorityPtrOutput() ClusterCertificateAuthorityPtrOutput
	ToClusterCertificateAuthorityPtrOutputWithContext(context.Context) ClusterCertificateAuthorityPtrOutput
}

type clusterCertificateAuthorityPtrType ClusterCertificateAuthorityArgs

func ClusterCertificateAuthorityPtr(v *ClusterCertificateAuthorityArgs) ClusterCertificateAuthorityPtrInput {
	return (*clusterCertificateAuthorityPtrType)(v)
}

func (*clusterCertificateAuthorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCertificateAuthority)(nil)).Elem()
}

func (i *clusterCertificateAuthorityPtrType) ToClusterCertificateAuthorityPtrOutput() ClusterCertificateAuthorityPtrOutput {
	return i.ToClusterCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i *clusterCertificateAuthorityPtrType) ToClusterCertificateAuthorityPtrOutputWithContext(ctx context.Context) ClusterCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateAuthorityPtrOutput)
}

// ClusterCertificateAuthorityArrayInput is an input type that accepts ClusterCertificateAuthorityArray and ClusterCertificateAuthorityArrayOutput values.
// You can construct a concrete instance of `ClusterCertificateAuthorityArrayInput` via:
//
//	ClusterCertificateAuthorityArray{ ClusterCertificateAuthorityArgs{...} }
type ClusterCertificateAuthorityArrayInput interface {
	pulumi.Input

	ToClusterCertificateAuthorityArrayOutput() ClusterCertificateAuthorityArrayOutput
	ToClusterCertificateAuthorityArrayOutputWithContext(context.Context) ClusterCertificateAuthorityArrayOutput
}

type ClusterCertificateAuthorityArray []ClusterCertificateAuthorityInput

func (ClusterCertificateAuthorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCertificateAuthority)(nil)).Elem()
}

func (i ClusterCertificateAuthorityArray) ToClusterCertificateAuthorityArrayOutput() ClusterCertificateAuthorityArrayOutput {
	return i.ToClusterCertificateAuthorityArrayOutputWithContext(context.Background())
}

func (i ClusterCertificateAuthorityArray) ToClusterCertificateAuthorityArrayOutputWithContext(ctx context.Context) ClusterCertificateAuthorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateAuthorityArrayOutput)
}

type ClusterCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (ClusterCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCertificateAuthority)(nil)).Elem()
}

func (o ClusterCertificateAuthorityOutput) ToClusterCertificateAuthorityOutput() ClusterCertificateAuthorityOutput {
	return o
}

func (o ClusterCertificateAuthorityOutput) ToClusterCertificateAuthorityOutputWithContext(ctx context.Context) ClusterCertificateAuthorityOutput {
	return o
}

func (o ClusterCertificateAuthorityOutput) ToClusterCertificateAuthorityPtrOutput() ClusterCertificateAuthorityPtrOutput {
	return o.ToClusterCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (o ClusterCertificateAuthorityOutput) ToClusterCertificateAuthorityPtrOutputWithContext(ctx context.Context) ClusterCertificateAuthorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCertificateAuthority) *ClusterCertificateAuthority {
		return &v
	}).(ClusterCertificateAuthorityPtrOutput)
}

// Base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
func (o ClusterCertificateAuthorityOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificateAuthority) *string { return v.Data }).(pulumi.StringPtrOutput)
}

type ClusterCertificateAuthorityPtrOutput struct{ *pulumi.OutputState }

func (ClusterCertificateAuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCertificateAuthority)(nil)).Elem()
}

func (o ClusterCertificateAuthorityPtrOutput) ToClusterCertificateAuthorityPtrOutput() ClusterCertificateAuthorityPtrOutput {
	return o
}

func (o ClusterCertificateAuthorityPtrOutput) ToClusterCertificateAuthorityPtrOutputWithContext(ctx context.Context) ClusterCertificateAuthorityPtrOutput {
	return o
}

func (o ClusterCertificateAuthorityPtrOutput) Elem() ClusterCertificateAuthorityOutput {
	return o.ApplyT(func(v *ClusterCertificateAuthority) ClusterCertificateAuthority {
		if v != nil {
			return *v
		}
		var ret ClusterCertificateAuthority
		return ret
	}).(ClusterCertificateAuthorityOutput)
}

// Base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
func (o ClusterCertificateAuthorityPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCertificateAuthority) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

type ClusterCertificateAuthorityArrayOutput struct{ *pulumi.OutputState }

func (ClusterCertificateAuthorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCertificateAuthority)(nil)).Elem()
}

func (o ClusterCertificateAuthorityArrayOutput) ToClusterCertificateAuthorityArrayOutput() ClusterCertificateAuthorityArrayOutput {
	return o
}

func (o ClusterCertificateAuthorityArrayOutput) ToClusterCertificateAuthorityArrayOutputWithContext(ctx context.Context) ClusterCertificateAuthorityArrayOutput {
	return o
}

func (o ClusterCertificateAuthorityArrayOutput) Index(i pulumi.IntInput) ClusterCertificateAuthorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCertificateAuthority {
		return vs[0].([]ClusterCertificateAuthority)[vs[1].(int)]
	}).(ClusterCertificateAuthorityOutput)
}

type ClusterEncryptionConfig struct {
	// Configuration block with provider for encryption. Detailed below.
	Provider ClusterEncryptionConfigProvider `pulumi:"provider"`
	// List of strings with resources to be encrypted. Valid values: `secrets`.
	Resources []string `pulumi:"resources"`
}

// ClusterEncryptionConfigInput is an input type that accepts ClusterEncryptionConfigArgs and ClusterEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigInput` via:
//
//	ClusterEncryptionConfigArgs{...}
type ClusterEncryptionConfigInput interface {
	pulumi.Input

	ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput
	ToClusterEncryptionConfigOutputWithContext(context.Context) ClusterEncryptionConfigOutput
}

type ClusterEncryptionConfigArgs struct {
	// Configuration block with provider for encryption. Detailed below.
	Provider ClusterEncryptionConfigProviderInput `pulumi:"provider"`
	// List of strings with resources to be encrypted. Valid values: `secrets`.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (ClusterEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return i.ToClusterEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput)
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return i.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput).ToClusterEncryptionConfigPtrOutputWithContext(ctx)
}

// ClusterEncryptionConfigPtrInput is an input type that accepts ClusterEncryptionConfigArgs, ClusterEncryptionConfigPtr and ClusterEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigPtrInput` via:
//
//	        ClusterEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput
	ToClusterEncryptionConfigPtrOutputWithContext(context.Context) ClusterEncryptionConfigPtrOutput
}

type clusterEncryptionConfigPtrType ClusterEncryptionConfigArgs

func ClusterEncryptionConfigPtr(v *ClusterEncryptionConfigArgs) ClusterEncryptionConfigPtrInput {
	return (*clusterEncryptionConfigPtrType)(v)
}

func (*clusterEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfig)(nil)).Elem()
}

func (i *clusterEncryptionConfigPtrType) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return i.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionConfigPtrType) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigPtrOutput)
}

type ClusterEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return o.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionConfig) *ClusterEncryptionConfig {
		return &v
	}).(ClusterEncryptionConfigPtrOutput)
}

// Configuration block with provider for encryption. Detailed below.
func (o ClusterEncryptionConfigOutput) Provider() ClusterEncryptionConfigProviderOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) ClusterEncryptionConfigProvider { return v.Provider }).(ClusterEncryptionConfigProviderOutput)
}

// List of strings with resources to be encrypted. Valid values: `secrets`.
func (o ClusterEncryptionConfigOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type ClusterEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigPtrOutput) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return o
}

func (o ClusterEncryptionConfigPtrOutput) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return o
}

func (o ClusterEncryptionConfigPtrOutput) Elem() ClusterEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) ClusterEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionConfig
		return ret
	}).(ClusterEncryptionConfigOutput)
}

// Configuration block with provider for encryption. Detailed below.
func (o ClusterEncryptionConfigPtrOutput) Provider() ClusterEncryptionConfigProviderPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) *ClusterEncryptionConfigProvider {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(ClusterEncryptionConfigProviderPtrOutput)
}

// List of strings with resources to be encrypted. Valid values: `secrets`.
func (o ClusterEncryptionConfigPtrOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) []string {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.StringArrayOutput)
}

type ClusterEncryptionConfigProvider struct {
	// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
	KeyArn string `pulumi:"keyArn"`
}

// ClusterEncryptionConfigProviderInput is an input type that accepts ClusterEncryptionConfigProviderArgs and ClusterEncryptionConfigProviderOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigProviderInput` via:
//
//	ClusterEncryptionConfigProviderArgs{...}
type ClusterEncryptionConfigProviderInput interface {
	pulumi.Input

	ToClusterEncryptionConfigProviderOutput() ClusterEncryptionConfigProviderOutput
	ToClusterEncryptionConfigProviderOutputWithContext(context.Context) ClusterEncryptionConfigProviderOutput
}

type ClusterEncryptionConfigProviderArgs struct {
	// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
	KeyArn pulumi.StringInput `pulumi:"keyArn"`
}

func (ClusterEncryptionConfigProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderOutput() ClusterEncryptionConfigProviderOutput {
	return i.ToClusterEncryptionConfigProviderOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderOutput)
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return i.ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderOutput).ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx)
}

// ClusterEncryptionConfigProviderPtrInput is an input type that accepts ClusterEncryptionConfigProviderArgs, ClusterEncryptionConfigProviderPtr and ClusterEncryptionConfigProviderPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigProviderPtrInput` via:
//
//	        ClusterEncryptionConfigProviderArgs{...}
//
//	or:
//
//	        nil
type ClusterEncryptionConfigProviderPtrInput interface {
	pulumi.Input

	ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput
	ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Context) ClusterEncryptionConfigProviderPtrOutput
}

type clusterEncryptionConfigProviderPtrType ClusterEncryptionConfigProviderArgs

func ClusterEncryptionConfigProviderPtr(v *ClusterEncryptionConfigProviderArgs) ClusterEncryptionConfigProviderPtrInput {
	return (*clusterEncryptionConfigProviderPtrType)(v)
}

func (*clusterEncryptionConfigProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (i *clusterEncryptionConfigProviderPtrType) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return i.ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionConfigProviderPtrType) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderPtrOutput)
}

type ClusterEncryptionConfigProviderOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderOutput() ClusterEncryptionConfigProviderOutput {
	return o
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderOutput {
	return o
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return o.ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionConfigProvider) *ClusterEncryptionConfigProvider {
		return &v
	}).(ClusterEncryptionConfigProviderPtrOutput)
}

// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
func (o ClusterEncryptionConfigProviderOutput) KeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterEncryptionConfigProvider) string { return v.KeyArn }).(pulumi.StringOutput)
}

type ClusterEncryptionConfigProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (o ClusterEncryptionConfigProviderPtrOutput) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPtrOutput) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPtrOutput) Elem() ClusterEncryptionConfigProviderOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfigProvider) ClusterEncryptionConfigProvider {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionConfigProvider
		return ret
	}).(ClusterEncryptionConfigProviderOutput)
}

// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
func (o ClusterEncryptionConfigProviderPtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfigProvider) *string {
		if v == nil {
			return nil
		}
		return &v.KeyArn
	}).(pulumi.StringPtrOutput)
}

type ClusterIdentity struct {
	// Nested block containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidcs []ClusterIdentityOidc `pulumi:"oidcs"`
}

// ClusterIdentityInput is an input type that accepts ClusterIdentityArgs and ClusterIdentityOutput values.
// You can construct a concrete instance of `ClusterIdentityInput` via:
//
//	ClusterIdentityArgs{...}
type ClusterIdentityInput interface {
	pulumi.Input

	ToClusterIdentityOutput() ClusterIdentityOutput
	ToClusterIdentityOutputWithContext(context.Context) ClusterIdentityOutput
}

type ClusterIdentityArgs struct {
	// Nested block containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidcs ClusterIdentityOidcArrayInput `pulumi:"oidcs"`
}

func (ClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentity)(nil)).Elem()
}

func (i ClusterIdentityArgs) ToClusterIdentityOutput() ClusterIdentityOutput {
	return i.ToClusterIdentityOutputWithContext(context.Background())
}

func (i ClusterIdentityArgs) ToClusterIdentityOutputWithContext(ctx context.Context) ClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityOutput)
}

// ClusterIdentityArrayInput is an input type that accepts ClusterIdentityArray and ClusterIdentityArrayOutput values.
// You can construct a concrete instance of `ClusterIdentityArrayInput` via:
//
//	ClusterIdentityArray{ ClusterIdentityArgs{...} }
type ClusterIdentityArrayInput interface {
	pulumi.Input

	ToClusterIdentityArrayOutput() ClusterIdentityArrayOutput
	ToClusterIdentityArrayOutputWithContext(context.Context) ClusterIdentityArrayOutput
}

type ClusterIdentityArray []ClusterIdentityInput

func (ClusterIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIdentity)(nil)).Elem()
}

func (i ClusterIdentityArray) ToClusterIdentityArrayOutput() ClusterIdentityArrayOutput {
	return i.ToClusterIdentityArrayOutputWithContext(context.Background())
}

func (i ClusterIdentityArray) ToClusterIdentityArrayOutputWithContext(ctx context.Context) ClusterIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityArrayOutput)
}

type ClusterIdentityOutput struct{ *pulumi.OutputState }

func (ClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentity)(nil)).Elem()
}

func (o ClusterIdentityOutput) ToClusterIdentityOutput() ClusterIdentityOutput {
	return o
}

func (o ClusterIdentityOutput) ToClusterIdentityOutputWithContext(ctx context.Context) ClusterIdentityOutput {
	return o
}

// Nested block containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
func (o ClusterIdentityOutput) Oidcs() ClusterIdentityOidcArrayOutput {
	return o.ApplyT(func(v ClusterIdentity) []ClusterIdentityOidc { return v.Oidcs }).(ClusterIdentityOidcArrayOutput)
}

type ClusterIdentityArrayOutput struct{ *pulumi.OutputState }

func (ClusterIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIdentity)(nil)).Elem()
}

func (o ClusterIdentityArrayOutput) ToClusterIdentityArrayOutput() ClusterIdentityArrayOutput {
	return o
}

func (o ClusterIdentityArrayOutput) ToClusterIdentityArrayOutputWithContext(ctx context.Context) ClusterIdentityArrayOutput {
	return o
}

func (o ClusterIdentityArrayOutput) Index(i pulumi.IntInput) ClusterIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIdentity {
		return vs[0].([]ClusterIdentity)[vs[1].(int)]
	}).(ClusterIdentityOutput)
}

type ClusterIdentityOidc struct {
	// Issuer URL for the OpenID Connect identity provider.
	Issuer *string `pulumi:"issuer"`
}

// ClusterIdentityOidcInput is an input type that accepts ClusterIdentityOidcArgs and ClusterIdentityOidcOutput values.
// You can construct a concrete instance of `ClusterIdentityOidcInput` via:
//
//	ClusterIdentityOidcArgs{...}
type ClusterIdentityOidcInput interface {
	pulumi.Input

	ToClusterIdentityOidcOutput() ClusterIdentityOidcOutput
	ToClusterIdentityOidcOutputWithContext(context.Context) ClusterIdentityOidcOutput
}

type ClusterIdentityOidcArgs struct {
	// Issuer URL for the OpenID Connect identity provider.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
}

func (ClusterIdentityOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentityOidc)(nil)).Elem()
}

func (i ClusterIdentityOidcArgs) ToClusterIdentityOidcOutput() ClusterIdentityOidcOutput {
	return i.ToClusterIdentityOidcOutputWithContext(context.Background())
}

func (i ClusterIdentityOidcArgs) ToClusterIdentityOidcOutputWithContext(ctx context.Context) ClusterIdentityOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityOidcOutput)
}

// ClusterIdentityOidcArrayInput is an input type that accepts ClusterIdentityOidcArray and ClusterIdentityOidcArrayOutput values.
// You can construct a concrete instance of `ClusterIdentityOidcArrayInput` via:
//
//	ClusterIdentityOidcArray{ ClusterIdentityOidcArgs{...} }
type ClusterIdentityOidcArrayInput interface {
	pulumi.Input

	ToClusterIdentityOidcArrayOutput() ClusterIdentityOidcArrayOutput
	ToClusterIdentityOidcArrayOutputWithContext(context.Context) ClusterIdentityOidcArrayOutput
}

type ClusterIdentityOidcArray []ClusterIdentityOidcInput

func (ClusterIdentityOidcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIdentityOidc)(nil)).Elem()
}

func (i ClusterIdentityOidcArray) ToClusterIdentityOidcArrayOutput() ClusterIdentityOidcArrayOutput {
	return i.ToClusterIdentityOidcArrayOutputWithContext(context.Background())
}

func (i ClusterIdentityOidcArray) ToClusterIdentityOidcArrayOutputWithContext(ctx context.Context) ClusterIdentityOidcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityOidcArrayOutput)
}

type ClusterIdentityOidcOutput struct{ *pulumi.OutputState }

func (ClusterIdentityOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentityOidc)(nil)).Elem()
}

func (o ClusterIdentityOidcOutput) ToClusterIdentityOidcOutput() ClusterIdentityOidcOutput {
	return o
}

func (o ClusterIdentityOidcOutput) ToClusterIdentityOidcOutputWithContext(ctx context.Context) ClusterIdentityOidcOutput {
	return o
}

// Issuer URL for the OpenID Connect identity provider.
func (o ClusterIdentityOidcOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIdentityOidc) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type ClusterIdentityOidcArrayOutput struct{ *pulumi.OutputState }

func (ClusterIdentityOidcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIdentityOidc)(nil)).Elem()
}

func (o ClusterIdentityOidcArrayOutput) ToClusterIdentityOidcArrayOutput() ClusterIdentityOidcArrayOutput {
	return o
}

func (o ClusterIdentityOidcArrayOutput) ToClusterIdentityOidcArrayOutputWithContext(ctx context.Context) ClusterIdentityOidcArrayOutput {
	return o
}

func (o ClusterIdentityOidcArrayOutput) Index(i pulumi.IntInput) ClusterIdentityOidcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIdentityOidc {
		return vs[0].([]ClusterIdentityOidc)[vs[1].(int)]
	}).(ClusterIdentityOidcOutput)
}

type ClusterKubernetesNetworkConfig struct {
	// The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
	IpFamily *string `pulumi:"ipFamily"`
	// The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
	//
	// * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
	//
	// * Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.
	//
	// * Between /24 and /12.
	ServiceIpv4Cidr *string `pulumi:"serviceIpv4Cidr"`
	// The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specified `ipv6` for ipFamily when you created the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
	ServiceIpv6Cidr *string `pulumi:"serviceIpv6Cidr"`
}

// ClusterKubernetesNetworkConfigInput is an input type that accepts ClusterKubernetesNetworkConfigArgs and ClusterKubernetesNetworkConfigOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigInput` via:
//
//	ClusterKubernetesNetworkConfigArgs{...}
type ClusterKubernetesNetworkConfigInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput
	ToClusterKubernetesNetworkConfigOutputWithContext(context.Context) ClusterKubernetesNetworkConfigOutput
}

type ClusterKubernetesNetworkConfigArgs struct {
	// The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
	IpFamily pulumi.StringPtrInput `pulumi:"ipFamily"`
	// The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
	//
	// * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
	//
	// * Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.
	//
	// * Between /24 and /12.
	ServiceIpv4Cidr pulumi.StringPtrInput `pulumi:"serviceIpv4Cidr"`
	// The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specified `ipv6` for ipFamily when you created the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
	ServiceIpv6Cidr pulumi.StringPtrInput `pulumi:"serviceIpv6Cidr"`
}

func (ClusterKubernetesNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return i.ToClusterKubernetesNetworkConfigOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput)
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput).ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx)
}

// ClusterKubernetesNetworkConfigPtrInput is an input type that accepts ClusterKubernetesNetworkConfigArgs, ClusterKubernetesNetworkConfigPtr and ClusterKubernetesNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigPtrInput` via:
//
//	        ClusterKubernetesNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterKubernetesNetworkConfigPtrInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput
	ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Context) ClusterKubernetesNetworkConfigPtrOutput
}

type clusterKubernetesNetworkConfigPtrType ClusterKubernetesNetworkConfigArgs

func ClusterKubernetesNetworkConfigPtr(v *ClusterKubernetesNetworkConfigArgs) ClusterKubernetesNetworkConfigPtrInput {
	return (*clusterKubernetesNetworkConfigPtrType)(v)
}

func (*clusterKubernetesNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigPtrOutput)
}

type ClusterKubernetesNetworkConfigOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubernetesNetworkConfig) *ClusterKubernetesNetworkConfig {
		return &v
	}).(ClusterKubernetesNetworkConfigPtrOutput)
}

// The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
func (o ClusterKubernetesNetworkConfigOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *string { return v.IpFamily }).(pulumi.StringPtrOutput)
}

// The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
//
// * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
//
// * Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.
//
// * Between /24 and /12.
func (o ClusterKubernetesNetworkConfigOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *string { return v.ServiceIpv4Cidr }).(pulumi.StringPtrOutput)
}

// The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specified `ipv6` for ipFamily when you created the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
func (o ClusterKubernetesNetworkConfigOutput) ServiceIpv6Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *string { return v.ServiceIpv6Cidr }).(pulumi.StringPtrOutput)
}

type ClusterKubernetesNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) Elem() ClusterKubernetesNetworkConfigOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) ClusterKubernetesNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ClusterKubernetesNetworkConfig
		return ret
	}).(ClusterKubernetesNetworkConfigOutput)
}

// The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
func (o ClusterKubernetesNetworkConfigPtrOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.IpFamily
	}).(pulumi.StringPtrOutput)
}

// The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
//
// * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
//
// * Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.
//
// * Between /24 and /12.
func (o ClusterKubernetesNetworkConfigPtrOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIpv4Cidr
	}).(pulumi.StringPtrOutput)
}

// The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specified `ipv6` for ipFamily when you created the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
func (o ClusterKubernetesNetworkConfigPtrOutput) ServiceIpv6Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIpv6Cidr
	}).(pulumi.StringPtrOutput)
}

type ClusterOutpostConfig struct {
	// The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
	//
	// * 1–20 nodes, then we recommend specifying a large instance type.
	//
	// * 21–100 nodes, then we recommend specifying an xlarge instance type.
	//
	// * 101–250 nodes, then we recommend specifying a 2xlarge instance type.
	//
	// For a list of the available Amazon EC2 instance types, see Compute and storage in AWS Outposts rack features  The control plane is not automatically scaled by Amazon EKS.
	ControlPlaneInstanceType string `pulumi:"controlPlaneInstanceType"`
	// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
	// The `controlPlanePlacement` configuration block supports the following arguments:
	ControlPlanePlacement *ClusterOutpostConfigControlPlanePlacement `pulumi:"controlPlanePlacement"`
	// The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
	OutpostArns []string `pulumi:"outpostArns"`
}

// ClusterOutpostConfigInput is an input type that accepts ClusterOutpostConfigArgs and ClusterOutpostConfigOutput values.
// You can construct a concrete instance of `ClusterOutpostConfigInput` via:
//
//	ClusterOutpostConfigArgs{...}
type ClusterOutpostConfigInput interface {
	pulumi.Input

	ToClusterOutpostConfigOutput() ClusterOutpostConfigOutput
	ToClusterOutpostConfigOutputWithContext(context.Context) ClusterOutpostConfigOutput
}

type ClusterOutpostConfigArgs struct {
	// The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
	//
	// * 1–20 nodes, then we recommend specifying a large instance type.
	//
	// * 21–100 nodes, then we recommend specifying an xlarge instance type.
	//
	// * 101–250 nodes, then we recommend specifying a 2xlarge instance type.
	//
	// For a list of the available Amazon EC2 instance types, see Compute and storage in AWS Outposts rack features  The control plane is not automatically scaled by Amazon EKS.
	ControlPlaneInstanceType pulumi.StringInput `pulumi:"controlPlaneInstanceType"`
	// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
	// The `controlPlanePlacement` configuration block supports the following arguments:
	ControlPlanePlacement ClusterOutpostConfigControlPlanePlacementPtrInput `pulumi:"controlPlanePlacement"`
	// The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
	OutpostArns pulumi.StringArrayInput `pulumi:"outpostArns"`
}

func (ClusterOutpostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOutpostConfig)(nil)).Elem()
}

func (i ClusterOutpostConfigArgs) ToClusterOutpostConfigOutput() ClusterOutpostConfigOutput {
	return i.ToClusterOutpostConfigOutputWithContext(context.Background())
}

func (i ClusterOutpostConfigArgs) ToClusterOutpostConfigOutputWithContext(ctx context.Context) ClusterOutpostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutpostConfigOutput)
}

func (i ClusterOutpostConfigArgs) ToClusterOutpostConfigPtrOutput() ClusterOutpostConfigPtrOutput {
	return i.ToClusterOutpostConfigPtrOutputWithContext(context.Background())
}

func (i ClusterOutpostConfigArgs) ToClusterOutpostConfigPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutpostConfigOutput).ToClusterOutpostConfigPtrOutputWithContext(ctx)
}

// ClusterOutpostConfigPtrInput is an input type that accepts ClusterOutpostConfigArgs, ClusterOutpostConfigPtr and ClusterOutpostConfigPtrOutput values.
// You can construct a concrete instance of `ClusterOutpostConfigPtrInput` via:
//
//	        ClusterOutpostConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterOutpostConfigPtrInput interface {
	pulumi.Input

	ToClusterOutpostConfigPtrOutput() ClusterOutpostConfigPtrOutput
	ToClusterOutpostConfigPtrOutputWithContext(context.Context) ClusterOutpostConfigPtrOutput
}

type clusterOutpostConfigPtrType ClusterOutpostConfigArgs

func ClusterOutpostConfigPtr(v *ClusterOutpostConfigArgs) ClusterOutpostConfigPtrInput {
	return (*clusterOutpostConfigPtrType)(v)
}

func (*clusterOutpostConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOutpostConfig)(nil)).Elem()
}

func (i *clusterOutpostConfigPtrType) ToClusterOutpostConfigPtrOutput() ClusterOutpostConfigPtrOutput {
	return i.ToClusterOutpostConfigPtrOutputWithContext(context.Background())
}

func (i *clusterOutpostConfigPtrType) ToClusterOutpostConfigPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutpostConfigPtrOutput)
}

type ClusterOutpostConfigOutput struct{ *pulumi.OutputState }

func (ClusterOutpostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOutpostConfig)(nil)).Elem()
}

func (o ClusterOutpostConfigOutput) ToClusterOutpostConfigOutput() ClusterOutpostConfigOutput {
	return o
}

func (o ClusterOutpostConfigOutput) ToClusterOutpostConfigOutputWithContext(ctx context.Context) ClusterOutpostConfigOutput {
	return o
}

func (o ClusterOutpostConfigOutput) ToClusterOutpostConfigPtrOutput() ClusterOutpostConfigPtrOutput {
	return o.ToClusterOutpostConfigPtrOutputWithContext(context.Background())
}

func (o ClusterOutpostConfigOutput) ToClusterOutpostConfigPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOutpostConfig) *ClusterOutpostConfig {
		return &v
	}).(ClusterOutpostConfigPtrOutput)
}

// The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
//
// * 1–20 nodes, then we recommend specifying a large instance type.
//
// * 21–100 nodes, then we recommend specifying an xlarge instance type.
//
// * 101–250 nodes, then we recommend specifying a 2xlarge instance type.
//
// For a list of the available Amazon EC2 instance types, see Compute and storage in AWS Outposts rack features  The control plane is not automatically scaled by Amazon EKS.
func (o ClusterOutpostConfigOutput) ControlPlaneInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterOutpostConfig) string { return v.ControlPlaneInstanceType }).(pulumi.StringOutput)
}

// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
// The `controlPlanePlacement` configuration block supports the following arguments:
func (o ClusterOutpostConfigOutput) ControlPlanePlacement() ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return o.ApplyT(func(v ClusterOutpostConfig) *ClusterOutpostConfigControlPlanePlacement {
		return v.ControlPlanePlacement
	}).(ClusterOutpostConfigControlPlanePlacementPtrOutput)
}

// The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
func (o ClusterOutpostConfigOutput) OutpostArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterOutpostConfig) []string { return v.OutpostArns }).(pulumi.StringArrayOutput)
}

type ClusterOutpostConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterOutpostConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOutpostConfig)(nil)).Elem()
}

func (o ClusterOutpostConfigPtrOutput) ToClusterOutpostConfigPtrOutput() ClusterOutpostConfigPtrOutput {
	return o
}

func (o ClusterOutpostConfigPtrOutput) ToClusterOutpostConfigPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigPtrOutput {
	return o
}

func (o ClusterOutpostConfigPtrOutput) Elem() ClusterOutpostConfigOutput {
	return o.ApplyT(func(v *ClusterOutpostConfig) ClusterOutpostConfig {
		if v != nil {
			return *v
		}
		var ret ClusterOutpostConfig
		return ret
	}).(ClusterOutpostConfigOutput)
}

// The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
//
// * 1–20 nodes, then we recommend specifying a large instance type.
//
// * 21–100 nodes, then we recommend specifying an xlarge instance type.
//
// * 101–250 nodes, then we recommend specifying a 2xlarge instance type.
//
// For a list of the available Amazon EC2 instance types, see Compute and storage in AWS Outposts rack features  The control plane is not automatically scaled by Amazon EKS.
func (o ClusterOutpostConfigPtrOutput) ControlPlaneInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterOutpostConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ControlPlaneInstanceType
	}).(pulumi.StringPtrOutput)
}

// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
// The `controlPlanePlacement` configuration block supports the following arguments:
func (o ClusterOutpostConfigPtrOutput) ControlPlanePlacement() ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return o.ApplyT(func(v *ClusterOutpostConfig) *ClusterOutpostConfigControlPlanePlacement {
		if v == nil {
			return nil
		}
		return v.ControlPlanePlacement
	}).(ClusterOutpostConfigControlPlanePlacementPtrOutput)
}

// The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
func (o ClusterOutpostConfigPtrOutput) OutpostArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterOutpostConfig) []string {
		if v == nil {
			return nil
		}
		return v.OutpostArns
	}).(pulumi.StringArrayOutput)
}

type ClusterOutpostConfigControlPlanePlacement struct {
	// The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
	GroupName string `pulumi:"groupName"`
}

// ClusterOutpostConfigControlPlanePlacementInput is an input type that accepts ClusterOutpostConfigControlPlanePlacementArgs and ClusterOutpostConfigControlPlanePlacementOutput values.
// You can construct a concrete instance of `ClusterOutpostConfigControlPlanePlacementInput` via:
//
//	ClusterOutpostConfigControlPlanePlacementArgs{...}
type ClusterOutpostConfigControlPlanePlacementInput interface {
	pulumi.Input

	ToClusterOutpostConfigControlPlanePlacementOutput() ClusterOutpostConfigControlPlanePlacementOutput
	ToClusterOutpostConfigControlPlanePlacementOutputWithContext(context.Context) ClusterOutpostConfigControlPlanePlacementOutput
}

type ClusterOutpostConfigControlPlanePlacementArgs struct {
	// The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (ClusterOutpostConfigControlPlanePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (i ClusterOutpostConfigControlPlanePlacementArgs) ToClusterOutpostConfigControlPlanePlacementOutput() ClusterOutpostConfigControlPlanePlacementOutput {
	return i.ToClusterOutpostConfigControlPlanePlacementOutputWithContext(context.Background())
}

func (i ClusterOutpostConfigControlPlanePlacementArgs) ToClusterOutpostConfigControlPlanePlacementOutputWithContext(ctx context.Context) ClusterOutpostConfigControlPlanePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutpostConfigControlPlanePlacementOutput)
}

func (i ClusterOutpostConfigControlPlanePlacementArgs) ToClusterOutpostConfigControlPlanePlacementPtrOutput() ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return i.ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(context.Background())
}

func (i ClusterOutpostConfigControlPlanePlacementArgs) ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutpostConfigControlPlanePlacementOutput).ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(ctx)
}

// ClusterOutpostConfigControlPlanePlacementPtrInput is an input type that accepts ClusterOutpostConfigControlPlanePlacementArgs, ClusterOutpostConfigControlPlanePlacementPtr and ClusterOutpostConfigControlPlanePlacementPtrOutput values.
// You can construct a concrete instance of `ClusterOutpostConfigControlPlanePlacementPtrInput` via:
//
//	        ClusterOutpostConfigControlPlanePlacementArgs{...}
//
//	or:
//
//	        nil
type ClusterOutpostConfigControlPlanePlacementPtrInput interface {
	pulumi.Input

	ToClusterOutpostConfigControlPlanePlacementPtrOutput() ClusterOutpostConfigControlPlanePlacementPtrOutput
	ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(context.Context) ClusterOutpostConfigControlPlanePlacementPtrOutput
}

type clusterOutpostConfigControlPlanePlacementPtrType ClusterOutpostConfigControlPlanePlacementArgs

func ClusterOutpostConfigControlPlanePlacementPtr(v *ClusterOutpostConfigControlPlanePlacementArgs) ClusterOutpostConfigControlPlanePlacementPtrInput {
	return (*clusterOutpostConfigControlPlanePlacementPtrType)(v)
}

func (*clusterOutpostConfigControlPlanePlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (i *clusterOutpostConfigControlPlanePlacementPtrType) ToClusterOutpostConfigControlPlanePlacementPtrOutput() ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return i.ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(context.Background())
}

func (i *clusterOutpostConfigControlPlanePlacementPtrType) ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutpostConfigControlPlanePlacementPtrOutput)
}

type ClusterOutpostConfigControlPlanePlacementOutput struct{ *pulumi.OutputState }

func (ClusterOutpostConfigControlPlanePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (o ClusterOutpostConfigControlPlanePlacementOutput) ToClusterOutpostConfigControlPlanePlacementOutput() ClusterOutpostConfigControlPlanePlacementOutput {
	return o
}

func (o ClusterOutpostConfigControlPlanePlacementOutput) ToClusterOutpostConfigControlPlanePlacementOutputWithContext(ctx context.Context) ClusterOutpostConfigControlPlanePlacementOutput {
	return o
}

func (o ClusterOutpostConfigControlPlanePlacementOutput) ToClusterOutpostConfigControlPlanePlacementPtrOutput() ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return o.ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(context.Background())
}

func (o ClusterOutpostConfigControlPlanePlacementOutput) ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOutpostConfigControlPlanePlacement) *ClusterOutpostConfigControlPlanePlacement {
		return &v
	}).(ClusterOutpostConfigControlPlanePlacementPtrOutput)
}

// The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
func (o ClusterOutpostConfigControlPlanePlacementOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterOutpostConfigControlPlanePlacement) string { return v.GroupName }).(pulumi.StringOutput)
}

type ClusterOutpostConfigControlPlanePlacementPtrOutput struct{ *pulumi.OutputState }

func (ClusterOutpostConfigControlPlanePlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (o ClusterOutpostConfigControlPlanePlacementPtrOutput) ToClusterOutpostConfigControlPlanePlacementPtrOutput() ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return o
}

func (o ClusterOutpostConfigControlPlanePlacementPtrOutput) ToClusterOutpostConfigControlPlanePlacementPtrOutputWithContext(ctx context.Context) ClusterOutpostConfigControlPlanePlacementPtrOutput {
	return o
}

func (o ClusterOutpostConfigControlPlanePlacementPtrOutput) Elem() ClusterOutpostConfigControlPlanePlacementOutput {
	return o.ApplyT(func(v *ClusterOutpostConfigControlPlanePlacement) ClusterOutpostConfigControlPlanePlacement {
		if v != nil {
			return *v
		}
		var ret ClusterOutpostConfigControlPlanePlacement
		return ret
	}).(ClusterOutpostConfigControlPlanePlacementOutput)
}

// The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
func (o ClusterOutpostConfigControlPlanePlacementPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterOutpostConfigControlPlanePlacement) *string {
		if v == nil {
			return nil
		}
		return &v.GroupName
	}).(pulumi.StringPtrOutput)
}

type ClusterVpcConfig struct {
	// Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
	ClusterSecurityGroupId *string `pulumi:"clusterSecurityGroupId"`
	// Whether the Amazon EKS private API server endpoint is enabled. Default is `false`.
	EndpointPrivateAccess *bool `pulumi:"endpointPrivateAccess"`
	// Whether the Amazon EKS public API server endpoint is enabled. Default is `true`.
	EndpointPublicAccess *bool `pulumi:"endpointPublicAccess"`
	// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. The provider will only perform drift detection of its value when present in a configuration.
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
	SubnetIds []string `pulumi:"subnetIds"`
	// ID of the VPC associated with your cluster.
	VpcId *string `pulumi:"vpcId"`
}

// ClusterVpcConfigInput is an input type that accepts ClusterVpcConfigArgs and ClusterVpcConfigOutput values.
// You can construct a concrete instance of `ClusterVpcConfigInput` via:
//
//	ClusterVpcConfigArgs{...}
type ClusterVpcConfigInput interface {
	pulumi.Input

	ToClusterVpcConfigOutput() ClusterVpcConfigOutput
	ToClusterVpcConfigOutputWithContext(context.Context) ClusterVpcConfigOutput
}

type ClusterVpcConfigArgs struct {
	// Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
	ClusterSecurityGroupId pulumi.StringPtrInput `pulumi:"clusterSecurityGroupId"`
	// Whether the Amazon EKS private API server endpoint is enabled. Default is `false`.
	EndpointPrivateAccess pulumi.BoolPtrInput `pulumi:"endpointPrivateAccess"`
	// Whether the Amazon EKS public API server endpoint is enabled. Default is `true`.
	EndpointPublicAccess pulumi.BoolPtrInput `pulumi:"endpointPublicAccess"`
	// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. The provider will only perform drift detection of its value when present in a configuration.
	PublicAccessCidrs pulumi.StringArrayInput `pulumi:"publicAccessCidrs"`
	// List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// ID of the VPC associated with your cluster.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (ClusterVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVpcConfig)(nil)).Elem()
}

func (i ClusterVpcConfigArgs) ToClusterVpcConfigOutput() ClusterVpcConfigOutput {
	return i.ToClusterVpcConfigOutputWithContext(context.Background())
}

func (i ClusterVpcConfigArgs) ToClusterVpcConfigOutputWithContext(ctx context.Context) ClusterVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVpcConfigOutput)
}

func (i ClusterVpcConfigArgs) ToClusterVpcConfigPtrOutput() ClusterVpcConfigPtrOutput {
	return i.ToClusterVpcConfigPtrOutputWithContext(context.Background())
}

func (i ClusterVpcConfigArgs) ToClusterVpcConfigPtrOutputWithContext(ctx context.Context) ClusterVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVpcConfigOutput).ToClusterVpcConfigPtrOutputWithContext(ctx)
}

// ClusterVpcConfigPtrInput is an input type that accepts ClusterVpcConfigArgs, ClusterVpcConfigPtr and ClusterVpcConfigPtrOutput values.
// You can construct a concrete instance of `ClusterVpcConfigPtrInput` via:
//
//	        ClusterVpcConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterVpcConfigPtrInput interface {
	pulumi.Input

	ToClusterVpcConfigPtrOutput() ClusterVpcConfigPtrOutput
	ToClusterVpcConfigPtrOutputWithContext(context.Context) ClusterVpcConfigPtrOutput
}

type clusterVpcConfigPtrType ClusterVpcConfigArgs

func ClusterVpcConfigPtr(v *ClusterVpcConfigArgs) ClusterVpcConfigPtrInput {
	return (*clusterVpcConfigPtrType)(v)
}

func (*clusterVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVpcConfig)(nil)).Elem()
}

func (i *clusterVpcConfigPtrType) ToClusterVpcConfigPtrOutput() ClusterVpcConfigPtrOutput {
	return i.ToClusterVpcConfigPtrOutputWithContext(context.Background())
}

func (i *clusterVpcConfigPtrType) ToClusterVpcConfigPtrOutputWithContext(ctx context.Context) ClusterVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVpcConfigPtrOutput)
}

type ClusterVpcConfigOutput struct{ *pulumi.OutputState }

func (ClusterVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVpcConfig)(nil)).Elem()
}

func (o ClusterVpcConfigOutput) ToClusterVpcConfigOutput() ClusterVpcConfigOutput {
	return o
}

func (o ClusterVpcConfigOutput) ToClusterVpcConfigOutputWithContext(ctx context.Context) ClusterVpcConfigOutput {
	return o
}

func (o ClusterVpcConfigOutput) ToClusterVpcConfigPtrOutput() ClusterVpcConfigPtrOutput {
	return o.ToClusterVpcConfigPtrOutputWithContext(context.Background())
}

func (o ClusterVpcConfigOutput) ToClusterVpcConfigPtrOutputWithContext(ctx context.Context) ClusterVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterVpcConfig) *ClusterVpcConfig {
		return &v
	}).(ClusterVpcConfigPtrOutput)
}

// Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
func (o ClusterVpcConfigOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *string { return v.ClusterSecurityGroupId }).(pulumi.StringPtrOutput)
}

// Whether the Amazon EKS private API server endpoint is enabled. Default is `false`.
func (o ClusterVpcConfigOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *bool { return v.EndpointPrivateAccess }).(pulumi.BoolPtrOutput)
}

// Whether the Amazon EKS public API server endpoint is enabled. Default is `true`.
func (o ClusterVpcConfigOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *bool { return v.EndpointPublicAccess }).(pulumi.BoolPtrOutput)
}

// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. The provider will only perform drift detection of its value when present in a configuration.
func (o ClusterVpcConfigOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterVpcConfig) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
func (o ClusterVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
func (o ClusterVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// ID of the VPC associated with your cluster.
func (o ClusterVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ClusterVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVpcConfig)(nil)).Elem()
}

func (o ClusterVpcConfigPtrOutput) ToClusterVpcConfigPtrOutput() ClusterVpcConfigPtrOutput {
	return o
}

func (o ClusterVpcConfigPtrOutput) ToClusterVpcConfigPtrOutputWithContext(ctx context.Context) ClusterVpcConfigPtrOutput {
	return o
}

func (o ClusterVpcConfigPtrOutput) Elem() ClusterVpcConfigOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) ClusterVpcConfig {
		if v != nil {
			return *v
		}
		var ret ClusterVpcConfig
		return ret
	}).(ClusterVpcConfigOutput)
}

// Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
func (o ClusterVpcConfigPtrOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClusterSecurityGroupId
	}).(pulumi.StringPtrOutput)
}

// Whether the Amazon EKS private API server endpoint is enabled. Default is `false`.
func (o ClusterVpcConfigPtrOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPrivateAccess
	}).(pulumi.BoolPtrOutput)
}

// Whether the Amazon EKS public API server endpoint is enabled. Default is `true`.
func (o ClusterVpcConfigPtrOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EndpointPublicAccess
	}).(pulumi.BoolPtrOutput)
}

// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. The provider will only perform drift detection of its value when present in a configuration.
func (o ClusterVpcConfigPtrOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.PublicAccessCidrs
	}).(pulumi.StringArrayOutput)
}

// List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
func (o ClusterVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
func (o ClusterVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// ID of the VPC associated with your cluster.
func (o ClusterVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type FargateProfileSelector struct {
	// Key-value map of Kubernetes labels for selection.
	Labels map[string]string `pulumi:"labels"`
	// Kubernetes namespace for selection.
	//
	// The following arguments are optional:
	Namespace string `pulumi:"namespace"`
}

// FargateProfileSelectorInput is an input type that accepts FargateProfileSelectorArgs and FargateProfileSelectorOutput values.
// You can construct a concrete instance of `FargateProfileSelectorInput` via:
//
//	FargateProfileSelectorArgs{...}
type FargateProfileSelectorInput interface {
	pulumi.Input

	ToFargateProfileSelectorOutput() FargateProfileSelectorOutput
	ToFargateProfileSelectorOutputWithContext(context.Context) FargateProfileSelectorOutput
}

type FargateProfileSelectorArgs struct {
	// Key-value map of Kubernetes labels for selection.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Kubernetes namespace for selection.
	//
	// The following arguments are optional:
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (FargateProfileSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return i.ToFargateProfileSelectorOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorOutput)
}

// FargateProfileSelectorArrayInput is an input type that accepts FargateProfileSelectorArray and FargateProfileSelectorArrayOutput values.
// You can construct a concrete instance of `FargateProfileSelectorArrayInput` via:
//
//	FargateProfileSelectorArray{ FargateProfileSelectorArgs{...} }
type FargateProfileSelectorArrayInput interface {
	pulumi.Input

	ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput
	ToFargateProfileSelectorArrayOutputWithContext(context.Context) FargateProfileSelectorArrayOutput
}

type FargateProfileSelectorArray []FargateProfileSelectorInput

func (FargateProfileSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return i.ToFargateProfileSelectorArrayOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorArrayOutput)
}

type FargateProfileSelectorOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return o
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return o
}

// Key-value map of Kubernetes labels for selection.
func (o FargateProfileSelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v FargateProfileSelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Kubernetes namespace for selection.
//
// The following arguments are optional:
func (o FargateProfileSelectorOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileSelector) string { return v.Namespace }).(pulumi.StringOutput)
}

type FargateProfileSelectorArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) Index(i pulumi.IntInput) FargateProfileSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileSelector {
		return vs[0].([]FargateProfileSelector)[vs[1].(int)]
	}).(FargateProfileSelectorOutput)
}

type IdentityProviderConfigOidc struct {
	// Client ID for the OpenID Connect identity provider.
	ClientId string `pulumi:"clientId"`
	// The JWT claim that the provider will use to return groups.
	GroupsClaim *string `pulumi:"groupsClaim"`
	// A prefix that is prepended to group claims e.g., `oidc:`.
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// The name of the identity provider config.
	IdentityProviderConfigName string `pulumi:"identityProviderConfigName"`
	// Issuer URL for the OpenID Connect identity provider.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The key value pairs that describe required claims in the identity token.
	RequiredClaims map[string]string `pulumi:"requiredClaims"`
	// The JWT claim that the provider will use as the username.
	UsernameClaim *string `pulumi:"usernameClaim"`
	// A prefix that is prepended to username claims.
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// IdentityProviderConfigOidcInput is an input type that accepts IdentityProviderConfigOidcArgs and IdentityProviderConfigOidcOutput values.
// You can construct a concrete instance of `IdentityProviderConfigOidcInput` via:
//
//	IdentityProviderConfigOidcArgs{...}
type IdentityProviderConfigOidcInput interface {
	pulumi.Input

	ToIdentityProviderConfigOidcOutput() IdentityProviderConfigOidcOutput
	ToIdentityProviderConfigOidcOutputWithContext(context.Context) IdentityProviderConfigOidcOutput
}

type IdentityProviderConfigOidcArgs struct {
	// Client ID for the OpenID Connect identity provider.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The JWT claim that the provider will use to return groups.
	GroupsClaim pulumi.StringPtrInput `pulumi:"groupsClaim"`
	// A prefix that is prepended to group claims e.g., `oidc:`.
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// The name of the identity provider config.
	IdentityProviderConfigName pulumi.StringInput `pulumi:"identityProviderConfigName"`
	// Issuer URL for the OpenID Connect identity provider.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// The key value pairs that describe required claims in the identity token.
	RequiredClaims pulumi.StringMapInput `pulumi:"requiredClaims"`
	// The JWT claim that the provider will use as the username.
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// A prefix that is prepended to username claims.
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (IdentityProviderConfigOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigOidc)(nil)).Elem()
}

func (i IdentityProviderConfigOidcArgs) ToIdentityProviderConfigOidcOutput() IdentityProviderConfigOidcOutput {
	return i.ToIdentityProviderConfigOidcOutputWithContext(context.Background())
}

func (i IdentityProviderConfigOidcArgs) ToIdentityProviderConfigOidcOutputWithContext(ctx context.Context) IdentityProviderConfigOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOidcOutput)
}

func (i IdentityProviderConfigOidcArgs) ToIdentityProviderConfigOidcPtrOutput() IdentityProviderConfigOidcPtrOutput {
	return i.ToIdentityProviderConfigOidcPtrOutputWithContext(context.Background())
}

func (i IdentityProviderConfigOidcArgs) ToIdentityProviderConfigOidcPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOidcOutput).ToIdentityProviderConfigOidcPtrOutputWithContext(ctx)
}

// IdentityProviderConfigOidcPtrInput is an input type that accepts IdentityProviderConfigOidcArgs, IdentityProviderConfigOidcPtr and IdentityProviderConfigOidcPtrOutput values.
// You can construct a concrete instance of `IdentityProviderConfigOidcPtrInput` via:
//
//	        IdentityProviderConfigOidcArgs{...}
//
//	or:
//
//	        nil
type IdentityProviderConfigOidcPtrInput interface {
	pulumi.Input

	ToIdentityProviderConfigOidcPtrOutput() IdentityProviderConfigOidcPtrOutput
	ToIdentityProviderConfigOidcPtrOutputWithContext(context.Context) IdentityProviderConfigOidcPtrOutput
}

type identityProviderConfigOidcPtrType IdentityProviderConfigOidcArgs

func IdentityProviderConfigOidcPtr(v *IdentityProviderConfigOidcArgs) IdentityProviderConfigOidcPtrInput {
	return (*identityProviderConfigOidcPtrType)(v)
}

func (*identityProviderConfigOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderConfigOidc)(nil)).Elem()
}

func (i *identityProviderConfigOidcPtrType) ToIdentityProviderConfigOidcPtrOutput() IdentityProviderConfigOidcPtrOutput {
	return i.ToIdentityProviderConfigOidcPtrOutputWithContext(context.Background())
}

func (i *identityProviderConfigOidcPtrType) ToIdentityProviderConfigOidcPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOidcPtrOutput)
}

type IdentityProviderConfigOidcOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigOidc)(nil)).Elem()
}

func (o IdentityProviderConfigOidcOutput) ToIdentityProviderConfigOidcOutput() IdentityProviderConfigOidcOutput {
	return o
}

func (o IdentityProviderConfigOidcOutput) ToIdentityProviderConfigOidcOutputWithContext(ctx context.Context) IdentityProviderConfigOidcOutput {
	return o
}

func (o IdentityProviderConfigOidcOutput) ToIdentityProviderConfigOidcPtrOutput() IdentityProviderConfigOidcPtrOutput {
	return o.ToIdentityProviderConfigOidcPtrOutputWithContext(context.Background())
}

func (o IdentityProviderConfigOidcOutput) ToIdentityProviderConfigOidcPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProviderConfigOidc) *IdentityProviderConfigOidc {
		return &v
	}).(IdentityProviderConfigOidcPtrOutput)
}

// Client ID for the OpenID Connect identity provider.
func (o IdentityProviderConfigOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// The JWT claim that the provider will use to return groups.
func (o IdentityProviderConfigOidcOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.GroupsClaim }).(pulumi.StringPtrOutput)
}

// A prefix that is prepended to group claims e.g., `oidc:`.
func (o IdentityProviderConfigOidcOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// The name of the identity provider config.
func (o IdentityProviderConfigOidcOutput) IdentityProviderConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) string { return v.IdentityProviderConfigName }).(pulumi.StringOutput)
}

// Issuer URL for the OpenID Connect identity provider.
func (o IdentityProviderConfigOidcOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// The key value pairs that describe required claims in the identity token.
func (o IdentityProviderConfigOidcOutput) RequiredClaims() pulumi.StringMapOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) map[string]string { return v.RequiredClaims }).(pulumi.StringMapOutput)
}

// The JWT claim that the provider will use as the username.
func (o IdentityProviderConfigOidcOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// A prefix that is prepended to username claims.
func (o IdentityProviderConfigOidcOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type IdentityProviderConfigOidcPtrOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviderConfigOidc)(nil)).Elem()
}

func (o IdentityProviderConfigOidcPtrOutput) ToIdentityProviderConfigOidcPtrOutput() IdentityProviderConfigOidcPtrOutput {
	return o
}

func (o IdentityProviderConfigOidcPtrOutput) ToIdentityProviderConfigOidcPtrOutputWithContext(ctx context.Context) IdentityProviderConfigOidcPtrOutput {
	return o
}

func (o IdentityProviderConfigOidcPtrOutput) Elem() IdentityProviderConfigOidcOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) IdentityProviderConfigOidc {
		if v != nil {
			return *v
		}
		var ret IdentityProviderConfigOidc
		return ret
	}).(IdentityProviderConfigOidcOutput)
}

// Client ID for the OpenID Connect identity provider.
func (o IdentityProviderConfigOidcPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The JWT claim that the provider will use to return groups.
func (o IdentityProviderConfigOidcPtrOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) *string {
		if v == nil {
			return nil
		}
		return v.GroupsClaim
	}).(pulumi.StringPtrOutput)
}

// A prefix that is prepended to group claims e.g., `oidc:`.
func (o IdentityProviderConfigOidcPtrOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) *string {
		if v == nil {
			return nil
		}
		return v.GroupsPrefix
	}).(pulumi.StringPtrOutput)
}

// The name of the identity provider config.
func (o IdentityProviderConfigOidcPtrOutput) IdentityProviderConfigName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityProviderConfigName
	}).(pulumi.StringPtrOutput)
}

// Issuer URL for the OpenID Connect identity provider.
func (o IdentityProviderConfigOidcPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// The key value pairs that describe required claims in the identity token.
func (o IdentityProviderConfigOidcPtrOutput) RequiredClaims() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) map[string]string {
		if v == nil {
			return nil
		}
		return v.RequiredClaims
	}).(pulumi.StringMapOutput)
}

// The JWT claim that the provider will use as the username.
func (o IdentityProviderConfigOidcPtrOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) *string {
		if v == nil {
			return nil
		}
		return v.UsernameClaim
	}).(pulumi.StringPtrOutput)
}

// A prefix that is prepended to username claims.
func (o IdentityProviderConfigOidcPtrOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProviderConfigOidc) *string {
		if v == nil {
			return nil
		}
		return v.UsernamePrefix
	}).(pulumi.StringPtrOutput)
}

type NodeGroupLaunchTemplate struct {
	// Identifier of the EC2 Launch Template. Conflicts with `name`.
	Id *string `pulumi:"id"`
	// Name of the EC2 Launch Template. Conflicts with `id`.
	Name *string `pulumi:"name"`
	// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g., `1`) on read and the provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
	Version string `pulumi:"version"`
}

// NodeGroupLaunchTemplateInput is an input type that accepts NodeGroupLaunchTemplateArgs and NodeGroupLaunchTemplateOutput values.
// You can construct a concrete instance of `NodeGroupLaunchTemplateInput` via:
//
//	NodeGroupLaunchTemplateArgs{...}
type NodeGroupLaunchTemplateInput interface {
	pulumi.Input

	ToNodeGroupLaunchTemplateOutput() NodeGroupLaunchTemplateOutput
	ToNodeGroupLaunchTemplateOutputWithContext(context.Context) NodeGroupLaunchTemplateOutput
}

type NodeGroupLaunchTemplateArgs struct {
	// Identifier of the EC2 Launch Template. Conflicts with `name`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the EC2 Launch Template. Conflicts with `id`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g., `1`) on read and the provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
	Version pulumi.StringInput `pulumi:"version"`
}

func (NodeGroupLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupLaunchTemplate)(nil)).Elem()
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplateOutput() NodeGroupLaunchTemplateOutput {
	return i.ToNodeGroupLaunchTemplateOutputWithContext(context.Background())
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplateOutputWithContext(ctx context.Context) NodeGroupLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupLaunchTemplateOutput)
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return i.ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupLaunchTemplateOutput).ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx)
}

// NodeGroupLaunchTemplatePtrInput is an input type that accepts NodeGroupLaunchTemplateArgs, NodeGroupLaunchTemplatePtr and NodeGroupLaunchTemplatePtrOutput values.
// You can construct a concrete instance of `NodeGroupLaunchTemplatePtrInput` via:
//
//	        NodeGroupLaunchTemplateArgs{...}
//
//	or:
//
//	        nil
type NodeGroupLaunchTemplatePtrInput interface {
	pulumi.Input

	ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput
	ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Context) NodeGroupLaunchTemplatePtrOutput
}

type nodeGroupLaunchTemplatePtrType NodeGroupLaunchTemplateArgs

func NodeGroupLaunchTemplatePtr(v *NodeGroupLaunchTemplateArgs) NodeGroupLaunchTemplatePtrInput {
	return (*nodeGroupLaunchTemplatePtrType)(v)
}

func (*nodeGroupLaunchTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupLaunchTemplate)(nil)).Elem()
}

func (i *nodeGroupLaunchTemplatePtrType) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return i.ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i *nodeGroupLaunchTemplatePtrType) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupLaunchTemplatePtrOutput)
}

type NodeGroupLaunchTemplateOutput struct{ *pulumi.OutputState }

func (NodeGroupLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupLaunchTemplate)(nil)).Elem()
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplateOutput() NodeGroupLaunchTemplateOutput {
	return o
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplateOutputWithContext(ctx context.Context) NodeGroupLaunchTemplateOutput {
	return o
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return o.ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupLaunchTemplate) *NodeGroupLaunchTemplate {
		return &v
	}).(NodeGroupLaunchTemplatePtrOutput)
}

// Identifier of the EC2 Launch Template. Conflicts with `name`.
func (o NodeGroupLaunchTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupLaunchTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the EC2 Launch Template. Conflicts with `id`.
func (o NodeGroupLaunchTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupLaunchTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g., `1`) on read and the provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
func (o NodeGroupLaunchTemplateOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupLaunchTemplate) string { return v.Version }).(pulumi.StringOutput)
}

type NodeGroupLaunchTemplatePtrOutput struct{ *pulumi.OutputState }

func (NodeGroupLaunchTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupLaunchTemplate)(nil)).Elem()
}

func (o NodeGroupLaunchTemplatePtrOutput) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return o
}

func (o NodeGroupLaunchTemplatePtrOutput) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return o
}

func (o NodeGroupLaunchTemplatePtrOutput) Elem() NodeGroupLaunchTemplateOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) NodeGroupLaunchTemplate {
		if v != nil {
			return *v
		}
		var ret NodeGroupLaunchTemplate
		return ret
	}).(NodeGroupLaunchTemplateOutput)
}

// Identifier of the EC2 Launch Template. Conflicts with `name`.
func (o NodeGroupLaunchTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the EC2 Launch Template. Conflicts with `id`.
func (o NodeGroupLaunchTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g., `1`) on read and the provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
func (o NodeGroupLaunchTemplatePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type NodeGroupRemoteAccess struct {
	// EC2 Key Pair name that provides access for remote communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, either port 3389 for Windows, or port 22 for all other operating systems is opened on the worker nodes to the Internet (0.0.0.0/0). For Windows nodes, this will allow you to use RDP, for all others this allows you to SSH into the worker nodes.
	Ec2SshKey *string `pulumi:"ec2SshKey"`
	// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
	SourceSecurityGroupIds []string `pulumi:"sourceSecurityGroupIds"`
}

// NodeGroupRemoteAccessInput is an input type that accepts NodeGroupRemoteAccessArgs and NodeGroupRemoteAccessOutput values.
// You can construct a concrete instance of `NodeGroupRemoteAccessInput` via:
//
//	NodeGroupRemoteAccessArgs{...}
type NodeGroupRemoteAccessInput interface {
	pulumi.Input

	ToNodeGroupRemoteAccessOutput() NodeGroupRemoteAccessOutput
	ToNodeGroupRemoteAccessOutputWithContext(context.Context) NodeGroupRemoteAccessOutput
}

type NodeGroupRemoteAccessArgs struct {
	// EC2 Key Pair name that provides access for remote communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, either port 3389 for Windows, or port 22 for all other operating systems is opened on the worker nodes to the Internet (0.0.0.0/0). For Windows nodes, this will allow you to use RDP, for all others this allows you to SSH into the worker nodes.
	Ec2SshKey pulumi.StringPtrInput `pulumi:"ec2SshKey"`
	// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
	SourceSecurityGroupIds pulumi.StringArrayInput `pulumi:"sourceSecurityGroupIds"`
}

func (NodeGroupRemoteAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupRemoteAccess)(nil)).Elem()
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessOutput() NodeGroupRemoteAccessOutput {
	return i.ToNodeGroupRemoteAccessOutputWithContext(context.Background())
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessOutputWithContext(ctx context.Context) NodeGroupRemoteAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupRemoteAccessOutput)
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return i.ToNodeGroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupRemoteAccessOutput).ToNodeGroupRemoteAccessPtrOutputWithContext(ctx)
}

// NodeGroupRemoteAccessPtrInput is an input type that accepts NodeGroupRemoteAccessArgs, NodeGroupRemoteAccessPtr and NodeGroupRemoteAccessPtrOutput values.
// You can construct a concrete instance of `NodeGroupRemoteAccessPtrInput` via:
//
//	        NodeGroupRemoteAccessArgs{...}
//
//	or:
//
//	        nil
type NodeGroupRemoteAccessPtrInput interface {
	pulumi.Input

	ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput
	ToNodeGroupRemoteAccessPtrOutputWithContext(context.Context) NodeGroupRemoteAccessPtrOutput
}

type nodeGroupRemoteAccessPtrType NodeGroupRemoteAccessArgs

func NodeGroupRemoteAccessPtr(v *NodeGroupRemoteAccessArgs) NodeGroupRemoteAccessPtrInput {
	return (*nodeGroupRemoteAccessPtrType)(v)
}

func (*nodeGroupRemoteAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupRemoteAccess)(nil)).Elem()
}

func (i *nodeGroupRemoteAccessPtrType) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return i.ToNodeGroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i *nodeGroupRemoteAccessPtrType) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupRemoteAccessPtrOutput)
}

type NodeGroupRemoteAccessOutput struct{ *pulumi.OutputState }

func (NodeGroupRemoteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupRemoteAccess)(nil)).Elem()
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessOutput() NodeGroupRemoteAccessOutput {
	return o
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessOutputWithContext(ctx context.Context) NodeGroupRemoteAccessOutput {
	return o
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return o.ToNodeGroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupRemoteAccess) *NodeGroupRemoteAccess {
		return &v
	}).(NodeGroupRemoteAccessPtrOutput)
}

// EC2 Key Pair name that provides access for remote communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, either port 3389 for Windows, or port 22 for all other operating systems is opened on the worker nodes to the Internet (0.0.0.0/0). For Windows nodes, this will allow you to use RDP, for all others this allows you to SSH into the worker nodes.
func (o NodeGroupRemoteAccessOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupRemoteAccess) *string { return v.Ec2SshKey }).(pulumi.StringPtrOutput)
}

// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
func (o NodeGroupRemoteAccessOutput) SourceSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeGroupRemoteAccess) []string { return v.SourceSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type NodeGroupRemoteAccessPtrOutput struct{ *pulumi.OutputState }

func (NodeGroupRemoteAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupRemoteAccess)(nil)).Elem()
}

func (o NodeGroupRemoteAccessPtrOutput) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return o
}

func (o NodeGroupRemoteAccessPtrOutput) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return o
}

func (o NodeGroupRemoteAccessPtrOutput) Elem() NodeGroupRemoteAccessOutput {
	return o.ApplyT(func(v *NodeGroupRemoteAccess) NodeGroupRemoteAccess {
		if v != nil {
			return *v
		}
		var ret NodeGroupRemoteAccess
		return ret
	}).(NodeGroupRemoteAccessOutput)
}

// EC2 Key Pair name that provides access for remote communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, either port 3389 for Windows, or port 22 for all other operating systems is opened on the worker nodes to the Internet (0.0.0.0/0). For Windows nodes, this will allow you to use RDP, for all others this allows you to SSH into the worker nodes.
func (o NodeGroupRemoteAccessPtrOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupRemoteAccess) *string {
		if v == nil {
			return nil
		}
		return v.Ec2SshKey
	}).(pulumi.StringPtrOutput)
}

// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
func (o NodeGroupRemoteAccessPtrOutput) SourceSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeGroupRemoteAccess) []string {
		if v == nil {
			return nil
		}
		return v.SourceSecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

type NodeGroupResource struct {
	// List of objects containing information about AutoScaling Groups.
	AutoscalingGroups []NodeGroupResourceAutoscalingGroup `pulumi:"autoscalingGroups"`
	// Identifier of the remote access EC2 Security Group.
	RemoteAccessSecurityGroupId *string `pulumi:"remoteAccessSecurityGroupId"`
}

// NodeGroupResourceInput is an input type that accepts NodeGroupResourceArgs and NodeGroupResourceOutput values.
// You can construct a concrete instance of `NodeGroupResourceInput` via:
//
//	NodeGroupResourceArgs{...}
type NodeGroupResourceInput interface {
	pulumi.Input

	ToNodeGroupResourceOutput() NodeGroupResourceOutput
	ToNodeGroupResourceOutputWithContext(context.Context) NodeGroupResourceOutput
}

type NodeGroupResourceArgs struct {
	// List of objects containing information about AutoScaling Groups.
	AutoscalingGroups NodeGroupResourceAutoscalingGroupArrayInput `pulumi:"autoscalingGroups"`
	// Identifier of the remote access EC2 Security Group.
	RemoteAccessSecurityGroupId pulumi.StringPtrInput `pulumi:"remoteAccessSecurityGroupId"`
}

func (NodeGroupResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupResource)(nil)).Elem()
}

func (i NodeGroupResourceArgs) ToNodeGroupResourceOutput() NodeGroupResourceOutput {
	return i.ToNodeGroupResourceOutputWithContext(context.Background())
}

func (i NodeGroupResourceArgs) ToNodeGroupResourceOutputWithContext(ctx context.Context) NodeGroupResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupResourceOutput)
}

// NodeGroupResourceArrayInput is an input type that accepts NodeGroupResourceArray and NodeGroupResourceArrayOutput values.
// You can construct a concrete instance of `NodeGroupResourceArrayInput` via:
//
//	NodeGroupResourceArray{ NodeGroupResourceArgs{...} }
type NodeGroupResourceArrayInput interface {
	pulumi.Input

	ToNodeGroupResourceArrayOutput() NodeGroupResourceArrayOutput
	ToNodeGroupResourceArrayOutputWithContext(context.Context) NodeGroupResourceArrayOutput
}

type NodeGroupResourceArray []NodeGroupResourceInput

func (NodeGroupResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupResource)(nil)).Elem()
}

func (i NodeGroupResourceArray) ToNodeGroupResourceArrayOutput() NodeGroupResourceArrayOutput {
	return i.ToNodeGroupResourceArrayOutputWithContext(context.Background())
}

func (i NodeGroupResourceArray) ToNodeGroupResourceArrayOutputWithContext(ctx context.Context) NodeGroupResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupResourceArrayOutput)
}

type NodeGroupResourceOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupResource)(nil)).Elem()
}

func (o NodeGroupResourceOutput) ToNodeGroupResourceOutput() NodeGroupResourceOutput {
	return o
}

func (o NodeGroupResourceOutput) ToNodeGroupResourceOutputWithContext(ctx context.Context) NodeGroupResourceOutput {
	return o
}

// List of objects containing information about AutoScaling Groups.
func (o NodeGroupResourceOutput) AutoscalingGroups() NodeGroupResourceAutoscalingGroupArrayOutput {
	return o.ApplyT(func(v NodeGroupResource) []NodeGroupResourceAutoscalingGroup { return v.AutoscalingGroups }).(NodeGroupResourceAutoscalingGroupArrayOutput)
}

// Identifier of the remote access EC2 Security Group.
func (o NodeGroupResourceOutput) RemoteAccessSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupResource) *string { return v.RemoteAccessSecurityGroupId }).(pulumi.StringPtrOutput)
}

type NodeGroupResourceArrayOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupResource)(nil)).Elem()
}

func (o NodeGroupResourceArrayOutput) ToNodeGroupResourceArrayOutput() NodeGroupResourceArrayOutput {
	return o
}

func (o NodeGroupResourceArrayOutput) ToNodeGroupResourceArrayOutputWithContext(ctx context.Context) NodeGroupResourceArrayOutput {
	return o
}

func (o NodeGroupResourceArrayOutput) Index(i pulumi.IntInput) NodeGroupResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeGroupResource {
		return vs[0].([]NodeGroupResource)[vs[1].(int)]
	}).(NodeGroupResourceOutput)
}

type NodeGroupResourceAutoscalingGroup struct {
	// Name of the AutoScaling Group.
	Name *string `pulumi:"name"`
}

// NodeGroupResourceAutoscalingGroupInput is an input type that accepts NodeGroupResourceAutoscalingGroupArgs and NodeGroupResourceAutoscalingGroupOutput values.
// You can construct a concrete instance of `NodeGroupResourceAutoscalingGroupInput` via:
//
//	NodeGroupResourceAutoscalingGroupArgs{...}
type NodeGroupResourceAutoscalingGroupInput interface {
	pulumi.Input

	ToNodeGroupResourceAutoscalingGroupOutput() NodeGroupResourceAutoscalingGroupOutput
	ToNodeGroupResourceAutoscalingGroupOutputWithContext(context.Context) NodeGroupResourceAutoscalingGroupOutput
}

type NodeGroupResourceAutoscalingGroupArgs struct {
	// Name of the AutoScaling Group.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NodeGroupResourceAutoscalingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (i NodeGroupResourceAutoscalingGroupArgs) ToNodeGroupResourceAutoscalingGroupOutput() NodeGroupResourceAutoscalingGroupOutput {
	return i.ToNodeGroupResourceAutoscalingGroupOutputWithContext(context.Background())
}

func (i NodeGroupResourceAutoscalingGroupArgs) ToNodeGroupResourceAutoscalingGroupOutputWithContext(ctx context.Context) NodeGroupResourceAutoscalingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupResourceAutoscalingGroupOutput)
}

// NodeGroupResourceAutoscalingGroupArrayInput is an input type that accepts NodeGroupResourceAutoscalingGroupArray and NodeGroupResourceAutoscalingGroupArrayOutput values.
// You can construct a concrete instance of `NodeGroupResourceAutoscalingGroupArrayInput` via:
//
//	NodeGroupResourceAutoscalingGroupArray{ NodeGroupResourceAutoscalingGroupArgs{...} }
type NodeGroupResourceAutoscalingGroupArrayInput interface {
	pulumi.Input

	ToNodeGroupResourceAutoscalingGroupArrayOutput() NodeGroupResourceAutoscalingGroupArrayOutput
	ToNodeGroupResourceAutoscalingGroupArrayOutputWithContext(context.Context) NodeGroupResourceAutoscalingGroupArrayOutput
}

type NodeGroupResourceAutoscalingGroupArray []NodeGroupResourceAutoscalingGroupInput

func (NodeGroupResourceAutoscalingGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (i NodeGroupResourceAutoscalingGroupArray) ToNodeGroupResourceAutoscalingGroupArrayOutput() NodeGroupResourceAutoscalingGroupArrayOutput {
	return i.ToNodeGroupResourceAutoscalingGroupArrayOutputWithContext(context.Background())
}

func (i NodeGroupResourceAutoscalingGroupArray) ToNodeGroupResourceAutoscalingGroupArrayOutputWithContext(ctx context.Context) NodeGroupResourceAutoscalingGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupResourceAutoscalingGroupArrayOutput)
}

type NodeGroupResourceAutoscalingGroupOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceAutoscalingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o NodeGroupResourceAutoscalingGroupOutput) ToNodeGroupResourceAutoscalingGroupOutput() NodeGroupResourceAutoscalingGroupOutput {
	return o
}

func (o NodeGroupResourceAutoscalingGroupOutput) ToNodeGroupResourceAutoscalingGroupOutputWithContext(ctx context.Context) NodeGroupResourceAutoscalingGroupOutput {
	return o
}

// Name of the AutoScaling Group.
func (o NodeGroupResourceAutoscalingGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupResourceAutoscalingGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NodeGroupResourceAutoscalingGroupArrayOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceAutoscalingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o NodeGroupResourceAutoscalingGroupArrayOutput) ToNodeGroupResourceAutoscalingGroupArrayOutput() NodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o NodeGroupResourceAutoscalingGroupArrayOutput) ToNodeGroupResourceAutoscalingGroupArrayOutputWithContext(ctx context.Context) NodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o NodeGroupResourceAutoscalingGroupArrayOutput) Index(i pulumi.IntInput) NodeGroupResourceAutoscalingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeGroupResourceAutoscalingGroup {
		return vs[0].([]NodeGroupResourceAutoscalingGroup)[vs[1].(int)]
	}).(NodeGroupResourceAutoscalingGroupOutput)
}

type NodeGroupScalingConfig struct {
	// Desired number of worker nodes.
	DesiredSize int `pulumi:"desiredSize"`
	// Maximum number of worker nodes.
	MaxSize int `pulumi:"maxSize"`
	// Minimum number of worker nodes.
	MinSize int `pulumi:"minSize"`
}

// NodeGroupScalingConfigInput is an input type that accepts NodeGroupScalingConfigArgs and NodeGroupScalingConfigOutput values.
// You can construct a concrete instance of `NodeGroupScalingConfigInput` via:
//
//	NodeGroupScalingConfigArgs{...}
type NodeGroupScalingConfigInput interface {
	pulumi.Input

	ToNodeGroupScalingConfigOutput() NodeGroupScalingConfigOutput
	ToNodeGroupScalingConfigOutputWithContext(context.Context) NodeGroupScalingConfigOutput
}

type NodeGroupScalingConfigArgs struct {
	// Desired number of worker nodes.
	DesiredSize pulumi.IntInput `pulumi:"desiredSize"`
	// Maximum number of worker nodes.
	MaxSize pulumi.IntInput `pulumi:"maxSize"`
	// Minimum number of worker nodes.
	MinSize pulumi.IntInput `pulumi:"minSize"`
}

func (NodeGroupScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupScalingConfig)(nil)).Elem()
}

func (i NodeGroupScalingConfigArgs) ToNodeGroupScalingConfigOutput() NodeGroupScalingConfigOutput {
	return i.ToNodeGroupScalingConfigOutputWithContext(context.Background())
}

func (i NodeGroupScalingConfigArgs) ToNodeGroupScalingConfigOutputWithContext(ctx context.Context) NodeGroupScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupScalingConfigOutput)
}

func (i NodeGroupScalingConfigArgs) ToNodeGroupScalingConfigPtrOutput() NodeGroupScalingConfigPtrOutput {
	return i.ToNodeGroupScalingConfigPtrOutputWithContext(context.Background())
}

func (i NodeGroupScalingConfigArgs) ToNodeGroupScalingConfigPtrOutputWithContext(ctx context.Context) NodeGroupScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupScalingConfigOutput).ToNodeGroupScalingConfigPtrOutputWithContext(ctx)
}

// NodeGroupScalingConfigPtrInput is an input type that accepts NodeGroupScalingConfigArgs, NodeGroupScalingConfigPtr and NodeGroupScalingConfigPtrOutput values.
// You can construct a concrete instance of `NodeGroupScalingConfigPtrInput` via:
//
//	        NodeGroupScalingConfigArgs{...}
//
//	or:
//
//	        nil
type NodeGroupScalingConfigPtrInput interface {
	pulumi.Input

	ToNodeGroupScalingConfigPtrOutput() NodeGroupScalingConfigPtrOutput
	ToNodeGroupScalingConfigPtrOutputWithContext(context.Context) NodeGroupScalingConfigPtrOutput
}

type nodeGroupScalingConfigPtrType NodeGroupScalingConfigArgs

func NodeGroupScalingConfigPtr(v *NodeGroupScalingConfigArgs) NodeGroupScalingConfigPtrInput {
	return (*nodeGroupScalingConfigPtrType)(v)
}

func (*nodeGroupScalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupScalingConfig)(nil)).Elem()
}

func (i *nodeGroupScalingConfigPtrType) ToNodeGroupScalingConfigPtrOutput() NodeGroupScalingConfigPtrOutput {
	return i.ToNodeGroupScalingConfigPtrOutputWithContext(context.Background())
}

func (i *nodeGroupScalingConfigPtrType) ToNodeGroupScalingConfigPtrOutputWithContext(ctx context.Context) NodeGroupScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupScalingConfigPtrOutput)
}

type NodeGroupScalingConfigOutput struct{ *pulumi.OutputState }

func (NodeGroupScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupScalingConfig)(nil)).Elem()
}

func (o NodeGroupScalingConfigOutput) ToNodeGroupScalingConfigOutput() NodeGroupScalingConfigOutput {
	return o
}

func (o NodeGroupScalingConfigOutput) ToNodeGroupScalingConfigOutputWithContext(ctx context.Context) NodeGroupScalingConfigOutput {
	return o
}

func (o NodeGroupScalingConfigOutput) ToNodeGroupScalingConfigPtrOutput() NodeGroupScalingConfigPtrOutput {
	return o.ToNodeGroupScalingConfigPtrOutputWithContext(context.Background())
}

func (o NodeGroupScalingConfigOutput) ToNodeGroupScalingConfigPtrOutputWithContext(ctx context.Context) NodeGroupScalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupScalingConfig) *NodeGroupScalingConfig {
		return &v
	}).(NodeGroupScalingConfigPtrOutput)
}

// Desired number of worker nodes.
func (o NodeGroupScalingConfigOutput) DesiredSize() pulumi.IntOutput {
	return o.ApplyT(func(v NodeGroupScalingConfig) int { return v.DesiredSize }).(pulumi.IntOutput)
}

// Maximum number of worker nodes.
func (o NodeGroupScalingConfigOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v NodeGroupScalingConfig) int { return v.MaxSize }).(pulumi.IntOutput)
}

// Minimum number of worker nodes.
func (o NodeGroupScalingConfigOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v NodeGroupScalingConfig) int { return v.MinSize }).(pulumi.IntOutput)
}

type NodeGroupScalingConfigPtrOutput struct{ *pulumi.OutputState }

func (NodeGroupScalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupScalingConfig)(nil)).Elem()
}

func (o NodeGroupScalingConfigPtrOutput) ToNodeGroupScalingConfigPtrOutput() NodeGroupScalingConfigPtrOutput {
	return o
}

func (o NodeGroupScalingConfigPtrOutput) ToNodeGroupScalingConfigPtrOutputWithContext(ctx context.Context) NodeGroupScalingConfigPtrOutput {
	return o
}

func (o NodeGroupScalingConfigPtrOutput) Elem() NodeGroupScalingConfigOutput {
	return o.ApplyT(func(v *NodeGroupScalingConfig) NodeGroupScalingConfig {
		if v != nil {
			return *v
		}
		var ret NodeGroupScalingConfig
		return ret
	}).(NodeGroupScalingConfigOutput)
}

// Desired number of worker nodes.
func (o NodeGroupScalingConfigPtrOutput) DesiredSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeGroupScalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredSize
	}).(pulumi.IntPtrOutput)
}

// Maximum number of worker nodes.
func (o NodeGroupScalingConfigPtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeGroupScalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// Minimum number of worker nodes.
func (o NodeGroupScalingConfigPtrOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeGroupScalingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MinSize
	}).(pulumi.IntPtrOutput)
}

type NodeGroupTaint struct {
	// The effect of the taint. Valid values: `NO_SCHEDULE`, `NO_EXECUTE`, `PREFER_NO_SCHEDULE`.
	Effect string `pulumi:"effect"`
	// The key of the taint. Maximum length of 63.
	Key string `pulumi:"key"`
	// The value of the taint. Maximum length of 63.
	Value *string `pulumi:"value"`
}

// NodeGroupTaintInput is an input type that accepts NodeGroupTaintArgs and NodeGroupTaintOutput values.
// You can construct a concrete instance of `NodeGroupTaintInput` via:
//
//	NodeGroupTaintArgs{...}
type NodeGroupTaintInput interface {
	pulumi.Input

	ToNodeGroupTaintOutput() NodeGroupTaintOutput
	ToNodeGroupTaintOutputWithContext(context.Context) NodeGroupTaintOutput
}

type NodeGroupTaintArgs struct {
	// The effect of the taint. Valid values: `NO_SCHEDULE`, `NO_EXECUTE`, `PREFER_NO_SCHEDULE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// The key of the taint. Maximum length of 63.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the taint. Maximum length of 63.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NodeGroupTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupTaint)(nil)).Elem()
}

func (i NodeGroupTaintArgs) ToNodeGroupTaintOutput() NodeGroupTaintOutput {
	return i.ToNodeGroupTaintOutputWithContext(context.Background())
}

func (i NodeGroupTaintArgs) ToNodeGroupTaintOutputWithContext(ctx context.Context) NodeGroupTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupTaintOutput)
}

// NodeGroupTaintArrayInput is an input type that accepts NodeGroupTaintArray and NodeGroupTaintArrayOutput values.
// You can construct a concrete instance of `NodeGroupTaintArrayInput` via:
//
//	NodeGroupTaintArray{ NodeGroupTaintArgs{...} }
type NodeGroupTaintArrayInput interface {
	pulumi.Input

	ToNodeGroupTaintArrayOutput() NodeGroupTaintArrayOutput
	ToNodeGroupTaintArrayOutputWithContext(context.Context) NodeGroupTaintArrayOutput
}

type NodeGroupTaintArray []NodeGroupTaintInput

func (NodeGroupTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupTaint)(nil)).Elem()
}

func (i NodeGroupTaintArray) ToNodeGroupTaintArrayOutput() NodeGroupTaintArrayOutput {
	return i.ToNodeGroupTaintArrayOutputWithContext(context.Background())
}

func (i NodeGroupTaintArray) ToNodeGroupTaintArrayOutputWithContext(ctx context.Context) NodeGroupTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupTaintArrayOutput)
}

type NodeGroupTaintOutput struct{ *pulumi.OutputState }

func (NodeGroupTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupTaint)(nil)).Elem()
}

func (o NodeGroupTaintOutput) ToNodeGroupTaintOutput() NodeGroupTaintOutput {
	return o
}

func (o NodeGroupTaintOutput) ToNodeGroupTaintOutputWithContext(ctx context.Context) NodeGroupTaintOutput {
	return o
}

// The effect of the taint. Valid values: `NO_SCHEDULE`, `NO_EXECUTE`, `PREFER_NO_SCHEDULE`.
func (o NodeGroupTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// The key of the taint. Maximum length of 63.
func (o NodeGroupTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupTaint) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the taint. Maximum length of 63.
func (o NodeGroupTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NodeGroupTaintArrayOutput struct{ *pulumi.OutputState }

func (NodeGroupTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupTaint)(nil)).Elem()
}

func (o NodeGroupTaintArrayOutput) ToNodeGroupTaintArrayOutput() NodeGroupTaintArrayOutput {
	return o
}

func (o NodeGroupTaintArrayOutput) ToNodeGroupTaintArrayOutputWithContext(ctx context.Context) NodeGroupTaintArrayOutput {
	return o
}

func (o NodeGroupTaintArrayOutput) Index(i pulumi.IntInput) NodeGroupTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeGroupTaint {
		return vs[0].([]NodeGroupTaint)[vs[1].(int)]
	}).(NodeGroupTaintOutput)
}

type NodeGroupUpdateConfig struct {
	// Desired max number of unavailable worker nodes during node group update.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
	// Desired max percentage of unavailable worker nodes during node group update.
	MaxUnavailablePercentage *int `pulumi:"maxUnavailablePercentage"`
}

// NodeGroupUpdateConfigInput is an input type that accepts NodeGroupUpdateConfigArgs and NodeGroupUpdateConfigOutput values.
// You can construct a concrete instance of `NodeGroupUpdateConfigInput` via:
//
//	NodeGroupUpdateConfigArgs{...}
type NodeGroupUpdateConfigInput interface {
	pulumi.Input

	ToNodeGroupUpdateConfigOutput() NodeGroupUpdateConfigOutput
	ToNodeGroupUpdateConfigOutputWithContext(context.Context) NodeGroupUpdateConfigOutput
}

type NodeGroupUpdateConfigArgs struct {
	// Desired max number of unavailable worker nodes during node group update.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
	// Desired max percentage of unavailable worker nodes during node group update.
	MaxUnavailablePercentage pulumi.IntPtrInput `pulumi:"maxUnavailablePercentage"`
}

func (NodeGroupUpdateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupUpdateConfig)(nil)).Elem()
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigOutput() NodeGroupUpdateConfigOutput {
	return i.ToNodeGroupUpdateConfigOutputWithContext(context.Background())
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigOutputWithContext(ctx context.Context) NodeGroupUpdateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupUpdateConfigOutput)
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return i.ToNodeGroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupUpdateConfigOutput).ToNodeGroupUpdateConfigPtrOutputWithContext(ctx)
}

// NodeGroupUpdateConfigPtrInput is an input type that accepts NodeGroupUpdateConfigArgs, NodeGroupUpdateConfigPtr and NodeGroupUpdateConfigPtrOutput values.
// You can construct a concrete instance of `NodeGroupUpdateConfigPtrInput` via:
//
//	        NodeGroupUpdateConfigArgs{...}
//
//	or:
//
//	        nil
type NodeGroupUpdateConfigPtrInput interface {
	pulumi.Input

	ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput
	ToNodeGroupUpdateConfigPtrOutputWithContext(context.Context) NodeGroupUpdateConfigPtrOutput
}

type nodeGroupUpdateConfigPtrType NodeGroupUpdateConfigArgs

func NodeGroupUpdateConfigPtr(v *NodeGroupUpdateConfigArgs) NodeGroupUpdateConfigPtrInput {
	return (*nodeGroupUpdateConfigPtrType)(v)
}

func (*nodeGroupUpdateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupUpdateConfig)(nil)).Elem()
}

func (i *nodeGroupUpdateConfigPtrType) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return i.ToNodeGroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i *nodeGroupUpdateConfigPtrType) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupUpdateConfigPtrOutput)
}

type NodeGroupUpdateConfigOutput struct{ *pulumi.OutputState }

func (NodeGroupUpdateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupUpdateConfig)(nil)).Elem()
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigOutput() NodeGroupUpdateConfigOutput {
	return o
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigOutputWithContext(ctx context.Context) NodeGroupUpdateConfigOutput {
	return o
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return o.ToNodeGroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupUpdateConfig) *NodeGroupUpdateConfig {
		return &v
	}).(NodeGroupUpdateConfigPtrOutput)
}

// Desired max number of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeGroupUpdateConfig) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

// Desired max percentage of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeGroupUpdateConfig) *int { return v.MaxUnavailablePercentage }).(pulumi.IntPtrOutput)
}

type NodeGroupUpdateConfigPtrOutput struct{ *pulumi.OutputState }

func (NodeGroupUpdateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupUpdateConfig)(nil)).Elem()
}

func (o NodeGroupUpdateConfigPtrOutput) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return o
}

func (o NodeGroupUpdateConfigPtrOutput) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return o
}

func (o NodeGroupUpdateConfigPtrOutput) Elem() NodeGroupUpdateConfigOutput {
	return o.ApplyT(func(v *NodeGroupUpdateConfig) NodeGroupUpdateConfig {
		if v != nil {
			return *v
		}
		var ret NodeGroupUpdateConfig
		return ret
	}).(NodeGroupUpdateConfigOutput)
}

// Desired max number of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeGroupUpdateConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// Desired max percentage of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigPtrOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeGroupUpdateConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailablePercentage
	}).(pulumi.IntPtrOutput)
}

type GetClusterAccessConfig struct {
	// Values returned are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`
	AuthenticationMode string `pulumi:"authenticationMode"`
}

// GetClusterAccessConfigInput is an input type that accepts GetClusterAccessConfigArgs and GetClusterAccessConfigOutput values.
// You can construct a concrete instance of `GetClusterAccessConfigInput` via:
//
//	GetClusterAccessConfigArgs{...}
type GetClusterAccessConfigInput interface {
	pulumi.Input

	ToGetClusterAccessConfigOutput() GetClusterAccessConfigOutput
	ToGetClusterAccessConfigOutputWithContext(context.Context) GetClusterAccessConfigOutput
}

type GetClusterAccessConfigArgs struct {
	// Values returned are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`
	AuthenticationMode pulumi.StringInput `pulumi:"authenticationMode"`
}

func (GetClusterAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAccessConfig)(nil)).Elem()
}

func (i GetClusterAccessConfigArgs) ToGetClusterAccessConfigOutput() GetClusterAccessConfigOutput {
	return i.ToGetClusterAccessConfigOutputWithContext(context.Background())
}

func (i GetClusterAccessConfigArgs) ToGetClusterAccessConfigOutputWithContext(ctx context.Context) GetClusterAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAccessConfigOutput)
}

// GetClusterAccessConfigArrayInput is an input type that accepts GetClusterAccessConfigArray and GetClusterAccessConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAccessConfigArrayInput` via:
//
//	GetClusterAccessConfigArray{ GetClusterAccessConfigArgs{...} }
type GetClusterAccessConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAccessConfigArrayOutput() GetClusterAccessConfigArrayOutput
	ToGetClusterAccessConfigArrayOutputWithContext(context.Context) GetClusterAccessConfigArrayOutput
}

type GetClusterAccessConfigArray []GetClusterAccessConfigInput

func (GetClusterAccessConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAccessConfig)(nil)).Elem()
}

func (i GetClusterAccessConfigArray) ToGetClusterAccessConfigArrayOutput() GetClusterAccessConfigArrayOutput {
	return i.ToGetClusterAccessConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAccessConfigArray) ToGetClusterAccessConfigArrayOutputWithContext(ctx context.Context) GetClusterAccessConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAccessConfigArrayOutput)
}

type GetClusterAccessConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAccessConfig)(nil)).Elem()
}

func (o GetClusterAccessConfigOutput) ToGetClusterAccessConfigOutput() GetClusterAccessConfigOutput {
	return o
}

func (o GetClusterAccessConfigOutput) ToGetClusterAccessConfigOutputWithContext(ctx context.Context) GetClusterAccessConfigOutput {
	return o
}

// Values returned are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`
func (o GetClusterAccessConfigOutput) AuthenticationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAccessConfig) string { return v.AuthenticationMode }).(pulumi.StringOutput)
}

type GetClusterAccessConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAccessConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAccessConfig)(nil)).Elem()
}

func (o GetClusterAccessConfigArrayOutput) ToGetClusterAccessConfigArrayOutput() GetClusterAccessConfigArrayOutput {
	return o
}

func (o GetClusterAccessConfigArrayOutput) ToGetClusterAccessConfigArrayOutputWithContext(ctx context.Context) GetClusterAccessConfigArrayOutput {
	return o
}

func (o GetClusterAccessConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAccessConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAccessConfig {
		return vs[0].([]GetClusterAccessConfig)[vs[1].(int)]
	}).(GetClusterAccessConfigOutput)
}

type GetClusterCertificateAuthority struct {
	// The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
	Data string `pulumi:"data"`
}

// GetClusterCertificateAuthorityInput is an input type that accepts GetClusterCertificateAuthorityArgs and GetClusterCertificateAuthorityOutput values.
// You can construct a concrete instance of `GetClusterCertificateAuthorityInput` via:
//
//	GetClusterCertificateAuthorityArgs{...}
type GetClusterCertificateAuthorityInput interface {
	pulumi.Input

	ToGetClusterCertificateAuthorityOutput() GetClusterCertificateAuthorityOutput
	ToGetClusterCertificateAuthorityOutputWithContext(context.Context) GetClusterCertificateAuthorityOutput
}

type GetClusterCertificateAuthorityArgs struct {
	// The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
	Data pulumi.StringInput `pulumi:"data"`
}

func (GetClusterCertificateAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCertificateAuthority)(nil)).Elem()
}

func (i GetClusterCertificateAuthorityArgs) ToGetClusterCertificateAuthorityOutput() GetClusterCertificateAuthorityOutput {
	return i.ToGetClusterCertificateAuthorityOutputWithContext(context.Background())
}

func (i GetClusterCertificateAuthorityArgs) ToGetClusterCertificateAuthorityOutputWithContext(ctx context.Context) GetClusterCertificateAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCertificateAuthorityOutput)
}

// GetClusterCertificateAuthorityArrayInput is an input type that accepts GetClusterCertificateAuthorityArray and GetClusterCertificateAuthorityArrayOutput values.
// You can construct a concrete instance of `GetClusterCertificateAuthorityArrayInput` via:
//
//	GetClusterCertificateAuthorityArray{ GetClusterCertificateAuthorityArgs{...} }
type GetClusterCertificateAuthorityArrayInput interface {
	pulumi.Input

	ToGetClusterCertificateAuthorityArrayOutput() GetClusterCertificateAuthorityArrayOutput
	ToGetClusterCertificateAuthorityArrayOutputWithContext(context.Context) GetClusterCertificateAuthorityArrayOutput
}

type GetClusterCertificateAuthorityArray []GetClusterCertificateAuthorityInput

func (GetClusterCertificateAuthorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCertificateAuthority)(nil)).Elem()
}

func (i GetClusterCertificateAuthorityArray) ToGetClusterCertificateAuthorityArrayOutput() GetClusterCertificateAuthorityArrayOutput {
	return i.ToGetClusterCertificateAuthorityArrayOutputWithContext(context.Background())
}

func (i GetClusterCertificateAuthorityArray) ToGetClusterCertificateAuthorityArrayOutputWithContext(ctx context.Context) GetClusterCertificateAuthorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCertificateAuthorityArrayOutput)
}

type GetClusterCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (GetClusterCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCertificateAuthority)(nil)).Elem()
}

func (o GetClusterCertificateAuthorityOutput) ToGetClusterCertificateAuthorityOutput() GetClusterCertificateAuthorityOutput {
	return o
}

func (o GetClusterCertificateAuthorityOutput) ToGetClusterCertificateAuthorityOutputWithContext(ctx context.Context) GetClusterCertificateAuthorityOutput {
	return o
}

// The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
func (o GetClusterCertificateAuthorityOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCertificateAuthority) string { return v.Data }).(pulumi.StringOutput)
}

type GetClusterCertificateAuthorityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCertificateAuthorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCertificateAuthority)(nil)).Elem()
}

func (o GetClusterCertificateAuthorityArrayOutput) ToGetClusterCertificateAuthorityArrayOutput() GetClusterCertificateAuthorityArrayOutput {
	return o
}

func (o GetClusterCertificateAuthorityArrayOutput) ToGetClusterCertificateAuthorityArrayOutputWithContext(ctx context.Context) GetClusterCertificateAuthorityArrayOutput {
	return o
}

func (o GetClusterCertificateAuthorityArrayOutput) Index(i pulumi.IntInput) GetClusterCertificateAuthorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCertificateAuthority {
		return vs[0].([]GetClusterCertificateAuthority)[vs[1].(int)]
	}).(GetClusterCertificateAuthorityOutput)
}

type GetClusterIdentity struct {
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
	Oidcs []GetClusterIdentityOidc `pulumi:"oidcs"`
}

// GetClusterIdentityInput is an input type that accepts GetClusterIdentityArgs and GetClusterIdentityOutput values.
// You can construct a concrete instance of `GetClusterIdentityInput` via:
//
//	GetClusterIdentityArgs{...}
type GetClusterIdentityInput interface {
	pulumi.Input

	ToGetClusterIdentityOutput() GetClusterIdentityOutput
	ToGetClusterIdentityOutputWithContext(context.Context) GetClusterIdentityOutput
}

type GetClusterIdentityArgs struct {
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
	Oidcs GetClusterIdentityOidcArrayInput `pulumi:"oidcs"`
}

func (GetClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentity)(nil)).Elem()
}

func (i GetClusterIdentityArgs) ToGetClusterIdentityOutput() GetClusterIdentityOutput {
	return i.ToGetClusterIdentityOutputWithContext(context.Background())
}

func (i GetClusterIdentityArgs) ToGetClusterIdentityOutputWithContext(ctx context.Context) GetClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIdentityOutput)
}

// GetClusterIdentityArrayInput is an input type that accepts GetClusterIdentityArray and GetClusterIdentityArrayOutput values.
// You can construct a concrete instance of `GetClusterIdentityArrayInput` via:
//
//	GetClusterIdentityArray{ GetClusterIdentityArgs{...} }
type GetClusterIdentityArrayInput interface {
	pulumi.Input

	ToGetClusterIdentityArrayOutput() GetClusterIdentityArrayOutput
	ToGetClusterIdentityArrayOutputWithContext(context.Context) GetClusterIdentityArrayOutput
}

type GetClusterIdentityArray []GetClusterIdentityInput

func (GetClusterIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentity)(nil)).Elem()
}

func (i GetClusterIdentityArray) ToGetClusterIdentityArrayOutput() GetClusterIdentityArrayOutput {
	return i.ToGetClusterIdentityArrayOutputWithContext(context.Background())
}

func (i GetClusterIdentityArray) ToGetClusterIdentityArrayOutputWithContext(ctx context.Context) GetClusterIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIdentityArrayOutput)
}

type GetClusterIdentityOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentity)(nil)).Elem()
}

func (o GetClusterIdentityOutput) ToGetClusterIdentityOutput() GetClusterIdentityOutput {
	return o
}

func (o GetClusterIdentityOutput) ToGetClusterIdentityOutputWithContext(ctx context.Context) GetClusterIdentityOutput {
	return o
}

// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
func (o GetClusterIdentityOutput) Oidcs() GetClusterIdentityOidcArrayOutput {
	return o.ApplyT(func(v GetClusterIdentity) []GetClusterIdentityOidc { return v.Oidcs }).(GetClusterIdentityOidcArrayOutput)
}

type GetClusterIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentity)(nil)).Elem()
}

func (o GetClusterIdentityArrayOutput) ToGetClusterIdentityArrayOutput() GetClusterIdentityArrayOutput {
	return o
}

func (o GetClusterIdentityArrayOutput) ToGetClusterIdentityArrayOutputWithContext(ctx context.Context) GetClusterIdentityArrayOutput {
	return o
}

func (o GetClusterIdentityArrayOutput) Index(i pulumi.IntInput) GetClusterIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIdentity {
		return vs[0].([]GetClusterIdentity)[vs[1].(int)]
	}).(GetClusterIdentityOutput)
}

type GetClusterIdentityOidc struct {
	// Issuer URL for the OpenID Connect identity provider.
	Issuer string `pulumi:"issuer"`
}

// GetClusterIdentityOidcInput is an input type that accepts GetClusterIdentityOidcArgs and GetClusterIdentityOidcOutput values.
// You can construct a concrete instance of `GetClusterIdentityOidcInput` via:
//
//	GetClusterIdentityOidcArgs{...}
type GetClusterIdentityOidcInput interface {
	pulumi.Input

	ToGetClusterIdentityOidcOutput() GetClusterIdentityOidcOutput
	ToGetClusterIdentityOidcOutputWithContext(context.Context) GetClusterIdentityOidcOutput
}

type GetClusterIdentityOidcArgs struct {
	// Issuer URL for the OpenID Connect identity provider.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (GetClusterIdentityOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentityOidc)(nil)).Elem()
}

func (i GetClusterIdentityOidcArgs) ToGetClusterIdentityOidcOutput() GetClusterIdentityOidcOutput {
	return i.ToGetClusterIdentityOidcOutputWithContext(context.Background())
}

func (i GetClusterIdentityOidcArgs) ToGetClusterIdentityOidcOutputWithContext(ctx context.Context) GetClusterIdentityOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIdentityOidcOutput)
}

// GetClusterIdentityOidcArrayInput is an input type that accepts GetClusterIdentityOidcArray and GetClusterIdentityOidcArrayOutput values.
// You can construct a concrete instance of `GetClusterIdentityOidcArrayInput` via:
//
//	GetClusterIdentityOidcArray{ GetClusterIdentityOidcArgs{...} }
type GetClusterIdentityOidcArrayInput interface {
	pulumi.Input

	ToGetClusterIdentityOidcArrayOutput() GetClusterIdentityOidcArrayOutput
	ToGetClusterIdentityOidcArrayOutputWithContext(context.Context) GetClusterIdentityOidcArrayOutput
}

type GetClusterIdentityOidcArray []GetClusterIdentityOidcInput

func (GetClusterIdentityOidcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentityOidc)(nil)).Elem()
}

func (i GetClusterIdentityOidcArray) ToGetClusterIdentityOidcArrayOutput() GetClusterIdentityOidcArrayOutput {
	return i.ToGetClusterIdentityOidcArrayOutputWithContext(context.Background())
}

func (i GetClusterIdentityOidcArray) ToGetClusterIdentityOidcArrayOutputWithContext(ctx context.Context) GetClusterIdentityOidcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIdentityOidcArrayOutput)
}

type GetClusterIdentityOidcOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentityOidc)(nil)).Elem()
}

func (o GetClusterIdentityOidcOutput) ToGetClusterIdentityOidcOutput() GetClusterIdentityOidcOutput {
	return o
}

func (o GetClusterIdentityOidcOutput) ToGetClusterIdentityOidcOutputWithContext(ctx context.Context) GetClusterIdentityOidcOutput {
	return o
}

// Issuer URL for the OpenID Connect identity provider.
func (o GetClusterIdentityOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIdentityOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

type GetClusterIdentityOidcArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityOidcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentityOidc)(nil)).Elem()
}

func (o GetClusterIdentityOidcArrayOutput) ToGetClusterIdentityOidcArrayOutput() GetClusterIdentityOidcArrayOutput {
	return o
}

func (o GetClusterIdentityOidcArrayOutput) ToGetClusterIdentityOidcArrayOutputWithContext(ctx context.Context) GetClusterIdentityOidcArrayOutput {
	return o
}

func (o GetClusterIdentityOidcArrayOutput) Index(i pulumi.IntInput) GetClusterIdentityOidcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIdentityOidc {
		return vs[0].([]GetClusterIdentityOidc)[vs[1].(int)]
	}).(GetClusterIdentityOidcOutput)
}

type GetClusterKubernetesNetworkConfig struct {
	// `ipv4` or `ipv6`.
	IpFamily string `pulumi:"ipFamily"`
	// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv4` was specified when the cluster was created.
	ServiceIpv4Cidr string `pulumi:"serviceIpv4Cidr"`
	// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was created. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
	ServiceIpv6Cidr string `pulumi:"serviceIpv6Cidr"`
}

// GetClusterKubernetesNetworkConfigInput is an input type that accepts GetClusterKubernetesNetworkConfigArgs and GetClusterKubernetesNetworkConfigOutput values.
// You can construct a concrete instance of `GetClusterKubernetesNetworkConfigInput` via:
//
//	GetClusterKubernetesNetworkConfigArgs{...}
type GetClusterKubernetesNetworkConfigInput interface {
	pulumi.Input

	ToGetClusterKubernetesNetworkConfigOutput() GetClusterKubernetesNetworkConfigOutput
	ToGetClusterKubernetesNetworkConfigOutputWithContext(context.Context) GetClusterKubernetesNetworkConfigOutput
}

type GetClusterKubernetesNetworkConfigArgs struct {
	// `ipv4` or `ipv6`.
	IpFamily pulumi.StringInput `pulumi:"ipFamily"`
	// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv4` was specified when the cluster was created.
	ServiceIpv4Cidr pulumi.StringInput `pulumi:"serviceIpv4Cidr"`
	// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was created. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
	ServiceIpv6Cidr pulumi.StringInput `pulumi:"serviceIpv6Cidr"`
}

func (GetClusterKubernetesNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i GetClusterKubernetesNetworkConfigArgs) ToGetClusterKubernetesNetworkConfigOutput() GetClusterKubernetesNetworkConfigOutput {
	return i.ToGetClusterKubernetesNetworkConfigOutputWithContext(context.Background())
}

func (i GetClusterKubernetesNetworkConfigArgs) ToGetClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) GetClusterKubernetesNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterKubernetesNetworkConfigOutput)
}

// GetClusterKubernetesNetworkConfigArrayInput is an input type that accepts GetClusterKubernetesNetworkConfigArray and GetClusterKubernetesNetworkConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterKubernetesNetworkConfigArrayInput` via:
//
//	GetClusterKubernetesNetworkConfigArray{ GetClusterKubernetesNetworkConfigArgs{...} }
type GetClusterKubernetesNetworkConfigArrayInput interface {
	pulumi.Input

	ToGetClusterKubernetesNetworkConfigArrayOutput() GetClusterKubernetesNetworkConfigArrayOutput
	ToGetClusterKubernetesNetworkConfigArrayOutputWithContext(context.Context) GetClusterKubernetesNetworkConfigArrayOutput
}

type GetClusterKubernetesNetworkConfigArray []GetClusterKubernetesNetworkConfigInput

func (GetClusterKubernetesNetworkConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i GetClusterKubernetesNetworkConfigArray) ToGetClusterKubernetesNetworkConfigArrayOutput() GetClusterKubernetesNetworkConfigArrayOutput {
	return i.ToGetClusterKubernetesNetworkConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterKubernetesNetworkConfigArray) ToGetClusterKubernetesNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterKubernetesNetworkConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterKubernetesNetworkConfigArrayOutput)
}

type GetClusterKubernetesNetworkConfigOutput struct{ *pulumi.OutputState }

func (GetClusterKubernetesNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o GetClusterKubernetesNetworkConfigOutput) ToGetClusterKubernetesNetworkConfigOutput() GetClusterKubernetesNetworkConfigOutput {
	return o
}

func (o GetClusterKubernetesNetworkConfigOutput) ToGetClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) GetClusterKubernetesNetworkConfigOutput {
	return o
}

// `ipv4` or `ipv6`.
func (o GetClusterKubernetesNetworkConfigOutput) IpFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubernetesNetworkConfig) string { return v.IpFamily }).(pulumi.StringOutput)
}

// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv4` was specified when the cluster was created.
func (o GetClusterKubernetesNetworkConfigOutput) ServiceIpv4Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubernetesNetworkConfig) string { return v.ServiceIpv4Cidr }).(pulumi.StringOutput)
}

// The CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was created. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
func (o GetClusterKubernetesNetworkConfigOutput) ServiceIpv6Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubernetesNetworkConfig) string { return v.ServiceIpv6Cidr }).(pulumi.StringOutput)
}

type GetClusterKubernetesNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterKubernetesNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o GetClusterKubernetesNetworkConfigArrayOutput) ToGetClusterKubernetesNetworkConfigArrayOutput() GetClusterKubernetesNetworkConfigArrayOutput {
	return o
}

func (o GetClusterKubernetesNetworkConfigArrayOutput) ToGetClusterKubernetesNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterKubernetesNetworkConfigArrayOutput {
	return o
}

func (o GetClusterKubernetesNetworkConfigArrayOutput) Index(i pulumi.IntInput) GetClusterKubernetesNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterKubernetesNetworkConfig {
		return vs[0].([]GetClusterKubernetesNetworkConfig)[vs[1].(int)]
	}).(GetClusterKubernetesNetworkConfigOutput)
}

type GetClusterOutpostConfig struct {
	// The Amazon EC2 instance type for all Kubernetes control plane instances.
	ControlPlaneInstanceType string `pulumi:"controlPlaneInstanceType"`
	// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
	ControlPlanePlacements []GetClusterOutpostConfigControlPlanePlacement `pulumi:"controlPlanePlacements"`
	// List of ARNs of the Outposts hosting the EKS cluster. Only a single ARN is supported currently.
	OutpostArns []string `pulumi:"outpostArns"`
}

// GetClusterOutpostConfigInput is an input type that accepts GetClusterOutpostConfigArgs and GetClusterOutpostConfigOutput values.
// You can construct a concrete instance of `GetClusterOutpostConfigInput` via:
//
//	GetClusterOutpostConfigArgs{...}
type GetClusterOutpostConfigInput interface {
	pulumi.Input

	ToGetClusterOutpostConfigOutput() GetClusterOutpostConfigOutput
	ToGetClusterOutpostConfigOutputWithContext(context.Context) GetClusterOutpostConfigOutput
}

type GetClusterOutpostConfigArgs struct {
	// The Amazon EC2 instance type for all Kubernetes control plane instances.
	ControlPlaneInstanceType pulumi.StringInput `pulumi:"controlPlaneInstanceType"`
	// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
	ControlPlanePlacements GetClusterOutpostConfigControlPlanePlacementArrayInput `pulumi:"controlPlanePlacements"`
	// List of ARNs of the Outposts hosting the EKS cluster. Only a single ARN is supported currently.
	OutpostArns pulumi.StringArrayInput `pulumi:"outpostArns"`
}

func (GetClusterOutpostConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOutpostConfig)(nil)).Elem()
}

func (i GetClusterOutpostConfigArgs) ToGetClusterOutpostConfigOutput() GetClusterOutpostConfigOutput {
	return i.ToGetClusterOutpostConfigOutputWithContext(context.Background())
}

func (i GetClusterOutpostConfigArgs) ToGetClusterOutpostConfigOutputWithContext(ctx context.Context) GetClusterOutpostConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOutpostConfigOutput)
}

// GetClusterOutpostConfigArrayInput is an input type that accepts GetClusterOutpostConfigArray and GetClusterOutpostConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterOutpostConfigArrayInput` via:
//
//	GetClusterOutpostConfigArray{ GetClusterOutpostConfigArgs{...} }
type GetClusterOutpostConfigArrayInput interface {
	pulumi.Input

	ToGetClusterOutpostConfigArrayOutput() GetClusterOutpostConfigArrayOutput
	ToGetClusterOutpostConfigArrayOutputWithContext(context.Context) GetClusterOutpostConfigArrayOutput
}

type GetClusterOutpostConfigArray []GetClusterOutpostConfigInput

func (GetClusterOutpostConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOutpostConfig)(nil)).Elem()
}

func (i GetClusterOutpostConfigArray) ToGetClusterOutpostConfigArrayOutput() GetClusterOutpostConfigArrayOutput {
	return i.ToGetClusterOutpostConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterOutpostConfigArray) ToGetClusterOutpostConfigArrayOutputWithContext(ctx context.Context) GetClusterOutpostConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOutpostConfigArrayOutput)
}

type GetClusterOutpostConfigOutput struct{ *pulumi.OutputState }

func (GetClusterOutpostConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOutpostConfig)(nil)).Elem()
}

func (o GetClusterOutpostConfigOutput) ToGetClusterOutpostConfigOutput() GetClusterOutpostConfigOutput {
	return o
}

func (o GetClusterOutpostConfigOutput) ToGetClusterOutpostConfigOutputWithContext(ctx context.Context) GetClusterOutpostConfigOutput {
	return o
}

// The Amazon EC2 instance type for all Kubernetes control plane instances.
func (o GetClusterOutpostConfigOutput) ControlPlaneInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOutpostConfig) string { return v.ControlPlaneInstanceType }).(pulumi.StringOutput)
}

// An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
func (o GetClusterOutpostConfigOutput) ControlPlanePlacements() GetClusterOutpostConfigControlPlanePlacementArrayOutput {
	return o.ApplyT(func(v GetClusterOutpostConfig) []GetClusterOutpostConfigControlPlanePlacement {
		return v.ControlPlanePlacements
	}).(GetClusterOutpostConfigControlPlanePlacementArrayOutput)
}

// List of ARNs of the Outposts hosting the EKS cluster. Only a single ARN is supported currently.
func (o GetClusterOutpostConfigOutput) OutpostArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterOutpostConfig) []string { return v.OutpostArns }).(pulumi.StringArrayOutput)
}

type GetClusterOutpostConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterOutpostConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOutpostConfig)(nil)).Elem()
}

func (o GetClusterOutpostConfigArrayOutput) ToGetClusterOutpostConfigArrayOutput() GetClusterOutpostConfigArrayOutput {
	return o
}

func (o GetClusterOutpostConfigArrayOutput) ToGetClusterOutpostConfigArrayOutputWithContext(ctx context.Context) GetClusterOutpostConfigArrayOutput {
	return o
}

func (o GetClusterOutpostConfigArrayOutput) Index(i pulumi.IntInput) GetClusterOutpostConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterOutpostConfig {
		return vs[0].([]GetClusterOutpostConfig)[vs[1].(int)]
	}).(GetClusterOutpostConfigOutput)
}

type GetClusterOutpostConfigControlPlanePlacement struct {
	// The name of the placement group for the Kubernetes control plane instances.
	GroupName string `pulumi:"groupName"`
}

// GetClusterOutpostConfigControlPlanePlacementInput is an input type that accepts GetClusterOutpostConfigControlPlanePlacementArgs and GetClusterOutpostConfigControlPlanePlacementOutput values.
// You can construct a concrete instance of `GetClusterOutpostConfigControlPlanePlacementInput` via:
//
//	GetClusterOutpostConfigControlPlanePlacementArgs{...}
type GetClusterOutpostConfigControlPlanePlacementInput interface {
	pulumi.Input

	ToGetClusterOutpostConfigControlPlanePlacementOutput() GetClusterOutpostConfigControlPlanePlacementOutput
	ToGetClusterOutpostConfigControlPlanePlacementOutputWithContext(context.Context) GetClusterOutpostConfigControlPlanePlacementOutput
}

type GetClusterOutpostConfigControlPlanePlacementArgs struct {
	// The name of the placement group for the Kubernetes control plane instances.
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (GetClusterOutpostConfigControlPlanePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (i GetClusterOutpostConfigControlPlanePlacementArgs) ToGetClusterOutpostConfigControlPlanePlacementOutput() GetClusterOutpostConfigControlPlanePlacementOutput {
	return i.ToGetClusterOutpostConfigControlPlanePlacementOutputWithContext(context.Background())
}

func (i GetClusterOutpostConfigControlPlanePlacementArgs) ToGetClusterOutpostConfigControlPlanePlacementOutputWithContext(ctx context.Context) GetClusterOutpostConfigControlPlanePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOutpostConfigControlPlanePlacementOutput)
}

// GetClusterOutpostConfigControlPlanePlacementArrayInput is an input type that accepts GetClusterOutpostConfigControlPlanePlacementArray and GetClusterOutpostConfigControlPlanePlacementArrayOutput values.
// You can construct a concrete instance of `GetClusterOutpostConfigControlPlanePlacementArrayInput` via:
//
//	GetClusterOutpostConfigControlPlanePlacementArray{ GetClusterOutpostConfigControlPlanePlacementArgs{...} }
type GetClusterOutpostConfigControlPlanePlacementArrayInput interface {
	pulumi.Input

	ToGetClusterOutpostConfigControlPlanePlacementArrayOutput() GetClusterOutpostConfigControlPlanePlacementArrayOutput
	ToGetClusterOutpostConfigControlPlanePlacementArrayOutputWithContext(context.Context) GetClusterOutpostConfigControlPlanePlacementArrayOutput
}

type GetClusterOutpostConfigControlPlanePlacementArray []GetClusterOutpostConfigControlPlanePlacementInput

func (GetClusterOutpostConfigControlPlanePlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (i GetClusterOutpostConfigControlPlanePlacementArray) ToGetClusterOutpostConfigControlPlanePlacementArrayOutput() GetClusterOutpostConfigControlPlanePlacementArrayOutput {
	return i.ToGetClusterOutpostConfigControlPlanePlacementArrayOutputWithContext(context.Background())
}

func (i GetClusterOutpostConfigControlPlanePlacementArray) ToGetClusterOutpostConfigControlPlanePlacementArrayOutputWithContext(ctx context.Context) GetClusterOutpostConfigControlPlanePlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOutpostConfigControlPlanePlacementArrayOutput)
}

type GetClusterOutpostConfigControlPlanePlacementOutput struct{ *pulumi.OutputState }

func (GetClusterOutpostConfigControlPlanePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (o GetClusterOutpostConfigControlPlanePlacementOutput) ToGetClusterOutpostConfigControlPlanePlacementOutput() GetClusterOutpostConfigControlPlanePlacementOutput {
	return o
}

func (o GetClusterOutpostConfigControlPlanePlacementOutput) ToGetClusterOutpostConfigControlPlanePlacementOutputWithContext(ctx context.Context) GetClusterOutpostConfigControlPlanePlacementOutput {
	return o
}

// The name of the placement group for the Kubernetes control plane instances.
func (o GetClusterOutpostConfigControlPlanePlacementOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOutpostConfigControlPlanePlacement) string { return v.GroupName }).(pulumi.StringOutput)
}

type GetClusterOutpostConfigControlPlanePlacementArrayOutput struct{ *pulumi.OutputState }

func (GetClusterOutpostConfigControlPlanePlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOutpostConfigControlPlanePlacement)(nil)).Elem()
}

func (o GetClusterOutpostConfigControlPlanePlacementArrayOutput) ToGetClusterOutpostConfigControlPlanePlacementArrayOutput() GetClusterOutpostConfigControlPlanePlacementArrayOutput {
	return o
}

func (o GetClusterOutpostConfigControlPlanePlacementArrayOutput) ToGetClusterOutpostConfigControlPlanePlacementArrayOutputWithContext(ctx context.Context) GetClusterOutpostConfigControlPlanePlacementArrayOutput {
	return o
}

func (o GetClusterOutpostConfigControlPlanePlacementArrayOutput) Index(i pulumi.IntInput) GetClusterOutpostConfigControlPlanePlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterOutpostConfigControlPlanePlacement {
		return vs[0].([]GetClusterOutpostConfigControlPlanePlacement)[vs[1].(int)]
	}).(GetClusterOutpostConfigControlPlanePlacementOutput)
}

type GetClusterVpcConfig struct {
	// The cluster security group that was created by Amazon EKS for the cluster.
	ClusterSecurityGroupId string `pulumi:"clusterSecurityGroupId"`
	// Indicates whether or not the Amazon EKS private API server endpoint is enabled.
	EndpointPrivateAccess bool `pulumi:"endpointPrivateAccess"`
	// Indicates whether or not the Amazon EKS public API server endpoint is enabled.
	EndpointPublicAccess bool `pulumi:"endpointPublicAccess"`
	// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// List of security group IDs
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of subnet IDs
	SubnetIds []string `pulumi:"subnetIds"`
	// The VPC associated with your cluster.
	VpcId string `pulumi:"vpcId"`
}

// GetClusterVpcConfigInput is an input type that accepts GetClusterVpcConfigArgs and GetClusterVpcConfigOutput values.
// You can construct a concrete instance of `GetClusterVpcConfigInput` via:
//
//	GetClusterVpcConfigArgs{...}
type GetClusterVpcConfigInput interface {
	pulumi.Input

	ToGetClusterVpcConfigOutput() GetClusterVpcConfigOutput
	ToGetClusterVpcConfigOutputWithContext(context.Context) GetClusterVpcConfigOutput
}

type GetClusterVpcConfigArgs struct {
	// The cluster security group that was created by Amazon EKS for the cluster.
	ClusterSecurityGroupId pulumi.StringInput `pulumi:"clusterSecurityGroupId"`
	// Indicates whether or not the Amazon EKS private API server endpoint is enabled.
	EndpointPrivateAccess pulumi.BoolInput `pulumi:"endpointPrivateAccess"`
	// Indicates whether or not the Amazon EKS public API server endpoint is enabled.
	EndpointPublicAccess pulumi.BoolInput `pulumi:"endpointPublicAccess"`
	// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
	PublicAccessCidrs pulumi.StringArrayInput `pulumi:"publicAccessCidrs"`
	// List of security group IDs
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of subnet IDs
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The VPC associated with your cluster.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetClusterVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterVpcConfig)(nil)).Elem()
}

func (i GetClusterVpcConfigArgs) ToGetClusterVpcConfigOutput() GetClusterVpcConfigOutput {
	return i.ToGetClusterVpcConfigOutputWithContext(context.Background())
}

func (i GetClusterVpcConfigArgs) ToGetClusterVpcConfigOutputWithContext(ctx context.Context) GetClusterVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterVpcConfigOutput)
}

type GetClusterVpcConfigOutput struct{ *pulumi.OutputState }

func (GetClusterVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterVpcConfig)(nil)).Elem()
}

func (o GetClusterVpcConfigOutput) ToGetClusterVpcConfigOutput() GetClusterVpcConfigOutput {
	return o
}

func (o GetClusterVpcConfigOutput) ToGetClusterVpcConfigOutputWithContext(ctx context.Context) GetClusterVpcConfigOutput {
	return o
}

// The cluster security group that was created by Amazon EKS for the cluster.
func (o GetClusterVpcConfigOutput) ClusterSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) string { return v.ClusterSecurityGroupId }).(pulumi.StringOutput)
}

// Indicates whether or not the Amazon EKS private API server endpoint is enabled.
func (o GetClusterVpcConfigOutput) EndpointPrivateAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) bool { return v.EndpointPrivateAccess }).(pulumi.BoolOutput)
}

// Indicates whether or not the Amazon EKS public API server endpoint is enabled.
func (o GetClusterVpcConfigOutput) EndpointPublicAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) bool { return v.EndpointPublicAccess }).(pulumi.BoolOutput)
}

// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
func (o GetClusterVpcConfigOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// List of security group IDs
func (o GetClusterVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of subnet IDs
func (o GetClusterVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The VPC associated with your cluster.
func (o GetClusterVpcConfigOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNodeGroupLaunchTemplate struct {
	// The ID of the launch template.
	Id string `pulumi:"id"`
	// Name of the AutoScaling Group.
	Name string `pulumi:"name"`
	// Kubernetes version.
	Version string `pulumi:"version"`
}

// GetNodeGroupLaunchTemplateInput is an input type that accepts GetNodeGroupLaunchTemplateArgs and GetNodeGroupLaunchTemplateOutput values.
// You can construct a concrete instance of `GetNodeGroupLaunchTemplateInput` via:
//
//	GetNodeGroupLaunchTemplateArgs{...}
type GetNodeGroupLaunchTemplateInput interface {
	pulumi.Input

	ToGetNodeGroupLaunchTemplateOutput() GetNodeGroupLaunchTemplateOutput
	ToGetNodeGroupLaunchTemplateOutputWithContext(context.Context) GetNodeGroupLaunchTemplateOutput
}

type GetNodeGroupLaunchTemplateArgs struct {
	// The ID of the launch template.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the AutoScaling Group.
	Name pulumi.StringInput `pulumi:"name"`
	// Kubernetes version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetNodeGroupLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupLaunchTemplate)(nil)).Elem()
}

func (i GetNodeGroupLaunchTemplateArgs) ToGetNodeGroupLaunchTemplateOutput() GetNodeGroupLaunchTemplateOutput {
	return i.ToGetNodeGroupLaunchTemplateOutputWithContext(context.Background())
}

func (i GetNodeGroupLaunchTemplateArgs) ToGetNodeGroupLaunchTemplateOutputWithContext(ctx context.Context) GetNodeGroupLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupLaunchTemplateOutput)
}

// GetNodeGroupLaunchTemplateArrayInput is an input type that accepts GetNodeGroupLaunchTemplateArray and GetNodeGroupLaunchTemplateArrayOutput values.
// You can construct a concrete instance of `GetNodeGroupLaunchTemplateArrayInput` via:
//
//	GetNodeGroupLaunchTemplateArray{ GetNodeGroupLaunchTemplateArgs{...} }
type GetNodeGroupLaunchTemplateArrayInput interface {
	pulumi.Input

	ToGetNodeGroupLaunchTemplateArrayOutput() GetNodeGroupLaunchTemplateArrayOutput
	ToGetNodeGroupLaunchTemplateArrayOutputWithContext(context.Context) GetNodeGroupLaunchTemplateArrayOutput
}

type GetNodeGroupLaunchTemplateArray []GetNodeGroupLaunchTemplateInput

func (GetNodeGroupLaunchTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupLaunchTemplate)(nil)).Elem()
}

func (i GetNodeGroupLaunchTemplateArray) ToGetNodeGroupLaunchTemplateArrayOutput() GetNodeGroupLaunchTemplateArrayOutput {
	return i.ToGetNodeGroupLaunchTemplateArrayOutputWithContext(context.Background())
}

func (i GetNodeGroupLaunchTemplateArray) ToGetNodeGroupLaunchTemplateArrayOutputWithContext(ctx context.Context) GetNodeGroupLaunchTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupLaunchTemplateArrayOutput)
}

type GetNodeGroupLaunchTemplateOutput struct{ *pulumi.OutputState }

func (GetNodeGroupLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupLaunchTemplate)(nil)).Elem()
}

func (o GetNodeGroupLaunchTemplateOutput) ToGetNodeGroupLaunchTemplateOutput() GetNodeGroupLaunchTemplateOutput {
	return o
}

func (o GetNodeGroupLaunchTemplateOutput) ToGetNodeGroupLaunchTemplateOutputWithContext(ctx context.Context) GetNodeGroupLaunchTemplateOutput {
	return o
}

// The ID of the launch template.
func (o GetNodeGroupLaunchTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupLaunchTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the AutoScaling Group.
func (o GetNodeGroupLaunchTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupLaunchTemplate) string { return v.Name }).(pulumi.StringOutput)
}

// Kubernetes version.
func (o GetNodeGroupLaunchTemplateOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupLaunchTemplate) string { return v.Version }).(pulumi.StringOutput)
}

type GetNodeGroupLaunchTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupLaunchTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupLaunchTemplate)(nil)).Elem()
}

func (o GetNodeGroupLaunchTemplateArrayOutput) ToGetNodeGroupLaunchTemplateArrayOutput() GetNodeGroupLaunchTemplateArrayOutput {
	return o
}

func (o GetNodeGroupLaunchTemplateArrayOutput) ToGetNodeGroupLaunchTemplateArrayOutputWithContext(ctx context.Context) GetNodeGroupLaunchTemplateArrayOutput {
	return o
}

func (o GetNodeGroupLaunchTemplateArrayOutput) Index(i pulumi.IntInput) GetNodeGroupLaunchTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupLaunchTemplate {
		return vs[0].([]GetNodeGroupLaunchTemplate)[vs[1].(int)]
	}).(GetNodeGroupLaunchTemplateOutput)
}

type GetNodeGroupRemoteAccess struct {
	// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
	Ec2SshKey string `pulumi:"ec2SshKey"`
	// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
	SourceSecurityGroupIds []string `pulumi:"sourceSecurityGroupIds"`
}

// GetNodeGroupRemoteAccessInput is an input type that accepts GetNodeGroupRemoteAccessArgs and GetNodeGroupRemoteAccessOutput values.
// You can construct a concrete instance of `GetNodeGroupRemoteAccessInput` via:
//
//	GetNodeGroupRemoteAccessArgs{...}
type GetNodeGroupRemoteAccessInput interface {
	pulumi.Input

	ToGetNodeGroupRemoteAccessOutput() GetNodeGroupRemoteAccessOutput
	ToGetNodeGroupRemoteAccessOutputWithContext(context.Context) GetNodeGroupRemoteAccessOutput
}

type GetNodeGroupRemoteAccessArgs struct {
	// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
	Ec2SshKey pulumi.StringInput `pulumi:"ec2SshKey"`
	// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
	SourceSecurityGroupIds pulumi.StringArrayInput `pulumi:"sourceSecurityGroupIds"`
}

func (GetNodeGroupRemoteAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupRemoteAccess)(nil)).Elem()
}

func (i GetNodeGroupRemoteAccessArgs) ToGetNodeGroupRemoteAccessOutput() GetNodeGroupRemoteAccessOutput {
	return i.ToGetNodeGroupRemoteAccessOutputWithContext(context.Background())
}

func (i GetNodeGroupRemoteAccessArgs) ToGetNodeGroupRemoteAccessOutputWithContext(ctx context.Context) GetNodeGroupRemoteAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupRemoteAccessOutput)
}

// GetNodeGroupRemoteAccessArrayInput is an input type that accepts GetNodeGroupRemoteAccessArray and GetNodeGroupRemoteAccessArrayOutput values.
// You can construct a concrete instance of `GetNodeGroupRemoteAccessArrayInput` via:
//
//	GetNodeGroupRemoteAccessArray{ GetNodeGroupRemoteAccessArgs{...} }
type GetNodeGroupRemoteAccessArrayInput interface {
	pulumi.Input

	ToGetNodeGroupRemoteAccessArrayOutput() GetNodeGroupRemoteAccessArrayOutput
	ToGetNodeGroupRemoteAccessArrayOutputWithContext(context.Context) GetNodeGroupRemoteAccessArrayOutput
}

type GetNodeGroupRemoteAccessArray []GetNodeGroupRemoteAccessInput

func (GetNodeGroupRemoteAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupRemoteAccess)(nil)).Elem()
}

func (i GetNodeGroupRemoteAccessArray) ToGetNodeGroupRemoteAccessArrayOutput() GetNodeGroupRemoteAccessArrayOutput {
	return i.ToGetNodeGroupRemoteAccessArrayOutputWithContext(context.Background())
}

func (i GetNodeGroupRemoteAccessArray) ToGetNodeGroupRemoteAccessArrayOutputWithContext(ctx context.Context) GetNodeGroupRemoteAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupRemoteAccessArrayOutput)
}

type GetNodeGroupRemoteAccessOutput struct{ *pulumi.OutputState }

func (GetNodeGroupRemoteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupRemoteAccess)(nil)).Elem()
}

func (o GetNodeGroupRemoteAccessOutput) ToGetNodeGroupRemoteAccessOutput() GetNodeGroupRemoteAccessOutput {
	return o
}

func (o GetNodeGroupRemoteAccessOutput) ToGetNodeGroupRemoteAccessOutputWithContext(ctx context.Context) GetNodeGroupRemoteAccessOutput {
	return o
}

// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
func (o GetNodeGroupRemoteAccessOutput) Ec2SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupRemoteAccess) string { return v.Ec2SshKey }).(pulumi.StringOutput)
}

// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
func (o GetNodeGroupRemoteAccessOutput) SourceSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodeGroupRemoteAccess) []string { return v.SourceSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type GetNodeGroupRemoteAccessArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupRemoteAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupRemoteAccess)(nil)).Elem()
}

func (o GetNodeGroupRemoteAccessArrayOutput) ToGetNodeGroupRemoteAccessArrayOutput() GetNodeGroupRemoteAccessArrayOutput {
	return o
}

func (o GetNodeGroupRemoteAccessArrayOutput) ToGetNodeGroupRemoteAccessArrayOutputWithContext(ctx context.Context) GetNodeGroupRemoteAccessArrayOutput {
	return o
}

func (o GetNodeGroupRemoteAccessArrayOutput) Index(i pulumi.IntInput) GetNodeGroupRemoteAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupRemoteAccess {
		return vs[0].([]GetNodeGroupRemoteAccess)[vs[1].(int)]
	}).(GetNodeGroupRemoteAccessOutput)
}

type GetNodeGroupResource struct {
	// List of objects containing information about AutoScaling Groups.
	AutoscalingGroups []GetNodeGroupResourceAutoscalingGroup `pulumi:"autoscalingGroups"`
	// Identifier of the remote access EC2 Security Group.
	RemoteAccessSecurityGroupId string `pulumi:"remoteAccessSecurityGroupId"`
}

// GetNodeGroupResourceInput is an input type that accepts GetNodeGroupResourceArgs and GetNodeGroupResourceOutput values.
// You can construct a concrete instance of `GetNodeGroupResourceInput` via:
//
//	GetNodeGroupResourceArgs{...}
type GetNodeGroupResourceInput interface {
	pulumi.Input

	ToGetNodeGroupResourceOutput() GetNodeGroupResourceOutput
	ToGetNodeGroupResourceOutputWithContext(context.Context) GetNodeGroupResourceOutput
}

type GetNodeGroupResourceArgs struct {
	// List of objects containing information about AutoScaling Groups.
	AutoscalingGroups GetNodeGroupResourceAutoscalingGroupArrayInput `pulumi:"autoscalingGroups"`
	// Identifier of the remote access EC2 Security Group.
	RemoteAccessSecurityGroupId pulumi.StringInput `pulumi:"remoteAccessSecurityGroupId"`
}

func (GetNodeGroupResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupResource)(nil)).Elem()
}

func (i GetNodeGroupResourceArgs) ToGetNodeGroupResourceOutput() GetNodeGroupResourceOutput {
	return i.ToGetNodeGroupResourceOutputWithContext(context.Background())
}

func (i GetNodeGroupResourceArgs) ToGetNodeGroupResourceOutputWithContext(ctx context.Context) GetNodeGroupResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupResourceOutput)
}

// GetNodeGroupResourceArrayInput is an input type that accepts GetNodeGroupResourceArray and GetNodeGroupResourceArrayOutput values.
// You can construct a concrete instance of `GetNodeGroupResourceArrayInput` via:
//
//	GetNodeGroupResourceArray{ GetNodeGroupResourceArgs{...} }
type GetNodeGroupResourceArrayInput interface {
	pulumi.Input

	ToGetNodeGroupResourceArrayOutput() GetNodeGroupResourceArrayOutput
	ToGetNodeGroupResourceArrayOutputWithContext(context.Context) GetNodeGroupResourceArrayOutput
}

type GetNodeGroupResourceArray []GetNodeGroupResourceInput

func (GetNodeGroupResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupResource)(nil)).Elem()
}

func (i GetNodeGroupResourceArray) ToGetNodeGroupResourceArrayOutput() GetNodeGroupResourceArrayOutput {
	return i.ToGetNodeGroupResourceArrayOutputWithContext(context.Background())
}

func (i GetNodeGroupResourceArray) ToGetNodeGroupResourceArrayOutputWithContext(ctx context.Context) GetNodeGroupResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupResourceArrayOutput)
}

type GetNodeGroupResourceOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupResource)(nil)).Elem()
}

func (o GetNodeGroupResourceOutput) ToGetNodeGroupResourceOutput() GetNodeGroupResourceOutput {
	return o
}

func (o GetNodeGroupResourceOutput) ToGetNodeGroupResourceOutputWithContext(ctx context.Context) GetNodeGroupResourceOutput {
	return o
}

// List of objects containing information about AutoScaling Groups.
func (o GetNodeGroupResourceOutput) AutoscalingGroups() GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return o.ApplyT(func(v GetNodeGroupResource) []GetNodeGroupResourceAutoscalingGroup { return v.AutoscalingGroups }).(GetNodeGroupResourceAutoscalingGroupArrayOutput)
}

// Identifier of the remote access EC2 Security Group.
func (o GetNodeGroupResourceOutput) RemoteAccessSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupResource) string { return v.RemoteAccessSecurityGroupId }).(pulumi.StringOutput)
}

type GetNodeGroupResourceArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupResource)(nil)).Elem()
}

func (o GetNodeGroupResourceArrayOutput) ToGetNodeGroupResourceArrayOutput() GetNodeGroupResourceArrayOutput {
	return o
}

func (o GetNodeGroupResourceArrayOutput) ToGetNodeGroupResourceArrayOutputWithContext(ctx context.Context) GetNodeGroupResourceArrayOutput {
	return o
}

func (o GetNodeGroupResourceArrayOutput) Index(i pulumi.IntInput) GetNodeGroupResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupResource {
		return vs[0].([]GetNodeGroupResource)[vs[1].(int)]
	}).(GetNodeGroupResourceOutput)
}

type GetNodeGroupResourceAutoscalingGroup struct {
	// Name of the AutoScaling Group.
	Name string `pulumi:"name"`
}

// GetNodeGroupResourceAutoscalingGroupInput is an input type that accepts GetNodeGroupResourceAutoscalingGroupArgs and GetNodeGroupResourceAutoscalingGroupOutput values.
// You can construct a concrete instance of `GetNodeGroupResourceAutoscalingGroupInput` via:
//
//	GetNodeGroupResourceAutoscalingGroupArgs{...}
type GetNodeGroupResourceAutoscalingGroupInput interface {
	pulumi.Input

	ToGetNodeGroupResourceAutoscalingGroupOutput() GetNodeGroupResourceAutoscalingGroupOutput
	ToGetNodeGroupResourceAutoscalingGroupOutputWithContext(context.Context) GetNodeGroupResourceAutoscalingGroupOutput
}

type GetNodeGroupResourceAutoscalingGroupArgs struct {
	// Name of the AutoScaling Group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNodeGroupResourceAutoscalingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (i GetNodeGroupResourceAutoscalingGroupArgs) ToGetNodeGroupResourceAutoscalingGroupOutput() GetNodeGroupResourceAutoscalingGroupOutput {
	return i.ToGetNodeGroupResourceAutoscalingGroupOutputWithContext(context.Background())
}

func (i GetNodeGroupResourceAutoscalingGroupArgs) ToGetNodeGroupResourceAutoscalingGroupOutputWithContext(ctx context.Context) GetNodeGroupResourceAutoscalingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupResourceAutoscalingGroupOutput)
}

// GetNodeGroupResourceAutoscalingGroupArrayInput is an input type that accepts GetNodeGroupResourceAutoscalingGroupArray and GetNodeGroupResourceAutoscalingGroupArrayOutput values.
// You can construct a concrete instance of `GetNodeGroupResourceAutoscalingGroupArrayInput` via:
//
//	GetNodeGroupResourceAutoscalingGroupArray{ GetNodeGroupResourceAutoscalingGroupArgs{...} }
type GetNodeGroupResourceAutoscalingGroupArrayInput interface {
	pulumi.Input

	ToGetNodeGroupResourceAutoscalingGroupArrayOutput() GetNodeGroupResourceAutoscalingGroupArrayOutput
	ToGetNodeGroupResourceAutoscalingGroupArrayOutputWithContext(context.Context) GetNodeGroupResourceAutoscalingGroupArrayOutput
}

type GetNodeGroupResourceAutoscalingGroupArray []GetNodeGroupResourceAutoscalingGroupInput

func (GetNodeGroupResourceAutoscalingGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (i GetNodeGroupResourceAutoscalingGroupArray) ToGetNodeGroupResourceAutoscalingGroupArrayOutput() GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return i.ToGetNodeGroupResourceAutoscalingGroupArrayOutputWithContext(context.Background())
}

func (i GetNodeGroupResourceAutoscalingGroupArray) ToGetNodeGroupResourceAutoscalingGroupArrayOutputWithContext(ctx context.Context) GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupResourceAutoscalingGroupArrayOutput)
}

type GetNodeGroupResourceAutoscalingGroupOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceAutoscalingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o GetNodeGroupResourceAutoscalingGroupOutput) ToGetNodeGroupResourceAutoscalingGroupOutput() GetNodeGroupResourceAutoscalingGroupOutput {
	return o
}

func (o GetNodeGroupResourceAutoscalingGroupOutput) ToGetNodeGroupResourceAutoscalingGroupOutputWithContext(ctx context.Context) GetNodeGroupResourceAutoscalingGroupOutput {
	return o
}

// Name of the AutoScaling Group.
func (o GetNodeGroupResourceAutoscalingGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupResourceAutoscalingGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetNodeGroupResourceAutoscalingGroupArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceAutoscalingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o GetNodeGroupResourceAutoscalingGroupArrayOutput) ToGetNodeGroupResourceAutoscalingGroupArrayOutput() GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o GetNodeGroupResourceAutoscalingGroupArrayOutput) ToGetNodeGroupResourceAutoscalingGroupArrayOutputWithContext(ctx context.Context) GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o GetNodeGroupResourceAutoscalingGroupArrayOutput) Index(i pulumi.IntInput) GetNodeGroupResourceAutoscalingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupResourceAutoscalingGroup {
		return vs[0].([]GetNodeGroupResourceAutoscalingGroup)[vs[1].(int)]
	}).(GetNodeGroupResourceAutoscalingGroupOutput)
}

type GetNodeGroupScalingConfig struct {
	// Desired number of worker nodes.
	DesiredSize int `pulumi:"desiredSize"`
	// Maximum number of worker nodes.
	MaxSize int `pulumi:"maxSize"`
	// Minimum number of worker nodes.
	MinSize int `pulumi:"minSize"`
}

// GetNodeGroupScalingConfigInput is an input type that accepts GetNodeGroupScalingConfigArgs and GetNodeGroupScalingConfigOutput values.
// You can construct a concrete instance of `GetNodeGroupScalingConfigInput` via:
//
//	GetNodeGroupScalingConfigArgs{...}
type GetNodeGroupScalingConfigInput interface {
	pulumi.Input

	ToGetNodeGroupScalingConfigOutput() GetNodeGroupScalingConfigOutput
	ToGetNodeGroupScalingConfigOutputWithContext(context.Context) GetNodeGroupScalingConfigOutput
}

type GetNodeGroupScalingConfigArgs struct {
	// Desired number of worker nodes.
	DesiredSize pulumi.IntInput `pulumi:"desiredSize"`
	// Maximum number of worker nodes.
	MaxSize pulumi.IntInput `pulumi:"maxSize"`
	// Minimum number of worker nodes.
	MinSize pulumi.IntInput `pulumi:"minSize"`
}

func (GetNodeGroupScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupScalingConfig)(nil)).Elem()
}

func (i GetNodeGroupScalingConfigArgs) ToGetNodeGroupScalingConfigOutput() GetNodeGroupScalingConfigOutput {
	return i.ToGetNodeGroupScalingConfigOutputWithContext(context.Background())
}

func (i GetNodeGroupScalingConfigArgs) ToGetNodeGroupScalingConfigOutputWithContext(ctx context.Context) GetNodeGroupScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupScalingConfigOutput)
}

// GetNodeGroupScalingConfigArrayInput is an input type that accepts GetNodeGroupScalingConfigArray and GetNodeGroupScalingConfigArrayOutput values.
// You can construct a concrete instance of `GetNodeGroupScalingConfigArrayInput` via:
//
//	GetNodeGroupScalingConfigArray{ GetNodeGroupScalingConfigArgs{...} }
type GetNodeGroupScalingConfigArrayInput interface {
	pulumi.Input

	ToGetNodeGroupScalingConfigArrayOutput() GetNodeGroupScalingConfigArrayOutput
	ToGetNodeGroupScalingConfigArrayOutputWithContext(context.Context) GetNodeGroupScalingConfigArrayOutput
}

type GetNodeGroupScalingConfigArray []GetNodeGroupScalingConfigInput

func (GetNodeGroupScalingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupScalingConfig)(nil)).Elem()
}

func (i GetNodeGroupScalingConfigArray) ToGetNodeGroupScalingConfigArrayOutput() GetNodeGroupScalingConfigArrayOutput {
	return i.ToGetNodeGroupScalingConfigArrayOutputWithContext(context.Background())
}

func (i GetNodeGroupScalingConfigArray) ToGetNodeGroupScalingConfigArrayOutputWithContext(ctx context.Context) GetNodeGroupScalingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupScalingConfigArrayOutput)
}

type GetNodeGroupScalingConfigOutput struct{ *pulumi.OutputState }

func (GetNodeGroupScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupScalingConfig)(nil)).Elem()
}

func (o GetNodeGroupScalingConfigOutput) ToGetNodeGroupScalingConfigOutput() GetNodeGroupScalingConfigOutput {
	return o
}

func (o GetNodeGroupScalingConfigOutput) ToGetNodeGroupScalingConfigOutputWithContext(ctx context.Context) GetNodeGroupScalingConfigOutput {
	return o
}

// Desired number of worker nodes.
func (o GetNodeGroupScalingConfigOutput) DesiredSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeGroupScalingConfig) int { return v.DesiredSize }).(pulumi.IntOutput)
}

// Maximum number of worker nodes.
func (o GetNodeGroupScalingConfigOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeGroupScalingConfig) int { return v.MaxSize }).(pulumi.IntOutput)
}

// Minimum number of worker nodes.
func (o GetNodeGroupScalingConfigOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeGroupScalingConfig) int { return v.MinSize }).(pulumi.IntOutput)
}

type GetNodeGroupScalingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupScalingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupScalingConfig)(nil)).Elem()
}

func (o GetNodeGroupScalingConfigArrayOutput) ToGetNodeGroupScalingConfigArrayOutput() GetNodeGroupScalingConfigArrayOutput {
	return o
}

func (o GetNodeGroupScalingConfigArrayOutput) ToGetNodeGroupScalingConfigArrayOutputWithContext(ctx context.Context) GetNodeGroupScalingConfigArrayOutput {
	return o
}

func (o GetNodeGroupScalingConfigArrayOutput) Index(i pulumi.IntInput) GetNodeGroupScalingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupScalingConfig {
		return vs[0].([]GetNodeGroupScalingConfig)[vs[1].(int)]
	}).(GetNodeGroupScalingConfigOutput)
}

type GetNodeGroupTaint struct {
	// The effect of the taint.
	Effect string `pulumi:"effect"`
	// The key of the taint.
	Key string `pulumi:"key"`
	// The value of the taint.
	Value string `pulumi:"value"`
}

// GetNodeGroupTaintInput is an input type that accepts GetNodeGroupTaintArgs and GetNodeGroupTaintOutput values.
// You can construct a concrete instance of `GetNodeGroupTaintInput` via:
//
//	GetNodeGroupTaintArgs{...}
type GetNodeGroupTaintInput interface {
	pulumi.Input

	ToGetNodeGroupTaintOutput() GetNodeGroupTaintOutput
	ToGetNodeGroupTaintOutputWithContext(context.Context) GetNodeGroupTaintOutput
}

type GetNodeGroupTaintArgs struct {
	// The effect of the taint.
	Effect pulumi.StringInput `pulumi:"effect"`
	// The key of the taint.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNodeGroupTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupTaint)(nil)).Elem()
}

func (i GetNodeGroupTaintArgs) ToGetNodeGroupTaintOutput() GetNodeGroupTaintOutput {
	return i.ToGetNodeGroupTaintOutputWithContext(context.Background())
}

func (i GetNodeGroupTaintArgs) ToGetNodeGroupTaintOutputWithContext(ctx context.Context) GetNodeGroupTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupTaintOutput)
}

// GetNodeGroupTaintArrayInput is an input type that accepts GetNodeGroupTaintArray and GetNodeGroupTaintArrayOutput values.
// You can construct a concrete instance of `GetNodeGroupTaintArrayInput` via:
//
//	GetNodeGroupTaintArray{ GetNodeGroupTaintArgs{...} }
type GetNodeGroupTaintArrayInput interface {
	pulumi.Input

	ToGetNodeGroupTaintArrayOutput() GetNodeGroupTaintArrayOutput
	ToGetNodeGroupTaintArrayOutputWithContext(context.Context) GetNodeGroupTaintArrayOutput
}

type GetNodeGroupTaintArray []GetNodeGroupTaintInput

func (GetNodeGroupTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupTaint)(nil)).Elem()
}

func (i GetNodeGroupTaintArray) ToGetNodeGroupTaintArrayOutput() GetNodeGroupTaintArrayOutput {
	return i.ToGetNodeGroupTaintArrayOutputWithContext(context.Background())
}

func (i GetNodeGroupTaintArray) ToGetNodeGroupTaintArrayOutputWithContext(ctx context.Context) GetNodeGroupTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodeGroupTaintArrayOutput)
}

type GetNodeGroupTaintOutput struct{ *pulumi.OutputState }

func (GetNodeGroupTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupTaint)(nil)).Elem()
}

func (o GetNodeGroupTaintOutput) ToGetNodeGroupTaintOutput() GetNodeGroupTaintOutput {
	return o
}

func (o GetNodeGroupTaintOutput) ToGetNodeGroupTaintOutputWithContext(ctx context.Context) GetNodeGroupTaintOutput {
	return o
}

// The effect of the taint.
func (o GetNodeGroupTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// The key of the taint.
func (o GetNodeGroupTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupTaint) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the taint.
func (o GetNodeGroupTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetNodeGroupTaintArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupTaint)(nil)).Elem()
}

func (o GetNodeGroupTaintArrayOutput) ToGetNodeGroupTaintArrayOutput() GetNodeGroupTaintArrayOutput {
	return o
}

func (o GetNodeGroupTaintArrayOutput) ToGetNodeGroupTaintArrayOutputWithContext(ctx context.Context) GetNodeGroupTaintArrayOutput {
	return o
}

func (o GetNodeGroupTaintArrayOutput) Index(i pulumi.IntInput) GetNodeGroupTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupTaint {
		return vs[0].([]GetNodeGroupTaint)[vs[1].(int)]
	}).(GetNodeGroupTaintOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyAssociationAccessScopeInput)(nil)).Elem(), AccessPolicyAssociationAccessScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPolicyAssociationAccessScopePtrInput)(nil)).Elem(), AccessPolicyAssociationAccessScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAccessConfigInput)(nil)).Elem(), ClusterAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAccessConfigPtrInput)(nil)).Elem(), ClusterAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCertificateAuthorityInput)(nil)).Elem(), ClusterCertificateAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCertificateAuthorityPtrInput)(nil)).Elem(), ClusterCertificateAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCertificateAuthorityArrayInput)(nil)).Elem(), ClusterCertificateAuthorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigPtrInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigProviderInput)(nil)).Elem(), ClusterEncryptionConfigProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigProviderPtrInput)(nil)).Elem(), ClusterEncryptionConfigProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityInput)(nil)).Elem(), ClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityArrayInput)(nil)).Elem(), ClusterIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityOidcInput)(nil)).Elem(), ClusterIdentityOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityOidcArrayInput)(nil)).Elem(), ClusterIdentityOidcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigPtrInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOutpostConfigInput)(nil)).Elem(), ClusterOutpostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOutpostConfigPtrInput)(nil)).Elem(), ClusterOutpostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOutpostConfigControlPlanePlacementInput)(nil)).Elem(), ClusterOutpostConfigControlPlanePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOutpostConfigControlPlanePlacementPtrInput)(nil)).Elem(), ClusterOutpostConfigControlPlanePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVpcConfigInput)(nil)).Elem(), ClusterVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVpcConfigPtrInput)(nil)).Elem(), ClusterVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorInput)(nil)).Elem(), FargateProfileSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorArrayInput)(nil)).Elem(), FargateProfileSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigOidcInput)(nil)).Elem(), IdentityProviderConfigOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigOidcPtrInput)(nil)).Elem(), IdentityProviderConfigOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupLaunchTemplateInput)(nil)).Elem(), NodeGroupLaunchTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupLaunchTemplatePtrInput)(nil)).Elem(), NodeGroupLaunchTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupRemoteAccessInput)(nil)).Elem(), NodeGroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupRemoteAccessPtrInput)(nil)).Elem(), NodeGroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupResourceInput)(nil)).Elem(), NodeGroupResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupResourceArrayInput)(nil)).Elem(), NodeGroupResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupResourceAutoscalingGroupInput)(nil)).Elem(), NodeGroupResourceAutoscalingGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupResourceAutoscalingGroupArrayInput)(nil)).Elem(), NodeGroupResourceAutoscalingGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupScalingConfigInput)(nil)).Elem(), NodeGroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupScalingConfigPtrInput)(nil)).Elem(), NodeGroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupTaintInput)(nil)).Elem(), NodeGroupTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupTaintArrayInput)(nil)).Elem(), NodeGroupTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupUpdateConfigInput)(nil)).Elem(), NodeGroupUpdateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupUpdateConfigPtrInput)(nil)).Elem(), NodeGroupUpdateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAccessConfigInput)(nil)).Elem(), GetClusterAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAccessConfigArrayInput)(nil)).Elem(), GetClusterAccessConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCertificateAuthorityInput)(nil)).Elem(), GetClusterCertificateAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCertificateAuthorityArrayInput)(nil)).Elem(), GetClusterCertificateAuthorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIdentityInput)(nil)).Elem(), GetClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIdentityArrayInput)(nil)).Elem(), GetClusterIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIdentityOidcInput)(nil)).Elem(), GetClusterIdentityOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterIdentityOidcArrayInput)(nil)).Elem(), GetClusterIdentityOidcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterKubernetesNetworkConfigInput)(nil)).Elem(), GetClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterKubernetesNetworkConfigArrayInput)(nil)).Elem(), GetClusterKubernetesNetworkConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOutpostConfigInput)(nil)).Elem(), GetClusterOutpostConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOutpostConfigArrayInput)(nil)).Elem(), GetClusterOutpostConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOutpostConfigControlPlanePlacementInput)(nil)).Elem(), GetClusterOutpostConfigControlPlanePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOutpostConfigControlPlanePlacementArrayInput)(nil)).Elem(), GetClusterOutpostConfigControlPlanePlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterVpcConfigInput)(nil)).Elem(), GetClusterVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupLaunchTemplateInput)(nil)).Elem(), GetNodeGroupLaunchTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupLaunchTemplateArrayInput)(nil)).Elem(), GetNodeGroupLaunchTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupRemoteAccessInput)(nil)).Elem(), GetNodeGroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupRemoteAccessArrayInput)(nil)).Elem(), GetNodeGroupRemoteAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupResourceInput)(nil)).Elem(), GetNodeGroupResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupResourceArrayInput)(nil)).Elem(), GetNodeGroupResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupResourceAutoscalingGroupInput)(nil)).Elem(), GetNodeGroupResourceAutoscalingGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupResourceAutoscalingGroupArrayInput)(nil)).Elem(), GetNodeGroupResourceAutoscalingGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupScalingConfigInput)(nil)).Elem(), GetNodeGroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupScalingConfigArrayInput)(nil)).Elem(), GetNodeGroupScalingConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupTaintInput)(nil)).Elem(), GetNodeGroupTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodeGroupTaintArrayInput)(nil)).Elem(), GetNodeGroupTaintArray{})
	pulumi.RegisterOutputType(AccessPolicyAssociationAccessScopeOutput{})
	pulumi.RegisterOutputType(AccessPolicyAssociationAccessScopePtrOutput{})
	pulumi.RegisterOutputType(ClusterAccessConfigOutput{})
	pulumi.RegisterOutputType(ClusterAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(ClusterCertificateAuthorityPtrOutput{})
	pulumi.RegisterOutputType(ClusterCertificateAuthorityArrayOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigProviderOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterIdentityOutput{})
	pulumi.RegisterOutputType(ClusterIdentityArrayOutput{})
	pulumi.RegisterOutputType(ClusterIdentityOidcOutput{})
	pulumi.RegisterOutputType(ClusterIdentityOidcArrayOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterOutpostConfigOutput{})
	pulumi.RegisterOutputType(ClusterOutpostConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterOutpostConfigControlPlanePlacementOutput{})
	pulumi.RegisterOutputType(ClusterOutpostConfigControlPlanePlacementPtrOutput{})
	pulumi.RegisterOutputType(ClusterVpcConfigOutput{})
	pulumi.RegisterOutputType(ClusterVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigOidcOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigOidcPtrOutput{})
	pulumi.RegisterOutputType(NodeGroupLaunchTemplateOutput{})
	pulumi.RegisterOutputType(NodeGroupLaunchTemplatePtrOutput{})
	pulumi.RegisterOutputType(NodeGroupRemoteAccessOutput{})
	pulumi.RegisterOutputType(NodeGroupRemoteAccessPtrOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceArrayOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceAutoscalingGroupOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceAutoscalingGroupArrayOutput{})
	pulumi.RegisterOutputType(NodeGroupScalingConfigOutput{})
	pulumi.RegisterOutputType(NodeGroupScalingConfigPtrOutput{})
	pulumi.RegisterOutputType(NodeGroupTaintOutput{})
	pulumi.RegisterOutputType(NodeGroupTaintArrayOutput{})
	pulumi.RegisterOutputType(NodeGroupUpdateConfigOutput{})
	pulumi.RegisterOutputType(NodeGroupUpdateConfigPtrOutput{})
	pulumi.RegisterOutputType(GetClusterAccessConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAccessConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(GetClusterCertificateAuthorityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityOidcOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityOidcArrayOutput{})
	pulumi.RegisterOutputType(GetClusterKubernetesNetworkConfigOutput{})
	pulumi.RegisterOutputType(GetClusterKubernetesNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterOutpostConfigOutput{})
	pulumi.RegisterOutputType(GetClusterOutpostConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterOutpostConfigControlPlanePlacementOutput{})
	pulumi.RegisterOutputType(GetClusterOutpostConfigControlPlanePlacementArrayOutput{})
	pulumi.RegisterOutputType(GetClusterVpcConfigOutput{})
	pulumi.RegisterOutputType(GetNodeGroupLaunchTemplateOutput{})
	pulumi.RegisterOutputType(GetNodeGroupLaunchTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupRemoteAccessOutput{})
	pulumi.RegisterOutputType(GetNodeGroupRemoteAccessArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceAutoscalingGroupOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceAutoscalingGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupScalingConfigOutput{})
	pulumi.RegisterOutputType(GetNodeGroupScalingConfigArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupTaintOutput{})
	pulumi.RegisterOutputType(GetNodeGroupTaintArrayOutput{})
}
