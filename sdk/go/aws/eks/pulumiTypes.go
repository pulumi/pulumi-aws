// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterCertificateAuthority struct {
	// Base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
	Data *string `pulumi:"data"`
}

type ClusterCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (ClusterCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCertificateAuthority)(nil)).Elem()
}

func (o ClusterCertificateAuthorityOutput) ToClusterCertificateAuthorityOutput() ClusterCertificateAuthorityOutput {
	return o
}

func (o ClusterCertificateAuthorityOutput) ToClusterCertificateAuthorityOutputWithContext(ctx context.Context) ClusterCertificateAuthorityOutput {
	return o
}

// Base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
func (o ClusterCertificateAuthorityOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificateAuthority) *string { return v.Data }).(pulumi.StringPtrOutput)
}

type ClusterEncryptionConfig struct {
	// Configuration block with provider for encryption. Detailed below.
	Provider ClusterEncryptionConfigProvider `pulumi:"provider"`
	// List of strings with resources to be encrypted. Valid values: `secrets`.
	Resources []string `pulumi:"resources"`
}

// ClusterEncryptionConfigInput is an input type that accepts ClusterEncryptionConfigArgs and ClusterEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigInput` via:
//
//          ClusterEncryptionConfigArgs{...}
type ClusterEncryptionConfigInput interface {
	pulumi.Input

	ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput
	ToClusterEncryptionConfigOutputWithContext(context.Context) ClusterEncryptionConfigOutput
}

type ClusterEncryptionConfigArgs struct {
	// Configuration block with provider for encryption. Detailed below.
	Provider ClusterEncryptionConfigProviderInput `pulumi:"provider"`
	// List of strings with resources to be encrypted. Valid values: `secrets`.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (ClusterEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return i.ToClusterEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput)
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return i.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigArgs) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigOutput).ToClusterEncryptionConfigPtrOutputWithContext(ctx)
}

// ClusterEncryptionConfigPtrInput is an input type that accepts ClusterEncryptionConfigArgs, ClusterEncryptionConfigPtr and ClusterEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigPtrInput` via:
//
//          ClusterEncryptionConfigArgs{...}
//
//  or:
//
//          nil
type ClusterEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput
	ToClusterEncryptionConfigPtrOutputWithContext(context.Context) ClusterEncryptionConfigPtrOutput
}

type clusterEncryptionConfigPtrType ClusterEncryptionConfigArgs

func ClusterEncryptionConfigPtr(v *ClusterEncryptionConfigArgs) ClusterEncryptionConfigPtrInput {
	return (*clusterEncryptionConfigPtrType)(v)
}

func (*clusterEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfig)(nil)).Elem()
}

func (i *clusterEncryptionConfigPtrType) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return i.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionConfigPtrType) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigPtrOutput)
}

type ClusterEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutput() ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigOutputWithContext(ctx context.Context) ClusterEncryptionConfigOutput {
	return o
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return o.ToClusterEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionConfigOutput) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionConfig) *ClusterEncryptionConfig {
		return &v
	}).(ClusterEncryptionConfigPtrOutput)
}

// Configuration block with provider for encryption. Detailed below.
func (o ClusterEncryptionConfigOutput) Provider() ClusterEncryptionConfigProviderOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) ClusterEncryptionConfigProvider { return v.Provider }).(ClusterEncryptionConfigProviderOutput)
}

// List of strings with resources to be encrypted. Valid values: `secrets`.
func (o ClusterEncryptionConfigOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterEncryptionConfig) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type ClusterEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfig)(nil)).Elem()
}

func (o ClusterEncryptionConfigPtrOutput) ToClusterEncryptionConfigPtrOutput() ClusterEncryptionConfigPtrOutput {
	return o
}

func (o ClusterEncryptionConfigPtrOutput) ToClusterEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigPtrOutput {
	return o
}

func (o ClusterEncryptionConfigPtrOutput) Elem() ClusterEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) ClusterEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionConfig
		return ret
	}).(ClusterEncryptionConfigOutput)
}

// Configuration block with provider for encryption. Detailed below.
func (o ClusterEncryptionConfigPtrOutput) Provider() ClusterEncryptionConfigProviderPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) *ClusterEncryptionConfigProvider {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(ClusterEncryptionConfigProviderPtrOutput)
}

// List of strings with resources to be encrypted. Valid values: `secrets`.
func (o ClusterEncryptionConfigPtrOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfig) []string {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.StringArrayOutput)
}

type ClusterEncryptionConfigProvider struct {
	// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
	KeyArn string `pulumi:"keyArn"`
}

// ClusterEncryptionConfigProviderInput is an input type that accepts ClusterEncryptionConfigProviderArgs and ClusterEncryptionConfigProviderOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigProviderInput` via:
//
//          ClusterEncryptionConfigProviderArgs{...}
type ClusterEncryptionConfigProviderInput interface {
	pulumi.Input

	ToClusterEncryptionConfigProviderOutput() ClusterEncryptionConfigProviderOutput
	ToClusterEncryptionConfigProviderOutputWithContext(context.Context) ClusterEncryptionConfigProviderOutput
}

type ClusterEncryptionConfigProviderArgs struct {
	// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
	KeyArn pulumi.StringInput `pulumi:"keyArn"`
}

func (ClusterEncryptionConfigProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderOutput() ClusterEncryptionConfigProviderOutput {
	return i.ToClusterEncryptionConfigProviderOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderOutput)
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return i.ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionConfigProviderArgs) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderOutput).ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx)
}

// ClusterEncryptionConfigProviderPtrInput is an input type that accepts ClusterEncryptionConfigProviderArgs, ClusterEncryptionConfigProviderPtr and ClusterEncryptionConfigProviderPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionConfigProviderPtrInput` via:
//
//          ClusterEncryptionConfigProviderArgs{...}
//
//  or:
//
//          nil
type ClusterEncryptionConfigProviderPtrInput interface {
	pulumi.Input

	ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput
	ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Context) ClusterEncryptionConfigProviderPtrOutput
}

type clusterEncryptionConfigProviderPtrType ClusterEncryptionConfigProviderArgs

func ClusterEncryptionConfigProviderPtr(v *ClusterEncryptionConfigProviderArgs) ClusterEncryptionConfigProviderPtrInput {
	return (*clusterEncryptionConfigProviderPtrType)(v)
}

func (*clusterEncryptionConfigProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (i *clusterEncryptionConfigProviderPtrType) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return i.ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionConfigProviderPtrType) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionConfigProviderPtrOutput)
}

type ClusterEncryptionConfigProviderOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderOutput() ClusterEncryptionConfigProviderOutput {
	return o
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderOutput {
	return o
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return o.ToClusterEncryptionConfigProviderPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionConfigProviderOutput) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionConfigProvider) *ClusterEncryptionConfigProvider {
		return &v
	}).(ClusterEncryptionConfigProviderPtrOutput)
}

// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
func (o ClusterEncryptionConfigProviderOutput) KeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterEncryptionConfigProvider) string { return v.KeyArn }).(pulumi.StringOutput)
}

type ClusterEncryptionConfigProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionConfigProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionConfigProvider)(nil)).Elem()
}

func (o ClusterEncryptionConfigProviderPtrOutput) ToClusterEncryptionConfigProviderPtrOutput() ClusterEncryptionConfigProviderPtrOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPtrOutput) ToClusterEncryptionConfigProviderPtrOutputWithContext(ctx context.Context) ClusterEncryptionConfigProviderPtrOutput {
	return o
}

func (o ClusterEncryptionConfigProviderPtrOutput) Elem() ClusterEncryptionConfigProviderOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfigProvider) ClusterEncryptionConfigProvider {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionConfigProvider
		return ret
	}).(ClusterEncryptionConfigProviderOutput)
}

// ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
func (o ClusterEncryptionConfigProviderPtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionConfigProvider) *string {
		if v == nil {
			return nil
		}
		return &v.KeyArn
	}).(pulumi.StringPtrOutput)
}

type ClusterIdentity struct {
	// Nested block containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
	Oidcs []ClusterIdentityOidc `pulumi:"oidcs"`
}

type ClusterIdentityOutput struct{ *pulumi.OutputState }

func (ClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentity)(nil)).Elem()
}

func (o ClusterIdentityOutput) ToClusterIdentityOutput() ClusterIdentityOutput {
	return o
}

func (o ClusterIdentityOutput) ToClusterIdentityOutputWithContext(ctx context.Context) ClusterIdentityOutput {
	return o
}

// Nested block containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.
func (o ClusterIdentityOutput) Oidcs() ClusterIdentityOidcArrayOutput {
	return o.ApplyT(func(v ClusterIdentity) []ClusterIdentityOidc { return v.Oidcs }).(ClusterIdentityOidcArrayOutput)
}

type ClusterIdentityArrayOutput struct{ *pulumi.OutputState }

func (ClusterIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIdentity)(nil)).Elem()
}

func (o ClusterIdentityArrayOutput) ToClusterIdentityArrayOutput() ClusterIdentityArrayOutput {
	return o
}

func (o ClusterIdentityArrayOutput) ToClusterIdentityArrayOutputWithContext(ctx context.Context) ClusterIdentityArrayOutput {
	return o
}

func (o ClusterIdentityArrayOutput) Index(i pulumi.IntInput) ClusterIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIdentity {
		return vs[0].([]ClusterIdentity)[vs[1].(int)]
	}).(ClusterIdentityOutput)
}

type ClusterIdentityOidc struct {
	// Issuer URL for the OpenID Connect identity provider.
	Issuer *string `pulumi:"issuer"`
}

type ClusterIdentityOidcOutput struct{ *pulumi.OutputState }

func (ClusterIdentityOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentityOidc)(nil)).Elem()
}

func (o ClusterIdentityOidcOutput) ToClusterIdentityOidcOutput() ClusterIdentityOidcOutput {
	return o
}

func (o ClusterIdentityOidcOutput) ToClusterIdentityOidcOutputWithContext(ctx context.Context) ClusterIdentityOidcOutput {
	return o
}

// Issuer URL for the OpenID Connect identity provider.
func (o ClusterIdentityOidcOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIdentityOidc) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type ClusterIdentityOidcArrayOutput struct{ *pulumi.OutputState }

func (ClusterIdentityOidcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterIdentityOidc)(nil)).Elem()
}

func (o ClusterIdentityOidcArrayOutput) ToClusterIdentityOidcArrayOutput() ClusterIdentityOidcArrayOutput {
	return o
}

func (o ClusterIdentityOidcArrayOutput) ToClusterIdentityOidcArrayOutputWithContext(ctx context.Context) ClusterIdentityOidcArrayOutput {
	return o
}

func (o ClusterIdentityOidcArrayOutput) Index(i pulumi.IntInput) ClusterIdentityOidcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterIdentityOidc {
		return vs[0].([]ClusterIdentityOidc)[vs[1].(int)]
	}).(ClusterIdentityOidcOutput)
}

type ClusterKubernetesNetworkConfig struct {
	// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
	ServiceIpv4Cidr *string `pulumi:"serviceIpv4Cidr"`
}

// ClusterKubernetesNetworkConfigInput is an input type that accepts ClusterKubernetesNetworkConfigArgs and ClusterKubernetesNetworkConfigOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigInput` via:
//
//          ClusterKubernetesNetworkConfigArgs{...}
type ClusterKubernetesNetworkConfigInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput
	ToClusterKubernetesNetworkConfigOutputWithContext(context.Context) ClusterKubernetesNetworkConfigOutput
}

type ClusterKubernetesNetworkConfigArgs struct {
	// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
	ServiceIpv4Cidr pulumi.StringPtrInput `pulumi:"serviceIpv4Cidr"`
}

func (ClusterKubernetesNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return i.ToClusterKubernetesNetworkConfigOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput)
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i ClusterKubernetesNetworkConfigArgs) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigOutput).ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx)
}

// ClusterKubernetesNetworkConfigPtrInput is an input type that accepts ClusterKubernetesNetworkConfigArgs, ClusterKubernetesNetworkConfigPtr and ClusterKubernetesNetworkConfigPtrOutput values.
// You can construct a concrete instance of `ClusterKubernetesNetworkConfigPtrInput` via:
//
//          ClusterKubernetesNetworkConfigArgs{...}
//
//  or:
//
//          nil
type ClusterKubernetesNetworkConfigPtrInput interface {
	pulumi.Input

	ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput
	ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Context) ClusterKubernetesNetworkConfigPtrOutput
}

type clusterKubernetesNetworkConfigPtrType ClusterKubernetesNetworkConfigArgs

func ClusterKubernetesNetworkConfigPtr(v *ClusterKubernetesNetworkConfigArgs) ClusterKubernetesNetworkConfigPtrInput {
	return (*clusterKubernetesNetworkConfigPtrType)(v)
}

func (*clusterKubernetesNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return i.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *clusterKubernetesNetworkConfigPtrType) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubernetesNetworkConfigPtrOutput)
}

type ClusterKubernetesNetworkConfigOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutput() ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o.ToClusterKubernetesNetworkConfigPtrOutputWithContext(context.Background())
}

func (o ClusterKubernetesNetworkConfigOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubernetesNetworkConfig) *ClusterKubernetesNetworkConfig {
		return &v
	}).(ClusterKubernetesNetworkConfigPtrOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
func (o ClusterKubernetesNetworkConfigOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubernetesNetworkConfig) *string { return v.ServiceIpv4Cidr }).(pulumi.StringPtrOutput)
}

type ClusterKubernetesNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubernetesNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutput() ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) ToClusterKubernetesNetworkConfigPtrOutputWithContext(ctx context.Context) ClusterKubernetesNetworkConfigPtrOutput {
	return o
}

func (o ClusterKubernetesNetworkConfigPtrOutput) Elem() ClusterKubernetesNetworkConfigOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) ClusterKubernetesNetworkConfig {
		if v != nil {
			return *v
		}
		var ret ClusterKubernetesNetworkConfig
		return ret
	}).(ClusterKubernetesNetworkConfigOutput)
}

// The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
func (o ClusterKubernetesNetworkConfigPtrOutput) ServiceIpv4Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubernetesNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIpv4Cidr
	}).(pulumi.StringPtrOutput)
}

type ClusterVpcConfig struct {
	// Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
	ClusterSecurityGroupId *string `pulumi:"clusterSecurityGroupId"`
	// Whether the Amazon EKS private API server endpoint is enabled. Default is `false`.
	EndpointPrivateAccess *bool `pulumi:"endpointPrivateAccess"`
	// Whether the Amazon EKS public API server endpoint is enabled. Default is `true`.
	EndpointPublicAccess *bool `pulumi:"endpointPublicAccess"`
	// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. This provider will only perform drift detection of its value when present in a configuration.
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
	SubnetIds []string `pulumi:"subnetIds"`
	// ID of the VPC associated with your cluster.
	VpcId *string `pulumi:"vpcId"`
}

// ClusterVpcConfigInput is an input type that accepts ClusterVpcConfigArgs and ClusterVpcConfigOutput values.
// You can construct a concrete instance of `ClusterVpcConfigInput` via:
//
//          ClusterVpcConfigArgs{...}
type ClusterVpcConfigInput interface {
	pulumi.Input

	ToClusterVpcConfigOutput() ClusterVpcConfigOutput
	ToClusterVpcConfigOutputWithContext(context.Context) ClusterVpcConfigOutput
}

type ClusterVpcConfigArgs struct {
	// Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
	ClusterSecurityGroupId pulumi.StringPtrInput `pulumi:"clusterSecurityGroupId"`
	// Whether the Amazon EKS private API server endpoint is enabled. Default is `false`.
	EndpointPrivateAccess pulumi.BoolPtrInput `pulumi:"endpointPrivateAccess"`
	// Whether the Amazon EKS public API server endpoint is enabled. Default is `true`.
	EndpointPublicAccess pulumi.BoolPtrInput `pulumi:"endpointPublicAccess"`
	// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. This provider will only perform drift detection of its value when present in a configuration.
	PublicAccessCidrs pulumi.StringArrayInput `pulumi:"publicAccessCidrs"`
	// List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// ID of the VPC associated with your cluster.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (ClusterVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVpcConfig)(nil)).Elem()
}

func (i ClusterVpcConfigArgs) ToClusterVpcConfigOutput() ClusterVpcConfigOutput {
	return i.ToClusterVpcConfigOutputWithContext(context.Background())
}

func (i ClusterVpcConfigArgs) ToClusterVpcConfigOutputWithContext(ctx context.Context) ClusterVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVpcConfigOutput)
}

type ClusterVpcConfigOutput struct{ *pulumi.OutputState }

func (ClusterVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVpcConfig)(nil)).Elem()
}

func (o ClusterVpcConfigOutput) ToClusterVpcConfigOutput() ClusterVpcConfigOutput {
	return o
}

func (o ClusterVpcConfigOutput) ToClusterVpcConfigOutputWithContext(ctx context.Context) ClusterVpcConfigOutput {
	return o
}

// Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
func (o ClusterVpcConfigOutput) ClusterSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *string { return v.ClusterSecurityGroupId }).(pulumi.StringPtrOutput)
}

// Whether the Amazon EKS private API server endpoint is enabled. Default is `false`.
func (o ClusterVpcConfigOutput) EndpointPrivateAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *bool { return v.EndpointPrivateAccess }).(pulumi.BoolPtrOutput)
}

// Whether the Amazon EKS public API server endpoint is enabled. Default is `true`.
func (o ClusterVpcConfigOutput) EndpointPublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *bool { return v.EndpointPublicAccess }).(pulumi.BoolPtrOutput)
}

// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. This provider will only perform drift detection of its value when present in a configuration.
func (o ClusterVpcConfigOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterVpcConfig) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
func (o ClusterVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
func (o ClusterVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// ID of the VPC associated with your cluster.
func (o ClusterVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type FargateProfileSelector struct {
	// Key-value map of Kubernetes labels for selection.
	Labels map[string]string `pulumi:"labels"`
	// Kubernetes namespace for selection.
	Namespace string `pulumi:"namespace"`
}

// FargateProfileSelectorInput is an input type that accepts FargateProfileSelectorArgs and FargateProfileSelectorOutput values.
// You can construct a concrete instance of `FargateProfileSelectorInput` via:
//
//          FargateProfileSelectorArgs{...}
type FargateProfileSelectorInput interface {
	pulumi.Input

	ToFargateProfileSelectorOutput() FargateProfileSelectorOutput
	ToFargateProfileSelectorOutputWithContext(context.Context) FargateProfileSelectorOutput
}

type FargateProfileSelectorArgs struct {
	// Key-value map of Kubernetes labels for selection.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Kubernetes namespace for selection.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (FargateProfileSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return i.ToFargateProfileSelectorOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArgs) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorOutput)
}

// FargateProfileSelectorArrayInput is an input type that accepts FargateProfileSelectorArray and FargateProfileSelectorArrayOutput values.
// You can construct a concrete instance of `FargateProfileSelectorArrayInput` via:
//
//          FargateProfileSelectorArray{ FargateProfileSelectorArgs{...} }
type FargateProfileSelectorArrayInput interface {
	pulumi.Input

	ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput
	ToFargateProfileSelectorArrayOutputWithContext(context.Context) FargateProfileSelectorArrayOutput
}

type FargateProfileSelectorArray []FargateProfileSelectorInput

func (FargateProfileSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return i.ToFargateProfileSelectorArrayOutputWithContext(context.Background())
}

func (i FargateProfileSelectorArray) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FargateProfileSelectorArrayOutput)
}

type FargateProfileSelectorOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutput() FargateProfileSelectorOutput {
	return o
}

func (o FargateProfileSelectorOutput) ToFargateProfileSelectorOutputWithContext(ctx context.Context) FargateProfileSelectorOutput {
	return o
}

// Key-value map of Kubernetes labels for selection.
func (o FargateProfileSelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v FargateProfileSelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Kubernetes namespace for selection.
func (o FargateProfileSelectorOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v FargateProfileSelector) string { return v.Namespace }).(pulumi.StringOutput)
}

type FargateProfileSelectorArrayOutput struct{ *pulumi.OutputState }

func (FargateProfileSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FargateProfileSelector)(nil)).Elem()
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutput() FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) ToFargateProfileSelectorArrayOutputWithContext(ctx context.Context) FargateProfileSelectorArrayOutput {
	return o
}

func (o FargateProfileSelectorArrayOutput) Index(i pulumi.IntInput) FargateProfileSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FargateProfileSelector {
		return vs[0].([]FargateProfileSelector)[vs[1].(int)]
	}).(FargateProfileSelectorOutput)
}

type IdentityProviderConfigOidc struct {
	// Client ID for the OpenID Connect identity provider.
	ClientId string `pulumi:"clientId"`
	// The JWT claim that the provider will use to return groups.
	GroupsClaim *string `pulumi:"groupsClaim"`
	// A prefix that is prepended to group claims e.g., `oidc:`.
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// The name of the identity provider config.
	IdentityProviderConfigName string `pulumi:"identityProviderConfigName"`
	// Issuer URL for the OpenID Connect identity provider.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The key value pairs that describe required claims in the identity token.
	RequiredClaims map[string]string `pulumi:"requiredClaims"`
	// The JWT claim that the provider will use as the username.
	UsernameClaim *string `pulumi:"usernameClaim"`
	// A prefix that is prepended to username claims.
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// IdentityProviderConfigOidcInput is an input type that accepts IdentityProviderConfigOidcArgs and IdentityProviderConfigOidcOutput values.
// You can construct a concrete instance of `IdentityProviderConfigOidcInput` via:
//
//          IdentityProviderConfigOidcArgs{...}
type IdentityProviderConfigOidcInput interface {
	pulumi.Input

	ToIdentityProviderConfigOidcOutput() IdentityProviderConfigOidcOutput
	ToIdentityProviderConfigOidcOutputWithContext(context.Context) IdentityProviderConfigOidcOutput
}

type IdentityProviderConfigOidcArgs struct {
	// Client ID for the OpenID Connect identity provider.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The JWT claim that the provider will use to return groups.
	GroupsClaim pulumi.StringPtrInput `pulumi:"groupsClaim"`
	// A prefix that is prepended to group claims e.g., `oidc:`.
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// The name of the identity provider config.
	IdentityProviderConfigName pulumi.StringInput `pulumi:"identityProviderConfigName"`
	// Issuer URL for the OpenID Connect identity provider.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// The key value pairs that describe required claims in the identity token.
	RequiredClaims pulumi.StringMapInput `pulumi:"requiredClaims"`
	// The JWT claim that the provider will use as the username.
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// A prefix that is prepended to username claims.
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (IdentityProviderConfigOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigOidc)(nil)).Elem()
}

func (i IdentityProviderConfigOidcArgs) ToIdentityProviderConfigOidcOutput() IdentityProviderConfigOidcOutput {
	return i.ToIdentityProviderConfigOidcOutputWithContext(context.Background())
}

func (i IdentityProviderConfigOidcArgs) ToIdentityProviderConfigOidcOutputWithContext(ctx context.Context) IdentityProviderConfigOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderConfigOidcOutput)
}

type IdentityProviderConfigOidcOutput struct{ *pulumi.OutputState }

func (IdentityProviderConfigOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviderConfigOidc)(nil)).Elem()
}

func (o IdentityProviderConfigOidcOutput) ToIdentityProviderConfigOidcOutput() IdentityProviderConfigOidcOutput {
	return o
}

func (o IdentityProviderConfigOidcOutput) ToIdentityProviderConfigOidcOutputWithContext(ctx context.Context) IdentityProviderConfigOidcOutput {
	return o
}

// Client ID for the OpenID Connect identity provider.
func (o IdentityProviderConfigOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// The JWT claim that the provider will use to return groups.
func (o IdentityProviderConfigOidcOutput) GroupsClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.GroupsClaim }).(pulumi.StringPtrOutput)
}

// A prefix that is prepended to group claims e.g., `oidc:`.
func (o IdentityProviderConfigOidcOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// The name of the identity provider config.
func (o IdentityProviderConfigOidcOutput) IdentityProviderConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) string { return v.IdentityProviderConfigName }).(pulumi.StringOutput)
}

// Issuer URL for the OpenID Connect identity provider.
func (o IdentityProviderConfigOidcOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// The key value pairs that describe required claims in the identity token.
func (o IdentityProviderConfigOidcOutput) RequiredClaims() pulumi.StringMapOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) map[string]string { return v.RequiredClaims }).(pulumi.StringMapOutput)
}

// The JWT claim that the provider will use as the username.
func (o IdentityProviderConfigOidcOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// A prefix that is prepended to username claims.
func (o IdentityProviderConfigOidcOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityProviderConfigOidc) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type NodeGroupLaunchTemplate struct {
	// Identifier of the EC2 Launch Template. Conflicts with `name`.
	Id *string `pulumi:"id"`
	// Name of the EC2 Launch Template. Conflicts with `id`.
	Name *string `pulumi:"name"`
	// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g. `1`) on read and This provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
	Version string `pulumi:"version"`
}

// NodeGroupLaunchTemplateInput is an input type that accepts NodeGroupLaunchTemplateArgs and NodeGroupLaunchTemplateOutput values.
// You can construct a concrete instance of `NodeGroupLaunchTemplateInput` via:
//
//          NodeGroupLaunchTemplateArgs{...}
type NodeGroupLaunchTemplateInput interface {
	pulumi.Input

	ToNodeGroupLaunchTemplateOutput() NodeGroupLaunchTemplateOutput
	ToNodeGroupLaunchTemplateOutputWithContext(context.Context) NodeGroupLaunchTemplateOutput
}

type NodeGroupLaunchTemplateArgs struct {
	// Identifier of the EC2 Launch Template. Conflicts with `name`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the EC2 Launch Template. Conflicts with `id`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g. `1`) on read and This provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
	Version pulumi.StringInput `pulumi:"version"`
}

func (NodeGroupLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupLaunchTemplate)(nil)).Elem()
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplateOutput() NodeGroupLaunchTemplateOutput {
	return i.ToNodeGroupLaunchTemplateOutputWithContext(context.Background())
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplateOutputWithContext(ctx context.Context) NodeGroupLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupLaunchTemplateOutput)
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return i.ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i NodeGroupLaunchTemplateArgs) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupLaunchTemplateOutput).ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx)
}

// NodeGroupLaunchTemplatePtrInput is an input type that accepts NodeGroupLaunchTemplateArgs, NodeGroupLaunchTemplatePtr and NodeGroupLaunchTemplatePtrOutput values.
// You can construct a concrete instance of `NodeGroupLaunchTemplatePtrInput` via:
//
//          NodeGroupLaunchTemplateArgs{...}
//
//  or:
//
//          nil
type NodeGroupLaunchTemplatePtrInput interface {
	pulumi.Input

	ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput
	ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Context) NodeGroupLaunchTemplatePtrOutput
}

type nodeGroupLaunchTemplatePtrType NodeGroupLaunchTemplateArgs

func NodeGroupLaunchTemplatePtr(v *NodeGroupLaunchTemplateArgs) NodeGroupLaunchTemplatePtrInput {
	return (*nodeGroupLaunchTemplatePtrType)(v)
}

func (*nodeGroupLaunchTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupLaunchTemplate)(nil)).Elem()
}

func (i *nodeGroupLaunchTemplatePtrType) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return i.ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i *nodeGroupLaunchTemplatePtrType) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupLaunchTemplatePtrOutput)
}

type NodeGroupLaunchTemplateOutput struct{ *pulumi.OutputState }

func (NodeGroupLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupLaunchTemplate)(nil)).Elem()
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplateOutput() NodeGroupLaunchTemplateOutput {
	return o
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplateOutputWithContext(ctx context.Context) NodeGroupLaunchTemplateOutput {
	return o
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return o.ToNodeGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (o NodeGroupLaunchTemplateOutput) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupLaunchTemplate) *NodeGroupLaunchTemplate {
		return &v
	}).(NodeGroupLaunchTemplatePtrOutput)
}

// Identifier of the EC2 Launch Template. Conflicts with `name`.
func (o NodeGroupLaunchTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupLaunchTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the EC2 Launch Template. Conflicts with `id`.
func (o NodeGroupLaunchTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupLaunchTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g. `1`) on read and This provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
func (o NodeGroupLaunchTemplateOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupLaunchTemplate) string { return v.Version }).(pulumi.StringOutput)
}

type NodeGroupLaunchTemplatePtrOutput struct{ *pulumi.OutputState }

func (NodeGroupLaunchTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupLaunchTemplate)(nil)).Elem()
}

func (o NodeGroupLaunchTemplatePtrOutput) ToNodeGroupLaunchTemplatePtrOutput() NodeGroupLaunchTemplatePtrOutput {
	return o
}

func (o NodeGroupLaunchTemplatePtrOutput) ToNodeGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) NodeGroupLaunchTemplatePtrOutput {
	return o
}

func (o NodeGroupLaunchTemplatePtrOutput) Elem() NodeGroupLaunchTemplateOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) NodeGroupLaunchTemplate {
		if v != nil {
			return *v
		}
		var ret NodeGroupLaunchTemplate
		return ret
	}).(NodeGroupLaunchTemplateOutput)
}

// Identifier of the EC2 Launch Template. Conflicts with `name`.
func (o NodeGroupLaunchTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the EC2 Launch Template. Conflicts with `id`.
func (o NodeGroupLaunchTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g. `1`) on read and This provider will show a difference on next plan. Using the `defaultVersion` or `latestVersion` attribute of the `ec2.LaunchTemplate` resource or data source is recommended for this argument.
func (o NodeGroupLaunchTemplatePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupLaunchTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type NodeGroupRemoteAccess struct {
	// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
	Ec2SshKey *string `pulumi:"ec2SshKey"`
	// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
	SourceSecurityGroupIds []string `pulumi:"sourceSecurityGroupIds"`
}

// NodeGroupRemoteAccessInput is an input type that accepts NodeGroupRemoteAccessArgs and NodeGroupRemoteAccessOutput values.
// You can construct a concrete instance of `NodeGroupRemoteAccessInput` via:
//
//          NodeGroupRemoteAccessArgs{...}
type NodeGroupRemoteAccessInput interface {
	pulumi.Input

	ToNodeGroupRemoteAccessOutput() NodeGroupRemoteAccessOutput
	ToNodeGroupRemoteAccessOutputWithContext(context.Context) NodeGroupRemoteAccessOutput
}

type NodeGroupRemoteAccessArgs struct {
	// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
	Ec2SshKey pulumi.StringPtrInput `pulumi:"ec2SshKey"`
	// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
	SourceSecurityGroupIds pulumi.StringArrayInput `pulumi:"sourceSecurityGroupIds"`
}

func (NodeGroupRemoteAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupRemoteAccess)(nil)).Elem()
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessOutput() NodeGroupRemoteAccessOutput {
	return i.ToNodeGroupRemoteAccessOutputWithContext(context.Background())
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessOutputWithContext(ctx context.Context) NodeGroupRemoteAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupRemoteAccessOutput)
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return i.ToNodeGroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i NodeGroupRemoteAccessArgs) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupRemoteAccessOutput).ToNodeGroupRemoteAccessPtrOutputWithContext(ctx)
}

// NodeGroupRemoteAccessPtrInput is an input type that accepts NodeGroupRemoteAccessArgs, NodeGroupRemoteAccessPtr and NodeGroupRemoteAccessPtrOutput values.
// You can construct a concrete instance of `NodeGroupRemoteAccessPtrInput` via:
//
//          NodeGroupRemoteAccessArgs{...}
//
//  or:
//
//          nil
type NodeGroupRemoteAccessPtrInput interface {
	pulumi.Input

	ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput
	ToNodeGroupRemoteAccessPtrOutputWithContext(context.Context) NodeGroupRemoteAccessPtrOutput
}

type nodeGroupRemoteAccessPtrType NodeGroupRemoteAccessArgs

func NodeGroupRemoteAccessPtr(v *NodeGroupRemoteAccessArgs) NodeGroupRemoteAccessPtrInput {
	return (*nodeGroupRemoteAccessPtrType)(v)
}

func (*nodeGroupRemoteAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupRemoteAccess)(nil)).Elem()
}

func (i *nodeGroupRemoteAccessPtrType) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return i.ToNodeGroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (i *nodeGroupRemoteAccessPtrType) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupRemoteAccessPtrOutput)
}

type NodeGroupRemoteAccessOutput struct{ *pulumi.OutputState }

func (NodeGroupRemoteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupRemoteAccess)(nil)).Elem()
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessOutput() NodeGroupRemoteAccessOutput {
	return o
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessOutputWithContext(ctx context.Context) NodeGroupRemoteAccessOutput {
	return o
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return o.ToNodeGroupRemoteAccessPtrOutputWithContext(context.Background())
}

func (o NodeGroupRemoteAccessOutput) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupRemoteAccess) *NodeGroupRemoteAccess {
		return &v
	}).(NodeGroupRemoteAccessPtrOutput)
}

// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
func (o NodeGroupRemoteAccessOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupRemoteAccess) *string { return v.Ec2SshKey }).(pulumi.StringPtrOutput)
}

// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
func (o NodeGroupRemoteAccessOutput) SourceSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeGroupRemoteAccess) []string { return v.SourceSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type NodeGroupRemoteAccessPtrOutput struct{ *pulumi.OutputState }

func (NodeGroupRemoteAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupRemoteAccess)(nil)).Elem()
}

func (o NodeGroupRemoteAccessPtrOutput) ToNodeGroupRemoteAccessPtrOutput() NodeGroupRemoteAccessPtrOutput {
	return o
}

func (o NodeGroupRemoteAccessPtrOutput) ToNodeGroupRemoteAccessPtrOutputWithContext(ctx context.Context) NodeGroupRemoteAccessPtrOutput {
	return o
}

func (o NodeGroupRemoteAccessPtrOutput) Elem() NodeGroupRemoteAccessOutput {
	return o.ApplyT(func(v *NodeGroupRemoteAccess) NodeGroupRemoteAccess {
		if v != nil {
			return *v
		}
		var ret NodeGroupRemoteAccess
		return ret
	}).(NodeGroupRemoteAccessOutput)
}

// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `sourceSecurityGroupIds` when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
func (o NodeGroupRemoteAccessPtrOutput) Ec2SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeGroupRemoteAccess) *string {
		if v == nil {
			return nil
		}
		return v.Ec2SshKey
	}).(pulumi.StringPtrOutput)
}

// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2SshKey`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
func (o NodeGroupRemoteAccessPtrOutput) SourceSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeGroupRemoteAccess) []string {
		if v == nil {
			return nil
		}
		return v.SourceSecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

type NodeGroupResource struct {
	// List of objects containing information about AutoScaling Groups.
	AutoscalingGroups []NodeGroupResourceAutoscalingGroup `pulumi:"autoscalingGroups"`
	// Identifier of the remote access EC2 Security Group.
	RemoteAccessSecurityGroupId *string `pulumi:"remoteAccessSecurityGroupId"`
}

type NodeGroupResourceOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupResource)(nil)).Elem()
}

func (o NodeGroupResourceOutput) ToNodeGroupResourceOutput() NodeGroupResourceOutput {
	return o
}

func (o NodeGroupResourceOutput) ToNodeGroupResourceOutputWithContext(ctx context.Context) NodeGroupResourceOutput {
	return o
}

// List of objects containing information about AutoScaling Groups.
func (o NodeGroupResourceOutput) AutoscalingGroups() NodeGroupResourceAutoscalingGroupArrayOutput {
	return o.ApplyT(func(v NodeGroupResource) []NodeGroupResourceAutoscalingGroup { return v.AutoscalingGroups }).(NodeGroupResourceAutoscalingGroupArrayOutput)
}

// Identifier of the remote access EC2 Security Group.
func (o NodeGroupResourceOutput) RemoteAccessSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupResource) *string { return v.RemoteAccessSecurityGroupId }).(pulumi.StringPtrOutput)
}

type NodeGroupResourceArrayOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupResource)(nil)).Elem()
}

func (o NodeGroupResourceArrayOutput) ToNodeGroupResourceArrayOutput() NodeGroupResourceArrayOutput {
	return o
}

func (o NodeGroupResourceArrayOutput) ToNodeGroupResourceArrayOutputWithContext(ctx context.Context) NodeGroupResourceArrayOutput {
	return o
}

func (o NodeGroupResourceArrayOutput) Index(i pulumi.IntInput) NodeGroupResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeGroupResource {
		return vs[0].([]NodeGroupResource)[vs[1].(int)]
	}).(NodeGroupResourceOutput)
}

type NodeGroupResourceAutoscalingGroup struct {
	// Name of the EC2 Launch Template. Conflicts with `id`.
	Name *string `pulumi:"name"`
}

type NodeGroupResourceAutoscalingGroupOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceAutoscalingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o NodeGroupResourceAutoscalingGroupOutput) ToNodeGroupResourceAutoscalingGroupOutput() NodeGroupResourceAutoscalingGroupOutput {
	return o
}

func (o NodeGroupResourceAutoscalingGroupOutput) ToNodeGroupResourceAutoscalingGroupOutputWithContext(ctx context.Context) NodeGroupResourceAutoscalingGroupOutput {
	return o
}

// Name of the EC2 Launch Template. Conflicts with `id`.
func (o NodeGroupResourceAutoscalingGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupResourceAutoscalingGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NodeGroupResourceAutoscalingGroupArrayOutput struct{ *pulumi.OutputState }

func (NodeGroupResourceAutoscalingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o NodeGroupResourceAutoscalingGroupArrayOutput) ToNodeGroupResourceAutoscalingGroupArrayOutput() NodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o NodeGroupResourceAutoscalingGroupArrayOutput) ToNodeGroupResourceAutoscalingGroupArrayOutputWithContext(ctx context.Context) NodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o NodeGroupResourceAutoscalingGroupArrayOutput) Index(i pulumi.IntInput) NodeGroupResourceAutoscalingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeGroupResourceAutoscalingGroup {
		return vs[0].([]NodeGroupResourceAutoscalingGroup)[vs[1].(int)]
	}).(NodeGroupResourceAutoscalingGroupOutput)
}

type NodeGroupScalingConfig struct {
	// Desired number of worker nodes.
	DesiredSize int `pulumi:"desiredSize"`
	// Maximum number of worker nodes.
	MaxSize int `pulumi:"maxSize"`
	// Minimum number of worker nodes.
	MinSize int `pulumi:"minSize"`
}

// NodeGroupScalingConfigInput is an input type that accepts NodeGroupScalingConfigArgs and NodeGroupScalingConfigOutput values.
// You can construct a concrete instance of `NodeGroupScalingConfigInput` via:
//
//          NodeGroupScalingConfigArgs{...}
type NodeGroupScalingConfigInput interface {
	pulumi.Input

	ToNodeGroupScalingConfigOutput() NodeGroupScalingConfigOutput
	ToNodeGroupScalingConfigOutputWithContext(context.Context) NodeGroupScalingConfigOutput
}

type NodeGroupScalingConfigArgs struct {
	// Desired number of worker nodes.
	DesiredSize pulumi.IntInput `pulumi:"desiredSize"`
	// Maximum number of worker nodes.
	MaxSize pulumi.IntInput `pulumi:"maxSize"`
	// Minimum number of worker nodes.
	MinSize pulumi.IntInput `pulumi:"minSize"`
}

func (NodeGroupScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupScalingConfig)(nil)).Elem()
}

func (i NodeGroupScalingConfigArgs) ToNodeGroupScalingConfigOutput() NodeGroupScalingConfigOutput {
	return i.ToNodeGroupScalingConfigOutputWithContext(context.Background())
}

func (i NodeGroupScalingConfigArgs) ToNodeGroupScalingConfigOutputWithContext(ctx context.Context) NodeGroupScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupScalingConfigOutput)
}

type NodeGroupScalingConfigOutput struct{ *pulumi.OutputState }

func (NodeGroupScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupScalingConfig)(nil)).Elem()
}

func (o NodeGroupScalingConfigOutput) ToNodeGroupScalingConfigOutput() NodeGroupScalingConfigOutput {
	return o
}

func (o NodeGroupScalingConfigOutput) ToNodeGroupScalingConfigOutputWithContext(ctx context.Context) NodeGroupScalingConfigOutput {
	return o
}

// Desired number of worker nodes.
func (o NodeGroupScalingConfigOutput) DesiredSize() pulumi.IntOutput {
	return o.ApplyT(func(v NodeGroupScalingConfig) int { return v.DesiredSize }).(pulumi.IntOutput)
}

// Maximum number of worker nodes.
func (o NodeGroupScalingConfigOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v NodeGroupScalingConfig) int { return v.MaxSize }).(pulumi.IntOutput)
}

// Minimum number of worker nodes.
func (o NodeGroupScalingConfigOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v NodeGroupScalingConfig) int { return v.MinSize }).(pulumi.IntOutput)
}

type NodeGroupTaint struct {
	// The effect of the taint. Valid values: `NO_SCHEDULE`, `NO_EXECUTE`, `PREFER_NO_SCHEDULE`.
	Effect string `pulumi:"effect"`
	// The key of the taint. Maximum length of 63.
	Key string `pulumi:"key"`
	// The value of the taint. Maximum length of 63.
	Value *string `pulumi:"value"`
}

// NodeGroupTaintInput is an input type that accepts NodeGroupTaintArgs and NodeGroupTaintOutput values.
// You can construct a concrete instance of `NodeGroupTaintInput` via:
//
//          NodeGroupTaintArgs{...}
type NodeGroupTaintInput interface {
	pulumi.Input

	ToNodeGroupTaintOutput() NodeGroupTaintOutput
	ToNodeGroupTaintOutputWithContext(context.Context) NodeGroupTaintOutput
}

type NodeGroupTaintArgs struct {
	// The effect of the taint. Valid values: `NO_SCHEDULE`, `NO_EXECUTE`, `PREFER_NO_SCHEDULE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// The key of the taint. Maximum length of 63.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the taint. Maximum length of 63.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NodeGroupTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupTaint)(nil)).Elem()
}

func (i NodeGroupTaintArgs) ToNodeGroupTaintOutput() NodeGroupTaintOutput {
	return i.ToNodeGroupTaintOutputWithContext(context.Background())
}

func (i NodeGroupTaintArgs) ToNodeGroupTaintOutputWithContext(ctx context.Context) NodeGroupTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupTaintOutput)
}

// NodeGroupTaintArrayInput is an input type that accepts NodeGroupTaintArray and NodeGroupTaintArrayOutput values.
// You can construct a concrete instance of `NodeGroupTaintArrayInput` via:
//
//          NodeGroupTaintArray{ NodeGroupTaintArgs{...} }
type NodeGroupTaintArrayInput interface {
	pulumi.Input

	ToNodeGroupTaintArrayOutput() NodeGroupTaintArrayOutput
	ToNodeGroupTaintArrayOutputWithContext(context.Context) NodeGroupTaintArrayOutput
}

type NodeGroupTaintArray []NodeGroupTaintInput

func (NodeGroupTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupTaint)(nil)).Elem()
}

func (i NodeGroupTaintArray) ToNodeGroupTaintArrayOutput() NodeGroupTaintArrayOutput {
	return i.ToNodeGroupTaintArrayOutputWithContext(context.Background())
}

func (i NodeGroupTaintArray) ToNodeGroupTaintArrayOutputWithContext(ctx context.Context) NodeGroupTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupTaintArrayOutput)
}

type NodeGroupTaintOutput struct{ *pulumi.OutputState }

func (NodeGroupTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupTaint)(nil)).Elem()
}

func (o NodeGroupTaintOutput) ToNodeGroupTaintOutput() NodeGroupTaintOutput {
	return o
}

func (o NodeGroupTaintOutput) ToNodeGroupTaintOutputWithContext(ctx context.Context) NodeGroupTaintOutput {
	return o
}

// The effect of the taint. Valid values: `NO_SCHEDULE`, `NO_EXECUTE`, `PREFER_NO_SCHEDULE`.
func (o NodeGroupTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// The key of the taint. Maximum length of 63.
func (o NodeGroupTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodeGroupTaint) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the taint. Maximum length of 63.
func (o NodeGroupTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeGroupTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NodeGroupTaintArrayOutput struct{ *pulumi.OutputState }

func (NodeGroupTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeGroupTaint)(nil)).Elem()
}

func (o NodeGroupTaintArrayOutput) ToNodeGroupTaintArrayOutput() NodeGroupTaintArrayOutput {
	return o
}

func (o NodeGroupTaintArrayOutput) ToNodeGroupTaintArrayOutputWithContext(ctx context.Context) NodeGroupTaintArrayOutput {
	return o
}

func (o NodeGroupTaintArrayOutput) Index(i pulumi.IntInput) NodeGroupTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeGroupTaint {
		return vs[0].([]NodeGroupTaint)[vs[1].(int)]
	}).(NodeGroupTaintOutput)
}

type NodeGroupUpdateConfig struct {
	// Desired max number of unavailable worker nodes during node group update.
	MaxUnavailable *int `pulumi:"maxUnavailable"`
	// Desired max percentage of unavailable worker nodes during node group update.
	MaxUnavailablePercentage *int `pulumi:"maxUnavailablePercentage"`
}

// NodeGroupUpdateConfigInput is an input type that accepts NodeGroupUpdateConfigArgs and NodeGroupUpdateConfigOutput values.
// You can construct a concrete instance of `NodeGroupUpdateConfigInput` via:
//
//          NodeGroupUpdateConfigArgs{...}
type NodeGroupUpdateConfigInput interface {
	pulumi.Input

	ToNodeGroupUpdateConfigOutput() NodeGroupUpdateConfigOutput
	ToNodeGroupUpdateConfigOutputWithContext(context.Context) NodeGroupUpdateConfigOutput
}

type NodeGroupUpdateConfigArgs struct {
	// Desired max number of unavailable worker nodes during node group update.
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
	// Desired max percentage of unavailable worker nodes during node group update.
	MaxUnavailablePercentage pulumi.IntPtrInput `pulumi:"maxUnavailablePercentage"`
}

func (NodeGroupUpdateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupUpdateConfig)(nil)).Elem()
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigOutput() NodeGroupUpdateConfigOutput {
	return i.ToNodeGroupUpdateConfigOutputWithContext(context.Background())
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigOutputWithContext(ctx context.Context) NodeGroupUpdateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupUpdateConfigOutput)
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return i.ToNodeGroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i NodeGroupUpdateConfigArgs) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupUpdateConfigOutput).ToNodeGroupUpdateConfigPtrOutputWithContext(ctx)
}

// NodeGroupUpdateConfigPtrInput is an input type that accepts NodeGroupUpdateConfigArgs, NodeGroupUpdateConfigPtr and NodeGroupUpdateConfigPtrOutput values.
// You can construct a concrete instance of `NodeGroupUpdateConfigPtrInput` via:
//
//          NodeGroupUpdateConfigArgs{...}
//
//  or:
//
//          nil
type NodeGroupUpdateConfigPtrInput interface {
	pulumi.Input

	ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput
	ToNodeGroupUpdateConfigPtrOutputWithContext(context.Context) NodeGroupUpdateConfigPtrOutput
}

type nodeGroupUpdateConfigPtrType NodeGroupUpdateConfigArgs

func NodeGroupUpdateConfigPtr(v *NodeGroupUpdateConfigArgs) NodeGroupUpdateConfigPtrInput {
	return (*nodeGroupUpdateConfigPtrType)(v)
}

func (*nodeGroupUpdateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupUpdateConfig)(nil)).Elem()
}

func (i *nodeGroupUpdateConfigPtrType) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return i.ToNodeGroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (i *nodeGroupUpdateConfigPtrType) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupUpdateConfigPtrOutput)
}

type NodeGroupUpdateConfigOutput struct{ *pulumi.OutputState }

func (NodeGroupUpdateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroupUpdateConfig)(nil)).Elem()
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigOutput() NodeGroupUpdateConfigOutput {
	return o
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigOutputWithContext(ctx context.Context) NodeGroupUpdateConfigOutput {
	return o
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return o.ToNodeGroupUpdateConfigPtrOutputWithContext(context.Background())
}

func (o NodeGroupUpdateConfigOutput) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeGroupUpdateConfig) *NodeGroupUpdateConfig {
		return &v
	}).(NodeGroupUpdateConfigPtrOutput)
}

// Desired max number of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeGroupUpdateConfig) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

// Desired max percentage of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodeGroupUpdateConfig) *int { return v.MaxUnavailablePercentage }).(pulumi.IntPtrOutput)
}

type NodeGroupUpdateConfigPtrOutput struct{ *pulumi.OutputState }

func (NodeGroupUpdateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeGroupUpdateConfig)(nil)).Elem()
}

func (o NodeGroupUpdateConfigPtrOutput) ToNodeGroupUpdateConfigPtrOutput() NodeGroupUpdateConfigPtrOutput {
	return o
}

func (o NodeGroupUpdateConfigPtrOutput) ToNodeGroupUpdateConfigPtrOutputWithContext(ctx context.Context) NodeGroupUpdateConfigPtrOutput {
	return o
}

func (o NodeGroupUpdateConfigPtrOutput) Elem() NodeGroupUpdateConfigOutput {
	return o.ApplyT(func(v *NodeGroupUpdateConfig) NodeGroupUpdateConfig {
		if v != nil {
			return *v
		}
		var ret NodeGroupUpdateConfig
		return ret
	}).(NodeGroupUpdateConfigOutput)
}

// Desired max number of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeGroupUpdateConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

// Desired max percentage of unavailable worker nodes during node group update.
func (o NodeGroupUpdateConfigPtrOutput) MaxUnavailablePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodeGroupUpdateConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailablePercentage
	}).(pulumi.IntPtrOutput)
}

type GetClusterCertificateAuthority struct {
	// The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
	Data string `pulumi:"data"`
}

type GetClusterCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (GetClusterCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCertificateAuthority)(nil)).Elem()
}

func (o GetClusterCertificateAuthorityOutput) ToGetClusterCertificateAuthorityOutput() GetClusterCertificateAuthorityOutput {
	return o
}

func (o GetClusterCertificateAuthorityOutput) ToGetClusterCertificateAuthorityOutputWithContext(ctx context.Context) GetClusterCertificateAuthorityOutput {
	return o
}

// The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
func (o GetClusterCertificateAuthorityOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCertificateAuthority) string { return v.Data }).(pulumi.StringOutput)
}

type GetClusterIdentity struct {
	// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
	Oidcs []GetClusterIdentityOidc `pulumi:"oidcs"`
}

type GetClusterIdentityOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentity)(nil)).Elem()
}

func (o GetClusterIdentityOutput) ToGetClusterIdentityOutput() GetClusterIdentityOutput {
	return o
}

func (o GetClusterIdentityOutput) ToGetClusterIdentityOutputWithContext(ctx context.Context) GetClusterIdentityOutput {
	return o
}

// Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
func (o GetClusterIdentityOutput) Oidcs() GetClusterIdentityOidcArrayOutput {
	return o.ApplyT(func(v GetClusterIdentity) []GetClusterIdentityOidc { return v.Oidcs }).(GetClusterIdentityOidcArrayOutput)
}

type GetClusterIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentity)(nil)).Elem()
}

func (o GetClusterIdentityArrayOutput) ToGetClusterIdentityArrayOutput() GetClusterIdentityArrayOutput {
	return o
}

func (o GetClusterIdentityArrayOutput) ToGetClusterIdentityArrayOutputWithContext(ctx context.Context) GetClusterIdentityArrayOutput {
	return o
}

func (o GetClusterIdentityArrayOutput) Index(i pulumi.IntInput) GetClusterIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIdentity {
		return vs[0].([]GetClusterIdentity)[vs[1].(int)]
	}).(GetClusterIdentityOutput)
}

type GetClusterIdentityOidc struct {
	// Issuer URL for the OpenID Connect identity provider.
	Issuer string `pulumi:"issuer"`
}

type GetClusterIdentityOidcOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIdentityOidc)(nil)).Elem()
}

func (o GetClusterIdentityOidcOutput) ToGetClusterIdentityOidcOutput() GetClusterIdentityOidcOutput {
	return o
}

func (o GetClusterIdentityOidcOutput) ToGetClusterIdentityOidcOutputWithContext(ctx context.Context) GetClusterIdentityOidcOutput {
	return o
}

// Issuer URL for the OpenID Connect identity provider.
func (o GetClusterIdentityOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIdentityOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

type GetClusterIdentityOidcArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIdentityOidcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIdentityOidc)(nil)).Elem()
}

func (o GetClusterIdentityOidcArrayOutput) ToGetClusterIdentityOidcArrayOutput() GetClusterIdentityOidcArrayOutput {
	return o
}

func (o GetClusterIdentityOidcArrayOutput) ToGetClusterIdentityOidcArrayOutputWithContext(ctx context.Context) GetClusterIdentityOidcArrayOutput {
	return o
}

func (o GetClusterIdentityOidcArrayOutput) Index(i pulumi.IntInput) GetClusterIdentityOidcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIdentityOidc {
		return vs[0].([]GetClusterIdentityOidc)[vs[1].(int)]
	}).(GetClusterIdentityOidcOutput)
}

type GetClusterKubernetesNetworkConfig struct {
	// The CIDR block to assign Kubernetes service IP addresses from.
	ServiceIpv4Cidr string `pulumi:"serviceIpv4Cidr"`
}

type GetClusterKubernetesNetworkConfigOutput struct{ *pulumi.OutputState }

func (GetClusterKubernetesNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o GetClusterKubernetesNetworkConfigOutput) ToGetClusterKubernetesNetworkConfigOutput() GetClusterKubernetesNetworkConfigOutput {
	return o
}

func (o GetClusterKubernetesNetworkConfigOutput) ToGetClusterKubernetesNetworkConfigOutputWithContext(ctx context.Context) GetClusterKubernetesNetworkConfigOutput {
	return o
}

// The CIDR block to assign Kubernetes service IP addresses from.
func (o GetClusterKubernetesNetworkConfigOutput) ServiceIpv4Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubernetesNetworkConfig) string { return v.ServiceIpv4Cidr }).(pulumi.StringOutput)
}

type GetClusterKubernetesNetworkConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterKubernetesNetworkConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterKubernetesNetworkConfig)(nil)).Elem()
}

func (o GetClusterKubernetesNetworkConfigArrayOutput) ToGetClusterKubernetesNetworkConfigArrayOutput() GetClusterKubernetesNetworkConfigArrayOutput {
	return o
}

func (o GetClusterKubernetesNetworkConfigArrayOutput) ToGetClusterKubernetesNetworkConfigArrayOutputWithContext(ctx context.Context) GetClusterKubernetesNetworkConfigArrayOutput {
	return o
}

func (o GetClusterKubernetesNetworkConfigArrayOutput) Index(i pulumi.IntInput) GetClusterKubernetesNetworkConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterKubernetesNetworkConfig {
		return vs[0].([]GetClusterKubernetesNetworkConfig)[vs[1].(int)]
	}).(GetClusterKubernetesNetworkConfigOutput)
}

type GetClusterVpcConfig struct {
	// The cluster security group that was created by Amazon EKS for the cluster.
	ClusterSecurityGroupId string `pulumi:"clusterSecurityGroupId"`
	// Indicates whether or not the Amazon EKS private API server endpoint is enabled.
	EndpointPrivateAccess bool `pulumi:"endpointPrivateAccess"`
	// Indicates whether or not the Amazon EKS public API server endpoint is enabled.
	EndpointPublicAccess bool `pulumi:"endpointPublicAccess"`
	// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
	PublicAccessCidrs []string `pulumi:"publicAccessCidrs"`
	// List of security group IDs
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of subnet IDs
	SubnetIds []string `pulumi:"subnetIds"`
	// The VPC associated with your cluster.
	VpcId string `pulumi:"vpcId"`
}

type GetClusterVpcConfigOutput struct{ *pulumi.OutputState }

func (GetClusterVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterVpcConfig)(nil)).Elem()
}

func (o GetClusterVpcConfigOutput) ToGetClusterVpcConfigOutput() GetClusterVpcConfigOutput {
	return o
}

func (o GetClusterVpcConfigOutput) ToGetClusterVpcConfigOutputWithContext(ctx context.Context) GetClusterVpcConfigOutput {
	return o
}

// The cluster security group that was created by Amazon EKS for the cluster.
func (o GetClusterVpcConfigOutput) ClusterSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) string { return v.ClusterSecurityGroupId }).(pulumi.StringOutput)
}

// Indicates whether or not the Amazon EKS private API server endpoint is enabled.
func (o GetClusterVpcConfigOutput) EndpointPrivateAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) bool { return v.EndpointPrivateAccess }).(pulumi.BoolOutput)
}

// Indicates whether or not the Amazon EKS public API server endpoint is enabled.
func (o GetClusterVpcConfigOutput) EndpointPublicAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) bool { return v.EndpointPublicAccess }).(pulumi.BoolOutput)
}

// List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
func (o GetClusterVpcConfigOutput) PublicAccessCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) []string { return v.PublicAccessCidrs }).(pulumi.StringArrayOutput)
}

// List of security group IDs
func (o GetClusterVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of subnet IDs
func (o GetClusterVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The VPC associated with your cluster.
func (o GetClusterVpcConfigOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterVpcConfig) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNodeGroupRemoteAccess struct {
	// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
	Ec2SshKey string `pulumi:"ec2SshKey"`
	// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
	SourceSecurityGroupIds []string `pulumi:"sourceSecurityGroupIds"`
}

type GetNodeGroupRemoteAccessOutput struct{ *pulumi.OutputState }

func (GetNodeGroupRemoteAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupRemoteAccess)(nil)).Elem()
}

func (o GetNodeGroupRemoteAccessOutput) ToGetNodeGroupRemoteAccessOutput() GetNodeGroupRemoteAccessOutput {
	return o
}

func (o GetNodeGroupRemoteAccessOutput) ToGetNodeGroupRemoteAccessOutputWithContext(ctx context.Context) GetNodeGroupRemoteAccessOutput {
	return o
}

// EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
func (o GetNodeGroupRemoteAccessOutput) Ec2SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupRemoteAccess) string { return v.Ec2SshKey }).(pulumi.StringOutput)
}

// Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
func (o GetNodeGroupRemoteAccessOutput) SourceSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodeGroupRemoteAccess) []string { return v.SourceSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type GetNodeGroupRemoteAccessArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupRemoteAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupRemoteAccess)(nil)).Elem()
}

func (o GetNodeGroupRemoteAccessArrayOutput) ToGetNodeGroupRemoteAccessArrayOutput() GetNodeGroupRemoteAccessArrayOutput {
	return o
}

func (o GetNodeGroupRemoteAccessArrayOutput) ToGetNodeGroupRemoteAccessArrayOutputWithContext(ctx context.Context) GetNodeGroupRemoteAccessArrayOutput {
	return o
}

func (o GetNodeGroupRemoteAccessArrayOutput) Index(i pulumi.IntInput) GetNodeGroupRemoteAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupRemoteAccess {
		return vs[0].([]GetNodeGroupRemoteAccess)[vs[1].(int)]
	}).(GetNodeGroupRemoteAccessOutput)
}

type GetNodeGroupResource struct {
	// List of objects containing information about AutoScaling Groups.
	AutoscalingGroups []GetNodeGroupResourceAutoscalingGroup `pulumi:"autoscalingGroups"`
	// Identifier of the remote access EC2 Security Group.
	RemoteAccessSecurityGroupId string `pulumi:"remoteAccessSecurityGroupId"`
}

type GetNodeGroupResourceOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupResource)(nil)).Elem()
}

func (o GetNodeGroupResourceOutput) ToGetNodeGroupResourceOutput() GetNodeGroupResourceOutput {
	return o
}

func (o GetNodeGroupResourceOutput) ToGetNodeGroupResourceOutputWithContext(ctx context.Context) GetNodeGroupResourceOutput {
	return o
}

// List of objects containing information about AutoScaling Groups.
func (o GetNodeGroupResourceOutput) AutoscalingGroups() GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return o.ApplyT(func(v GetNodeGroupResource) []GetNodeGroupResourceAutoscalingGroup { return v.AutoscalingGroups }).(GetNodeGroupResourceAutoscalingGroupArrayOutput)
}

// Identifier of the remote access EC2 Security Group.
func (o GetNodeGroupResourceOutput) RemoteAccessSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupResource) string { return v.RemoteAccessSecurityGroupId }).(pulumi.StringOutput)
}

type GetNodeGroupResourceArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupResource)(nil)).Elem()
}

func (o GetNodeGroupResourceArrayOutput) ToGetNodeGroupResourceArrayOutput() GetNodeGroupResourceArrayOutput {
	return o
}

func (o GetNodeGroupResourceArrayOutput) ToGetNodeGroupResourceArrayOutputWithContext(ctx context.Context) GetNodeGroupResourceArrayOutput {
	return o
}

func (o GetNodeGroupResourceArrayOutput) Index(i pulumi.IntInput) GetNodeGroupResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupResource {
		return vs[0].([]GetNodeGroupResource)[vs[1].(int)]
	}).(GetNodeGroupResourceOutput)
}

type GetNodeGroupResourceAutoscalingGroup struct {
	// Name of the AutoScaling Group.
	Name string `pulumi:"name"`
}

type GetNodeGroupResourceAutoscalingGroupOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceAutoscalingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o GetNodeGroupResourceAutoscalingGroupOutput) ToGetNodeGroupResourceAutoscalingGroupOutput() GetNodeGroupResourceAutoscalingGroupOutput {
	return o
}

func (o GetNodeGroupResourceAutoscalingGroupOutput) ToGetNodeGroupResourceAutoscalingGroupOutputWithContext(ctx context.Context) GetNodeGroupResourceAutoscalingGroupOutput {
	return o
}

// Name of the AutoScaling Group.
func (o GetNodeGroupResourceAutoscalingGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupResourceAutoscalingGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetNodeGroupResourceAutoscalingGroupArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupResourceAutoscalingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupResourceAutoscalingGroup)(nil)).Elem()
}

func (o GetNodeGroupResourceAutoscalingGroupArrayOutput) ToGetNodeGroupResourceAutoscalingGroupArrayOutput() GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o GetNodeGroupResourceAutoscalingGroupArrayOutput) ToGetNodeGroupResourceAutoscalingGroupArrayOutputWithContext(ctx context.Context) GetNodeGroupResourceAutoscalingGroupArrayOutput {
	return o
}

func (o GetNodeGroupResourceAutoscalingGroupArrayOutput) Index(i pulumi.IntInput) GetNodeGroupResourceAutoscalingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupResourceAutoscalingGroup {
		return vs[0].([]GetNodeGroupResourceAutoscalingGroup)[vs[1].(int)]
	}).(GetNodeGroupResourceAutoscalingGroupOutput)
}

type GetNodeGroupScalingConfig struct {
	// Desired number of worker nodes.
	DesiredSize int `pulumi:"desiredSize"`
	// Maximum number of worker nodes.
	MaxSize int `pulumi:"maxSize"`
	// Minimum number of worker nodes.
	MinSize int `pulumi:"minSize"`
}

type GetNodeGroupScalingConfigOutput struct{ *pulumi.OutputState }

func (GetNodeGroupScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupScalingConfig)(nil)).Elem()
}

func (o GetNodeGroupScalingConfigOutput) ToGetNodeGroupScalingConfigOutput() GetNodeGroupScalingConfigOutput {
	return o
}

func (o GetNodeGroupScalingConfigOutput) ToGetNodeGroupScalingConfigOutputWithContext(ctx context.Context) GetNodeGroupScalingConfigOutput {
	return o
}

// Desired number of worker nodes.
func (o GetNodeGroupScalingConfigOutput) DesiredSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeGroupScalingConfig) int { return v.DesiredSize }).(pulumi.IntOutput)
}

// Maximum number of worker nodes.
func (o GetNodeGroupScalingConfigOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeGroupScalingConfig) int { return v.MaxSize }).(pulumi.IntOutput)
}

// Minimum number of worker nodes.
func (o GetNodeGroupScalingConfigOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodeGroupScalingConfig) int { return v.MinSize }).(pulumi.IntOutput)
}

type GetNodeGroupScalingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetNodeGroupScalingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodeGroupScalingConfig)(nil)).Elem()
}

func (o GetNodeGroupScalingConfigArrayOutput) ToGetNodeGroupScalingConfigArrayOutput() GetNodeGroupScalingConfigArrayOutput {
	return o
}

func (o GetNodeGroupScalingConfigArrayOutput) ToGetNodeGroupScalingConfigArrayOutputWithContext(ctx context.Context) GetNodeGroupScalingConfigArrayOutput {
	return o
}

func (o GetNodeGroupScalingConfigArrayOutput) Index(i pulumi.IntInput) GetNodeGroupScalingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodeGroupScalingConfig {
		return vs[0].([]GetNodeGroupScalingConfig)[vs[1].(int)]
	}).(GetNodeGroupScalingConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigPtrInput)(nil)).Elem(), ClusterEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigProviderInput)(nil)).Elem(), ClusterEncryptionConfigProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionConfigProviderPtrInput)(nil)).Elem(), ClusterEncryptionConfigProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubernetesNetworkConfigPtrInput)(nil)).Elem(), ClusterKubernetesNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVpcConfigInput)(nil)).Elem(), ClusterVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorInput)(nil)).Elem(), FargateProfileSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FargateProfileSelectorArrayInput)(nil)).Elem(), FargateProfileSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderConfigOidcInput)(nil)).Elem(), IdentityProviderConfigOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupLaunchTemplateInput)(nil)).Elem(), NodeGroupLaunchTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupLaunchTemplatePtrInput)(nil)).Elem(), NodeGroupLaunchTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupRemoteAccessInput)(nil)).Elem(), NodeGroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupRemoteAccessPtrInput)(nil)).Elem(), NodeGroupRemoteAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupScalingConfigInput)(nil)).Elem(), NodeGroupScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupTaintInput)(nil)).Elem(), NodeGroupTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupTaintArrayInput)(nil)).Elem(), NodeGroupTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupUpdateConfigInput)(nil)).Elem(), NodeGroupUpdateConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeGroupUpdateConfigPtrInput)(nil)).Elem(), NodeGroupUpdateConfigArgs{})
	pulumi.RegisterOutputType(ClusterCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigProviderOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionConfigProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterIdentityOutput{})
	pulumi.RegisterOutputType(ClusterIdentityArrayOutput{})
	pulumi.RegisterOutputType(ClusterIdentityOidcOutput{})
	pulumi.RegisterOutputType(ClusterIdentityOidcArrayOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigOutput{})
	pulumi.RegisterOutputType(ClusterKubernetesNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterVpcConfigOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorOutput{})
	pulumi.RegisterOutputType(FargateProfileSelectorArrayOutput{})
	pulumi.RegisterOutputType(IdentityProviderConfigOidcOutput{})
	pulumi.RegisterOutputType(NodeGroupLaunchTemplateOutput{})
	pulumi.RegisterOutputType(NodeGroupLaunchTemplatePtrOutput{})
	pulumi.RegisterOutputType(NodeGroupRemoteAccessOutput{})
	pulumi.RegisterOutputType(NodeGroupRemoteAccessPtrOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceArrayOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceAutoscalingGroupOutput{})
	pulumi.RegisterOutputType(NodeGroupResourceAutoscalingGroupArrayOutput{})
	pulumi.RegisterOutputType(NodeGroupScalingConfigOutput{})
	pulumi.RegisterOutputType(NodeGroupTaintOutput{})
	pulumi.RegisterOutputType(NodeGroupTaintArrayOutput{})
	pulumi.RegisterOutputType(NodeGroupUpdateConfigOutput{})
	pulumi.RegisterOutputType(NodeGroupUpdateConfigPtrOutput{})
	pulumi.RegisterOutputType(GetClusterCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityOidcOutput{})
	pulumi.RegisterOutputType(GetClusterIdentityOidcArrayOutput{})
	pulumi.RegisterOutputType(GetClusterKubernetesNetworkConfigOutput{})
	pulumi.RegisterOutputType(GetClusterKubernetesNetworkConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterVpcConfigOutput{})
	pulumi.RegisterOutputType(GetNodeGroupRemoteAccessOutput{})
	pulumi.RegisterOutputType(GetNodeGroupRemoteAccessArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceAutoscalingGroupOutput{})
	pulumi.RegisterOutputType(GetNodeGroupResourceAutoscalingGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNodeGroupScalingConfigOutput{})
	pulumi.RegisterOutputType(GetNodeGroupScalingConfigArrayOutput{})
}
