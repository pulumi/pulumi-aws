// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve the EKS Node Groups associated with a named EKS cluster. This will allow you to pass a list of Node Group names to other resources.
func GetNodeGroups(ctx *pulumi.Context, args *GetNodeGroupsArgs, opts ...pulumi.InvokeOption) (*GetNodeGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNodeGroupsResult
	err := ctx.Invoke("aws:eks/getNodeGroups:getNodeGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNodeGroups.
type GetNodeGroupsArgs struct {
	// Name of the cluster.
	ClusterName string `pulumi:"clusterName"`
}

// A collection of values returned by getNodeGroups.
type GetNodeGroupsResult struct {
	ClusterName string `pulumi:"clusterName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of all node group names in an EKS Cluster.
	Names []string `pulumi:"names"`
}

func GetNodeGroupsOutput(ctx *pulumi.Context, args GetNodeGroupsOutputArgs, opts ...pulumi.InvokeOption) GetNodeGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNodeGroupsResult, error) {
			args := v.(GetNodeGroupsArgs)
			r, err := GetNodeGroups(ctx, &args, opts...)
			var s GetNodeGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNodeGroupsResultOutput)
}

// A collection of arguments for invoking getNodeGroups.
type GetNodeGroupsOutputArgs struct {
	// Name of the cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
}

func (GetNodeGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getNodeGroups.
type GetNodeGroupsResultOutput struct{ *pulumi.OutputState }

func (GetNodeGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodeGroupsResult)(nil)).Elem()
}

func (o GetNodeGroupsResultOutput) ToGetNodeGroupsResultOutput() GetNodeGroupsResultOutput {
	return o
}

func (o GetNodeGroupsResultOutput) ToGetNodeGroupsResultOutputWithContext(ctx context.Context) GetNodeGroupsResultOutput {
	return o
}

func (o GetNodeGroupsResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupsResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNodeGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodeGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set of all node group names in an EKS Cluster.
func (o GetNodeGroupsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNodeGroupsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNodeGroupsResultOutput{})
}
