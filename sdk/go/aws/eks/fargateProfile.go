// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an EKS Fargate Profile.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/eks_fargate_profile.html.markdown.
type FargateProfile struct {
	s *pulumi.ResourceState
}

// NewFargateProfile registers a new resource with the given unique name, arguments, and options.
func NewFargateProfile(ctx *pulumi.Context,
	name string, args *FargateProfileArgs, opts ...pulumi.ResourceOpt) (*FargateProfile, error) {
	if args == nil || args.ClusterName == nil {
		return nil, errors.New("missing required argument 'ClusterName'")
	}
	if args == nil || args.PodExecutionRoleArn == nil {
		return nil, errors.New("missing required argument 'PodExecutionRoleArn'")
	}
	if args == nil || args.Selectors == nil {
		return nil, errors.New("missing required argument 'Selectors'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["clusterName"] = nil
		inputs["fargateProfileName"] = nil
		inputs["podExecutionRoleArn"] = nil
		inputs["selectors"] = nil
		inputs["subnetIds"] = nil
		inputs["tags"] = nil
	} else {
		inputs["clusterName"] = args.ClusterName
		inputs["fargateProfileName"] = args.FargateProfileName
		inputs["podExecutionRoleArn"] = args.PodExecutionRoleArn
		inputs["selectors"] = args.Selectors
		inputs["subnetIds"] = args.SubnetIds
		inputs["tags"] = args.Tags
	}
	inputs["arn"] = nil
	inputs["status"] = nil
	s, err := ctx.RegisterResource("aws:eks/fargateProfile:FargateProfile", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FargateProfile{s: s}, nil
}

// GetFargateProfile gets an existing FargateProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFargateProfile(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FargateProfileState, opts ...pulumi.ResourceOpt) (*FargateProfile, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["clusterName"] = state.ClusterName
		inputs["fargateProfileName"] = state.FargateProfileName
		inputs["podExecutionRoleArn"] = state.PodExecutionRoleArn
		inputs["selectors"] = state.Selectors
		inputs["status"] = state.Status
		inputs["subnetIds"] = state.SubnetIds
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("aws:eks/fargateProfile:FargateProfile", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FargateProfile{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *FargateProfile) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *FargateProfile) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Amazon Resource Name (ARN) of the EKS Fargate Profile.
func (r *FargateProfile) Arn() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["arn"])
}

// Name of the EKS Cluster.
func (r *FargateProfile) ClusterName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clusterName"])
}

// Name of the EKS Fargate Profile.
func (r *FargateProfile) FargateProfileName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["fargateProfileName"])
}

// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
func (r *FargateProfile) PodExecutionRoleArn() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["podExecutionRoleArn"])
}

// Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
func (r *FargateProfile) Selectors() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["selectors"])
}

// Status of the EKS Fargate Profile.
func (r *FargateProfile) Status() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["status"])
}

// Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
func (r *FargateProfile) SubnetIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["subnetIds"])
}

// Key-value mapping of resource tags.
func (r *FargateProfile) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering FargateProfile resources.
type FargateProfileState struct {
	// Amazon Resource Name (ARN) of the EKS Fargate Profile.
	Arn interface{}
	// Name of the EKS Cluster.
	ClusterName interface{}
	// Name of the EKS Fargate Profile.
	FargateProfileName interface{}
	// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
	PodExecutionRoleArn interface{}
	// Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
	Selectors interface{}
	// Status of the EKS Fargate Profile.
	Status interface{}
	// Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
	SubnetIds interface{}
	// Key-value mapping of resource tags.
	Tags interface{}
}

// The set of arguments for constructing a FargateProfile resource.
type FargateProfileArgs struct {
	// Name of the EKS Cluster.
	ClusterName interface{}
	// Name of the EKS Fargate Profile.
	FargateProfileName interface{}
	// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
	PodExecutionRoleArn interface{}
	// Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
	Selectors interface{}
	// Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
	SubnetIds interface{}
	// Key-value mapping of resource tags.
	Tags interface{}
}
