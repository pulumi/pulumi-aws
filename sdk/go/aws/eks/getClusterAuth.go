// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get an authentication token to communicate with an EKS cluster.
//
// Uses IAM credentials from the AWS provider to generate a temporary token that is compatible with
// [AWS IAM Authenticator](https://github.com/kubernetes-sigs/aws-iam-authenticator) authentication.
// This can be used to authenticate to an EKS cluster or to a cluster that has the AWS IAM Authenticator
// server configured.
func GetClusterAuth(ctx *pulumi.Context, args *GetClusterAuthArgs, opts ...pulumi.InvokeOption) (*GetClusterAuthResult, error) {
	var rv GetClusterAuthResult
	err := ctx.Invoke("aws:eks/getClusterAuth:getClusterAuth", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterAuth.
type GetClusterAuthArgs struct {
	// The name of the cluster
	Name string `pulumi:"name"`
}

// A collection of values returned by getClusterAuth.
type GetClusterAuthResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The token to use to authenticate with the cluster.
	Token string `pulumi:"token"`
}

func GetClusterAuthOutput(ctx *pulumi.Context, args GetClusterAuthOutputArgs, opts ...pulumi.InvokeOption) GetClusterAuthResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClusterAuthResult, error) {
			args := v.(GetClusterAuthArgs)
			r, err := GetClusterAuth(ctx, &args, opts...)
			return *r, err
		}).(GetClusterAuthResultOutput)
}

// A collection of arguments for invoking getClusterAuth.
type GetClusterAuthOutputArgs struct {
	// The name of the cluster
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetClusterAuthOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAuthArgs)(nil)).Elem()
}

// A collection of values returned by getClusterAuth.
type GetClusterAuthResultOutput struct{ *pulumi.OutputState }

func (GetClusterAuthResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAuthResult)(nil)).Elem()
}

func (o GetClusterAuthResultOutput) ToGetClusterAuthResultOutput() GetClusterAuthResultOutput {
	return o
}

func (o GetClusterAuthResultOutput) ToGetClusterAuthResultOutputWithContext(ctx context.Context) GetClusterAuthResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterAuthResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAuthResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterAuthResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAuthResult) string { return v.Name }).(pulumi.StringOutput)
}

// The token to use to authenticate with the cluster.
func (o GetClusterAuthResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAuthResult) string { return v.Token }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterAuthResultOutput{})
}
