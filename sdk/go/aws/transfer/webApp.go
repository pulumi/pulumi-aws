// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Transfer Family Web App.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/iam"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/ssoadmin"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/transfer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// current, err := aws.GetCallerIdentity(ctx, &aws.GetCallerIdentityArgs{
// }, nil);
// if err != nil {
// return err
// }
// currentGetRegion, err := aws.GetRegion(ctx, &aws.GetRegionArgs{
// }, nil);
// if err != nil {
// return err
// }
// currentGetPartition, err := aws.GetPartition(ctx, &aws.GetPartitionArgs{
// }, nil);
// if err != nil {
// return err
// }
// example, err := ssoadmin.GetInstances(ctx, &ssoadmin.GetInstancesArgs{
// }, nil);
// if err != nil {
// return err
// }
// assumeRoleTransfer, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
// Statements: []iam.GetPolicyDocumentStatement{
// {
// Effect: pulumi.StringRef("Allow"),
// Actions: []string{
// "sts:AssumeRole",
// "sts:SetContext",
// },
// Principals: []iam.GetPolicyDocumentStatementPrincipal{
// {
// Type: "Service",
// Identifiers: []string{
// "transfer.amazonaws.com",
// },
// },
// },
// Conditions: []iam.GetPolicyDocumentStatementCondition{
// {
// Test: "StringEquals",
// Values: interface{}{
// current.AccountId,
// },
// Variable: "aws:SourceAccount",
// },
// },
// },
// },
// }, nil);
// if err != nil {
// return err
// }
// exampleRole, err := iam.NewRole(ctx, "example", &iam.RoleArgs{
// Name: pulumi.String("example"),
// AssumeRolePolicy: pulumi.String(assumeRoleTransfer.Json),
// })
// if err != nil {
// return err
// }
// exampleGetPolicyDocument, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
// Statements: []iam.GetPolicyDocumentStatement{
// {
// Effect: pulumi.StringRef("Allow"),
// Actions: []string{
// "s3:GetDataAccess",
// "s3:ListCallerAccessGrants",
// },
// Resources: []string{
// fmt.Sprintf("arn:%v:s3:%v:%v:access-grants/*", currentGetPartition.Partition, currentGetRegion.Name, current.AccountId),
// },
// Conditions: []iam.GetPolicyDocumentStatementCondition{
// {
// Test: "StringEquals",
// Values: interface{}{
// current.AccountId,
// },
// Variable: "s3:ResourceAccount",
// },
// },
// },
// {
// Effect: pulumi.StringRef("Allow"),
// Actions: []string{
// "s3:ListAccessGrantsInstances",
// },
// Resources: []string{
// "*",
// },
// Conditions: []iam.GetPolicyDocumentStatementCondition{
// {
// Test: "StringEquals",
// Values: interface{}{
// current.AccountId,
// },
// Variable: "s3:ResourceAccount",
// },
// },
// },
// },
// }, nil);
// if err != nil {
// return err
// }
// _, err = iam.NewRolePolicy(ctx, "example", &iam.RolePolicyArgs{
// Policy: pulumi.String(exampleGetPolicyDocument.Json),
// Role: exampleRole.Name,
// })
// if err != nil {
// return err
// }
// _, err = transfer.NewWebApp(ctx, "example", &transfer.WebAppArgs{
// IdentityProviderDetails: &transfer.WebAppIdentityProviderDetailsArgs{
// IdentityCenterConfig: &transfer.WebAppIdentityProviderDetailsIdentityCenterConfigArgs{
// InstanceArn: pulumi.String(example.Arns[0]),
// Role: exampleRole.Arn,
// },
// },
// WebAppUnits: transfer.WebAppWebAppUnitArray{
// &transfer.WebAppWebAppUnitArgs{
// Provisioned: pulumi.Int(1),
// },
// },
// Tags: pulumi.StringMap{
// "Name": pulumi.String("test"),
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Using `pulumi import`, import Transfer Family Web App using the `web_app_id`. For example:
//
// ```sh
// $ pulumi import aws:transfer/webApp:WebApp example web_app-id-12345678
// ```
type WebApp struct {
	pulumi.CustomResourceState

	// URL provided to interact with the Transfer Family web app.
	AccessEndpoint pulumi.StringOutput `pulumi:"accessEndpoint"`
	// ARN of the Web App.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Block for details of the identity provider to use with the web app. See Identity provider details below.
	//
	// The following arguments are optional:
	IdentityProviderDetails WebAppIdentityProviderDetailsPtrOutput `pulumi:"identityProviderDetails"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Key-value pairs that can be used to group and search for web apps.
	Tags    pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Type of endpoint policy for the web app. Valid values are: `STANDARD`(default) or `FIPS`.
	WebAppEndpointPolicy pulumi.StringOutput `pulumi:"webAppEndpointPolicy"`
	// ID of the Wep App resource.
	WebAppId pulumi.StringOutput `pulumi:"webAppId"`
	// Block for number of concurrent connections or the user sessions on the web app.
	// * provisioned - (Optional) Number of units of concurrent connections.
	WebAppUnits WebAppWebAppUnitArrayOutput `pulumi:"webAppUnits"`
}

// NewWebApp registers a new resource with the given unique name, arguments, and options.
func NewWebApp(ctx *pulumi.Context,
	name string, args *WebAppArgs, opts ...pulumi.ResourceOption) (*WebApp, error) {
	if args == nil {
		args = &WebAppArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebApp
	err := ctx.RegisterResource("aws:transfer/webApp:WebApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebApp gets an existing WebApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppState, opts ...pulumi.ResourceOption) (*WebApp, error) {
	var resource WebApp
	err := ctx.ReadResource("aws:transfer/webApp:WebApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebApp resources.
type webAppState struct {
	// URL provided to interact with the Transfer Family web app.
	AccessEndpoint *string `pulumi:"accessEndpoint"`
	// ARN of the Web App.
	Arn *string `pulumi:"arn"`
	// Block for details of the identity provider to use with the web app. See Identity provider details below.
	//
	// The following arguments are optional:
	IdentityProviderDetails *WebAppIdentityProviderDetails `pulumi:"identityProviderDetails"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Key-value pairs that can be used to group and search for web apps.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Type of endpoint policy for the web app. Valid values are: `STANDARD`(default) or `FIPS`.
	WebAppEndpointPolicy *string `pulumi:"webAppEndpointPolicy"`
	// ID of the Wep App resource.
	WebAppId *string `pulumi:"webAppId"`
	// Block for number of concurrent connections or the user sessions on the web app.
	// * provisioned - (Optional) Number of units of concurrent connections.
	WebAppUnits []WebAppWebAppUnit `pulumi:"webAppUnits"`
}

type WebAppState struct {
	// URL provided to interact with the Transfer Family web app.
	AccessEndpoint pulumi.StringPtrInput
	// ARN of the Web App.
	Arn pulumi.StringPtrInput
	// Block for details of the identity provider to use with the web app. See Identity provider details below.
	//
	// The following arguments are optional:
	IdentityProviderDetails WebAppIdentityProviderDetailsPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Key-value pairs that can be used to group and search for web apps.
	Tags    pulumi.StringMapInput
	TagsAll pulumi.StringMapInput
	// Type of endpoint policy for the web app. Valid values are: `STANDARD`(default) or `FIPS`.
	WebAppEndpointPolicy pulumi.StringPtrInput
	// ID of the Wep App resource.
	WebAppId pulumi.StringPtrInput
	// Block for number of concurrent connections or the user sessions on the web app.
	// * provisioned - (Optional) Number of units of concurrent connections.
	WebAppUnits WebAppWebAppUnitArrayInput
}

func (WebAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppState)(nil)).Elem()
}

type webAppArgs struct {
	// URL provided to interact with the Transfer Family web app.
	AccessEndpoint *string `pulumi:"accessEndpoint"`
	// Block for details of the identity provider to use with the web app. See Identity provider details below.
	//
	// The following arguments are optional:
	IdentityProviderDetails *WebAppIdentityProviderDetails `pulumi:"identityProviderDetails"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Key-value pairs that can be used to group and search for web apps.
	Tags map[string]string `pulumi:"tags"`
	// Type of endpoint policy for the web app. Valid values are: `STANDARD`(default) or `FIPS`.
	WebAppEndpointPolicy *string `pulumi:"webAppEndpointPolicy"`
	// Block for number of concurrent connections or the user sessions on the web app.
	// * provisioned - (Optional) Number of units of concurrent connections.
	WebAppUnits []WebAppWebAppUnit `pulumi:"webAppUnits"`
}

// The set of arguments for constructing a WebApp resource.
type WebAppArgs struct {
	// URL provided to interact with the Transfer Family web app.
	AccessEndpoint pulumi.StringPtrInput
	// Block for details of the identity provider to use with the web app. See Identity provider details below.
	//
	// The following arguments are optional:
	IdentityProviderDetails WebAppIdentityProviderDetailsPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Key-value pairs that can be used to group and search for web apps.
	Tags pulumi.StringMapInput
	// Type of endpoint policy for the web app. Valid values are: `STANDARD`(default) or `FIPS`.
	WebAppEndpointPolicy pulumi.StringPtrInput
	// Block for number of concurrent connections or the user sessions on the web app.
	// * provisioned - (Optional) Number of units of concurrent connections.
	WebAppUnits WebAppWebAppUnitArrayInput
}

func (WebAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppArgs)(nil)).Elem()
}

type WebAppInput interface {
	pulumi.Input

	ToWebAppOutput() WebAppOutput
	ToWebAppOutputWithContext(ctx context.Context) WebAppOutput
}

func (*WebApp) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApp)(nil)).Elem()
}

func (i *WebApp) ToWebAppOutput() WebAppOutput {
	return i.ToWebAppOutputWithContext(context.Background())
}

func (i *WebApp) ToWebAppOutputWithContext(ctx context.Context) WebAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppOutput)
}

// WebAppArrayInput is an input type that accepts WebAppArray and WebAppArrayOutput values.
// You can construct a concrete instance of `WebAppArrayInput` via:
//
//	WebAppArray{ WebAppArgs{...} }
type WebAppArrayInput interface {
	pulumi.Input

	ToWebAppArrayOutput() WebAppArrayOutput
	ToWebAppArrayOutputWithContext(context.Context) WebAppArrayOutput
}

type WebAppArray []WebAppInput

func (WebAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebApp)(nil)).Elem()
}

func (i WebAppArray) ToWebAppArrayOutput() WebAppArrayOutput {
	return i.ToWebAppArrayOutputWithContext(context.Background())
}

func (i WebAppArray) ToWebAppArrayOutputWithContext(ctx context.Context) WebAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppArrayOutput)
}

// WebAppMapInput is an input type that accepts WebAppMap and WebAppMapOutput values.
// You can construct a concrete instance of `WebAppMapInput` via:
//
//	WebAppMap{ "key": WebAppArgs{...} }
type WebAppMapInput interface {
	pulumi.Input

	ToWebAppMapOutput() WebAppMapOutput
	ToWebAppMapOutputWithContext(context.Context) WebAppMapOutput
}

type WebAppMap map[string]WebAppInput

func (WebAppMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebApp)(nil)).Elem()
}

func (i WebAppMap) ToWebAppMapOutput() WebAppMapOutput {
	return i.ToWebAppMapOutputWithContext(context.Background())
}

func (i WebAppMap) ToWebAppMapOutputWithContext(ctx context.Context) WebAppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppMapOutput)
}

type WebAppOutput struct{ *pulumi.OutputState }

func (WebAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApp)(nil)).Elem()
}

func (o WebAppOutput) ToWebAppOutput() WebAppOutput {
	return o
}

func (o WebAppOutput) ToWebAppOutputWithContext(ctx context.Context) WebAppOutput {
	return o
}

// URL provided to interact with the Transfer Family web app.
func (o WebAppOutput) AccessEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApp) pulumi.StringOutput { return v.AccessEndpoint }).(pulumi.StringOutput)
}

// ARN of the Web App.
func (o WebAppOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApp) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Block for details of the identity provider to use with the web app. See Identity provider details below.
//
// The following arguments are optional:
func (o WebAppOutput) IdentityProviderDetails() WebAppIdentityProviderDetailsPtrOutput {
	return o.ApplyT(func(v *WebApp) WebAppIdentityProviderDetailsPtrOutput { return v.IdentityProviderDetails }).(WebAppIdentityProviderDetailsPtrOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o WebAppOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApp) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Key-value pairs that can be used to group and search for web apps.
func (o WebAppOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebApp) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o WebAppOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WebApp) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Type of endpoint policy for the web app. Valid values are: `STANDARD`(default) or `FIPS`.
func (o WebAppOutput) WebAppEndpointPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApp) pulumi.StringOutput { return v.WebAppEndpointPolicy }).(pulumi.StringOutput)
}

// ID of the Wep App resource.
func (o WebAppOutput) WebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApp) pulumi.StringOutput { return v.WebAppId }).(pulumi.StringOutput)
}

// Block for number of concurrent connections or the user sessions on the web app.
// * provisioned - (Optional) Number of units of concurrent connections.
func (o WebAppOutput) WebAppUnits() WebAppWebAppUnitArrayOutput {
	return o.ApplyT(func(v *WebApp) WebAppWebAppUnitArrayOutput { return v.WebAppUnits }).(WebAppWebAppUnitArrayOutput)
}

type WebAppArrayOutput struct{ *pulumi.OutputState }

func (WebAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebApp)(nil)).Elem()
}

func (o WebAppArrayOutput) ToWebAppArrayOutput() WebAppArrayOutput {
	return o
}

func (o WebAppArrayOutput) ToWebAppArrayOutputWithContext(ctx context.Context) WebAppArrayOutput {
	return o
}

func (o WebAppArrayOutput) Index(i pulumi.IntInput) WebAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebApp {
		return vs[0].([]*WebApp)[vs[1].(int)]
	}).(WebAppOutput)
}

type WebAppMapOutput struct{ *pulumi.OutputState }

func (WebAppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebApp)(nil)).Elem()
}

func (o WebAppMapOutput) ToWebAppMapOutput() WebAppMapOutput {
	return o
}

func (o WebAppMapOutput) ToWebAppMapOutputWithContext(ctx context.Context) WebAppMapOutput {
	return o
}

func (o WebAppMapOutput) MapIndex(k pulumi.StringInput) WebAppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebApp {
		return vs[0].(map[string]*WebApp)[vs[1].(string)]
	}).(WebAppOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppInput)(nil)).Elem(), &WebApp{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppArrayInput)(nil)).Elem(), WebAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppMapInput)(nil)).Elem(), WebAppMap{})
	pulumi.RegisterOutputType(WebAppOutput{})
	pulumi.RegisterOutputType(WebAppArrayOutput{})
	pulumi.RegisterOutputType(WebAppMapOutput{})
}
