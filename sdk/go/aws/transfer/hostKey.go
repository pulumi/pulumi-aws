// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a host key for a server. This is an [_additional server host key_](https://docs.aws.amazon.com/transfer/latest/userguide/server-host-key-add.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/transfer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := transfer.NewHostKey(ctx, "example", &transfer.HostKeyArgs{
//				ServerId:      pulumi.Any(exampleAwsTransferServer.Id),
//				Description:   pulumi.String("example additional host key"),
//				HostKeyBodyWo: pulumi.String("# Private key PEM.\n"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import host keys using the `server_id` and `host_key_id` separated by `,`. For example:
//
// ```sh
// $ pulumi import aws:transfer/hostKey:HostKey example s-12345678,key-12345
// ```
type HostKey struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of host key.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Text description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Private key portion of an SSH key pair.
	HostKeyBody pulumi.StringPtrOutput `pulumi:"hostKeyBody"`
	// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
	// Write-only private key portion of an SSH key pair, guaranteed not to be written to plan or state artifacts. One of `hostKeyBody` or `hostKeyBodyWo` must be configured.
	HostKeyBodyWo pulumi.StringPtrOutput `pulumi:"hostKeyBodyWo"`
	// Public key fingerprint.
	HostKeyFingerprint pulumi.StringOutput `pulumi:"hostKeyFingerprint"`
	// ID of the host key.
	HostKeyId pulumi.StringOutput `pulumi:"hostKeyId"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Server ID.
	ServerId pulumi.StringOutput `pulumi:"serverId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewHostKey registers a new resource with the given unique name, arguments, and options.
func NewHostKey(ctx *pulumi.Context,
	name string, args *HostKeyArgs, opts ...pulumi.ResourceOption) (*HostKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServerId == nil {
		return nil, errors.New("invalid value for required argument 'ServerId'")
	}
	if args.HostKeyBody != nil {
		args.HostKeyBody = pulumi.ToSecret(args.HostKeyBody).(pulumi.StringPtrInput)
	}
	if args.HostKeyBodyWo != nil {
		args.HostKeyBodyWo = pulumi.ToSecret(args.HostKeyBodyWo).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"hostKeyBody",
		"hostKeyBodyWo",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostKey
	err := ctx.RegisterResource("aws:transfer/hostKey:HostKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostKey gets an existing HostKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostKeyState, opts ...pulumi.ResourceOption) (*HostKey, error) {
	var resource HostKey
	err := ctx.ReadResource("aws:transfer/hostKey:HostKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostKey resources.
type hostKeyState struct {
	// Amazon Resource Name (ARN) of host key.
	Arn *string `pulumi:"arn"`
	// Text description.
	Description *string `pulumi:"description"`
	// Private key portion of an SSH key pair.
	HostKeyBody *string `pulumi:"hostKeyBody"`
	// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
	// Write-only private key portion of an SSH key pair, guaranteed not to be written to plan or state artifacts. One of `hostKeyBody` or `hostKeyBodyWo` must be configured.
	HostKeyBodyWo *string `pulumi:"hostKeyBodyWo"`
	// Public key fingerprint.
	HostKeyFingerprint *string `pulumi:"hostKeyFingerprint"`
	// ID of the host key.
	HostKeyId *string `pulumi:"hostKeyId"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Server ID.
	ServerId *string `pulumi:"serverId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type HostKeyState struct {
	// Amazon Resource Name (ARN) of host key.
	Arn pulumi.StringPtrInput
	// Text description.
	Description pulumi.StringPtrInput
	// Private key portion of an SSH key pair.
	HostKeyBody pulumi.StringPtrInput
	// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
	// Write-only private key portion of an SSH key pair, guaranteed not to be written to plan or state artifacts. One of `hostKeyBody` or `hostKeyBodyWo` must be configured.
	HostKeyBodyWo pulumi.StringPtrInput
	// Public key fingerprint.
	HostKeyFingerprint pulumi.StringPtrInput
	// ID of the host key.
	HostKeyId pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Server ID.
	ServerId pulumi.StringPtrInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
}

func (HostKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostKeyState)(nil)).Elem()
}

type hostKeyArgs struct {
	// Text description.
	Description *string `pulumi:"description"`
	// Private key portion of an SSH key pair.
	HostKeyBody *string `pulumi:"hostKeyBody"`
	// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
	// Write-only private key portion of an SSH key pair, guaranteed not to be written to plan or state artifacts. One of `hostKeyBody` or `hostKeyBodyWo` must be configured.
	HostKeyBodyWo *string `pulumi:"hostKeyBodyWo"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Server ID.
	ServerId string `pulumi:"serverId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a HostKey resource.
type HostKeyArgs struct {
	// Text description.
	Description pulumi.StringPtrInput
	// Private key portion of an SSH key pair.
	HostKeyBody pulumi.StringPtrInput
	// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
	// Write-only private key portion of an SSH key pair, guaranteed not to be written to plan or state artifacts. One of `hostKeyBody` or `hostKeyBodyWo` must be configured.
	HostKeyBodyWo pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Server ID.
	ServerId pulumi.StringInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (HostKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostKeyArgs)(nil)).Elem()
}

type HostKeyInput interface {
	pulumi.Input

	ToHostKeyOutput() HostKeyOutput
	ToHostKeyOutputWithContext(ctx context.Context) HostKeyOutput
}

func (*HostKey) ElementType() reflect.Type {
	return reflect.TypeOf((**HostKey)(nil)).Elem()
}

func (i *HostKey) ToHostKeyOutput() HostKeyOutput {
	return i.ToHostKeyOutputWithContext(context.Background())
}

func (i *HostKey) ToHostKeyOutputWithContext(ctx context.Context) HostKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostKeyOutput)
}

// HostKeyArrayInput is an input type that accepts HostKeyArray and HostKeyArrayOutput values.
// You can construct a concrete instance of `HostKeyArrayInput` via:
//
//	HostKeyArray{ HostKeyArgs{...} }
type HostKeyArrayInput interface {
	pulumi.Input

	ToHostKeyArrayOutput() HostKeyArrayOutput
	ToHostKeyArrayOutputWithContext(context.Context) HostKeyArrayOutput
}

type HostKeyArray []HostKeyInput

func (HostKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostKey)(nil)).Elem()
}

func (i HostKeyArray) ToHostKeyArrayOutput() HostKeyArrayOutput {
	return i.ToHostKeyArrayOutputWithContext(context.Background())
}

func (i HostKeyArray) ToHostKeyArrayOutputWithContext(ctx context.Context) HostKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostKeyArrayOutput)
}

// HostKeyMapInput is an input type that accepts HostKeyMap and HostKeyMapOutput values.
// You can construct a concrete instance of `HostKeyMapInput` via:
//
//	HostKeyMap{ "key": HostKeyArgs{...} }
type HostKeyMapInput interface {
	pulumi.Input

	ToHostKeyMapOutput() HostKeyMapOutput
	ToHostKeyMapOutputWithContext(context.Context) HostKeyMapOutput
}

type HostKeyMap map[string]HostKeyInput

func (HostKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostKey)(nil)).Elem()
}

func (i HostKeyMap) ToHostKeyMapOutput() HostKeyMapOutput {
	return i.ToHostKeyMapOutputWithContext(context.Background())
}

func (i HostKeyMap) ToHostKeyMapOutputWithContext(ctx context.Context) HostKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostKeyMapOutput)
}

type HostKeyOutput struct{ *pulumi.OutputState }

func (HostKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostKey)(nil)).Elem()
}

func (o HostKeyOutput) ToHostKeyOutput() HostKeyOutput {
	return o
}

func (o HostKeyOutput) ToHostKeyOutputWithContext(ctx context.Context) HostKeyOutput {
	return o
}

// Amazon Resource Name (ARN) of host key.
func (o HostKeyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Text description.
func (o HostKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Private key portion of an SSH key pair.
func (o HostKeyOutput) HostKeyBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringPtrOutput { return v.HostKeyBody }).(pulumi.StringPtrOutput)
}

// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
// Write-only private key portion of an SSH key pair, guaranteed not to be written to plan or state artifacts. One of `hostKeyBody` or `hostKeyBodyWo` must be configured.
func (o HostKeyOutput) HostKeyBodyWo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringPtrOutput { return v.HostKeyBodyWo }).(pulumi.StringPtrOutput)
}

// Public key fingerprint.
func (o HostKeyOutput) HostKeyFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringOutput { return v.HostKeyFingerprint }).(pulumi.StringOutput)
}

// ID of the host key.
func (o HostKeyOutput) HostKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringOutput { return v.HostKeyId }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o HostKeyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Server ID.
func (o HostKeyOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringOutput { return v.ServerId }).(pulumi.StringOutput)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o HostKeyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o HostKeyOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HostKey) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type HostKeyArrayOutput struct{ *pulumi.OutputState }

func (HostKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostKey)(nil)).Elem()
}

func (o HostKeyArrayOutput) ToHostKeyArrayOutput() HostKeyArrayOutput {
	return o
}

func (o HostKeyArrayOutput) ToHostKeyArrayOutputWithContext(ctx context.Context) HostKeyArrayOutput {
	return o
}

func (o HostKeyArrayOutput) Index(i pulumi.IntInput) HostKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostKey {
		return vs[0].([]*HostKey)[vs[1].(int)]
	}).(HostKeyOutput)
}

type HostKeyMapOutput struct{ *pulumi.OutputState }

func (HostKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostKey)(nil)).Elem()
}

func (o HostKeyMapOutput) ToHostKeyMapOutput() HostKeyMapOutput {
	return o
}

func (o HostKeyMapOutput) ToHostKeyMapOutputWithContext(ctx context.Context) HostKeyMapOutput {
	return o
}

func (o HostKeyMapOutput) MapIndex(k pulumi.StringInput) HostKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostKey {
		return vs[0].(map[string]*HostKey)[vs[1].(string)]
	}).(HostKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostKeyInput)(nil)).Elem(), &HostKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostKeyArrayInput)(nil)).Elem(), HostKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostKeyMapInput)(nil)).Elem(), HostKeyMap{})
	pulumi.RegisterOutputType(HostKeyOutput{})
	pulumi.RegisterOutputType(HostKeyArrayOutput{})
	pulumi.RegisterOutputType(HostKeyMapOutput{})
}
