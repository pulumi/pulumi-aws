// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Server struct {
	pulumi.CustomResourceState

	Arn                           pulumi.StringOutput            `pulumi:"arn"`
	Certificate                   pulumi.StringPtrOutput         `pulumi:"certificate"`
	DirectoryId                   pulumi.StringPtrOutput         `pulumi:"directoryId"`
	Domain                        pulumi.StringPtrOutput         `pulumi:"domain"`
	Endpoint                      pulumi.StringOutput            `pulumi:"endpoint"`
	EndpointDetails               ServerEndpointDetailsPtrOutput `pulumi:"endpointDetails"`
	EndpointType                  pulumi.StringPtrOutput         `pulumi:"endpointType"`
	ForceDestroy                  pulumi.BoolPtrOutput           `pulumi:"forceDestroy"`
	Function                      pulumi.StringPtrOutput         `pulumi:"function"`
	HostKey                       pulumi.StringPtrOutput         `pulumi:"hostKey"`
	HostKeyFingerprint            pulumi.StringOutput            `pulumi:"hostKeyFingerprint"`
	IdentityProviderType          pulumi.StringPtrOutput         `pulumi:"identityProviderType"`
	InvocationRole                pulumi.StringPtrOutput         `pulumi:"invocationRole"`
	LoggingRole                   pulumi.StringPtrOutput         `pulumi:"loggingRole"`
	PostAuthenticationLoginBanner pulumi.StringPtrOutput         `pulumi:"postAuthenticationLoginBanner"`
	PreAuthenticationLoginBanner  pulumi.StringPtrOutput         `pulumi:"preAuthenticationLoginBanner"`
	Protocols                     pulumi.StringArrayOutput       `pulumi:"protocols"`
	SecurityPolicyName            pulumi.StringPtrOutput         `pulumi:"securityPolicyName"`
	Tags                          pulumi.StringMapOutput         `pulumi:"tags"`
	TagsAll                       pulumi.StringMapOutput         `pulumi:"tagsAll"`
	Url                           pulumi.StringPtrOutput         `pulumi:"url"`
	WorkflowDetails               ServerWorkflowDetailsPtrOutput `pulumi:"workflowDetails"`
}

// NewServer registers a new resource with the given unique name, arguments, and options.
func NewServer(ctx *pulumi.Context,
	name string, args *ServerArgs, opts ...pulumi.ResourceOption) (*Server, error) {
	if args == nil {
		args = &ServerArgs{}
	}

	if args.HostKey != nil {
		args.HostKey = pulumi.ToSecret(args.HostKey).(pulumi.StringPtrInput)
	}
	if args.PostAuthenticationLoginBanner != nil {
		args.PostAuthenticationLoginBanner = pulumi.ToSecret(args.PostAuthenticationLoginBanner).(pulumi.StringPtrInput)
	}
	if args.PreAuthenticationLoginBanner != nil {
		args.PreAuthenticationLoginBanner = pulumi.ToSecret(args.PreAuthenticationLoginBanner).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"hostKey",
		"postAuthenticationLoginBanner",
		"preAuthenticationLoginBanner",
	})
	opts = append(opts, secrets)
	var resource Server
	err := ctx.RegisterResource("aws:transfer/server:Server", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServer gets an existing Server resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerState, opts ...pulumi.ResourceOption) (*Server, error) {
	var resource Server
	err := ctx.ReadResource("aws:transfer/server:Server", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Server resources.
type serverState struct {
	Arn                           *string                `pulumi:"arn"`
	Certificate                   *string                `pulumi:"certificate"`
	DirectoryId                   *string                `pulumi:"directoryId"`
	Domain                        *string                `pulumi:"domain"`
	Endpoint                      *string                `pulumi:"endpoint"`
	EndpointDetails               *ServerEndpointDetails `pulumi:"endpointDetails"`
	EndpointType                  *string                `pulumi:"endpointType"`
	ForceDestroy                  *bool                  `pulumi:"forceDestroy"`
	Function                      *string                `pulumi:"function"`
	HostKey                       *string                `pulumi:"hostKey"`
	HostKeyFingerprint            *string                `pulumi:"hostKeyFingerprint"`
	IdentityProviderType          *string                `pulumi:"identityProviderType"`
	InvocationRole                *string                `pulumi:"invocationRole"`
	LoggingRole                   *string                `pulumi:"loggingRole"`
	PostAuthenticationLoginBanner *string                `pulumi:"postAuthenticationLoginBanner"`
	PreAuthenticationLoginBanner  *string                `pulumi:"preAuthenticationLoginBanner"`
	Protocols                     []string               `pulumi:"protocols"`
	SecurityPolicyName            *string                `pulumi:"securityPolicyName"`
	Tags                          map[string]string      `pulumi:"tags"`
	TagsAll                       map[string]string      `pulumi:"tagsAll"`
	Url                           *string                `pulumi:"url"`
	WorkflowDetails               *ServerWorkflowDetails `pulumi:"workflowDetails"`
}

type ServerState struct {
	Arn                           pulumi.StringPtrInput
	Certificate                   pulumi.StringPtrInput
	DirectoryId                   pulumi.StringPtrInput
	Domain                        pulumi.StringPtrInput
	Endpoint                      pulumi.StringPtrInput
	EndpointDetails               ServerEndpointDetailsPtrInput
	EndpointType                  pulumi.StringPtrInput
	ForceDestroy                  pulumi.BoolPtrInput
	Function                      pulumi.StringPtrInput
	HostKey                       pulumi.StringPtrInput
	HostKeyFingerprint            pulumi.StringPtrInput
	IdentityProviderType          pulumi.StringPtrInput
	InvocationRole                pulumi.StringPtrInput
	LoggingRole                   pulumi.StringPtrInput
	PostAuthenticationLoginBanner pulumi.StringPtrInput
	PreAuthenticationLoginBanner  pulumi.StringPtrInput
	Protocols                     pulumi.StringArrayInput
	SecurityPolicyName            pulumi.StringPtrInput
	Tags                          pulumi.StringMapInput
	TagsAll                       pulumi.StringMapInput
	Url                           pulumi.StringPtrInput
	WorkflowDetails               ServerWorkflowDetailsPtrInput
}

func (ServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverState)(nil)).Elem()
}

type serverArgs struct {
	Certificate                   *string                `pulumi:"certificate"`
	DirectoryId                   *string                `pulumi:"directoryId"`
	Domain                        *string                `pulumi:"domain"`
	EndpointDetails               *ServerEndpointDetails `pulumi:"endpointDetails"`
	EndpointType                  *string                `pulumi:"endpointType"`
	ForceDestroy                  *bool                  `pulumi:"forceDestroy"`
	Function                      *string                `pulumi:"function"`
	HostKey                       *string                `pulumi:"hostKey"`
	IdentityProviderType          *string                `pulumi:"identityProviderType"`
	InvocationRole                *string                `pulumi:"invocationRole"`
	LoggingRole                   *string                `pulumi:"loggingRole"`
	PostAuthenticationLoginBanner *string                `pulumi:"postAuthenticationLoginBanner"`
	PreAuthenticationLoginBanner  *string                `pulumi:"preAuthenticationLoginBanner"`
	Protocols                     []string               `pulumi:"protocols"`
	SecurityPolicyName            *string                `pulumi:"securityPolicyName"`
	Tags                          map[string]string      `pulumi:"tags"`
	Url                           *string                `pulumi:"url"`
	WorkflowDetails               *ServerWorkflowDetails `pulumi:"workflowDetails"`
}

// The set of arguments for constructing a Server resource.
type ServerArgs struct {
	Certificate                   pulumi.StringPtrInput
	DirectoryId                   pulumi.StringPtrInput
	Domain                        pulumi.StringPtrInput
	EndpointDetails               ServerEndpointDetailsPtrInput
	EndpointType                  pulumi.StringPtrInput
	ForceDestroy                  pulumi.BoolPtrInput
	Function                      pulumi.StringPtrInput
	HostKey                       pulumi.StringPtrInput
	IdentityProviderType          pulumi.StringPtrInput
	InvocationRole                pulumi.StringPtrInput
	LoggingRole                   pulumi.StringPtrInput
	PostAuthenticationLoginBanner pulumi.StringPtrInput
	PreAuthenticationLoginBanner  pulumi.StringPtrInput
	Protocols                     pulumi.StringArrayInput
	SecurityPolicyName            pulumi.StringPtrInput
	Tags                          pulumi.StringMapInput
	Url                           pulumi.StringPtrInput
	WorkflowDetails               ServerWorkflowDetailsPtrInput
}

func (ServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverArgs)(nil)).Elem()
}

type ServerInput interface {
	pulumi.Input

	ToServerOutput() ServerOutput
	ToServerOutputWithContext(ctx context.Context) ServerOutput
}

func (*Server) ElementType() reflect.Type {
	return reflect.TypeOf((**Server)(nil)).Elem()
}

func (i *Server) ToServerOutput() ServerOutput {
	return i.ToServerOutputWithContext(context.Background())
}

func (i *Server) ToServerOutputWithContext(ctx context.Context) ServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerOutput)
}

// ServerArrayInput is an input type that accepts ServerArray and ServerArrayOutput values.
// You can construct a concrete instance of `ServerArrayInput` via:
//
//	ServerArray{ ServerArgs{...} }
type ServerArrayInput interface {
	pulumi.Input

	ToServerArrayOutput() ServerArrayOutput
	ToServerArrayOutputWithContext(context.Context) ServerArrayOutput
}

type ServerArray []ServerInput

func (ServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Server)(nil)).Elem()
}

func (i ServerArray) ToServerArrayOutput() ServerArrayOutput {
	return i.ToServerArrayOutputWithContext(context.Background())
}

func (i ServerArray) ToServerArrayOutputWithContext(ctx context.Context) ServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerArrayOutput)
}

// ServerMapInput is an input type that accepts ServerMap and ServerMapOutput values.
// You can construct a concrete instance of `ServerMapInput` via:
//
//	ServerMap{ "key": ServerArgs{...} }
type ServerMapInput interface {
	pulumi.Input

	ToServerMapOutput() ServerMapOutput
	ToServerMapOutputWithContext(context.Context) ServerMapOutput
}

type ServerMap map[string]ServerInput

func (ServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Server)(nil)).Elem()
}

func (i ServerMap) ToServerMapOutput() ServerMapOutput {
	return i.ToServerMapOutputWithContext(context.Background())
}

func (i ServerMap) ToServerMapOutputWithContext(ctx context.Context) ServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerMapOutput)
}

type ServerOutput struct{ *pulumi.OutputState }

func (ServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Server)(nil)).Elem()
}

func (o ServerOutput) ToServerOutput() ServerOutput {
	return o
}

func (o ServerOutput) ToServerOutputWithContext(ctx context.Context) ServerOutput {
	return o
}

func (o ServerOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ServerOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.DirectoryId }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o ServerOutput) EndpointDetails() ServerEndpointDetailsPtrOutput {
	return o.ApplyT(func(v *Server) ServerEndpointDetailsPtrOutput { return v.EndpointDetails }).(ServerEndpointDetailsPtrOutput)
}

func (o ServerOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.EndpointType }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

func (o ServerOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.Function }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.HostKey }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) HostKeyFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *Server) pulumi.StringOutput { return v.HostKeyFingerprint }).(pulumi.StringOutput)
}

func (o ServerOutput) IdentityProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.IdentityProviderType }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) InvocationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.InvocationRole }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) LoggingRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.LoggingRole }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) PostAuthenticationLoginBanner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.PostAuthenticationLoginBanner }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) PreAuthenticationLoginBanner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.PreAuthenticationLoginBanner }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Server) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

func (o ServerOutput) SecurityPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.SecurityPolicyName }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Server) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ServerOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Server) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ServerOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Server) pulumi.StringPtrOutput { return v.Url }).(pulumi.StringPtrOutput)
}

func (o ServerOutput) WorkflowDetails() ServerWorkflowDetailsPtrOutput {
	return o.ApplyT(func(v *Server) ServerWorkflowDetailsPtrOutput { return v.WorkflowDetails }).(ServerWorkflowDetailsPtrOutput)
}

type ServerArrayOutput struct{ *pulumi.OutputState }

func (ServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Server)(nil)).Elem()
}

func (o ServerArrayOutput) ToServerArrayOutput() ServerArrayOutput {
	return o
}

func (o ServerArrayOutput) ToServerArrayOutputWithContext(ctx context.Context) ServerArrayOutput {
	return o
}

func (o ServerArrayOutput) Index(i pulumi.IntInput) ServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Server {
		return vs[0].([]*Server)[vs[1].(int)]
	}).(ServerOutput)
}

type ServerMapOutput struct{ *pulumi.OutputState }

func (ServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Server)(nil)).Elem()
}

func (o ServerMapOutput) ToServerMapOutput() ServerMapOutput {
	return o
}

func (o ServerMapOutput) ToServerMapOutputWithContext(ctx context.Context) ServerMapOutput {
	return o
}

func (o ServerMapOutput) MapIndex(k pulumi.StringInput) ServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Server {
		return vs[0].(map[string]*Server)[vs[1].(string)]
	}).(ServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerInput)(nil)).Elem(), &Server{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerArrayInput)(nil)).Elem(), ServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerMapInput)(nil)).Elem(), ServerMap{})
	pulumi.RegisterOutputType(ServerOutput{})
	pulumi.RegisterOutputType(ServerArrayOutput{})
	pulumi.RegisterOutputType(ServerMapOutput{})
}
