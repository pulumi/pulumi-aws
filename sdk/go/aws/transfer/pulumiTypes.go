// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package transfer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessHomeDirectoryMapping struct {
	// Represents an entry and a target.
	Entry string `pulumi:"entry"`
	// Represents the map target.
	Target string `pulumi:"target"`
}

// AccessHomeDirectoryMappingInput is an input type that accepts AccessHomeDirectoryMappingArgs and AccessHomeDirectoryMappingOutput values.
// You can construct a concrete instance of `AccessHomeDirectoryMappingInput` via:
//
//          AccessHomeDirectoryMappingArgs{...}
type AccessHomeDirectoryMappingInput interface {
	pulumi.Input

	ToAccessHomeDirectoryMappingOutput() AccessHomeDirectoryMappingOutput
	ToAccessHomeDirectoryMappingOutputWithContext(context.Context) AccessHomeDirectoryMappingOutput
}

type AccessHomeDirectoryMappingArgs struct {
	// Represents an entry and a target.
	Entry pulumi.StringInput `pulumi:"entry"`
	// Represents the map target.
	Target pulumi.StringInput `pulumi:"target"`
}

func (AccessHomeDirectoryMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessHomeDirectoryMapping)(nil)).Elem()
}

func (i AccessHomeDirectoryMappingArgs) ToAccessHomeDirectoryMappingOutput() AccessHomeDirectoryMappingOutput {
	return i.ToAccessHomeDirectoryMappingOutputWithContext(context.Background())
}

func (i AccessHomeDirectoryMappingArgs) ToAccessHomeDirectoryMappingOutputWithContext(ctx context.Context) AccessHomeDirectoryMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessHomeDirectoryMappingOutput)
}

// AccessHomeDirectoryMappingArrayInput is an input type that accepts AccessHomeDirectoryMappingArray and AccessHomeDirectoryMappingArrayOutput values.
// You can construct a concrete instance of `AccessHomeDirectoryMappingArrayInput` via:
//
//          AccessHomeDirectoryMappingArray{ AccessHomeDirectoryMappingArgs{...} }
type AccessHomeDirectoryMappingArrayInput interface {
	pulumi.Input

	ToAccessHomeDirectoryMappingArrayOutput() AccessHomeDirectoryMappingArrayOutput
	ToAccessHomeDirectoryMappingArrayOutputWithContext(context.Context) AccessHomeDirectoryMappingArrayOutput
}

type AccessHomeDirectoryMappingArray []AccessHomeDirectoryMappingInput

func (AccessHomeDirectoryMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessHomeDirectoryMapping)(nil)).Elem()
}

func (i AccessHomeDirectoryMappingArray) ToAccessHomeDirectoryMappingArrayOutput() AccessHomeDirectoryMappingArrayOutput {
	return i.ToAccessHomeDirectoryMappingArrayOutputWithContext(context.Background())
}

func (i AccessHomeDirectoryMappingArray) ToAccessHomeDirectoryMappingArrayOutputWithContext(ctx context.Context) AccessHomeDirectoryMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessHomeDirectoryMappingArrayOutput)
}

type AccessHomeDirectoryMappingOutput struct{ *pulumi.OutputState }

func (AccessHomeDirectoryMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessHomeDirectoryMapping)(nil)).Elem()
}

func (o AccessHomeDirectoryMappingOutput) ToAccessHomeDirectoryMappingOutput() AccessHomeDirectoryMappingOutput {
	return o
}

func (o AccessHomeDirectoryMappingOutput) ToAccessHomeDirectoryMappingOutputWithContext(ctx context.Context) AccessHomeDirectoryMappingOutput {
	return o
}

// Represents an entry and a target.
func (o AccessHomeDirectoryMappingOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v AccessHomeDirectoryMapping) string { return v.Entry }).(pulumi.StringOutput)
}

// Represents the map target.
func (o AccessHomeDirectoryMappingOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v AccessHomeDirectoryMapping) string { return v.Target }).(pulumi.StringOutput)
}

type AccessHomeDirectoryMappingArrayOutput struct{ *pulumi.OutputState }

func (AccessHomeDirectoryMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessHomeDirectoryMapping)(nil)).Elem()
}

func (o AccessHomeDirectoryMappingArrayOutput) ToAccessHomeDirectoryMappingArrayOutput() AccessHomeDirectoryMappingArrayOutput {
	return o
}

func (o AccessHomeDirectoryMappingArrayOutput) ToAccessHomeDirectoryMappingArrayOutputWithContext(ctx context.Context) AccessHomeDirectoryMappingArrayOutput {
	return o
}

func (o AccessHomeDirectoryMappingArrayOutput) Index(i pulumi.IntInput) AccessHomeDirectoryMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessHomeDirectoryMapping {
		return vs[0].([]AccessHomeDirectoryMapping)[vs[1].(int)]
	}).(AccessHomeDirectoryMappingOutput)
}

type AccessPosixProfile struct {
	// The POSIX group ID used for all EFS operations by this user.
	Gid int `pulumi:"gid"`
	// The secondary POSIX group IDs used for all EFS operations by this user.
	SecondaryGids []int `pulumi:"secondaryGids"`
	// The POSIX user ID used for all EFS operations by this user.
	Uid int `pulumi:"uid"`
}

// AccessPosixProfileInput is an input type that accepts AccessPosixProfileArgs and AccessPosixProfileOutput values.
// You can construct a concrete instance of `AccessPosixProfileInput` via:
//
//          AccessPosixProfileArgs{...}
type AccessPosixProfileInput interface {
	pulumi.Input

	ToAccessPosixProfileOutput() AccessPosixProfileOutput
	ToAccessPosixProfileOutputWithContext(context.Context) AccessPosixProfileOutput
}

type AccessPosixProfileArgs struct {
	// The POSIX group ID used for all EFS operations by this user.
	Gid pulumi.IntInput `pulumi:"gid"`
	// The secondary POSIX group IDs used for all EFS operations by this user.
	SecondaryGids pulumi.IntArrayInput `pulumi:"secondaryGids"`
	// The POSIX user ID used for all EFS operations by this user.
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (AccessPosixProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPosixProfile)(nil)).Elem()
}

func (i AccessPosixProfileArgs) ToAccessPosixProfileOutput() AccessPosixProfileOutput {
	return i.ToAccessPosixProfileOutputWithContext(context.Background())
}

func (i AccessPosixProfileArgs) ToAccessPosixProfileOutputWithContext(ctx context.Context) AccessPosixProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPosixProfileOutput)
}

func (i AccessPosixProfileArgs) ToAccessPosixProfilePtrOutput() AccessPosixProfilePtrOutput {
	return i.ToAccessPosixProfilePtrOutputWithContext(context.Background())
}

func (i AccessPosixProfileArgs) ToAccessPosixProfilePtrOutputWithContext(ctx context.Context) AccessPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPosixProfileOutput).ToAccessPosixProfilePtrOutputWithContext(ctx)
}

// AccessPosixProfilePtrInput is an input type that accepts AccessPosixProfileArgs, AccessPosixProfilePtr and AccessPosixProfilePtrOutput values.
// You can construct a concrete instance of `AccessPosixProfilePtrInput` via:
//
//          AccessPosixProfileArgs{...}
//
//  or:
//
//          nil
type AccessPosixProfilePtrInput interface {
	pulumi.Input

	ToAccessPosixProfilePtrOutput() AccessPosixProfilePtrOutput
	ToAccessPosixProfilePtrOutputWithContext(context.Context) AccessPosixProfilePtrOutput
}

type accessPosixProfilePtrType AccessPosixProfileArgs

func AccessPosixProfilePtr(v *AccessPosixProfileArgs) AccessPosixProfilePtrInput {
	return (*accessPosixProfilePtrType)(v)
}

func (*accessPosixProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPosixProfile)(nil)).Elem()
}

func (i *accessPosixProfilePtrType) ToAccessPosixProfilePtrOutput() AccessPosixProfilePtrOutput {
	return i.ToAccessPosixProfilePtrOutputWithContext(context.Background())
}

func (i *accessPosixProfilePtrType) ToAccessPosixProfilePtrOutputWithContext(ctx context.Context) AccessPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPosixProfilePtrOutput)
}

type AccessPosixProfileOutput struct{ *pulumi.OutputState }

func (AccessPosixProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPosixProfile)(nil)).Elem()
}

func (o AccessPosixProfileOutput) ToAccessPosixProfileOutput() AccessPosixProfileOutput {
	return o
}

func (o AccessPosixProfileOutput) ToAccessPosixProfileOutputWithContext(ctx context.Context) AccessPosixProfileOutput {
	return o
}

func (o AccessPosixProfileOutput) ToAccessPosixProfilePtrOutput() AccessPosixProfilePtrOutput {
	return o.ToAccessPosixProfilePtrOutputWithContext(context.Background())
}

func (o AccessPosixProfileOutput) ToAccessPosixProfilePtrOutputWithContext(ctx context.Context) AccessPosixProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPosixProfile) *AccessPosixProfile {
		return &v
	}).(AccessPosixProfilePtrOutput)
}

// The POSIX group ID used for all EFS operations by this user.
func (o AccessPosixProfileOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v AccessPosixProfile) int { return v.Gid }).(pulumi.IntOutput)
}

// The secondary POSIX group IDs used for all EFS operations by this user.
func (o AccessPosixProfileOutput) SecondaryGids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AccessPosixProfile) []int { return v.SecondaryGids }).(pulumi.IntArrayOutput)
}

// The POSIX user ID used for all EFS operations by this user.
func (o AccessPosixProfileOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v AccessPosixProfile) int { return v.Uid }).(pulumi.IntOutput)
}

type AccessPosixProfilePtrOutput struct{ *pulumi.OutputState }

func (AccessPosixProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPosixProfile)(nil)).Elem()
}

func (o AccessPosixProfilePtrOutput) ToAccessPosixProfilePtrOutput() AccessPosixProfilePtrOutput {
	return o
}

func (o AccessPosixProfilePtrOutput) ToAccessPosixProfilePtrOutputWithContext(ctx context.Context) AccessPosixProfilePtrOutput {
	return o
}

func (o AccessPosixProfilePtrOutput) Elem() AccessPosixProfileOutput {
	return o.ApplyT(func(v *AccessPosixProfile) AccessPosixProfile {
		if v != nil {
			return *v
		}
		var ret AccessPosixProfile
		return ret
	}).(AccessPosixProfileOutput)
}

// The POSIX group ID used for all EFS operations by this user.
func (o AccessPosixProfilePtrOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessPosixProfile) *int {
		if v == nil {
			return nil
		}
		return &v.Gid
	}).(pulumi.IntPtrOutput)
}

// The secondary POSIX group IDs used for all EFS operations by this user.
func (o AccessPosixProfilePtrOutput) SecondaryGids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AccessPosixProfile) []int {
		if v == nil {
			return nil
		}
		return v.SecondaryGids
	}).(pulumi.IntArrayOutput)
}

// The POSIX user ID used for all EFS operations by this user.
func (o AccessPosixProfilePtrOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessPosixProfile) *int {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.IntPtrOutput)
}

type ServerEndpointDetails struct {
	// A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when `endpointType` is set to `VPC`.
	AddressAllocationIds []string `pulumi:"addressAllocationIds"`
	// A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when `endpointType` is set to `VPC`.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when `endpointType` is set to `VPC`.
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of the VPC endpoint. This property can only be used when `endpointType` is set to `VPC_ENDPOINT`
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when `endpointType` is set to `VPC`.
	VpcId *string `pulumi:"vpcId"`
}

// ServerEndpointDetailsInput is an input type that accepts ServerEndpointDetailsArgs and ServerEndpointDetailsOutput values.
// You can construct a concrete instance of `ServerEndpointDetailsInput` via:
//
//          ServerEndpointDetailsArgs{...}
type ServerEndpointDetailsInput interface {
	pulumi.Input

	ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput
	ToServerEndpointDetailsOutputWithContext(context.Context) ServerEndpointDetailsOutput
}

type ServerEndpointDetailsArgs struct {
	// A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when `endpointType` is set to `VPC`.
	AddressAllocationIds pulumi.StringArrayInput `pulumi:"addressAllocationIds"`
	// A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when `endpointType` is set to `VPC`.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when `endpointType` is set to `VPC`.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The ID of the VPC endpoint. This property can only be used when `endpointType` is set to `VPC_ENDPOINT`
	VpcEndpointId pulumi.StringPtrInput `pulumi:"vpcEndpointId"`
	// The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when `endpointType` is set to `VPC`.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (ServerEndpointDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointDetails)(nil)).Elem()
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput {
	return i.ToServerEndpointDetailsOutputWithContext(context.Background())
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsOutputWithContext(ctx context.Context) ServerEndpointDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsOutput)
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return i.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i ServerEndpointDetailsArgs) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsOutput).ToServerEndpointDetailsPtrOutputWithContext(ctx)
}

// ServerEndpointDetailsPtrInput is an input type that accepts ServerEndpointDetailsArgs, ServerEndpointDetailsPtr and ServerEndpointDetailsPtrOutput values.
// You can construct a concrete instance of `ServerEndpointDetailsPtrInput` via:
//
//          ServerEndpointDetailsArgs{...}
//
//  or:
//
//          nil
type ServerEndpointDetailsPtrInput interface {
	pulumi.Input

	ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput
	ToServerEndpointDetailsPtrOutputWithContext(context.Context) ServerEndpointDetailsPtrOutput
}

type serverEndpointDetailsPtrType ServerEndpointDetailsArgs

func ServerEndpointDetailsPtr(v *ServerEndpointDetailsArgs) ServerEndpointDetailsPtrInput {
	return (*serverEndpointDetailsPtrType)(v)
}

func (*serverEndpointDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointDetails)(nil)).Elem()
}

func (i *serverEndpointDetailsPtrType) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return i.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (i *serverEndpointDetailsPtrType) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerEndpointDetailsPtrOutput)
}

type ServerEndpointDetailsOutput struct{ *pulumi.OutputState }

func (ServerEndpointDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerEndpointDetails)(nil)).Elem()
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsOutput() ServerEndpointDetailsOutput {
	return o
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsOutputWithContext(ctx context.Context) ServerEndpointDetailsOutput {
	return o
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return o.ToServerEndpointDetailsPtrOutputWithContext(context.Background())
}

func (o ServerEndpointDetailsOutput) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerEndpointDetails) *ServerEndpointDetails {
		return &v
	}).(ServerEndpointDetailsPtrOutput)
}

// A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsOutput) AddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.AddressAllocationIds }).(pulumi.StringArrayOutput)
}

// A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerEndpointDetails) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of the VPC endpoint. This property can only be used when `endpointType` is set to `VPC_ENDPOINT`
func (o ServerEndpointDetailsOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEndpointDetails) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

// The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerEndpointDetails) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ServerEndpointDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServerEndpointDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerEndpointDetails)(nil)).Elem()
}

func (o ServerEndpointDetailsPtrOutput) ToServerEndpointDetailsPtrOutput() ServerEndpointDetailsPtrOutput {
	return o
}

func (o ServerEndpointDetailsPtrOutput) ToServerEndpointDetailsPtrOutputWithContext(ctx context.Context) ServerEndpointDetailsPtrOutput {
	return o
}

func (o ServerEndpointDetailsPtrOutput) Elem() ServerEndpointDetailsOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) ServerEndpointDetails {
		if v != nil {
			return *v
		}
		var ret ServerEndpointDetails
		return ret
	}).(ServerEndpointDetailsOutput)
}

// A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsPtrOutput) AddressAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.AddressAllocationIds
	}).(pulumi.StringArrayOutput)
}

// A list of security groups IDs that are available to attach to your server's endpoint. If no security groups are specified, the VPC's default security groups are automatically assigned to your endpoint. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs that are required to host your SFTP server endpoint in your VPC. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the VPC endpoint. This property can only be used when `endpointType` is set to `VPC_ENDPOINT`
func (o ServerEndpointDetailsPtrOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return v.VpcEndpointId
	}).(pulumi.StringPtrOutput)
}

// The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted. This property can only be used when `endpointType` is set to `VPC`.
func (o ServerEndpointDetailsPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerEndpointDetails) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type UserHomeDirectoryMapping struct {
	// Represents an entry and a target.
	Entry string `pulumi:"entry"`
	// Represents the map target.
	Target string `pulumi:"target"`
}

// UserHomeDirectoryMappingInput is an input type that accepts UserHomeDirectoryMappingArgs and UserHomeDirectoryMappingOutput values.
// You can construct a concrete instance of `UserHomeDirectoryMappingInput` via:
//
//          UserHomeDirectoryMappingArgs{...}
type UserHomeDirectoryMappingInput interface {
	pulumi.Input

	ToUserHomeDirectoryMappingOutput() UserHomeDirectoryMappingOutput
	ToUserHomeDirectoryMappingOutputWithContext(context.Context) UserHomeDirectoryMappingOutput
}

type UserHomeDirectoryMappingArgs struct {
	// Represents an entry and a target.
	Entry pulumi.StringInput `pulumi:"entry"`
	// Represents the map target.
	Target pulumi.StringInput `pulumi:"target"`
}

func (UserHomeDirectoryMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHomeDirectoryMapping)(nil)).Elem()
}

func (i UserHomeDirectoryMappingArgs) ToUserHomeDirectoryMappingOutput() UserHomeDirectoryMappingOutput {
	return i.ToUserHomeDirectoryMappingOutputWithContext(context.Background())
}

func (i UserHomeDirectoryMappingArgs) ToUserHomeDirectoryMappingOutputWithContext(ctx context.Context) UserHomeDirectoryMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHomeDirectoryMappingOutput)
}

// UserHomeDirectoryMappingArrayInput is an input type that accepts UserHomeDirectoryMappingArray and UserHomeDirectoryMappingArrayOutput values.
// You can construct a concrete instance of `UserHomeDirectoryMappingArrayInput` via:
//
//          UserHomeDirectoryMappingArray{ UserHomeDirectoryMappingArgs{...} }
type UserHomeDirectoryMappingArrayInput interface {
	pulumi.Input

	ToUserHomeDirectoryMappingArrayOutput() UserHomeDirectoryMappingArrayOutput
	ToUserHomeDirectoryMappingArrayOutputWithContext(context.Context) UserHomeDirectoryMappingArrayOutput
}

type UserHomeDirectoryMappingArray []UserHomeDirectoryMappingInput

func (UserHomeDirectoryMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHomeDirectoryMapping)(nil)).Elem()
}

func (i UserHomeDirectoryMappingArray) ToUserHomeDirectoryMappingArrayOutput() UserHomeDirectoryMappingArrayOutput {
	return i.ToUserHomeDirectoryMappingArrayOutputWithContext(context.Background())
}

func (i UserHomeDirectoryMappingArray) ToUserHomeDirectoryMappingArrayOutputWithContext(ctx context.Context) UserHomeDirectoryMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHomeDirectoryMappingArrayOutput)
}

type UserHomeDirectoryMappingOutput struct{ *pulumi.OutputState }

func (UserHomeDirectoryMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHomeDirectoryMapping)(nil)).Elem()
}

func (o UserHomeDirectoryMappingOutput) ToUserHomeDirectoryMappingOutput() UserHomeDirectoryMappingOutput {
	return o
}

func (o UserHomeDirectoryMappingOutput) ToUserHomeDirectoryMappingOutputWithContext(ctx context.Context) UserHomeDirectoryMappingOutput {
	return o
}

// Represents an entry and a target.
func (o UserHomeDirectoryMappingOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v UserHomeDirectoryMapping) string { return v.Entry }).(pulumi.StringOutput)
}

// Represents the map target.
func (o UserHomeDirectoryMappingOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v UserHomeDirectoryMapping) string { return v.Target }).(pulumi.StringOutput)
}

type UserHomeDirectoryMappingArrayOutput struct{ *pulumi.OutputState }

func (UserHomeDirectoryMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserHomeDirectoryMapping)(nil)).Elem()
}

func (o UserHomeDirectoryMappingArrayOutput) ToUserHomeDirectoryMappingArrayOutput() UserHomeDirectoryMappingArrayOutput {
	return o
}

func (o UserHomeDirectoryMappingArrayOutput) ToUserHomeDirectoryMappingArrayOutputWithContext(ctx context.Context) UserHomeDirectoryMappingArrayOutput {
	return o
}

func (o UserHomeDirectoryMappingArrayOutput) Index(i pulumi.IntInput) UserHomeDirectoryMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserHomeDirectoryMapping {
		return vs[0].([]UserHomeDirectoryMapping)[vs[1].(int)]
	}).(UserHomeDirectoryMappingOutput)
}

type UserPosixProfile struct {
	// The POSIX group ID used for all EFS operations by this user.
	Gid int `pulumi:"gid"`
	// The secondary POSIX group IDs used for all EFS operations by this user.
	SecondaryGids []int `pulumi:"secondaryGids"`
	// The POSIX user ID used for all EFS operations by this user.
	Uid int `pulumi:"uid"`
}

// UserPosixProfileInput is an input type that accepts UserPosixProfileArgs and UserPosixProfileOutput values.
// You can construct a concrete instance of `UserPosixProfileInput` via:
//
//          UserPosixProfileArgs{...}
type UserPosixProfileInput interface {
	pulumi.Input

	ToUserPosixProfileOutput() UserPosixProfileOutput
	ToUserPosixProfileOutputWithContext(context.Context) UserPosixProfileOutput
}

type UserPosixProfileArgs struct {
	// The POSIX group ID used for all EFS operations by this user.
	Gid pulumi.IntInput `pulumi:"gid"`
	// The secondary POSIX group IDs used for all EFS operations by this user.
	SecondaryGids pulumi.IntArrayInput `pulumi:"secondaryGids"`
	// The POSIX user ID used for all EFS operations by this user.
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (UserPosixProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPosixProfile)(nil)).Elem()
}

func (i UserPosixProfileArgs) ToUserPosixProfileOutput() UserPosixProfileOutput {
	return i.ToUserPosixProfileOutputWithContext(context.Background())
}

func (i UserPosixProfileArgs) ToUserPosixProfileOutputWithContext(ctx context.Context) UserPosixProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfileOutput)
}

func (i UserPosixProfileArgs) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return i.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (i UserPosixProfileArgs) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfileOutput).ToUserPosixProfilePtrOutputWithContext(ctx)
}

// UserPosixProfilePtrInput is an input type that accepts UserPosixProfileArgs, UserPosixProfilePtr and UserPosixProfilePtrOutput values.
// You can construct a concrete instance of `UserPosixProfilePtrInput` via:
//
//          UserPosixProfileArgs{...}
//
//  or:
//
//          nil
type UserPosixProfilePtrInput interface {
	pulumi.Input

	ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput
	ToUserPosixProfilePtrOutputWithContext(context.Context) UserPosixProfilePtrOutput
}

type userPosixProfilePtrType UserPosixProfileArgs

func UserPosixProfilePtr(v *UserPosixProfileArgs) UserPosixProfilePtrInput {
	return (*userPosixProfilePtrType)(v)
}

func (*userPosixProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPosixProfile)(nil)).Elem()
}

func (i *userPosixProfilePtrType) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return i.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (i *userPosixProfilePtrType) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPosixProfilePtrOutput)
}

type UserPosixProfileOutput struct{ *pulumi.OutputState }

func (UserPosixProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPosixProfile)(nil)).Elem()
}

func (o UserPosixProfileOutput) ToUserPosixProfileOutput() UserPosixProfileOutput {
	return o
}

func (o UserPosixProfileOutput) ToUserPosixProfileOutputWithContext(ctx context.Context) UserPosixProfileOutput {
	return o
}

func (o UserPosixProfileOutput) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return o.ToUserPosixProfilePtrOutputWithContext(context.Background())
}

func (o UserPosixProfileOutput) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPosixProfile) *UserPosixProfile {
		return &v
	}).(UserPosixProfilePtrOutput)
}

// The POSIX group ID used for all EFS operations by this user.
func (o UserPosixProfileOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v UserPosixProfile) int { return v.Gid }).(pulumi.IntOutput)
}

// The secondary POSIX group IDs used for all EFS operations by this user.
func (o UserPosixProfileOutput) SecondaryGids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v UserPosixProfile) []int { return v.SecondaryGids }).(pulumi.IntArrayOutput)
}

// The POSIX user ID used for all EFS operations by this user.
func (o UserPosixProfileOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v UserPosixProfile) int { return v.Uid }).(pulumi.IntOutput)
}

type UserPosixProfilePtrOutput struct{ *pulumi.OutputState }

func (UserPosixProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPosixProfile)(nil)).Elem()
}

func (o UserPosixProfilePtrOutput) ToUserPosixProfilePtrOutput() UserPosixProfilePtrOutput {
	return o
}

func (o UserPosixProfilePtrOutput) ToUserPosixProfilePtrOutputWithContext(ctx context.Context) UserPosixProfilePtrOutput {
	return o
}

func (o UserPosixProfilePtrOutput) Elem() UserPosixProfileOutput {
	return o.ApplyT(func(v *UserPosixProfile) UserPosixProfile {
		if v != nil {
			return *v
		}
		var ret UserPosixProfile
		return ret
	}).(UserPosixProfileOutput)
}

// The POSIX group ID used for all EFS operations by this user.
func (o UserPosixProfilePtrOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPosixProfile) *int {
		if v == nil {
			return nil
		}
		return &v.Gid
	}).(pulumi.IntPtrOutput)
}

// The secondary POSIX group IDs used for all EFS operations by this user.
func (o UserPosixProfilePtrOutput) SecondaryGids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *UserPosixProfile) []int {
		if v == nil {
			return nil
		}
		return v.SecondaryGids
	}).(pulumi.IntArrayOutput)
}

// The POSIX user ID used for all EFS operations by this user.
func (o UserPosixProfilePtrOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPosixProfile) *int {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessHomeDirectoryMappingInput)(nil)).Elem(), AccessHomeDirectoryMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessHomeDirectoryMappingArrayInput)(nil)).Elem(), AccessHomeDirectoryMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPosixProfileInput)(nil)).Elem(), AccessPosixProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPosixProfilePtrInput)(nil)).Elem(), AccessPosixProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEndpointDetailsInput)(nil)).Elem(), ServerEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerEndpointDetailsPtrInput)(nil)).Elem(), ServerEndpointDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHomeDirectoryMappingInput)(nil)).Elem(), UserHomeDirectoryMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHomeDirectoryMappingArrayInput)(nil)).Elem(), UserHomeDirectoryMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPosixProfileInput)(nil)).Elem(), UserPosixProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPosixProfilePtrInput)(nil)).Elem(), UserPosixProfileArgs{})
	pulumi.RegisterOutputType(AccessHomeDirectoryMappingOutput{})
	pulumi.RegisterOutputType(AccessHomeDirectoryMappingArrayOutput{})
	pulumi.RegisterOutputType(AccessPosixProfileOutput{})
	pulumi.RegisterOutputType(AccessPosixProfilePtrOutput{})
	pulumi.RegisterOutputType(ServerEndpointDetailsOutput{})
	pulumi.RegisterOutputType(ServerEndpointDetailsPtrOutput{})
	pulumi.RegisterOutputType(UserHomeDirectoryMappingOutput{})
	pulumi.RegisterOutputType(UserHomeDirectoryMappingArrayOutput{})
	pulumi.RegisterOutputType(UserPosixProfileOutput{})
	pulumi.RegisterOutputType(UserPosixProfilePtrOutput{})
}
