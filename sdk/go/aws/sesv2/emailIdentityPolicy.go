// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS SESv2 (Simple Email V2) Email Identity Policy.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/sesv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := sesv2.NewEmailIdentity(ctx, "example", &sesv2.EmailIdentityArgs{
//				EmailIdentity: pulumi.String("testing@example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = sesv2.NewEmailIdentityPolicy(ctx, "example", &sesv2.EmailIdentityPolicyArgs{
//				EmailIdentity: example.EmailIdentity,
//				PolicyName:    pulumi.String("example"),
//				Policy: example.Arn.ApplyT(func(arn string) (string, error) {
//					return fmt.Sprintf(`{
//	  "Id":"ExampleAuthorizationPolicy",
//	  "Version":"2012-10-17",
//	  "Statement":[
//	    {
//	      "Sid":"AuthorizeIAMUser",
//	      "Effect":"Allow",
//	      "Resource":"%v",
//	      "Principal":{
//	        "AWS":[
//	          "arn:aws:iam::123456789012:user/John",
//	          "arn:aws:iam::123456789012:user/Jane"
//	        ]
//	      },
//	      "Action":[
//	        "ses:DeleteEmailIdentity",
//	        "ses:PutEmailIdentityDkimSigningAttributes"
//	      ]
//	    }
//	  ]
//	}
//
// `, arn), nil
//
//				}).(pulumi.StringOutput),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Using `pulumi import`, import SESv2 (Simple Email V2) Email Identity Policy using the `example_id_arg`. For example:
//
// ```sh
// $ pulumi import aws:sesv2/emailIdentityPolicy:EmailIdentityPolicy example example_email_identity|example_policy_name
// ```
type EmailIdentityPolicy struct {
	pulumi.CustomResourceState

	// The email identity.
	EmailIdentity pulumi.StringOutput `pulumi:"emailIdentity"`
	// The text of the policy in JSON format.
	Policy pulumi.StringOutput `pulumi:"policy"`
	// The name of the policy.
	PolicyName pulumi.StringOutput `pulumi:"policyName"`
}

// NewEmailIdentityPolicy registers a new resource with the given unique name, arguments, and options.
func NewEmailIdentityPolicy(ctx *pulumi.Context,
	name string, args *EmailIdentityPolicyArgs, opts ...pulumi.ResourceOption) (*EmailIdentityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EmailIdentity == nil {
		return nil, errors.New("invalid value for required argument 'EmailIdentity'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.PolicyName == nil {
		return nil, errors.New("invalid value for required argument 'PolicyName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EmailIdentityPolicy
	err := ctx.RegisterResource("aws:sesv2/emailIdentityPolicy:EmailIdentityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailIdentityPolicy gets an existing EmailIdentityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailIdentityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailIdentityPolicyState, opts ...pulumi.ResourceOption) (*EmailIdentityPolicy, error) {
	var resource EmailIdentityPolicy
	err := ctx.ReadResource("aws:sesv2/emailIdentityPolicy:EmailIdentityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailIdentityPolicy resources.
type emailIdentityPolicyState struct {
	// The email identity.
	EmailIdentity *string `pulumi:"emailIdentity"`
	// The text of the policy in JSON format.
	Policy *string `pulumi:"policy"`
	// The name of the policy.
	PolicyName *string `pulumi:"policyName"`
}

type EmailIdentityPolicyState struct {
	// The email identity.
	EmailIdentity pulumi.StringPtrInput
	// The text of the policy in JSON format.
	Policy pulumi.StringPtrInput
	// The name of the policy.
	PolicyName pulumi.StringPtrInput
}

func (EmailIdentityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailIdentityPolicyState)(nil)).Elem()
}

type emailIdentityPolicyArgs struct {
	// The email identity.
	EmailIdentity string `pulumi:"emailIdentity"`
	// The text of the policy in JSON format.
	Policy string `pulumi:"policy"`
	// The name of the policy.
	PolicyName string `pulumi:"policyName"`
}

// The set of arguments for constructing a EmailIdentityPolicy resource.
type EmailIdentityPolicyArgs struct {
	// The email identity.
	EmailIdentity pulumi.StringInput
	// The text of the policy in JSON format.
	Policy pulumi.StringInput
	// The name of the policy.
	PolicyName pulumi.StringInput
}

func (EmailIdentityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailIdentityPolicyArgs)(nil)).Elem()
}

type EmailIdentityPolicyInput interface {
	pulumi.Input

	ToEmailIdentityPolicyOutput() EmailIdentityPolicyOutput
	ToEmailIdentityPolicyOutputWithContext(ctx context.Context) EmailIdentityPolicyOutput
}

func (*EmailIdentityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailIdentityPolicy)(nil)).Elem()
}

func (i *EmailIdentityPolicy) ToEmailIdentityPolicyOutput() EmailIdentityPolicyOutput {
	return i.ToEmailIdentityPolicyOutputWithContext(context.Background())
}

func (i *EmailIdentityPolicy) ToEmailIdentityPolicyOutputWithContext(ctx context.Context) EmailIdentityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailIdentityPolicyOutput)
}

// EmailIdentityPolicyArrayInput is an input type that accepts EmailIdentityPolicyArray and EmailIdentityPolicyArrayOutput values.
// You can construct a concrete instance of `EmailIdentityPolicyArrayInput` via:
//
//	EmailIdentityPolicyArray{ EmailIdentityPolicyArgs{...} }
type EmailIdentityPolicyArrayInput interface {
	pulumi.Input

	ToEmailIdentityPolicyArrayOutput() EmailIdentityPolicyArrayOutput
	ToEmailIdentityPolicyArrayOutputWithContext(context.Context) EmailIdentityPolicyArrayOutput
}

type EmailIdentityPolicyArray []EmailIdentityPolicyInput

func (EmailIdentityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailIdentityPolicy)(nil)).Elem()
}

func (i EmailIdentityPolicyArray) ToEmailIdentityPolicyArrayOutput() EmailIdentityPolicyArrayOutput {
	return i.ToEmailIdentityPolicyArrayOutputWithContext(context.Background())
}

func (i EmailIdentityPolicyArray) ToEmailIdentityPolicyArrayOutputWithContext(ctx context.Context) EmailIdentityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailIdentityPolicyArrayOutput)
}

// EmailIdentityPolicyMapInput is an input type that accepts EmailIdentityPolicyMap and EmailIdentityPolicyMapOutput values.
// You can construct a concrete instance of `EmailIdentityPolicyMapInput` via:
//
//	EmailIdentityPolicyMap{ "key": EmailIdentityPolicyArgs{...} }
type EmailIdentityPolicyMapInput interface {
	pulumi.Input

	ToEmailIdentityPolicyMapOutput() EmailIdentityPolicyMapOutput
	ToEmailIdentityPolicyMapOutputWithContext(context.Context) EmailIdentityPolicyMapOutput
}

type EmailIdentityPolicyMap map[string]EmailIdentityPolicyInput

func (EmailIdentityPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailIdentityPolicy)(nil)).Elem()
}

func (i EmailIdentityPolicyMap) ToEmailIdentityPolicyMapOutput() EmailIdentityPolicyMapOutput {
	return i.ToEmailIdentityPolicyMapOutputWithContext(context.Background())
}

func (i EmailIdentityPolicyMap) ToEmailIdentityPolicyMapOutputWithContext(ctx context.Context) EmailIdentityPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailIdentityPolicyMapOutput)
}

type EmailIdentityPolicyOutput struct{ *pulumi.OutputState }

func (EmailIdentityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailIdentityPolicy)(nil)).Elem()
}

func (o EmailIdentityPolicyOutput) ToEmailIdentityPolicyOutput() EmailIdentityPolicyOutput {
	return o
}

func (o EmailIdentityPolicyOutput) ToEmailIdentityPolicyOutputWithContext(ctx context.Context) EmailIdentityPolicyOutput {
	return o
}

// The email identity.
func (o EmailIdentityPolicyOutput) EmailIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailIdentityPolicy) pulumi.StringOutput { return v.EmailIdentity }).(pulumi.StringOutput)
}

// The text of the policy in JSON format.
func (o EmailIdentityPolicyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailIdentityPolicy) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

// The name of the policy.
func (o EmailIdentityPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailIdentityPolicy) pulumi.StringOutput { return v.PolicyName }).(pulumi.StringOutput)
}

type EmailIdentityPolicyArrayOutput struct{ *pulumi.OutputState }

func (EmailIdentityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailIdentityPolicy)(nil)).Elem()
}

func (o EmailIdentityPolicyArrayOutput) ToEmailIdentityPolicyArrayOutput() EmailIdentityPolicyArrayOutput {
	return o
}

func (o EmailIdentityPolicyArrayOutput) ToEmailIdentityPolicyArrayOutputWithContext(ctx context.Context) EmailIdentityPolicyArrayOutput {
	return o
}

func (o EmailIdentityPolicyArrayOutput) Index(i pulumi.IntInput) EmailIdentityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EmailIdentityPolicy {
		return vs[0].([]*EmailIdentityPolicy)[vs[1].(int)]
	}).(EmailIdentityPolicyOutput)
}

type EmailIdentityPolicyMapOutput struct{ *pulumi.OutputState }

func (EmailIdentityPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailIdentityPolicy)(nil)).Elem()
}

func (o EmailIdentityPolicyMapOutput) ToEmailIdentityPolicyMapOutput() EmailIdentityPolicyMapOutput {
	return o
}

func (o EmailIdentityPolicyMapOutput) ToEmailIdentityPolicyMapOutputWithContext(ctx context.Context) EmailIdentityPolicyMapOutput {
	return o
}

func (o EmailIdentityPolicyMapOutput) MapIndex(k pulumi.StringInput) EmailIdentityPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EmailIdentityPolicy {
		return vs[0].(map[string]*EmailIdentityPolicy)[vs[1].(string)]
	}).(EmailIdentityPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EmailIdentityPolicyInput)(nil)).Elem(), &EmailIdentityPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailIdentityPolicyArrayInput)(nil)).Elem(), EmailIdentityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailIdentityPolicyMapInput)(nil)).Elem(), EmailIdentityPolicyMap{})
	pulumi.RegisterOutputType(EmailIdentityPolicyOutput{})
	pulumi.RegisterOutputType(EmailIdentityPolicyArrayOutput{})
	pulumi.RegisterOutputType(EmailIdentityPolicyMapOutput{})
}
