// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigurationSet struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput                         `pulumi:"arn"`
	ConfigurationSetName pulumi.StringOutput                         `pulumi:"configurationSetName"`
	DeliveryOptions      ConfigurationSetDeliveryOptionsPtrOutput    `pulumi:"deliveryOptions"`
	ReputationOptions    ConfigurationSetReputationOptionsOutput     `pulumi:"reputationOptions"`
	SendingOptions       ConfigurationSetSendingOptionsOutput        `pulumi:"sendingOptions"`
	SuppressionOptions   ConfigurationSetSuppressionOptionsPtrOutput `pulumi:"suppressionOptions"`
	Tags                 pulumi.StringMapOutput                      `pulumi:"tags"`
	TagsAll              pulumi.StringMapOutput                      `pulumi:"tagsAll"`
	TrackingOptions      ConfigurationSetTrackingOptionsPtrOutput    `pulumi:"trackingOptions"`
}

// NewConfigurationSet registers a new resource with the given unique name, arguments, and options.
func NewConfigurationSet(ctx *pulumi.Context,
	name string, args *ConfigurationSetArgs, opts ...pulumi.ResourceOption) (*ConfigurationSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationSetName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationSetName'")
	}
	var resource ConfigurationSet
	err := ctx.RegisterResource("aws:sesv2/configurationSet:ConfigurationSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationSet gets an existing ConfigurationSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationSetState, opts ...pulumi.ResourceOption) (*ConfigurationSet, error) {
	var resource ConfigurationSet
	err := ctx.ReadResource("aws:sesv2/configurationSet:ConfigurationSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationSet resources.
type configurationSetState struct {
	Arn                  *string                             `pulumi:"arn"`
	ConfigurationSetName *string                             `pulumi:"configurationSetName"`
	DeliveryOptions      *ConfigurationSetDeliveryOptions    `pulumi:"deliveryOptions"`
	ReputationOptions    *ConfigurationSetReputationOptions  `pulumi:"reputationOptions"`
	SendingOptions       *ConfigurationSetSendingOptions     `pulumi:"sendingOptions"`
	SuppressionOptions   *ConfigurationSetSuppressionOptions `pulumi:"suppressionOptions"`
	Tags                 map[string]string                   `pulumi:"tags"`
	TagsAll              map[string]string                   `pulumi:"tagsAll"`
	TrackingOptions      *ConfigurationSetTrackingOptions    `pulumi:"trackingOptions"`
}

type ConfigurationSetState struct {
	Arn                  pulumi.StringPtrInput
	ConfigurationSetName pulumi.StringPtrInput
	DeliveryOptions      ConfigurationSetDeliveryOptionsPtrInput
	ReputationOptions    ConfigurationSetReputationOptionsPtrInput
	SendingOptions       ConfigurationSetSendingOptionsPtrInput
	SuppressionOptions   ConfigurationSetSuppressionOptionsPtrInput
	Tags                 pulumi.StringMapInput
	TagsAll              pulumi.StringMapInput
	TrackingOptions      ConfigurationSetTrackingOptionsPtrInput
}

func (ConfigurationSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetState)(nil)).Elem()
}

type configurationSetArgs struct {
	ConfigurationSetName string                              `pulumi:"configurationSetName"`
	DeliveryOptions      *ConfigurationSetDeliveryOptions    `pulumi:"deliveryOptions"`
	ReputationOptions    *ConfigurationSetReputationOptions  `pulumi:"reputationOptions"`
	SendingOptions       *ConfigurationSetSendingOptions     `pulumi:"sendingOptions"`
	SuppressionOptions   *ConfigurationSetSuppressionOptions `pulumi:"suppressionOptions"`
	Tags                 map[string]string                   `pulumi:"tags"`
	TrackingOptions      *ConfigurationSetTrackingOptions    `pulumi:"trackingOptions"`
}

// The set of arguments for constructing a ConfigurationSet resource.
type ConfigurationSetArgs struct {
	ConfigurationSetName pulumi.StringInput
	DeliveryOptions      ConfigurationSetDeliveryOptionsPtrInput
	ReputationOptions    ConfigurationSetReputationOptionsPtrInput
	SendingOptions       ConfigurationSetSendingOptionsPtrInput
	SuppressionOptions   ConfigurationSetSuppressionOptionsPtrInput
	Tags                 pulumi.StringMapInput
	TrackingOptions      ConfigurationSetTrackingOptionsPtrInput
}

func (ConfigurationSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetArgs)(nil)).Elem()
}

type ConfigurationSetInput interface {
	pulumi.Input

	ToConfigurationSetOutput() ConfigurationSetOutput
	ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput
}

func (*ConfigurationSet) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSet)(nil)).Elem()
}

func (i *ConfigurationSet) ToConfigurationSetOutput() ConfigurationSetOutput {
	return i.ToConfigurationSetOutputWithContext(context.Background())
}

func (i *ConfigurationSet) ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetOutput)
}

// ConfigurationSetArrayInput is an input type that accepts ConfigurationSetArray and ConfigurationSetArrayOutput values.
// You can construct a concrete instance of `ConfigurationSetArrayInput` via:
//
//	ConfigurationSetArray{ ConfigurationSetArgs{...} }
type ConfigurationSetArrayInput interface {
	pulumi.Input

	ToConfigurationSetArrayOutput() ConfigurationSetArrayOutput
	ToConfigurationSetArrayOutputWithContext(context.Context) ConfigurationSetArrayOutput
}

type ConfigurationSetArray []ConfigurationSetInput

func (ConfigurationSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationSet)(nil)).Elem()
}

func (i ConfigurationSetArray) ToConfigurationSetArrayOutput() ConfigurationSetArrayOutput {
	return i.ToConfigurationSetArrayOutputWithContext(context.Background())
}

func (i ConfigurationSetArray) ToConfigurationSetArrayOutputWithContext(ctx context.Context) ConfigurationSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetArrayOutput)
}

// ConfigurationSetMapInput is an input type that accepts ConfigurationSetMap and ConfigurationSetMapOutput values.
// You can construct a concrete instance of `ConfigurationSetMapInput` via:
//
//	ConfigurationSetMap{ "key": ConfigurationSetArgs{...} }
type ConfigurationSetMapInput interface {
	pulumi.Input

	ToConfigurationSetMapOutput() ConfigurationSetMapOutput
	ToConfigurationSetMapOutputWithContext(context.Context) ConfigurationSetMapOutput
}

type ConfigurationSetMap map[string]ConfigurationSetInput

func (ConfigurationSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationSet)(nil)).Elem()
}

func (i ConfigurationSetMap) ToConfigurationSetMapOutput() ConfigurationSetMapOutput {
	return i.ToConfigurationSetMapOutputWithContext(context.Background())
}

func (i ConfigurationSetMap) ToConfigurationSetMapOutputWithContext(ctx context.Context) ConfigurationSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetMapOutput)
}

type ConfigurationSetOutput struct{ *pulumi.OutputState }

func (ConfigurationSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSet)(nil)).Elem()
}

func (o ConfigurationSetOutput) ToConfigurationSetOutput() ConfigurationSetOutput {
	return o
}

func (o ConfigurationSetOutput) ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput {
	return o
}

func (o ConfigurationSetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ConfigurationSetOutput) ConfigurationSetName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringOutput { return v.ConfigurationSetName }).(pulumi.StringOutput)
}

func (o ConfigurationSetOutput) DeliveryOptions() ConfigurationSetDeliveryOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetDeliveryOptionsPtrOutput { return v.DeliveryOptions }).(ConfigurationSetDeliveryOptionsPtrOutput)
}

func (o ConfigurationSetOutput) ReputationOptions() ConfigurationSetReputationOptionsOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetReputationOptionsOutput { return v.ReputationOptions }).(ConfigurationSetReputationOptionsOutput)
}

func (o ConfigurationSetOutput) SendingOptions() ConfigurationSetSendingOptionsOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetSendingOptionsOutput { return v.SendingOptions }).(ConfigurationSetSendingOptionsOutput)
}

func (o ConfigurationSetOutput) SuppressionOptions() ConfigurationSetSuppressionOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetSuppressionOptionsPtrOutput { return v.SuppressionOptions }).(ConfigurationSetSuppressionOptionsPtrOutput)
}

func (o ConfigurationSetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ConfigurationSetOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ConfigurationSetOutput) TrackingOptions() ConfigurationSetTrackingOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetTrackingOptionsPtrOutput { return v.TrackingOptions }).(ConfigurationSetTrackingOptionsPtrOutput)
}

type ConfigurationSetArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationSet)(nil)).Elem()
}

func (o ConfigurationSetArrayOutput) ToConfigurationSetArrayOutput() ConfigurationSetArrayOutput {
	return o
}

func (o ConfigurationSetArrayOutput) ToConfigurationSetArrayOutputWithContext(ctx context.Context) ConfigurationSetArrayOutput {
	return o
}

func (o ConfigurationSetArrayOutput) Index(i pulumi.IntInput) ConfigurationSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationSet {
		return vs[0].([]*ConfigurationSet)[vs[1].(int)]
	}).(ConfigurationSetOutput)
}

type ConfigurationSetMapOutput struct{ *pulumi.OutputState }

func (ConfigurationSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationSet)(nil)).Elem()
}

func (o ConfigurationSetMapOutput) ToConfigurationSetMapOutput() ConfigurationSetMapOutput {
	return o
}

func (o ConfigurationSetMapOutput) ToConfigurationSetMapOutputWithContext(ctx context.Context) ConfigurationSetMapOutput {
	return o
}

func (o ConfigurationSetMapOutput) MapIndex(k pulumi.StringInput) ConfigurationSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationSet {
		return vs[0].(map[string]*ConfigurationSet)[vs[1].(string)]
	}).(ConfigurationSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetInput)(nil)).Elem(), &ConfigurationSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetArrayInput)(nil)).Elem(), ConfigurationSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetMapInput)(nil)).Elem(), ConfigurationSetMap{})
	pulumi.RegisterOutputType(ConfigurationSetOutput{})
	pulumi.RegisterOutputType(ConfigurationSetArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationSetMapOutput{})
}
