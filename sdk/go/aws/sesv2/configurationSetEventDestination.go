// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigurationSetEventDestination struct {
	pulumi.CustomResourceState

	ConfigurationSetName pulumi.StringOutput                                    `pulumi:"configurationSetName"`
	EventDestination     ConfigurationSetEventDestinationEventDestinationOutput `pulumi:"eventDestination"`
	EventDestinationName pulumi.StringOutput                                    `pulumi:"eventDestinationName"`
}

// NewConfigurationSetEventDestination registers a new resource with the given unique name, arguments, and options.
func NewConfigurationSetEventDestination(ctx *pulumi.Context,
	name string, args *ConfigurationSetEventDestinationArgs, opts ...pulumi.ResourceOption) (*ConfigurationSetEventDestination, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationSetName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationSetName'")
	}
	if args.EventDestination == nil {
		return nil, errors.New("invalid value for required argument 'EventDestination'")
	}
	if args.EventDestinationName == nil {
		return nil, errors.New("invalid value for required argument 'EventDestinationName'")
	}
	var resource ConfigurationSetEventDestination
	err := ctx.RegisterResource("aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationSetEventDestination gets an existing ConfigurationSetEventDestination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationSetEventDestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationSetEventDestinationState, opts ...pulumi.ResourceOption) (*ConfigurationSetEventDestination, error) {
	var resource ConfigurationSetEventDestination
	err := ctx.ReadResource("aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationSetEventDestination resources.
type configurationSetEventDestinationState struct {
	ConfigurationSetName *string                                           `pulumi:"configurationSetName"`
	EventDestination     *ConfigurationSetEventDestinationEventDestination `pulumi:"eventDestination"`
	EventDestinationName *string                                           `pulumi:"eventDestinationName"`
}

type ConfigurationSetEventDestinationState struct {
	ConfigurationSetName pulumi.StringPtrInput
	EventDestination     ConfigurationSetEventDestinationEventDestinationPtrInput
	EventDestinationName pulumi.StringPtrInput
}

func (ConfigurationSetEventDestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetEventDestinationState)(nil)).Elem()
}

type configurationSetEventDestinationArgs struct {
	ConfigurationSetName string                                           `pulumi:"configurationSetName"`
	EventDestination     ConfigurationSetEventDestinationEventDestination `pulumi:"eventDestination"`
	EventDestinationName string                                           `pulumi:"eventDestinationName"`
}

// The set of arguments for constructing a ConfigurationSetEventDestination resource.
type ConfigurationSetEventDestinationArgs struct {
	ConfigurationSetName pulumi.StringInput
	EventDestination     ConfigurationSetEventDestinationEventDestinationInput
	EventDestinationName pulumi.StringInput
}

func (ConfigurationSetEventDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetEventDestinationArgs)(nil)).Elem()
}

type ConfigurationSetEventDestinationInput interface {
	pulumi.Input

	ToConfigurationSetEventDestinationOutput() ConfigurationSetEventDestinationOutput
	ToConfigurationSetEventDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationOutput
}

func (*ConfigurationSetEventDestination) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetEventDestination)(nil)).Elem()
}

func (i *ConfigurationSetEventDestination) ToConfigurationSetEventDestinationOutput() ConfigurationSetEventDestinationOutput {
	return i.ToConfigurationSetEventDestinationOutputWithContext(context.Background())
}

func (i *ConfigurationSetEventDestination) ToConfigurationSetEventDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationOutput)
}

// ConfigurationSetEventDestinationArrayInput is an input type that accepts ConfigurationSetEventDestinationArray and ConfigurationSetEventDestinationArrayOutput values.
// You can construct a concrete instance of `ConfigurationSetEventDestinationArrayInput` via:
//
//	ConfigurationSetEventDestinationArray{ ConfigurationSetEventDestinationArgs{...} }
type ConfigurationSetEventDestinationArrayInput interface {
	pulumi.Input

	ToConfigurationSetEventDestinationArrayOutput() ConfigurationSetEventDestinationArrayOutput
	ToConfigurationSetEventDestinationArrayOutputWithContext(context.Context) ConfigurationSetEventDestinationArrayOutput
}

type ConfigurationSetEventDestinationArray []ConfigurationSetEventDestinationInput

func (ConfigurationSetEventDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationSetEventDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationArray) ToConfigurationSetEventDestinationArrayOutput() ConfigurationSetEventDestinationArrayOutput {
	return i.ToConfigurationSetEventDestinationArrayOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationArray) ToConfigurationSetEventDestinationArrayOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationArrayOutput)
}

// ConfigurationSetEventDestinationMapInput is an input type that accepts ConfigurationSetEventDestinationMap and ConfigurationSetEventDestinationMapOutput values.
// You can construct a concrete instance of `ConfigurationSetEventDestinationMapInput` via:
//
//	ConfigurationSetEventDestinationMap{ "key": ConfigurationSetEventDestinationArgs{...} }
type ConfigurationSetEventDestinationMapInput interface {
	pulumi.Input

	ToConfigurationSetEventDestinationMapOutput() ConfigurationSetEventDestinationMapOutput
	ToConfigurationSetEventDestinationMapOutputWithContext(context.Context) ConfigurationSetEventDestinationMapOutput
}

type ConfigurationSetEventDestinationMap map[string]ConfigurationSetEventDestinationInput

func (ConfigurationSetEventDestinationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationSetEventDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationMap) ToConfigurationSetEventDestinationMapOutput() ConfigurationSetEventDestinationMapOutput {
	return i.ToConfigurationSetEventDestinationMapOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationMap) ToConfigurationSetEventDestinationMapOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationMapOutput)
}

type ConfigurationSetEventDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSetEventDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationOutput) ToConfigurationSetEventDestinationOutput() ConfigurationSetEventDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationOutput) ToConfigurationSetEventDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationOutput) ConfigurationSetName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationSetEventDestination) pulumi.StringOutput { return v.ConfigurationSetName }).(pulumi.StringOutput)
}

func (o ConfigurationSetEventDestinationOutput) EventDestination() ConfigurationSetEventDestinationEventDestinationOutput {
	return o.ApplyT(func(v *ConfigurationSetEventDestination) ConfigurationSetEventDestinationEventDestinationOutput {
		return v.EventDestination
	}).(ConfigurationSetEventDestinationEventDestinationOutput)
}

func (o ConfigurationSetEventDestinationOutput) EventDestinationName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationSetEventDestination) pulumi.StringOutput { return v.EventDestinationName }).(pulumi.StringOutput)
}

type ConfigurationSetEventDestinationArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationSetEventDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationArrayOutput) ToConfigurationSetEventDestinationArrayOutput() ConfigurationSetEventDestinationArrayOutput {
	return o
}

func (o ConfigurationSetEventDestinationArrayOutput) ToConfigurationSetEventDestinationArrayOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationArrayOutput {
	return o
}

func (o ConfigurationSetEventDestinationArrayOutput) Index(i pulumi.IntInput) ConfigurationSetEventDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationSetEventDestination {
		return vs[0].([]*ConfigurationSetEventDestination)[vs[1].(int)]
	}).(ConfigurationSetEventDestinationOutput)
}

type ConfigurationSetEventDestinationMapOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationSetEventDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationMapOutput) ToConfigurationSetEventDestinationMapOutput() ConfigurationSetEventDestinationMapOutput {
	return o
}

func (o ConfigurationSetEventDestinationMapOutput) ToConfigurationSetEventDestinationMapOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationMapOutput {
	return o
}

func (o ConfigurationSetEventDestinationMapOutput) MapIndex(k pulumi.StringInput) ConfigurationSetEventDestinationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationSetEventDestination {
		return vs[0].(map[string]*ConfigurationSetEventDestination)[vs[1].(string)]
	}).(ConfigurationSetEventDestinationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetEventDestinationInput)(nil)).Elem(), &ConfigurationSetEventDestination{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetEventDestinationArrayInput)(nil)).Elem(), ConfigurationSetEventDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetEventDestinationMapInput)(nil)).Elem(), ConfigurationSetEventDestinationMap{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationMapOutput{})
}
