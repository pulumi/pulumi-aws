// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/sesv2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sesv2.LookupDedicatedIpPool(ctx, &sesv2.LookupDedicatedIpPoolArgs{
//				PoolName: "my-pool",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDedicatedIpPool(ctx *pulumi.Context, args *LookupDedicatedIpPoolArgs, opts ...pulumi.InvokeOption) (*LookupDedicatedIpPoolResult, error) {
	var rv LookupDedicatedIpPoolResult
	err := ctx.Invoke("aws:sesv2/getDedicatedIpPool:getDedicatedIpPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDedicatedIpPool.
type LookupDedicatedIpPoolArgs struct {
	// Name of the dedicated IP pool.
	PoolName string `pulumi:"poolName"`
	// A map of tags attached to the pool.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getDedicatedIpPool.
type LookupDedicatedIpPoolResult struct {
	// ARN of the Dedicated IP Pool.
	Arn string `pulumi:"arn"`
	// A list of objects describing the pool's dedicated IP's. See `dedicatedIps`.
	DedicatedIps []GetDedicatedIpPoolDedicatedIp `pulumi:"dedicatedIps"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	PoolName string `pulumi:"poolName"`
	// A map of tags attached to the pool.
	Tags map[string]string `pulumi:"tags"`
}

func LookupDedicatedIpPoolOutput(ctx *pulumi.Context, args LookupDedicatedIpPoolOutputArgs, opts ...pulumi.InvokeOption) LookupDedicatedIpPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDedicatedIpPoolResult, error) {
			args := v.(LookupDedicatedIpPoolArgs)
			r, err := LookupDedicatedIpPool(ctx, &args, opts...)
			var s LookupDedicatedIpPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDedicatedIpPoolResultOutput)
}

// A collection of arguments for invoking getDedicatedIpPool.
type LookupDedicatedIpPoolOutputArgs struct {
	// Name of the dedicated IP pool.
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// A map of tags attached to the pool.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupDedicatedIpPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDedicatedIpPoolArgs)(nil)).Elem()
}

// A collection of values returned by getDedicatedIpPool.
type LookupDedicatedIpPoolResultOutput struct{ *pulumi.OutputState }

func (LookupDedicatedIpPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDedicatedIpPoolResult)(nil)).Elem()
}

func (o LookupDedicatedIpPoolResultOutput) ToLookupDedicatedIpPoolResultOutput() LookupDedicatedIpPoolResultOutput {
	return o
}

func (o LookupDedicatedIpPoolResultOutput) ToLookupDedicatedIpPoolResultOutputWithContext(ctx context.Context) LookupDedicatedIpPoolResultOutput {
	return o
}

// ARN of the Dedicated IP Pool.
func (o LookupDedicatedIpPoolResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedIpPoolResult) string { return v.Arn }).(pulumi.StringOutput)
}

// A list of objects describing the pool's dedicated IP's. See `dedicatedIps`.
func (o LookupDedicatedIpPoolResultOutput) DedicatedIps() GetDedicatedIpPoolDedicatedIpArrayOutput {
	return o.ApplyT(func(v LookupDedicatedIpPoolResult) []GetDedicatedIpPoolDedicatedIp { return v.DedicatedIps }).(GetDedicatedIpPoolDedicatedIpArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDedicatedIpPoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedIpPoolResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDedicatedIpPoolResultOutput) PoolName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDedicatedIpPoolResult) string { return v.PoolName }).(pulumi.StringOutput)
}

// A map of tags attached to the pool.
func (o LookupDedicatedIpPoolResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDedicatedIpPoolResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDedicatedIpPoolResultOutput{})
}
