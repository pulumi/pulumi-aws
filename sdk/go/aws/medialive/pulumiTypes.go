// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InputDestination struct {
	// A unique name for the location the RTMP stream is being pushed to.
	StreamName string `pulumi:"streamName"`
}

// InputDestinationInput is an input type that accepts InputDestinationArgs and InputDestinationOutput values.
// You can construct a concrete instance of `InputDestinationInput` via:
//
//	InputDestinationArgs{...}
type InputDestinationInput interface {
	pulumi.Input

	ToInputDestinationOutput() InputDestinationOutput
	ToInputDestinationOutputWithContext(context.Context) InputDestinationOutput
}

type InputDestinationArgs struct {
	// A unique name for the location the RTMP stream is being pushed to.
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (InputDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDestination)(nil)).Elem()
}

func (i InputDestinationArgs) ToInputDestinationOutput() InputDestinationOutput {
	return i.ToInputDestinationOutputWithContext(context.Background())
}

func (i InputDestinationArgs) ToInputDestinationOutputWithContext(ctx context.Context) InputDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDestinationOutput)
}

// InputDestinationArrayInput is an input type that accepts InputDestinationArray and InputDestinationArrayOutput values.
// You can construct a concrete instance of `InputDestinationArrayInput` via:
//
//	InputDestinationArray{ InputDestinationArgs{...} }
type InputDestinationArrayInput interface {
	pulumi.Input

	ToInputDestinationArrayOutput() InputDestinationArrayOutput
	ToInputDestinationArrayOutputWithContext(context.Context) InputDestinationArrayOutput
}

type InputDestinationArray []InputDestinationInput

func (InputDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDestination)(nil)).Elem()
}

func (i InputDestinationArray) ToInputDestinationArrayOutput() InputDestinationArrayOutput {
	return i.ToInputDestinationArrayOutputWithContext(context.Background())
}

func (i InputDestinationArray) ToInputDestinationArrayOutputWithContext(ctx context.Context) InputDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputDestinationArrayOutput)
}

type InputDestinationOutput struct{ *pulumi.OutputState }

func (InputDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputDestination)(nil)).Elem()
}

func (o InputDestinationOutput) ToInputDestinationOutput() InputDestinationOutput {
	return o
}

func (o InputDestinationOutput) ToInputDestinationOutputWithContext(ctx context.Context) InputDestinationOutput {
	return o
}

// A unique name for the location the RTMP stream is being pushed to.
func (o InputDestinationOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v InputDestination) string { return v.StreamName }).(pulumi.StringOutput)
}

type InputDestinationArrayOutput struct{ *pulumi.OutputState }

func (InputDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputDestination)(nil)).Elem()
}

func (o InputDestinationArrayOutput) ToInputDestinationArrayOutput() InputDestinationArrayOutput {
	return o
}

func (o InputDestinationArrayOutput) ToInputDestinationArrayOutputWithContext(ctx context.Context) InputDestinationArrayOutput {
	return o
}

func (o InputDestinationArrayOutput) Index(i pulumi.IntInput) InputDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputDestination {
		return vs[0].([]InputDestination)[vs[1].(int)]
	}).(InputDestinationOutput)
}

type InputInputDevice struct {
	// The unique ID for the device.
	Id string `pulumi:"id"`
}

// InputInputDeviceInput is an input type that accepts InputInputDeviceArgs and InputInputDeviceOutput values.
// You can construct a concrete instance of `InputInputDeviceInput` via:
//
//	InputInputDeviceArgs{...}
type InputInputDeviceInput interface {
	pulumi.Input

	ToInputInputDeviceOutput() InputInputDeviceOutput
	ToInputInputDeviceOutputWithContext(context.Context) InputInputDeviceOutput
}

type InputInputDeviceArgs struct {
	// The unique ID for the device.
	Id pulumi.StringInput `pulumi:"id"`
}

func (InputInputDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputInputDevice)(nil)).Elem()
}

func (i InputInputDeviceArgs) ToInputInputDeviceOutput() InputInputDeviceOutput {
	return i.ToInputInputDeviceOutputWithContext(context.Background())
}

func (i InputInputDeviceArgs) ToInputInputDeviceOutputWithContext(ctx context.Context) InputInputDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputInputDeviceOutput)
}

// InputInputDeviceArrayInput is an input type that accepts InputInputDeviceArray and InputInputDeviceArrayOutput values.
// You can construct a concrete instance of `InputInputDeviceArrayInput` via:
//
//	InputInputDeviceArray{ InputInputDeviceArgs{...} }
type InputInputDeviceArrayInput interface {
	pulumi.Input

	ToInputInputDeviceArrayOutput() InputInputDeviceArrayOutput
	ToInputInputDeviceArrayOutputWithContext(context.Context) InputInputDeviceArrayOutput
}

type InputInputDeviceArray []InputInputDeviceInput

func (InputInputDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputInputDevice)(nil)).Elem()
}

func (i InputInputDeviceArray) ToInputInputDeviceArrayOutput() InputInputDeviceArrayOutput {
	return i.ToInputInputDeviceArrayOutputWithContext(context.Background())
}

func (i InputInputDeviceArray) ToInputInputDeviceArrayOutputWithContext(ctx context.Context) InputInputDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputInputDeviceArrayOutput)
}

type InputInputDeviceOutput struct{ *pulumi.OutputState }

func (InputInputDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputInputDevice)(nil)).Elem()
}

func (o InputInputDeviceOutput) ToInputInputDeviceOutput() InputInputDeviceOutput {
	return o
}

func (o InputInputDeviceOutput) ToInputInputDeviceOutputWithContext(ctx context.Context) InputInputDeviceOutput {
	return o
}

// The unique ID for the device.
func (o InputInputDeviceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InputInputDevice) string { return v.Id }).(pulumi.StringOutput)
}

type InputInputDeviceArrayOutput struct{ *pulumi.OutputState }

func (InputInputDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputInputDevice)(nil)).Elem()
}

func (o InputInputDeviceArrayOutput) ToInputInputDeviceArrayOutput() InputInputDeviceArrayOutput {
	return o
}

func (o InputInputDeviceArrayOutput) ToInputInputDeviceArrayOutputWithContext(ctx context.Context) InputInputDeviceArrayOutput {
	return o
}

func (o InputInputDeviceArrayOutput) Index(i pulumi.IntInput) InputInputDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputInputDevice {
		return vs[0].([]InputInputDevice)[vs[1].(int)]
	}).(InputInputDeviceOutput)
}

type InputMediaConnectFlow struct {
	// The ARN of the MediaConnect Flow
	FlowArn string `pulumi:"flowArn"`
}

// InputMediaConnectFlowInput is an input type that accepts InputMediaConnectFlowArgs and InputMediaConnectFlowOutput values.
// You can construct a concrete instance of `InputMediaConnectFlowInput` via:
//
//	InputMediaConnectFlowArgs{...}
type InputMediaConnectFlowInput interface {
	pulumi.Input

	ToInputMediaConnectFlowOutput() InputMediaConnectFlowOutput
	ToInputMediaConnectFlowOutputWithContext(context.Context) InputMediaConnectFlowOutput
}

type InputMediaConnectFlowArgs struct {
	// The ARN of the MediaConnect Flow
	FlowArn pulumi.StringInput `pulumi:"flowArn"`
}

func (InputMediaConnectFlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputMediaConnectFlow)(nil)).Elem()
}

func (i InputMediaConnectFlowArgs) ToInputMediaConnectFlowOutput() InputMediaConnectFlowOutput {
	return i.ToInputMediaConnectFlowOutputWithContext(context.Background())
}

func (i InputMediaConnectFlowArgs) ToInputMediaConnectFlowOutputWithContext(ctx context.Context) InputMediaConnectFlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputMediaConnectFlowOutput)
}

// InputMediaConnectFlowArrayInput is an input type that accepts InputMediaConnectFlowArray and InputMediaConnectFlowArrayOutput values.
// You can construct a concrete instance of `InputMediaConnectFlowArrayInput` via:
//
//	InputMediaConnectFlowArray{ InputMediaConnectFlowArgs{...} }
type InputMediaConnectFlowArrayInput interface {
	pulumi.Input

	ToInputMediaConnectFlowArrayOutput() InputMediaConnectFlowArrayOutput
	ToInputMediaConnectFlowArrayOutputWithContext(context.Context) InputMediaConnectFlowArrayOutput
}

type InputMediaConnectFlowArray []InputMediaConnectFlowInput

func (InputMediaConnectFlowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputMediaConnectFlow)(nil)).Elem()
}

func (i InputMediaConnectFlowArray) ToInputMediaConnectFlowArrayOutput() InputMediaConnectFlowArrayOutput {
	return i.ToInputMediaConnectFlowArrayOutputWithContext(context.Background())
}

func (i InputMediaConnectFlowArray) ToInputMediaConnectFlowArrayOutputWithContext(ctx context.Context) InputMediaConnectFlowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputMediaConnectFlowArrayOutput)
}

type InputMediaConnectFlowOutput struct{ *pulumi.OutputState }

func (InputMediaConnectFlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputMediaConnectFlow)(nil)).Elem()
}

func (o InputMediaConnectFlowOutput) ToInputMediaConnectFlowOutput() InputMediaConnectFlowOutput {
	return o
}

func (o InputMediaConnectFlowOutput) ToInputMediaConnectFlowOutputWithContext(ctx context.Context) InputMediaConnectFlowOutput {
	return o
}

// The ARN of the MediaConnect Flow
func (o InputMediaConnectFlowOutput) FlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v InputMediaConnectFlow) string { return v.FlowArn }).(pulumi.StringOutput)
}

type InputMediaConnectFlowArrayOutput struct{ *pulumi.OutputState }

func (InputMediaConnectFlowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputMediaConnectFlow)(nil)).Elem()
}

func (o InputMediaConnectFlowArrayOutput) ToInputMediaConnectFlowArrayOutput() InputMediaConnectFlowArrayOutput {
	return o
}

func (o InputMediaConnectFlowArrayOutput) ToInputMediaConnectFlowArrayOutputWithContext(ctx context.Context) InputMediaConnectFlowArrayOutput {
	return o
}

func (o InputMediaConnectFlowArrayOutput) Index(i pulumi.IntInput) InputMediaConnectFlowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputMediaConnectFlow {
		return vs[0].([]InputMediaConnectFlow)[vs[1].(int)]
	}).(InputMediaConnectFlowOutput)
}

type InputSecurityGroupWhitelistRule struct {
	// The IPv4 CIDR that's whitelisted.
	Cidr string `pulumi:"cidr"`
}

// InputSecurityGroupWhitelistRuleInput is an input type that accepts InputSecurityGroupWhitelistRuleArgs and InputSecurityGroupWhitelistRuleOutput values.
// You can construct a concrete instance of `InputSecurityGroupWhitelistRuleInput` via:
//
//	InputSecurityGroupWhitelistRuleArgs{...}
type InputSecurityGroupWhitelistRuleInput interface {
	pulumi.Input

	ToInputSecurityGroupWhitelistRuleOutput() InputSecurityGroupWhitelistRuleOutput
	ToInputSecurityGroupWhitelistRuleOutputWithContext(context.Context) InputSecurityGroupWhitelistRuleOutput
}

type InputSecurityGroupWhitelistRuleArgs struct {
	// The IPv4 CIDR that's whitelisted.
	Cidr pulumi.StringInput `pulumi:"cidr"`
}

func (InputSecurityGroupWhitelistRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSecurityGroupWhitelistRule)(nil)).Elem()
}

func (i InputSecurityGroupWhitelistRuleArgs) ToInputSecurityGroupWhitelistRuleOutput() InputSecurityGroupWhitelistRuleOutput {
	return i.ToInputSecurityGroupWhitelistRuleOutputWithContext(context.Background())
}

func (i InputSecurityGroupWhitelistRuleArgs) ToInputSecurityGroupWhitelistRuleOutputWithContext(ctx context.Context) InputSecurityGroupWhitelistRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSecurityGroupWhitelistRuleOutput)
}

// InputSecurityGroupWhitelistRuleArrayInput is an input type that accepts InputSecurityGroupWhitelistRuleArray and InputSecurityGroupWhitelistRuleArrayOutput values.
// You can construct a concrete instance of `InputSecurityGroupWhitelistRuleArrayInput` via:
//
//	InputSecurityGroupWhitelistRuleArray{ InputSecurityGroupWhitelistRuleArgs{...} }
type InputSecurityGroupWhitelistRuleArrayInput interface {
	pulumi.Input

	ToInputSecurityGroupWhitelistRuleArrayOutput() InputSecurityGroupWhitelistRuleArrayOutput
	ToInputSecurityGroupWhitelistRuleArrayOutputWithContext(context.Context) InputSecurityGroupWhitelistRuleArrayOutput
}

type InputSecurityGroupWhitelistRuleArray []InputSecurityGroupWhitelistRuleInput

func (InputSecurityGroupWhitelistRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSecurityGroupWhitelistRule)(nil)).Elem()
}

func (i InputSecurityGroupWhitelistRuleArray) ToInputSecurityGroupWhitelistRuleArrayOutput() InputSecurityGroupWhitelistRuleArrayOutput {
	return i.ToInputSecurityGroupWhitelistRuleArrayOutputWithContext(context.Background())
}

func (i InputSecurityGroupWhitelistRuleArray) ToInputSecurityGroupWhitelistRuleArrayOutputWithContext(ctx context.Context) InputSecurityGroupWhitelistRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSecurityGroupWhitelistRuleArrayOutput)
}

type InputSecurityGroupWhitelistRuleOutput struct{ *pulumi.OutputState }

func (InputSecurityGroupWhitelistRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSecurityGroupWhitelistRule)(nil)).Elem()
}

func (o InputSecurityGroupWhitelistRuleOutput) ToInputSecurityGroupWhitelistRuleOutput() InputSecurityGroupWhitelistRuleOutput {
	return o
}

func (o InputSecurityGroupWhitelistRuleOutput) ToInputSecurityGroupWhitelistRuleOutputWithContext(ctx context.Context) InputSecurityGroupWhitelistRuleOutput {
	return o
}

// The IPv4 CIDR that's whitelisted.
func (o InputSecurityGroupWhitelistRuleOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v InputSecurityGroupWhitelistRule) string { return v.Cidr }).(pulumi.StringOutput)
}

type InputSecurityGroupWhitelistRuleArrayOutput struct{ *pulumi.OutputState }

func (InputSecurityGroupWhitelistRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSecurityGroupWhitelistRule)(nil)).Elem()
}

func (o InputSecurityGroupWhitelistRuleArrayOutput) ToInputSecurityGroupWhitelistRuleArrayOutput() InputSecurityGroupWhitelistRuleArrayOutput {
	return o
}

func (o InputSecurityGroupWhitelistRuleArrayOutput) ToInputSecurityGroupWhitelistRuleArrayOutputWithContext(ctx context.Context) InputSecurityGroupWhitelistRuleArrayOutput {
	return o
}

func (o InputSecurityGroupWhitelistRuleArrayOutput) Index(i pulumi.IntInput) InputSecurityGroupWhitelistRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputSecurityGroupWhitelistRule {
		return vs[0].([]InputSecurityGroupWhitelistRule)[vs[1].(int)]
	}).(InputSecurityGroupWhitelistRuleOutput)
}

type InputSource struct {
	// The key used to extract the password from EC2 Parameter store.
	PasswordParam string `pulumi:"passwordParam"`
	// The URL where the stream is pulled from.
	Url string `pulumi:"url"`
	// The username for the input source.
	Username string `pulumi:"username"`
}

// InputSourceInput is an input type that accepts InputSourceArgs and InputSourceOutput values.
// You can construct a concrete instance of `InputSourceInput` via:
//
//	InputSourceArgs{...}
type InputSourceInput interface {
	pulumi.Input

	ToInputSourceOutput() InputSourceOutput
	ToInputSourceOutputWithContext(context.Context) InputSourceOutput
}

type InputSourceArgs struct {
	// The key used to extract the password from EC2 Parameter store.
	PasswordParam pulumi.StringInput `pulumi:"passwordParam"`
	// The URL where the stream is pulled from.
	Url pulumi.StringInput `pulumi:"url"`
	// The username for the input source.
	Username pulumi.StringInput `pulumi:"username"`
}

func (InputSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSource)(nil)).Elem()
}

func (i InputSourceArgs) ToInputSourceOutput() InputSourceOutput {
	return i.ToInputSourceOutputWithContext(context.Background())
}

func (i InputSourceArgs) ToInputSourceOutputWithContext(ctx context.Context) InputSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSourceOutput)
}

// InputSourceArrayInput is an input type that accepts InputSourceArray and InputSourceArrayOutput values.
// You can construct a concrete instance of `InputSourceArrayInput` via:
//
//	InputSourceArray{ InputSourceArgs{...} }
type InputSourceArrayInput interface {
	pulumi.Input

	ToInputSourceArrayOutput() InputSourceArrayOutput
	ToInputSourceArrayOutputWithContext(context.Context) InputSourceArrayOutput
}

type InputSourceArray []InputSourceInput

func (InputSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSource)(nil)).Elem()
}

func (i InputSourceArray) ToInputSourceArrayOutput() InputSourceArrayOutput {
	return i.ToInputSourceArrayOutputWithContext(context.Background())
}

func (i InputSourceArray) ToInputSourceArrayOutputWithContext(ctx context.Context) InputSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSourceArrayOutput)
}

type InputSourceOutput struct{ *pulumi.OutputState }

func (InputSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSource)(nil)).Elem()
}

func (o InputSourceOutput) ToInputSourceOutput() InputSourceOutput {
	return o
}

func (o InputSourceOutput) ToInputSourceOutputWithContext(ctx context.Context) InputSourceOutput {
	return o
}

// The key used to extract the password from EC2 Parameter store.
func (o InputSourceOutput) PasswordParam() pulumi.StringOutput {
	return o.ApplyT(func(v InputSource) string { return v.PasswordParam }).(pulumi.StringOutput)
}

// The URL where the stream is pulled from.
func (o InputSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v InputSource) string { return v.Url }).(pulumi.StringOutput)
}

// The username for the input source.
func (o InputSourceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v InputSource) string { return v.Username }).(pulumi.StringOutput)
}

type InputSourceArrayOutput struct{ *pulumi.OutputState }

func (InputSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputSource)(nil)).Elem()
}

func (o InputSourceArrayOutput) ToInputSourceArrayOutput() InputSourceArrayOutput {
	return o
}

func (o InputSourceArrayOutput) ToInputSourceArrayOutputWithContext(ctx context.Context) InputSourceArrayOutput {
	return o
}

func (o InputSourceArrayOutput) Index(i pulumi.IntInput) InputSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputSource {
		return vs[0].([]InputSource)[vs[1].(int)]
	}).(InputSourceOutput)
}

type InputVpc struct {
	// A list of up to 5 EC2 VPC security group IDs to attach to the Input.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of 2 VPC subnet IDs from the same VPC.
	SubnetIds []string `pulumi:"subnetIds"`
}

// InputVpcInput is an input type that accepts InputVpcArgs and InputVpcOutput values.
// You can construct a concrete instance of `InputVpcInput` via:
//
//	InputVpcArgs{...}
type InputVpcInput interface {
	pulumi.Input

	ToInputVpcOutput() InputVpcOutput
	ToInputVpcOutputWithContext(context.Context) InputVpcOutput
}

type InputVpcArgs struct {
	// A list of up to 5 EC2 VPC security group IDs to attach to the Input.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of 2 VPC subnet IDs from the same VPC.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (InputVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputVpc)(nil)).Elem()
}

func (i InputVpcArgs) ToInputVpcOutput() InputVpcOutput {
	return i.ToInputVpcOutputWithContext(context.Background())
}

func (i InputVpcArgs) ToInputVpcOutputWithContext(ctx context.Context) InputVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputVpcOutput)
}

func (i InputVpcArgs) ToInputVpcPtrOutput() InputVpcPtrOutput {
	return i.ToInputVpcPtrOutputWithContext(context.Background())
}

func (i InputVpcArgs) ToInputVpcPtrOutputWithContext(ctx context.Context) InputVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputVpcOutput).ToInputVpcPtrOutputWithContext(ctx)
}

// InputVpcPtrInput is an input type that accepts InputVpcArgs, InputVpcPtr and InputVpcPtrOutput values.
// You can construct a concrete instance of `InputVpcPtrInput` via:
//
//	        InputVpcArgs{...}
//
//	or:
//
//	        nil
type InputVpcPtrInput interface {
	pulumi.Input

	ToInputVpcPtrOutput() InputVpcPtrOutput
	ToInputVpcPtrOutputWithContext(context.Context) InputVpcPtrOutput
}

type inputVpcPtrType InputVpcArgs

func InputVpcPtr(v *InputVpcArgs) InputVpcPtrInput {
	return (*inputVpcPtrType)(v)
}

func (*inputVpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputVpc)(nil)).Elem()
}

func (i *inputVpcPtrType) ToInputVpcPtrOutput() InputVpcPtrOutput {
	return i.ToInputVpcPtrOutputWithContext(context.Background())
}

func (i *inputVpcPtrType) ToInputVpcPtrOutputWithContext(ctx context.Context) InputVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputVpcPtrOutput)
}

type InputVpcOutput struct{ *pulumi.OutputState }

func (InputVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputVpc)(nil)).Elem()
}

func (o InputVpcOutput) ToInputVpcOutput() InputVpcOutput {
	return o
}

func (o InputVpcOutput) ToInputVpcOutputWithContext(ctx context.Context) InputVpcOutput {
	return o
}

func (o InputVpcOutput) ToInputVpcPtrOutput() InputVpcPtrOutput {
	return o.ToInputVpcPtrOutputWithContext(context.Background())
}

func (o InputVpcOutput) ToInputVpcPtrOutputWithContext(ctx context.Context) InputVpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputVpc) *InputVpc {
		return &v
	}).(InputVpcPtrOutput)
}

// A list of up to 5 EC2 VPC security group IDs to attach to the Input.
func (o InputVpcOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InputVpc) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of 2 VPC subnet IDs from the same VPC.
func (o InputVpcOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InputVpc) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type InputVpcPtrOutput struct{ *pulumi.OutputState }

func (InputVpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputVpc)(nil)).Elem()
}

func (o InputVpcPtrOutput) ToInputVpcPtrOutput() InputVpcPtrOutput {
	return o
}

func (o InputVpcPtrOutput) ToInputVpcPtrOutputWithContext(ctx context.Context) InputVpcPtrOutput {
	return o
}

func (o InputVpcPtrOutput) Elem() InputVpcOutput {
	return o.ApplyT(func(v *InputVpc) InputVpc {
		if v != nil {
			return *v
		}
		var ret InputVpc
		return ret
	}).(InputVpcOutput)
}

// A list of up to 5 EC2 VPC security group IDs to attach to the Input.
func (o InputVpcPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InputVpc) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of 2 VPC subnet IDs from the same VPC.
func (o InputVpcPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InputVpc) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

type MultiplexMultiplexSettings struct {
	// Maximum video buffer delay.
	MaximumVideoBufferDelayMilliseconds *int `pulumi:"maximumVideoBufferDelayMilliseconds"`
	// Transport stream bit rate.
	TransportStreamBitrate int `pulumi:"transportStreamBitrate"`
	// Unique ID for each multiplex.
	TransportStreamId int `pulumi:"transportStreamId"`
	// Transport stream reserved bit rate.
	TransportStreamReservedBitrate *int `pulumi:"transportStreamReservedBitrate"`
}

// MultiplexMultiplexSettingsInput is an input type that accepts MultiplexMultiplexSettingsArgs and MultiplexMultiplexSettingsOutput values.
// You can construct a concrete instance of `MultiplexMultiplexSettingsInput` via:
//
//	MultiplexMultiplexSettingsArgs{...}
type MultiplexMultiplexSettingsInput interface {
	pulumi.Input

	ToMultiplexMultiplexSettingsOutput() MultiplexMultiplexSettingsOutput
	ToMultiplexMultiplexSettingsOutputWithContext(context.Context) MultiplexMultiplexSettingsOutput
}

type MultiplexMultiplexSettingsArgs struct {
	// Maximum video buffer delay.
	MaximumVideoBufferDelayMilliseconds pulumi.IntPtrInput `pulumi:"maximumVideoBufferDelayMilliseconds"`
	// Transport stream bit rate.
	TransportStreamBitrate pulumi.IntInput `pulumi:"transportStreamBitrate"`
	// Unique ID for each multiplex.
	TransportStreamId pulumi.IntInput `pulumi:"transportStreamId"`
	// Transport stream reserved bit rate.
	TransportStreamReservedBitrate pulumi.IntPtrInput `pulumi:"transportStreamReservedBitrate"`
}

func (MultiplexMultiplexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexMultiplexSettings)(nil)).Elem()
}

func (i MultiplexMultiplexSettingsArgs) ToMultiplexMultiplexSettingsOutput() MultiplexMultiplexSettingsOutput {
	return i.ToMultiplexMultiplexSettingsOutputWithContext(context.Background())
}

func (i MultiplexMultiplexSettingsArgs) ToMultiplexMultiplexSettingsOutputWithContext(ctx context.Context) MultiplexMultiplexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexMultiplexSettingsOutput)
}

func (i MultiplexMultiplexSettingsArgs) ToMultiplexMultiplexSettingsPtrOutput() MultiplexMultiplexSettingsPtrOutput {
	return i.ToMultiplexMultiplexSettingsPtrOutputWithContext(context.Background())
}

func (i MultiplexMultiplexSettingsArgs) ToMultiplexMultiplexSettingsPtrOutputWithContext(ctx context.Context) MultiplexMultiplexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexMultiplexSettingsOutput).ToMultiplexMultiplexSettingsPtrOutputWithContext(ctx)
}

// MultiplexMultiplexSettingsPtrInput is an input type that accepts MultiplexMultiplexSettingsArgs, MultiplexMultiplexSettingsPtr and MultiplexMultiplexSettingsPtrOutput values.
// You can construct a concrete instance of `MultiplexMultiplexSettingsPtrInput` via:
//
//	        MultiplexMultiplexSettingsArgs{...}
//
//	or:
//
//	        nil
type MultiplexMultiplexSettingsPtrInput interface {
	pulumi.Input

	ToMultiplexMultiplexSettingsPtrOutput() MultiplexMultiplexSettingsPtrOutput
	ToMultiplexMultiplexSettingsPtrOutputWithContext(context.Context) MultiplexMultiplexSettingsPtrOutput
}

type multiplexMultiplexSettingsPtrType MultiplexMultiplexSettingsArgs

func MultiplexMultiplexSettingsPtr(v *MultiplexMultiplexSettingsArgs) MultiplexMultiplexSettingsPtrInput {
	return (*multiplexMultiplexSettingsPtrType)(v)
}

func (*multiplexMultiplexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexMultiplexSettings)(nil)).Elem()
}

func (i *multiplexMultiplexSettingsPtrType) ToMultiplexMultiplexSettingsPtrOutput() MultiplexMultiplexSettingsPtrOutput {
	return i.ToMultiplexMultiplexSettingsPtrOutputWithContext(context.Background())
}

func (i *multiplexMultiplexSettingsPtrType) ToMultiplexMultiplexSettingsPtrOutputWithContext(ctx context.Context) MultiplexMultiplexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexMultiplexSettingsPtrOutput)
}

type MultiplexMultiplexSettingsOutput struct{ *pulumi.OutputState }

func (MultiplexMultiplexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexMultiplexSettings)(nil)).Elem()
}

func (o MultiplexMultiplexSettingsOutput) ToMultiplexMultiplexSettingsOutput() MultiplexMultiplexSettingsOutput {
	return o
}

func (o MultiplexMultiplexSettingsOutput) ToMultiplexMultiplexSettingsOutputWithContext(ctx context.Context) MultiplexMultiplexSettingsOutput {
	return o
}

func (o MultiplexMultiplexSettingsOutput) ToMultiplexMultiplexSettingsPtrOutput() MultiplexMultiplexSettingsPtrOutput {
	return o.ToMultiplexMultiplexSettingsPtrOutputWithContext(context.Background())
}

func (o MultiplexMultiplexSettingsOutput) ToMultiplexMultiplexSettingsPtrOutputWithContext(ctx context.Context) MultiplexMultiplexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexMultiplexSettings) *MultiplexMultiplexSettings {
		return &v
	}).(MultiplexMultiplexSettingsPtrOutput)
}

// Maximum video buffer delay.
func (o MultiplexMultiplexSettingsOutput) MaximumVideoBufferDelayMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexMultiplexSettings) *int { return v.MaximumVideoBufferDelayMilliseconds }).(pulumi.IntPtrOutput)
}

// Transport stream bit rate.
func (o MultiplexMultiplexSettingsOutput) TransportStreamBitrate() pulumi.IntOutput {
	return o.ApplyT(func(v MultiplexMultiplexSettings) int { return v.TransportStreamBitrate }).(pulumi.IntOutput)
}

// Unique ID for each multiplex.
func (o MultiplexMultiplexSettingsOutput) TransportStreamId() pulumi.IntOutput {
	return o.ApplyT(func(v MultiplexMultiplexSettings) int { return v.TransportStreamId }).(pulumi.IntOutput)
}

// Transport stream reserved bit rate.
func (o MultiplexMultiplexSettingsOutput) TransportStreamReservedBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexMultiplexSettings) *int { return v.TransportStreamReservedBitrate }).(pulumi.IntPtrOutput)
}

type MultiplexMultiplexSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiplexMultiplexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexMultiplexSettings)(nil)).Elem()
}

func (o MultiplexMultiplexSettingsPtrOutput) ToMultiplexMultiplexSettingsPtrOutput() MultiplexMultiplexSettingsPtrOutput {
	return o
}

func (o MultiplexMultiplexSettingsPtrOutput) ToMultiplexMultiplexSettingsPtrOutputWithContext(ctx context.Context) MultiplexMultiplexSettingsPtrOutput {
	return o
}

func (o MultiplexMultiplexSettingsPtrOutput) Elem() MultiplexMultiplexSettingsOutput {
	return o.ApplyT(func(v *MultiplexMultiplexSettings) MultiplexMultiplexSettings {
		if v != nil {
			return *v
		}
		var ret MultiplexMultiplexSettings
		return ret
	}).(MultiplexMultiplexSettingsOutput)
}

// Maximum video buffer delay.
func (o MultiplexMultiplexSettingsPtrOutput) MaximumVideoBufferDelayMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexMultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaximumVideoBufferDelayMilliseconds
	}).(pulumi.IntPtrOutput)
}

// Transport stream bit rate.
func (o MultiplexMultiplexSettingsPtrOutput) TransportStreamBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexMultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TransportStreamBitrate
	}).(pulumi.IntPtrOutput)
}

// Unique ID for each multiplex.
func (o MultiplexMultiplexSettingsPtrOutput) TransportStreamId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexMultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TransportStreamId
	}).(pulumi.IntPtrOutput)
}

// Transport stream reserved bit rate.
func (o MultiplexMultiplexSettingsPtrOutput) TransportStreamReservedBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexMultiplexSettings) *int {
		if v == nil {
			return nil
		}
		return v.TransportStreamReservedBitrate
	}).(pulumi.IntPtrOutput)
}

type MultiplexProgramMultiplexProgramSettings struct {
	// Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
	PreferredChannelPipeline string `pulumi:"preferredChannelPipeline"`
	// Unique program number.
	ProgramNumber int `pulumi:"programNumber"`
	// Service Descriptor. See Service Descriptor for more details.
	ServiceDescriptor *MultiplexProgramMultiplexProgramSettingsServiceDescriptor `pulumi:"serviceDescriptor"`
	// Video settings. See Video Settings for more details.
	VideoSettings *MultiplexProgramMultiplexProgramSettingsVideoSettings `pulumi:"videoSettings"`
}

// MultiplexProgramMultiplexProgramSettingsInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsArgs and MultiplexProgramMultiplexProgramSettingsOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsInput` via:
//
//	MultiplexProgramMultiplexProgramSettingsArgs{...}
type MultiplexProgramMultiplexProgramSettingsInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsOutput() MultiplexProgramMultiplexProgramSettingsOutput
	ToMultiplexProgramMultiplexProgramSettingsOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsOutput
}

type MultiplexProgramMultiplexProgramSettingsArgs struct {
	// Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
	PreferredChannelPipeline pulumi.StringInput `pulumi:"preferredChannelPipeline"`
	// Unique program number.
	ProgramNumber pulumi.IntInput `pulumi:"programNumber"`
	// Service Descriptor. See Service Descriptor for more details.
	ServiceDescriptor MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrInput `pulumi:"serviceDescriptor"`
	// Video settings. See Video Settings for more details.
	VideoSettings MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrInput `pulumi:"videoSettings"`
}

func (MultiplexProgramMultiplexProgramSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettings)(nil)).Elem()
}

func (i MultiplexProgramMultiplexProgramSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsOutput() MultiplexProgramMultiplexProgramSettingsOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsOutput)
}

func (i MultiplexProgramMultiplexProgramSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsOutput).ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(ctx)
}

// MultiplexProgramMultiplexProgramSettingsPtrInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsArgs, MultiplexProgramMultiplexProgramSettingsPtr and MultiplexProgramMultiplexProgramSettingsPtrOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsPtrInput` via:
//
//	        MultiplexProgramMultiplexProgramSettingsArgs{...}
//
//	or:
//
//	        nil
type MultiplexProgramMultiplexProgramSettingsPtrInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsPtrOutput
	ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsPtrOutput
}

type multiplexProgramMultiplexProgramSettingsPtrType MultiplexProgramMultiplexProgramSettingsArgs

func MultiplexProgramMultiplexProgramSettingsPtr(v *MultiplexProgramMultiplexProgramSettingsArgs) MultiplexProgramMultiplexProgramSettingsPtrInput {
	return (*multiplexProgramMultiplexProgramSettingsPtrType)(v)
}

func (*multiplexProgramMultiplexProgramSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettings)(nil)).Elem()
}

func (i *multiplexProgramMultiplexProgramSettingsPtrType) ToMultiplexProgramMultiplexProgramSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(context.Background())
}

func (i *multiplexProgramMultiplexProgramSettingsPtrType) ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettings)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsOutput() MultiplexProgramMultiplexProgramSettingsOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return o.ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(context.Background())
}

func (o MultiplexProgramMultiplexProgramSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexProgramMultiplexProgramSettings) *MultiplexProgramMultiplexProgramSettings {
		return &v
	}).(MultiplexProgramMultiplexProgramSettingsPtrOutput)
}

// Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
func (o MultiplexProgramMultiplexProgramSettingsOutput) PreferredChannelPipeline() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettings) string { return v.PreferredChannelPipeline }).(pulumi.StringOutput)
}

// Unique program number.
func (o MultiplexProgramMultiplexProgramSettingsOutput) ProgramNumber() pulumi.IntOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettings) int { return v.ProgramNumber }).(pulumi.IntOutput)
}

// Service Descriptor. See Service Descriptor for more details.
func (o MultiplexProgramMultiplexProgramSettingsOutput) ServiceDescriptor() MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettings) *MultiplexProgramMultiplexProgramSettingsServiceDescriptor {
		return v.ServiceDescriptor
	}).(MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput)
}

// Video settings. See Video Settings for more details.
func (o MultiplexProgramMultiplexProgramSettingsOutput) VideoSettings() MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettings) *MultiplexProgramMultiplexProgramSettingsVideoSettings {
		return v.VideoSettings
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettings)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsPtrOutput) ToMultiplexProgramMultiplexProgramSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsPtrOutput) ToMultiplexProgramMultiplexProgramSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsPtrOutput) Elem() MultiplexProgramMultiplexProgramSettingsOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettings) MultiplexProgramMultiplexProgramSettings {
		if v != nil {
			return *v
		}
		var ret MultiplexProgramMultiplexProgramSettings
		return ret
	}).(MultiplexProgramMultiplexProgramSettingsOutput)
}

// Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
func (o MultiplexProgramMultiplexProgramSettingsPtrOutput) PreferredChannelPipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettings) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredChannelPipeline
	}).(pulumi.StringPtrOutput)
}

// Unique program number.
func (o MultiplexProgramMultiplexProgramSettingsPtrOutput) ProgramNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ProgramNumber
	}).(pulumi.IntPtrOutput)
}

// Service Descriptor. See Service Descriptor for more details.
func (o MultiplexProgramMultiplexProgramSettingsPtrOutput) ServiceDescriptor() MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettings) *MultiplexProgramMultiplexProgramSettingsServiceDescriptor {
		if v == nil {
			return nil
		}
		return v.ServiceDescriptor
	}).(MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput)
}

// Video settings. See Video Settings for more details.
func (o MultiplexProgramMultiplexProgramSettingsPtrOutput) VideoSettings() MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettings) *MultiplexProgramMultiplexProgramSettingsVideoSettings {
		if v == nil {
			return nil
		}
		return v.VideoSettings
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsServiceDescriptor struct {
	// Unique provider name.
	ProviderName string `pulumi:"providerName"`
	// Unique service name.
	ServiceName string `pulumi:"serviceName"`
}

// MultiplexProgramMultiplexProgramSettingsServiceDescriptorInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs and MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsServiceDescriptorInput` via:
//
//	MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs{...}
type MultiplexProgramMultiplexProgramSettingsServiceDescriptorInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput
	ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput
}

type MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs struct {
	// Unique provider name.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Unique service name.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsServiceDescriptor)(nil)).Elem()
}

func (i MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput)
}

func (i MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput).ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(ctx)
}

// MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs, MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtr and MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrInput` via:
//
//	        MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs{...}
//
//	or:
//
//	        nil
type MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput
	ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput
}

type multiplexProgramMultiplexProgramSettingsServiceDescriptorPtrType MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs

func MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtr(v *MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs) MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrInput {
	return (*multiplexProgramMultiplexProgramSettingsServiceDescriptorPtrType)(v)
}

func (*multiplexProgramMultiplexProgramSettingsServiceDescriptorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettingsServiceDescriptor)(nil)).Elem()
}

func (i *multiplexProgramMultiplexProgramSettingsServiceDescriptorPtrType) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(context.Background())
}

func (i *multiplexProgramMultiplexProgramSettingsServiceDescriptorPtrType) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsServiceDescriptor)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return o.ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(context.Background())
}

func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexProgramMultiplexProgramSettingsServiceDescriptor) *MultiplexProgramMultiplexProgramSettingsServiceDescriptor {
		return &v
	}).(MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput)
}

// Unique provider name.
func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettingsServiceDescriptor) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Unique service name.
func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettingsServiceDescriptor) string { return v.ServiceName }).(pulumi.StringOutput)
}

type MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettingsServiceDescriptor)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput() MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput) ToMultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput) Elem() MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsServiceDescriptor) MultiplexProgramMultiplexProgramSettingsServiceDescriptor {
		if v != nil {
			return *v
		}
		var ret MultiplexProgramMultiplexProgramSettingsServiceDescriptor
		return ret
	}).(MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput)
}

// Unique provider name.
func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsServiceDescriptor) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderName
	}).(pulumi.StringPtrOutput)
}

// Unique service name.
func (o MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsServiceDescriptor) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsVideoSettings struct {
	// Constant bitrate value.
	ConstantBitrate *int `pulumi:"constantBitrate"`
	// Statmux settings. See Statmux Settings for more details.
	StatmuxSettings *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings `pulumi:"statmuxSettings"`
}

// MultiplexProgramMultiplexProgramSettingsVideoSettingsInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs and MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsVideoSettingsInput` via:
//
//	MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs{...}
type MultiplexProgramMultiplexProgramSettingsVideoSettingsInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput
	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput
}

type MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs struct {
	// Constant bitrate value.
	ConstantBitrate pulumi.IntPtrInput `pulumi:"constantBitrate"`
	// Statmux settings. See Statmux Settings for more details.
	StatmuxSettings MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrInput `pulumi:"statmuxSettings"`
}

func (MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettings)(nil)).Elem()
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput)
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput).ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(ctx)
}

// MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs, MultiplexProgramMultiplexProgramSettingsVideoSettingsPtr and MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrInput` via:
//
//	        MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs{...}
//
//	or:
//
//	        nil
type MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput
	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput
}

type multiplexProgramMultiplexProgramSettingsVideoSettingsPtrType MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs

func MultiplexProgramMultiplexProgramSettingsVideoSettingsPtr(v *MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs) MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrInput {
	return (*multiplexProgramMultiplexProgramSettingsVideoSettingsPtrType)(v)
}

func (*multiplexProgramMultiplexProgramSettingsVideoSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettingsVideoSettings)(nil)).Elem()
}

func (i *multiplexProgramMultiplexProgramSettingsVideoSettingsPtrType) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(context.Background())
}

func (i *multiplexProgramMultiplexProgramSettingsVideoSettingsPtrType) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettings)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return o.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(context.Background())
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexProgramMultiplexProgramSettingsVideoSettings) *MultiplexProgramMultiplexProgramSettingsVideoSettings {
		return &v
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput)
}

// Constant bitrate value.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput) ConstantBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettingsVideoSettings) *int { return v.ConstantBitrate }).(pulumi.IntPtrOutput)
}

// Statmux settings. See Statmux Settings for more details.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput) StatmuxSettings() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettingsVideoSettings) *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings {
		return v.StatmuxSettings
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettingsVideoSettings)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput) Elem() MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsVideoSettings) MultiplexProgramMultiplexProgramSettingsVideoSettings {
		if v != nil {
			return *v
		}
		var ret MultiplexProgramMultiplexProgramSettingsVideoSettings
		return ret
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput)
}

// Constant bitrate value.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput) ConstantBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsVideoSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConstantBitrate
	}).(pulumi.IntPtrOutput)
}

// Statmux settings. See Statmux Settings for more details.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput) StatmuxSettings() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsVideoSettings) *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings {
		if v == nil {
			return nil
		}
		return v.StatmuxSettings
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings struct {
	// Maximum bitrate.
	MaximumBitrate *int `pulumi:"maximumBitrate"`
	// Minimum bitrate.
	MinimumBitrate *int `pulumi:"minimumBitrate"`
	// Priority value.
	Priority *int `pulumi:"priority"`
}

// MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs and MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsInput` via:
//
//	MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs{...}
type MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput
	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput
}

type MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs struct {
	// Maximum bitrate.
	MaximumBitrate pulumi.IntPtrInput `pulumi:"maximumBitrate"`
	// Minimum bitrate.
	MinimumBitrate pulumi.IntPtrInput `pulumi:"minimumBitrate"`
	// Priority value.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings)(nil)).Elem()
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput)
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(context.Background())
}

func (i MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput).ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(ctx)
}

// MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrInput is an input type that accepts MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs, MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtr and MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput values.
// You can construct a concrete instance of `MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrInput` via:
//
//	        MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs{...}
//
//	or:
//
//	        nil
type MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrInput interface {
	pulumi.Input

	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput
	ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput
}

type multiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrType MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs

func MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtr(v *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrInput {
	return (*multiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrType)(v)
}

func (*multiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings)(nil)).Elem()
}

func (i *multiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrType) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return i.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(context.Background())
}

func (i *multiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrType) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return o.ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(context.Background())
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings {
		return &v
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput)
}

// Maximum bitrate.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) MaximumBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) *int {
		return v.MaximumBitrate
	}).(pulumi.IntPtrOutput)
}

// Minimum bitrate.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) MinimumBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) *int {
		return v.MinimumBitrate
	}).(pulumi.IntPtrOutput)
}

// Priority value.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput struct{ *pulumi.OutputState }

func (MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings)(nil)).Elem()
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput) ToMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutputWithContext(ctx context.Context) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput {
	return o
}

func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput) Elem() MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings {
		if v != nil {
			return *v
		}
		var ret MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings
		return ret
	}).(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput)
}

// Maximum bitrate.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput) MaximumBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaximumBitrate
	}).(pulumi.IntPtrOutput)
}

// Minimum bitrate.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput) MinimumBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinimumBitrate
	}).(pulumi.IntPtrOutput)
}

// Priority value.
func (o MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettings) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InputDestinationInput)(nil)).Elem(), InputDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputDestinationArrayInput)(nil)).Elem(), InputDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputInputDeviceInput)(nil)).Elem(), InputInputDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputInputDeviceArrayInput)(nil)).Elem(), InputInputDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputMediaConnectFlowInput)(nil)).Elem(), InputMediaConnectFlowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputMediaConnectFlowArrayInput)(nil)).Elem(), InputMediaConnectFlowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSecurityGroupWhitelistRuleInput)(nil)).Elem(), InputSecurityGroupWhitelistRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSecurityGroupWhitelistRuleArrayInput)(nil)).Elem(), InputSecurityGroupWhitelistRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSourceInput)(nil)).Elem(), InputSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSourceArrayInput)(nil)).Elem(), InputSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputVpcInput)(nil)).Elem(), InputVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputVpcPtrInput)(nil)).Elem(), InputVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexMultiplexSettingsInput)(nil)).Elem(), MultiplexMultiplexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexMultiplexSettingsPtrInput)(nil)).Elem(), MultiplexMultiplexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsPtrInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsServiceDescriptorInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsServiceDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettingsInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsVideoSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrInput)(nil)).Elem(), MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsArgs{})
	pulumi.RegisterOutputType(InputDestinationOutput{})
	pulumi.RegisterOutputType(InputDestinationArrayOutput{})
	pulumi.RegisterOutputType(InputInputDeviceOutput{})
	pulumi.RegisterOutputType(InputInputDeviceArrayOutput{})
	pulumi.RegisterOutputType(InputMediaConnectFlowOutput{})
	pulumi.RegisterOutputType(InputMediaConnectFlowArrayOutput{})
	pulumi.RegisterOutputType(InputSecurityGroupWhitelistRuleOutput{})
	pulumi.RegisterOutputType(InputSecurityGroupWhitelistRuleArrayOutput{})
	pulumi.RegisterOutputType(InputSourceOutput{})
	pulumi.RegisterOutputType(InputSourceArrayOutput{})
	pulumi.RegisterOutputType(InputVpcOutput{})
	pulumi.RegisterOutputType(InputVpcPtrOutput{})
	pulumi.RegisterOutputType(MultiplexMultiplexSettingsOutput{})
	pulumi.RegisterOutputType(MultiplexMultiplexSettingsPtrOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsPtrOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsServiceDescriptorOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsServiceDescriptorPtrOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsVideoSettingsOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsVideoSettingsPtrOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsOutput{})
	pulumi.RegisterOutputType(MultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsPtrOutput{})
}
