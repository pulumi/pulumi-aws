// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medialive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Elemental MediaLive Input.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/medialive"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := medialive.LookupInput(ctx, &medialive.LookupInputArgs{
//				Id: exampleAwsMedialiveInput.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupInput(ctx *pulumi.Context, args *LookupInputArgs, opts ...pulumi.InvokeOption) (*LookupInputResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInputResult
	err := ctx.Invoke("aws:medialive/getInput:getInput", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInput.
type LookupInputArgs struct {
	// The ID of the Input.
	Id string `pulumi:"id"`
}

// A collection of values returned by getInput.
type LookupInputResult struct {
	// ARN of the Input.
	Arn string `pulumi:"arn"`
	// Channels attached to Input.
	AttachedChannels []string              `pulumi:"attachedChannels"`
	Destinations     []GetInputDestination `pulumi:"destinations"`
	Id               string                `pulumi:"id"`
	// The input class.
	InputClass string `pulumi:"inputClass"`
	// Settings for the devices.
	InputDevices []GetInputInputDevice `pulumi:"inputDevices"`
	// A list of IDs for all Inputs which are partners of this one.
	InputPartnerIds []string `pulumi:"inputPartnerIds"`
	// Source type of the input.
	InputSourceType string `pulumi:"inputSourceType"`
	// A list of the MediaConnect Flows.
	MediaConnectFlows []GetInputMediaConnectFlow `pulumi:"mediaConnectFlows"`
	// Name of the input.
	Name string `pulumi:"name"`
	// The ARN of the role this input assumes during and after creation.
	RoleArn string `pulumi:"roleArn"`
	// List of input security groups.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The source URLs for a PULL-type input.
	Sources []GetInputSource `pulumi:"sources"`
	// The state of the input.
	State string `pulumi:"state"`
	// A map of tags assigned to the Input.
	Tags map[string]string `pulumi:"tags"`
	// The type of the input.
	Type string `pulumi:"type"`
}

func LookupInputOutput(ctx *pulumi.Context, args LookupInputOutputArgs, opts ...pulumi.InvokeOption) LookupInputResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInputResult, error) {
			args := v.(LookupInputArgs)
			r, err := LookupInput(ctx, &args, opts...)
			var s LookupInputResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInputResultOutput)
}

// A collection of arguments for invoking getInput.
type LookupInputOutputArgs struct {
	// The ID of the Input.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupInputOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInputArgs)(nil)).Elem()
}

// A collection of values returned by getInput.
type LookupInputResultOutput struct{ *pulumi.OutputState }

func (LookupInputResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInputResult)(nil)).Elem()
}

func (o LookupInputResultOutput) ToLookupInputResultOutput() LookupInputResultOutput {
	return o
}

func (o LookupInputResultOutput) ToLookupInputResultOutputWithContext(ctx context.Context) LookupInputResultOutput {
	return o
}

// ARN of the Input.
func (o LookupInputResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Channels attached to Input.
func (o LookupInputResultOutput) AttachedChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInputResult) []string { return v.AttachedChannels }).(pulumi.StringArrayOutput)
}

func (o LookupInputResultOutput) Destinations() GetInputDestinationArrayOutput {
	return o.ApplyT(func(v LookupInputResult) []GetInputDestination { return v.Destinations }).(GetInputDestinationArrayOutput)
}

func (o LookupInputResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.Id }).(pulumi.StringOutput)
}

// The input class.
func (o LookupInputResultOutput) InputClass() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.InputClass }).(pulumi.StringOutput)
}

// Settings for the devices.
func (o LookupInputResultOutput) InputDevices() GetInputInputDeviceArrayOutput {
	return o.ApplyT(func(v LookupInputResult) []GetInputInputDevice { return v.InputDevices }).(GetInputInputDeviceArrayOutput)
}

// A list of IDs for all Inputs which are partners of this one.
func (o LookupInputResultOutput) InputPartnerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInputResult) []string { return v.InputPartnerIds }).(pulumi.StringArrayOutput)
}

// Source type of the input.
func (o LookupInputResultOutput) InputSourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.InputSourceType }).(pulumi.StringOutput)
}

// A list of the MediaConnect Flows.
func (o LookupInputResultOutput) MediaConnectFlows() GetInputMediaConnectFlowArrayOutput {
	return o.ApplyT(func(v LookupInputResult) []GetInputMediaConnectFlow { return v.MediaConnectFlows }).(GetInputMediaConnectFlowArrayOutput)
}

// Name of the input.
func (o LookupInputResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ARN of the role this input assumes during and after creation.
func (o LookupInputResultOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.RoleArn }).(pulumi.StringOutput)
}

// List of input security groups.
func (o LookupInputResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInputResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The source URLs for a PULL-type input.
func (o LookupInputResultOutput) Sources() GetInputSourceArrayOutput {
	return o.ApplyT(func(v LookupInputResult) []GetInputSource { return v.Sources }).(GetInputSourceArrayOutput)
}

// The state of the input.
func (o LookupInputResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.State }).(pulumi.StringOutput)
}

// A map of tags assigned to the Input.
func (o LookupInputResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInputResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the input.
func (o LookupInputResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInputResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInputResultOutput{})
}
