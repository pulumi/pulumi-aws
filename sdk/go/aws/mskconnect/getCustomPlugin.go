// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mskconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information on an Amazon MSK Connect custom plugin.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/mskconnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mskconnect.LookupCustomPlugin(ctx, &mskconnect.LookupCustomPluginArgs{
//				Name: "example-debezium-1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCustomPlugin(ctx *pulumi.Context, args *LookupCustomPluginArgs, opts ...pulumi.InvokeOption) (*LookupCustomPluginResult, error) {
	var rv LookupCustomPluginResult
	err := ctx.Invoke("aws:mskconnect/getCustomPlugin:getCustomPlugin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCustomPlugin.
type LookupCustomPluginArgs struct {
	// Name of the custom plugin.
	Name string `pulumi:"name"`
}

// A collection of values returned by getCustomPlugin.
type LookupCustomPluginResult struct {
	// the ARN of the custom plugin.
	Arn string `pulumi:"arn"`
	// a summary description of the custom plugin.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// an ID of the latest successfully created revision of the custom plugin.
	LatestRevision int    `pulumi:"latestRevision"`
	Name           string `pulumi:"name"`
	// the state of the custom plugin.
	State string `pulumi:"state"`
}

func LookupCustomPluginOutput(ctx *pulumi.Context, args LookupCustomPluginOutputArgs, opts ...pulumi.InvokeOption) LookupCustomPluginResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomPluginResult, error) {
			args := v.(LookupCustomPluginArgs)
			r, err := LookupCustomPlugin(ctx, &args, opts...)
			var s LookupCustomPluginResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCustomPluginResultOutput)
}

// A collection of arguments for invoking getCustomPlugin.
type LookupCustomPluginOutputArgs struct {
	// Name of the custom plugin.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupCustomPluginOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomPluginArgs)(nil)).Elem()
}

// A collection of values returned by getCustomPlugin.
type LookupCustomPluginResultOutput struct{ *pulumi.OutputState }

func (LookupCustomPluginResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomPluginResult)(nil)).Elem()
}

func (o LookupCustomPluginResultOutput) ToLookupCustomPluginResultOutput() LookupCustomPluginResultOutput {
	return o
}

func (o LookupCustomPluginResultOutput) ToLookupCustomPluginResultOutputWithContext(ctx context.Context) LookupCustomPluginResultOutput {
	return o
}

// the ARN of the custom plugin.
func (o LookupCustomPluginResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomPluginResult) string { return v.Arn }).(pulumi.StringOutput)
}

// a summary description of the custom plugin.
func (o LookupCustomPluginResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomPluginResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCustomPluginResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomPluginResult) string { return v.Id }).(pulumi.StringOutput)
}

// an ID of the latest successfully created revision of the custom plugin.
func (o LookupCustomPluginResultOutput) LatestRevision() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCustomPluginResult) int { return v.LatestRevision }).(pulumi.IntOutput)
}

func (o LookupCustomPluginResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomPluginResult) string { return v.Name }).(pulumi.StringOutput)
}

// the state of the custom plugin.
func (o LookupCustomPluginResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomPluginResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomPluginResultOutput{})
}
