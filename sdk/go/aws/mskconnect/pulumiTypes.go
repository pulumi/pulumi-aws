// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mskconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectorCapacity struct {
	// Information about the auto scaling parameters for the connector. See below.
	Autoscaling *ConnectorCapacityAutoscaling `pulumi:"autoscaling"`
	// Details about a fixed capacity allocated to a connector. See below.
	ProvisionedCapacity *ConnectorCapacityProvisionedCapacity `pulumi:"provisionedCapacity"`
}

// ConnectorCapacityInput is an input type that accepts ConnectorCapacityArgs and ConnectorCapacityOutput values.
// You can construct a concrete instance of `ConnectorCapacityInput` via:
//
//          ConnectorCapacityArgs{...}
type ConnectorCapacityInput interface {
	pulumi.Input

	ToConnectorCapacityOutput() ConnectorCapacityOutput
	ToConnectorCapacityOutputWithContext(context.Context) ConnectorCapacityOutput
}

type ConnectorCapacityArgs struct {
	// Information about the auto scaling parameters for the connector. See below.
	Autoscaling ConnectorCapacityAutoscalingPtrInput `pulumi:"autoscaling"`
	// Details about a fixed capacity allocated to a connector. See below.
	ProvisionedCapacity ConnectorCapacityProvisionedCapacityPtrInput `pulumi:"provisionedCapacity"`
}

func (ConnectorCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacity)(nil)).Elem()
}

func (i ConnectorCapacityArgs) ToConnectorCapacityOutput() ConnectorCapacityOutput {
	return i.ToConnectorCapacityOutputWithContext(context.Background())
}

func (i ConnectorCapacityArgs) ToConnectorCapacityOutputWithContext(ctx context.Context) ConnectorCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityOutput)
}

func (i ConnectorCapacityArgs) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return i.ToConnectorCapacityPtrOutputWithContext(context.Background())
}

func (i ConnectorCapacityArgs) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityOutput).ToConnectorCapacityPtrOutputWithContext(ctx)
}

// ConnectorCapacityPtrInput is an input type that accepts ConnectorCapacityArgs, ConnectorCapacityPtr and ConnectorCapacityPtrOutput values.
// You can construct a concrete instance of `ConnectorCapacityPtrInput` via:
//
//          ConnectorCapacityArgs{...}
//
//  or:
//
//          nil
type ConnectorCapacityPtrInput interface {
	pulumi.Input

	ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput
	ToConnectorCapacityPtrOutputWithContext(context.Context) ConnectorCapacityPtrOutput
}

type connectorCapacityPtrType ConnectorCapacityArgs

func ConnectorCapacityPtr(v *ConnectorCapacityArgs) ConnectorCapacityPtrInput {
	return (*connectorCapacityPtrType)(v)
}

func (*connectorCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacity)(nil)).Elem()
}

func (i *connectorCapacityPtrType) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return i.ToConnectorCapacityPtrOutputWithContext(context.Background())
}

func (i *connectorCapacityPtrType) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityPtrOutput)
}

type ConnectorCapacityOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacity)(nil)).Elem()
}

func (o ConnectorCapacityOutput) ToConnectorCapacityOutput() ConnectorCapacityOutput {
	return o
}

func (o ConnectorCapacityOutput) ToConnectorCapacityOutputWithContext(ctx context.Context) ConnectorCapacityOutput {
	return o
}

func (o ConnectorCapacityOutput) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return o.ToConnectorCapacityPtrOutputWithContext(context.Background())
}

func (o ConnectorCapacityOutput) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorCapacity) *ConnectorCapacity {
		return &v
	}).(ConnectorCapacityPtrOutput)
}

// Information about the auto scaling parameters for the connector. See below.
func (o ConnectorCapacityOutput) Autoscaling() ConnectorCapacityAutoscalingPtrOutput {
	return o.ApplyT(func(v ConnectorCapacity) *ConnectorCapacityAutoscaling { return v.Autoscaling }).(ConnectorCapacityAutoscalingPtrOutput)
}

// Details about a fixed capacity allocated to a connector. See below.
func (o ConnectorCapacityOutput) ProvisionedCapacity() ConnectorCapacityProvisionedCapacityPtrOutput {
	return o.ApplyT(func(v ConnectorCapacity) *ConnectorCapacityProvisionedCapacity { return v.ProvisionedCapacity }).(ConnectorCapacityProvisionedCapacityPtrOutput)
}

type ConnectorCapacityPtrOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacity)(nil)).Elem()
}

func (o ConnectorCapacityPtrOutput) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return o
}

func (o ConnectorCapacityPtrOutput) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return o
}

func (o ConnectorCapacityPtrOutput) Elem() ConnectorCapacityOutput {
	return o.ApplyT(func(v *ConnectorCapacity) ConnectorCapacity {
		if v != nil {
			return *v
		}
		var ret ConnectorCapacity
		return ret
	}).(ConnectorCapacityOutput)
}

// Information about the auto scaling parameters for the connector. See below.
func (o ConnectorCapacityPtrOutput) Autoscaling() ConnectorCapacityAutoscalingPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacity) *ConnectorCapacityAutoscaling {
		if v == nil {
			return nil
		}
		return v.Autoscaling
	}).(ConnectorCapacityAutoscalingPtrOutput)
}

// Details about a fixed capacity allocated to a connector. See below.
func (o ConnectorCapacityPtrOutput) ProvisionedCapacity() ConnectorCapacityProvisionedCapacityPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacity) *ConnectorCapacityProvisionedCapacity {
		if v == nil {
			return nil
		}
		return v.ProvisionedCapacity
	}).(ConnectorCapacityProvisionedCapacityPtrOutput)
}

type ConnectorCapacityAutoscaling struct {
	// The maximum number of workers allocated to the connector.
	MaxWorkerCount int `pulumi:"maxWorkerCount"`
	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
	McuCount *int `pulumi:"mcuCount"`
	// The minimum number of workers allocated to the connector.
	MinWorkerCount int `pulumi:"minWorkerCount"`
	// The scale-in policy for the connector. See below.
	ScaleInPolicy *ConnectorCapacityAutoscalingScaleInPolicy `pulumi:"scaleInPolicy"`
	// The scale-out policy for the connector. See below.
	ScaleOutPolicy *ConnectorCapacityAutoscalingScaleOutPolicy `pulumi:"scaleOutPolicy"`
}

// ConnectorCapacityAutoscalingInput is an input type that accepts ConnectorCapacityAutoscalingArgs and ConnectorCapacityAutoscalingOutput values.
// You can construct a concrete instance of `ConnectorCapacityAutoscalingInput` via:
//
//          ConnectorCapacityAutoscalingArgs{...}
type ConnectorCapacityAutoscalingInput interface {
	pulumi.Input

	ToConnectorCapacityAutoscalingOutput() ConnectorCapacityAutoscalingOutput
	ToConnectorCapacityAutoscalingOutputWithContext(context.Context) ConnectorCapacityAutoscalingOutput
}

type ConnectorCapacityAutoscalingArgs struct {
	// The maximum number of workers allocated to the connector.
	MaxWorkerCount pulumi.IntInput `pulumi:"maxWorkerCount"`
	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
	McuCount pulumi.IntPtrInput `pulumi:"mcuCount"`
	// The minimum number of workers allocated to the connector.
	MinWorkerCount pulumi.IntInput `pulumi:"minWorkerCount"`
	// The scale-in policy for the connector. See below.
	ScaleInPolicy ConnectorCapacityAutoscalingScaleInPolicyPtrInput `pulumi:"scaleInPolicy"`
	// The scale-out policy for the connector. See below.
	ScaleOutPolicy ConnectorCapacityAutoscalingScaleOutPolicyPtrInput `pulumi:"scaleOutPolicy"`
}

func (ConnectorCapacityAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityAutoscaling)(nil)).Elem()
}

func (i ConnectorCapacityAutoscalingArgs) ToConnectorCapacityAutoscalingOutput() ConnectorCapacityAutoscalingOutput {
	return i.ToConnectorCapacityAutoscalingOutputWithContext(context.Background())
}

func (i ConnectorCapacityAutoscalingArgs) ToConnectorCapacityAutoscalingOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingOutput)
}

func (i ConnectorCapacityAutoscalingArgs) ToConnectorCapacityAutoscalingPtrOutput() ConnectorCapacityAutoscalingPtrOutput {
	return i.ToConnectorCapacityAutoscalingPtrOutputWithContext(context.Background())
}

func (i ConnectorCapacityAutoscalingArgs) ToConnectorCapacityAutoscalingPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingOutput).ToConnectorCapacityAutoscalingPtrOutputWithContext(ctx)
}

// ConnectorCapacityAutoscalingPtrInput is an input type that accepts ConnectorCapacityAutoscalingArgs, ConnectorCapacityAutoscalingPtr and ConnectorCapacityAutoscalingPtrOutput values.
// You can construct a concrete instance of `ConnectorCapacityAutoscalingPtrInput` via:
//
//          ConnectorCapacityAutoscalingArgs{...}
//
//  or:
//
//          nil
type ConnectorCapacityAutoscalingPtrInput interface {
	pulumi.Input

	ToConnectorCapacityAutoscalingPtrOutput() ConnectorCapacityAutoscalingPtrOutput
	ToConnectorCapacityAutoscalingPtrOutputWithContext(context.Context) ConnectorCapacityAutoscalingPtrOutput
}

type connectorCapacityAutoscalingPtrType ConnectorCapacityAutoscalingArgs

func ConnectorCapacityAutoscalingPtr(v *ConnectorCapacityAutoscalingArgs) ConnectorCapacityAutoscalingPtrInput {
	return (*connectorCapacityAutoscalingPtrType)(v)
}

func (*connectorCapacityAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityAutoscaling)(nil)).Elem()
}

func (i *connectorCapacityAutoscalingPtrType) ToConnectorCapacityAutoscalingPtrOutput() ConnectorCapacityAutoscalingPtrOutput {
	return i.ToConnectorCapacityAutoscalingPtrOutputWithContext(context.Background())
}

func (i *connectorCapacityAutoscalingPtrType) ToConnectorCapacityAutoscalingPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingPtrOutput)
}

type ConnectorCapacityAutoscalingOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityAutoscaling)(nil)).Elem()
}

func (o ConnectorCapacityAutoscalingOutput) ToConnectorCapacityAutoscalingOutput() ConnectorCapacityAutoscalingOutput {
	return o
}

func (o ConnectorCapacityAutoscalingOutput) ToConnectorCapacityAutoscalingOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingOutput {
	return o
}

func (o ConnectorCapacityAutoscalingOutput) ToConnectorCapacityAutoscalingPtrOutput() ConnectorCapacityAutoscalingPtrOutput {
	return o.ToConnectorCapacityAutoscalingPtrOutputWithContext(context.Background())
}

func (o ConnectorCapacityAutoscalingOutput) ToConnectorCapacityAutoscalingPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorCapacityAutoscaling) *ConnectorCapacityAutoscaling {
		return &v
	}).(ConnectorCapacityAutoscalingPtrOutput)
}

// The maximum number of workers allocated to the connector.
func (o ConnectorCapacityAutoscalingOutput) MaxWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorCapacityAutoscaling) int { return v.MaxWorkerCount }).(pulumi.IntOutput)
}

// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
func (o ConnectorCapacityAutoscalingOutput) McuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorCapacityAutoscaling) *int { return v.McuCount }).(pulumi.IntPtrOutput)
}

// The minimum number of workers allocated to the connector.
func (o ConnectorCapacityAutoscalingOutput) MinWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorCapacityAutoscaling) int { return v.MinWorkerCount }).(pulumi.IntOutput)
}

// The scale-in policy for the connector. See below.
func (o ConnectorCapacityAutoscalingOutput) ScaleInPolicy() ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return o.ApplyT(func(v ConnectorCapacityAutoscaling) *ConnectorCapacityAutoscalingScaleInPolicy {
		return v.ScaleInPolicy
	}).(ConnectorCapacityAutoscalingScaleInPolicyPtrOutput)
}

// The scale-out policy for the connector. See below.
func (o ConnectorCapacityAutoscalingOutput) ScaleOutPolicy() ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return o.ApplyT(func(v ConnectorCapacityAutoscaling) *ConnectorCapacityAutoscalingScaleOutPolicy {
		return v.ScaleOutPolicy
	}).(ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput)
}

type ConnectorCapacityAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityAutoscaling)(nil)).Elem()
}

func (o ConnectorCapacityAutoscalingPtrOutput) ToConnectorCapacityAutoscalingPtrOutput() ConnectorCapacityAutoscalingPtrOutput {
	return o
}

func (o ConnectorCapacityAutoscalingPtrOutput) ToConnectorCapacityAutoscalingPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingPtrOutput {
	return o
}

func (o ConnectorCapacityAutoscalingPtrOutput) Elem() ConnectorCapacityAutoscalingOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscaling) ConnectorCapacityAutoscaling {
		if v != nil {
			return *v
		}
		var ret ConnectorCapacityAutoscaling
		return ret
	}).(ConnectorCapacityAutoscalingOutput)
}

// The maximum number of workers allocated to the connector.
func (o ConnectorCapacityAutoscalingPtrOutput) MaxWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxWorkerCount
	}).(pulumi.IntPtrOutput)
}

// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
func (o ConnectorCapacityAutoscalingPtrOutput) McuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscaling) *int {
		if v == nil {
			return nil
		}
		return v.McuCount
	}).(pulumi.IntPtrOutput)
}

// The minimum number of workers allocated to the connector.
func (o ConnectorCapacityAutoscalingPtrOutput) MinWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinWorkerCount
	}).(pulumi.IntPtrOutput)
}

// The scale-in policy for the connector. See below.
func (o ConnectorCapacityAutoscalingPtrOutput) ScaleInPolicy() ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscaling) *ConnectorCapacityAutoscalingScaleInPolicy {
		if v == nil {
			return nil
		}
		return v.ScaleInPolicy
	}).(ConnectorCapacityAutoscalingScaleInPolicyPtrOutput)
}

// The scale-out policy for the connector. See below.
func (o ConnectorCapacityAutoscalingPtrOutput) ScaleOutPolicy() ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscaling) *ConnectorCapacityAutoscalingScaleOutPolicy {
		if v == nil {
			return nil
		}
		return v.ScaleOutPolicy
	}).(ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput)
}

type ConnectorCapacityAutoscalingScaleInPolicy struct {
	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CpuUtilizationPercentage *int `pulumi:"cpuUtilizationPercentage"`
}

// ConnectorCapacityAutoscalingScaleInPolicyInput is an input type that accepts ConnectorCapacityAutoscalingScaleInPolicyArgs and ConnectorCapacityAutoscalingScaleInPolicyOutput values.
// You can construct a concrete instance of `ConnectorCapacityAutoscalingScaleInPolicyInput` via:
//
//          ConnectorCapacityAutoscalingScaleInPolicyArgs{...}
type ConnectorCapacityAutoscalingScaleInPolicyInput interface {
	pulumi.Input

	ToConnectorCapacityAutoscalingScaleInPolicyOutput() ConnectorCapacityAutoscalingScaleInPolicyOutput
	ToConnectorCapacityAutoscalingScaleInPolicyOutputWithContext(context.Context) ConnectorCapacityAutoscalingScaleInPolicyOutput
}

type ConnectorCapacityAutoscalingScaleInPolicyArgs struct {
	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CpuUtilizationPercentage pulumi.IntPtrInput `pulumi:"cpuUtilizationPercentage"`
}

func (ConnectorCapacityAutoscalingScaleInPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityAutoscalingScaleInPolicy)(nil)).Elem()
}

func (i ConnectorCapacityAutoscalingScaleInPolicyArgs) ToConnectorCapacityAutoscalingScaleInPolicyOutput() ConnectorCapacityAutoscalingScaleInPolicyOutput {
	return i.ToConnectorCapacityAutoscalingScaleInPolicyOutputWithContext(context.Background())
}

func (i ConnectorCapacityAutoscalingScaleInPolicyArgs) ToConnectorCapacityAutoscalingScaleInPolicyOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleInPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingScaleInPolicyOutput)
}

func (i ConnectorCapacityAutoscalingScaleInPolicyArgs) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutput() ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return i.ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(context.Background())
}

func (i ConnectorCapacityAutoscalingScaleInPolicyArgs) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingScaleInPolicyOutput).ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(ctx)
}

// ConnectorCapacityAutoscalingScaleInPolicyPtrInput is an input type that accepts ConnectorCapacityAutoscalingScaleInPolicyArgs, ConnectorCapacityAutoscalingScaleInPolicyPtr and ConnectorCapacityAutoscalingScaleInPolicyPtrOutput values.
// You can construct a concrete instance of `ConnectorCapacityAutoscalingScaleInPolicyPtrInput` via:
//
//          ConnectorCapacityAutoscalingScaleInPolicyArgs{...}
//
//  or:
//
//          nil
type ConnectorCapacityAutoscalingScaleInPolicyPtrInput interface {
	pulumi.Input

	ToConnectorCapacityAutoscalingScaleInPolicyPtrOutput() ConnectorCapacityAutoscalingScaleInPolicyPtrOutput
	ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(context.Context) ConnectorCapacityAutoscalingScaleInPolicyPtrOutput
}

type connectorCapacityAutoscalingScaleInPolicyPtrType ConnectorCapacityAutoscalingScaleInPolicyArgs

func ConnectorCapacityAutoscalingScaleInPolicyPtr(v *ConnectorCapacityAutoscalingScaleInPolicyArgs) ConnectorCapacityAutoscalingScaleInPolicyPtrInput {
	return (*connectorCapacityAutoscalingScaleInPolicyPtrType)(v)
}

func (*connectorCapacityAutoscalingScaleInPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityAutoscalingScaleInPolicy)(nil)).Elem()
}

func (i *connectorCapacityAutoscalingScaleInPolicyPtrType) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutput() ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return i.ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(context.Background())
}

func (i *connectorCapacityAutoscalingScaleInPolicyPtrType) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingScaleInPolicyPtrOutput)
}

type ConnectorCapacityAutoscalingScaleInPolicyOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityAutoscalingScaleInPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityAutoscalingScaleInPolicy)(nil)).Elem()
}

func (o ConnectorCapacityAutoscalingScaleInPolicyOutput) ToConnectorCapacityAutoscalingScaleInPolicyOutput() ConnectorCapacityAutoscalingScaleInPolicyOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleInPolicyOutput) ToConnectorCapacityAutoscalingScaleInPolicyOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleInPolicyOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleInPolicyOutput) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutput() ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return o.ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(context.Background())
}

func (o ConnectorCapacityAutoscalingScaleInPolicyOutput) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorCapacityAutoscalingScaleInPolicy) *ConnectorCapacityAutoscalingScaleInPolicy {
		return &v
	}).(ConnectorCapacityAutoscalingScaleInPolicyPtrOutput)
}

// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
func (o ConnectorCapacityAutoscalingScaleInPolicyOutput) CpuUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorCapacityAutoscalingScaleInPolicy) *int { return v.CpuUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type ConnectorCapacityAutoscalingScaleInPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityAutoscalingScaleInPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityAutoscalingScaleInPolicy)(nil)).Elem()
}

func (o ConnectorCapacityAutoscalingScaleInPolicyPtrOutput) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutput() ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleInPolicyPtrOutput) ToConnectorCapacityAutoscalingScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleInPolicyPtrOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleInPolicyPtrOutput) Elem() ConnectorCapacityAutoscalingScaleInPolicyOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscalingScaleInPolicy) ConnectorCapacityAutoscalingScaleInPolicy {
		if v != nil {
			return *v
		}
		var ret ConnectorCapacityAutoscalingScaleInPolicy
		return ret
	}).(ConnectorCapacityAutoscalingScaleInPolicyOutput)
}

// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
func (o ConnectorCapacityAutoscalingScaleInPolicyPtrOutput) CpuUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscalingScaleInPolicy) *int {
		if v == nil {
			return nil
		}
		return v.CpuUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

type ConnectorCapacityAutoscalingScaleOutPolicy struct {
	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CpuUtilizationPercentage *int `pulumi:"cpuUtilizationPercentage"`
}

// ConnectorCapacityAutoscalingScaleOutPolicyInput is an input type that accepts ConnectorCapacityAutoscalingScaleOutPolicyArgs and ConnectorCapacityAutoscalingScaleOutPolicyOutput values.
// You can construct a concrete instance of `ConnectorCapacityAutoscalingScaleOutPolicyInput` via:
//
//          ConnectorCapacityAutoscalingScaleOutPolicyArgs{...}
type ConnectorCapacityAutoscalingScaleOutPolicyInput interface {
	pulumi.Input

	ToConnectorCapacityAutoscalingScaleOutPolicyOutput() ConnectorCapacityAutoscalingScaleOutPolicyOutput
	ToConnectorCapacityAutoscalingScaleOutPolicyOutputWithContext(context.Context) ConnectorCapacityAutoscalingScaleOutPolicyOutput
}

type ConnectorCapacityAutoscalingScaleOutPolicyArgs struct {
	// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
	CpuUtilizationPercentage pulumi.IntPtrInput `pulumi:"cpuUtilizationPercentage"`
}

func (ConnectorCapacityAutoscalingScaleOutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityAutoscalingScaleOutPolicy)(nil)).Elem()
}

func (i ConnectorCapacityAutoscalingScaleOutPolicyArgs) ToConnectorCapacityAutoscalingScaleOutPolicyOutput() ConnectorCapacityAutoscalingScaleOutPolicyOutput {
	return i.ToConnectorCapacityAutoscalingScaleOutPolicyOutputWithContext(context.Background())
}

func (i ConnectorCapacityAutoscalingScaleOutPolicyArgs) ToConnectorCapacityAutoscalingScaleOutPolicyOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleOutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingScaleOutPolicyOutput)
}

func (i ConnectorCapacityAutoscalingScaleOutPolicyArgs) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutput() ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return i.ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(context.Background())
}

func (i ConnectorCapacityAutoscalingScaleOutPolicyArgs) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingScaleOutPolicyOutput).ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(ctx)
}

// ConnectorCapacityAutoscalingScaleOutPolicyPtrInput is an input type that accepts ConnectorCapacityAutoscalingScaleOutPolicyArgs, ConnectorCapacityAutoscalingScaleOutPolicyPtr and ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput values.
// You can construct a concrete instance of `ConnectorCapacityAutoscalingScaleOutPolicyPtrInput` via:
//
//          ConnectorCapacityAutoscalingScaleOutPolicyArgs{...}
//
//  or:
//
//          nil
type ConnectorCapacityAutoscalingScaleOutPolicyPtrInput interface {
	pulumi.Input

	ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutput() ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput
	ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(context.Context) ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput
}

type connectorCapacityAutoscalingScaleOutPolicyPtrType ConnectorCapacityAutoscalingScaleOutPolicyArgs

func ConnectorCapacityAutoscalingScaleOutPolicyPtr(v *ConnectorCapacityAutoscalingScaleOutPolicyArgs) ConnectorCapacityAutoscalingScaleOutPolicyPtrInput {
	return (*connectorCapacityAutoscalingScaleOutPolicyPtrType)(v)
}

func (*connectorCapacityAutoscalingScaleOutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityAutoscalingScaleOutPolicy)(nil)).Elem()
}

func (i *connectorCapacityAutoscalingScaleOutPolicyPtrType) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutput() ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return i.ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(context.Background())
}

func (i *connectorCapacityAutoscalingScaleOutPolicyPtrType) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput)
}

type ConnectorCapacityAutoscalingScaleOutPolicyOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityAutoscalingScaleOutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityAutoscalingScaleOutPolicy)(nil)).Elem()
}

func (o ConnectorCapacityAutoscalingScaleOutPolicyOutput) ToConnectorCapacityAutoscalingScaleOutPolicyOutput() ConnectorCapacityAutoscalingScaleOutPolicyOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleOutPolicyOutput) ToConnectorCapacityAutoscalingScaleOutPolicyOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleOutPolicyOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleOutPolicyOutput) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutput() ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return o.ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(context.Background())
}

func (o ConnectorCapacityAutoscalingScaleOutPolicyOutput) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorCapacityAutoscalingScaleOutPolicy) *ConnectorCapacityAutoscalingScaleOutPolicy {
		return &v
	}).(ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput)
}

// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
func (o ConnectorCapacityAutoscalingScaleOutPolicyOutput) CpuUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorCapacityAutoscalingScaleOutPolicy) *int { return v.CpuUtilizationPercentage }).(pulumi.IntPtrOutput)
}

type ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityAutoscalingScaleOutPolicy)(nil)).Elem()
}

func (o ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutput() ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput) ToConnectorCapacityAutoscalingScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput {
	return o
}

func (o ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput) Elem() ConnectorCapacityAutoscalingScaleOutPolicyOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscalingScaleOutPolicy) ConnectorCapacityAutoscalingScaleOutPolicy {
		if v != nil {
			return *v
		}
		var ret ConnectorCapacityAutoscalingScaleOutPolicy
		return ret
	}).(ConnectorCapacityAutoscalingScaleOutPolicyOutput)
}

// The CPU utilization percentage threshold at which you want connector scale out to be triggered.
func (o ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput) CpuUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityAutoscalingScaleOutPolicy) *int {
		if v == nil {
			return nil
		}
		return v.CpuUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

type ConnectorCapacityProvisionedCapacity struct {
	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
	McuCount *int `pulumi:"mcuCount"`
	// The number of workers that are allocated to the connector.
	WorkerCount int `pulumi:"workerCount"`
}

// ConnectorCapacityProvisionedCapacityInput is an input type that accepts ConnectorCapacityProvisionedCapacityArgs and ConnectorCapacityProvisionedCapacityOutput values.
// You can construct a concrete instance of `ConnectorCapacityProvisionedCapacityInput` via:
//
//          ConnectorCapacityProvisionedCapacityArgs{...}
type ConnectorCapacityProvisionedCapacityInput interface {
	pulumi.Input

	ToConnectorCapacityProvisionedCapacityOutput() ConnectorCapacityProvisionedCapacityOutput
	ToConnectorCapacityProvisionedCapacityOutputWithContext(context.Context) ConnectorCapacityProvisionedCapacityOutput
}

type ConnectorCapacityProvisionedCapacityArgs struct {
	// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
	McuCount pulumi.IntPtrInput `pulumi:"mcuCount"`
	// The number of workers that are allocated to the connector.
	WorkerCount pulumi.IntInput `pulumi:"workerCount"`
}

func (ConnectorCapacityProvisionedCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityProvisionedCapacity)(nil)).Elem()
}

func (i ConnectorCapacityProvisionedCapacityArgs) ToConnectorCapacityProvisionedCapacityOutput() ConnectorCapacityProvisionedCapacityOutput {
	return i.ToConnectorCapacityProvisionedCapacityOutputWithContext(context.Background())
}

func (i ConnectorCapacityProvisionedCapacityArgs) ToConnectorCapacityProvisionedCapacityOutputWithContext(ctx context.Context) ConnectorCapacityProvisionedCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityProvisionedCapacityOutput)
}

func (i ConnectorCapacityProvisionedCapacityArgs) ToConnectorCapacityProvisionedCapacityPtrOutput() ConnectorCapacityProvisionedCapacityPtrOutput {
	return i.ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(context.Background())
}

func (i ConnectorCapacityProvisionedCapacityArgs) ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityProvisionedCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityProvisionedCapacityOutput).ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(ctx)
}

// ConnectorCapacityProvisionedCapacityPtrInput is an input type that accepts ConnectorCapacityProvisionedCapacityArgs, ConnectorCapacityProvisionedCapacityPtr and ConnectorCapacityProvisionedCapacityPtrOutput values.
// You can construct a concrete instance of `ConnectorCapacityProvisionedCapacityPtrInput` via:
//
//          ConnectorCapacityProvisionedCapacityArgs{...}
//
//  or:
//
//          nil
type ConnectorCapacityProvisionedCapacityPtrInput interface {
	pulumi.Input

	ToConnectorCapacityProvisionedCapacityPtrOutput() ConnectorCapacityProvisionedCapacityPtrOutput
	ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(context.Context) ConnectorCapacityProvisionedCapacityPtrOutput
}

type connectorCapacityProvisionedCapacityPtrType ConnectorCapacityProvisionedCapacityArgs

func ConnectorCapacityProvisionedCapacityPtr(v *ConnectorCapacityProvisionedCapacityArgs) ConnectorCapacityProvisionedCapacityPtrInput {
	return (*connectorCapacityProvisionedCapacityPtrType)(v)
}

func (*connectorCapacityProvisionedCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityProvisionedCapacity)(nil)).Elem()
}

func (i *connectorCapacityProvisionedCapacityPtrType) ToConnectorCapacityProvisionedCapacityPtrOutput() ConnectorCapacityProvisionedCapacityPtrOutput {
	return i.ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(context.Background())
}

func (i *connectorCapacityProvisionedCapacityPtrType) ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityProvisionedCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityProvisionedCapacityPtrOutput)
}

type ConnectorCapacityProvisionedCapacityOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityProvisionedCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacityProvisionedCapacity)(nil)).Elem()
}

func (o ConnectorCapacityProvisionedCapacityOutput) ToConnectorCapacityProvisionedCapacityOutput() ConnectorCapacityProvisionedCapacityOutput {
	return o
}

func (o ConnectorCapacityProvisionedCapacityOutput) ToConnectorCapacityProvisionedCapacityOutputWithContext(ctx context.Context) ConnectorCapacityProvisionedCapacityOutput {
	return o
}

func (o ConnectorCapacityProvisionedCapacityOutput) ToConnectorCapacityProvisionedCapacityPtrOutput() ConnectorCapacityProvisionedCapacityPtrOutput {
	return o.ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(context.Background())
}

func (o ConnectorCapacityProvisionedCapacityOutput) ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityProvisionedCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorCapacityProvisionedCapacity) *ConnectorCapacityProvisionedCapacity {
		return &v
	}).(ConnectorCapacityProvisionedCapacityPtrOutput)
}

// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
func (o ConnectorCapacityProvisionedCapacityOutput) McuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorCapacityProvisionedCapacity) *int { return v.McuCount }).(pulumi.IntPtrOutput)
}

// The number of workers that are allocated to the connector.
func (o ConnectorCapacityProvisionedCapacityOutput) WorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorCapacityProvisionedCapacity) int { return v.WorkerCount }).(pulumi.IntOutput)
}

type ConnectorCapacityProvisionedCapacityPtrOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityProvisionedCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacityProvisionedCapacity)(nil)).Elem()
}

func (o ConnectorCapacityProvisionedCapacityPtrOutput) ToConnectorCapacityProvisionedCapacityPtrOutput() ConnectorCapacityProvisionedCapacityPtrOutput {
	return o
}

func (o ConnectorCapacityProvisionedCapacityPtrOutput) ToConnectorCapacityProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityProvisionedCapacityPtrOutput {
	return o
}

func (o ConnectorCapacityProvisionedCapacityPtrOutput) Elem() ConnectorCapacityProvisionedCapacityOutput {
	return o.ApplyT(func(v *ConnectorCapacityProvisionedCapacity) ConnectorCapacityProvisionedCapacity {
		if v != nil {
			return *v
		}
		var ret ConnectorCapacityProvisionedCapacity
		return ret
	}).(ConnectorCapacityProvisionedCapacityOutput)
}

// The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
func (o ConnectorCapacityProvisionedCapacityPtrOutput) McuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityProvisionedCapacity) *int {
		if v == nil {
			return nil
		}
		return v.McuCount
	}).(pulumi.IntPtrOutput)
}

// The number of workers that are allocated to the connector.
func (o ConnectorCapacityProvisionedCapacityPtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacityProvisionedCapacity) *int {
		if v == nil {
			return nil
		}
		return &v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

type ConnectorKafkaCluster struct {
	// The Apache Kafka cluster to which the connector is connected.
	ApacheKafkaCluster ConnectorKafkaClusterApacheKafkaCluster `pulumi:"apacheKafkaCluster"`
}

// ConnectorKafkaClusterInput is an input type that accepts ConnectorKafkaClusterArgs and ConnectorKafkaClusterOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterInput` via:
//
//          ConnectorKafkaClusterArgs{...}
type ConnectorKafkaClusterInput interface {
	pulumi.Input

	ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput
	ToConnectorKafkaClusterOutputWithContext(context.Context) ConnectorKafkaClusterOutput
}

type ConnectorKafkaClusterArgs struct {
	// The Apache Kafka cluster to which the connector is connected.
	ApacheKafkaCluster ConnectorKafkaClusterApacheKafkaClusterInput `pulumi:"apacheKafkaCluster"`
}

func (ConnectorKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return i.ToConnectorKafkaClusterOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput)
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput).ToConnectorKafkaClusterPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterPtrInput is an input type that accepts ConnectorKafkaClusterArgs, ConnectorKafkaClusterPtr and ConnectorKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterPtrInput` via:
//
//          ConnectorKafkaClusterArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput
	ToConnectorKafkaClusterPtrOutputWithContext(context.Context) ConnectorKafkaClusterPtrOutput
}

type connectorKafkaClusterPtrType ConnectorKafkaClusterArgs

func ConnectorKafkaClusterPtr(v *ConnectorKafkaClusterArgs) ConnectorKafkaClusterPtrInput {
	return (*connectorKafkaClusterPtrType)(v)
}

func (*connectorKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterPtrOutput)
}

type ConnectorKafkaClusterOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaCluster) *ConnectorKafkaCluster {
		return &v
	}).(ConnectorKafkaClusterPtrOutput)
}

// The Apache Kafka cluster to which the connector is connected.
func (o ConnectorKafkaClusterOutput) ApacheKafkaCluster() ConnectorKafkaClusterApacheKafkaClusterOutput {
	return o.ApplyT(func(v ConnectorKafkaCluster) ConnectorKafkaClusterApacheKafkaCluster { return v.ApacheKafkaCluster }).(ConnectorKafkaClusterApacheKafkaClusterOutput)
}

type ConnectorKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) Elem() ConnectorKafkaClusterOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) ConnectorKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaCluster
		return ret
	}).(ConnectorKafkaClusterOutput)
}

// The Apache Kafka cluster to which the connector is connected.
func (o ConnectorKafkaClusterPtrOutput) ApacheKafkaCluster() ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) *ConnectorKafkaClusterApacheKafkaCluster {
		if v == nil {
			return nil
		}
		return &v.ApacheKafkaCluster
	}).(ConnectorKafkaClusterApacheKafkaClusterPtrOutput)
}

type ConnectorKafkaClusterApacheKafkaCluster struct {
	// The bootstrap servers of the cluster.
	BootstrapServers string `pulumi:"bootstrapServers"`
	// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
	Vpc ConnectorKafkaClusterApacheKafkaClusterVpc `pulumi:"vpc"`
}

// ConnectorKafkaClusterApacheKafkaClusterInput is an input type that accepts ConnectorKafkaClusterApacheKafkaClusterArgs and ConnectorKafkaClusterApacheKafkaClusterOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterApacheKafkaClusterInput` via:
//
//          ConnectorKafkaClusterApacheKafkaClusterArgs{...}
type ConnectorKafkaClusterApacheKafkaClusterInput interface {
	pulumi.Input

	ToConnectorKafkaClusterApacheKafkaClusterOutput() ConnectorKafkaClusterApacheKafkaClusterOutput
	ToConnectorKafkaClusterApacheKafkaClusterOutputWithContext(context.Context) ConnectorKafkaClusterApacheKafkaClusterOutput
}

type ConnectorKafkaClusterApacheKafkaClusterArgs struct {
	// The bootstrap servers of the cluster.
	BootstrapServers pulumi.StringInput `pulumi:"bootstrapServers"`
	// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
	Vpc ConnectorKafkaClusterApacheKafkaClusterVpcInput `pulumi:"vpc"`
}

func (ConnectorKafkaClusterApacheKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaCluster)(nil)).Elem()
}

func (i ConnectorKafkaClusterApacheKafkaClusterArgs) ToConnectorKafkaClusterApacheKafkaClusterOutput() ConnectorKafkaClusterApacheKafkaClusterOutput {
	return i.ToConnectorKafkaClusterApacheKafkaClusterOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterApacheKafkaClusterArgs) ToConnectorKafkaClusterApacheKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterApacheKafkaClusterOutput)
}

func (i ConnectorKafkaClusterApacheKafkaClusterArgs) ToConnectorKafkaClusterApacheKafkaClusterPtrOutput() ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterApacheKafkaClusterArgs) ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterApacheKafkaClusterOutput).ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterApacheKafkaClusterPtrInput is an input type that accepts ConnectorKafkaClusterApacheKafkaClusterArgs, ConnectorKafkaClusterApacheKafkaClusterPtr and ConnectorKafkaClusterApacheKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterApacheKafkaClusterPtrInput` via:
//
//          ConnectorKafkaClusterApacheKafkaClusterArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterApacheKafkaClusterPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterApacheKafkaClusterPtrOutput() ConnectorKafkaClusterApacheKafkaClusterPtrOutput
	ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(context.Context) ConnectorKafkaClusterApacheKafkaClusterPtrOutput
}

type connectorKafkaClusterApacheKafkaClusterPtrType ConnectorKafkaClusterApacheKafkaClusterArgs

func ConnectorKafkaClusterApacheKafkaClusterPtr(v *ConnectorKafkaClusterApacheKafkaClusterArgs) ConnectorKafkaClusterApacheKafkaClusterPtrInput {
	return (*connectorKafkaClusterApacheKafkaClusterPtrType)(v)
}

func (*connectorKafkaClusterApacheKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterApacheKafkaCluster)(nil)).Elem()
}

func (i *connectorKafkaClusterApacheKafkaClusterPtrType) ToConnectorKafkaClusterApacheKafkaClusterPtrOutput() ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterApacheKafkaClusterPtrType) ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterApacheKafkaClusterPtrOutput)
}

type ConnectorKafkaClusterApacheKafkaClusterOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterApacheKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterApacheKafkaClusterOutput) ToConnectorKafkaClusterApacheKafkaClusterOutput() ConnectorKafkaClusterApacheKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterOutput) ToConnectorKafkaClusterApacheKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterOutput) ToConnectorKafkaClusterApacheKafkaClusterPtrOutput() ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return o.ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterApacheKafkaClusterOutput) ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaClusterApacheKafkaCluster) *ConnectorKafkaClusterApacheKafkaCluster {
		return &v
	}).(ConnectorKafkaClusterApacheKafkaClusterPtrOutput)
}

// The bootstrap servers of the cluster.
func (o ConnectorKafkaClusterApacheKafkaClusterOutput) BootstrapServers() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterApacheKafkaCluster) string { return v.BootstrapServers }).(pulumi.StringOutput)
}

// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
func (o ConnectorKafkaClusterApacheKafkaClusterOutput) Vpc() ConnectorKafkaClusterApacheKafkaClusterVpcOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterApacheKafkaCluster) ConnectorKafkaClusterApacheKafkaClusterVpc {
		return v.Vpc
	}).(ConnectorKafkaClusterApacheKafkaClusterVpcOutput)
}

type ConnectorKafkaClusterApacheKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterApacheKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterApacheKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterApacheKafkaClusterPtrOutput) ToConnectorKafkaClusterApacheKafkaClusterPtrOutput() ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterPtrOutput) ToConnectorKafkaClusterApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterPtrOutput) Elem() ConnectorKafkaClusterApacheKafkaClusterOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterApacheKafkaCluster) ConnectorKafkaClusterApacheKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaClusterApacheKafkaCluster
		return ret
	}).(ConnectorKafkaClusterApacheKafkaClusterOutput)
}

// The bootstrap servers of the cluster.
func (o ConnectorKafkaClusterApacheKafkaClusterPtrOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterApacheKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.BootstrapServers
	}).(pulumi.StringPtrOutput)
}

// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
func (o ConnectorKafkaClusterApacheKafkaClusterPtrOutput) Vpc() ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterApacheKafkaCluster) *ConnectorKafkaClusterApacheKafkaClusterVpc {
		if v == nil {
			return nil
		}
		return &v.Vpc
	}).(ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput)
}

type ConnectorKafkaClusterApacheKafkaClusterVpc struct {
	// The security groups for the connector.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The subnets for the connector.
	Subnets []string `pulumi:"subnets"`
}

// ConnectorKafkaClusterApacheKafkaClusterVpcInput is an input type that accepts ConnectorKafkaClusterApacheKafkaClusterVpcArgs and ConnectorKafkaClusterApacheKafkaClusterVpcOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterApacheKafkaClusterVpcInput` via:
//
//          ConnectorKafkaClusterApacheKafkaClusterVpcArgs{...}
type ConnectorKafkaClusterApacheKafkaClusterVpcInput interface {
	pulumi.Input

	ToConnectorKafkaClusterApacheKafkaClusterVpcOutput() ConnectorKafkaClusterApacheKafkaClusterVpcOutput
	ToConnectorKafkaClusterApacheKafkaClusterVpcOutputWithContext(context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcOutput
}

type ConnectorKafkaClusterApacheKafkaClusterVpcArgs struct {
	// The security groups for the connector.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The subnets for the connector.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ConnectorKafkaClusterApacheKafkaClusterVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaClusterVpc)(nil)).Elem()
}

func (i ConnectorKafkaClusterApacheKafkaClusterVpcArgs) ToConnectorKafkaClusterApacheKafkaClusterVpcOutput() ConnectorKafkaClusterApacheKafkaClusterVpcOutput {
	return i.ToConnectorKafkaClusterApacheKafkaClusterVpcOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterApacheKafkaClusterVpcArgs) ToConnectorKafkaClusterApacheKafkaClusterVpcOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterApacheKafkaClusterVpcOutput)
}

func (i ConnectorKafkaClusterApacheKafkaClusterVpcArgs) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput() ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return i.ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterApacheKafkaClusterVpcArgs) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterApacheKafkaClusterVpcOutput).ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterApacheKafkaClusterVpcPtrInput is an input type that accepts ConnectorKafkaClusterApacheKafkaClusterVpcArgs, ConnectorKafkaClusterApacheKafkaClusterVpcPtr and ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterApacheKafkaClusterVpcPtrInput` via:
//
//          ConnectorKafkaClusterApacheKafkaClusterVpcArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterApacheKafkaClusterVpcPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput() ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput
	ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput
}

type connectorKafkaClusterApacheKafkaClusterVpcPtrType ConnectorKafkaClusterApacheKafkaClusterVpcArgs

func ConnectorKafkaClusterApacheKafkaClusterVpcPtr(v *ConnectorKafkaClusterApacheKafkaClusterVpcArgs) ConnectorKafkaClusterApacheKafkaClusterVpcPtrInput {
	return (*connectorKafkaClusterApacheKafkaClusterVpcPtrType)(v)
}

func (*connectorKafkaClusterApacheKafkaClusterVpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterApacheKafkaClusterVpc)(nil)).Elem()
}

func (i *connectorKafkaClusterApacheKafkaClusterVpcPtrType) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput() ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return i.ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterApacheKafkaClusterVpcPtrType) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput)
}

type ConnectorKafkaClusterApacheKafkaClusterVpcOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterApacheKafkaClusterVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaClusterVpc)(nil)).Elem()
}

func (o ConnectorKafkaClusterApacheKafkaClusterVpcOutput) ToConnectorKafkaClusterApacheKafkaClusterVpcOutput() ConnectorKafkaClusterApacheKafkaClusterVpcOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterVpcOutput) ToConnectorKafkaClusterApacheKafkaClusterVpcOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterVpcOutput) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput() ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return o.ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterApacheKafkaClusterVpcOutput) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaClusterApacheKafkaClusterVpc) *ConnectorKafkaClusterApacheKafkaClusterVpc {
		return &v
	}).(ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput)
}

// The security groups for the connector.
func (o ConnectorKafkaClusterApacheKafkaClusterVpcOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterApacheKafkaClusterVpc) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The subnets for the connector.
func (o ConnectorKafkaClusterApacheKafkaClusterVpcOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterApacheKafkaClusterVpc) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterApacheKafkaClusterVpc)(nil)).Elem()
}

func (o ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput() ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput) ToConnectorKafkaClusterApacheKafkaClusterVpcPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput {
	return o
}

func (o ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput) Elem() ConnectorKafkaClusterApacheKafkaClusterVpcOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterApacheKafkaClusterVpc) ConnectorKafkaClusterApacheKafkaClusterVpc {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaClusterApacheKafkaClusterVpc
		return ret
	}).(ConnectorKafkaClusterApacheKafkaClusterVpcOutput)
}

// The security groups for the connector.
func (o ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterApacheKafkaClusterVpc) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// The subnets for the connector.
func (o ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterApacheKafkaClusterVpc) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type ConnectorKafkaClusterClientAuthentication struct {
	// The type of client authentication used to connect to the Apache Kafka cluster. Valid values: `IAM`, `NONE`. A value of `NONE` means that no client authentication is used. The default value is `NONE`.
	AuthenticationType *string `pulumi:"authenticationType"`
}

// ConnectorKafkaClusterClientAuthenticationInput is an input type that accepts ConnectorKafkaClusterClientAuthenticationArgs and ConnectorKafkaClusterClientAuthenticationOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterClientAuthenticationInput` via:
//
//          ConnectorKafkaClusterClientAuthenticationArgs{...}
type ConnectorKafkaClusterClientAuthenticationInput interface {
	pulumi.Input

	ToConnectorKafkaClusterClientAuthenticationOutput() ConnectorKafkaClusterClientAuthenticationOutput
	ToConnectorKafkaClusterClientAuthenticationOutputWithContext(context.Context) ConnectorKafkaClusterClientAuthenticationOutput
}

type ConnectorKafkaClusterClientAuthenticationArgs struct {
	// The type of client authentication used to connect to the Apache Kafka cluster. Valid values: `IAM`, `NONE`. A value of `NONE` means that no client authentication is used. The default value is `NONE`.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
}

func (ConnectorKafkaClusterClientAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationOutput() ConnectorKafkaClusterClientAuthenticationOutput {
	return i.ToConnectorKafkaClusterClientAuthenticationOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterClientAuthenticationOutput)
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return i.ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterClientAuthenticationOutput).ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterClientAuthenticationPtrInput is an input type that accepts ConnectorKafkaClusterClientAuthenticationArgs, ConnectorKafkaClusterClientAuthenticationPtr and ConnectorKafkaClusterClientAuthenticationPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterClientAuthenticationPtrInput` via:
//
//          ConnectorKafkaClusterClientAuthenticationArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterClientAuthenticationPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput
	ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput
}

type connectorKafkaClusterClientAuthenticationPtrType ConnectorKafkaClusterClientAuthenticationArgs

func ConnectorKafkaClusterClientAuthenticationPtr(v *ConnectorKafkaClusterClientAuthenticationArgs) ConnectorKafkaClusterClientAuthenticationPtrInput {
	return (*connectorKafkaClusterClientAuthenticationPtrType)(v)
}

func (*connectorKafkaClusterClientAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (i *connectorKafkaClusterClientAuthenticationPtrType) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return i.ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterClientAuthenticationPtrType) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterClientAuthenticationPtrOutput)
}

type ConnectorKafkaClusterClientAuthenticationOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterClientAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationOutput() ConnectorKafkaClusterClientAuthenticationOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o.ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaClusterClientAuthentication) *ConnectorKafkaClusterClientAuthentication {
		return &v
	}).(ConnectorKafkaClusterClientAuthenticationPtrOutput)
}

// The type of client authentication used to connect to the Apache Kafka cluster. Valid values: `IAM`, `NONE`. A value of `NONE` means that no client authentication is used. The default value is `NONE`.
func (o ConnectorKafkaClusterClientAuthenticationOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterClientAuthentication) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

type ConnectorKafkaClusterClientAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterClientAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) Elem() ConnectorKafkaClusterClientAuthenticationOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterClientAuthentication) ConnectorKafkaClusterClientAuthentication {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaClusterClientAuthentication
		return ret
	}).(ConnectorKafkaClusterClientAuthenticationOutput)
}

// The type of client authentication used to connect to the Apache Kafka cluster. Valid values: `IAM`, `NONE`. A value of `NONE` means that no client authentication is used. The default value is `NONE`.
func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterClientAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationType
	}).(pulumi.StringPtrOutput)
}

type ConnectorKafkaClusterEncryptionInTransit struct {
	// The type of encryption in transit to the Apache Kafka cluster. Valid values: `PLAINTEXT`, `TLS`. The default values is `PLAINTEXT`.
	EncryptionType *string `pulumi:"encryptionType"`
}

// ConnectorKafkaClusterEncryptionInTransitInput is an input type that accepts ConnectorKafkaClusterEncryptionInTransitArgs and ConnectorKafkaClusterEncryptionInTransitOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterEncryptionInTransitInput` via:
//
//          ConnectorKafkaClusterEncryptionInTransitArgs{...}
type ConnectorKafkaClusterEncryptionInTransitInput interface {
	pulumi.Input

	ToConnectorKafkaClusterEncryptionInTransitOutput() ConnectorKafkaClusterEncryptionInTransitOutput
	ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(context.Context) ConnectorKafkaClusterEncryptionInTransitOutput
}

type ConnectorKafkaClusterEncryptionInTransitArgs struct {
	// The type of encryption in transit to the Apache Kafka cluster. Valid values: `PLAINTEXT`, `TLS`. The default values is `PLAINTEXT`.
	EncryptionType pulumi.StringPtrInput `pulumi:"encryptionType"`
}

func (ConnectorKafkaClusterEncryptionInTransitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitOutput() ConnectorKafkaClusterEncryptionInTransitOutput {
	return i.ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterEncryptionInTransitOutput)
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return i.ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterEncryptionInTransitOutput).ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterEncryptionInTransitPtrInput is an input type that accepts ConnectorKafkaClusterEncryptionInTransitArgs, ConnectorKafkaClusterEncryptionInTransitPtr and ConnectorKafkaClusterEncryptionInTransitPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterEncryptionInTransitPtrInput` via:
//
//          ConnectorKafkaClusterEncryptionInTransitArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterEncryptionInTransitPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput
	ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput
}

type connectorKafkaClusterEncryptionInTransitPtrType ConnectorKafkaClusterEncryptionInTransitArgs

func ConnectorKafkaClusterEncryptionInTransitPtr(v *ConnectorKafkaClusterEncryptionInTransitArgs) ConnectorKafkaClusterEncryptionInTransitPtrInput {
	return (*connectorKafkaClusterEncryptionInTransitPtrType)(v)
}

func (*connectorKafkaClusterEncryptionInTransitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (i *connectorKafkaClusterEncryptionInTransitPtrType) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return i.ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterEncryptionInTransitPtrType) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterEncryptionInTransitPtrOutput)
}

type ConnectorKafkaClusterEncryptionInTransitOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterEncryptionInTransitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitOutput() ConnectorKafkaClusterEncryptionInTransitOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o.ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaClusterEncryptionInTransit) *ConnectorKafkaClusterEncryptionInTransit {
		return &v
	}).(ConnectorKafkaClusterEncryptionInTransitPtrOutput)
}

// The type of encryption in transit to the Apache Kafka cluster. Valid values: `PLAINTEXT`, `TLS`. The default values is `PLAINTEXT`.
func (o ConnectorKafkaClusterEncryptionInTransitOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterEncryptionInTransit) *string { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

type ConnectorKafkaClusterEncryptionInTransitPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterEncryptionInTransitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) Elem() ConnectorKafkaClusterEncryptionInTransitOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterEncryptionInTransit) ConnectorKafkaClusterEncryptionInTransit {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaClusterEncryptionInTransit
		return ret
	}).(ConnectorKafkaClusterEncryptionInTransitOutput)
}

// The type of encryption in transit to the Apache Kafka cluster. Valid values: `PLAINTEXT`, `TLS`. The default values is `PLAINTEXT`.
func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterEncryptionInTransit) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionType
	}).(pulumi.StringPtrOutput)
}

type ConnectorLogDelivery struct {
	// The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
	WorkerLogDelivery ConnectorLogDeliveryWorkerLogDelivery `pulumi:"workerLogDelivery"`
}

// ConnectorLogDeliveryInput is an input type that accepts ConnectorLogDeliveryArgs and ConnectorLogDeliveryOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryInput` via:
//
//          ConnectorLogDeliveryArgs{...}
type ConnectorLogDeliveryInput interface {
	pulumi.Input

	ToConnectorLogDeliveryOutput() ConnectorLogDeliveryOutput
	ToConnectorLogDeliveryOutputWithContext(context.Context) ConnectorLogDeliveryOutput
}

type ConnectorLogDeliveryArgs struct {
	// The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
	WorkerLogDelivery ConnectorLogDeliveryWorkerLogDeliveryInput `pulumi:"workerLogDelivery"`
}

func (ConnectorLogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDelivery)(nil)).Elem()
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryOutput() ConnectorLogDeliveryOutput {
	return i.ToConnectorLogDeliveryOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryOutputWithContext(ctx context.Context) ConnectorLogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryOutput)
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return i.ToConnectorLogDeliveryPtrOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryOutput).ToConnectorLogDeliveryPtrOutputWithContext(ctx)
}

// ConnectorLogDeliveryPtrInput is an input type that accepts ConnectorLogDeliveryArgs, ConnectorLogDeliveryPtr and ConnectorLogDeliveryPtrOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryPtrInput` via:
//
//          ConnectorLogDeliveryArgs{...}
//
//  or:
//
//          nil
type ConnectorLogDeliveryPtrInput interface {
	pulumi.Input

	ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput
	ToConnectorLogDeliveryPtrOutputWithContext(context.Context) ConnectorLogDeliveryPtrOutput
}

type connectorLogDeliveryPtrType ConnectorLogDeliveryArgs

func ConnectorLogDeliveryPtr(v *ConnectorLogDeliveryArgs) ConnectorLogDeliveryPtrInput {
	return (*connectorLogDeliveryPtrType)(v)
}

func (*connectorLogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDelivery)(nil)).Elem()
}

func (i *connectorLogDeliveryPtrType) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return i.ToConnectorLogDeliveryPtrOutputWithContext(context.Background())
}

func (i *connectorLogDeliveryPtrType) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryPtrOutput)
}

type ConnectorLogDeliveryOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDelivery)(nil)).Elem()
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryOutput() ConnectorLogDeliveryOutput {
	return o
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryOutputWithContext(ctx context.Context) ConnectorLogDeliveryOutput {
	return o
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return o.ToConnectorLogDeliveryPtrOutputWithContext(context.Background())
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorLogDelivery) *ConnectorLogDelivery {
		return &v
	}).(ConnectorLogDeliveryPtrOutput)
}

// The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
func (o ConnectorLogDeliveryOutput) WorkerLogDelivery() ConnectorLogDeliveryWorkerLogDeliveryOutput {
	return o.ApplyT(func(v ConnectorLogDelivery) ConnectorLogDeliveryWorkerLogDelivery { return v.WorkerLogDelivery }).(ConnectorLogDeliveryWorkerLogDeliveryOutput)
}

type ConnectorLogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDelivery)(nil)).Elem()
}

func (o ConnectorLogDeliveryPtrOutput) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return o
}

func (o ConnectorLogDeliveryPtrOutput) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return o
}

func (o ConnectorLogDeliveryPtrOutput) Elem() ConnectorLogDeliveryOutput {
	return o.ApplyT(func(v *ConnectorLogDelivery) ConnectorLogDelivery {
		if v != nil {
			return *v
		}
		var ret ConnectorLogDelivery
		return ret
	}).(ConnectorLogDeliveryOutput)
}

// The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
func (o ConnectorLogDeliveryPtrOutput) WorkerLogDelivery() ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDelivery) *ConnectorLogDeliveryWorkerLogDelivery {
		if v == nil {
			return nil
		}
		return &v.WorkerLogDelivery
	}).(ConnectorLogDeliveryWorkerLogDeliveryPtrOutput)
}

type ConnectorLogDeliveryWorkerLogDelivery struct {
	// Details about delivering logs to Amazon CloudWatch Logs. See below.
	CloudwatchLogs *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs `pulumi:"cloudwatchLogs"`
	// Details about delivering logs to Amazon Kinesis Data Firehose. See below.
	Firehose *ConnectorLogDeliveryWorkerLogDeliveryFirehose `pulumi:"firehose"`
	// Details about delivering logs to Amazon S3. See below.
	S3 *ConnectorLogDeliveryWorkerLogDeliveryS3 `pulumi:"s3"`
}

// ConnectorLogDeliveryWorkerLogDeliveryInput is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryArgs and ConnectorLogDeliveryWorkerLogDeliveryOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryInput` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryArgs{...}
type ConnectorLogDeliveryWorkerLogDeliveryInput interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryOutput() ConnectorLogDeliveryWorkerLogDeliveryOutput
	ToConnectorLogDeliveryWorkerLogDeliveryOutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryOutput
}

type ConnectorLogDeliveryWorkerLogDeliveryArgs struct {
	// Details about delivering logs to Amazon CloudWatch Logs. See below.
	CloudwatchLogs ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrInput `pulumi:"cloudwatchLogs"`
	// Details about delivering logs to Amazon Kinesis Data Firehose. See below.
	Firehose ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrInput `pulumi:"firehose"`
	// Details about delivering logs to Amazon S3. See below.
	S3 ConnectorLogDeliveryWorkerLogDeliveryS3PtrInput `pulumi:"s3"`
}

func (ConnectorLogDeliveryWorkerLogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDelivery)(nil)).Elem()
}

func (i ConnectorLogDeliveryWorkerLogDeliveryArgs) ToConnectorLogDeliveryWorkerLogDeliveryOutput() ConnectorLogDeliveryWorkerLogDeliveryOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryArgs) ToConnectorLogDeliveryWorkerLogDeliveryOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryOutput)
}

func (i ConnectorLogDeliveryWorkerLogDeliveryArgs) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryArgs) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryOutput).ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(ctx)
}

// ConnectorLogDeliveryWorkerLogDeliveryPtrInput is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryArgs, ConnectorLogDeliveryWorkerLogDeliveryPtr and ConnectorLogDeliveryWorkerLogDeliveryPtrOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryPtrInput` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryArgs{...}
//
//  or:
//
//          nil
type ConnectorLogDeliveryWorkerLogDeliveryPtrInput interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryPtrOutput
	ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryPtrOutput
}

type connectorLogDeliveryWorkerLogDeliveryPtrType ConnectorLogDeliveryWorkerLogDeliveryArgs

func ConnectorLogDeliveryWorkerLogDeliveryPtr(v *ConnectorLogDeliveryWorkerLogDeliveryArgs) ConnectorLogDeliveryWorkerLogDeliveryPtrInput {
	return (*connectorLogDeliveryWorkerLogDeliveryPtrType)(v)
}

func (*connectorLogDeliveryWorkerLogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDelivery)(nil)).Elem()
}

func (i *connectorLogDeliveryWorkerLogDeliveryPtrType) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(context.Background())
}

func (i *connectorLogDeliveryWorkerLogDeliveryPtrType) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryPtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDelivery)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryOutput) ToConnectorLogDeliveryWorkerLogDeliveryOutput() ConnectorLogDeliveryWorkerLogDeliveryOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryOutput) ToConnectorLogDeliveryWorkerLogDeliveryOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryOutput) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return o.ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(context.Background())
}

func (o ConnectorLogDeliveryWorkerLogDeliveryOutput) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorLogDeliveryWorkerLogDelivery) *ConnectorLogDeliveryWorkerLogDelivery {
		return &v
	}).(ConnectorLogDeliveryWorkerLogDeliveryPtrOutput)
}

// Details about delivering logs to Amazon CloudWatch Logs. See below.
func (o ConnectorLogDeliveryWorkerLogDeliveryOutput) CloudwatchLogs() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDelivery) *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs {
		return v.CloudwatchLogs
	}).(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput)
}

// Details about delivering logs to Amazon Kinesis Data Firehose. See below.
func (o ConnectorLogDeliveryWorkerLogDeliveryOutput) Firehose() ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDelivery) *ConnectorLogDeliveryWorkerLogDeliveryFirehose {
		return v.Firehose
	}).(ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput)
}

// Details about delivering logs to Amazon S3. See below.
func (o ConnectorLogDeliveryWorkerLogDeliveryOutput) S3() ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDelivery) *ConnectorLogDeliveryWorkerLogDeliveryS3 { return v.S3 }).(ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDelivery)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryPtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryPtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryPtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryPtrOutput) Elem() ConnectorLogDeliveryWorkerLogDeliveryOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDelivery) ConnectorLogDeliveryWorkerLogDelivery {
		if v != nil {
			return *v
		}
		var ret ConnectorLogDeliveryWorkerLogDelivery
		return ret
	}).(ConnectorLogDeliveryWorkerLogDeliveryOutput)
}

// Details about delivering logs to Amazon CloudWatch Logs. See below.
func (o ConnectorLogDeliveryWorkerLogDeliveryPtrOutput) CloudwatchLogs() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDelivery) *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogs
	}).(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput)
}

// Details about delivering logs to Amazon Kinesis Data Firehose. See below.
func (o ConnectorLogDeliveryWorkerLogDeliveryPtrOutput) Firehose() ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDelivery) *ConnectorLogDeliveryWorkerLogDeliveryFirehose {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput)
}

// Details about delivering logs to Amazon S3. See below.
func (o ConnectorLogDeliveryWorkerLogDeliveryPtrOutput) S3() ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDelivery) *ConnectorLogDeliveryWorkerLogDeliveryS3 {
		if v == nil {
			return nil
		}
		return v.S3
	}).(ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs struct {
	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled bool `pulumi:"enabled"`
	// The name of the CloudWatch log group that is the destination for log delivery.
	LogGroup *string `pulumi:"logGroup"`
}

// ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsInput is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs and ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsInput` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs{...}
type ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsInput interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput
	ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput
}

type ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs struct {
	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The name of the CloudWatch log group that is the destination for log delivery.
	LogGroup pulumi.StringPtrInput `pulumi:"logGroup"`
}

func (ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs)(nil)).Elem()
}

func (i ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput)
}

func (i ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput).ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(ctx)
}

// ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrInput is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs, ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtr and ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrInput` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs{...}
//
//  or:
//
//          nil
type ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrInput interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput
	ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput
}

type connectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrType ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs

func ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtr(v *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrInput {
	return (*connectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrType)(v)
}

func (*connectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs)(nil)).Elem()
}

func (i *connectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrType) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i *connectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrType) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return o.ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs) *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs {
		return &v
	}).(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput)
}

// Specifies whether connector logs get sent to the specified Amazon S3 destination.
func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The name of the CloudWatch log group that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs) *string { return v.LogGroup }).(pulumi.StringPtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput) Elem() ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs) ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs {
		if v != nil {
			return *v
		}
		var ret ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs
		return ret
	}).(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput)
}

// Specifies whether connector logs get sent to the specified Amazon S3 destination.
func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The name of the CloudWatch log group that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogs) *string {
		if v == nil {
			return nil
		}
		return v.LogGroup
	}).(pulumi.StringPtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryFirehose struct {
	// The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
	DeliveryStream *string `pulumi:"deliveryStream"`
	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled bool `pulumi:"enabled"`
}

// ConnectorLogDeliveryWorkerLogDeliveryFirehoseInput is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs and ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryFirehoseInput` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs{...}
type ConnectorLogDeliveryWorkerLogDeliveryFirehoseInput interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput
	ToConnectorLogDeliveryWorkerLogDeliveryFirehoseOutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput
}

type ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs struct {
	// The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
	DeliveryStream pulumi.StringPtrInput `pulumi:"deliveryStream"`
	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryFirehose)(nil)).Elem()
}

func (i ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs) ToConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryFirehoseOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs) ToConnectorLogDeliveryWorkerLogDeliveryFirehoseOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput)
}

func (i ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput).ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(ctx)
}

// ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrInput is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs, ConnectorLogDeliveryWorkerLogDeliveryFirehosePtr and ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrInput` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs{...}
//
//  or:
//
//          nil
type ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrInput interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput
	ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput
}

type connectorLogDeliveryWorkerLogDeliveryFirehosePtrType ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs

func ConnectorLogDeliveryWorkerLogDeliveryFirehosePtr(v *ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs) ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrInput {
	return (*connectorLogDeliveryWorkerLogDeliveryFirehosePtrType)(v)
}

func (*connectorLogDeliveryWorkerLogDeliveryFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDeliveryFirehose)(nil)).Elem()
}

func (i *connectorLogDeliveryWorkerLogDeliveryFirehosePtrType) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(context.Background())
}

func (i *connectorLogDeliveryWorkerLogDeliveryFirehosePtrType) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryFirehose)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput) ToConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput) ToConnectorLogDeliveryWorkerLogDeliveryFirehoseOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return o.ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(context.Background())
}

func (o ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorLogDeliveryWorkerLogDeliveryFirehose) *ConnectorLogDeliveryWorkerLogDeliveryFirehose {
		return &v
	}).(ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput)
}

// The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDeliveryFirehose) *string { return v.DeliveryStream }).(pulumi.StringPtrOutput)
}

// Specifies whether connector logs get sent to the specified Amazon S3 destination.
func (o ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDeliveryFirehose) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDeliveryFirehose)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput() ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput) Elem() ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryFirehose) ConnectorLogDeliveryWorkerLogDeliveryFirehose {
		if v != nil {
			return *v
		}
		var ret ConnectorLogDeliveryWorkerLogDeliveryFirehose
		return ret
	}).(ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput)
}

// The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryFirehose) *string {
		if v == nil {
			return nil
		}
		return v.DeliveryStream
	}).(pulumi.StringPtrOutput)
}

// Specifies whether connector logs get sent to the specified Amazon S3 destination.
func (o ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryFirehose) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryS3 struct {
	// The name of the S3 bucket that is the destination for log delivery.
	Bucket *string `pulumi:"bucket"`
	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled bool `pulumi:"enabled"`
	// The S3 prefix that is the destination for log delivery.
	Prefix *string `pulumi:"prefix"`
}

// ConnectorLogDeliveryWorkerLogDeliveryS3Input is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryS3Args and ConnectorLogDeliveryWorkerLogDeliveryS3Output values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryS3Input` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryS3Args{...}
type ConnectorLogDeliveryWorkerLogDeliveryS3Input interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryS3Output() ConnectorLogDeliveryWorkerLogDeliveryS3Output
	ToConnectorLogDeliveryWorkerLogDeliveryS3OutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3Output
}

type ConnectorLogDeliveryWorkerLogDeliveryS3Args struct {
	// The name of the S3 bucket that is the destination for log delivery.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Specifies whether connector logs get sent to the specified Amazon S3 destination.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The S3 prefix that is the destination for log delivery.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (ConnectorLogDeliveryWorkerLogDeliveryS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryS3)(nil)).Elem()
}

func (i ConnectorLogDeliveryWorkerLogDeliveryS3Args) ToConnectorLogDeliveryWorkerLogDeliveryS3Output() ConnectorLogDeliveryWorkerLogDeliveryS3Output {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryS3OutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryS3Args) ToConnectorLogDeliveryWorkerLogDeliveryS3OutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryS3Output)
}

func (i ConnectorLogDeliveryWorkerLogDeliveryS3Args) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput() ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryWorkerLogDeliveryS3Args) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryS3Output).ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(ctx)
}

// ConnectorLogDeliveryWorkerLogDeliveryS3PtrInput is an input type that accepts ConnectorLogDeliveryWorkerLogDeliveryS3Args, ConnectorLogDeliveryWorkerLogDeliveryS3Ptr and ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryWorkerLogDeliveryS3PtrInput` via:
//
//          ConnectorLogDeliveryWorkerLogDeliveryS3Args{...}
//
//  or:
//
//          nil
type ConnectorLogDeliveryWorkerLogDeliveryS3PtrInput interface {
	pulumi.Input

	ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput() ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput
	ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput
}

type connectorLogDeliveryWorkerLogDeliveryS3PtrType ConnectorLogDeliveryWorkerLogDeliveryS3Args

func ConnectorLogDeliveryWorkerLogDeliveryS3Ptr(v *ConnectorLogDeliveryWorkerLogDeliveryS3Args) ConnectorLogDeliveryWorkerLogDeliveryS3PtrInput {
	return (*connectorLogDeliveryWorkerLogDeliveryS3PtrType)(v)
}

func (*connectorLogDeliveryWorkerLogDeliveryS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDeliveryS3)(nil)).Elem()
}

func (i *connectorLogDeliveryWorkerLogDeliveryS3PtrType) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput() ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return i.ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(context.Background())
}

func (i *connectorLogDeliveryWorkerLogDeliveryS3PtrType) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryS3Output struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryS3)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryS3Output) ToConnectorLogDeliveryWorkerLogDeliveryS3Output() ConnectorLogDeliveryWorkerLogDeliveryS3Output {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryS3Output) ToConnectorLogDeliveryWorkerLogDeliveryS3OutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3Output {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryS3Output) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput() ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return o.ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(context.Background())
}

func (o ConnectorLogDeliveryWorkerLogDeliveryS3Output) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorLogDeliveryWorkerLogDeliveryS3) *ConnectorLogDeliveryWorkerLogDeliveryS3 {
		return &v
	}).(ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput)
}

// The name of the S3 bucket that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryS3Output) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDeliveryS3) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Specifies whether connector logs get sent to the specified Amazon S3 destination.
func (o ConnectorLogDeliveryWorkerLogDeliveryS3Output) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDeliveryS3) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The S3 prefix that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryS3Output) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorLogDeliveryWorkerLogDeliveryS3) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDeliveryWorkerLogDeliveryS3)(nil)).Elem()
}

func (o ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput() ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput) ToConnectorLogDeliveryWorkerLogDeliveryS3PtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput {
	return o
}

func (o ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput) Elem() ConnectorLogDeliveryWorkerLogDeliveryS3Output {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryS3) ConnectorLogDeliveryWorkerLogDeliveryS3 {
		if v != nil {
			return *v
		}
		var ret ConnectorLogDeliveryWorkerLogDeliveryS3
		return ret
	}).(ConnectorLogDeliveryWorkerLogDeliveryS3Output)
}

// The name of the S3 bucket that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Specifies whether connector logs get sent to the specified Amazon S3 destination.
func (o ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryS3) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The S3 prefix that is the destination for log delivery.
func (o ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDeliveryWorkerLogDeliveryS3) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type ConnectorPlugin struct {
	// Details about a custom plugin. See below.
	CustomPlugin ConnectorPluginCustomPlugin `pulumi:"customPlugin"`
}

// ConnectorPluginInput is an input type that accepts ConnectorPluginArgs and ConnectorPluginOutput values.
// You can construct a concrete instance of `ConnectorPluginInput` via:
//
//          ConnectorPluginArgs{...}
type ConnectorPluginInput interface {
	pulumi.Input

	ToConnectorPluginOutput() ConnectorPluginOutput
	ToConnectorPluginOutputWithContext(context.Context) ConnectorPluginOutput
}

type ConnectorPluginArgs struct {
	// Details about a custom plugin. See below.
	CustomPlugin ConnectorPluginCustomPluginInput `pulumi:"customPlugin"`
}

func (ConnectorPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorPlugin)(nil)).Elem()
}

func (i ConnectorPluginArgs) ToConnectorPluginOutput() ConnectorPluginOutput {
	return i.ToConnectorPluginOutputWithContext(context.Background())
}

func (i ConnectorPluginArgs) ToConnectorPluginOutputWithContext(ctx context.Context) ConnectorPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPluginOutput)
}

// ConnectorPluginArrayInput is an input type that accepts ConnectorPluginArray and ConnectorPluginArrayOutput values.
// You can construct a concrete instance of `ConnectorPluginArrayInput` via:
//
//          ConnectorPluginArray{ ConnectorPluginArgs{...} }
type ConnectorPluginArrayInput interface {
	pulumi.Input

	ToConnectorPluginArrayOutput() ConnectorPluginArrayOutput
	ToConnectorPluginArrayOutputWithContext(context.Context) ConnectorPluginArrayOutput
}

type ConnectorPluginArray []ConnectorPluginInput

func (ConnectorPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorPlugin)(nil)).Elem()
}

func (i ConnectorPluginArray) ToConnectorPluginArrayOutput() ConnectorPluginArrayOutput {
	return i.ToConnectorPluginArrayOutputWithContext(context.Background())
}

func (i ConnectorPluginArray) ToConnectorPluginArrayOutputWithContext(ctx context.Context) ConnectorPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPluginArrayOutput)
}

type ConnectorPluginOutput struct{ *pulumi.OutputState }

func (ConnectorPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorPlugin)(nil)).Elem()
}

func (o ConnectorPluginOutput) ToConnectorPluginOutput() ConnectorPluginOutput {
	return o
}

func (o ConnectorPluginOutput) ToConnectorPluginOutputWithContext(ctx context.Context) ConnectorPluginOutput {
	return o
}

// Details about a custom plugin. See below.
func (o ConnectorPluginOutput) CustomPlugin() ConnectorPluginCustomPluginOutput {
	return o.ApplyT(func(v ConnectorPlugin) ConnectorPluginCustomPlugin { return v.CustomPlugin }).(ConnectorPluginCustomPluginOutput)
}

type ConnectorPluginArrayOutput struct{ *pulumi.OutputState }

func (ConnectorPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorPlugin)(nil)).Elem()
}

func (o ConnectorPluginArrayOutput) ToConnectorPluginArrayOutput() ConnectorPluginArrayOutput {
	return o
}

func (o ConnectorPluginArrayOutput) ToConnectorPluginArrayOutputWithContext(ctx context.Context) ConnectorPluginArrayOutput {
	return o
}

func (o ConnectorPluginArrayOutput) Index(i pulumi.IntInput) ConnectorPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorPlugin {
		return vs[0].([]ConnectorPlugin)[vs[1].(int)]
	}).(ConnectorPluginOutput)
}

type ConnectorPluginCustomPlugin struct {
	// The Amazon Resource Name (ARN) of the worker configuration.
	Arn string `pulumi:"arn"`
	// The revision of the worker configuration.
	Revision int `pulumi:"revision"`
}

// ConnectorPluginCustomPluginInput is an input type that accepts ConnectorPluginCustomPluginArgs and ConnectorPluginCustomPluginOutput values.
// You can construct a concrete instance of `ConnectorPluginCustomPluginInput` via:
//
//          ConnectorPluginCustomPluginArgs{...}
type ConnectorPluginCustomPluginInput interface {
	pulumi.Input

	ToConnectorPluginCustomPluginOutput() ConnectorPluginCustomPluginOutput
	ToConnectorPluginCustomPluginOutputWithContext(context.Context) ConnectorPluginCustomPluginOutput
}

type ConnectorPluginCustomPluginArgs struct {
	// The Amazon Resource Name (ARN) of the worker configuration.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The revision of the worker configuration.
	Revision pulumi.IntInput `pulumi:"revision"`
}

func (ConnectorPluginCustomPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorPluginCustomPlugin)(nil)).Elem()
}

func (i ConnectorPluginCustomPluginArgs) ToConnectorPluginCustomPluginOutput() ConnectorPluginCustomPluginOutput {
	return i.ToConnectorPluginCustomPluginOutputWithContext(context.Background())
}

func (i ConnectorPluginCustomPluginArgs) ToConnectorPluginCustomPluginOutputWithContext(ctx context.Context) ConnectorPluginCustomPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPluginCustomPluginOutput)
}

type ConnectorPluginCustomPluginOutput struct{ *pulumi.OutputState }

func (ConnectorPluginCustomPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorPluginCustomPlugin)(nil)).Elem()
}

func (o ConnectorPluginCustomPluginOutput) ToConnectorPluginCustomPluginOutput() ConnectorPluginCustomPluginOutput {
	return o
}

func (o ConnectorPluginCustomPluginOutput) ToConnectorPluginCustomPluginOutputWithContext(ctx context.Context) ConnectorPluginCustomPluginOutput {
	return o
}

// The Amazon Resource Name (ARN) of the worker configuration.
func (o ConnectorPluginCustomPluginOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorPluginCustomPlugin) string { return v.Arn }).(pulumi.StringOutput)
}

// The revision of the worker configuration.
func (o ConnectorPluginCustomPluginOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorPluginCustomPlugin) int { return v.Revision }).(pulumi.IntOutput)
}

type ConnectorWorkerConfiguration struct {
	// The Amazon Resource Name (ARN) of the worker configuration.
	Arn string `pulumi:"arn"`
	// The revision of the worker configuration.
	Revision int `pulumi:"revision"`
}

// ConnectorWorkerConfigurationInput is an input type that accepts ConnectorWorkerConfigurationArgs and ConnectorWorkerConfigurationOutput values.
// You can construct a concrete instance of `ConnectorWorkerConfigurationInput` via:
//
//          ConnectorWorkerConfigurationArgs{...}
type ConnectorWorkerConfigurationInput interface {
	pulumi.Input

	ToConnectorWorkerConfigurationOutput() ConnectorWorkerConfigurationOutput
	ToConnectorWorkerConfigurationOutputWithContext(context.Context) ConnectorWorkerConfigurationOutput
}

type ConnectorWorkerConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the worker configuration.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The revision of the worker configuration.
	Revision pulumi.IntInput `pulumi:"revision"`
}

func (ConnectorWorkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorWorkerConfiguration)(nil)).Elem()
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationOutput() ConnectorWorkerConfigurationOutput {
	return i.ToConnectorWorkerConfigurationOutputWithContext(context.Background())
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerConfigurationOutput)
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return i.ToConnectorWorkerConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerConfigurationOutput).ToConnectorWorkerConfigurationPtrOutputWithContext(ctx)
}

// ConnectorWorkerConfigurationPtrInput is an input type that accepts ConnectorWorkerConfigurationArgs, ConnectorWorkerConfigurationPtr and ConnectorWorkerConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectorWorkerConfigurationPtrInput` via:
//
//          ConnectorWorkerConfigurationArgs{...}
//
//  or:
//
//          nil
type ConnectorWorkerConfigurationPtrInput interface {
	pulumi.Input

	ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput
	ToConnectorWorkerConfigurationPtrOutputWithContext(context.Context) ConnectorWorkerConfigurationPtrOutput
}

type connectorWorkerConfigurationPtrType ConnectorWorkerConfigurationArgs

func ConnectorWorkerConfigurationPtr(v *ConnectorWorkerConfigurationArgs) ConnectorWorkerConfigurationPtrInput {
	return (*connectorWorkerConfigurationPtrType)(v)
}

func (*connectorWorkerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorWorkerConfiguration)(nil)).Elem()
}

func (i *connectorWorkerConfigurationPtrType) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return i.ToConnectorWorkerConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectorWorkerConfigurationPtrType) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerConfigurationPtrOutput)
}

type ConnectorWorkerConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectorWorkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorWorkerConfiguration)(nil)).Elem()
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationOutput() ConnectorWorkerConfigurationOutput {
	return o
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationOutput {
	return o
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return o.ToConnectorWorkerConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorWorkerConfiguration) *ConnectorWorkerConfiguration {
		return &v
	}).(ConnectorWorkerConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the worker configuration.
func (o ConnectorWorkerConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorWorkerConfiguration) string { return v.Arn }).(pulumi.StringOutput)
}

// The revision of the worker configuration.
func (o ConnectorWorkerConfigurationOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorWorkerConfiguration) int { return v.Revision }).(pulumi.IntOutput)
}

type ConnectorWorkerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectorWorkerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorWorkerConfiguration)(nil)).Elem()
}

func (o ConnectorWorkerConfigurationPtrOutput) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return o
}

func (o ConnectorWorkerConfigurationPtrOutput) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return o
}

func (o ConnectorWorkerConfigurationPtrOutput) Elem() ConnectorWorkerConfigurationOutput {
	return o.ApplyT(func(v *ConnectorWorkerConfiguration) ConnectorWorkerConfiguration {
		if v != nil {
			return *v
		}
		var ret ConnectorWorkerConfiguration
		return ret
	}).(ConnectorWorkerConfigurationOutput)
}

// The Amazon Resource Name (ARN) of the worker configuration.
func (o ConnectorWorkerConfigurationPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorWorkerConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// The revision of the worker configuration.
func (o ConnectorWorkerConfigurationPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorWorkerConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.IntPtrOutput)
}

type CustomPluginLocation struct {
	// Information of the plugin file stored in Amazon S3. See below.
	S3 CustomPluginLocationS3 `pulumi:"s3"`
}

// CustomPluginLocationInput is an input type that accepts CustomPluginLocationArgs and CustomPluginLocationOutput values.
// You can construct a concrete instance of `CustomPluginLocationInput` via:
//
//          CustomPluginLocationArgs{...}
type CustomPluginLocationInput interface {
	pulumi.Input

	ToCustomPluginLocationOutput() CustomPluginLocationOutput
	ToCustomPluginLocationOutputWithContext(context.Context) CustomPluginLocationOutput
}

type CustomPluginLocationArgs struct {
	// Information of the plugin file stored in Amazon S3. See below.
	S3 CustomPluginLocationS3Input `pulumi:"s3"`
}

func (CustomPluginLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPluginLocation)(nil)).Elem()
}

func (i CustomPluginLocationArgs) ToCustomPluginLocationOutput() CustomPluginLocationOutput {
	return i.ToCustomPluginLocationOutputWithContext(context.Background())
}

func (i CustomPluginLocationArgs) ToCustomPluginLocationOutputWithContext(ctx context.Context) CustomPluginLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPluginLocationOutput)
}

func (i CustomPluginLocationArgs) ToCustomPluginLocationPtrOutput() CustomPluginLocationPtrOutput {
	return i.ToCustomPluginLocationPtrOutputWithContext(context.Background())
}

func (i CustomPluginLocationArgs) ToCustomPluginLocationPtrOutputWithContext(ctx context.Context) CustomPluginLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPluginLocationOutput).ToCustomPluginLocationPtrOutputWithContext(ctx)
}

// CustomPluginLocationPtrInput is an input type that accepts CustomPluginLocationArgs, CustomPluginLocationPtr and CustomPluginLocationPtrOutput values.
// You can construct a concrete instance of `CustomPluginLocationPtrInput` via:
//
//          CustomPluginLocationArgs{...}
//
//  or:
//
//          nil
type CustomPluginLocationPtrInput interface {
	pulumi.Input

	ToCustomPluginLocationPtrOutput() CustomPluginLocationPtrOutput
	ToCustomPluginLocationPtrOutputWithContext(context.Context) CustomPluginLocationPtrOutput
}

type customPluginLocationPtrType CustomPluginLocationArgs

func CustomPluginLocationPtr(v *CustomPluginLocationArgs) CustomPluginLocationPtrInput {
	return (*customPluginLocationPtrType)(v)
}

func (*customPluginLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPluginLocation)(nil)).Elem()
}

func (i *customPluginLocationPtrType) ToCustomPluginLocationPtrOutput() CustomPluginLocationPtrOutput {
	return i.ToCustomPluginLocationPtrOutputWithContext(context.Background())
}

func (i *customPluginLocationPtrType) ToCustomPluginLocationPtrOutputWithContext(ctx context.Context) CustomPluginLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPluginLocationPtrOutput)
}

type CustomPluginLocationOutput struct{ *pulumi.OutputState }

func (CustomPluginLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPluginLocation)(nil)).Elem()
}

func (o CustomPluginLocationOutput) ToCustomPluginLocationOutput() CustomPluginLocationOutput {
	return o
}

func (o CustomPluginLocationOutput) ToCustomPluginLocationOutputWithContext(ctx context.Context) CustomPluginLocationOutput {
	return o
}

func (o CustomPluginLocationOutput) ToCustomPluginLocationPtrOutput() CustomPluginLocationPtrOutput {
	return o.ToCustomPluginLocationPtrOutputWithContext(context.Background())
}

func (o CustomPluginLocationOutput) ToCustomPluginLocationPtrOutputWithContext(ctx context.Context) CustomPluginLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomPluginLocation) *CustomPluginLocation {
		return &v
	}).(CustomPluginLocationPtrOutput)
}

// Information of the plugin file stored in Amazon S3. See below.
func (o CustomPluginLocationOutput) S3() CustomPluginLocationS3Output {
	return o.ApplyT(func(v CustomPluginLocation) CustomPluginLocationS3 { return v.S3 }).(CustomPluginLocationS3Output)
}

type CustomPluginLocationPtrOutput struct{ *pulumi.OutputState }

func (CustomPluginLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPluginLocation)(nil)).Elem()
}

func (o CustomPluginLocationPtrOutput) ToCustomPluginLocationPtrOutput() CustomPluginLocationPtrOutput {
	return o
}

func (o CustomPluginLocationPtrOutput) ToCustomPluginLocationPtrOutputWithContext(ctx context.Context) CustomPluginLocationPtrOutput {
	return o
}

func (o CustomPluginLocationPtrOutput) Elem() CustomPluginLocationOutput {
	return o.ApplyT(func(v *CustomPluginLocation) CustomPluginLocation {
		if v != nil {
			return *v
		}
		var ret CustomPluginLocation
		return ret
	}).(CustomPluginLocationOutput)
}

// Information of the plugin file stored in Amazon S3. See below.
func (o CustomPluginLocationPtrOutput) S3() CustomPluginLocationS3PtrOutput {
	return o.ApplyT(func(v *CustomPluginLocation) *CustomPluginLocationS3 {
		if v == nil {
			return nil
		}
		return &v.S3
	}).(CustomPluginLocationS3PtrOutput)
}

type CustomPluginLocationS3 struct {
	// The Amazon Resource Name (ARN) of an S3 bucket.
	BucketArn string `pulumi:"bucketArn"`
	// The file key for an object in an S3 bucket.
	FileKey string `pulumi:"fileKey"`
	// The version of an object in an S3 bucket.
	ObjectVersion *string `pulumi:"objectVersion"`
}

// CustomPluginLocationS3Input is an input type that accepts CustomPluginLocationS3Args and CustomPluginLocationS3Output values.
// You can construct a concrete instance of `CustomPluginLocationS3Input` via:
//
//          CustomPluginLocationS3Args{...}
type CustomPluginLocationS3Input interface {
	pulumi.Input

	ToCustomPluginLocationS3Output() CustomPluginLocationS3Output
	ToCustomPluginLocationS3OutputWithContext(context.Context) CustomPluginLocationS3Output
}

type CustomPluginLocationS3Args struct {
	// The Amazon Resource Name (ARN) of an S3 bucket.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The file key for an object in an S3 bucket.
	FileKey pulumi.StringInput `pulumi:"fileKey"`
	// The version of an object in an S3 bucket.
	ObjectVersion pulumi.StringPtrInput `pulumi:"objectVersion"`
}

func (CustomPluginLocationS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPluginLocationS3)(nil)).Elem()
}

func (i CustomPluginLocationS3Args) ToCustomPluginLocationS3Output() CustomPluginLocationS3Output {
	return i.ToCustomPluginLocationS3OutputWithContext(context.Background())
}

func (i CustomPluginLocationS3Args) ToCustomPluginLocationS3OutputWithContext(ctx context.Context) CustomPluginLocationS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPluginLocationS3Output)
}

func (i CustomPluginLocationS3Args) ToCustomPluginLocationS3PtrOutput() CustomPluginLocationS3PtrOutput {
	return i.ToCustomPluginLocationS3PtrOutputWithContext(context.Background())
}

func (i CustomPluginLocationS3Args) ToCustomPluginLocationS3PtrOutputWithContext(ctx context.Context) CustomPluginLocationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPluginLocationS3Output).ToCustomPluginLocationS3PtrOutputWithContext(ctx)
}

// CustomPluginLocationS3PtrInput is an input type that accepts CustomPluginLocationS3Args, CustomPluginLocationS3Ptr and CustomPluginLocationS3PtrOutput values.
// You can construct a concrete instance of `CustomPluginLocationS3PtrInput` via:
//
//          CustomPluginLocationS3Args{...}
//
//  or:
//
//          nil
type CustomPluginLocationS3PtrInput interface {
	pulumi.Input

	ToCustomPluginLocationS3PtrOutput() CustomPluginLocationS3PtrOutput
	ToCustomPluginLocationS3PtrOutputWithContext(context.Context) CustomPluginLocationS3PtrOutput
}

type customPluginLocationS3PtrType CustomPluginLocationS3Args

func CustomPluginLocationS3Ptr(v *CustomPluginLocationS3Args) CustomPluginLocationS3PtrInput {
	return (*customPluginLocationS3PtrType)(v)
}

func (*customPluginLocationS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPluginLocationS3)(nil)).Elem()
}

func (i *customPluginLocationS3PtrType) ToCustomPluginLocationS3PtrOutput() CustomPluginLocationS3PtrOutput {
	return i.ToCustomPluginLocationS3PtrOutputWithContext(context.Background())
}

func (i *customPluginLocationS3PtrType) ToCustomPluginLocationS3PtrOutputWithContext(ctx context.Context) CustomPluginLocationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPluginLocationS3PtrOutput)
}

type CustomPluginLocationS3Output struct{ *pulumi.OutputState }

func (CustomPluginLocationS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPluginLocationS3)(nil)).Elem()
}

func (o CustomPluginLocationS3Output) ToCustomPluginLocationS3Output() CustomPluginLocationS3Output {
	return o
}

func (o CustomPluginLocationS3Output) ToCustomPluginLocationS3OutputWithContext(ctx context.Context) CustomPluginLocationS3Output {
	return o
}

func (o CustomPluginLocationS3Output) ToCustomPluginLocationS3PtrOutput() CustomPluginLocationS3PtrOutput {
	return o.ToCustomPluginLocationS3PtrOutputWithContext(context.Background())
}

func (o CustomPluginLocationS3Output) ToCustomPluginLocationS3PtrOutputWithContext(ctx context.Context) CustomPluginLocationS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomPluginLocationS3) *CustomPluginLocationS3 {
		return &v
	}).(CustomPluginLocationS3PtrOutput)
}

// The Amazon Resource Name (ARN) of an S3 bucket.
func (o CustomPluginLocationS3Output) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPluginLocationS3) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The file key for an object in an S3 bucket.
func (o CustomPluginLocationS3Output) FileKey() pulumi.StringOutput {
	return o.ApplyT(func(v CustomPluginLocationS3) string { return v.FileKey }).(pulumi.StringOutput)
}

// The version of an object in an S3 bucket.
func (o CustomPluginLocationS3Output) ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomPluginLocationS3) *string { return v.ObjectVersion }).(pulumi.StringPtrOutput)
}

type CustomPluginLocationS3PtrOutput struct{ *pulumi.OutputState }

func (CustomPluginLocationS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPluginLocationS3)(nil)).Elem()
}

func (o CustomPluginLocationS3PtrOutput) ToCustomPluginLocationS3PtrOutput() CustomPluginLocationS3PtrOutput {
	return o
}

func (o CustomPluginLocationS3PtrOutput) ToCustomPluginLocationS3PtrOutputWithContext(ctx context.Context) CustomPluginLocationS3PtrOutput {
	return o
}

func (o CustomPluginLocationS3PtrOutput) Elem() CustomPluginLocationS3Output {
	return o.ApplyT(func(v *CustomPluginLocationS3) CustomPluginLocationS3 {
		if v != nil {
			return *v
		}
		var ret CustomPluginLocationS3
		return ret
	}).(CustomPluginLocationS3Output)
}

// The Amazon Resource Name (ARN) of an S3 bucket.
func (o CustomPluginLocationS3PtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomPluginLocationS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// The file key for an object in an S3 bucket.
func (o CustomPluginLocationS3PtrOutput) FileKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomPluginLocationS3) *string {
		if v == nil {
			return nil
		}
		return &v.FileKey
	}).(pulumi.StringPtrOutput)
}

// The version of an object in an S3 bucket.
func (o CustomPluginLocationS3PtrOutput) ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomPluginLocationS3) *string {
		if v == nil {
			return nil
		}
		return v.ObjectVersion
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityInput)(nil)).Elem(), ConnectorCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityPtrInput)(nil)).Elem(), ConnectorCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityAutoscalingInput)(nil)).Elem(), ConnectorCapacityAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityAutoscalingPtrInput)(nil)).Elem(), ConnectorCapacityAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityAutoscalingScaleInPolicyInput)(nil)).Elem(), ConnectorCapacityAutoscalingScaleInPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityAutoscalingScaleInPolicyPtrInput)(nil)).Elem(), ConnectorCapacityAutoscalingScaleInPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityAutoscalingScaleOutPolicyInput)(nil)).Elem(), ConnectorCapacityAutoscalingScaleOutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityAutoscalingScaleOutPolicyPtrInput)(nil)).Elem(), ConnectorCapacityAutoscalingScaleOutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityProvisionedCapacityInput)(nil)).Elem(), ConnectorCapacityProvisionedCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityProvisionedCapacityPtrInput)(nil)).Elem(), ConnectorCapacityProvisionedCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterPtrInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaClusterInput)(nil)).Elem(), ConnectorKafkaClusterApacheKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaClusterPtrInput)(nil)).Elem(), ConnectorKafkaClusterApacheKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaClusterVpcInput)(nil)).Elem(), ConnectorKafkaClusterApacheKafkaClusterVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterApacheKafkaClusterVpcPtrInput)(nil)).Elem(), ConnectorKafkaClusterApacheKafkaClusterVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterClientAuthenticationInput)(nil)).Elem(), ConnectorKafkaClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterClientAuthenticationPtrInput)(nil)).Elem(), ConnectorKafkaClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransitInput)(nil)).Elem(), ConnectorKafkaClusterEncryptionInTransitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransitPtrInput)(nil)).Elem(), ConnectorKafkaClusterEncryptionInTransitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryInput)(nil)).Elem(), ConnectorLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryPtrInput)(nil)).Elem(), ConnectorLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryInput)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryPtrInput)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsInput)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrInput)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryFirehoseInput)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrInput)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryS3Input)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryWorkerLogDeliveryS3PtrInput)(nil)).Elem(), ConnectorLogDeliveryWorkerLogDeliveryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorPluginInput)(nil)).Elem(), ConnectorPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorPluginArrayInput)(nil)).Elem(), ConnectorPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorPluginCustomPluginInput)(nil)).Elem(), ConnectorPluginCustomPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorWorkerConfigurationInput)(nil)).Elem(), ConnectorWorkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorWorkerConfigurationPtrInput)(nil)).Elem(), ConnectorWorkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPluginLocationInput)(nil)).Elem(), CustomPluginLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPluginLocationPtrInput)(nil)).Elem(), CustomPluginLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPluginLocationS3Input)(nil)).Elem(), CustomPluginLocationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPluginLocationS3PtrInput)(nil)).Elem(), CustomPluginLocationS3Args{})
	pulumi.RegisterOutputType(ConnectorCapacityOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityPtrOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityAutoscalingOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityAutoscalingScaleInPolicyOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityAutoscalingScaleInPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityAutoscalingScaleOutPolicyOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityAutoscalingScaleOutPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityProvisionedCapacityOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityProvisionedCapacityPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterApacheKafkaClusterOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterApacheKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterApacheKafkaClusterVpcOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterApacheKafkaClusterVpcPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterClientAuthenticationOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterClientAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterEncryptionInTransitOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterEncryptionInTransitPtrOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryPtrOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryPtrOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryCloudwatchLogsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryFirehoseOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryFirehosePtrOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryS3Output{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryWorkerLogDeliveryS3PtrOutput{})
	pulumi.RegisterOutputType(ConnectorPluginOutput{})
	pulumi.RegisterOutputType(ConnectorPluginArrayOutput{})
	pulumi.RegisterOutputType(ConnectorPluginCustomPluginOutput{})
	pulumi.RegisterOutputType(ConnectorWorkerConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectorWorkerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CustomPluginLocationOutput{})
	pulumi.RegisterOutputType(CustomPluginLocationPtrOutput{})
	pulumi.RegisterOutputType(CustomPluginLocationS3Output{})
	pulumi.RegisterOutputType(CustomPluginLocationS3PtrOutput{})
}
