// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mskconnect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Amazon MSK Connect Worker Configuration Resource.
//
// ## Example Usage
// ### Basic configuration
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/mskconnect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mskconnect.NewWorkerConfiguration(ctx, "example", &mskconnect.WorkerConfigurationArgs{
//				PropertiesFileContent: pulumi.String(fmt.Sprintf("key.converter=org.apache.kafka.connect.storage.StringConverter\nvalue.converter=org.apache.kafka.connect.storage.StringConverter\n\n")),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MSK Connect Worker Configuration can be imported using the plugin's `arn`, e.g.,
//
// ```sh
//
//	$ pulumi import aws:mskconnect/workerConfiguration:WorkerConfiguration example 'arn:aws:kafkaconnect:eu-central-1:123456789012:worker-configuration/example/8848493b-7fcc-478c-a646-4a52634e3378-4'
//
// ```
type WorkerConfiguration struct {
	pulumi.CustomResourceState

	// the Amazon Resource Name (ARN) of the worker configuration.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A summary description of the worker configuration.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// an ID of the latest successfully created revision of the worker configuration.
	LatestRevision pulumi.IntOutput `pulumi:"latestRevision"`
	// The name of the worker configuration.
	Name pulumi.StringOutput `pulumi:"name"`
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	PropertiesFileContent pulumi.StringOutput `pulumi:"propertiesFileContent"`
}

// NewWorkerConfiguration registers a new resource with the given unique name, arguments, and options.
func NewWorkerConfiguration(ctx *pulumi.Context,
	name string, args *WorkerConfigurationArgs, opts ...pulumi.ResourceOption) (*WorkerConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PropertiesFileContent == nil {
		return nil, errors.New("invalid value for required argument 'PropertiesFileContent'")
	}
	var resource WorkerConfiguration
	err := ctx.RegisterResource("aws:mskconnect/workerConfiguration:WorkerConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkerConfiguration gets an existing WorkerConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkerConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkerConfigurationState, opts ...pulumi.ResourceOption) (*WorkerConfiguration, error) {
	var resource WorkerConfiguration
	err := ctx.ReadResource("aws:mskconnect/workerConfiguration:WorkerConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkerConfiguration resources.
type workerConfigurationState struct {
	// the Amazon Resource Name (ARN) of the worker configuration.
	Arn *string `pulumi:"arn"`
	// A summary description of the worker configuration.
	Description *string `pulumi:"description"`
	// an ID of the latest successfully created revision of the worker configuration.
	LatestRevision *int `pulumi:"latestRevision"`
	// The name of the worker configuration.
	Name *string `pulumi:"name"`
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	PropertiesFileContent *string `pulumi:"propertiesFileContent"`
}

type WorkerConfigurationState struct {
	// the Amazon Resource Name (ARN) of the worker configuration.
	Arn pulumi.StringPtrInput
	// A summary description of the worker configuration.
	Description pulumi.StringPtrInput
	// an ID of the latest successfully created revision of the worker configuration.
	LatestRevision pulumi.IntPtrInput
	// The name of the worker configuration.
	Name pulumi.StringPtrInput
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	PropertiesFileContent pulumi.StringPtrInput
}

func (WorkerConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*workerConfigurationState)(nil)).Elem()
}

type workerConfigurationArgs struct {
	// A summary description of the worker configuration.
	Description *string `pulumi:"description"`
	// The name of the worker configuration.
	Name *string `pulumi:"name"`
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	PropertiesFileContent string `pulumi:"propertiesFileContent"`
}

// The set of arguments for constructing a WorkerConfiguration resource.
type WorkerConfigurationArgs struct {
	// A summary description of the worker configuration.
	Description pulumi.StringPtrInput
	// The name of the worker configuration.
	Name pulumi.StringPtrInput
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	PropertiesFileContent pulumi.StringInput
}

func (WorkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workerConfigurationArgs)(nil)).Elem()
}

type WorkerConfigurationInput interface {
	pulumi.Input

	ToWorkerConfigurationOutput() WorkerConfigurationOutput
	ToWorkerConfigurationOutputWithContext(ctx context.Context) WorkerConfigurationOutput
}

func (*WorkerConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerConfiguration)(nil)).Elem()
}

func (i *WorkerConfiguration) ToWorkerConfigurationOutput() WorkerConfigurationOutput {
	return i.ToWorkerConfigurationOutputWithContext(context.Background())
}

func (i *WorkerConfiguration) ToWorkerConfigurationOutputWithContext(ctx context.Context) WorkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerConfigurationOutput)
}

// WorkerConfigurationArrayInput is an input type that accepts WorkerConfigurationArray and WorkerConfigurationArrayOutput values.
// You can construct a concrete instance of `WorkerConfigurationArrayInput` via:
//
//	WorkerConfigurationArray{ WorkerConfigurationArgs{...} }
type WorkerConfigurationArrayInput interface {
	pulumi.Input

	ToWorkerConfigurationArrayOutput() WorkerConfigurationArrayOutput
	ToWorkerConfigurationArrayOutputWithContext(context.Context) WorkerConfigurationArrayOutput
}

type WorkerConfigurationArray []WorkerConfigurationInput

func (WorkerConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkerConfiguration)(nil)).Elem()
}

func (i WorkerConfigurationArray) ToWorkerConfigurationArrayOutput() WorkerConfigurationArrayOutput {
	return i.ToWorkerConfigurationArrayOutputWithContext(context.Background())
}

func (i WorkerConfigurationArray) ToWorkerConfigurationArrayOutputWithContext(ctx context.Context) WorkerConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerConfigurationArrayOutput)
}

// WorkerConfigurationMapInput is an input type that accepts WorkerConfigurationMap and WorkerConfigurationMapOutput values.
// You can construct a concrete instance of `WorkerConfigurationMapInput` via:
//
//	WorkerConfigurationMap{ "key": WorkerConfigurationArgs{...} }
type WorkerConfigurationMapInput interface {
	pulumi.Input

	ToWorkerConfigurationMapOutput() WorkerConfigurationMapOutput
	ToWorkerConfigurationMapOutputWithContext(context.Context) WorkerConfigurationMapOutput
}

type WorkerConfigurationMap map[string]WorkerConfigurationInput

func (WorkerConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkerConfiguration)(nil)).Elem()
}

func (i WorkerConfigurationMap) ToWorkerConfigurationMapOutput() WorkerConfigurationMapOutput {
	return i.ToWorkerConfigurationMapOutputWithContext(context.Background())
}

func (i WorkerConfigurationMap) ToWorkerConfigurationMapOutputWithContext(ctx context.Context) WorkerConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerConfigurationMapOutput)
}

type WorkerConfigurationOutput struct{ *pulumi.OutputState }

func (WorkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerConfiguration)(nil)).Elem()
}

func (o WorkerConfigurationOutput) ToWorkerConfigurationOutput() WorkerConfigurationOutput {
	return o
}

func (o WorkerConfigurationOutput) ToWorkerConfigurationOutputWithContext(ctx context.Context) WorkerConfigurationOutput {
	return o
}

// the Amazon Resource Name (ARN) of the worker configuration.
func (o WorkerConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkerConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A summary description of the worker configuration.
func (o WorkerConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkerConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// an ID of the latest successfully created revision of the worker configuration.
func (o WorkerConfigurationOutput) LatestRevision() pulumi.IntOutput {
	return o.ApplyT(func(v *WorkerConfiguration) pulumi.IntOutput { return v.LatestRevision }).(pulumi.IntOutput)
}

// The name of the worker configuration.
func (o WorkerConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkerConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
func (o WorkerConfigurationOutput) PropertiesFileContent() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkerConfiguration) pulumi.StringOutput { return v.PropertiesFileContent }).(pulumi.StringOutput)
}

type WorkerConfigurationArrayOutput struct{ *pulumi.OutputState }

func (WorkerConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkerConfiguration)(nil)).Elem()
}

func (o WorkerConfigurationArrayOutput) ToWorkerConfigurationArrayOutput() WorkerConfigurationArrayOutput {
	return o
}

func (o WorkerConfigurationArrayOutput) ToWorkerConfigurationArrayOutputWithContext(ctx context.Context) WorkerConfigurationArrayOutput {
	return o
}

func (o WorkerConfigurationArrayOutput) Index(i pulumi.IntInput) WorkerConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkerConfiguration {
		return vs[0].([]*WorkerConfiguration)[vs[1].(int)]
	}).(WorkerConfigurationOutput)
}

type WorkerConfigurationMapOutput struct{ *pulumi.OutputState }

func (WorkerConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkerConfiguration)(nil)).Elem()
}

func (o WorkerConfigurationMapOutput) ToWorkerConfigurationMapOutput() WorkerConfigurationMapOutput {
	return o
}

func (o WorkerConfigurationMapOutput) ToWorkerConfigurationMapOutputWithContext(ctx context.Context) WorkerConfigurationMapOutput {
	return o
}

func (o WorkerConfigurationMapOutput) MapIndex(k pulumi.StringInput) WorkerConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkerConfiguration {
		return vs[0].(map[string]*WorkerConfiguration)[vs[1].(string)]
	}).(WorkerConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerConfigurationInput)(nil)).Elem(), &WorkerConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerConfigurationArrayInput)(nil)).Elem(), WorkerConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerConfigurationMapInput)(nil)).Elem(), WorkerConfigurationMap{})
	pulumi.RegisterOutputType(WorkerConfigurationOutput{})
	pulumi.RegisterOutputType(WorkerConfigurationArrayOutput{})
	pulumi.RegisterOutputType(WorkerConfigurationMapOutput{})
}
