// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS SQS (Simple Queue) Queues.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/sqs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sqs.GetQueues(ctx, &sqs.GetQueuesArgs{
//				QueueNamePrefix: pulumi.StringRef("example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQueues(ctx *pulumi.Context, args *GetQueuesArgs, opts ...pulumi.InvokeOption) (*GetQueuesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQueuesResult
	err := ctx.Invoke("aws:sqs/getQueues:getQueues", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueues.
type GetQueuesArgs struct {
	// A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned. Queue URLs and names are case-sensitive.
	QueueNamePrefix *string `pulumi:"queueNamePrefix"`
}

// A collection of values returned by getQueues.
type GetQueuesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string  `pulumi:"id"`
	QueueNamePrefix *string `pulumi:"queueNamePrefix"`
	// A list of queue URLs.
	QueueUrls []string `pulumi:"queueUrls"`
}

func GetQueuesOutput(ctx *pulumi.Context, args GetQueuesOutputArgs, opts ...pulumi.InvokeOption) GetQueuesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQueuesResult, error) {
			args := v.(GetQueuesArgs)
			r, err := GetQueues(ctx, &args, opts...)
			var s GetQueuesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQueuesResultOutput)
}

// A collection of arguments for invoking getQueues.
type GetQueuesOutputArgs struct {
	// A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned. Queue URLs and names are case-sensitive.
	QueueNamePrefix pulumi.StringPtrInput `pulumi:"queueNamePrefix"`
}

func (GetQueuesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesArgs)(nil)).Elem()
}

// A collection of values returned by getQueues.
type GetQueuesResultOutput struct{ *pulumi.OutputState }

func (GetQueuesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueuesResult)(nil)).Elem()
}

func (o GetQueuesResultOutput) ToGetQueuesResultOutput() GetQueuesResultOutput {
	return o
}

func (o GetQueuesResultOutput) ToGetQueuesResultOutputWithContext(ctx context.Context) GetQueuesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetQueuesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueuesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetQueuesResultOutput) QueueNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueuesResult) *string { return v.QueueNamePrefix }).(pulumi.StringPtrOutput)
}

// A list of queue URLs.
func (o GetQueuesResultOutput) QueueUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQueuesResult) []string { return v.QueueUrls }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQueuesResultOutput{})
}
