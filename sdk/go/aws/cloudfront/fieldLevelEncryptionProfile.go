// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FieldLevelEncryptionProfile struct {
	pulumi.CustomResourceState

	CallerReference    pulumi.StringOutput                                 `pulumi:"callerReference"`
	Comment            pulumi.StringPtrOutput                              `pulumi:"comment"`
	EncryptionEntities FieldLevelEncryptionProfileEncryptionEntitiesOutput `pulumi:"encryptionEntities"`
	Etag               pulumi.StringOutput                                 `pulumi:"etag"`
	Name               pulumi.StringOutput                                 `pulumi:"name"`
}

// NewFieldLevelEncryptionProfile registers a new resource with the given unique name, arguments, and options.
func NewFieldLevelEncryptionProfile(ctx *pulumi.Context,
	name string, args *FieldLevelEncryptionProfileArgs, opts ...pulumi.ResourceOption) (*FieldLevelEncryptionProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EncryptionEntities == nil {
		return nil, errors.New("invalid value for required argument 'EncryptionEntities'")
	}
	var resource FieldLevelEncryptionProfile
	err := ctx.RegisterResource("aws:cloudfront/fieldLevelEncryptionProfile:FieldLevelEncryptionProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFieldLevelEncryptionProfile gets an existing FieldLevelEncryptionProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFieldLevelEncryptionProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FieldLevelEncryptionProfileState, opts ...pulumi.ResourceOption) (*FieldLevelEncryptionProfile, error) {
	var resource FieldLevelEncryptionProfile
	err := ctx.ReadResource("aws:cloudfront/fieldLevelEncryptionProfile:FieldLevelEncryptionProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FieldLevelEncryptionProfile resources.
type fieldLevelEncryptionProfileState struct {
	CallerReference    *string                                        `pulumi:"callerReference"`
	Comment            *string                                        `pulumi:"comment"`
	EncryptionEntities *FieldLevelEncryptionProfileEncryptionEntities `pulumi:"encryptionEntities"`
	Etag               *string                                        `pulumi:"etag"`
	Name               *string                                        `pulumi:"name"`
}

type FieldLevelEncryptionProfileState struct {
	CallerReference    pulumi.StringPtrInput
	Comment            pulumi.StringPtrInput
	EncryptionEntities FieldLevelEncryptionProfileEncryptionEntitiesPtrInput
	Etag               pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
}

func (FieldLevelEncryptionProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*fieldLevelEncryptionProfileState)(nil)).Elem()
}

type fieldLevelEncryptionProfileArgs struct {
	Comment            *string                                       `pulumi:"comment"`
	EncryptionEntities FieldLevelEncryptionProfileEncryptionEntities `pulumi:"encryptionEntities"`
	Name               *string                                       `pulumi:"name"`
}

// The set of arguments for constructing a FieldLevelEncryptionProfile resource.
type FieldLevelEncryptionProfileArgs struct {
	Comment            pulumi.StringPtrInput
	EncryptionEntities FieldLevelEncryptionProfileEncryptionEntitiesInput
	Name               pulumi.StringPtrInput
}

func (FieldLevelEncryptionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fieldLevelEncryptionProfileArgs)(nil)).Elem()
}

type FieldLevelEncryptionProfileInput interface {
	pulumi.Input

	ToFieldLevelEncryptionProfileOutput() FieldLevelEncryptionProfileOutput
	ToFieldLevelEncryptionProfileOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileOutput
}

func (*FieldLevelEncryptionProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**FieldLevelEncryptionProfile)(nil)).Elem()
}

func (i *FieldLevelEncryptionProfile) ToFieldLevelEncryptionProfileOutput() FieldLevelEncryptionProfileOutput {
	return i.ToFieldLevelEncryptionProfileOutputWithContext(context.Background())
}

func (i *FieldLevelEncryptionProfile) ToFieldLevelEncryptionProfileOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionProfileOutput)
}

// FieldLevelEncryptionProfileArrayInput is an input type that accepts FieldLevelEncryptionProfileArray and FieldLevelEncryptionProfileArrayOutput values.
// You can construct a concrete instance of `FieldLevelEncryptionProfileArrayInput` via:
//
//	FieldLevelEncryptionProfileArray{ FieldLevelEncryptionProfileArgs{...} }
type FieldLevelEncryptionProfileArrayInput interface {
	pulumi.Input

	ToFieldLevelEncryptionProfileArrayOutput() FieldLevelEncryptionProfileArrayOutput
	ToFieldLevelEncryptionProfileArrayOutputWithContext(context.Context) FieldLevelEncryptionProfileArrayOutput
}

type FieldLevelEncryptionProfileArray []FieldLevelEncryptionProfileInput

func (FieldLevelEncryptionProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FieldLevelEncryptionProfile)(nil)).Elem()
}

func (i FieldLevelEncryptionProfileArray) ToFieldLevelEncryptionProfileArrayOutput() FieldLevelEncryptionProfileArrayOutput {
	return i.ToFieldLevelEncryptionProfileArrayOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionProfileArray) ToFieldLevelEncryptionProfileArrayOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionProfileArrayOutput)
}

// FieldLevelEncryptionProfileMapInput is an input type that accepts FieldLevelEncryptionProfileMap and FieldLevelEncryptionProfileMapOutput values.
// You can construct a concrete instance of `FieldLevelEncryptionProfileMapInput` via:
//
//	FieldLevelEncryptionProfileMap{ "key": FieldLevelEncryptionProfileArgs{...} }
type FieldLevelEncryptionProfileMapInput interface {
	pulumi.Input

	ToFieldLevelEncryptionProfileMapOutput() FieldLevelEncryptionProfileMapOutput
	ToFieldLevelEncryptionProfileMapOutputWithContext(context.Context) FieldLevelEncryptionProfileMapOutput
}

type FieldLevelEncryptionProfileMap map[string]FieldLevelEncryptionProfileInput

func (FieldLevelEncryptionProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FieldLevelEncryptionProfile)(nil)).Elem()
}

func (i FieldLevelEncryptionProfileMap) ToFieldLevelEncryptionProfileMapOutput() FieldLevelEncryptionProfileMapOutput {
	return i.ToFieldLevelEncryptionProfileMapOutputWithContext(context.Background())
}

func (i FieldLevelEncryptionProfileMap) ToFieldLevelEncryptionProfileMapOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FieldLevelEncryptionProfileMapOutput)
}

type FieldLevelEncryptionProfileOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FieldLevelEncryptionProfile)(nil)).Elem()
}

func (o FieldLevelEncryptionProfileOutput) ToFieldLevelEncryptionProfileOutput() FieldLevelEncryptionProfileOutput {
	return o
}

func (o FieldLevelEncryptionProfileOutput) ToFieldLevelEncryptionProfileOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileOutput {
	return o
}

func (o FieldLevelEncryptionProfileOutput) CallerReference() pulumi.StringOutput {
	return o.ApplyT(func(v *FieldLevelEncryptionProfile) pulumi.StringOutput { return v.CallerReference }).(pulumi.StringOutput)
}

func (o FieldLevelEncryptionProfileOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FieldLevelEncryptionProfile) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o FieldLevelEncryptionProfileOutput) EncryptionEntities() FieldLevelEncryptionProfileEncryptionEntitiesOutput {
	return o.ApplyT(func(v *FieldLevelEncryptionProfile) FieldLevelEncryptionProfileEncryptionEntitiesOutput {
		return v.EncryptionEntities
	}).(FieldLevelEncryptionProfileEncryptionEntitiesOutput)
}

func (o FieldLevelEncryptionProfileOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *FieldLevelEncryptionProfile) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o FieldLevelEncryptionProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FieldLevelEncryptionProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type FieldLevelEncryptionProfileArrayOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FieldLevelEncryptionProfile)(nil)).Elem()
}

func (o FieldLevelEncryptionProfileArrayOutput) ToFieldLevelEncryptionProfileArrayOutput() FieldLevelEncryptionProfileArrayOutput {
	return o
}

func (o FieldLevelEncryptionProfileArrayOutput) ToFieldLevelEncryptionProfileArrayOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileArrayOutput {
	return o
}

func (o FieldLevelEncryptionProfileArrayOutput) Index(i pulumi.IntInput) FieldLevelEncryptionProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FieldLevelEncryptionProfile {
		return vs[0].([]*FieldLevelEncryptionProfile)[vs[1].(int)]
	}).(FieldLevelEncryptionProfileOutput)
}

type FieldLevelEncryptionProfileMapOutput struct{ *pulumi.OutputState }

func (FieldLevelEncryptionProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FieldLevelEncryptionProfile)(nil)).Elem()
}

func (o FieldLevelEncryptionProfileMapOutput) ToFieldLevelEncryptionProfileMapOutput() FieldLevelEncryptionProfileMapOutput {
	return o
}

func (o FieldLevelEncryptionProfileMapOutput) ToFieldLevelEncryptionProfileMapOutputWithContext(ctx context.Context) FieldLevelEncryptionProfileMapOutput {
	return o
}

func (o FieldLevelEncryptionProfileMapOutput) MapIndex(k pulumi.StringInput) FieldLevelEncryptionProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FieldLevelEncryptionProfile {
		return vs[0].(map[string]*FieldLevelEncryptionProfile)[vs[1].(string)]
	}).(FieldLevelEncryptionProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FieldLevelEncryptionProfileInput)(nil)).Elem(), &FieldLevelEncryptionProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*FieldLevelEncryptionProfileArrayInput)(nil)).Elem(), FieldLevelEncryptionProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FieldLevelEncryptionProfileMapInput)(nil)).Elem(), FieldLevelEncryptionProfileMap{})
	pulumi.RegisterOutputType(FieldLevelEncryptionProfileOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionProfileArrayOutput{})
	pulumi.RegisterOutputType(FieldLevelEncryptionProfileMapOutput{})
}
