// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The CloudFront Log Delivery Canonical User ID data source allows access to the [canonical user ID](http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS `awslogsdelivery` account for CloudFront bucket logging.
// See the [Amazon CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) for more information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/cloudfront"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := s3.GetCanonicalUserId(ctx, &s3.GetCanonicalUserIdArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := cloudfront.GetLogDeliveryCanonicalUserId(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleBucket, err := s3.NewBucket(ctx, "example", &s3.BucketArgs{
//				Bucket: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBucketOwnershipControls, err := s3.NewBucketOwnershipControls(ctx, "example", &s3.BucketOwnershipControlsArgs{
//				Bucket: exampleBucket.ID(),
//				Rule: &s3.BucketOwnershipControlsRuleArgs{
//					ObjectOwnership: pulumi.String("BucketOwnerPreferred"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketAcl(ctx, "example", &s3.BucketAclArgs{
//				Bucket: exampleBucket.ID(),
//				AccessControlPolicy: &s3.BucketAclAccessControlPolicyArgs{
//					Grants: s3.BucketAclAccessControlPolicyGrantArray{
//						&s3.BucketAclAccessControlPolicyGrantArgs{
//							Grantee: &s3.BucketAclAccessControlPolicyGrantGranteeArgs{
//								Id:   pulumi.String(example.Id),
//								Type: pulumi.String("CanonicalUser"),
//							},
//							Permission: pulumi.String("FULL_CONTROL"),
//						},
//					},
//					Owner: &s3.BucketAclAccessControlPolicyOwnerArgs{
//						Id: pulumi.String(current.Id),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleBucketOwnershipControls,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLogDeliveryCanonicalUserId(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetLogDeliveryCanonicalUserIdResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogDeliveryCanonicalUserIdResult
	err := ctx.Invoke("aws:cloudfront/getLogDeliveryCanonicalUserId:getLogDeliveryCanonicalUserId", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getLogDeliveryCanonicalUserId.
type GetLogDeliveryCanonicalUserIdResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetLogDeliveryCanonicalUserIdOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetLogDeliveryCanonicalUserIdResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetLogDeliveryCanonicalUserIdResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("aws:cloudfront/getLogDeliveryCanonicalUserId:getLogDeliveryCanonicalUserId", nil, GetLogDeliveryCanonicalUserIdResultOutput{}, options).(GetLogDeliveryCanonicalUserIdResultOutput), nil
	}).(GetLogDeliveryCanonicalUserIdResultOutput)
}

// A collection of values returned by getLogDeliveryCanonicalUserId.
type GetLogDeliveryCanonicalUserIdResultOutput struct{ *pulumi.OutputState }

func (GetLogDeliveryCanonicalUserIdResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDeliveryCanonicalUserIdResult)(nil)).Elem()
}

func (o GetLogDeliveryCanonicalUserIdResultOutput) ToGetLogDeliveryCanonicalUserIdResultOutput() GetLogDeliveryCanonicalUserIdResultOutput {
	return o
}

func (o GetLogDeliveryCanonicalUserIdResultOutput) ToGetLogDeliveryCanonicalUserIdResultOutputWithContext(ctx context.Context) GetLogDeliveryCanonicalUserIdResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogDeliveryCanonicalUserIdResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogDeliveryCanonicalUserIdResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogDeliveryCanonicalUserIdResultOutput{})
}
