// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CloudFront real-time log configuration resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloudfront"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleRole, err := iam.NewRole(ctx, "exampleRole", &iam.RoleArgs{
// 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Action\": \"sts:AssumeRole\",\n", "      \"Principal\": {\n", "        \"Service\": \"cloudfront.amazonaws.com\"\n", "      },\n", "      \"Effect\": \"Allow\"\n", "    }\n", "  ]\n", "}\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleRolePolicy, err := iam.NewRolePolicy(ctx, "exampleRolePolicy", &iam.RolePolicyArgs{
// 			Role:   exampleRole.ID(),
// 			Policy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "        \"Effect\": \"Allow\",\n", "        \"Action\": [\n", "          \"kinesis:DescribeStreamSummary\",\n", "          \"kinesis:DescribeStream\",\n", "          \"kinesis:PutRecord\",\n", "          \"kinesis:PutRecords\"\n", "        ],\n", "        \"Resource\": \"", aws_kinesis_stream.Example.Arn, "\"\n", "    }\n", "  ]\n", "}\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cloudfront.NewRealtimeLogConfig(ctx, "exampleRealtimeLogConfig", &cloudfront.RealtimeLogConfigArgs{
// 			SamplingRate: pulumi.Int(75),
// 			Fields: pulumi.StringArray{
// 				pulumi.String("timestamp"),
// 				pulumi.String("c-ip"),
// 			},
// 			Endpoint: &cloudfront.RealtimeLogConfigEndpointArgs{
// 				StreamType: pulumi.String("Kinesis"),
// 				KinesisStreamConfig: &cloudfront.RealtimeLogConfigEndpointKinesisStreamConfigArgs{
// 					RoleArn:   exampleRole.Arn,
// 					StreamArn: pulumi.Any(aws_kinesis_stream.Example.Arn),
// 				},
// 			},
// 		}, pulumi.DependsOn([]pulumi.Resource{
// 			exampleRolePolicy,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// CloudFront real-time log configurations can be imported using the ARN, e.g.
//
// ```sh
//  $ pulumi import aws:cloudfront/realtimeLogConfig:RealtimeLogConfig example arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig
// ```
type RealtimeLogConfig struct {
	pulumi.CustomResourceState

	// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint RealtimeLogConfigEndpointOutput `pulumi:"endpoint"`
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields pulumi.StringArrayOutput `pulumi:"fields"`
	// The unique name to identify this real-time log configuration.
	Name pulumi.StringOutput `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate pulumi.IntOutput `pulumi:"samplingRate"`
}

// NewRealtimeLogConfig registers a new resource with the given unique name, arguments, and options.
func NewRealtimeLogConfig(ctx *pulumi.Context,
	name string, args *RealtimeLogConfigArgs, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	if args.SamplingRate == nil {
		return nil, errors.New("invalid value for required argument 'SamplingRate'")
	}
	var resource RealtimeLogConfig
	err := ctx.RegisterResource("aws:cloudfront/realtimeLogConfig:RealtimeLogConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRealtimeLogConfig gets an existing RealtimeLogConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRealtimeLogConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RealtimeLogConfigState, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	var resource RealtimeLogConfig
	err := ctx.ReadResource("aws:cloudfront/realtimeLogConfig:RealtimeLogConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RealtimeLogConfig resources.
type realtimeLogConfigState struct {
	// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
	Arn *string `pulumi:"arn"`
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint *RealtimeLogConfigEndpoint `pulumi:"endpoint"`
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields []string `pulumi:"fields"`
	// The unique name to identify this real-time log configuration.
	Name *string `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate *int `pulumi:"samplingRate"`
}

type RealtimeLogConfigState struct {
	// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
	Arn pulumi.StringPtrInput
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint RealtimeLogConfigEndpointPtrInput
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields pulumi.StringArrayInput
	// The unique name to identify this real-time log configuration.
	Name pulumi.StringPtrInput
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate pulumi.IntPtrInput
}

func (RealtimeLogConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigState)(nil)).Elem()
}

type realtimeLogConfigArgs struct {
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint RealtimeLogConfigEndpoint `pulumi:"endpoint"`
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields []string `pulumi:"fields"`
	// The unique name to identify this real-time log configuration.
	Name *string `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate int `pulumi:"samplingRate"`
}

// The set of arguments for constructing a RealtimeLogConfig resource.
type RealtimeLogConfigArgs struct {
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint RealtimeLogConfigEndpointInput
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields pulumi.StringArrayInput
	// The unique name to identify this real-time log configuration.
	Name pulumi.StringPtrInput
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate pulumi.IntInput
}

func (RealtimeLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigArgs)(nil)).Elem()
}

type RealtimeLogConfigInput interface {
	pulumi.Input

	ToRealtimeLogConfigOutput() RealtimeLogConfigOutput
	ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput
}

func (*RealtimeLogConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfig)(nil))
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigOutput() RealtimeLogConfigOutput {
	return i.ToRealtimeLogConfigOutputWithContext(context.Background())
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigOutput)
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigPtrOutput() RealtimeLogConfigPtrOutput {
	return i.ToRealtimeLogConfigPtrOutputWithContext(context.Background())
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigPtrOutputWithContext(ctx context.Context) RealtimeLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigPtrOutput)
}

type RealtimeLogConfigPtrInput interface {
	pulumi.Input

	ToRealtimeLogConfigPtrOutput() RealtimeLogConfigPtrOutput
	ToRealtimeLogConfigPtrOutputWithContext(ctx context.Context) RealtimeLogConfigPtrOutput
}

type realtimeLogConfigPtrType RealtimeLogConfigArgs

func (*realtimeLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogConfig)(nil))
}

func (i *realtimeLogConfigPtrType) ToRealtimeLogConfigPtrOutput() RealtimeLogConfigPtrOutput {
	return i.ToRealtimeLogConfigPtrOutputWithContext(context.Background())
}

func (i *realtimeLogConfigPtrType) ToRealtimeLogConfigPtrOutputWithContext(ctx context.Context) RealtimeLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigPtrOutput)
}

// RealtimeLogConfigArrayInput is an input type that accepts RealtimeLogConfigArray and RealtimeLogConfigArrayOutput values.
// You can construct a concrete instance of `RealtimeLogConfigArrayInput` via:
//
//          RealtimeLogConfigArray{ RealtimeLogConfigArgs{...} }
type RealtimeLogConfigArrayInput interface {
	pulumi.Input

	ToRealtimeLogConfigArrayOutput() RealtimeLogConfigArrayOutput
	ToRealtimeLogConfigArrayOutputWithContext(context.Context) RealtimeLogConfigArrayOutput
}

type RealtimeLogConfigArray []RealtimeLogConfigInput

func (RealtimeLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*RealtimeLogConfig)(nil))
}

func (i RealtimeLogConfigArray) ToRealtimeLogConfigArrayOutput() RealtimeLogConfigArrayOutput {
	return i.ToRealtimeLogConfigArrayOutputWithContext(context.Background())
}

func (i RealtimeLogConfigArray) ToRealtimeLogConfigArrayOutputWithContext(ctx context.Context) RealtimeLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigArrayOutput)
}

// RealtimeLogConfigMapInput is an input type that accepts RealtimeLogConfigMap and RealtimeLogConfigMapOutput values.
// You can construct a concrete instance of `RealtimeLogConfigMapInput` via:
//
//          RealtimeLogConfigMap{ "key": RealtimeLogConfigArgs{...} }
type RealtimeLogConfigMapInput interface {
	pulumi.Input

	ToRealtimeLogConfigMapOutput() RealtimeLogConfigMapOutput
	ToRealtimeLogConfigMapOutputWithContext(context.Context) RealtimeLogConfigMapOutput
}

type RealtimeLogConfigMap map[string]RealtimeLogConfigInput

func (RealtimeLogConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*RealtimeLogConfig)(nil))
}

func (i RealtimeLogConfigMap) ToRealtimeLogConfigMapOutput() RealtimeLogConfigMapOutput {
	return i.ToRealtimeLogConfigMapOutputWithContext(context.Background())
}

func (i RealtimeLogConfigMap) ToRealtimeLogConfigMapOutputWithContext(ctx context.Context) RealtimeLogConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigMapOutput)
}

type RealtimeLogConfigOutput struct {
	*pulumi.OutputState
}

func (RealtimeLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfig)(nil))
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutput() RealtimeLogConfigOutput {
	return o
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput {
	return o
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigPtrOutput() RealtimeLogConfigPtrOutput {
	return o.ToRealtimeLogConfigPtrOutputWithContext(context.Background())
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigPtrOutputWithContext(ctx context.Context) RealtimeLogConfigPtrOutput {
	return o.ApplyT(func(v RealtimeLogConfig) *RealtimeLogConfig {
		return &v
	}).(RealtimeLogConfigPtrOutput)
}

type RealtimeLogConfigPtrOutput struct {
	*pulumi.OutputState
}

func (RealtimeLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogConfig)(nil))
}

func (o RealtimeLogConfigPtrOutput) ToRealtimeLogConfigPtrOutput() RealtimeLogConfigPtrOutput {
	return o
}

func (o RealtimeLogConfigPtrOutput) ToRealtimeLogConfigPtrOutputWithContext(ctx context.Context) RealtimeLogConfigPtrOutput {
	return o
}

type RealtimeLogConfigArrayOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogConfig)(nil))
}

func (o RealtimeLogConfigArrayOutput) ToRealtimeLogConfigArrayOutput() RealtimeLogConfigArrayOutput {
	return o
}

func (o RealtimeLogConfigArrayOutput) ToRealtimeLogConfigArrayOutputWithContext(ctx context.Context) RealtimeLogConfigArrayOutput {
	return o
}

func (o RealtimeLogConfigArrayOutput) Index(i pulumi.IntInput) RealtimeLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RealtimeLogConfig {
		return vs[0].([]RealtimeLogConfig)[vs[1].(int)]
	}).(RealtimeLogConfigOutput)
}

type RealtimeLogConfigMapOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]RealtimeLogConfig)(nil))
}

func (o RealtimeLogConfigMapOutput) ToRealtimeLogConfigMapOutput() RealtimeLogConfigMapOutput {
	return o
}

func (o RealtimeLogConfigMapOutput) ToRealtimeLogConfigMapOutputWithContext(ctx context.Context) RealtimeLogConfigMapOutput {
	return o
}

func (o RealtimeLogConfigMapOutput) MapIndex(k pulumi.StringInput) RealtimeLogConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) RealtimeLogConfig {
		return vs[0].(map[string]RealtimeLogConfig)[vs[1].(string)]
	}).(RealtimeLogConfigOutput)
}

func init() {
	pulumi.RegisterOutputType(RealtimeLogConfigOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigPtrOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigArrayOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigMapOutput{})
}
