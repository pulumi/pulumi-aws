// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Using `pulumi import`, import AWS CloudFront KeyValueStore Key Value Pairs using the `key_value_store_arn`. For example:
//
// ```sh
// $ pulumi import aws:cloudfront/keyvaluestoreKeysExclusive:KeyvaluestoreKeysExclusive example arn:aws:cloudfront::111111111111:key-value-store/8562g61f-caba-2845-9d99-b97diwae5d3c
// ```
type KeyvaluestoreKeysExclusive struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the Key Value Store.
	//
	// The following arguments are optional:
	KeyValueStoreArn pulumi.StringOutput `pulumi:"keyValueStoreArn"`
	// A list of all resource key value pairs associated with the KeyValueStore.
	// See `resourceKeyValuePair` below.
	ResourceKeyValuePairs KeyvaluestoreKeysExclusiveResourceKeyValuePairArrayOutput `pulumi:"resourceKeyValuePairs"`
	// Total size of the Key Value Store in bytes.
	TotalSizeInBytes pulumi.IntOutput `pulumi:"totalSizeInBytes"`
}

// NewKeyvaluestoreKeysExclusive registers a new resource with the given unique name, arguments, and options.
func NewKeyvaluestoreKeysExclusive(ctx *pulumi.Context,
	name string, args *KeyvaluestoreKeysExclusiveArgs, opts ...pulumi.ResourceOption) (*KeyvaluestoreKeysExclusive, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KeyValueStoreArn == nil {
		return nil, errors.New("invalid value for required argument 'KeyValueStoreArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KeyvaluestoreKeysExclusive
	err := ctx.RegisterResource("aws:cloudfront/keyvaluestoreKeysExclusive:KeyvaluestoreKeysExclusive", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKeyvaluestoreKeysExclusive gets an existing KeyvaluestoreKeysExclusive resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKeyvaluestoreKeysExclusive(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeyvaluestoreKeysExclusiveState, opts ...pulumi.ResourceOption) (*KeyvaluestoreKeysExclusive, error) {
	var resource KeyvaluestoreKeysExclusive
	err := ctx.ReadResource("aws:cloudfront/keyvaluestoreKeysExclusive:KeyvaluestoreKeysExclusive", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KeyvaluestoreKeysExclusive resources.
type keyvaluestoreKeysExclusiveState struct {
	// Amazon Resource Name (ARN) of the Key Value Store.
	//
	// The following arguments are optional:
	KeyValueStoreArn *string `pulumi:"keyValueStoreArn"`
	// A list of all resource key value pairs associated with the KeyValueStore.
	// See `resourceKeyValuePair` below.
	ResourceKeyValuePairs []KeyvaluestoreKeysExclusiveResourceKeyValuePair `pulumi:"resourceKeyValuePairs"`
	// Total size of the Key Value Store in bytes.
	TotalSizeInBytes *int `pulumi:"totalSizeInBytes"`
}

type KeyvaluestoreKeysExclusiveState struct {
	// Amazon Resource Name (ARN) of the Key Value Store.
	//
	// The following arguments are optional:
	KeyValueStoreArn pulumi.StringPtrInput
	// A list of all resource key value pairs associated with the KeyValueStore.
	// See `resourceKeyValuePair` below.
	ResourceKeyValuePairs KeyvaluestoreKeysExclusiveResourceKeyValuePairArrayInput
	// Total size of the Key Value Store in bytes.
	TotalSizeInBytes pulumi.IntPtrInput
}

func (KeyvaluestoreKeysExclusiveState) ElementType() reflect.Type {
	return reflect.TypeOf((*keyvaluestoreKeysExclusiveState)(nil)).Elem()
}

type keyvaluestoreKeysExclusiveArgs struct {
	// Amazon Resource Name (ARN) of the Key Value Store.
	//
	// The following arguments are optional:
	KeyValueStoreArn string `pulumi:"keyValueStoreArn"`
	// A list of all resource key value pairs associated with the KeyValueStore.
	// See `resourceKeyValuePair` below.
	ResourceKeyValuePairs []KeyvaluestoreKeysExclusiveResourceKeyValuePair `pulumi:"resourceKeyValuePairs"`
}

// The set of arguments for constructing a KeyvaluestoreKeysExclusive resource.
type KeyvaluestoreKeysExclusiveArgs struct {
	// Amazon Resource Name (ARN) of the Key Value Store.
	//
	// The following arguments are optional:
	KeyValueStoreArn pulumi.StringInput
	// A list of all resource key value pairs associated with the KeyValueStore.
	// See `resourceKeyValuePair` below.
	ResourceKeyValuePairs KeyvaluestoreKeysExclusiveResourceKeyValuePairArrayInput
}

func (KeyvaluestoreKeysExclusiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keyvaluestoreKeysExclusiveArgs)(nil)).Elem()
}

type KeyvaluestoreKeysExclusiveInput interface {
	pulumi.Input

	ToKeyvaluestoreKeysExclusiveOutput() KeyvaluestoreKeysExclusiveOutput
	ToKeyvaluestoreKeysExclusiveOutputWithContext(ctx context.Context) KeyvaluestoreKeysExclusiveOutput
}

func (*KeyvaluestoreKeysExclusive) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyvaluestoreKeysExclusive)(nil)).Elem()
}

func (i *KeyvaluestoreKeysExclusive) ToKeyvaluestoreKeysExclusiveOutput() KeyvaluestoreKeysExclusiveOutput {
	return i.ToKeyvaluestoreKeysExclusiveOutputWithContext(context.Background())
}

func (i *KeyvaluestoreKeysExclusive) ToKeyvaluestoreKeysExclusiveOutputWithContext(ctx context.Context) KeyvaluestoreKeysExclusiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyvaluestoreKeysExclusiveOutput)
}

// KeyvaluestoreKeysExclusiveArrayInput is an input type that accepts KeyvaluestoreKeysExclusiveArray and KeyvaluestoreKeysExclusiveArrayOutput values.
// You can construct a concrete instance of `KeyvaluestoreKeysExclusiveArrayInput` via:
//
//	KeyvaluestoreKeysExclusiveArray{ KeyvaluestoreKeysExclusiveArgs{...} }
type KeyvaluestoreKeysExclusiveArrayInput interface {
	pulumi.Input

	ToKeyvaluestoreKeysExclusiveArrayOutput() KeyvaluestoreKeysExclusiveArrayOutput
	ToKeyvaluestoreKeysExclusiveArrayOutputWithContext(context.Context) KeyvaluestoreKeysExclusiveArrayOutput
}

type KeyvaluestoreKeysExclusiveArray []KeyvaluestoreKeysExclusiveInput

func (KeyvaluestoreKeysExclusiveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KeyvaluestoreKeysExclusive)(nil)).Elem()
}

func (i KeyvaluestoreKeysExclusiveArray) ToKeyvaluestoreKeysExclusiveArrayOutput() KeyvaluestoreKeysExclusiveArrayOutput {
	return i.ToKeyvaluestoreKeysExclusiveArrayOutputWithContext(context.Background())
}

func (i KeyvaluestoreKeysExclusiveArray) ToKeyvaluestoreKeysExclusiveArrayOutputWithContext(ctx context.Context) KeyvaluestoreKeysExclusiveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyvaluestoreKeysExclusiveArrayOutput)
}

// KeyvaluestoreKeysExclusiveMapInput is an input type that accepts KeyvaluestoreKeysExclusiveMap and KeyvaluestoreKeysExclusiveMapOutput values.
// You can construct a concrete instance of `KeyvaluestoreKeysExclusiveMapInput` via:
//
//	KeyvaluestoreKeysExclusiveMap{ "key": KeyvaluestoreKeysExclusiveArgs{...} }
type KeyvaluestoreKeysExclusiveMapInput interface {
	pulumi.Input

	ToKeyvaluestoreKeysExclusiveMapOutput() KeyvaluestoreKeysExclusiveMapOutput
	ToKeyvaluestoreKeysExclusiveMapOutputWithContext(context.Context) KeyvaluestoreKeysExclusiveMapOutput
}

type KeyvaluestoreKeysExclusiveMap map[string]KeyvaluestoreKeysExclusiveInput

func (KeyvaluestoreKeysExclusiveMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KeyvaluestoreKeysExclusive)(nil)).Elem()
}

func (i KeyvaluestoreKeysExclusiveMap) ToKeyvaluestoreKeysExclusiveMapOutput() KeyvaluestoreKeysExclusiveMapOutput {
	return i.ToKeyvaluestoreKeysExclusiveMapOutputWithContext(context.Background())
}

func (i KeyvaluestoreKeysExclusiveMap) ToKeyvaluestoreKeysExclusiveMapOutputWithContext(ctx context.Context) KeyvaluestoreKeysExclusiveMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyvaluestoreKeysExclusiveMapOutput)
}

type KeyvaluestoreKeysExclusiveOutput struct{ *pulumi.OutputState }

func (KeyvaluestoreKeysExclusiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyvaluestoreKeysExclusive)(nil)).Elem()
}

func (o KeyvaluestoreKeysExclusiveOutput) ToKeyvaluestoreKeysExclusiveOutput() KeyvaluestoreKeysExclusiveOutput {
	return o
}

func (o KeyvaluestoreKeysExclusiveOutput) ToKeyvaluestoreKeysExclusiveOutputWithContext(ctx context.Context) KeyvaluestoreKeysExclusiveOutput {
	return o
}

// Amazon Resource Name (ARN) of the Key Value Store.
//
// The following arguments are optional:
func (o KeyvaluestoreKeysExclusiveOutput) KeyValueStoreArn() pulumi.StringOutput {
	return o.ApplyT(func(v *KeyvaluestoreKeysExclusive) pulumi.StringOutput { return v.KeyValueStoreArn }).(pulumi.StringOutput)
}

// A list of all resource key value pairs associated with the KeyValueStore.
// See `resourceKeyValuePair` below.
func (o KeyvaluestoreKeysExclusiveOutput) ResourceKeyValuePairs() KeyvaluestoreKeysExclusiveResourceKeyValuePairArrayOutput {
	return o.ApplyT(func(v *KeyvaluestoreKeysExclusive) KeyvaluestoreKeysExclusiveResourceKeyValuePairArrayOutput {
		return v.ResourceKeyValuePairs
	}).(KeyvaluestoreKeysExclusiveResourceKeyValuePairArrayOutput)
}

// Total size of the Key Value Store in bytes.
func (o KeyvaluestoreKeysExclusiveOutput) TotalSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v *KeyvaluestoreKeysExclusive) pulumi.IntOutput { return v.TotalSizeInBytes }).(pulumi.IntOutput)
}

type KeyvaluestoreKeysExclusiveArrayOutput struct{ *pulumi.OutputState }

func (KeyvaluestoreKeysExclusiveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KeyvaluestoreKeysExclusive)(nil)).Elem()
}

func (o KeyvaluestoreKeysExclusiveArrayOutput) ToKeyvaluestoreKeysExclusiveArrayOutput() KeyvaluestoreKeysExclusiveArrayOutput {
	return o
}

func (o KeyvaluestoreKeysExclusiveArrayOutput) ToKeyvaluestoreKeysExclusiveArrayOutputWithContext(ctx context.Context) KeyvaluestoreKeysExclusiveArrayOutput {
	return o
}

func (o KeyvaluestoreKeysExclusiveArrayOutput) Index(i pulumi.IntInput) KeyvaluestoreKeysExclusiveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KeyvaluestoreKeysExclusive {
		return vs[0].([]*KeyvaluestoreKeysExclusive)[vs[1].(int)]
	}).(KeyvaluestoreKeysExclusiveOutput)
}

type KeyvaluestoreKeysExclusiveMapOutput struct{ *pulumi.OutputState }

func (KeyvaluestoreKeysExclusiveMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KeyvaluestoreKeysExclusive)(nil)).Elem()
}

func (o KeyvaluestoreKeysExclusiveMapOutput) ToKeyvaluestoreKeysExclusiveMapOutput() KeyvaluestoreKeysExclusiveMapOutput {
	return o
}

func (o KeyvaluestoreKeysExclusiveMapOutput) ToKeyvaluestoreKeysExclusiveMapOutputWithContext(ctx context.Context) KeyvaluestoreKeysExclusiveMapOutput {
	return o
}

func (o KeyvaluestoreKeysExclusiveMapOutput) MapIndex(k pulumi.StringInput) KeyvaluestoreKeysExclusiveOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KeyvaluestoreKeysExclusive {
		return vs[0].(map[string]*KeyvaluestoreKeysExclusive)[vs[1].(string)]
	}).(KeyvaluestoreKeysExclusiveOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KeyvaluestoreKeysExclusiveInput)(nil)).Elem(), &KeyvaluestoreKeysExclusive{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyvaluestoreKeysExclusiveArrayInput)(nil)).Elem(), KeyvaluestoreKeysExclusiveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyvaluestoreKeysExclusiveMapInput)(nil)).Elem(), KeyvaluestoreKeysExclusiveMap{})
	pulumi.RegisterOutputType(KeyvaluestoreKeysExclusiveOutput{})
	pulumi.RegisterOutputType(KeyvaluestoreKeysExclusiveArrayOutput{})
	pulumi.RegisterOutputType(KeyvaluestoreKeysExclusiveMapOutput{})
}
