// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS CloudFront Key Value Store.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cloudfront"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudfront.NewKeyValueStore(ctx, "example", &cloudfront.KeyValueStoreArgs{
//				Name:    pulumi.String("ExampleKeyValueStore"),
//				Comment: pulumi.String("This is an example key value store"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Using `pulumi import`, import CloudFront Key Value Store using the `name`. For example:
//
// ```sh
// $ pulumi import aws:cloudfront/keyValueStore:KeyValueStore example example_store
// ```
type KeyValueStore struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Comment.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// ETag hash of the KeyValueStore.
	Etag             pulumi.StringOutput `pulumi:"etag"`
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// Unique name for your CloudFront KeyValueStore.
	//
	// The following arguments are optional:
	Name     pulumi.StringOutput            `pulumi:"name"`
	Timeouts KeyValueStoreTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewKeyValueStore registers a new resource with the given unique name, arguments, and options.
func NewKeyValueStore(ctx *pulumi.Context,
	name string, args *KeyValueStoreArgs, opts ...pulumi.ResourceOption) (*KeyValueStore, error) {
	if args == nil {
		args = &KeyValueStoreArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KeyValueStore
	err := ctx.RegisterResource("aws:cloudfront/keyValueStore:KeyValueStore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKeyValueStore gets an existing KeyValueStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKeyValueStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeyValueStoreState, opts ...pulumi.ResourceOption) (*KeyValueStore, error) {
	var resource KeyValueStore
	err := ctx.ReadResource("aws:cloudfront/keyValueStore:KeyValueStore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KeyValueStore resources.
type keyValueStoreState struct {
	// Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
	Arn *string `pulumi:"arn"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ETag hash of the KeyValueStore.
	Etag             *string `pulumi:"etag"`
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// Unique name for your CloudFront KeyValueStore.
	//
	// The following arguments are optional:
	Name     *string                `pulumi:"name"`
	Timeouts *KeyValueStoreTimeouts `pulumi:"timeouts"`
}

type KeyValueStoreState struct {
	// Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
	Arn pulumi.StringPtrInput
	// Comment.
	Comment pulumi.StringPtrInput
	// ETag hash of the KeyValueStore.
	Etag             pulumi.StringPtrInput
	LastModifiedTime pulumi.StringPtrInput
	// Unique name for your CloudFront KeyValueStore.
	//
	// The following arguments are optional:
	Name     pulumi.StringPtrInput
	Timeouts KeyValueStoreTimeoutsPtrInput
}

func (KeyValueStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*keyValueStoreState)(nil)).Elem()
}

type keyValueStoreArgs struct {
	// Comment.
	Comment *string `pulumi:"comment"`
	// Unique name for your CloudFront KeyValueStore.
	//
	// The following arguments are optional:
	Name     *string                `pulumi:"name"`
	Timeouts *KeyValueStoreTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a KeyValueStore resource.
type KeyValueStoreArgs struct {
	// Comment.
	Comment pulumi.StringPtrInput
	// Unique name for your CloudFront KeyValueStore.
	//
	// The following arguments are optional:
	Name     pulumi.StringPtrInput
	Timeouts KeyValueStoreTimeoutsPtrInput
}

func (KeyValueStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keyValueStoreArgs)(nil)).Elem()
}

type KeyValueStoreInput interface {
	pulumi.Input

	ToKeyValueStoreOutput() KeyValueStoreOutput
	ToKeyValueStoreOutputWithContext(ctx context.Context) KeyValueStoreOutput
}

func (*KeyValueStore) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueStore)(nil)).Elem()
}

func (i *KeyValueStore) ToKeyValueStoreOutput() KeyValueStoreOutput {
	return i.ToKeyValueStoreOutputWithContext(context.Background())
}

func (i *KeyValueStore) ToKeyValueStoreOutputWithContext(ctx context.Context) KeyValueStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyValueStoreOutput)
}

// KeyValueStoreArrayInput is an input type that accepts KeyValueStoreArray and KeyValueStoreArrayOutput values.
// You can construct a concrete instance of `KeyValueStoreArrayInput` via:
//
//	KeyValueStoreArray{ KeyValueStoreArgs{...} }
type KeyValueStoreArrayInput interface {
	pulumi.Input

	ToKeyValueStoreArrayOutput() KeyValueStoreArrayOutput
	ToKeyValueStoreArrayOutputWithContext(context.Context) KeyValueStoreArrayOutput
}

type KeyValueStoreArray []KeyValueStoreInput

func (KeyValueStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KeyValueStore)(nil)).Elem()
}

func (i KeyValueStoreArray) ToKeyValueStoreArrayOutput() KeyValueStoreArrayOutput {
	return i.ToKeyValueStoreArrayOutputWithContext(context.Background())
}

func (i KeyValueStoreArray) ToKeyValueStoreArrayOutputWithContext(ctx context.Context) KeyValueStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyValueStoreArrayOutput)
}

// KeyValueStoreMapInput is an input type that accepts KeyValueStoreMap and KeyValueStoreMapOutput values.
// You can construct a concrete instance of `KeyValueStoreMapInput` via:
//
//	KeyValueStoreMap{ "key": KeyValueStoreArgs{...} }
type KeyValueStoreMapInput interface {
	pulumi.Input

	ToKeyValueStoreMapOutput() KeyValueStoreMapOutput
	ToKeyValueStoreMapOutputWithContext(context.Context) KeyValueStoreMapOutput
}

type KeyValueStoreMap map[string]KeyValueStoreInput

func (KeyValueStoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KeyValueStore)(nil)).Elem()
}

func (i KeyValueStoreMap) ToKeyValueStoreMapOutput() KeyValueStoreMapOutput {
	return i.ToKeyValueStoreMapOutputWithContext(context.Background())
}

func (i KeyValueStoreMap) ToKeyValueStoreMapOutputWithContext(ctx context.Context) KeyValueStoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyValueStoreMapOutput)
}

type KeyValueStoreOutput struct{ *pulumi.OutputState }

func (KeyValueStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueStore)(nil)).Elem()
}

func (o KeyValueStoreOutput) ToKeyValueStoreOutput() KeyValueStoreOutput {
	return o
}

func (o KeyValueStoreOutput) ToKeyValueStoreOutputWithContext(ctx context.Context) KeyValueStoreOutput {
	return o
}

// Amazon Resource Name (ARN) identifying your CloudFront KeyValueStore.
func (o KeyValueStoreOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *KeyValueStore) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Comment.
func (o KeyValueStoreOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyValueStore) pulumi.StringPtrOutput { return v.Comment }).(pulumi.StringPtrOutput)
}

// ETag hash of the KeyValueStore.
func (o KeyValueStoreOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *KeyValueStore) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o KeyValueStoreOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *KeyValueStore) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Unique name for your CloudFront KeyValueStore.
//
// The following arguments are optional:
func (o KeyValueStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KeyValueStore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o KeyValueStoreOutput) Timeouts() KeyValueStoreTimeoutsPtrOutput {
	return o.ApplyT(func(v *KeyValueStore) KeyValueStoreTimeoutsPtrOutput { return v.Timeouts }).(KeyValueStoreTimeoutsPtrOutput)
}

type KeyValueStoreArrayOutput struct{ *pulumi.OutputState }

func (KeyValueStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KeyValueStore)(nil)).Elem()
}

func (o KeyValueStoreArrayOutput) ToKeyValueStoreArrayOutput() KeyValueStoreArrayOutput {
	return o
}

func (o KeyValueStoreArrayOutput) ToKeyValueStoreArrayOutputWithContext(ctx context.Context) KeyValueStoreArrayOutput {
	return o
}

func (o KeyValueStoreArrayOutput) Index(i pulumi.IntInput) KeyValueStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KeyValueStore {
		return vs[0].([]*KeyValueStore)[vs[1].(int)]
	}).(KeyValueStoreOutput)
}

type KeyValueStoreMapOutput struct{ *pulumi.OutputState }

func (KeyValueStoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KeyValueStore)(nil)).Elem()
}

func (o KeyValueStoreMapOutput) ToKeyValueStoreMapOutput() KeyValueStoreMapOutput {
	return o
}

func (o KeyValueStoreMapOutput) ToKeyValueStoreMapOutputWithContext(ctx context.Context) KeyValueStoreMapOutput {
	return o
}

func (o KeyValueStoreMapOutput) MapIndex(k pulumi.StringInput) KeyValueStoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KeyValueStore {
		return vs[0].(map[string]*KeyValueStore)[vs[1].(string)]
	}).(KeyValueStoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KeyValueStoreInput)(nil)).Elem(), &KeyValueStore{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyValueStoreArrayInput)(nil)).Elem(), KeyValueStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyValueStoreMapInput)(nil)).Elem(), KeyValueStoreMap{})
	pulumi.RegisterOutputType(KeyValueStoreOutput{})
	pulumi.RegisterOutputType(KeyValueStoreArrayOutput{})
	pulumi.RegisterOutputType(KeyValueStoreMapOutput{})
}
