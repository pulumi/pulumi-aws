// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:cloudfront/cachePolicy:CachePolicy":
		r = &CachePolicy{}
	case "aws:cloudfront/continuousDeploymentPolicy:ContinuousDeploymentPolicy":
		r = &ContinuousDeploymentPolicy{}
	case "aws:cloudfront/distribution:Distribution":
		r = &Distribution{}
	case "aws:cloudfront/fieldLevelEncryptionConfig:FieldLevelEncryptionConfig":
		r = &FieldLevelEncryptionConfig{}
	case "aws:cloudfront/fieldLevelEncryptionProfile:FieldLevelEncryptionProfile":
		r = &FieldLevelEncryptionProfile{}
	case "aws:cloudfront/function:Function":
		r = &Function{}
	case "aws:cloudfront/keyGroup:KeyGroup":
		r = &KeyGroup{}
	case "aws:cloudfront/keyValueStore:KeyValueStore":
		r = &KeyValueStore{}
	case "aws:cloudfront/monitoringSubscription:MonitoringSubscription":
		r = &MonitoringSubscription{}
	case "aws:cloudfront/originAccessControl:OriginAccessControl":
		r = &OriginAccessControl{}
	case "aws:cloudfront/originAccessIdentity:OriginAccessIdentity":
		r = &OriginAccessIdentity{}
	case "aws:cloudfront/originRequestPolicy:OriginRequestPolicy":
		r = &OriginRequestPolicy{}
	case "aws:cloudfront/publicKey:PublicKey":
		r = &PublicKey{}
	case "aws:cloudfront/realtimeLogConfig:RealtimeLogConfig":
		r = &RealtimeLogConfig{}
	case "aws:cloudfront/responseHeadersPolicy:ResponseHeadersPolicy":
		r = &ResponseHeadersPolicy{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/cachePolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/continuousDeploymentPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/distribution",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/fieldLevelEncryptionConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/fieldLevelEncryptionProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/function",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/keyGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/keyValueStore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/monitoringSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/originAccessControl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/originAccessIdentity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/originRequestPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/publicKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/realtimeLogConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"cloudfront/responseHeadersPolicy",
		&module{version},
	)
}
