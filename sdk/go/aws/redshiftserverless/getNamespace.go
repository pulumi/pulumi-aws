// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshiftserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Redshift Serverless Namespace.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/redshiftserverless"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redshiftserverless.LookupNamespace(ctx, &redshiftserverless.LookupNamespaceArgs{
//				NamespaceName: "example-namespace",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNamespace(ctx *pulumi.Context, args *LookupNamespaceArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceResult, error) {
	var rv LookupNamespaceResult
	err := ctx.Invoke("aws:redshiftserverless/getNamespace:getNamespace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespace.
type LookupNamespaceArgs struct {
	// The name of the namespace.
	NamespaceName string `pulumi:"namespaceName"`
}

// A collection of values returned by getNamespace.
type LookupNamespaceResult struct {
	// The username of the administrator for the first database created in the namespace.
	AdminUsername string `pulumi:"adminUsername"`
	// Amazon Resource Name (ARN) of the Redshift Serverless Namespace.
	Arn string `pulumi:"arn"`
	// The name of the first database created in the namespace.
	DbName string `pulumi:"dbName"`
	// The Amazon Resource Name (ARN) of the IAM role to set as a default in the namespace. When specifying `defaultIamRoleArn`, it also must be part of `iamRoles`.
	DefaultIamRoleArn string `pulumi:"defaultIamRoleArn"`
	// A list of IAM roles to associate with the namespace.
	IamRoles []string `pulumi:"iamRoles"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ARN of the Amazon Web Services Key Management Service key used to encrypt your data.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The types of logs the namespace can export. Available export types are `userlog`, `connectionlog`, and `useractivitylog`.
	LogExports []string `pulumi:"logExports"`
	// The Redshift Namespace ID.
	NamespaceId   string `pulumi:"namespaceId"`
	NamespaceName string `pulumi:"namespaceName"`
}

func LookupNamespaceOutput(ctx *pulumi.Context, args LookupNamespaceOutputArgs, opts ...pulumi.InvokeOption) LookupNamespaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNamespaceResult, error) {
			args := v.(LookupNamespaceArgs)
			r, err := LookupNamespace(ctx, &args, opts...)
			var s LookupNamespaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNamespaceResultOutput)
}

// A collection of arguments for invoking getNamespace.
type LookupNamespaceOutputArgs struct {
	// The name of the namespace.
	NamespaceName pulumi.StringInput `pulumi:"namespaceName"`
}

func (LookupNamespaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceArgs)(nil)).Elem()
}

// A collection of values returned by getNamespace.
type LookupNamespaceResultOutput struct{ *pulumi.OutputState }

func (LookupNamespaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceResult)(nil)).Elem()
}

func (o LookupNamespaceResultOutput) ToLookupNamespaceResultOutput() LookupNamespaceResultOutput {
	return o
}

func (o LookupNamespaceResultOutput) ToLookupNamespaceResultOutputWithContext(ctx context.Context) LookupNamespaceResultOutput {
	return o
}

// The username of the administrator for the first database created in the namespace.
func (o LookupNamespaceResultOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of the Redshift Serverless Namespace.
func (o LookupNamespaceResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The name of the first database created in the namespace.
func (o LookupNamespaceResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.DbName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to set as a default in the namespace. When specifying `defaultIamRoleArn`, it also must be part of `iamRoles`.
func (o LookupNamespaceResultOutput) DefaultIamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.DefaultIamRoleArn }).(pulumi.StringOutput)
}

// A list of IAM roles to associate with the namespace.
func (o LookupNamespaceResultOutput) IamRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNamespaceResult) []string { return v.IamRoles }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNamespaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ARN of the Amazon Web Services Key Management Service key used to encrypt your data.
func (o LookupNamespaceResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The types of logs the namespace can export. Available export types are `userlog`, `connectionlog`, and `useractivitylog`.
func (o LookupNamespaceResultOutput) LogExports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNamespaceResult) []string { return v.LogExports }).(pulumi.StringArrayOutput)
}

// The Redshift Namespace ID.
func (o LookupNamespaceResultOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.NamespaceId }).(pulumi.StringOutput)
}

func (o LookupNamespaceResultOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.NamespaceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamespaceResultOutput{})
}
