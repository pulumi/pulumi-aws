// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshiftserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointAccessVpcEndpoint struct {
	// The network interfaces of the endpoint.. See `Network Interface` below.
	NetworkInterfaces []EndpointAccessVpcEndpointNetworkInterface `pulumi:"networkInterfaces"`
	// The DNS address of the VPC endpoint.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// The port that Amazon Redshift Serverless listens on.
	VpcId *string `pulumi:"vpcId"`
}

// EndpointAccessVpcEndpointInput is an input type that accepts EndpointAccessVpcEndpointArgs and EndpointAccessVpcEndpointOutput values.
// You can construct a concrete instance of `EndpointAccessVpcEndpointInput` via:
//
//	EndpointAccessVpcEndpointArgs{...}
type EndpointAccessVpcEndpointInput interface {
	pulumi.Input

	ToEndpointAccessVpcEndpointOutput() EndpointAccessVpcEndpointOutput
	ToEndpointAccessVpcEndpointOutputWithContext(context.Context) EndpointAccessVpcEndpointOutput
}

type EndpointAccessVpcEndpointArgs struct {
	// The network interfaces of the endpoint.. See `Network Interface` below.
	NetworkInterfaces EndpointAccessVpcEndpointNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The DNS address of the VPC endpoint.
	VpcEndpointId pulumi.StringPtrInput `pulumi:"vpcEndpointId"`
	// The port that Amazon Redshift Serverless listens on.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (EndpointAccessVpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAccessVpcEndpoint)(nil)).Elem()
}

func (i EndpointAccessVpcEndpointArgs) ToEndpointAccessVpcEndpointOutput() EndpointAccessVpcEndpointOutput {
	return i.ToEndpointAccessVpcEndpointOutputWithContext(context.Background())
}

func (i EndpointAccessVpcEndpointArgs) ToEndpointAccessVpcEndpointOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAccessVpcEndpointOutput)
}

// EndpointAccessVpcEndpointArrayInput is an input type that accepts EndpointAccessVpcEndpointArray and EndpointAccessVpcEndpointArrayOutput values.
// You can construct a concrete instance of `EndpointAccessVpcEndpointArrayInput` via:
//
//	EndpointAccessVpcEndpointArray{ EndpointAccessVpcEndpointArgs{...} }
type EndpointAccessVpcEndpointArrayInput interface {
	pulumi.Input

	ToEndpointAccessVpcEndpointArrayOutput() EndpointAccessVpcEndpointArrayOutput
	ToEndpointAccessVpcEndpointArrayOutputWithContext(context.Context) EndpointAccessVpcEndpointArrayOutput
}

type EndpointAccessVpcEndpointArray []EndpointAccessVpcEndpointInput

func (EndpointAccessVpcEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointAccessVpcEndpoint)(nil)).Elem()
}

func (i EndpointAccessVpcEndpointArray) ToEndpointAccessVpcEndpointArrayOutput() EndpointAccessVpcEndpointArrayOutput {
	return i.ToEndpointAccessVpcEndpointArrayOutputWithContext(context.Background())
}

func (i EndpointAccessVpcEndpointArray) ToEndpointAccessVpcEndpointArrayOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAccessVpcEndpointArrayOutput)
}

type EndpointAccessVpcEndpointOutput struct{ *pulumi.OutputState }

func (EndpointAccessVpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAccessVpcEndpoint)(nil)).Elem()
}

func (o EndpointAccessVpcEndpointOutput) ToEndpointAccessVpcEndpointOutput() EndpointAccessVpcEndpointOutput {
	return o
}

func (o EndpointAccessVpcEndpointOutput) ToEndpointAccessVpcEndpointOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointOutput {
	return o
}

// The network interfaces of the endpoint.. See `Network Interface` below.
func (o EndpointAccessVpcEndpointOutput) NetworkInterfaces() EndpointAccessVpcEndpointNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v EndpointAccessVpcEndpoint) []EndpointAccessVpcEndpointNetworkInterface {
		return v.NetworkInterfaces
	}).(EndpointAccessVpcEndpointNetworkInterfaceArrayOutput)
}

// The DNS address of the VPC endpoint.
func (o EndpointAccessVpcEndpointOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAccessVpcEndpoint) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

// The port that Amazon Redshift Serverless listens on.
func (o EndpointAccessVpcEndpointOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAccessVpcEndpoint) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type EndpointAccessVpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (EndpointAccessVpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointAccessVpcEndpoint)(nil)).Elem()
}

func (o EndpointAccessVpcEndpointArrayOutput) ToEndpointAccessVpcEndpointArrayOutput() EndpointAccessVpcEndpointArrayOutput {
	return o
}

func (o EndpointAccessVpcEndpointArrayOutput) ToEndpointAccessVpcEndpointArrayOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointArrayOutput {
	return o
}

func (o EndpointAccessVpcEndpointArrayOutput) Index(i pulumi.IntInput) EndpointAccessVpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointAccessVpcEndpoint {
		return vs[0].([]EndpointAccessVpcEndpoint)[vs[1].(int)]
	}).(EndpointAccessVpcEndpointOutput)
}

type EndpointAccessVpcEndpointNetworkInterface struct {
	// The availability Zone.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The unique identifier of the network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The IPv4 address of the network interface within the subnet.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The unique identifier of the subnet.
	SubnetId *string `pulumi:"subnetId"`
}

// EndpointAccessVpcEndpointNetworkInterfaceInput is an input type that accepts EndpointAccessVpcEndpointNetworkInterfaceArgs and EndpointAccessVpcEndpointNetworkInterfaceOutput values.
// You can construct a concrete instance of `EndpointAccessVpcEndpointNetworkInterfaceInput` via:
//
//	EndpointAccessVpcEndpointNetworkInterfaceArgs{...}
type EndpointAccessVpcEndpointNetworkInterfaceInput interface {
	pulumi.Input

	ToEndpointAccessVpcEndpointNetworkInterfaceOutput() EndpointAccessVpcEndpointNetworkInterfaceOutput
	ToEndpointAccessVpcEndpointNetworkInterfaceOutputWithContext(context.Context) EndpointAccessVpcEndpointNetworkInterfaceOutput
}

type EndpointAccessVpcEndpointNetworkInterfaceArgs struct {
	// The availability Zone.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The unique identifier of the network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// The IPv4 address of the network interface within the subnet.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The unique identifier of the subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (EndpointAccessVpcEndpointNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAccessVpcEndpointNetworkInterface)(nil)).Elem()
}

func (i EndpointAccessVpcEndpointNetworkInterfaceArgs) ToEndpointAccessVpcEndpointNetworkInterfaceOutput() EndpointAccessVpcEndpointNetworkInterfaceOutput {
	return i.ToEndpointAccessVpcEndpointNetworkInterfaceOutputWithContext(context.Background())
}

func (i EndpointAccessVpcEndpointNetworkInterfaceArgs) ToEndpointAccessVpcEndpointNetworkInterfaceOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAccessVpcEndpointNetworkInterfaceOutput)
}

// EndpointAccessVpcEndpointNetworkInterfaceArrayInput is an input type that accepts EndpointAccessVpcEndpointNetworkInterfaceArray and EndpointAccessVpcEndpointNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `EndpointAccessVpcEndpointNetworkInterfaceArrayInput` via:
//
//	EndpointAccessVpcEndpointNetworkInterfaceArray{ EndpointAccessVpcEndpointNetworkInterfaceArgs{...} }
type EndpointAccessVpcEndpointNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToEndpointAccessVpcEndpointNetworkInterfaceArrayOutput() EndpointAccessVpcEndpointNetworkInterfaceArrayOutput
	ToEndpointAccessVpcEndpointNetworkInterfaceArrayOutputWithContext(context.Context) EndpointAccessVpcEndpointNetworkInterfaceArrayOutput
}

type EndpointAccessVpcEndpointNetworkInterfaceArray []EndpointAccessVpcEndpointNetworkInterfaceInput

func (EndpointAccessVpcEndpointNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointAccessVpcEndpointNetworkInterface)(nil)).Elem()
}

func (i EndpointAccessVpcEndpointNetworkInterfaceArray) ToEndpointAccessVpcEndpointNetworkInterfaceArrayOutput() EndpointAccessVpcEndpointNetworkInterfaceArrayOutput {
	return i.ToEndpointAccessVpcEndpointNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i EndpointAccessVpcEndpointNetworkInterfaceArray) ToEndpointAccessVpcEndpointNetworkInterfaceArrayOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAccessVpcEndpointNetworkInterfaceArrayOutput)
}

type EndpointAccessVpcEndpointNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (EndpointAccessVpcEndpointNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAccessVpcEndpointNetworkInterface)(nil)).Elem()
}

func (o EndpointAccessVpcEndpointNetworkInterfaceOutput) ToEndpointAccessVpcEndpointNetworkInterfaceOutput() EndpointAccessVpcEndpointNetworkInterfaceOutput {
	return o
}

func (o EndpointAccessVpcEndpointNetworkInterfaceOutput) ToEndpointAccessVpcEndpointNetworkInterfaceOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointNetworkInterfaceOutput {
	return o
}

// The availability Zone.
func (o EndpointAccessVpcEndpointNetworkInterfaceOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAccessVpcEndpointNetworkInterface) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The unique identifier of the network interface.
func (o EndpointAccessVpcEndpointNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAccessVpcEndpointNetworkInterface) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The IPv4 address of the network interface within the subnet.
func (o EndpointAccessVpcEndpointNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAccessVpcEndpointNetworkInterface) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The unique identifier of the subnet.
func (o EndpointAccessVpcEndpointNetworkInterfaceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAccessVpcEndpointNetworkInterface) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type EndpointAccessVpcEndpointNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (EndpointAccessVpcEndpointNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointAccessVpcEndpointNetworkInterface)(nil)).Elem()
}

func (o EndpointAccessVpcEndpointNetworkInterfaceArrayOutput) ToEndpointAccessVpcEndpointNetworkInterfaceArrayOutput() EndpointAccessVpcEndpointNetworkInterfaceArrayOutput {
	return o
}

func (o EndpointAccessVpcEndpointNetworkInterfaceArrayOutput) ToEndpointAccessVpcEndpointNetworkInterfaceArrayOutputWithContext(ctx context.Context) EndpointAccessVpcEndpointNetworkInterfaceArrayOutput {
	return o
}

func (o EndpointAccessVpcEndpointNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) EndpointAccessVpcEndpointNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointAccessVpcEndpointNetworkInterface {
		return vs[0].([]EndpointAccessVpcEndpointNetworkInterface)[vs[1].(int)]
	}).(EndpointAccessVpcEndpointNetworkInterfaceOutput)
}

type WorkgroupConfigParameter struct {
	// The key of the parameter. The options are `autoMv`, `datestyle`, `enableCaseSensitiveIdentifier`, `enableUserActivityLogging`, `queryGroup`, `searchPath` and [query monitoring metrics](https://docs.aws.amazon.com/redshift/latest/dg/cm-c-wlm-query-monitoring-rules.html#cm-c-wlm-query-monitoring-metrics-serverless) that let you define performance boundaries: `maxQueryCpuTime`, `maxQueryBlocksRead`, `maxScanRowCount`, `maxQueryExecutionTime`, `maxQueryQueueTime`, `maxQueryCpuUsagePercent`, `maxQueryTempBlocksToDisk`, `maxJoinRowCount` and `maxNestedLoopJoinRowCount`.
	ParameterKey string `pulumi:"parameterKey"`
	// The value of the parameter to set.
	ParameterValue string `pulumi:"parameterValue"`
}

// WorkgroupConfigParameterInput is an input type that accepts WorkgroupConfigParameterArgs and WorkgroupConfigParameterOutput values.
// You can construct a concrete instance of `WorkgroupConfigParameterInput` via:
//
//	WorkgroupConfigParameterArgs{...}
type WorkgroupConfigParameterInput interface {
	pulumi.Input

	ToWorkgroupConfigParameterOutput() WorkgroupConfigParameterOutput
	ToWorkgroupConfigParameterOutputWithContext(context.Context) WorkgroupConfigParameterOutput
}

type WorkgroupConfigParameterArgs struct {
	// The key of the parameter. The options are `autoMv`, `datestyle`, `enableCaseSensitiveIdentifier`, `enableUserActivityLogging`, `queryGroup`, `searchPath` and [query monitoring metrics](https://docs.aws.amazon.com/redshift/latest/dg/cm-c-wlm-query-monitoring-rules.html#cm-c-wlm-query-monitoring-metrics-serverless) that let you define performance boundaries: `maxQueryCpuTime`, `maxQueryBlocksRead`, `maxScanRowCount`, `maxQueryExecutionTime`, `maxQueryQueueTime`, `maxQueryCpuUsagePercent`, `maxQueryTempBlocksToDisk`, `maxJoinRowCount` and `maxNestedLoopJoinRowCount`.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The value of the parameter to set.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (WorkgroupConfigParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupConfigParameter)(nil)).Elem()
}

func (i WorkgroupConfigParameterArgs) ToWorkgroupConfigParameterOutput() WorkgroupConfigParameterOutput {
	return i.ToWorkgroupConfigParameterOutputWithContext(context.Background())
}

func (i WorkgroupConfigParameterArgs) ToWorkgroupConfigParameterOutputWithContext(ctx context.Context) WorkgroupConfigParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupConfigParameterOutput)
}

// WorkgroupConfigParameterArrayInput is an input type that accepts WorkgroupConfigParameterArray and WorkgroupConfigParameterArrayOutput values.
// You can construct a concrete instance of `WorkgroupConfigParameterArrayInput` via:
//
//	WorkgroupConfigParameterArray{ WorkgroupConfigParameterArgs{...} }
type WorkgroupConfigParameterArrayInput interface {
	pulumi.Input

	ToWorkgroupConfigParameterArrayOutput() WorkgroupConfigParameterArrayOutput
	ToWorkgroupConfigParameterArrayOutputWithContext(context.Context) WorkgroupConfigParameterArrayOutput
}

type WorkgroupConfigParameterArray []WorkgroupConfigParameterInput

func (WorkgroupConfigParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupConfigParameter)(nil)).Elem()
}

func (i WorkgroupConfigParameterArray) ToWorkgroupConfigParameterArrayOutput() WorkgroupConfigParameterArrayOutput {
	return i.ToWorkgroupConfigParameterArrayOutputWithContext(context.Background())
}

func (i WorkgroupConfigParameterArray) ToWorkgroupConfigParameterArrayOutputWithContext(ctx context.Context) WorkgroupConfigParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupConfigParameterArrayOutput)
}

type WorkgroupConfigParameterOutput struct{ *pulumi.OutputState }

func (WorkgroupConfigParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupConfigParameter)(nil)).Elem()
}

func (o WorkgroupConfigParameterOutput) ToWorkgroupConfigParameterOutput() WorkgroupConfigParameterOutput {
	return o
}

func (o WorkgroupConfigParameterOutput) ToWorkgroupConfigParameterOutputWithContext(ctx context.Context) WorkgroupConfigParameterOutput {
	return o
}

// The key of the parameter. The options are `autoMv`, `datestyle`, `enableCaseSensitiveIdentifier`, `enableUserActivityLogging`, `queryGroup`, `searchPath` and [query monitoring metrics](https://docs.aws.amazon.com/redshift/latest/dg/cm-c-wlm-query-monitoring-rules.html#cm-c-wlm-query-monitoring-metrics-serverless) that let you define performance boundaries: `maxQueryCpuTime`, `maxQueryBlocksRead`, `maxScanRowCount`, `maxQueryExecutionTime`, `maxQueryQueueTime`, `maxQueryCpuUsagePercent`, `maxQueryTempBlocksToDisk`, `maxJoinRowCount` and `maxNestedLoopJoinRowCount`.
func (o WorkgroupConfigParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v WorkgroupConfigParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The value of the parameter to set.
func (o WorkgroupConfigParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v WorkgroupConfigParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type WorkgroupConfigParameterArrayOutput struct{ *pulumi.OutputState }

func (WorkgroupConfigParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupConfigParameter)(nil)).Elem()
}

func (o WorkgroupConfigParameterArrayOutput) ToWorkgroupConfigParameterArrayOutput() WorkgroupConfigParameterArrayOutput {
	return o
}

func (o WorkgroupConfigParameterArrayOutput) ToWorkgroupConfigParameterArrayOutputWithContext(ctx context.Context) WorkgroupConfigParameterArrayOutput {
	return o
}

func (o WorkgroupConfigParameterArrayOutput) Index(i pulumi.IntInput) WorkgroupConfigParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkgroupConfigParameter {
		return vs[0].([]WorkgroupConfigParameter)[vs[1].(int)]
	}).(WorkgroupConfigParameterOutput)
}

type WorkgroupEndpoint struct {
	// The DNS address of the VPC endpoint.
	Address *string `pulumi:"address"`
	// The port that Amazon Redshift Serverless listens on.
	Port *int `pulumi:"port"`
	// The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
	VpcEndpoints []WorkgroupEndpointVpcEndpoint `pulumi:"vpcEndpoints"`
}

// WorkgroupEndpointInput is an input type that accepts WorkgroupEndpointArgs and WorkgroupEndpointOutput values.
// You can construct a concrete instance of `WorkgroupEndpointInput` via:
//
//	WorkgroupEndpointArgs{...}
type WorkgroupEndpointInput interface {
	pulumi.Input

	ToWorkgroupEndpointOutput() WorkgroupEndpointOutput
	ToWorkgroupEndpointOutputWithContext(context.Context) WorkgroupEndpointOutput
}

type WorkgroupEndpointArgs struct {
	// The DNS address of the VPC endpoint.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The port that Amazon Redshift Serverless listens on.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
	VpcEndpoints WorkgroupEndpointVpcEndpointArrayInput `pulumi:"vpcEndpoints"`
}

func (WorkgroupEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupEndpoint)(nil)).Elem()
}

func (i WorkgroupEndpointArgs) ToWorkgroupEndpointOutput() WorkgroupEndpointOutput {
	return i.ToWorkgroupEndpointOutputWithContext(context.Background())
}

func (i WorkgroupEndpointArgs) ToWorkgroupEndpointOutputWithContext(ctx context.Context) WorkgroupEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupEndpointOutput)
}

// WorkgroupEndpointArrayInput is an input type that accepts WorkgroupEndpointArray and WorkgroupEndpointArrayOutput values.
// You can construct a concrete instance of `WorkgroupEndpointArrayInput` via:
//
//	WorkgroupEndpointArray{ WorkgroupEndpointArgs{...} }
type WorkgroupEndpointArrayInput interface {
	pulumi.Input

	ToWorkgroupEndpointArrayOutput() WorkgroupEndpointArrayOutput
	ToWorkgroupEndpointArrayOutputWithContext(context.Context) WorkgroupEndpointArrayOutput
}

type WorkgroupEndpointArray []WorkgroupEndpointInput

func (WorkgroupEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupEndpoint)(nil)).Elem()
}

func (i WorkgroupEndpointArray) ToWorkgroupEndpointArrayOutput() WorkgroupEndpointArrayOutput {
	return i.ToWorkgroupEndpointArrayOutputWithContext(context.Background())
}

func (i WorkgroupEndpointArray) ToWorkgroupEndpointArrayOutputWithContext(ctx context.Context) WorkgroupEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupEndpointArrayOutput)
}

type WorkgroupEndpointOutput struct{ *pulumi.OutputState }

func (WorkgroupEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupEndpoint)(nil)).Elem()
}

func (o WorkgroupEndpointOutput) ToWorkgroupEndpointOutput() WorkgroupEndpointOutput {
	return o
}

func (o WorkgroupEndpointOutput) ToWorkgroupEndpointOutputWithContext(ctx context.Context) WorkgroupEndpointOutput {
	return o
}

// The DNS address of the VPC endpoint.
func (o WorkgroupEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The port that Amazon Redshift Serverless listens on.
func (o WorkgroupEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
func (o WorkgroupEndpointOutput) VpcEndpoints() WorkgroupEndpointVpcEndpointArrayOutput {
	return o.ApplyT(func(v WorkgroupEndpoint) []WorkgroupEndpointVpcEndpoint { return v.VpcEndpoints }).(WorkgroupEndpointVpcEndpointArrayOutput)
}

type WorkgroupEndpointArrayOutput struct{ *pulumi.OutputState }

func (WorkgroupEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupEndpoint)(nil)).Elem()
}

func (o WorkgroupEndpointArrayOutput) ToWorkgroupEndpointArrayOutput() WorkgroupEndpointArrayOutput {
	return o
}

func (o WorkgroupEndpointArrayOutput) ToWorkgroupEndpointArrayOutputWithContext(ctx context.Context) WorkgroupEndpointArrayOutput {
	return o
}

func (o WorkgroupEndpointArrayOutput) Index(i pulumi.IntInput) WorkgroupEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkgroupEndpoint {
		return vs[0].([]WorkgroupEndpoint)[vs[1].(int)]
	}).(WorkgroupEndpointOutput)
}

type WorkgroupEndpointVpcEndpoint struct {
	// The network interfaces of the endpoint.. See `Network Interface` below.
	NetworkInterfaces []WorkgroupEndpointVpcEndpointNetworkInterface `pulumi:"networkInterfaces"`
	// The DNS address of the VPC endpoint.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// The port that Amazon Redshift Serverless listens on.
	VpcId *string `pulumi:"vpcId"`
}

// WorkgroupEndpointVpcEndpointInput is an input type that accepts WorkgroupEndpointVpcEndpointArgs and WorkgroupEndpointVpcEndpointOutput values.
// You can construct a concrete instance of `WorkgroupEndpointVpcEndpointInput` via:
//
//	WorkgroupEndpointVpcEndpointArgs{...}
type WorkgroupEndpointVpcEndpointInput interface {
	pulumi.Input

	ToWorkgroupEndpointVpcEndpointOutput() WorkgroupEndpointVpcEndpointOutput
	ToWorkgroupEndpointVpcEndpointOutputWithContext(context.Context) WorkgroupEndpointVpcEndpointOutput
}

type WorkgroupEndpointVpcEndpointArgs struct {
	// The network interfaces of the endpoint.. See `Network Interface` below.
	NetworkInterfaces WorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The DNS address of the VPC endpoint.
	VpcEndpointId pulumi.StringPtrInput `pulumi:"vpcEndpointId"`
	// The port that Amazon Redshift Serverless listens on.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (WorkgroupEndpointVpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (i WorkgroupEndpointVpcEndpointArgs) ToWorkgroupEndpointVpcEndpointOutput() WorkgroupEndpointVpcEndpointOutput {
	return i.ToWorkgroupEndpointVpcEndpointOutputWithContext(context.Background())
}

func (i WorkgroupEndpointVpcEndpointArgs) ToWorkgroupEndpointVpcEndpointOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupEndpointVpcEndpointOutput)
}

// WorkgroupEndpointVpcEndpointArrayInput is an input type that accepts WorkgroupEndpointVpcEndpointArray and WorkgroupEndpointVpcEndpointArrayOutput values.
// You can construct a concrete instance of `WorkgroupEndpointVpcEndpointArrayInput` via:
//
//	WorkgroupEndpointVpcEndpointArray{ WorkgroupEndpointVpcEndpointArgs{...} }
type WorkgroupEndpointVpcEndpointArrayInput interface {
	pulumi.Input

	ToWorkgroupEndpointVpcEndpointArrayOutput() WorkgroupEndpointVpcEndpointArrayOutput
	ToWorkgroupEndpointVpcEndpointArrayOutputWithContext(context.Context) WorkgroupEndpointVpcEndpointArrayOutput
}

type WorkgroupEndpointVpcEndpointArray []WorkgroupEndpointVpcEndpointInput

func (WorkgroupEndpointVpcEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (i WorkgroupEndpointVpcEndpointArray) ToWorkgroupEndpointVpcEndpointArrayOutput() WorkgroupEndpointVpcEndpointArrayOutput {
	return i.ToWorkgroupEndpointVpcEndpointArrayOutputWithContext(context.Background())
}

func (i WorkgroupEndpointVpcEndpointArray) ToWorkgroupEndpointVpcEndpointArrayOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupEndpointVpcEndpointArrayOutput)
}

type WorkgroupEndpointVpcEndpointOutput struct{ *pulumi.OutputState }

func (WorkgroupEndpointVpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (o WorkgroupEndpointVpcEndpointOutput) ToWorkgroupEndpointVpcEndpointOutput() WorkgroupEndpointVpcEndpointOutput {
	return o
}

func (o WorkgroupEndpointVpcEndpointOutput) ToWorkgroupEndpointVpcEndpointOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointOutput {
	return o
}

// The network interfaces of the endpoint.. See `Network Interface` below.
func (o WorkgroupEndpointVpcEndpointOutput) NetworkInterfaces() WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v WorkgroupEndpointVpcEndpoint) []WorkgroupEndpointVpcEndpointNetworkInterface {
		return v.NetworkInterfaces
	}).(WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput)
}

// The DNS address of the VPC endpoint.
func (o WorkgroupEndpointVpcEndpointOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpointVpcEndpoint) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

// The port that Amazon Redshift Serverless listens on.
func (o WorkgroupEndpointVpcEndpointOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpointVpcEndpoint) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type WorkgroupEndpointVpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (WorkgroupEndpointVpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (o WorkgroupEndpointVpcEndpointArrayOutput) ToWorkgroupEndpointVpcEndpointArrayOutput() WorkgroupEndpointVpcEndpointArrayOutput {
	return o
}

func (o WorkgroupEndpointVpcEndpointArrayOutput) ToWorkgroupEndpointVpcEndpointArrayOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointArrayOutput {
	return o
}

func (o WorkgroupEndpointVpcEndpointArrayOutput) Index(i pulumi.IntInput) WorkgroupEndpointVpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkgroupEndpointVpcEndpoint {
		return vs[0].([]WorkgroupEndpointVpcEndpoint)[vs[1].(int)]
	}).(WorkgroupEndpointVpcEndpointOutput)
}

type WorkgroupEndpointVpcEndpointNetworkInterface struct {
	// The availability Zone.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The unique identifier of the network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The IPv4 address of the network interface within the subnet.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The unique identifier of the subnet.
	SubnetId *string `pulumi:"subnetId"`
}

// WorkgroupEndpointVpcEndpointNetworkInterfaceInput is an input type that accepts WorkgroupEndpointVpcEndpointNetworkInterfaceArgs and WorkgroupEndpointVpcEndpointNetworkInterfaceOutput values.
// You can construct a concrete instance of `WorkgroupEndpointVpcEndpointNetworkInterfaceInput` via:
//
//	WorkgroupEndpointVpcEndpointNetworkInterfaceArgs{...}
type WorkgroupEndpointVpcEndpointNetworkInterfaceInput interface {
	pulumi.Input

	ToWorkgroupEndpointVpcEndpointNetworkInterfaceOutput() WorkgroupEndpointVpcEndpointNetworkInterfaceOutput
	ToWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(context.Context) WorkgroupEndpointVpcEndpointNetworkInterfaceOutput
}

type WorkgroupEndpointVpcEndpointNetworkInterfaceArgs struct {
	// The availability Zone.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The unique identifier of the network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// The IPv4 address of the network interface within the subnet.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The unique identifier of the subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (WorkgroupEndpointVpcEndpointNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (i WorkgroupEndpointVpcEndpointNetworkInterfaceArgs) ToWorkgroupEndpointVpcEndpointNetworkInterfaceOutput() WorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return i.ToWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(context.Background())
}

func (i WorkgroupEndpointVpcEndpointNetworkInterfaceArgs) ToWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupEndpointVpcEndpointNetworkInterfaceOutput)
}

// WorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput is an input type that accepts WorkgroupEndpointVpcEndpointNetworkInterfaceArray and WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `WorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput` via:
//
//	WorkgroupEndpointVpcEndpointNetworkInterfaceArray{ WorkgroupEndpointVpcEndpointNetworkInterfaceArgs{...} }
type WorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput() WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput
	ToWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(context.Context) WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput
}

type WorkgroupEndpointVpcEndpointNetworkInterfaceArray []WorkgroupEndpointVpcEndpointNetworkInterfaceInput

func (WorkgroupEndpointVpcEndpointNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (i WorkgroupEndpointVpcEndpointNetworkInterfaceArray) ToWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput() WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return i.ToWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i WorkgroupEndpointVpcEndpointNetworkInterfaceArray) ToWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput)
}

type WorkgroupEndpointVpcEndpointNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (WorkgroupEndpointVpcEndpointNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (o WorkgroupEndpointVpcEndpointNetworkInterfaceOutput) ToWorkgroupEndpointVpcEndpointNetworkInterfaceOutput() WorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return o
}

func (o WorkgroupEndpointVpcEndpointNetworkInterfaceOutput) ToWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return o
}

// The availability Zone.
func (o WorkgroupEndpointVpcEndpointNetworkInterfaceOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpointVpcEndpointNetworkInterface) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The unique identifier of the network interface.
func (o WorkgroupEndpointVpcEndpointNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpointVpcEndpointNetworkInterface) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The IPv4 address of the network interface within the subnet.
func (o WorkgroupEndpointVpcEndpointNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpointVpcEndpointNetworkInterface) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The unique identifier of the subnet.
func (o WorkgroupEndpointVpcEndpointNetworkInterfaceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkgroupEndpointVpcEndpointNetworkInterface) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (o WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) ToWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput() WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return o
}

func (o WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) ToWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(ctx context.Context) WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return o
}

func (o WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) WorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkgroupEndpointVpcEndpointNetworkInterface {
		return vs[0].([]WorkgroupEndpointVpcEndpointNetworkInterface)[vs[1].(int)]
	}).(WorkgroupEndpointVpcEndpointNetworkInterfaceOutput)
}

type GetWorkgroupEndpoint struct {
	// The DNS address of the VPC endpoint.
	Address string `pulumi:"address"`
	// The port that Amazon Redshift Serverless listens on.
	Port int `pulumi:"port"`
	// The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
	VpcEndpoints []GetWorkgroupEndpointVpcEndpoint `pulumi:"vpcEndpoints"`
}

// GetWorkgroupEndpointInput is an input type that accepts GetWorkgroupEndpointArgs and GetWorkgroupEndpointOutput values.
// You can construct a concrete instance of `GetWorkgroupEndpointInput` via:
//
//	GetWorkgroupEndpointArgs{...}
type GetWorkgroupEndpointInput interface {
	pulumi.Input

	ToGetWorkgroupEndpointOutput() GetWorkgroupEndpointOutput
	ToGetWorkgroupEndpointOutputWithContext(context.Context) GetWorkgroupEndpointOutput
}

type GetWorkgroupEndpointArgs struct {
	// The DNS address of the VPC endpoint.
	Address pulumi.StringInput `pulumi:"address"`
	// The port that Amazon Redshift Serverless listens on.
	Port pulumi.IntInput `pulumi:"port"`
	// The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
	VpcEndpoints GetWorkgroupEndpointVpcEndpointArrayInput `pulumi:"vpcEndpoints"`
}

func (GetWorkgroupEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkgroupEndpoint)(nil)).Elem()
}

func (i GetWorkgroupEndpointArgs) ToGetWorkgroupEndpointOutput() GetWorkgroupEndpointOutput {
	return i.ToGetWorkgroupEndpointOutputWithContext(context.Background())
}

func (i GetWorkgroupEndpointArgs) ToGetWorkgroupEndpointOutputWithContext(ctx context.Context) GetWorkgroupEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkgroupEndpointOutput)
}

// GetWorkgroupEndpointArrayInput is an input type that accepts GetWorkgroupEndpointArray and GetWorkgroupEndpointArrayOutput values.
// You can construct a concrete instance of `GetWorkgroupEndpointArrayInput` via:
//
//	GetWorkgroupEndpointArray{ GetWorkgroupEndpointArgs{...} }
type GetWorkgroupEndpointArrayInput interface {
	pulumi.Input

	ToGetWorkgroupEndpointArrayOutput() GetWorkgroupEndpointArrayOutput
	ToGetWorkgroupEndpointArrayOutputWithContext(context.Context) GetWorkgroupEndpointArrayOutput
}

type GetWorkgroupEndpointArray []GetWorkgroupEndpointInput

func (GetWorkgroupEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkgroupEndpoint)(nil)).Elem()
}

func (i GetWorkgroupEndpointArray) ToGetWorkgroupEndpointArrayOutput() GetWorkgroupEndpointArrayOutput {
	return i.ToGetWorkgroupEndpointArrayOutputWithContext(context.Background())
}

func (i GetWorkgroupEndpointArray) ToGetWorkgroupEndpointArrayOutputWithContext(ctx context.Context) GetWorkgroupEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkgroupEndpointArrayOutput)
}

type GetWorkgroupEndpointOutput struct{ *pulumi.OutputState }

func (GetWorkgroupEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkgroupEndpoint)(nil)).Elem()
}

func (o GetWorkgroupEndpointOutput) ToGetWorkgroupEndpointOutput() GetWorkgroupEndpointOutput {
	return o
}

func (o GetWorkgroupEndpointOutput) ToGetWorkgroupEndpointOutputWithContext(ctx context.Context) GetWorkgroupEndpointOutput {
	return o
}

// The DNS address of the VPC endpoint.
func (o GetWorkgroupEndpointOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkgroupEndpoint) string { return v.Address }).(pulumi.StringOutput)
}

// The port that Amazon Redshift Serverless listens on.
func (o GetWorkgroupEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetWorkgroupEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// The VPC endpoint or the Redshift Serverless workgroup. See `VPC Endpoint` below.
func (o GetWorkgroupEndpointOutput) VpcEndpoints() GetWorkgroupEndpointVpcEndpointArrayOutput {
	return o.ApplyT(func(v GetWorkgroupEndpoint) []GetWorkgroupEndpointVpcEndpoint { return v.VpcEndpoints }).(GetWorkgroupEndpointVpcEndpointArrayOutput)
}

type GetWorkgroupEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetWorkgroupEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkgroupEndpoint)(nil)).Elem()
}

func (o GetWorkgroupEndpointArrayOutput) ToGetWorkgroupEndpointArrayOutput() GetWorkgroupEndpointArrayOutput {
	return o
}

func (o GetWorkgroupEndpointArrayOutput) ToGetWorkgroupEndpointArrayOutputWithContext(ctx context.Context) GetWorkgroupEndpointArrayOutput {
	return o
}

func (o GetWorkgroupEndpointArrayOutput) Index(i pulumi.IntInput) GetWorkgroupEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkgroupEndpoint {
		return vs[0].([]GetWorkgroupEndpoint)[vs[1].(int)]
	}).(GetWorkgroupEndpointOutput)
}

type GetWorkgroupEndpointVpcEndpoint struct {
	// The network interfaces of the endpoint.. See `Network Interface` below.
	NetworkInterfaces []GetWorkgroupEndpointVpcEndpointNetworkInterface `pulumi:"networkInterfaces"`
	// The DNS address of the VPC endpoint.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
	// The port that Amazon Redshift Serverless listens on.
	VpcId string `pulumi:"vpcId"`
}

// GetWorkgroupEndpointVpcEndpointInput is an input type that accepts GetWorkgroupEndpointVpcEndpointArgs and GetWorkgroupEndpointVpcEndpointOutput values.
// You can construct a concrete instance of `GetWorkgroupEndpointVpcEndpointInput` via:
//
//	GetWorkgroupEndpointVpcEndpointArgs{...}
type GetWorkgroupEndpointVpcEndpointInput interface {
	pulumi.Input

	ToGetWorkgroupEndpointVpcEndpointOutput() GetWorkgroupEndpointVpcEndpointOutput
	ToGetWorkgroupEndpointVpcEndpointOutputWithContext(context.Context) GetWorkgroupEndpointVpcEndpointOutput
}

type GetWorkgroupEndpointVpcEndpointArgs struct {
	// The network interfaces of the endpoint.. See `Network Interface` below.
	NetworkInterfaces GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The DNS address of the VPC endpoint.
	VpcEndpointId pulumi.StringInput `pulumi:"vpcEndpointId"`
	// The port that Amazon Redshift Serverless listens on.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetWorkgroupEndpointVpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (i GetWorkgroupEndpointVpcEndpointArgs) ToGetWorkgroupEndpointVpcEndpointOutput() GetWorkgroupEndpointVpcEndpointOutput {
	return i.ToGetWorkgroupEndpointVpcEndpointOutputWithContext(context.Background())
}

func (i GetWorkgroupEndpointVpcEndpointArgs) ToGetWorkgroupEndpointVpcEndpointOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkgroupEndpointVpcEndpointOutput)
}

// GetWorkgroupEndpointVpcEndpointArrayInput is an input type that accepts GetWorkgroupEndpointVpcEndpointArray and GetWorkgroupEndpointVpcEndpointArrayOutput values.
// You can construct a concrete instance of `GetWorkgroupEndpointVpcEndpointArrayInput` via:
//
//	GetWorkgroupEndpointVpcEndpointArray{ GetWorkgroupEndpointVpcEndpointArgs{...} }
type GetWorkgroupEndpointVpcEndpointArrayInput interface {
	pulumi.Input

	ToGetWorkgroupEndpointVpcEndpointArrayOutput() GetWorkgroupEndpointVpcEndpointArrayOutput
	ToGetWorkgroupEndpointVpcEndpointArrayOutputWithContext(context.Context) GetWorkgroupEndpointVpcEndpointArrayOutput
}

type GetWorkgroupEndpointVpcEndpointArray []GetWorkgroupEndpointVpcEndpointInput

func (GetWorkgroupEndpointVpcEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (i GetWorkgroupEndpointVpcEndpointArray) ToGetWorkgroupEndpointVpcEndpointArrayOutput() GetWorkgroupEndpointVpcEndpointArrayOutput {
	return i.ToGetWorkgroupEndpointVpcEndpointArrayOutputWithContext(context.Background())
}

func (i GetWorkgroupEndpointVpcEndpointArray) ToGetWorkgroupEndpointVpcEndpointArrayOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkgroupEndpointVpcEndpointArrayOutput)
}

type GetWorkgroupEndpointVpcEndpointOutput struct{ *pulumi.OutputState }

func (GetWorkgroupEndpointVpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (o GetWorkgroupEndpointVpcEndpointOutput) ToGetWorkgroupEndpointVpcEndpointOutput() GetWorkgroupEndpointVpcEndpointOutput {
	return o
}

func (o GetWorkgroupEndpointVpcEndpointOutput) ToGetWorkgroupEndpointVpcEndpointOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointOutput {
	return o
}

// The network interfaces of the endpoint.. See `Network Interface` below.
func (o GetWorkgroupEndpointVpcEndpointOutput) NetworkInterfaces() GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v GetWorkgroupEndpointVpcEndpoint) []GetWorkgroupEndpointVpcEndpointNetworkInterface {
		return v.NetworkInterfaces
	}).(GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput)
}

// The DNS address of the VPC endpoint.
func (o GetWorkgroupEndpointVpcEndpointOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkgroupEndpointVpcEndpoint) string { return v.VpcEndpointId }).(pulumi.StringOutput)
}

// The port that Amazon Redshift Serverless listens on.
func (o GetWorkgroupEndpointVpcEndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkgroupEndpointVpcEndpoint) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetWorkgroupEndpointVpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetWorkgroupEndpointVpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkgroupEndpointVpcEndpoint)(nil)).Elem()
}

func (o GetWorkgroupEndpointVpcEndpointArrayOutput) ToGetWorkgroupEndpointVpcEndpointArrayOutput() GetWorkgroupEndpointVpcEndpointArrayOutput {
	return o
}

func (o GetWorkgroupEndpointVpcEndpointArrayOutput) ToGetWorkgroupEndpointVpcEndpointArrayOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointArrayOutput {
	return o
}

func (o GetWorkgroupEndpointVpcEndpointArrayOutput) Index(i pulumi.IntInput) GetWorkgroupEndpointVpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkgroupEndpointVpcEndpoint {
		return vs[0].([]GetWorkgroupEndpointVpcEndpoint)[vs[1].(int)]
	}).(GetWorkgroupEndpointVpcEndpointOutput)
}

type GetWorkgroupEndpointVpcEndpointNetworkInterface struct {
	// The availability Zone.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The unique identifier of the network interface.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The IPv4 address of the network interface within the subnet.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The unique identifier of the subnet.
	SubnetId string `pulumi:"subnetId"`
}

// GetWorkgroupEndpointVpcEndpointNetworkInterfaceInput is an input type that accepts GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs and GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetWorkgroupEndpointVpcEndpointNetworkInterfaceInput` via:
//
//	GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs{...}
type GetWorkgroupEndpointVpcEndpointNetworkInterfaceInput interface {
	pulumi.Input

	ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput() GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput
	ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(context.Context) GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput
}

type GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs struct {
	// The availability Zone.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The unique identifier of the network interface.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The IPv4 address of the network interface within the subnet.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The unique identifier of the subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (i GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput() GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return i.ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput)
}

// GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput is an input type that accepts GetWorkgroupEndpointVpcEndpointNetworkInterfaceArray and GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput` via:
//
//	GetWorkgroupEndpointVpcEndpointNetworkInterfaceArray{ GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs{...} }
type GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput() GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput
	ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(context.Context) GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput
}

type GetWorkgroupEndpointVpcEndpointNetworkInterfaceArray []GetWorkgroupEndpointVpcEndpointNetworkInterfaceInput

func (GetWorkgroupEndpointVpcEndpointNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (i GetWorkgroupEndpointVpcEndpointNetworkInterfaceArray) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput() GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return i.ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetWorkgroupEndpointVpcEndpointNetworkInterfaceArray) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput)
}

type GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput() GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return o
}

func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return o
}

// The availability Zone.
func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkgroupEndpointVpcEndpointNetworkInterface) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The unique identifier of the network interface.
func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkgroupEndpointVpcEndpointNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The IPv4 address of the network interface within the subnet.
func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkgroupEndpointVpcEndpointNetworkInterface) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The unique identifier of the subnet.
func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkgroupEndpointVpcEndpointNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkgroupEndpointVpcEndpointNetworkInterface)(nil)).Elem()
}

func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput() GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return o
}

func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) ToGetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput {
	return o
}

func (o GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkgroupEndpointVpcEndpointNetworkInterface {
		return vs[0].([]GetWorkgroupEndpointVpcEndpointNetworkInterface)[vs[1].(int)]
	}).(GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAccessVpcEndpointInput)(nil)).Elem(), EndpointAccessVpcEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAccessVpcEndpointArrayInput)(nil)).Elem(), EndpointAccessVpcEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAccessVpcEndpointNetworkInterfaceInput)(nil)).Elem(), EndpointAccessVpcEndpointNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAccessVpcEndpointNetworkInterfaceArrayInput)(nil)).Elem(), EndpointAccessVpcEndpointNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupConfigParameterInput)(nil)).Elem(), WorkgroupConfigParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupConfigParameterArrayInput)(nil)).Elem(), WorkgroupConfigParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupEndpointInput)(nil)).Elem(), WorkgroupEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupEndpointArrayInput)(nil)).Elem(), WorkgroupEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupEndpointVpcEndpointInput)(nil)).Elem(), WorkgroupEndpointVpcEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupEndpointVpcEndpointArrayInput)(nil)).Elem(), WorkgroupEndpointVpcEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupEndpointVpcEndpointNetworkInterfaceInput)(nil)).Elem(), WorkgroupEndpointVpcEndpointNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput)(nil)).Elem(), WorkgroupEndpointVpcEndpointNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkgroupEndpointInput)(nil)).Elem(), GetWorkgroupEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkgroupEndpointArrayInput)(nil)).Elem(), GetWorkgroupEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkgroupEndpointVpcEndpointInput)(nil)).Elem(), GetWorkgroupEndpointVpcEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkgroupEndpointVpcEndpointArrayInput)(nil)).Elem(), GetWorkgroupEndpointVpcEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkgroupEndpointVpcEndpointNetworkInterfaceInput)(nil)).Elem(), GetWorkgroupEndpointVpcEndpointNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayInput)(nil)).Elem(), GetWorkgroupEndpointVpcEndpointNetworkInterfaceArray{})
	pulumi.RegisterOutputType(EndpointAccessVpcEndpointOutput{})
	pulumi.RegisterOutputType(EndpointAccessVpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(EndpointAccessVpcEndpointNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(EndpointAccessVpcEndpointNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(WorkgroupConfigParameterOutput{})
	pulumi.RegisterOutputType(WorkgroupConfigParameterArrayOutput{})
	pulumi.RegisterOutputType(WorkgroupEndpointOutput{})
	pulumi.RegisterOutputType(WorkgroupEndpointArrayOutput{})
	pulumi.RegisterOutputType(WorkgroupEndpointVpcEndpointOutput{})
	pulumi.RegisterOutputType(WorkgroupEndpointVpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(WorkgroupEndpointVpcEndpointNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(WorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetWorkgroupEndpointOutput{})
	pulumi.RegisterOutputType(GetWorkgroupEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetWorkgroupEndpointVpcEndpointOutput{})
	pulumi.RegisterOutputType(GetWorkgroupEndpointVpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetWorkgroupEndpointVpcEndpointNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetWorkgroupEndpointVpcEndpointNetworkInterfaceArrayOutput{})
}
