// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NfsFileShare struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput                       `pulumi:"arn"`
	AuditDestinationArn  pulumi.StringPtrOutput                    `pulumi:"auditDestinationArn"`
	BucketRegion         pulumi.StringPtrOutput                    `pulumi:"bucketRegion"`
	CacheAttributes      NfsFileShareCacheAttributesPtrOutput      `pulumi:"cacheAttributes"`
	ClientLists          pulumi.StringArrayOutput                  `pulumi:"clientLists"`
	DefaultStorageClass  pulumi.StringPtrOutput                    `pulumi:"defaultStorageClass"`
	FileShareName        pulumi.StringOutput                       `pulumi:"fileShareName"`
	FileshareId          pulumi.StringOutput                       `pulumi:"fileshareId"`
	GatewayArn           pulumi.StringOutput                       `pulumi:"gatewayArn"`
	GuessMimeTypeEnabled pulumi.BoolPtrOutput                      `pulumi:"guessMimeTypeEnabled"`
	KmsEncrypted         pulumi.BoolPtrOutput                      `pulumi:"kmsEncrypted"`
	KmsKeyArn            pulumi.StringPtrOutput                    `pulumi:"kmsKeyArn"`
	LocationArn          pulumi.StringOutput                       `pulumi:"locationArn"`
	NfsFileShareDefaults NfsFileShareNfsFileShareDefaultsPtrOutput `pulumi:"nfsFileShareDefaults"`
	NotificationPolicy   pulumi.StringPtrOutput                    `pulumi:"notificationPolicy"`
	ObjectAcl            pulumi.StringPtrOutput                    `pulumi:"objectAcl"`
	Path                 pulumi.StringOutput                       `pulumi:"path"`
	ReadOnly             pulumi.BoolPtrOutput                      `pulumi:"readOnly"`
	RequesterPays        pulumi.BoolPtrOutput                      `pulumi:"requesterPays"`
	RoleArn              pulumi.StringOutput                       `pulumi:"roleArn"`
	Squash               pulumi.StringPtrOutput                    `pulumi:"squash"`
	Tags                 pulumi.StringMapOutput                    `pulumi:"tags"`
	TagsAll              pulumi.StringMapOutput                    `pulumi:"tagsAll"`
	VpcEndpointDnsName   pulumi.StringPtrOutput                    `pulumi:"vpcEndpointDnsName"`
}

// NewNfsFileShare registers a new resource with the given unique name, arguments, and options.
func NewNfsFileShare(ctx *pulumi.Context,
	name string, args *NfsFileShareArgs, opts ...pulumi.ResourceOption) (*NfsFileShare, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientLists == nil {
		return nil, errors.New("invalid value for required argument 'ClientLists'")
	}
	if args.GatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'GatewayArn'")
	}
	if args.LocationArn == nil {
		return nil, errors.New("invalid value for required argument 'LocationArn'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	var resource NfsFileShare
	err := ctx.RegisterResource("aws:storagegateway/nfsFileShare:NfsFileShare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNfsFileShare gets an existing NfsFileShare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNfsFileShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NfsFileShareState, opts ...pulumi.ResourceOption) (*NfsFileShare, error) {
	var resource NfsFileShare
	err := ctx.ReadResource("aws:storagegateway/nfsFileShare:NfsFileShare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NfsFileShare resources.
type nfsFileShareState struct {
	Arn                  *string                           `pulumi:"arn"`
	AuditDestinationArn  *string                           `pulumi:"auditDestinationArn"`
	BucketRegion         *string                           `pulumi:"bucketRegion"`
	CacheAttributes      *NfsFileShareCacheAttributes      `pulumi:"cacheAttributes"`
	ClientLists          []string                          `pulumi:"clientLists"`
	DefaultStorageClass  *string                           `pulumi:"defaultStorageClass"`
	FileShareName        *string                           `pulumi:"fileShareName"`
	FileshareId          *string                           `pulumi:"fileshareId"`
	GatewayArn           *string                           `pulumi:"gatewayArn"`
	GuessMimeTypeEnabled *bool                             `pulumi:"guessMimeTypeEnabled"`
	KmsEncrypted         *bool                             `pulumi:"kmsEncrypted"`
	KmsKeyArn            *string                           `pulumi:"kmsKeyArn"`
	LocationArn          *string                           `pulumi:"locationArn"`
	NfsFileShareDefaults *NfsFileShareNfsFileShareDefaults `pulumi:"nfsFileShareDefaults"`
	NotificationPolicy   *string                           `pulumi:"notificationPolicy"`
	ObjectAcl            *string                           `pulumi:"objectAcl"`
	Path                 *string                           `pulumi:"path"`
	ReadOnly             *bool                             `pulumi:"readOnly"`
	RequesterPays        *bool                             `pulumi:"requesterPays"`
	RoleArn              *string                           `pulumi:"roleArn"`
	Squash               *string                           `pulumi:"squash"`
	Tags                 map[string]string                 `pulumi:"tags"`
	TagsAll              map[string]string                 `pulumi:"tagsAll"`
	VpcEndpointDnsName   *string                           `pulumi:"vpcEndpointDnsName"`
}

type NfsFileShareState struct {
	Arn                  pulumi.StringPtrInput
	AuditDestinationArn  pulumi.StringPtrInput
	BucketRegion         pulumi.StringPtrInput
	CacheAttributes      NfsFileShareCacheAttributesPtrInput
	ClientLists          pulumi.StringArrayInput
	DefaultStorageClass  pulumi.StringPtrInput
	FileShareName        pulumi.StringPtrInput
	FileshareId          pulumi.StringPtrInput
	GatewayArn           pulumi.StringPtrInput
	GuessMimeTypeEnabled pulumi.BoolPtrInput
	KmsEncrypted         pulumi.BoolPtrInput
	KmsKeyArn            pulumi.StringPtrInput
	LocationArn          pulumi.StringPtrInput
	NfsFileShareDefaults NfsFileShareNfsFileShareDefaultsPtrInput
	NotificationPolicy   pulumi.StringPtrInput
	ObjectAcl            pulumi.StringPtrInput
	Path                 pulumi.StringPtrInput
	ReadOnly             pulumi.BoolPtrInput
	RequesterPays        pulumi.BoolPtrInput
	RoleArn              pulumi.StringPtrInput
	Squash               pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	TagsAll              pulumi.StringMapInput
	VpcEndpointDnsName   pulumi.StringPtrInput
}

func (NfsFileShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*nfsFileShareState)(nil)).Elem()
}

type nfsFileShareArgs struct {
	AuditDestinationArn  *string                           `pulumi:"auditDestinationArn"`
	BucketRegion         *string                           `pulumi:"bucketRegion"`
	CacheAttributes      *NfsFileShareCacheAttributes      `pulumi:"cacheAttributes"`
	ClientLists          []string                          `pulumi:"clientLists"`
	DefaultStorageClass  *string                           `pulumi:"defaultStorageClass"`
	FileShareName        *string                           `pulumi:"fileShareName"`
	GatewayArn           string                            `pulumi:"gatewayArn"`
	GuessMimeTypeEnabled *bool                             `pulumi:"guessMimeTypeEnabled"`
	KmsEncrypted         *bool                             `pulumi:"kmsEncrypted"`
	KmsKeyArn            *string                           `pulumi:"kmsKeyArn"`
	LocationArn          string                            `pulumi:"locationArn"`
	NfsFileShareDefaults *NfsFileShareNfsFileShareDefaults `pulumi:"nfsFileShareDefaults"`
	NotificationPolicy   *string                           `pulumi:"notificationPolicy"`
	ObjectAcl            *string                           `pulumi:"objectAcl"`
	ReadOnly             *bool                             `pulumi:"readOnly"`
	RequesterPays        *bool                             `pulumi:"requesterPays"`
	RoleArn              string                            `pulumi:"roleArn"`
	Squash               *string                           `pulumi:"squash"`
	Tags                 map[string]string                 `pulumi:"tags"`
	VpcEndpointDnsName   *string                           `pulumi:"vpcEndpointDnsName"`
}

// The set of arguments for constructing a NfsFileShare resource.
type NfsFileShareArgs struct {
	AuditDestinationArn  pulumi.StringPtrInput
	BucketRegion         pulumi.StringPtrInput
	CacheAttributes      NfsFileShareCacheAttributesPtrInput
	ClientLists          pulumi.StringArrayInput
	DefaultStorageClass  pulumi.StringPtrInput
	FileShareName        pulumi.StringPtrInput
	GatewayArn           pulumi.StringInput
	GuessMimeTypeEnabled pulumi.BoolPtrInput
	KmsEncrypted         pulumi.BoolPtrInput
	KmsKeyArn            pulumi.StringPtrInput
	LocationArn          pulumi.StringInput
	NfsFileShareDefaults NfsFileShareNfsFileShareDefaultsPtrInput
	NotificationPolicy   pulumi.StringPtrInput
	ObjectAcl            pulumi.StringPtrInput
	ReadOnly             pulumi.BoolPtrInput
	RequesterPays        pulumi.BoolPtrInput
	RoleArn              pulumi.StringInput
	Squash               pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	VpcEndpointDnsName   pulumi.StringPtrInput
}

func (NfsFileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nfsFileShareArgs)(nil)).Elem()
}

type NfsFileShareInput interface {
	pulumi.Input

	ToNfsFileShareOutput() NfsFileShareOutput
	ToNfsFileShareOutputWithContext(ctx context.Context) NfsFileShareOutput
}

func (*NfsFileShare) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsFileShare)(nil)).Elem()
}

func (i *NfsFileShare) ToNfsFileShareOutput() NfsFileShareOutput {
	return i.ToNfsFileShareOutputWithContext(context.Background())
}

func (i *NfsFileShare) ToNfsFileShareOutputWithContext(ctx context.Context) NfsFileShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareOutput)
}

// NfsFileShareArrayInput is an input type that accepts NfsFileShareArray and NfsFileShareArrayOutput values.
// You can construct a concrete instance of `NfsFileShareArrayInput` via:
//
//	NfsFileShareArray{ NfsFileShareArgs{...} }
type NfsFileShareArrayInput interface {
	pulumi.Input

	ToNfsFileShareArrayOutput() NfsFileShareArrayOutput
	ToNfsFileShareArrayOutputWithContext(context.Context) NfsFileShareArrayOutput
}

type NfsFileShareArray []NfsFileShareInput

func (NfsFileShareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NfsFileShare)(nil)).Elem()
}

func (i NfsFileShareArray) ToNfsFileShareArrayOutput() NfsFileShareArrayOutput {
	return i.ToNfsFileShareArrayOutputWithContext(context.Background())
}

func (i NfsFileShareArray) ToNfsFileShareArrayOutputWithContext(ctx context.Context) NfsFileShareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareArrayOutput)
}

// NfsFileShareMapInput is an input type that accepts NfsFileShareMap and NfsFileShareMapOutput values.
// You can construct a concrete instance of `NfsFileShareMapInput` via:
//
//	NfsFileShareMap{ "key": NfsFileShareArgs{...} }
type NfsFileShareMapInput interface {
	pulumi.Input

	ToNfsFileShareMapOutput() NfsFileShareMapOutput
	ToNfsFileShareMapOutputWithContext(context.Context) NfsFileShareMapOutput
}

type NfsFileShareMap map[string]NfsFileShareInput

func (NfsFileShareMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NfsFileShare)(nil)).Elem()
}

func (i NfsFileShareMap) ToNfsFileShareMapOutput() NfsFileShareMapOutput {
	return i.ToNfsFileShareMapOutputWithContext(context.Background())
}

func (i NfsFileShareMap) ToNfsFileShareMapOutputWithContext(ctx context.Context) NfsFileShareMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareMapOutput)
}

type NfsFileShareOutput struct{ *pulumi.OutputState }

func (NfsFileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsFileShare)(nil)).Elem()
}

func (o NfsFileShareOutput) ToNfsFileShareOutput() NfsFileShareOutput {
	return o
}

func (o NfsFileShareOutput) ToNfsFileShareOutputWithContext(ctx context.Context) NfsFileShareOutput {
	return o
}

func (o NfsFileShareOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o NfsFileShareOutput) AuditDestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.AuditDestinationArn }).(pulumi.StringPtrOutput)
}

func (o NfsFileShareOutput) BucketRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.BucketRegion }).(pulumi.StringPtrOutput)
}

func (o NfsFileShareOutput) CacheAttributes() NfsFileShareCacheAttributesPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) NfsFileShareCacheAttributesPtrOutput { return v.CacheAttributes }).(NfsFileShareCacheAttributesPtrOutput)
}

func (o NfsFileShareOutput) ClientLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringArrayOutput { return v.ClientLists }).(pulumi.StringArrayOutput)
}

func (o NfsFileShareOutput) DefaultStorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.DefaultStorageClass }).(pulumi.StringPtrOutput)
}

func (o NfsFileShareOutput) FileShareName() pulumi.StringOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringOutput { return v.FileShareName }).(pulumi.StringOutput)
}

func (o NfsFileShareOutput) FileshareId() pulumi.StringOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringOutput { return v.FileshareId }).(pulumi.StringOutput)
}

func (o NfsFileShareOutput) GatewayArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringOutput { return v.GatewayArn }).(pulumi.StringOutput)
}

func (o NfsFileShareOutput) GuessMimeTypeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.BoolPtrOutput { return v.GuessMimeTypeEnabled }).(pulumi.BoolPtrOutput)
}

func (o NfsFileShareOutput) KmsEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.BoolPtrOutput { return v.KmsEncrypted }).(pulumi.BoolPtrOutput)
}

func (o NfsFileShareOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o NfsFileShareOutput) LocationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringOutput { return v.LocationArn }).(pulumi.StringOutput)
}

func (o NfsFileShareOutput) NfsFileShareDefaults() NfsFileShareNfsFileShareDefaultsPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) NfsFileShareNfsFileShareDefaultsPtrOutput { return v.NfsFileShareDefaults }).(NfsFileShareNfsFileShareDefaultsPtrOutput)
}

func (o NfsFileShareOutput) NotificationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.NotificationPolicy }).(pulumi.StringPtrOutput)
}

func (o NfsFileShareOutput) ObjectAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.ObjectAcl }).(pulumi.StringPtrOutput)
}

func (o NfsFileShareOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

func (o NfsFileShareOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.BoolPtrOutput { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o NfsFileShareOutput) RequesterPays() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.BoolPtrOutput { return v.RequesterPays }).(pulumi.BoolPtrOutput)
}

func (o NfsFileShareOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func (o NfsFileShareOutput) Squash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.Squash }).(pulumi.StringPtrOutput)
}

func (o NfsFileShareOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NfsFileShareOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o NfsFileShareOutput) VpcEndpointDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShare) pulumi.StringPtrOutput { return v.VpcEndpointDnsName }).(pulumi.StringPtrOutput)
}

type NfsFileShareArrayOutput struct{ *pulumi.OutputState }

func (NfsFileShareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NfsFileShare)(nil)).Elem()
}

func (o NfsFileShareArrayOutput) ToNfsFileShareArrayOutput() NfsFileShareArrayOutput {
	return o
}

func (o NfsFileShareArrayOutput) ToNfsFileShareArrayOutputWithContext(ctx context.Context) NfsFileShareArrayOutput {
	return o
}

func (o NfsFileShareArrayOutput) Index(i pulumi.IntInput) NfsFileShareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NfsFileShare {
		return vs[0].([]*NfsFileShare)[vs[1].(int)]
	}).(NfsFileShareOutput)
}

type NfsFileShareMapOutput struct{ *pulumi.OutputState }

func (NfsFileShareMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NfsFileShare)(nil)).Elem()
}

func (o NfsFileShareMapOutput) ToNfsFileShareMapOutput() NfsFileShareMapOutput {
	return o
}

func (o NfsFileShareMapOutput) ToNfsFileShareMapOutputWithContext(ctx context.Context) NfsFileShareMapOutput {
	return o
}

func (o NfsFileShareMapOutput) MapIndex(k pulumi.StringInput) NfsFileShareOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NfsFileShare {
		return vs[0].(map[string]*NfsFileShare)[vs[1].(string)]
	}).(NfsFileShareOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NfsFileShareInput)(nil)).Elem(), &NfsFileShare{})
	pulumi.RegisterInputType(reflect.TypeOf((*NfsFileShareArrayInput)(nil)).Elem(), NfsFileShareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NfsFileShareMapInput)(nil)).Elem(), NfsFileShareMap{})
	pulumi.RegisterOutputType(NfsFileShareOutput{})
	pulumi.RegisterOutputType(NfsFileShareArrayOutput{})
	pulumi.RegisterOutputType(NfsFileShareMapOutput{})
}
