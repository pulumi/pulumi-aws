// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FileSystemAssociation struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput                           `pulumi:"arn"`
	AuditDestinationArn pulumi.StringPtrOutput                        `pulumi:"auditDestinationArn"`
	CacheAttributes     FileSystemAssociationCacheAttributesPtrOutput `pulumi:"cacheAttributes"`
	GatewayArn          pulumi.StringOutput                           `pulumi:"gatewayArn"`
	LocationArn         pulumi.StringOutput                           `pulumi:"locationArn"`
	Password            pulumi.StringOutput                           `pulumi:"password"`
	Tags                pulumi.StringMapOutput                        `pulumi:"tags"`
	TagsAll             pulumi.StringMapOutput                        `pulumi:"tagsAll"`
	Username            pulumi.StringOutput                           `pulumi:"username"`
}

// NewFileSystemAssociation registers a new resource with the given unique name, arguments, and options.
func NewFileSystemAssociation(ctx *pulumi.Context,
	name string, args *FileSystemAssociationArgs, opts ...pulumi.ResourceOption) (*FileSystemAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'GatewayArn'")
	}
	if args.LocationArn == nil {
		return nil, errors.New("invalid value for required argument 'LocationArn'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	var resource FileSystemAssociation
	err := ctx.RegisterResource("aws:storagegateway/fileSystemAssociation:FileSystemAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFileSystemAssociation gets an existing FileSystemAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileSystemAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FileSystemAssociationState, opts ...pulumi.ResourceOption) (*FileSystemAssociation, error) {
	var resource FileSystemAssociation
	err := ctx.ReadResource("aws:storagegateway/fileSystemAssociation:FileSystemAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FileSystemAssociation resources.
type fileSystemAssociationState struct {
	Arn                 *string                               `pulumi:"arn"`
	AuditDestinationArn *string                               `pulumi:"auditDestinationArn"`
	CacheAttributes     *FileSystemAssociationCacheAttributes `pulumi:"cacheAttributes"`
	GatewayArn          *string                               `pulumi:"gatewayArn"`
	LocationArn         *string                               `pulumi:"locationArn"`
	Password            *string                               `pulumi:"password"`
	Tags                map[string]string                     `pulumi:"tags"`
	TagsAll             map[string]string                     `pulumi:"tagsAll"`
	Username            *string                               `pulumi:"username"`
}

type FileSystemAssociationState struct {
	Arn                 pulumi.StringPtrInput
	AuditDestinationArn pulumi.StringPtrInput
	CacheAttributes     FileSystemAssociationCacheAttributesPtrInput
	GatewayArn          pulumi.StringPtrInput
	LocationArn         pulumi.StringPtrInput
	Password            pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	TagsAll             pulumi.StringMapInput
	Username            pulumi.StringPtrInput
}

func (FileSystemAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemAssociationState)(nil)).Elem()
}

type fileSystemAssociationArgs struct {
	AuditDestinationArn *string                               `pulumi:"auditDestinationArn"`
	CacheAttributes     *FileSystemAssociationCacheAttributes `pulumi:"cacheAttributes"`
	GatewayArn          string                                `pulumi:"gatewayArn"`
	LocationArn         string                                `pulumi:"locationArn"`
	Password            string                                `pulumi:"password"`
	Tags                map[string]string                     `pulumi:"tags"`
	Username            string                                `pulumi:"username"`
}

// The set of arguments for constructing a FileSystemAssociation resource.
type FileSystemAssociationArgs struct {
	AuditDestinationArn pulumi.StringPtrInput
	CacheAttributes     FileSystemAssociationCacheAttributesPtrInput
	GatewayArn          pulumi.StringInput
	LocationArn         pulumi.StringInput
	Password            pulumi.StringInput
	Tags                pulumi.StringMapInput
	Username            pulumi.StringInput
}

func (FileSystemAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemAssociationArgs)(nil)).Elem()
}

type FileSystemAssociationInput interface {
	pulumi.Input

	ToFileSystemAssociationOutput() FileSystemAssociationOutput
	ToFileSystemAssociationOutputWithContext(ctx context.Context) FileSystemAssociationOutput
}

func (*FileSystemAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemAssociation)(nil)).Elem()
}

func (i *FileSystemAssociation) ToFileSystemAssociationOutput() FileSystemAssociationOutput {
	return i.ToFileSystemAssociationOutputWithContext(context.Background())
}

func (i *FileSystemAssociation) ToFileSystemAssociationOutputWithContext(ctx context.Context) FileSystemAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemAssociationOutput)
}

// FileSystemAssociationArrayInput is an input type that accepts FileSystemAssociationArray and FileSystemAssociationArrayOutput values.
// You can construct a concrete instance of `FileSystemAssociationArrayInput` via:
//
//	FileSystemAssociationArray{ FileSystemAssociationArgs{...} }
type FileSystemAssociationArrayInput interface {
	pulumi.Input

	ToFileSystemAssociationArrayOutput() FileSystemAssociationArrayOutput
	ToFileSystemAssociationArrayOutputWithContext(context.Context) FileSystemAssociationArrayOutput
}

type FileSystemAssociationArray []FileSystemAssociationInput

func (FileSystemAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileSystemAssociation)(nil)).Elem()
}

func (i FileSystemAssociationArray) ToFileSystemAssociationArrayOutput() FileSystemAssociationArrayOutput {
	return i.ToFileSystemAssociationArrayOutputWithContext(context.Background())
}

func (i FileSystemAssociationArray) ToFileSystemAssociationArrayOutputWithContext(ctx context.Context) FileSystemAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemAssociationArrayOutput)
}

// FileSystemAssociationMapInput is an input type that accepts FileSystemAssociationMap and FileSystemAssociationMapOutput values.
// You can construct a concrete instance of `FileSystemAssociationMapInput` via:
//
//	FileSystemAssociationMap{ "key": FileSystemAssociationArgs{...} }
type FileSystemAssociationMapInput interface {
	pulumi.Input

	ToFileSystemAssociationMapOutput() FileSystemAssociationMapOutput
	ToFileSystemAssociationMapOutputWithContext(context.Context) FileSystemAssociationMapOutput
}

type FileSystemAssociationMap map[string]FileSystemAssociationInput

func (FileSystemAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileSystemAssociation)(nil)).Elem()
}

func (i FileSystemAssociationMap) ToFileSystemAssociationMapOutput() FileSystemAssociationMapOutput {
	return i.ToFileSystemAssociationMapOutputWithContext(context.Background())
}

func (i FileSystemAssociationMap) ToFileSystemAssociationMapOutputWithContext(ctx context.Context) FileSystemAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemAssociationMapOutput)
}

type FileSystemAssociationOutput struct{ *pulumi.OutputState }

func (FileSystemAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemAssociation)(nil)).Elem()
}

func (o FileSystemAssociationOutput) ToFileSystemAssociationOutput() FileSystemAssociationOutput {
	return o
}

func (o FileSystemAssociationOutput) ToFileSystemAssociationOutputWithContext(ctx context.Context) FileSystemAssociationOutput {
	return o
}

func (o FileSystemAssociationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o FileSystemAssociationOutput) AuditDestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringPtrOutput { return v.AuditDestinationArn }).(pulumi.StringPtrOutput)
}

func (o FileSystemAssociationOutput) CacheAttributes() FileSystemAssociationCacheAttributesPtrOutput {
	return o.ApplyT(func(v *FileSystemAssociation) FileSystemAssociationCacheAttributesPtrOutput { return v.CacheAttributes }).(FileSystemAssociationCacheAttributesPtrOutput)
}

func (o FileSystemAssociationOutput) GatewayArn() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringOutput { return v.GatewayArn }).(pulumi.StringOutput)
}

func (o FileSystemAssociationOutput) LocationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringOutput { return v.LocationArn }).(pulumi.StringOutput)
}

func (o FileSystemAssociationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

func (o FileSystemAssociationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o FileSystemAssociationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o FileSystemAssociationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystemAssociation) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type FileSystemAssociationArrayOutput struct{ *pulumi.OutputState }

func (FileSystemAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileSystemAssociation)(nil)).Elem()
}

func (o FileSystemAssociationArrayOutput) ToFileSystemAssociationArrayOutput() FileSystemAssociationArrayOutput {
	return o
}

func (o FileSystemAssociationArrayOutput) ToFileSystemAssociationArrayOutputWithContext(ctx context.Context) FileSystemAssociationArrayOutput {
	return o
}

func (o FileSystemAssociationArrayOutput) Index(i pulumi.IntInput) FileSystemAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FileSystemAssociation {
		return vs[0].([]*FileSystemAssociation)[vs[1].(int)]
	}).(FileSystemAssociationOutput)
}

type FileSystemAssociationMapOutput struct{ *pulumi.OutputState }

func (FileSystemAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileSystemAssociation)(nil)).Elem()
}

func (o FileSystemAssociationMapOutput) ToFileSystemAssociationMapOutput() FileSystemAssociationMapOutput {
	return o
}

func (o FileSystemAssociationMapOutput) ToFileSystemAssociationMapOutputWithContext(ctx context.Context) FileSystemAssociationMapOutput {
	return o
}

func (o FileSystemAssociationMapOutput) MapIndex(k pulumi.StringInput) FileSystemAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FileSystemAssociation {
		return vs[0].(map[string]*FileSystemAssociation)[vs[1].(string)]
	}).(FileSystemAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemAssociationInput)(nil)).Elem(), &FileSystemAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemAssociationArrayInput)(nil)).Elem(), FileSystemAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemAssociationMapInput)(nil)).Elem(), FileSystemAssociationMap{})
	pulumi.RegisterOutputType(FileSystemAssociationOutput{})
	pulumi.RegisterOutputType(FileSystemAssociationArrayOutput{})
	pulumi.RegisterOutputType(FileSystemAssociationMapOutput{})
}
