// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an AWS Storage Gateway file, tape, or volume gateway in the provider region.
// 
// ~> NOTE: The Storage Gateway API requires the gateway to be connected to properly return information after activation. If you are receiving `The specified gateway is not connected` errors during resource creation (gateway activation), ensure your gateway instance meets the [Storage Gateway requirements](https://docs.aws.amazon.com/storagegateway/latest/userguide/Requirements.html).
type Gateway struct {
	s *pulumi.ResourceState
}

// NewGateway registers a new resource with the given unique name, arguments, and options.
func NewGateway(ctx *pulumi.Context,
	name string, args *GatewayArgs, opts ...pulumi.ResourceOpt) (*Gateway, error) {
	if args == nil || args.GatewayName == nil {
		return nil, errors.New("missing required argument 'GatewayName'")
	}
	if args == nil || args.GatewayTimezone == nil {
		return nil, errors.New("missing required argument 'GatewayTimezone'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["activationKey"] = nil
		inputs["gatewayIpAddress"] = nil
		inputs["gatewayName"] = nil
		inputs["gatewayTimezone"] = nil
		inputs["gatewayType"] = nil
		inputs["mediumChangerType"] = nil
		inputs["tapeDriveType"] = nil
	} else {
		inputs["activationKey"] = args.ActivationKey
		inputs["gatewayIpAddress"] = args.GatewayIpAddress
		inputs["gatewayName"] = args.GatewayName
		inputs["gatewayTimezone"] = args.GatewayTimezone
		inputs["gatewayType"] = args.GatewayType
		inputs["mediumChangerType"] = args.MediumChangerType
		inputs["tapeDriveType"] = args.TapeDriveType
	}
	inputs["arn"] = nil
	inputs["gatewayId"] = nil
	s, err := ctx.RegisterResource("aws:storagegateway/gateway:Gateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Gateway{s: s}, nil
}

// GetGateway gets an existing Gateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GatewayState, opts ...pulumi.ResourceOpt) (*Gateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["activationKey"] = state.ActivationKey
		inputs["arn"] = state.Arn
		inputs["gatewayId"] = state.GatewayId
		inputs["gatewayIpAddress"] = state.GatewayIpAddress
		inputs["gatewayName"] = state.GatewayName
		inputs["gatewayTimezone"] = state.GatewayTimezone
		inputs["gatewayType"] = state.GatewayType
		inputs["mediumChangerType"] = state.MediumChangerType
		inputs["tapeDriveType"] = state.TapeDriveType
	}
	s, err := ctx.ReadResource("aws:storagegateway/gateway:Gateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Gateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Gateway) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Gateway) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Gateway activation key during resource creation. Conflicts with `gateway_ip_address`. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html).
func (r *Gateway) ActivationKey() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["activationKey"])
}

// Amazon Resource Name (ARN) of the gateway.
func (r *Gateway) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// Identifier of the gateway.
func (r *Gateway) GatewayId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["gatewayId"])
}

// Gateway IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. Gateway must be accessible on port 80 from where Terraform is running. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html).
func (r *Gateway) GatewayIpAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["gatewayIpAddress"])
}

// Name of the gateway.
func (r *Gateway) GatewayName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["gatewayName"])
}

// Time zone for the gateway. The time zone is of the format "GMT", "GMT-hr:mm", or "GMT+hr:mm". For example, `GMT-4:00` indicates the time is 4 hours behind GMT. The time zone is used, for example, for scheduling snapshots and your gateway's maintenance schedule.
func (r *Gateway) GatewayTimezone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["gatewayTimezone"])
}

// Type of the gateway. The default value is `STORED`. Valid values: `CACHED`, `FILE_S3`, `STORED`, `VTL`.
func (r *Gateway) GatewayType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["gatewayType"])
}

func (r *Gateway) MediumChangerType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["mediumChangerType"])
}

// Type of tape drive to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: `IBM-ULT3580-TD5`.
func (r *Gateway) TapeDriveType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tapeDriveType"])
}

// Input properties used for looking up and filtering Gateway resources.
type GatewayState struct {
	// Gateway activation key during resource creation. Conflicts with `gateway_ip_address`. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html).
	ActivationKey interface{}
	// Amazon Resource Name (ARN) of the gateway.
	Arn interface{}
	// Identifier of the gateway.
	GatewayId interface{}
	// Gateway IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. Gateway must be accessible on port 80 from where Terraform is running. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html).
	GatewayIpAddress interface{}
	// Name of the gateway.
	GatewayName interface{}
	// Time zone for the gateway. The time zone is of the format "GMT", "GMT-hr:mm", or "GMT+hr:mm". For example, `GMT-4:00` indicates the time is 4 hours behind GMT. The time zone is used, for example, for scheduling snapshots and your gateway's maintenance schedule.
	GatewayTimezone interface{}
	// Type of the gateway. The default value is `STORED`. Valid values: `CACHED`, `FILE_S3`, `STORED`, `VTL`.
	GatewayType interface{}
	MediumChangerType interface{}
	// Type of tape drive to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: `IBM-ULT3580-TD5`.
	TapeDriveType interface{}
}

// The set of arguments for constructing a Gateway resource.
type GatewayArgs struct {
	// Gateway activation key during resource creation. Conflicts with `gateway_ip_address`. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html).
	ActivationKey interface{}
	// Gateway IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. Gateway must be accessible on port 80 from where Terraform is running. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html).
	GatewayIpAddress interface{}
	// Name of the gateway.
	GatewayName interface{}
	// Time zone for the gateway. The time zone is of the format "GMT", "GMT-hr:mm", or "GMT+hr:mm". For example, `GMT-4:00` indicates the time is 4 hours behind GMT. The time zone is used, for example, for scheduling snapshots and your gateway's maintenance schedule.
	GatewayTimezone interface{}
	// Type of the gateway. The default value is `STORED`. Valid values: `CACHED`, `FILE_S3`, `STORED`, `VTL`.
	GatewayType interface{}
	MediumChangerType interface{}
	// Type of tape drive to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: `IBM-ULT3580-TD5`.
	TapeDriveType interface{}
}
