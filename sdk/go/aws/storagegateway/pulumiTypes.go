// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type GatewayGatewayNetworkInterface struct {
	// The Internet Protocol version 4 (IPv4) address of the interface.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// GatewayGatewayNetworkInterfaceInput is an input type that accepts GatewayGatewayNetworkInterfaceArgs and GatewayGatewayNetworkInterfaceOutput values.
// You can construct a concrete instance of `GatewayGatewayNetworkInterfaceInput` via:
//
//          GatewayGatewayNetworkInterfaceArgs{...}
type GatewayGatewayNetworkInterfaceInput interface {
	pulumi.Input

	ToGatewayGatewayNetworkInterfaceOutput() GatewayGatewayNetworkInterfaceOutput
	ToGatewayGatewayNetworkInterfaceOutputWithContext(context.Context) GatewayGatewayNetworkInterfaceOutput
}

type GatewayGatewayNetworkInterfaceArgs struct {
	// The Internet Protocol version 4 (IPv4) address of the interface.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (GatewayGatewayNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayGatewayNetworkInterface)(nil)).Elem()
}

func (i GatewayGatewayNetworkInterfaceArgs) ToGatewayGatewayNetworkInterfaceOutput() GatewayGatewayNetworkInterfaceOutput {
	return i.ToGatewayGatewayNetworkInterfaceOutputWithContext(context.Background())
}

func (i GatewayGatewayNetworkInterfaceArgs) ToGatewayGatewayNetworkInterfaceOutputWithContext(ctx context.Context) GatewayGatewayNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayGatewayNetworkInterfaceOutput)
}

// GatewayGatewayNetworkInterfaceArrayInput is an input type that accepts GatewayGatewayNetworkInterfaceArray and GatewayGatewayNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GatewayGatewayNetworkInterfaceArrayInput` via:
//
//          GatewayGatewayNetworkInterfaceArray{ GatewayGatewayNetworkInterfaceArgs{...} }
type GatewayGatewayNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGatewayGatewayNetworkInterfaceArrayOutput() GatewayGatewayNetworkInterfaceArrayOutput
	ToGatewayGatewayNetworkInterfaceArrayOutputWithContext(context.Context) GatewayGatewayNetworkInterfaceArrayOutput
}

type GatewayGatewayNetworkInterfaceArray []GatewayGatewayNetworkInterfaceInput

func (GatewayGatewayNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayGatewayNetworkInterface)(nil)).Elem()
}

func (i GatewayGatewayNetworkInterfaceArray) ToGatewayGatewayNetworkInterfaceArrayOutput() GatewayGatewayNetworkInterfaceArrayOutput {
	return i.ToGatewayGatewayNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GatewayGatewayNetworkInterfaceArray) ToGatewayGatewayNetworkInterfaceArrayOutputWithContext(ctx context.Context) GatewayGatewayNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayGatewayNetworkInterfaceArrayOutput)
}

type GatewayGatewayNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GatewayGatewayNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayGatewayNetworkInterface)(nil)).Elem()
}

func (o GatewayGatewayNetworkInterfaceOutput) ToGatewayGatewayNetworkInterfaceOutput() GatewayGatewayNetworkInterfaceOutput {
	return o
}

func (o GatewayGatewayNetworkInterfaceOutput) ToGatewayGatewayNetworkInterfaceOutputWithContext(ctx context.Context) GatewayGatewayNetworkInterfaceOutput {
	return o
}

// The Internet Protocol version 4 (IPv4) address of the interface.
func (o GatewayGatewayNetworkInterfaceOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayGatewayNetworkInterface) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type GatewayGatewayNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GatewayGatewayNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayGatewayNetworkInterface)(nil)).Elem()
}

func (o GatewayGatewayNetworkInterfaceArrayOutput) ToGatewayGatewayNetworkInterfaceArrayOutput() GatewayGatewayNetworkInterfaceArrayOutput {
	return o
}

func (o GatewayGatewayNetworkInterfaceArrayOutput) ToGatewayGatewayNetworkInterfaceArrayOutputWithContext(ctx context.Context) GatewayGatewayNetworkInterfaceArrayOutput {
	return o
}

func (o GatewayGatewayNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GatewayGatewayNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayGatewayNetworkInterface {
		return vs[0].([]GatewayGatewayNetworkInterface)[vs[1].(int)]
	}).(GatewayGatewayNetworkInterfaceOutput)
}

type GatewaySmbActiveDirectorySettings struct {
	ActiveDirectoryStatus *string `pulumi:"activeDirectoryStatus"`
	// List of IPv4 addresses, NetBIOS names, or host names of your domain server.
	// If you need to specify the port number include it after the colon (“:”). For example, `mydc.mydomain.com:389`.
	DomainControllers []string `pulumi:"domainControllers"`
	// The name of the domain that you want the gateway to join.
	DomainName string `pulumi:"domainName"`
	// The organizational unit (OU) is a container in an Active Directory that can hold users, groups,
	// computers, and other OUs and this parameter specifies the OU that the gateway will join within the AD domain.
	OrganizationalUnit *string `pulumi:"organizationalUnit"`
	// The password of the user who has permission to add the gateway to the Active Directory domain.
	Password string `pulumi:"password"`
	// Specifies the time in seconds, in which the JoinDomain operation must complete. The default is `20` seconds.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// The user name of user who has permission to add the gateway to the Active Directory domain.
	Username string `pulumi:"username"`
}

// GatewaySmbActiveDirectorySettingsInput is an input type that accepts GatewaySmbActiveDirectorySettingsArgs and GatewaySmbActiveDirectorySettingsOutput values.
// You can construct a concrete instance of `GatewaySmbActiveDirectorySettingsInput` via:
//
//          GatewaySmbActiveDirectorySettingsArgs{...}
type GatewaySmbActiveDirectorySettingsInput interface {
	pulumi.Input

	ToGatewaySmbActiveDirectorySettingsOutput() GatewaySmbActiveDirectorySettingsOutput
	ToGatewaySmbActiveDirectorySettingsOutputWithContext(context.Context) GatewaySmbActiveDirectorySettingsOutput
}

type GatewaySmbActiveDirectorySettingsArgs struct {
	ActiveDirectoryStatus pulumi.StringPtrInput `pulumi:"activeDirectoryStatus"`
	// List of IPv4 addresses, NetBIOS names, or host names of your domain server.
	// If you need to specify the port number include it after the colon (“:”). For example, `mydc.mydomain.com:389`.
	DomainControllers pulumi.StringArrayInput `pulumi:"domainControllers"`
	// The name of the domain that you want the gateway to join.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The organizational unit (OU) is a container in an Active Directory that can hold users, groups,
	// computers, and other OUs and this parameter specifies the OU that the gateway will join within the AD domain.
	OrganizationalUnit pulumi.StringPtrInput `pulumi:"organizationalUnit"`
	// The password of the user who has permission to add the gateway to the Active Directory domain.
	Password pulumi.StringInput `pulumi:"password"`
	// Specifies the time in seconds, in which the JoinDomain operation must complete. The default is `20` seconds.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// The user name of user who has permission to add the gateway to the Active Directory domain.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GatewaySmbActiveDirectorySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySmbActiveDirectorySettings)(nil)).Elem()
}

func (i GatewaySmbActiveDirectorySettingsArgs) ToGatewaySmbActiveDirectorySettingsOutput() GatewaySmbActiveDirectorySettingsOutput {
	return i.ToGatewaySmbActiveDirectorySettingsOutputWithContext(context.Background())
}

func (i GatewaySmbActiveDirectorySettingsArgs) ToGatewaySmbActiveDirectorySettingsOutputWithContext(ctx context.Context) GatewaySmbActiveDirectorySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySmbActiveDirectorySettingsOutput)
}

func (i GatewaySmbActiveDirectorySettingsArgs) ToGatewaySmbActiveDirectorySettingsPtrOutput() GatewaySmbActiveDirectorySettingsPtrOutput {
	return i.ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(context.Background())
}

func (i GatewaySmbActiveDirectorySettingsArgs) ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(ctx context.Context) GatewaySmbActiveDirectorySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySmbActiveDirectorySettingsOutput).ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(ctx)
}

// GatewaySmbActiveDirectorySettingsPtrInput is an input type that accepts GatewaySmbActiveDirectorySettingsArgs, GatewaySmbActiveDirectorySettingsPtr and GatewaySmbActiveDirectorySettingsPtrOutput values.
// You can construct a concrete instance of `GatewaySmbActiveDirectorySettingsPtrInput` via:
//
//          GatewaySmbActiveDirectorySettingsArgs{...}
//
//  or:
//
//          nil
type GatewaySmbActiveDirectorySettingsPtrInput interface {
	pulumi.Input

	ToGatewaySmbActiveDirectorySettingsPtrOutput() GatewaySmbActiveDirectorySettingsPtrOutput
	ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(context.Context) GatewaySmbActiveDirectorySettingsPtrOutput
}

type gatewaySmbActiveDirectorySettingsPtrType GatewaySmbActiveDirectorySettingsArgs

func GatewaySmbActiveDirectorySettingsPtr(v *GatewaySmbActiveDirectorySettingsArgs) GatewaySmbActiveDirectorySettingsPtrInput {
	return (*gatewaySmbActiveDirectorySettingsPtrType)(v)
}

func (*gatewaySmbActiveDirectorySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySmbActiveDirectorySettings)(nil)).Elem()
}

func (i *gatewaySmbActiveDirectorySettingsPtrType) ToGatewaySmbActiveDirectorySettingsPtrOutput() GatewaySmbActiveDirectorySettingsPtrOutput {
	return i.ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(context.Background())
}

func (i *gatewaySmbActiveDirectorySettingsPtrType) ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(ctx context.Context) GatewaySmbActiveDirectorySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySmbActiveDirectorySettingsPtrOutput)
}

type GatewaySmbActiveDirectorySettingsOutput struct{ *pulumi.OutputState }

func (GatewaySmbActiveDirectorySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySmbActiveDirectorySettings)(nil)).Elem()
}

func (o GatewaySmbActiveDirectorySettingsOutput) ToGatewaySmbActiveDirectorySettingsOutput() GatewaySmbActiveDirectorySettingsOutput {
	return o
}

func (o GatewaySmbActiveDirectorySettingsOutput) ToGatewaySmbActiveDirectorySettingsOutputWithContext(ctx context.Context) GatewaySmbActiveDirectorySettingsOutput {
	return o
}

func (o GatewaySmbActiveDirectorySettingsOutput) ToGatewaySmbActiveDirectorySettingsPtrOutput() GatewaySmbActiveDirectorySettingsPtrOutput {
	return o.ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(context.Background())
}

func (o GatewaySmbActiveDirectorySettingsOutput) ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(ctx context.Context) GatewaySmbActiveDirectorySettingsPtrOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) *GatewaySmbActiveDirectorySettings {
		return &v
	}).(GatewaySmbActiveDirectorySettingsPtrOutput)
}
func (o GatewaySmbActiveDirectorySettingsOutput) ActiveDirectoryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) *string { return v.ActiveDirectoryStatus }).(pulumi.StringPtrOutput)
}

// List of IPv4 addresses, NetBIOS names, or host names of your domain server.
// If you need to specify the port number include it after the colon (“:”). For example, `mydc.mydomain.com:389`.
func (o GatewaySmbActiveDirectorySettingsOutput) DomainControllers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) []string { return v.DomainControllers }).(pulumi.StringArrayOutput)
}

// The name of the domain that you want the gateway to join.
func (o GatewaySmbActiveDirectorySettingsOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) string { return v.DomainName }).(pulumi.StringOutput)
}

// The organizational unit (OU) is a container in an Active Directory that can hold users, groups,
// computers, and other OUs and this parameter specifies the OU that the gateway will join within the AD domain.
func (o GatewaySmbActiveDirectorySettingsOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) *string { return v.OrganizationalUnit }).(pulumi.StringPtrOutput)
}

// The password of the user who has permission to add the gateway to the Active Directory domain.
func (o GatewaySmbActiveDirectorySettingsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) string { return v.Password }).(pulumi.StringOutput)
}

// Specifies the time in seconds, in which the JoinDomain operation must complete. The default is `20` seconds.
func (o GatewaySmbActiveDirectorySettingsOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The user name of user who has permission to add the gateway to the Active Directory domain.
func (o GatewaySmbActiveDirectorySettingsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaySmbActiveDirectorySettings) string { return v.Username }).(pulumi.StringOutput)
}

type GatewaySmbActiveDirectorySettingsPtrOutput struct{ *pulumi.OutputState }

func (GatewaySmbActiveDirectorySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySmbActiveDirectorySettings)(nil)).Elem()
}

func (o GatewaySmbActiveDirectorySettingsPtrOutput) ToGatewaySmbActiveDirectorySettingsPtrOutput() GatewaySmbActiveDirectorySettingsPtrOutput {
	return o
}

func (o GatewaySmbActiveDirectorySettingsPtrOutput) ToGatewaySmbActiveDirectorySettingsPtrOutputWithContext(ctx context.Context) GatewaySmbActiveDirectorySettingsPtrOutput {
	return o
}

func (o GatewaySmbActiveDirectorySettingsPtrOutput) Elem() GatewaySmbActiveDirectorySettingsOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) GatewaySmbActiveDirectorySettings { return *v }).(GatewaySmbActiveDirectorySettingsOutput)
}

func (o GatewaySmbActiveDirectorySettingsPtrOutput) ActiveDirectoryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) *string {
		if v == nil {
			return nil
		}
		return v.ActiveDirectoryStatus
	}).(pulumi.StringPtrOutput)
}

// List of IPv4 addresses, NetBIOS names, or host names of your domain server.
// If you need to specify the port number include it after the colon (“:”). For example, `mydc.mydomain.com:389`.
func (o GatewaySmbActiveDirectorySettingsPtrOutput) DomainControllers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) []string {
		if v == nil {
			return nil
		}
		return v.DomainControllers
	}).(pulumi.StringArrayOutput)
}

// The name of the domain that you want the gateway to join.
func (o GatewaySmbActiveDirectorySettingsPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The organizational unit (OU) is a container in an Active Directory that can hold users, groups,
// computers, and other OUs and this parameter specifies the OU that the gateway will join within the AD domain.
func (o GatewaySmbActiveDirectorySettingsPtrOutput) OrganizationalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnit
	}).(pulumi.StringPtrOutput)
}

// The password of the user who has permission to add the gateway to the Active Directory domain.
func (o GatewaySmbActiveDirectorySettingsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Specifies the time in seconds, in which the JoinDomain operation must complete. The default is `20` seconds.
func (o GatewaySmbActiveDirectorySettingsPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// The user name of user who has permission to add the gateway to the Active Directory domain.
func (o GatewaySmbActiveDirectorySettingsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewaySmbActiveDirectorySettings) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type NfsFileShareCacheAttributes struct {
	// Refreshes a file share's cache by using Time To Live (TTL).
	// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
	// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
	CacheStaleTimeoutInSeconds *int `pulumi:"cacheStaleTimeoutInSeconds"`
}

// NfsFileShareCacheAttributesInput is an input type that accepts NfsFileShareCacheAttributesArgs and NfsFileShareCacheAttributesOutput values.
// You can construct a concrete instance of `NfsFileShareCacheAttributesInput` via:
//
//          NfsFileShareCacheAttributesArgs{...}
type NfsFileShareCacheAttributesInput interface {
	pulumi.Input

	ToNfsFileShareCacheAttributesOutput() NfsFileShareCacheAttributesOutput
	ToNfsFileShareCacheAttributesOutputWithContext(context.Context) NfsFileShareCacheAttributesOutput
}

type NfsFileShareCacheAttributesArgs struct {
	// Refreshes a file share's cache by using Time To Live (TTL).
	// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
	// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
	CacheStaleTimeoutInSeconds pulumi.IntPtrInput `pulumi:"cacheStaleTimeoutInSeconds"`
}

func (NfsFileShareCacheAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsFileShareCacheAttributes)(nil)).Elem()
}

func (i NfsFileShareCacheAttributesArgs) ToNfsFileShareCacheAttributesOutput() NfsFileShareCacheAttributesOutput {
	return i.ToNfsFileShareCacheAttributesOutputWithContext(context.Background())
}

func (i NfsFileShareCacheAttributesArgs) ToNfsFileShareCacheAttributesOutputWithContext(ctx context.Context) NfsFileShareCacheAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareCacheAttributesOutput)
}

func (i NfsFileShareCacheAttributesArgs) ToNfsFileShareCacheAttributesPtrOutput() NfsFileShareCacheAttributesPtrOutput {
	return i.ToNfsFileShareCacheAttributesPtrOutputWithContext(context.Background())
}

func (i NfsFileShareCacheAttributesArgs) ToNfsFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) NfsFileShareCacheAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareCacheAttributesOutput).ToNfsFileShareCacheAttributesPtrOutputWithContext(ctx)
}

// NfsFileShareCacheAttributesPtrInput is an input type that accepts NfsFileShareCacheAttributesArgs, NfsFileShareCacheAttributesPtr and NfsFileShareCacheAttributesPtrOutput values.
// You can construct a concrete instance of `NfsFileShareCacheAttributesPtrInput` via:
//
//          NfsFileShareCacheAttributesArgs{...}
//
//  or:
//
//          nil
type NfsFileShareCacheAttributesPtrInput interface {
	pulumi.Input

	ToNfsFileShareCacheAttributesPtrOutput() NfsFileShareCacheAttributesPtrOutput
	ToNfsFileShareCacheAttributesPtrOutputWithContext(context.Context) NfsFileShareCacheAttributesPtrOutput
}

type nfsFileShareCacheAttributesPtrType NfsFileShareCacheAttributesArgs

func NfsFileShareCacheAttributesPtr(v *NfsFileShareCacheAttributesArgs) NfsFileShareCacheAttributesPtrInput {
	return (*nfsFileShareCacheAttributesPtrType)(v)
}

func (*nfsFileShareCacheAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsFileShareCacheAttributes)(nil)).Elem()
}

func (i *nfsFileShareCacheAttributesPtrType) ToNfsFileShareCacheAttributesPtrOutput() NfsFileShareCacheAttributesPtrOutput {
	return i.ToNfsFileShareCacheAttributesPtrOutputWithContext(context.Background())
}

func (i *nfsFileShareCacheAttributesPtrType) ToNfsFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) NfsFileShareCacheAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareCacheAttributesPtrOutput)
}

type NfsFileShareCacheAttributesOutput struct{ *pulumi.OutputState }

func (NfsFileShareCacheAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsFileShareCacheAttributes)(nil)).Elem()
}

func (o NfsFileShareCacheAttributesOutput) ToNfsFileShareCacheAttributesOutput() NfsFileShareCacheAttributesOutput {
	return o
}

func (o NfsFileShareCacheAttributesOutput) ToNfsFileShareCacheAttributesOutputWithContext(ctx context.Context) NfsFileShareCacheAttributesOutput {
	return o
}

func (o NfsFileShareCacheAttributesOutput) ToNfsFileShareCacheAttributesPtrOutput() NfsFileShareCacheAttributesPtrOutput {
	return o.ToNfsFileShareCacheAttributesPtrOutputWithContext(context.Background())
}

func (o NfsFileShareCacheAttributesOutput) ToNfsFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) NfsFileShareCacheAttributesPtrOutput {
	return o.ApplyT(func(v NfsFileShareCacheAttributes) *NfsFileShareCacheAttributes {
		return &v
	}).(NfsFileShareCacheAttributesPtrOutput)
}

// Refreshes a file share's cache by using Time To Live (TTL).
// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
func (o NfsFileShareCacheAttributesOutput) CacheStaleTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NfsFileShareCacheAttributes) *int { return v.CacheStaleTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type NfsFileShareCacheAttributesPtrOutput struct{ *pulumi.OutputState }

func (NfsFileShareCacheAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsFileShareCacheAttributes)(nil)).Elem()
}

func (o NfsFileShareCacheAttributesPtrOutput) ToNfsFileShareCacheAttributesPtrOutput() NfsFileShareCacheAttributesPtrOutput {
	return o
}

func (o NfsFileShareCacheAttributesPtrOutput) ToNfsFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) NfsFileShareCacheAttributesPtrOutput {
	return o
}

func (o NfsFileShareCacheAttributesPtrOutput) Elem() NfsFileShareCacheAttributesOutput {
	return o.ApplyT(func(v *NfsFileShareCacheAttributes) NfsFileShareCacheAttributes { return *v }).(NfsFileShareCacheAttributesOutput)
}

// Refreshes a file share's cache by using Time To Live (TTL).
// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
func (o NfsFileShareCacheAttributesPtrOutput) CacheStaleTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NfsFileShareCacheAttributes) *int {
		if v == nil {
			return nil
		}
		return v.CacheStaleTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

type NfsFileShareNfsFileShareDefaults struct {
	// The Unix directory mode in the string form "nnnn". Defaults to `"0777"`.
	DirectoryMode *string `pulumi:"directoryMode"`
	// The Unix file mode in the string form "nnnn". Defaults to `"0666"`.
	FileMode *string `pulumi:"fileMode"`
	// The default group ID for the file share (unless the files have another group ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
	GroupId *string `pulumi:"groupId"`
	// The default owner ID for the file share (unless the files have another owner ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
	OwnerId *string `pulumi:"ownerId"`
}

// NfsFileShareNfsFileShareDefaultsInput is an input type that accepts NfsFileShareNfsFileShareDefaultsArgs and NfsFileShareNfsFileShareDefaultsOutput values.
// You can construct a concrete instance of `NfsFileShareNfsFileShareDefaultsInput` via:
//
//          NfsFileShareNfsFileShareDefaultsArgs{...}
type NfsFileShareNfsFileShareDefaultsInput interface {
	pulumi.Input

	ToNfsFileShareNfsFileShareDefaultsOutput() NfsFileShareNfsFileShareDefaultsOutput
	ToNfsFileShareNfsFileShareDefaultsOutputWithContext(context.Context) NfsFileShareNfsFileShareDefaultsOutput
}

type NfsFileShareNfsFileShareDefaultsArgs struct {
	// The Unix directory mode in the string form "nnnn". Defaults to `"0777"`.
	DirectoryMode pulumi.StringPtrInput `pulumi:"directoryMode"`
	// The Unix file mode in the string form "nnnn". Defaults to `"0666"`.
	FileMode pulumi.StringPtrInput `pulumi:"fileMode"`
	// The default group ID for the file share (unless the files have another group ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The default owner ID for the file share (unless the files have another owner ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
}

func (NfsFileShareNfsFileShareDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsFileShareNfsFileShareDefaults)(nil)).Elem()
}

func (i NfsFileShareNfsFileShareDefaultsArgs) ToNfsFileShareNfsFileShareDefaultsOutput() NfsFileShareNfsFileShareDefaultsOutput {
	return i.ToNfsFileShareNfsFileShareDefaultsOutputWithContext(context.Background())
}

func (i NfsFileShareNfsFileShareDefaultsArgs) ToNfsFileShareNfsFileShareDefaultsOutputWithContext(ctx context.Context) NfsFileShareNfsFileShareDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareNfsFileShareDefaultsOutput)
}

func (i NfsFileShareNfsFileShareDefaultsArgs) ToNfsFileShareNfsFileShareDefaultsPtrOutput() NfsFileShareNfsFileShareDefaultsPtrOutput {
	return i.ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(context.Background())
}

func (i NfsFileShareNfsFileShareDefaultsArgs) ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(ctx context.Context) NfsFileShareNfsFileShareDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareNfsFileShareDefaultsOutput).ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(ctx)
}

// NfsFileShareNfsFileShareDefaultsPtrInput is an input type that accepts NfsFileShareNfsFileShareDefaultsArgs, NfsFileShareNfsFileShareDefaultsPtr and NfsFileShareNfsFileShareDefaultsPtrOutput values.
// You can construct a concrete instance of `NfsFileShareNfsFileShareDefaultsPtrInput` via:
//
//          NfsFileShareNfsFileShareDefaultsArgs{...}
//
//  or:
//
//          nil
type NfsFileShareNfsFileShareDefaultsPtrInput interface {
	pulumi.Input

	ToNfsFileShareNfsFileShareDefaultsPtrOutput() NfsFileShareNfsFileShareDefaultsPtrOutput
	ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(context.Context) NfsFileShareNfsFileShareDefaultsPtrOutput
}

type nfsFileShareNfsFileShareDefaultsPtrType NfsFileShareNfsFileShareDefaultsArgs

func NfsFileShareNfsFileShareDefaultsPtr(v *NfsFileShareNfsFileShareDefaultsArgs) NfsFileShareNfsFileShareDefaultsPtrInput {
	return (*nfsFileShareNfsFileShareDefaultsPtrType)(v)
}

func (*nfsFileShareNfsFileShareDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsFileShareNfsFileShareDefaults)(nil)).Elem()
}

func (i *nfsFileShareNfsFileShareDefaultsPtrType) ToNfsFileShareNfsFileShareDefaultsPtrOutput() NfsFileShareNfsFileShareDefaultsPtrOutput {
	return i.ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(context.Background())
}

func (i *nfsFileShareNfsFileShareDefaultsPtrType) ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(ctx context.Context) NfsFileShareNfsFileShareDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NfsFileShareNfsFileShareDefaultsPtrOutput)
}

type NfsFileShareNfsFileShareDefaultsOutput struct{ *pulumi.OutputState }

func (NfsFileShareNfsFileShareDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsFileShareNfsFileShareDefaults)(nil)).Elem()
}

func (o NfsFileShareNfsFileShareDefaultsOutput) ToNfsFileShareNfsFileShareDefaultsOutput() NfsFileShareNfsFileShareDefaultsOutput {
	return o
}

func (o NfsFileShareNfsFileShareDefaultsOutput) ToNfsFileShareNfsFileShareDefaultsOutputWithContext(ctx context.Context) NfsFileShareNfsFileShareDefaultsOutput {
	return o
}

func (o NfsFileShareNfsFileShareDefaultsOutput) ToNfsFileShareNfsFileShareDefaultsPtrOutput() NfsFileShareNfsFileShareDefaultsPtrOutput {
	return o.ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(context.Background())
}

func (o NfsFileShareNfsFileShareDefaultsOutput) ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(ctx context.Context) NfsFileShareNfsFileShareDefaultsPtrOutput {
	return o.ApplyT(func(v NfsFileShareNfsFileShareDefaults) *NfsFileShareNfsFileShareDefaults {
		return &v
	}).(NfsFileShareNfsFileShareDefaultsPtrOutput)
}

// The Unix directory mode in the string form "nnnn". Defaults to `"0777"`.
func (o NfsFileShareNfsFileShareDefaultsOutput) DirectoryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsFileShareNfsFileShareDefaults) *string { return v.DirectoryMode }).(pulumi.StringPtrOutput)
}

// The Unix file mode in the string form "nnnn". Defaults to `"0666"`.
func (o NfsFileShareNfsFileShareDefaultsOutput) FileMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsFileShareNfsFileShareDefaults) *string { return v.FileMode }).(pulumi.StringPtrOutput)
}

// The default group ID for the file share (unless the files have another group ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
func (o NfsFileShareNfsFileShareDefaultsOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsFileShareNfsFileShareDefaults) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The default owner ID for the file share (unless the files have another owner ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
func (o NfsFileShareNfsFileShareDefaultsOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NfsFileShareNfsFileShareDefaults) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

type NfsFileShareNfsFileShareDefaultsPtrOutput struct{ *pulumi.OutputState }

func (NfsFileShareNfsFileShareDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NfsFileShareNfsFileShareDefaults)(nil)).Elem()
}

func (o NfsFileShareNfsFileShareDefaultsPtrOutput) ToNfsFileShareNfsFileShareDefaultsPtrOutput() NfsFileShareNfsFileShareDefaultsPtrOutput {
	return o
}

func (o NfsFileShareNfsFileShareDefaultsPtrOutput) ToNfsFileShareNfsFileShareDefaultsPtrOutputWithContext(ctx context.Context) NfsFileShareNfsFileShareDefaultsPtrOutput {
	return o
}

func (o NfsFileShareNfsFileShareDefaultsPtrOutput) Elem() NfsFileShareNfsFileShareDefaultsOutput {
	return o.ApplyT(func(v *NfsFileShareNfsFileShareDefaults) NfsFileShareNfsFileShareDefaults { return *v }).(NfsFileShareNfsFileShareDefaultsOutput)
}

// The Unix directory mode in the string form "nnnn". Defaults to `"0777"`.
func (o NfsFileShareNfsFileShareDefaultsPtrOutput) DirectoryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShareNfsFileShareDefaults) *string {
		if v == nil {
			return nil
		}
		return v.DirectoryMode
	}).(pulumi.StringPtrOutput)
}

// The Unix file mode in the string form "nnnn". Defaults to `"0666"`.
func (o NfsFileShareNfsFileShareDefaultsPtrOutput) FileMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShareNfsFileShareDefaults) *string {
		if v == nil {
			return nil
		}
		return v.FileMode
	}).(pulumi.StringPtrOutput)
}

// The default group ID for the file share (unless the files have another group ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
func (o NfsFileShareNfsFileShareDefaultsPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShareNfsFileShareDefaults) *string {
		if v == nil {
			return nil
		}
		return v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The default owner ID for the file share (unless the files have another owner ID specified). Defaults to `65534` (`nfsnobody`). Valid values: `0` through `4294967294`.
func (o NfsFileShareNfsFileShareDefaultsPtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NfsFileShareNfsFileShareDefaults) *string {
		if v == nil {
			return nil
		}
		return v.OwnerId
	}).(pulumi.StringPtrOutput)
}

type SmbFileShareCacheAttributes struct {
	// Refreshes a file share's cache by using Time To Live (TTL).
	// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
	// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
	CacheStaleTimeoutInSeconds *int `pulumi:"cacheStaleTimeoutInSeconds"`
}

// SmbFileShareCacheAttributesInput is an input type that accepts SmbFileShareCacheAttributesArgs and SmbFileShareCacheAttributesOutput values.
// You can construct a concrete instance of `SmbFileShareCacheAttributesInput` via:
//
//          SmbFileShareCacheAttributesArgs{...}
type SmbFileShareCacheAttributesInput interface {
	pulumi.Input

	ToSmbFileShareCacheAttributesOutput() SmbFileShareCacheAttributesOutput
	ToSmbFileShareCacheAttributesOutputWithContext(context.Context) SmbFileShareCacheAttributesOutput
}

type SmbFileShareCacheAttributesArgs struct {
	// Refreshes a file share's cache by using Time To Live (TTL).
	// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
	// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
	CacheStaleTimeoutInSeconds pulumi.IntPtrInput `pulumi:"cacheStaleTimeoutInSeconds"`
}

func (SmbFileShareCacheAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbFileShareCacheAttributes)(nil)).Elem()
}

func (i SmbFileShareCacheAttributesArgs) ToSmbFileShareCacheAttributesOutput() SmbFileShareCacheAttributesOutput {
	return i.ToSmbFileShareCacheAttributesOutputWithContext(context.Background())
}

func (i SmbFileShareCacheAttributesArgs) ToSmbFileShareCacheAttributesOutputWithContext(ctx context.Context) SmbFileShareCacheAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbFileShareCacheAttributesOutput)
}

func (i SmbFileShareCacheAttributesArgs) ToSmbFileShareCacheAttributesPtrOutput() SmbFileShareCacheAttributesPtrOutput {
	return i.ToSmbFileShareCacheAttributesPtrOutputWithContext(context.Background())
}

func (i SmbFileShareCacheAttributesArgs) ToSmbFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) SmbFileShareCacheAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbFileShareCacheAttributesOutput).ToSmbFileShareCacheAttributesPtrOutputWithContext(ctx)
}

// SmbFileShareCacheAttributesPtrInput is an input type that accepts SmbFileShareCacheAttributesArgs, SmbFileShareCacheAttributesPtr and SmbFileShareCacheAttributesPtrOutput values.
// You can construct a concrete instance of `SmbFileShareCacheAttributesPtrInput` via:
//
//          SmbFileShareCacheAttributesArgs{...}
//
//  or:
//
//          nil
type SmbFileShareCacheAttributesPtrInput interface {
	pulumi.Input

	ToSmbFileShareCacheAttributesPtrOutput() SmbFileShareCacheAttributesPtrOutput
	ToSmbFileShareCacheAttributesPtrOutputWithContext(context.Context) SmbFileShareCacheAttributesPtrOutput
}

type smbFileShareCacheAttributesPtrType SmbFileShareCacheAttributesArgs

func SmbFileShareCacheAttributesPtr(v *SmbFileShareCacheAttributesArgs) SmbFileShareCacheAttributesPtrInput {
	return (*smbFileShareCacheAttributesPtrType)(v)
}

func (*smbFileShareCacheAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SmbFileShareCacheAttributes)(nil)).Elem()
}

func (i *smbFileShareCacheAttributesPtrType) ToSmbFileShareCacheAttributesPtrOutput() SmbFileShareCacheAttributesPtrOutput {
	return i.ToSmbFileShareCacheAttributesPtrOutputWithContext(context.Background())
}

func (i *smbFileShareCacheAttributesPtrType) ToSmbFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) SmbFileShareCacheAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmbFileShareCacheAttributesPtrOutput)
}

type SmbFileShareCacheAttributesOutput struct{ *pulumi.OutputState }

func (SmbFileShareCacheAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmbFileShareCacheAttributes)(nil)).Elem()
}

func (o SmbFileShareCacheAttributesOutput) ToSmbFileShareCacheAttributesOutput() SmbFileShareCacheAttributesOutput {
	return o
}

func (o SmbFileShareCacheAttributesOutput) ToSmbFileShareCacheAttributesOutputWithContext(ctx context.Context) SmbFileShareCacheAttributesOutput {
	return o
}

func (o SmbFileShareCacheAttributesOutput) ToSmbFileShareCacheAttributesPtrOutput() SmbFileShareCacheAttributesPtrOutput {
	return o.ToSmbFileShareCacheAttributesPtrOutputWithContext(context.Background())
}

func (o SmbFileShareCacheAttributesOutput) ToSmbFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) SmbFileShareCacheAttributesPtrOutput {
	return o.ApplyT(func(v SmbFileShareCacheAttributes) *SmbFileShareCacheAttributes {
		return &v
	}).(SmbFileShareCacheAttributesPtrOutput)
}

// Refreshes a file share's cache by using Time To Live (TTL).
// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
func (o SmbFileShareCacheAttributesOutput) CacheStaleTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SmbFileShareCacheAttributes) *int { return v.CacheStaleTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type SmbFileShareCacheAttributesPtrOutput struct{ *pulumi.OutputState }

func (SmbFileShareCacheAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SmbFileShareCacheAttributes)(nil)).Elem()
}

func (o SmbFileShareCacheAttributesPtrOutput) ToSmbFileShareCacheAttributesPtrOutput() SmbFileShareCacheAttributesPtrOutput {
	return o
}

func (o SmbFileShareCacheAttributesPtrOutput) ToSmbFileShareCacheAttributesPtrOutputWithContext(ctx context.Context) SmbFileShareCacheAttributesPtrOutput {
	return o
}

func (o SmbFileShareCacheAttributesPtrOutput) Elem() SmbFileShareCacheAttributesOutput {
	return o.ApplyT(func(v *SmbFileShareCacheAttributes) SmbFileShareCacheAttributes { return *v }).(SmbFileShareCacheAttributesOutput)
}

// Refreshes a file share's cache by using Time To Live (TTL).
// TTL is the length of time since the last refresh after which access to the directory would cause the file gateway
// to first refresh that directory's contents from the Amazon S3 bucket. Valid Values: 300 to 2,592,000 seconds (5 minutes to 30 days)
func (o SmbFileShareCacheAttributesPtrOutput) CacheStaleTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SmbFileShareCacheAttributes) *int {
		if v == nil {
			return nil
		}
		return v.CacheStaleTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GatewayGatewayNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GatewayGatewayNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GatewaySmbActiveDirectorySettingsOutput{})
	pulumi.RegisterOutputType(GatewaySmbActiveDirectorySettingsPtrOutput{})
	pulumi.RegisterOutputType(NfsFileShareCacheAttributesOutput{})
	pulumi.RegisterOutputType(NfsFileShareCacheAttributesPtrOutput{})
	pulumi.RegisterOutputType(NfsFileShareNfsFileShareDefaultsOutput{})
	pulumi.RegisterOutputType(NfsFileShareNfsFileShareDefaultsPtrOutput{})
	pulumi.RegisterOutputType(SmbFileShareCacheAttributesOutput{})
	pulumi.RegisterOutputType(SmbFileShareCacheAttributesPtrOutput{})
}
