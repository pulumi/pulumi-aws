// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to create a Service Catalog Portfolio.
type Portfolio struct {
	s *pulumi.ResourceState
}

// NewPortfolio registers a new resource with the given unique name, arguments, and options.
func NewPortfolio(ctx *pulumi.Context,
	name string, args *PortfolioArgs, opts ...pulumi.ResourceOpt) (*Portfolio, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["providerName"] = nil
		inputs["tags"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["providerName"] = args.ProviderName
		inputs["tags"] = args.Tags
	}
	inputs["arn"] = nil
	inputs["createdTime"] = nil
	s, err := ctx.RegisterResource("aws:servicecatalog/portfolio:Portfolio", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Portfolio{s: s}, nil
}

// GetPortfolio gets an existing Portfolio resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPortfolio(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PortfolioState, opts ...pulumi.ResourceOpt) (*Portfolio, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["createdTime"] = state.CreatedTime
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["providerName"] = state.ProviderName
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("aws:servicecatalog/portfolio:Portfolio", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Portfolio{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Portfolio) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Portfolio) ID() *pulumi.IDOutput {
	return r.s.ID
}

func (r *Portfolio) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

func (r *Portfolio) CreatedTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createdTime"])
}

// Description of the portfolio
func (r *Portfolio) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The name of the portfolio.
func (r *Portfolio) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Name of the person or organization who owns the portfolio.
func (r *Portfolio) ProviderName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["providerName"])
}

// Tags to apply to the connection.
func (r *Portfolio) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering Portfolio resources.
type PortfolioState struct {
	Arn interface{}
	CreatedTime interface{}
	// Description of the portfolio
	Description interface{}
	// The name of the portfolio.
	Name interface{}
	// Name of the person or organization who owns the portfolio.
	ProviderName interface{}
	// Tags to apply to the connection.
	Tags interface{}
}

// The set of arguments for constructing a Portfolio resource.
type PortfolioArgs struct {
	// Description of the portfolio
	Description interface{}
	// The name of the portfolio.
	Name interface{}
	// Name of the person or organization who owns the portfolio.
	ProviderName interface{}
	// Tags to apply to the connection.
	Tags interface{}
}
