// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupProduct(ctx *pulumi.Context, args *LookupProductArgs, opts ...pulumi.InvokeOption) (*LookupProductResult, error) {
	var rv LookupProductResult
	err := ctx.Invoke("aws:servicecatalog/getProduct:getProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProduct.
type LookupProductArgs struct {
	AcceptLanguage *string           `pulumi:"acceptLanguage"`
	Id             string            `pulumi:"id"`
	Tags           map[string]string `pulumi:"tags"`
}

// A collection of values returned by getProduct.
type LookupProductResult struct {
	AcceptLanguage     *string           `pulumi:"acceptLanguage"`
	Arn                string            `pulumi:"arn"`
	CreatedTime        string            `pulumi:"createdTime"`
	Description        string            `pulumi:"description"`
	Distributor        string            `pulumi:"distributor"`
	HasDefaultPath     bool              `pulumi:"hasDefaultPath"`
	Id                 string            `pulumi:"id"`
	Name               string            `pulumi:"name"`
	Owner              string            `pulumi:"owner"`
	Status             string            `pulumi:"status"`
	SupportDescription string            `pulumi:"supportDescription"`
	SupportEmail       string            `pulumi:"supportEmail"`
	SupportUrl         string            `pulumi:"supportUrl"`
	Tags               map[string]string `pulumi:"tags"`
	Type               string            `pulumi:"type"`
}

func LookupProductOutput(ctx *pulumi.Context, args LookupProductOutputArgs, opts ...pulumi.InvokeOption) LookupProductResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProductResult, error) {
			args := v.(LookupProductArgs)
			r, err := LookupProduct(ctx, &args, opts...)
			var s LookupProductResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProductResultOutput)
}

// A collection of arguments for invoking getProduct.
type LookupProductOutputArgs struct {
	AcceptLanguage pulumi.StringPtrInput `pulumi:"acceptLanguage"`
	Id             pulumi.StringInput    `pulumi:"id"`
	Tags           pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductArgs)(nil)).Elem()
}

// A collection of values returned by getProduct.
type LookupProductResultOutput struct{ *pulumi.OutputState }

func (LookupProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductResult)(nil)).Elem()
}

func (o LookupProductResultOutput) ToLookupProductResultOutput() LookupProductResultOutput {
	return o
}

func (o LookupProductResultOutput) ToLookupProductResultOutputWithContext(ctx context.Context) LookupProductResultOutput {
	return o
}

func (o LookupProductResultOutput) AcceptLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProductResult) *string { return v.AcceptLanguage }).(pulumi.StringPtrOutput)
}

func (o LookupProductResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) Distributor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Distributor }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) HasDefaultPath() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupProductResult) bool { return v.HasDefaultPath }).(pulumi.BoolOutput)
}

func (o LookupProductResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) SupportDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.SupportDescription }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) SupportEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.SupportEmail }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) SupportUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.SupportUrl }).(pulumi.StringOutput)
}

func (o LookupProductResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProductResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupProductResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProductResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProductResultOutput{})
}
