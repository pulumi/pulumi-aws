// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProvisionedProduct struct {
	pulumi.CustomResourceState

	AcceptLanguage                     pulumi.StringPtrOutput                                     `pulumi:"acceptLanguage"`
	Arn                                pulumi.StringOutput                                        `pulumi:"arn"`
	CloudwatchDashboardNames           pulumi.StringArrayOutput                                   `pulumi:"cloudwatchDashboardNames"`
	CreatedTime                        pulumi.StringOutput                                        `pulumi:"createdTime"`
	IgnoreErrors                       pulumi.BoolPtrOutput                                       `pulumi:"ignoreErrors"`
	LastProvisioningRecordId           pulumi.StringOutput                                        `pulumi:"lastProvisioningRecordId"`
	LastRecordId                       pulumi.StringOutput                                        `pulumi:"lastRecordId"`
	LastSuccessfulProvisioningRecordId pulumi.StringOutput                                        `pulumi:"lastSuccessfulProvisioningRecordId"`
	LaunchRoleArn                      pulumi.StringOutput                                        `pulumi:"launchRoleArn"`
	Name                               pulumi.StringOutput                                        `pulumi:"name"`
	NotificationArns                   pulumi.StringArrayOutput                                   `pulumi:"notificationArns"`
	Outputs                            ProvisionedProductOutputTypeArrayOutput                    `pulumi:"outputs"`
	PathId                             pulumi.StringOutput                                        `pulumi:"pathId"`
	PathName                           pulumi.StringPtrOutput                                     `pulumi:"pathName"`
	ProductId                          pulumi.StringOutput                                        `pulumi:"productId"`
	ProductName                        pulumi.StringPtrOutput                                     `pulumi:"productName"`
	ProvisioningArtifactId             pulumi.StringOutput                                        `pulumi:"provisioningArtifactId"`
	ProvisioningArtifactName           pulumi.StringPtrOutput                                     `pulumi:"provisioningArtifactName"`
	ProvisioningParameters             ProvisionedProductProvisioningParameterArrayOutput         `pulumi:"provisioningParameters"`
	RetainPhysicalResources            pulumi.BoolPtrOutput                                       `pulumi:"retainPhysicalResources"`
	StackSetProvisioningPreferences    ProvisionedProductStackSetProvisioningPreferencesPtrOutput `pulumi:"stackSetProvisioningPreferences"`
	Status                             pulumi.StringOutput                                        `pulumi:"status"`
	StatusMessage                      pulumi.StringOutput                                        `pulumi:"statusMessage"`
	Tags                               pulumi.StringMapOutput                                     `pulumi:"tags"`
	TagsAll                            pulumi.StringMapOutput                                     `pulumi:"tagsAll"`
	Type                               pulumi.StringOutput                                        `pulumi:"type"`
}

// NewProvisionedProduct registers a new resource with the given unique name, arguments, and options.
func NewProvisionedProduct(ctx *pulumi.Context,
	name string, args *ProvisionedProductArgs, opts ...pulumi.ResourceOption) (*ProvisionedProduct, error) {
	if args == nil {
		args = &ProvisionedProductArgs{}
	}

	var resource ProvisionedProduct
	err := ctx.RegisterResource("aws:servicecatalog/provisionedProduct:ProvisionedProduct", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisionedProduct gets an existing ProvisionedProduct resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisionedProduct(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisionedProductState, opts ...pulumi.ResourceOption) (*ProvisionedProduct, error) {
	var resource ProvisionedProduct
	err := ctx.ReadResource("aws:servicecatalog/provisionedProduct:ProvisionedProduct", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisionedProduct resources.
type provisionedProductState struct {
	AcceptLanguage                     *string                                            `pulumi:"acceptLanguage"`
	Arn                                *string                                            `pulumi:"arn"`
	CloudwatchDashboardNames           []string                                           `pulumi:"cloudwatchDashboardNames"`
	CreatedTime                        *string                                            `pulumi:"createdTime"`
	IgnoreErrors                       *bool                                              `pulumi:"ignoreErrors"`
	LastProvisioningRecordId           *string                                            `pulumi:"lastProvisioningRecordId"`
	LastRecordId                       *string                                            `pulumi:"lastRecordId"`
	LastSuccessfulProvisioningRecordId *string                                            `pulumi:"lastSuccessfulProvisioningRecordId"`
	LaunchRoleArn                      *string                                            `pulumi:"launchRoleArn"`
	Name                               *string                                            `pulumi:"name"`
	NotificationArns                   []string                                           `pulumi:"notificationArns"`
	Outputs                            []ProvisionedProductOutputType                     `pulumi:"outputs"`
	PathId                             *string                                            `pulumi:"pathId"`
	PathName                           *string                                            `pulumi:"pathName"`
	ProductId                          *string                                            `pulumi:"productId"`
	ProductName                        *string                                            `pulumi:"productName"`
	ProvisioningArtifactId             *string                                            `pulumi:"provisioningArtifactId"`
	ProvisioningArtifactName           *string                                            `pulumi:"provisioningArtifactName"`
	ProvisioningParameters             []ProvisionedProductProvisioningParameter          `pulumi:"provisioningParameters"`
	RetainPhysicalResources            *bool                                              `pulumi:"retainPhysicalResources"`
	StackSetProvisioningPreferences    *ProvisionedProductStackSetProvisioningPreferences `pulumi:"stackSetProvisioningPreferences"`
	Status                             *string                                            `pulumi:"status"`
	StatusMessage                      *string                                            `pulumi:"statusMessage"`
	Tags                               map[string]string                                  `pulumi:"tags"`
	TagsAll                            map[string]string                                  `pulumi:"tagsAll"`
	Type                               *string                                            `pulumi:"type"`
}

type ProvisionedProductState struct {
	AcceptLanguage                     pulumi.StringPtrInput
	Arn                                pulumi.StringPtrInput
	CloudwatchDashboardNames           pulumi.StringArrayInput
	CreatedTime                        pulumi.StringPtrInput
	IgnoreErrors                       pulumi.BoolPtrInput
	LastProvisioningRecordId           pulumi.StringPtrInput
	LastRecordId                       pulumi.StringPtrInput
	LastSuccessfulProvisioningRecordId pulumi.StringPtrInput
	LaunchRoleArn                      pulumi.StringPtrInput
	Name                               pulumi.StringPtrInput
	NotificationArns                   pulumi.StringArrayInput
	Outputs                            ProvisionedProductOutputTypeArrayInput
	PathId                             pulumi.StringPtrInput
	PathName                           pulumi.StringPtrInput
	ProductId                          pulumi.StringPtrInput
	ProductName                        pulumi.StringPtrInput
	ProvisioningArtifactId             pulumi.StringPtrInput
	ProvisioningArtifactName           pulumi.StringPtrInput
	ProvisioningParameters             ProvisionedProductProvisioningParameterArrayInput
	RetainPhysicalResources            pulumi.BoolPtrInput
	StackSetProvisioningPreferences    ProvisionedProductStackSetProvisioningPreferencesPtrInput
	Status                             pulumi.StringPtrInput
	StatusMessage                      pulumi.StringPtrInput
	Tags                               pulumi.StringMapInput
	TagsAll                            pulumi.StringMapInput
	Type                               pulumi.StringPtrInput
}

func (ProvisionedProductState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedProductState)(nil)).Elem()
}

type provisionedProductArgs struct {
	AcceptLanguage                  *string                                            `pulumi:"acceptLanguage"`
	IgnoreErrors                    *bool                                              `pulumi:"ignoreErrors"`
	Name                            *string                                            `pulumi:"name"`
	NotificationArns                []string                                           `pulumi:"notificationArns"`
	PathId                          *string                                            `pulumi:"pathId"`
	PathName                        *string                                            `pulumi:"pathName"`
	ProductId                       *string                                            `pulumi:"productId"`
	ProductName                     *string                                            `pulumi:"productName"`
	ProvisioningArtifactId          *string                                            `pulumi:"provisioningArtifactId"`
	ProvisioningArtifactName        *string                                            `pulumi:"provisioningArtifactName"`
	ProvisioningParameters          []ProvisionedProductProvisioningParameter          `pulumi:"provisioningParameters"`
	RetainPhysicalResources         *bool                                              `pulumi:"retainPhysicalResources"`
	StackSetProvisioningPreferences *ProvisionedProductStackSetProvisioningPreferences `pulumi:"stackSetProvisioningPreferences"`
	Tags                            map[string]string                                  `pulumi:"tags"`
}

// The set of arguments for constructing a ProvisionedProduct resource.
type ProvisionedProductArgs struct {
	AcceptLanguage                  pulumi.StringPtrInput
	IgnoreErrors                    pulumi.BoolPtrInput
	Name                            pulumi.StringPtrInput
	NotificationArns                pulumi.StringArrayInput
	PathId                          pulumi.StringPtrInput
	PathName                        pulumi.StringPtrInput
	ProductId                       pulumi.StringPtrInput
	ProductName                     pulumi.StringPtrInput
	ProvisioningArtifactId          pulumi.StringPtrInput
	ProvisioningArtifactName        pulumi.StringPtrInput
	ProvisioningParameters          ProvisionedProductProvisioningParameterArrayInput
	RetainPhysicalResources         pulumi.BoolPtrInput
	StackSetProvisioningPreferences ProvisionedProductStackSetProvisioningPreferencesPtrInput
	Tags                            pulumi.StringMapInput
}

func (ProvisionedProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedProductArgs)(nil)).Elem()
}

type ProvisionedProductInput interface {
	pulumi.Input

	ToProvisionedProductOutput() ProvisionedProductOutput
	ToProvisionedProductOutputWithContext(ctx context.Context) ProvisionedProductOutput
}

func (*ProvisionedProduct) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedProduct)(nil)).Elem()
}

func (i *ProvisionedProduct) ToProvisionedProductOutput() ProvisionedProductOutput {
	return i.ToProvisionedProductOutputWithContext(context.Background())
}

func (i *ProvisionedProduct) ToProvisionedProductOutputWithContext(ctx context.Context) ProvisionedProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductOutput)
}

// ProvisionedProductArrayInput is an input type that accepts ProvisionedProductArray and ProvisionedProductArrayOutput values.
// You can construct a concrete instance of `ProvisionedProductArrayInput` via:
//
//	ProvisionedProductArray{ ProvisionedProductArgs{...} }
type ProvisionedProductArrayInput interface {
	pulumi.Input

	ToProvisionedProductArrayOutput() ProvisionedProductArrayOutput
	ToProvisionedProductArrayOutputWithContext(context.Context) ProvisionedProductArrayOutput
}

type ProvisionedProductArray []ProvisionedProductInput

func (ProvisionedProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisionedProduct)(nil)).Elem()
}

func (i ProvisionedProductArray) ToProvisionedProductArrayOutput() ProvisionedProductArrayOutput {
	return i.ToProvisionedProductArrayOutputWithContext(context.Background())
}

func (i ProvisionedProductArray) ToProvisionedProductArrayOutputWithContext(ctx context.Context) ProvisionedProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductArrayOutput)
}

// ProvisionedProductMapInput is an input type that accepts ProvisionedProductMap and ProvisionedProductMapOutput values.
// You can construct a concrete instance of `ProvisionedProductMapInput` via:
//
//	ProvisionedProductMap{ "key": ProvisionedProductArgs{...} }
type ProvisionedProductMapInput interface {
	pulumi.Input

	ToProvisionedProductMapOutput() ProvisionedProductMapOutput
	ToProvisionedProductMapOutputWithContext(context.Context) ProvisionedProductMapOutput
}

type ProvisionedProductMap map[string]ProvisionedProductInput

func (ProvisionedProductMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisionedProduct)(nil)).Elem()
}

func (i ProvisionedProductMap) ToProvisionedProductMapOutput() ProvisionedProductMapOutput {
	return i.ToProvisionedProductMapOutputWithContext(context.Background())
}

func (i ProvisionedProductMap) ToProvisionedProductMapOutputWithContext(ctx context.Context) ProvisionedProductMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductMapOutput)
}

type ProvisionedProductOutput struct{ *pulumi.OutputState }

func (ProvisionedProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedProduct)(nil)).Elem()
}

func (o ProvisionedProductOutput) ToProvisionedProductOutput() ProvisionedProductOutput {
	return o
}

func (o ProvisionedProductOutput) ToProvisionedProductOutputWithContext(ctx context.Context) ProvisionedProductOutput {
	return o
}

func (o ProvisionedProductOutput) AcceptLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringPtrOutput { return v.AcceptLanguage }).(pulumi.StringPtrOutput)
}

func (o ProvisionedProductOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) CloudwatchDashboardNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringArrayOutput { return v.CloudwatchDashboardNames }).(pulumi.StringArrayOutput)
}

func (o ProvisionedProductOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) IgnoreErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.BoolPtrOutput { return v.IgnoreErrors }).(pulumi.BoolPtrOutput)
}

func (o ProvisionedProductOutput) LastProvisioningRecordId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.LastProvisioningRecordId }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) LastRecordId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.LastRecordId }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) LastSuccessfulProvisioningRecordId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.LastSuccessfulProvisioningRecordId }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) LaunchRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.LaunchRoleArn }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) NotificationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringArrayOutput { return v.NotificationArns }).(pulumi.StringArrayOutput)
}

func (o ProvisionedProductOutput) Outputs() ProvisionedProductOutputTypeArrayOutput {
	return o.ApplyT(func(v *ProvisionedProduct) ProvisionedProductOutputTypeArrayOutput { return v.Outputs }).(ProvisionedProductOutputTypeArrayOutput)
}

func (o ProvisionedProductOutput) PathId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.PathId }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) PathName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringPtrOutput { return v.PathName }).(pulumi.StringPtrOutput)
}

func (o ProvisionedProductOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringPtrOutput { return v.ProductName }).(pulumi.StringPtrOutput)
}

func (o ProvisionedProductOutput) ProvisioningArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.ProvisioningArtifactId }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) ProvisioningArtifactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringPtrOutput { return v.ProvisioningArtifactName }).(pulumi.StringPtrOutput)
}

func (o ProvisionedProductOutput) ProvisioningParameters() ProvisionedProductProvisioningParameterArrayOutput {
	return o.ApplyT(func(v *ProvisionedProduct) ProvisionedProductProvisioningParameterArrayOutput {
		return v.ProvisioningParameters
	}).(ProvisionedProductProvisioningParameterArrayOutput)
}

func (o ProvisionedProductOutput) RetainPhysicalResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.BoolPtrOutput { return v.RetainPhysicalResources }).(pulumi.BoolPtrOutput)
}

func (o ProvisionedProductOutput) StackSetProvisioningPreferences() ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return o.ApplyT(func(v *ProvisionedProduct) ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
		return v.StackSetProvisioningPreferences
	}).(ProvisionedProductStackSetProvisioningPreferencesPtrOutput)
}

func (o ProvisionedProductOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.StatusMessage }).(pulumi.StringOutput)
}

func (o ProvisionedProductOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ProvisionedProductOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ProvisionedProductOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisionedProduct) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type ProvisionedProductArrayOutput struct{ *pulumi.OutputState }

func (ProvisionedProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisionedProduct)(nil)).Elem()
}

func (o ProvisionedProductArrayOutput) ToProvisionedProductArrayOutput() ProvisionedProductArrayOutput {
	return o
}

func (o ProvisionedProductArrayOutput) ToProvisionedProductArrayOutputWithContext(ctx context.Context) ProvisionedProductArrayOutput {
	return o
}

func (o ProvisionedProductArrayOutput) Index(i pulumi.IntInput) ProvisionedProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProvisionedProduct {
		return vs[0].([]*ProvisionedProduct)[vs[1].(int)]
	}).(ProvisionedProductOutput)
}

type ProvisionedProductMapOutput struct{ *pulumi.OutputState }

func (ProvisionedProductMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisionedProduct)(nil)).Elem()
}

func (o ProvisionedProductMapOutput) ToProvisionedProductMapOutput() ProvisionedProductMapOutput {
	return o
}

func (o ProvisionedProductMapOutput) ToProvisionedProductMapOutputWithContext(ctx context.Context) ProvisionedProductMapOutput {
	return o
}

func (o ProvisionedProductMapOutput) MapIndex(k pulumi.StringInput) ProvisionedProductOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProvisionedProduct {
		return vs[0].(map[string]*ProvisionedProduct)[vs[1].(string)]
	}).(ProvisionedProductOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedProductInput)(nil)).Elem(), &ProvisionedProduct{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedProductArrayInput)(nil)).Elem(), ProvisionedProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedProductMapInput)(nil)).Elem(), ProvisionedProductMap{})
	pulumi.RegisterOutputType(ProvisionedProductOutput{})
	pulumi.RegisterOutputType(ProvisionedProductArrayOutput{})
	pulumi.RegisterOutputType(ProvisionedProductMapOutput{})
}
