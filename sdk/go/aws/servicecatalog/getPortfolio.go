// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information for a Service Catalog Portfolio.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/servicecatalog"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := servicecatalog.LookupPortfolio(ctx, &servicecatalog.LookupPortfolioArgs{
// 			Id: "port-07052002",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupPortfolio(ctx *pulumi.Context, args *LookupPortfolioArgs, opts ...pulumi.InvokeOption) (*LookupPortfolioResult, error) {
	var rv LookupPortfolioResult
	err := ctx.Invoke("aws:servicecatalog/getPortfolio:getPortfolio", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPortfolio.
type LookupPortfolioArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	Id string `pulumi:"id"`
	// Tags applied to the portfolio.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getPortfolio.
type LookupPortfolioResult struct {
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Portfolio ARN.
	Arn string `pulumi:"arn"`
	// Time the portfolio was created.
	CreatedTime string `pulumi:"createdTime"`
	// Description of the portfolio
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// Portfolio name.
	Name string `pulumi:"name"`
	// Name of the person or organization who owns the portfolio.
	ProviderName string `pulumi:"providerName"`
	// Tags applied to the portfolio.
	Tags map[string]string `pulumi:"tags"`
}
