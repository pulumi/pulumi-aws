// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProductProvisioningArtifactParameters struct {
	// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
	Description *string `pulumi:"description"`
	// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
	DisableTemplateValidation *bool `pulumi:"disableTemplateValidation"`
	// Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
	Name *string `pulumi:"name"`
	// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
	TemplatePhysicalId *string `pulumi:"templatePhysicalId"`
	// Template source as URL of the CloudFormation template in Amazon S3.
	TemplateUrl *string `pulumi:"templateUrl"`
	// Type of provisioning artifact. Valid values: `CLOUD_FORMATION_TEMPLATE`, `MARKETPLACE_AMI`, `MARKETPLACE_CAR` (Marketplace Clusters and AWS Resources).
	Type *string `pulumi:"type"`
}

// ProductProvisioningArtifactParametersInput is an input type that accepts ProductProvisioningArtifactParametersArgs and ProductProvisioningArtifactParametersOutput values.
// You can construct a concrete instance of `ProductProvisioningArtifactParametersInput` via:
//
//          ProductProvisioningArtifactParametersArgs{...}
type ProductProvisioningArtifactParametersInput interface {
	pulumi.Input

	ToProductProvisioningArtifactParametersOutput() ProductProvisioningArtifactParametersOutput
	ToProductProvisioningArtifactParametersOutputWithContext(context.Context) ProductProvisioningArtifactParametersOutput
}

type ProductProvisioningArtifactParametersArgs struct {
	// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
	DisableTemplateValidation pulumi.BoolPtrInput `pulumi:"disableTemplateValidation"`
	// Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
	TemplatePhysicalId pulumi.StringPtrInput `pulumi:"templatePhysicalId"`
	// Template source as URL of the CloudFormation template in Amazon S3.
	TemplateUrl pulumi.StringPtrInput `pulumi:"templateUrl"`
	// Type of provisioning artifact. Valid values: `CLOUD_FORMATION_TEMPLATE`, `MARKETPLACE_AMI`, `MARKETPLACE_CAR` (Marketplace Clusters and AWS Resources).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProductProvisioningArtifactParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductProvisioningArtifactParameters)(nil)).Elem()
}

func (i ProductProvisioningArtifactParametersArgs) ToProductProvisioningArtifactParametersOutput() ProductProvisioningArtifactParametersOutput {
	return i.ToProductProvisioningArtifactParametersOutputWithContext(context.Background())
}

func (i ProductProvisioningArtifactParametersArgs) ToProductProvisioningArtifactParametersOutputWithContext(ctx context.Context) ProductProvisioningArtifactParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductProvisioningArtifactParametersOutput)
}

type ProductProvisioningArtifactParametersOutput struct{ *pulumi.OutputState }

func (ProductProvisioningArtifactParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductProvisioningArtifactParameters)(nil)).Elem()
}

func (o ProductProvisioningArtifactParametersOutput) ToProductProvisioningArtifactParametersOutput() ProductProvisioningArtifactParametersOutput {
	return o
}

func (o ProductProvisioningArtifactParametersOutput) ToProductProvisioningArtifactParametersOutputWithContext(ctx context.Context) ProductProvisioningArtifactParametersOutput {
	return o
}

// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
func (o ProductProvisioningArtifactParametersOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductProvisioningArtifactParameters) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
func (o ProductProvisioningArtifactParametersOutput) DisableTemplateValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProductProvisioningArtifactParameters) *bool { return v.DisableTemplateValidation }).(pulumi.BoolPtrOutput)
}

// Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
func (o ProductProvisioningArtifactParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductProvisioningArtifactParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
func (o ProductProvisioningArtifactParametersOutput) TemplatePhysicalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductProvisioningArtifactParameters) *string { return v.TemplatePhysicalId }).(pulumi.StringPtrOutput)
}

// Template source as URL of the CloudFormation template in Amazon S3.
func (o ProductProvisioningArtifactParametersOutput) TemplateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductProvisioningArtifactParameters) *string { return v.TemplateUrl }).(pulumi.StringPtrOutput)
}

// Type of provisioning artifact. Valid values: `CLOUD_FORMATION_TEMPLATE`, `MARKETPLACE_AMI`, `MARKETPLACE_CAR` (Marketplace Clusters and AWS Resources).
func (o ProductProvisioningArtifactParametersOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductProvisioningArtifactParameters) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProvisionedProductProvisioningParameter struct {
	// Parameter key.
	Key string `pulumi:"key"`
	// Whether to ignore `value` and keep the previous parameter value. Ignored when initially provisioning a product.
	UsePreviousValue *bool `pulumi:"usePreviousValue"`
	// Parameter value.
	Value *string `pulumi:"value"`
}

// ProvisionedProductProvisioningParameterInput is an input type that accepts ProvisionedProductProvisioningParameterArgs and ProvisionedProductProvisioningParameterOutput values.
// You can construct a concrete instance of `ProvisionedProductProvisioningParameterInput` via:
//
//          ProvisionedProductProvisioningParameterArgs{...}
type ProvisionedProductProvisioningParameterInput interface {
	pulumi.Input

	ToProvisionedProductProvisioningParameterOutput() ProvisionedProductProvisioningParameterOutput
	ToProvisionedProductProvisioningParameterOutputWithContext(context.Context) ProvisionedProductProvisioningParameterOutput
}

type ProvisionedProductProvisioningParameterArgs struct {
	// Parameter key.
	Key pulumi.StringInput `pulumi:"key"`
	// Whether to ignore `value` and keep the previous parameter value. Ignored when initially provisioning a product.
	UsePreviousValue pulumi.BoolPtrInput `pulumi:"usePreviousValue"`
	// Parameter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProvisionedProductProvisioningParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductProvisioningParameter)(nil)).Elem()
}

func (i ProvisionedProductProvisioningParameterArgs) ToProvisionedProductProvisioningParameterOutput() ProvisionedProductProvisioningParameterOutput {
	return i.ToProvisionedProductProvisioningParameterOutputWithContext(context.Background())
}

func (i ProvisionedProductProvisioningParameterArgs) ToProvisionedProductProvisioningParameterOutputWithContext(ctx context.Context) ProvisionedProductProvisioningParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductProvisioningParameterOutput)
}

// ProvisionedProductProvisioningParameterArrayInput is an input type that accepts ProvisionedProductProvisioningParameterArray and ProvisionedProductProvisioningParameterArrayOutput values.
// You can construct a concrete instance of `ProvisionedProductProvisioningParameterArrayInput` via:
//
//          ProvisionedProductProvisioningParameterArray{ ProvisionedProductProvisioningParameterArgs{...} }
type ProvisionedProductProvisioningParameterArrayInput interface {
	pulumi.Input

	ToProvisionedProductProvisioningParameterArrayOutput() ProvisionedProductProvisioningParameterArrayOutput
	ToProvisionedProductProvisioningParameterArrayOutputWithContext(context.Context) ProvisionedProductProvisioningParameterArrayOutput
}

type ProvisionedProductProvisioningParameterArray []ProvisionedProductProvisioningParameterInput

func (ProvisionedProductProvisioningParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisionedProductProvisioningParameter)(nil)).Elem()
}

func (i ProvisionedProductProvisioningParameterArray) ToProvisionedProductProvisioningParameterArrayOutput() ProvisionedProductProvisioningParameterArrayOutput {
	return i.ToProvisionedProductProvisioningParameterArrayOutputWithContext(context.Background())
}

func (i ProvisionedProductProvisioningParameterArray) ToProvisionedProductProvisioningParameterArrayOutputWithContext(ctx context.Context) ProvisionedProductProvisioningParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductProvisioningParameterArrayOutput)
}

type ProvisionedProductProvisioningParameterOutput struct{ *pulumi.OutputState }

func (ProvisionedProductProvisioningParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductProvisioningParameter)(nil)).Elem()
}

func (o ProvisionedProductProvisioningParameterOutput) ToProvisionedProductProvisioningParameterOutput() ProvisionedProductProvisioningParameterOutput {
	return o
}

func (o ProvisionedProductProvisioningParameterOutput) ToProvisionedProductProvisioningParameterOutputWithContext(ctx context.Context) ProvisionedProductProvisioningParameterOutput {
	return o
}

// Parameter key.
func (o ProvisionedProductProvisioningParameterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProvisionedProductProvisioningParameter) string { return v.Key }).(pulumi.StringOutput)
}

// Whether to ignore `value` and keep the previous parameter value. Ignored when initially provisioning a product.
func (o ProvisionedProductProvisioningParameterOutput) UsePreviousValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProvisionedProductProvisioningParameter) *bool { return v.UsePreviousValue }).(pulumi.BoolPtrOutput)
}

// Parameter value.
func (o ProvisionedProductProvisioningParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProvisionedProductProvisioningParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProvisionedProductProvisioningParameterArrayOutput struct{ *pulumi.OutputState }

func (ProvisionedProductProvisioningParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProvisionedProductProvisioningParameter)(nil)).Elem()
}

func (o ProvisionedProductProvisioningParameterArrayOutput) ToProvisionedProductProvisioningParameterArrayOutput() ProvisionedProductProvisioningParameterArrayOutput {
	return o
}

func (o ProvisionedProductProvisioningParameterArrayOutput) ToProvisionedProductProvisioningParameterArrayOutputWithContext(ctx context.Context) ProvisionedProductProvisioningParameterArrayOutput {
	return o
}

func (o ProvisionedProductProvisioningParameterArrayOutput) Index(i pulumi.IntInput) ProvisionedProductProvisioningParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProvisionedProductProvisioningParameter {
		return vs[0].([]ProvisionedProductProvisioningParameter)[vs[1].(int)]
	}).(ProvisionedProductProvisioningParameterOutput)
}

type ProvisionedProductStackSetProvisioningPreferences struct {
	// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
	Accounts []string `pulumi:"accounts"`
	// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both. The default value is 0 if no value is specified.
	FailureToleranceCount *int `pulumi:"failureToleranceCount"`
	// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both.
	FailureTolerancePercentage *int `pulumi:"failureTolerancePercentage"`
	// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `failureToleranceCount`. `maxConcurrencyCount` is at most one more than the `failureToleranceCount`. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyCount *int `pulumi:"maxConcurrencyCount"`
	// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyPercentage *int `pulumi:"maxConcurrencyPercentage"`
	// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all regions from the STACKSET constraint.
	Regions []string `pulumi:"regions"`
}

// ProvisionedProductStackSetProvisioningPreferencesInput is an input type that accepts ProvisionedProductStackSetProvisioningPreferencesArgs and ProvisionedProductStackSetProvisioningPreferencesOutput values.
// You can construct a concrete instance of `ProvisionedProductStackSetProvisioningPreferencesInput` via:
//
//          ProvisionedProductStackSetProvisioningPreferencesArgs{...}
type ProvisionedProductStackSetProvisioningPreferencesInput interface {
	pulumi.Input

	ToProvisionedProductStackSetProvisioningPreferencesOutput() ProvisionedProductStackSetProvisioningPreferencesOutput
	ToProvisionedProductStackSetProvisioningPreferencesOutputWithContext(context.Context) ProvisionedProductStackSetProvisioningPreferencesOutput
}

type ProvisionedProductStackSetProvisioningPreferencesArgs struct {
	// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
	Accounts pulumi.StringArrayInput `pulumi:"accounts"`
	// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both. The default value is 0 if no value is specified.
	FailureToleranceCount pulumi.IntPtrInput `pulumi:"failureToleranceCount"`
	// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both.
	FailureTolerancePercentage pulumi.IntPtrInput `pulumi:"failureTolerancePercentage"`
	// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `failureToleranceCount`. `maxConcurrencyCount` is at most one more than the `failureToleranceCount`. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyCount pulumi.IntPtrInput `pulumi:"maxConcurrencyCount"`
	// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
	MaxConcurrencyPercentage pulumi.IntPtrInput `pulumi:"maxConcurrencyPercentage"`
	// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all regions from the STACKSET constraint.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (ProvisionedProductStackSetProvisioningPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductStackSetProvisioningPreferences)(nil)).Elem()
}

func (i ProvisionedProductStackSetProvisioningPreferencesArgs) ToProvisionedProductStackSetProvisioningPreferencesOutput() ProvisionedProductStackSetProvisioningPreferencesOutput {
	return i.ToProvisionedProductStackSetProvisioningPreferencesOutputWithContext(context.Background())
}

func (i ProvisionedProductStackSetProvisioningPreferencesArgs) ToProvisionedProductStackSetProvisioningPreferencesOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductStackSetProvisioningPreferencesOutput)
}

func (i ProvisionedProductStackSetProvisioningPreferencesArgs) ToProvisionedProductStackSetProvisioningPreferencesPtrOutput() ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return i.ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(context.Background())
}

func (i ProvisionedProductStackSetProvisioningPreferencesArgs) ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductStackSetProvisioningPreferencesOutput).ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(ctx)
}

// ProvisionedProductStackSetProvisioningPreferencesPtrInput is an input type that accepts ProvisionedProductStackSetProvisioningPreferencesArgs, ProvisionedProductStackSetProvisioningPreferencesPtr and ProvisionedProductStackSetProvisioningPreferencesPtrOutput values.
// You can construct a concrete instance of `ProvisionedProductStackSetProvisioningPreferencesPtrInput` via:
//
//          ProvisionedProductStackSetProvisioningPreferencesArgs{...}
//
//  or:
//
//          nil
type ProvisionedProductStackSetProvisioningPreferencesPtrInput interface {
	pulumi.Input

	ToProvisionedProductStackSetProvisioningPreferencesPtrOutput() ProvisionedProductStackSetProvisioningPreferencesPtrOutput
	ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(context.Context) ProvisionedProductStackSetProvisioningPreferencesPtrOutput
}

type provisionedProductStackSetProvisioningPreferencesPtrType ProvisionedProductStackSetProvisioningPreferencesArgs

func ProvisionedProductStackSetProvisioningPreferencesPtr(v *ProvisionedProductStackSetProvisioningPreferencesArgs) ProvisionedProductStackSetProvisioningPreferencesPtrInput {
	return (*provisionedProductStackSetProvisioningPreferencesPtrType)(v)
}

func (*provisionedProductStackSetProvisioningPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedProductStackSetProvisioningPreferences)(nil)).Elem()
}

func (i *provisionedProductStackSetProvisioningPreferencesPtrType) ToProvisionedProductStackSetProvisioningPreferencesPtrOutput() ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return i.ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(context.Background())
}

func (i *provisionedProductStackSetProvisioningPreferencesPtrType) ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisionedProductStackSetProvisioningPreferencesPtrOutput)
}

type ProvisionedProductStackSetProvisioningPreferencesOutput struct{ *pulumi.OutputState }

func (ProvisionedProductStackSetProvisioningPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProductStackSetProvisioningPreferences)(nil)).Elem()
}

func (o ProvisionedProductStackSetProvisioningPreferencesOutput) ToProvisionedProductStackSetProvisioningPreferencesOutput() ProvisionedProductStackSetProvisioningPreferencesOutput {
	return o
}

func (o ProvisionedProductStackSetProvisioningPreferencesOutput) ToProvisionedProductStackSetProvisioningPreferencesOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesOutput {
	return o
}

func (o ProvisionedProductStackSetProvisioningPreferencesOutput) ToProvisionedProductStackSetProvisioningPreferencesPtrOutput() ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return o.ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(context.Background())
}

func (o ProvisionedProductStackSetProvisioningPreferencesOutput) ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisionedProductStackSetProvisioningPreferences) *ProvisionedProductStackSetProvisioningPreferences {
		return &v
	}).(ProvisionedProductStackSetProvisioningPreferencesPtrOutput)
}

// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProvisionedProductStackSetProvisioningPreferences) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both. The default value is 0 if no value is specified.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.FailureToleranceCount }).(pulumi.IntPtrOutput)
}

// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.FailureTolerancePercentage }).(pulumi.IntPtrOutput)
}

// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `failureToleranceCount`. `maxConcurrencyCount` is at most one more than the `failureToleranceCount`. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) MaxConcurrencyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.MaxConcurrencyCount }).(pulumi.IntPtrOutput)
}

// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) MaxConcurrencyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProvisionedProductStackSetProvisioningPreferences) *int { return v.MaxConcurrencyPercentage }).(pulumi.IntPtrOutput)
}

// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all regions from the STACKSET constraint.
func (o ProvisionedProductStackSetProvisioningPreferencesOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProvisionedProductStackSetProvisioningPreferences) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type ProvisionedProductStackSetProvisioningPreferencesPtrOutput struct{ *pulumi.OutputState }

func (ProvisionedProductStackSetProvisioningPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisionedProductStackSetProvisioningPreferences)(nil)).Elem()
}

func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) ToProvisionedProductStackSetProvisioningPreferencesPtrOutput() ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return o
}

func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) ToProvisionedProductStackSetProvisioningPreferencesPtrOutputWithContext(ctx context.Context) ProvisionedProductStackSetProvisioningPreferencesPtrOutput {
	return o
}

func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) Elem() ProvisionedProductStackSetProvisioningPreferencesOutput {
	return o.ApplyT(func(v *ProvisionedProductStackSetProvisioningPreferences) ProvisionedProductStackSetProvisioningPreferences {
		if v != nil {
			return *v
		}
		var ret ProvisionedProductStackSetProvisioningPreferences
		return ret
	}).(ProvisionedProductStackSetProvisioningPreferencesOutput)
}

// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProvisionedProductStackSetProvisioningPreferences) []string {
		if v == nil {
			return nil
		}
		return v.Accounts
	}).(pulumi.StringArrayOutput)
}

// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both. The default value is 0 if no value is specified.
func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedProductStackSetProvisioningPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureToleranceCount
	}).(pulumi.IntPtrOutput)
}

// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either `failureToleranceCount` or `failureTolerancePercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedProductStackSetProvisioningPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureTolerancePercentage
	}).(pulumi.IntPtrOutput)
}

// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `failureToleranceCount`. `maxConcurrencyCount` is at most one more than the `failureToleranceCount`. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) MaxConcurrencyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedProductStackSetProvisioningPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrencyCount
	}).(pulumi.IntPtrOutput)
}

// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either `maxConcurrencyCount` or `maxConcurrencyPercentage`, but not both.
func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) MaxConcurrencyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProvisionedProductStackSetProvisioningPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrencyPercentage
	}).(pulumi.IntPtrOutput)
}

// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the `awsServicecatalogProvisioningParameters` data source. If no values are specified, the default value is all regions from the STACKSET constraint.
func (o ProvisionedProductStackSetProvisioningPreferencesPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProvisionedProductStackSetProvisioningPreferences) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

type ServiceActionDefinition struct {
	// ARN of the role that performs the self-service actions on your behalf. For example, `arn:aws:iam::12345678910:role/ActionRole`. To reuse the provisioned product launch role, set to `LAUNCH_ROLE`.
	AssumeRole *string `pulumi:"assumeRole"`
	// Name of the SSM document. For example, `AWS-RestartEC2Instance`. If you are using a shared SSM document, you must provide the ARN instead of the name.
	Name string `pulumi:"name"`
	// List of parameters in JSON format. For example: `[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]` or `[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]`.
	Parameters *string `pulumi:"parameters"`
	// Service action definition type. Valid value is `SSM_AUTOMATION`. Default is `SSM_AUTOMATION`.
	Type *string `pulumi:"type"`
	// SSM document version. For example, `1`.
	Version string `pulumi:"version"`
}

// ServiceActionDefinitionInput is an input type that accepts ServiceActionDefinitionArgs and ServiceActionDefinitionOutput values.
// You can construct a concrete instance of `ServiceActionDefinitionInput` via:
//
//          ServiceActionDefinitionArgs{...}
type ServiceActionDefinitionInput interface {
	pulumi.Input

	ToServiceActionDefinitionOutput() ServiceActionDefinitionOutput
	ToServiceActionDefinitionOutputWithContext(context.Context) ServiceActionDefinitionOutput
}

type ServiceActionDefinitionArgs struct {
	// ARN of the role that performs the self-service actions on your behalf. For example, `arn:aws:iam::12345678910:role/ActionRole`. To reuse the provisioned product launch role, set to `LAUNCH_ROLE`.
	AssumeRole pulumi.StringPtrInput `pulumi:"assumeRole"`
	// Name of the SSM document. For example, `AWS-RestartEC2Instance`. If you are using a shared SSM document, you must provide the ARN instead of the name.
	Name pulumi.StringInput `pulumi:"name"`
	// List of parameters in JSON format. For example: `[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]` or `[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]`.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
	// Service action definition type. Valid value is `SSM_AUTOMATION`. Default is `SSM_AUTOMATION`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// SSM document version. For example, `1`.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ServiceActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceActionDefinition)(nil)).Elem()
}

func (i ServiceActionDefinitionArgs) ToServiceActionDefinitionOutput() ServiceActionDefinitionOutput {
	return i.ToServiceActionDefinitionOutputWithContext(context.Background())
}

func (i ServiceActionDefinitionArgs) ToServiceActionDefinitionOutputWithContext(ctx context.Context) ServiceActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceActionDefinitionOutput)
}

type ServiceActionDefinitionOutput struct{ *pulumi.OutputState }

func (ServiceActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceActionDefinition)(nil)).Elem()
}

func (o ServiceActionDefinitionOutput) ToServiceActionDefinitionOutput() ServiceActionDefinitionOutput {
	return o
}

func (o ServiceActionDefinitionOutput) ToServiceActionDefinitionOutputWithContext(ctx context.Context) ServiceActionDefinitionOutput {
	return o
}

// ARN of the role that performs the self-service actions on your behalf. For example, `arn:aws:iam::12345678910:role/ActionRole`. To reuse the provisioned product launch role, set to `LAUNCH_ROLE`.
func (o ServiceActionDefinitionOutput) AssumeRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceActionDefinition) *string { return v.AssumeRole }).(pulumi.StringPtrOutput)
}

// Name of the SSM document. For example, `AWS-RestartEC2Instance`. If you are using a shared SSM document, you must provide the ARN instead of the name.
func (o ServiceActionDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceActionDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// List of parameters in JSON format. For example: `[{\"Name\":\"InstanceId\",\"Type\":\"TARGET\"}]` or `[{\"Name\":\"InstanceId\",\"Type\":\"TEXT_VALUE\"}]`.
func (o ServiceActionDefinitionOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceActionDefinition) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

// Service action definition type. Valid value is `SSM_AUTOMATION`. Default is `SSM_AUTOMATION`.
func (o ServiceActionDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceActionDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// SSM document version. For example, `1`.
func (o ServiceActionDefinitionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceActionDefinition) string { return v.Version }).(pulumi.StringOutput)
}

type GetLaunchPathsSummary struct {
	// Block for constraints on the portfolio-product relationship. See details below.
	ConstraintSummaries []GetLaunchPathsSummaryConstraintSummary `pulumi:"constraintSummaries"`
	// Name of the portfolio to which the path was assigned.
	Name string `pulumi:"name"`
	// Identifier of the product path.
	PathId string `pulumi:"pathId"`
	// Tags associated with this product path.
	Tags map[string]string `pulumi:"tags"`
}

type GetLaunchPathsSummaryOutput struct{ *pulumi.OutputState }

func (GetLaunchPathsSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchPathsSummary)(nil)).Elem()
}

func (o GetLaunchPathsSummaryOutput) ToGetLaunchPathsSummaryOutput() GetLaunchPathsSummaryOutput {
	return o
}

func (o GetLaunchPathsSummaryOutput) ToGetLaunchPathsSummaryOutputWithContext(ctx context.Context) GetLaunchPathsSummaryOutput {
	return o
}

// Block for constraints on the portfolio-product relationship. See details below.
func (o GetLaunchPathsSummaryOutput) ConstraintSummaries() GetLaunchPathsSummaryConstraintSummaryArrayOutput {
	return o.ApplyT(func(v GetLaunchPathsSummary) []GetLaunchPathsSummaryConstraintSummary { return v.ConstraintSummaries }).(GetLaunchPathsSummaryConstraintSummaryArrayOutput)
}

// Name of the portfolio to which the path was assigned.
func (o GetLaunchPathsSummaryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchPathsSummary) string { return v.Name }).(pulumi.StringOutput)
}

// Identifier of the product path.
func (o GetLaunchPathsSummaryOutput) PathId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchPathsSummary) string { return v.PathId }).(pulumi.StringOutput)
}

// Tags associated with this product path.
func (o GetLaunchPathsSummaryOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLaunchPathsSummary) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type GetLaunchPathsSummaryArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchPathsSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchPathsSummary)(nil)).Elem()
}

func (o GetLaunchPathsSummaryArrayOutput) ToGetLaunchPathsSummaryArrayOutput() GetLaunchPathsSummaryArrayOutput {
	return o
}

func (o GetLaunchPathsSummaryArrayOutput) ToGetLaunchPathsSummaryArrayOutputWithContext(ctx context.Context) GetLaunchPathsSummaryArrayOutput {
	return o
}

func (o GetLaunchPathsSummaryArrayOutput) Index(i pulumi.IntInput) GetLaunchPathsSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchPathsSummary {
		return vs[0].([]GetLaunchPathsSummary)[vs[1].(int)]
	}).(GetLaunchPathsSummaryOutput)
}

type GetLaunchPathsSummaryConstraintSummary struct {
	// Description of the constraint.
	Description string `pulumi:"description"`
	// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
	Type string `pulumi:"type"`
}

type GetLaunchPathsSummaryConstraintSummaryOutput struct{ *pulumi.OutputState }

func (GetLaunchPathsSummaryConstraintSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchPathsSummaryConstraintSummary)(nil)).Elem()
}

func (o GetLaunchPathsSummaryConstraintSummaryOutput) ToGetLaunchPathsSummaryConstraintSummaryOutput() GetLaunchPathsSummaryConstraintSummaryOutput {
	return o
}

func (o GetLaunchPathsSummaryConstraintSummaryOutput) ToGetLaunchPathsSummaryConstraintSummaryOutputWithContext(ctx context.Context) GetLaunchPathsSummaryConstraintSummaryOutput {
	return o
}

// Description of the constraint.
func (o GetLaunchPathsSummaryConstraintSummaryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchPathsSummaryConstraintSummary) string { return v.Description }).(pulumi.StringOutput)
}

// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
func (o GetLaunchPathsSummaryConstraintSummaryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchPathsSummaryConstraintSummary) string { return v.Type }).(pulumi.StringOutput)
}

type GetLaunchPathsSummaryConstraintSummaryArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchPathsSummaryConstraintSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchPathsSummaryConstraintSummary)(nil)).Elem()
}

func (o GetLaunchPathsSummaryConstraintSummaryArrayOutput) ToGetLaunchPathsSummaryConstraintSummaryArrayOutput() GetLaunchPathsSummaryConstraintSummaryArrayOutput {
	return o
}

func (o GetLaunchPathsSummaryConstraintSummaryArrayOutput) ToGetLaunchPathsSummaryConstraintSummaryArrayOutputWithContext(ctx context.Context) GetLaunchPathsSummaryConstraintSummaryArrayOutput {
	return o
}

func (o GetLaunchPathsSummaryConstraintSummaryArrayOutput) Index(i pulumi.IntInput) GetLaunchPathsSummaryConstraintSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchPathsSummaryConstraintSummary {
		return vs[0].([]GetLaunchPathsSummaryConstraintSummary)[vs[1].(int)]
	}).(GetLaunchPathsSummaryConstraintSummaryOutput)
}

type GetPortfolioConstraintsDetail struct {
	// Identifier of the constraint.
	ConstraintId string `pulumi:"constraintId"`
	// Description of the constraint.
	Description string `pulumi:"description"`
	Owner       string `pulumi:"owner"`
	// Portfolio identifier.
	PortfolioId string `pulumi:"portfolioId"`
	// Product identifier.
	ProductId string `pulumi:"productId"`
	// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
	Type string `pulumi:"type"`
}

type GetPortfolioConstraintsDetailOutput struct{ *pulumi.OutputState }

func (GetPortfolioConstraintsDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortfolioConstraintsDetail)(nil)).Elem()
}

func (o GetPortfolioConstraintsDetailOutput) ToGetPortfolioConstraintsDetailOutput() GetPortfolioConstraintsDetailOutput {
	return o
}

func (o GetPortfolioConstraintsDetailOutput) ToGetPortfolioConstraintsDetailOutputWithContext(ctx context.Context) GetPortfolioConstraintsDetailOutput {
	return o
}

// Identifier of the constraint.
func (o GetPortfolioConstraintsDetailOutput) ConstraintId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortfolioConstraintsDetail) string { return v.ConstraintId }).(pulumi.StringOutput)
}

// Description of the constraint.
func (o GetPortfolioConstraintsDetailOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortfolioConstraintsDetail) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetPortfolioConstraintsDetailOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortfolioConstraintsDetail) string { return v.Owner }).(pulumi.StringOutput)
}

// Portfolio identifier.
func (o GetPortfolioConstraintsDetailOutput) PortfolioId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortfolioConstraintsDetail) string { return v.PortfolioId }).(pulumi.StringOutput)
}

// Product identifier.
func (o GetPortfolioConstraintsDetailOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortfolioConstraintsDetail) string { return v.ProductId }).(pulumi.StringOutput)
}

// Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.
func (o GetPortfolioConstraintsDetailOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortfolioConstraintsDetail) string { return v.Type }).(pulumi.StringOutput)
}

type GetPortfolioConstraintsDetailArrayOutput struct{ *pulumi.OutputState }

func (GetPortfolioConstraintsDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPortfolioConstraintsDetail)(nil)).Elem()
}

func (o GetPortfolioConstraintsDetailArrayOutput) ToGetPortfolioConstraintsDetailArrayOutput() GetPortfolioConstraintsDetailArrayOutput {
	return o
}

func (o GetPortfolioConstraintsDetailArrayOutput) ToGetPortfolioConstraintsDetailArrayOutputWithContext(ctx context.Context) GetPortfolioConstraintsDetailArrayOutput {
	return o
}

func (o GetPortfolioConstraintsDetailArrayOutput) Index(i pulumi.IntInput) GetPortfolioConstraintsDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPortfolioConstraintsDetail {
		return vs[0].([]GetPortfolioConstraintsDetail)[vs[1].(int)]
	}).(GetPortfolioConstraintsDetailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProductProvisioningArtifactParametersInput)(nil)).Elem(), ProductProvisioningArtifactParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedProductProvisioningParameterInput)(nil)).Elem(), ProvisionedProductProvisioningParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedProductProvisioningParameterArrayInput)(nil)).Elem(), ProvisionedProductProvisioningParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedProductStackSetProvisioningPreferencesInput)(nil)).Elem(), ProvisionedProductStackSetProvisioningPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisionedProductStackSetProvisioningPreferencesPtrInput)(nil)).Elem(), ProvisionedProductStackSetProvisioningPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceActionDefinitionInput)(nil)).Elem(), ServiceActionDefinitionArgs{})
	pulumi.RegisterOutputType(ProductProvisioningArtifactParametersOutput{})
	pulumi.RegisterOutputType(ProvisionedProductProvisioningParameterOutput{})
	pulumi.RegisterOutputType(ProvisionedProductProvisioningParameterArrayOutput{})
	pulumi.RegisterOutputType(ProvisionedProductStackSetProvisioningPreferencesOutput{})
	pulumi.RegisterOutputType(ProvisionedProductStackSetProvisioningPreferencesPtrOutput{})
	pulumi.RegisterOutputType(ServiceActionDefinitionOutput{})
	pulumi.RegisterOutputType(GetLaunchPathsSummaryOutput{})
	pulumi.RegisterOutputType(GetLaunchPathsSummaryArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchPathsSummaryConstraintSummaryOutput{})
	pulumi.RegisterOutputType(GetLaunchPathsSummaryConstraintSummaryArrayOutput{})
	pulumi.RegisterOutputType(GetPortfolioConstraintsDetailOutput{})
	pulumi.RegisterOutputType(GetPortfolioConstraintsDetailArrayOutput{})
}
