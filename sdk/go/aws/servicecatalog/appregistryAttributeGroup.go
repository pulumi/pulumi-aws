// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Service Catalog AppRegistry Attribute Group.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/servicecatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"app":   "exampleapp",
//				"group": "examplegroup",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = servicecatalog.NewAppregistryAttributeGroup(ctx, "example", &servicecatalog.AppregistryAttributeGroupArgs{
//				Name:        pulumi.String("example"),
//				Description: pulumi.String("example description"),
//				Attributes:  pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Service Catalog AppRegistry Attribute Group using the `id`. For example:
//
// ```sh
// $ pulumi import aws:servicecatalog/appregistryAttributeGroup:AppregistryAttributeGroup example 1234567890abcfedhijk09876s
// ```
type AppregistryAttributeGroup struct {
	pulumi.CustomResourceState

	// ARN of the Attribute Group.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A JSON string of nested key-value pairs that represents the attributes of the group.
	//
	// The following arguments are optional:
	Attributes pulumi.StringOutput `pulumi:"attributes"`
	// Description of the Attribute Group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the Attribute Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// A map of tags assigned to the Attribute Group. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewAppregistryAttributeGroup registers a new resource with the given unique name, arguments, and options.
func NewAppregistryAttributeGroup(ctx *pulumi.Context,
	name string, args *AppregistryAttributeGroupArgs, opts ...pulumi.ResourceOption) (*AppregistryAttributeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Attributes == nil {
		return nil, errors.New("invalid value for required argument 'Attributes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppregistryAttributeGroup
	err := ctx.RegisterResource("aws:servicecatalog/appregistryAttributeGroup:AppregistryAttributeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppregistryAttributeGroup gets an existing AppregistryAttributeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppregistryAttributeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppregistryAttributeGroupState, opts ...pulumi.ResourceOption) (*AppregistryAttributeGroup, error) {
	var resource AppregistryAttributeGroup
	err := ctx.ReadResource("aws:servicecatalog/appregistryAttributeGroup:AppregistryAttributeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppregistryAttributeGroup resources.
type appregistryAttributeGroupState struct {
	// ARN of the Attribute Group.
	Arn *string `pulumi:"arn"`
	// A JSON string of nested key-value pairs that represents the attributes of the group.
	//
	// The following arguments are optional:
	Attributes *string `pulumi:"attributes"`
	// Description of the Attribute Group.
	Description *string `pulumi:"description"`
	// Name of the Attribute Group.
	Name *string `pulumi:"name"`
	// A map of tags assigned to the Attribute Group. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type AppregistryAttributeGroupState struct {
	// ARN of the Attribute Group.
	Arn pulumi.StringPtrInput
	// A JSON string of nested key-value pairs that represents the attributes of the group.
	//
	// The following arguments are optional:
	Attributes pulumi.StringPtrInput
	// Description of the Attribute Group.
	Description pulumi.StringPtrInput
	// Name of the Attribute Group.
	Name pulumi.StringPtrInput
	// A map of tags assigned to the Attribute Group. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (AppregistryAttributeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*appregistryAttributeGroupState)(nil)).Elem()
}

type appregistryAttributeGroupArgs struct {
	// A JSON string of nested key-value pairs that represents the attributes of the group.
	//
	// The following arguments are optional:
	Attributes string `pulumi:"attributes"`
	// Description of the Attribute Group.
	Description *string `pulumi:"description"`
	// Name of the Attribute Group.
	Name *string `pulumi:"name"`
	// A map of tags assigned to the Attribute Group. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AppregistryAttributeGroup resource.
type AppregistryAttributeGroupArgs struct {
	// A JSON string of nested key-value pairs that represents the attributes of the group.
	//
	// The following arguments are optional:
	Attributes pulumi.StringInput
	// Description of the Attribute Group.
	Description pulumi.StringPtrInput
	// Name of the Attribute Group.
	Name pulumi.StringPtrInput
	// A map of tags assigned to the Attribute Group. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (AppregistryAttributeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appregistryAttributeGroupArgs)(nil)).Elem()
}

type AppregistryAttributeGroupInput interface {
	pulumi.Input

	ToAppregistryAttributeGroupOutput() AppregistryAttributeGroupOutput
	ToAppregistryAttributeGroupOutputWithContext(ctx context.Context) AppregistryAttributeGroupOutput
}

func (*AppregistryAttributeGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AppregistryAttributeGroup)(nil)).Elem()
}

func (i *AppregistryAttributeGroup) ToAppregistryAttributeGroupOutput() AppregistryAttributeGroupOutput {
	return i.ToAppregistryAttributeGroupOutputWithContext(context.Background())
}

func (i *AppregistryAttributeGroup) ToAppregistryAttributeGroupOutputWithContext(ctx context.Context) AppregistryAttributeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppregistryAttributeGroupOutput)
}

// AppregistryAttributeGroupArrayInput is an input type that accepts AppregistryAttributeGroupArray and AppregistryAttributeGroupArrayOutput values.
// You can construct a concrete instance of `AppregistryAttributeGroupArrayInput` via:
//
//	AppregistryAttributeGroupArray{ AppregistryAttributeGroupArgs{...} }
type AppregistryAttributeGroupArrayInput interface {
	pulumi.Input

	ToAppregistryAttributeGroupArrayOutput() AppregistryAttributeGroupArrayOutput
	ToAppregistryAttributeGroupArrayOutputWithContext(context.Context) AppregistryAttributeGroupArrayOutput
}

type AppregistryAttributeGroupArray []AppregistryAttributeGroupInput

func (AppregistryAttributeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppregistryAttributeGroup)(nil)).Elem()
}

func (i AppregistryAttributeGroupArray) ToAppregistryAttributeGroupArrayOutput() AppregistryAttributeGroupArrayOutput {
	return i.ToAppregistryAttributeGroupArrayOutputWithContext(context.Background())
}

func (i AppregistryAttributeGroupArray) ToAppregistryAttributeGroupArrayOutputWithContext(ctx context.Context) AppregistryAttributeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppregistryAttributeGroupArrayOutput)
}

// AppregistryAttributeGroupMapInput is an input type that accepts AppregistryAttributeGroupMap and AppregistryAttributeGroupMapOutput values.
// You can construct a concrete instance of `AppregistryAttributeGroupMapInput` via:
//
//	AppregistryAttributeGroupMap{ "key": AppregistryAttributeGroupArgs{...} }
type AppregistryAttributeGroupMapInput interface {
	pulumi.Input

	ToAppregistryAttributeGroupMapOutput() AppregistryAttributeGroupMapOutput
	ToAppregistryAttributeGroupMapOutputWithContext(context.Context) AppregistryAttributeGroupMapOutput
}

type AppregistryAttributeGroupMap map[string]AppregistryAttributeGroupInput

func (AppregistryAttributeGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppregistryAttributeGroup)(nil)).Elem()
}

func (i AppregistryAttributeGroupMap) ToAppregistryAttributeGroupMapOutput() AppregistryAttributeGroupMapOutput {
	return i.ToAppregistryAttributeGroupMapOutputWithContext(context.Background())
}

func (i AppregistryAttributeGroupMap) ToAppregistryAttributeGroupMapOutputWithContext(ctx context.Context) AppregistryAttributeGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppregistryAttributeGroupMapOutput)
}

type AppregistryAttributeGroupOutput struct{ *pulumi.OutputState }

func (AppregistryAttributeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppregistryAttributeGroup)(nil)).Elem()
}

func (o AppregistryAttributeGroupOutput) ToAppregistryAttributeGroupOutput() AppregistryAttributeGroupOutput {
	return o
}

func (o AppregistryAttributeGroupOutput) ToAppregistryAttributeGroupOutputWithContext(ctx context.Context) AppregistryAttributeGroupOutput {
	return o
}

// ARN of the Attribute Group.
func (o AppregistryAttributeGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A JSON string of nested key-value pairs that represents the attributes of the group.
//
// The following arguments are optional:
func (o AppregistryAttributeGroupOutput) Attributes() pulumi.StringOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroup) pulumi.StringOutput { return v.Attributes }).(pulumi.StringOutput)
}

// Description of the Attribute Group.
func (o AppregistryAttributeGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the Attribute Group.
func (o AppregistryAttributeGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A map of tags assigned to the Attribute Group. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AppregistryAttributeGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o AppregistryAttributeGroupOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroup) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type AppregistryAttributeGroupArrayOutput struct{ *pulumi.OutputState }

func (AppregistryAttributeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppregistryAttributeGroup)(nil)).Elem()
}

func (o AppregistryAttributeGroupArrayOutput) ToAppregistryAttributeGroupArrayOutput() AppregistryAttributeGroupArrayOutput {
	return o
}

func (o AppregistryAttributeGroupArrayOutput) ToAppregistryAttributeGroupArrayOutputWithContext(ctx context.Context) AppregistryAttributeGroupArrayOutput {
	return o
}

func (o AppregistryAttributeGroupArrayOutput) Index(i pulumi.IntInput) AppregistryAttributeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppregistryAttributeGroup {
		return vs[0].([]*AppregistryAttributeGroup)[vs[1].(int)]
	}).(AppregistryAttributeGroupOutput)
}

type AppregistryAttributeGroupMapOutput struct{ *pulumi.OutputState }

func (AppregistryAttributeGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppregistryAttributeGroup)(nil)).Elem()
}

func (o AppregistryAttributeGroupMapOutput) ToAppregistryAttributeGroupMapOutput() AppregistryAttributeGroupMapOutput {
	return o
}

func (o AppregistryAttributeGroupMapOutput) ToAppregistryAttributeGroupMapOutputWithContext(ctx context.Context) AppregistryAttributeGroupMapOutput {
	return o
}

func (o AppregistryAttributeGroupMapOutput) MapIndex(k pulumi.StringInput) AppregistryAttributeGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppregistryAttributeGroup {
		return vs[0].(map[string]*AppregistryAttributeGroup)[vs[1].(string)]
	}).(AppregistryAttributeGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppregistryAttributeGroupInput)(nil)).Elem(), &AppregistryAttributeGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppregistryAttributeGroupArrayInput)(nil)).Elem(), AppregistryAttributeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppregistryAttributeGroupMapInput)(nil)).Elem(), AppregistryAttributeGroupMap{})
	pulumi.RegisterOutputType(AppregistryAttributeGroupOutput{})
	pulumi.RegisterOutputType(AppregistryAttributeGroupArrayOutput{})
	pulumi.RegisterOutputType(AppregistryAttributeGroupMapOutput{})
}
