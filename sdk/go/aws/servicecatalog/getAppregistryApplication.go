// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Service Catalog AppRegistry Application.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/servicecatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := servicecatalog.LookupAppregistryApplication(ctx, &servicecatalog.LookupAppregistryApplicationArgs{
//				Id: "application-1234",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAppregistryApplication(ctx *pulumi.Context, args *LookupAppregistryApplicationArgs, opts ...pulumi.InvokeOption) (*LookupAppregistryApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAppregistryApplicationResult
	err := ctx.Invoke("aws:servicecatalog/getAppregistryApplication:getAppregistryApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppregistryApplication.
type LookupAppregistryApplicationArgs struct {
	// Application identifier.
	Id string `pulumi:"id"`
}

// A collection of values returned by getAppregistryApplication.
type LookupAppregistryApplicationResult struct {
	// A map with a single tag key-value pair used to associate resources with the application.
	ApplicationTag map[string]string `pulumi:"applicationTag"`
	// ARN (Amazon Resource Name) of the application.
	Arn string `pulumi:"arn"`
	// Description of the application.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// Name of the application.
	Name string `pulumi:"name"`
	// A map of tags assigned to the Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

func LookupAppregistryApplicationOutput(ctx *pulumi.Context, args LookupAppregistryApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupAppregistryApplicationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAppregistryApplicationResultOutput, error) {
			args := v.(LookupAppregistryApplicationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:servicecatalog/getAppregistryApplication:getAppregistryApplication", args, LookupAppregistryApplicationResultOutput{}, options).(LookupAppregistryApplicationResultOutput), nil
		}).(LookupAppregistryApplicationResultOutput)
}

// A collection of arguments for invoking getAppregistryApplication.
type LookupAppregistryApplicationOutputArgs struct {
	// Application identifier.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAppregistryApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppregistryApplicationArgs)(nil)).Elem()
}

// A collection of values returned by getAppregistryApplication.
type LookupAppregistryApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupAppregistryApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppregistryApplicationResult)(nil)).Elem()
}

func (o LookupAppregistryApplicationResultOutput) ToLookupAppregistryApplicationResultOutput() LookupAppregistryApplicationResultOutput {
	return o
}

func (o LookupAppregistryApplicationResultOutput) ToLookupAppregistryApplicationResultOutputWithContext(ctx context.Context) LookupAppregistryApplicationResultOutput {
	return o
}

// A map with a single tag key-value pair used to associate resources with the application.
func (o LookupAppregistryApplicationResultOutput) ApplicationTag() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAppregistryApplicationResult) map[string]string { return v.ApplicationTag }).(pulumi.StringMapOutput)
}

// ARN (Amazon Resource Name) of the application.
func (o LookupAppregistryApplicationResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppregistryApplicationResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Description of the application.
func (o LookupAppregistryApplicationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppregistryApplicationResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupAppregistryApplicationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppregistryApplicationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the application.
func (o LookupAppregistryApplicationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppregistryApplicationResult) string { return v.Name }).(pulumi.StringOutput)
}

// A map of tags assigned to the Application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o LookupAppregistryApplicationResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAppregistryApplicationResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppregistryApplicationResultOutput{})
}
