// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Service Catalog Budget Resource Association.
//
// > **Tip:** A "resource" is either a Service Catalog portfolio or product.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/servicecatalog"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := servicecatalog.NewBudgetResourceApplication(ctx, "example", &servicecatalog.BudgetResourceApplicationArgs{
// 			BudgetName: pulumi.String("budget-pjtvyakdlyo3m"),
// 			ResourceId: pulumi.String("prod-dnigbtea24ste"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_servicecatalog_budget_resource_association` can be imported using the budget name and resource ID, e.g.
//
// ```sh
//  $ pulumi import aws:servicecatalog/budgetResourceApplication:BudgetResourceApplication example budget-pjtvyakdlyo3m:prod-dnigbtea24ste
// ```
type BudgetResourceApplication struct {
	pulumi.CustomResourceState

	// Budget name.
	BudgetName pulumi.StringOutput `pulumi:"budgetName"`
	// Resource identifier.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
}

// NewBudgetResourceApplication registers a new resource with the given unique name, arguments, and options.
func NewBudgetResourceApplication(ctx *pulumi.Context,
	name string, args *BudgetResourceApplicationArgs, opts ...pulumi.ResourceOption) (*BudgetResourceApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BudgetName == nil {
		return nil, errors.New("invalid value for required argument 'BudgetName'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	var resource BudgetResourceApplication
	err := ctx.RegisterResource("aws:servicecatalog/budgetResourceApplication:BudgetResourceApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBudgetResourceApplication gets an existing BudgetResourceApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBudgetResourceApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BudgetResourceApplicationState, opts ...pulumi.ResourceOption) (*BudgetResourceApplication, error) {
	var resource BudgetResourceApplication
	err := ctx.ReadResource("aws:servicecatalog/budgetResourceApplication:BudgetResourceApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BudgetResourceApplication resources.
type budgetResourceApplicationState struct {
	// Budget name.
	BudgetName *string `pulumi:"budgetName"`
	// Resource identifier.
	ResourceId *string `pulumi:"resourceId"`
}

type BudgetResourceApplicationState struct {
	// Budget name.
	BudgetName pulumi.StringPtrInput
	// Resource identifier.
	ResourceId pulumi.StringPtrInput
}

func (BudgetResourceApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetResourceApplicationState)(nil)).Elem()
}

type budgetResourceApplicationArgs struct {
	// Budget name.
	BudgetName string `pulumi:"budgetName"`
	// Resource identifier.
	ResourceId string `pulumi:"resourceId"`
}

// The set of arguments for constructing a BudgetResourceApplication resource.
type BudgetResourceApplicationArgs struct {
	// Budget name.
	BudgetName pulumi.StringInput
	// Resource identifier.
	ResourceId pulumi.StringInput
}

func (BudgetResourceApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*budgetResourceApplicationArgs)(nil)).Elem()
}

type BudgetResourceApplicationInput interface {
	pulumi.Input

	ToBudgetResourceApplicationOutput() BudgetResourceApplicationOutput
	ToBudgetResourceApplicationOutputWithContext(ctx context.Context) BudgetResourceApplicationOutput
}

func (*BudgetResourceApplication) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceApplication)(nil))
}

func (i *BudgetResourceApplication) ToBudgetResourceApplicationOutput() BudgetResourceApplicationOutput {
	return i.ToBudgetResourceApplicationOutputWithContext(context.Background())
}

func (i *BudgetResourceApplication) ToBudgetResourceApplicationOutputWithContext(ctx context.Context) BudgetResourceApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceApplicationOutput)
}

func (i *BudgetResourceApplication) ToBudgetResourceApplicationPtrOutput() BudgetResourceApplicationPtrOutput {
	return i.ToBudgetResourceApplicationPtrOutputWithContext(context.Background())
}

func (i *BudgetResourceApplication) ToBudgetResourceApplicationPtrOutputWithContext(ctx context.Context) BudgetResourceApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceApplicationPtrOutput)
}

type BudgetResourceApplicationPtrInput interface {
	pulumi.Input

	ToBudgetResourceApplicationPtrOutput() BudgetResourceApplicationPtrOutput
	ToBudgetResourceApplicationPtrOutputWithContext(ctx context.Context) BudgetResourceApplicationPtrOutput
}

type budgetResourceApplicationPtrType BudgetResourceApplicationArgs

func (*budgetResourceApplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetResourceApplication)(nil))
}

func (i *budgetResourceApplicationPtrType) ToBudgetResourceApplicationPtrOutput() BudgetResourceApplicationPtrOutput {
	return i.ToBudgetResourceApplicationPtrOutputWithContext(context.Background())
}

func (i *budgetResourceApplicationPtrType) ToBudgetResourceApplicationPtrOutputWithContext(ctx context.Context) BudgetResourceApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceApplicationPtrOutput)
}

// BudgetResourceApplicationArrayInput is an input type that accepts BudgetResourceApplicationArray and BudgetResourceApplicationArrayOutput values.
// You can construct a concrete instance of `BudgetResourceApplicationArrayInput` via:
//
//          BudgetResourceApplicationArray{ BudgetResourceApplicationArgs{...} }
type BudgetResourceApplicationArrayInput interface {
	pulumi.Input

	ToBudgetResourceApplicationArrayOutput() BudgetResourceApplicationArrayOutput
	ToBudgetResourceApplicationArrayOutputWithContext(context.Context) BudgetResourceApplicationArrayOutput
}

type BudgetResourceApplicationArray []BudgetResourceApplicationInput

func (BudgetResourceApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*BudgetResourceApplication)(nil))
}

func (i BudgetResourceApplicationArray) ToBudgetResourceApplicationArrayOutput() BudgetResourceApplicationArrayOutput {
	return i.ToBudgetResourceApplicationArrayOutputWithContext(context.Background())
}

func (i BudgetResourceApplicationArray) ToBudgetResourceApplicationArrayOutputWithContext(ctx context.Context) BudgetResourceApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceApplicationArrayOutput)
}

// BudgetResourceApplicationMapInput is an input type that accepts BudgetResourceApplicationMap and BudgetResourceApplicationMapOutput values.
// You can construct a concrete instance of `BudgetResourceApplicationMapInput` via:
//
//          BudgetResourceApplicationMap{ "key": BudgetResourceApplicationArgs{...} }
type BudgetResourceApplicationMapInput interface {
	pulumi.Input

	ToBudgetResourceApplicationMapOutput() BudgetResourceApplicationMapOutput
	ToBudgetResourceApplicationMapOutputWithContext(context.Context) BudgetResourceApplicationMapOutput
}

type BudgetResourceApplicationMap map[string]BudgetResourceApplicationInput

func (BudgetResourceApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*BudgetResourceApplication)(nil))
}

func (i BudgetResourceApplicationMap) ToBudgetResourceApplicationMapOutput() BudgetResourceApplicationMapOutput {
	return i.ToBudgetResourceApplicationMapOutputWithContext(context.Background())
}

func (i BudgetResourceApplicationMap) ToBudgetResourceApplicationMapOutputWithContext(ctx context.Context) BudgetResourceApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BudgetResourceApplicationMapOutput)
}

type BudgetResourceApplicationOutput struct {
	*pulumi.OutputState
}

func (BudgetResourceApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BudgetResourceApplication)(nil))
}

func (o BudgetResourceApplicationOutput) ToBudgetResourceApplicationOutput() BudgetResourceApplicationOutput {
	return o
}

func (o BudgetResourceApplicationOutput) ToBudgetResourceApplicationOutputWithContext(ctx context.Context) BudgetResourceApplicationOutput {
	return o
}

func (o BudgetResourceApplicationOutput) ToBudgetResourceApplicationPtrOutput() BudgetResourceApplicationPtrOutput {
	return o.ToBudgetResourceApplicationPtrOutputWithContext(context.Background())
}

func (o BudgetResourceApplicationOutput) ToBudgetResourceApplicationPtrOutputWithContext(ctx context.Context) BudgetResourceApplicationPtrOutput {
	return o.ApplyT(func(v BudgetResourceApplication) *BudgetResourceApplication {
		return &v
	}).(BudgetResourceApplicationPtrOutput)
}

type BudgetResourceApplicationPtrOutput struct {
	*pulumi.OutputState
}

func (BudgetResourceApplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BudgetResourceApplication)(nil))
}

func (o BudgetResourceApplicationPtrOutput) ToBudgetResourceApplicationPtrOutput() BudgetResourceApplicationPtrOutput {
	return o
}

func (o BudgetResourceApplicationPtrOutput) ToBudgetResourceApplicationPtrOutputWithContext(ctx context.Context) BudgetResourceApplicationPtrOutput {
	return o
}

type BudgetResourceApplicationArrayOutput struct{ *pulumi.OutputState }

func (BudgetResourceApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BudgetResourceApplication)(nil))
}

func (o BudgetResourceApplicationArrayOutput) ToBudgetResourceApplicationArrayOutput() BudgetResourceApplicationArrayOutput {
	return o
}

func (o BudgetResourceApplicationArrayOutput) ToBudgetResourceApplicationArrayOutputWithContext(ctx context.Context) BudgetResourceApplicationArrayOutput {
	return o
}

func (o BudgetResourceApplicationArrayOutput) Index(i pulumi.IntInput) BudgetResourceApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BudgetResourceApplication {
		return vs[0].([]BudgetResourceApplication)[vs[1].(int)]
	}).(BudgetResourceApplicationOutput)
}

type BudgetResourceApplicationMapOutput struct{ *pulumi.OutputState }

func (BudgetResourceApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BudgetResourceApplication)(nil))
}

func (o BudgetResourceApplicationMapOutput) ToBudgetResourceApplicationMapOutput() BudgetResourceApplicationMapOutput {
	return o
}

func (o BudgetResourceApplicationMapOutput) ToBudgetResourceApplicationMapOutputWithContext(ctx context.Context) BudgetResourceApplicationMapOutput {
	return o
}

func (o BudgetResourceApplicationMapOutput) MapIndex(k pulumi.StringInput) BudgetResourceApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BudgetResourceApplication {
		return vs[0].(map[string]BudgetResourceApplication)[vs[1].(string)]
	}).(BudgetResourceApplicationOutput)
}

func init() {
	pulumi.RegisterOutputType(BudgetResourceApplicationOutput{})
	pulumi.RegisterOutputType(BudgetResourceApplicationPtrOutput{})
	pulumi.RegisterOutputType(BudgetResourceApplicationArrayOutput{})
	pulumi.RegisterOutputType(BudgetResourceApplicationMapOutput{})
}
