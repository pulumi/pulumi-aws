// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Service Catalog AppRegistry Attribute Group Association.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/servicecatalog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := servicecatalog.NewAppregistryApplication(ctx, "example", &servicecatalog.AppregistryApplicationArgs{
//				Name: pulumi.String("example-app"),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"app":   "exampleapp",
//				"group": "examplegroup",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			exampleAppregistryAttributeGroup, err := servicecatalog.NewAppregistryAttributeGroup(ctx, "example", &servicecatalog.AppregistryAttributeGroupArgs{
//				Name:        pulumi.String("example"),
//				Description: pulumi.String("example description"),
//				Attributes:  pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = servicecatalog.NewAppregistryAttributeGroupAssociation(ctx, "example", &servicecatalog.AppregistryAttributeGroupAssociationArgs{
//				ApplicationId:    example.ID(),
//				AttributeGroupId: exampleAppregistryAttributeGroup.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Service Catalog AppRegistry Attribute Group Association using `application_id` and `attribute_group_id` arguments separated by a comma (`,`). For example:
//
// ```sh
// $ pulumi import aws:servicecatalog/appregistryAttributeGroupAssociation:AppregistryAttributeGroupAssociation example 12456778723424sdffsdfsdq34,12234t3564dsfsdf34asff4ww3
// ```
type AppregistryAttributeGroupAssociation struct {
	pulumi.CustomResourceState

	// ID of the application.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// ID of the attribute group to associate with the application.
	AttributeGroupId pulumi.StringOutput `pulumi:"attributeGroupId"`
}

// NewAppregistryAttributeGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewAppregistryAttributeGroupAssociation(ctx *pulumi.Context,
	name string, args *AppregistryAttributeGroupAssociationArgs, opts ...pulumi.ResourceOption) (*AppregistryAttributeGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.AttributeGroupId == nil {
		return nil, errors.New("invalid value for required argument 'AttributeGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppregistryAttributeGroupAssociation
	err := ctx.RegisterResource("aws:servicecatalog/appregistryAttributeGroupAssociation:AppregistryAttributeGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppregistryAttributeGroupAssociation gets an existing AppregistryAttributeGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppregistryAttributeGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppregistryAttributeGroupAssociationState, opts ...pulumi.ResourceOption) (*AppregistryAttributeGroupAssociation, error) {
	var resource AppregistryAttributeGroupAssociation
	err := ctx.ReadResource("aws:servicecatalog/appregistryAttributeGroupAssociation:AppregistryAttributeGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppregistryAttributeGroupAssociation resources.
type appregistryAttributeGroupAssociationState struct {
	// ID of the application.
	ApplicationId *string `pulumi:"applicationId"`
	// ID of the attribute group to associate with the application.
	AttributeGroupId *string `pulumi:"attributeGroupId"`
}

type AppregistryAttributeGroupAssociationState struct {
	// ID of the application.
	ApplicationId pulumi.StringPtrInput
	// ID of the attribute group to associate with the application.
	AttributeGroupId pulumi.StringPtrInput
}

func (AppregistryAttributeGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*appregistryAttributeGroupAssociationState)(nil)).Elem()
}

type appregistryAttributeGroupAssociationArgs struct {
	// ID of the application.
	ApplicationId string `pulumi:"applicationId"`
	// ID of the attribute group to associate with the application.
	AttributeGroupId string `pulumi:"attributeGroupId"`
}

// The set of arguments for constructing a AppregistryAttributeGroupAssociation resource.
type AppregistryAttributeGroupAssociationArgs struct {
	// ID of the application.
	ApplicationId pulumi.StringInput
	// ID of the attribute group to associate with the application.
	AttributeGroupId pulumi.StringInput
}

func (AppregistryAttributeGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appregistryAttributeGroupAssociationArgs)(nil)).Elem()
}

type AppregistryAttributeGroupAssociationInput interface {
	pulumi.Input

	ToAppregistryAttributeGroupAssociationOutput() AppregistryAttributeGroupAssociationOutput
	ToAppregistryAttributeGroupAssociationOutputWithContext(ctx context.Context) AppregistryAttributeGroupAssociationOutput
}

func (*AppregistryAttributeGroupAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**AppregistryAttributeGroupAssociation)(nil)).Elem()
}

func (i *AppregistryAttributeGroupAssociation) ToAppregistryAttributeGroupAssociationOutput() AppregistryAttributeGroupAssociationOutput {
	return i.ToAppregistryAttributeGroupAssociationOutputWithContext(context.Background())
}

func (i *AppregistryAttributeGroupAssociation) ToAppregistryAttributeGroupAssociationOutputWithContext(ctx context.Context) AppregistryAttributeGroupAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppregistryAttributeGroupAssociationOutput)
}

// AppregistryAttributeGroupAssociationArrayInput is an input type that accepts AppregistryAttributeGroupAssociationArray and AppregistryAttributeGroupAssociationArrayOutput values.
// You can construct a concrete instance of `AppregistryAttributeGroupAssociationArrayInput` via:
//
//	AppregistryAttributeGroupAssociationArray{ AppregistryAttributeGroupAssociationArgs{...} }
type AppregistryAttributeGroupAssociationArrayInput interface {
	pulumi.Input

	ToAppregistryAttributeGroupAssociationArrayOutput() AppregistryAttributeGroupAssociationArrayOutput
	ToAppregistryAttributeGroupAssociationArrayOutputWithContext(context.Context) AppregistryAttributeGroupAssociationArrayOutput
}

type AppregistryAttributeGroupAssociationArray []AppregistryAttributeGroupAssociationInput

func (AppregistryAttributeGroupAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppregistryAttributeGroupAssociation)(nil)).Elem()
}

func (i AppregistryAttributeGroupAssociationArray) ToAppregistryAttributeGroupAssociationArrayOutput() AppregistryAttributeGroupAssociationArrayOutput {
	return i.ToAppregistryAttributeGroupAssociationArrayOutputWithContext(context.Background())
}

func (i AppregistryAttributeGroupAssociationArray) ToAppregistryAttributeGroupAssociationArrayOutputWithContext(ctx context.Context) AppregistryAttributeGroupAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppregistryAttributeGroupAssociationArrayOutput)
}

// AppregistryAttributeGroupAssociationMapInput is an input type that accepts AppregistryAttributeGroupAssociationMap and AppregistryAttributeGroupAssociationMapOutput values.
// You can construct a concrete instance of `AppregistryAttributeGroupAssociationMapInput` via:
//
//	AppregistryAttributeGroupAssociationMap{ "key": AppregistryAttributeGroupAssociationArgs{...} }
type AppregistryAttributeGroupAssociationMapInput interface {
	pulumi.Input

	ToAppregistryAttributeGroupAssociationMapOutput() AppregistryAttributeGroupAssociationMapOutput
	ToAppregistryAttributeGroupAssociationMapOutputWithContext(context.Context) AppregistryAttributeGroupAssociationMapOutput
}

type AppregistryAttributeGroupAssociationMap map[string]AppregistryAttributeGroupAssociationInput

func (AppregistryAttributeGroupAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppregistryAttributeGroupAssociation)(nil)).Elem()
}

func (i AppregistryAttributeGroupAssociationMap) ToAppregistryAttributeGroupAssociationMapOutput() AppregistryAttributeGroupAssociationMapOutput {
	return i.ToAppregistryAttributeGroupAssociationMapOutputWithContext(context.Background())
}

func (i AppregistryAttributeGroupAssociationMap) ToAppregistryAttributeGroupAssociationMapOutputWithContext(ctx context.Context) AppregistryAttributeGroupAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppregistryAttributeGroupAssociationMapOutput)
}

type AppregistryAttributeGroupAssociationOutput struct{ *pulumi.OutputState }

func (AppregistryAttributeGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppregistryAttributeGroupAssociation)(nil)).Elem()
}

func (o AppregistryAttributeGroupAssociationOutput) ToAppregistryAttributeGroupAssociationOutput() AppregistryAttributeGroupAssociationOutput {
	return o
}

func (o AppregistryAttributeGroupAssociationOutput) ToAppregistryAttributeGroupAssociationOutputWithContext(ctx context.Context) AppregistryAttributeGroupAssociationOutput {
	return o
}

// ID of the application.
func (o AppregistryAttributeGroupAssociationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroupAssociation) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// ID of the attribute group to associate with the application.
func (o AppregistryAttributeGroupAssociationOutput) AttributeGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppregistryAttributeGroupAssociation) pulumi.StringOutput { return v.AttributeGroupId }).(pulumi.StringOutput)
}

type AppregistryAttributeGroupAssociationArrayOutput struct{ *pulumi.OutputState }

func (AppregistryAttributeGroupAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppregistryAttributeGroupAssociation)(nil)).Elem()
}

func (o AppregistryAttributeGroupAssociationArrayOutput) ToAppregistryAttributeGroupAssociationArrayOutput() AppregistryAttributeGroupAssociationArrayOutput {
	return o
}

func (o AppregistryAttributeGroupAssociationArrayOutput) ToAppregistryAttributeGroupAssociationArrayOutputWithContext(ctx context.Context) AppregistryAttributeGroupAssociationArrayOutput {
	return o
}

func (o AppregistryAttributeGroupAssociationArrayOutput) Index(i pulumi.IntInput) AppregistryAttributeGroupAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppregistryAttributeGroupAssociation {
		return vs[0].([]*AppregistryAttributeGroupAssociation)[vs[1].(int)]
	}).(AppregistryAttributeGroupAssociationOutput)
}

type AppregistryAttributeGroupAssociationMapOutput struct{ *pulumi.OutputState }

func (AppregistryAttributeGroupAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppregistryAttributeGroupAssociation)(nil)).Elem()
}

func (o AppregistryAttributeGroupAssociationMapOutput) ToAppregistryAttributeGroupAssociationMapOutput() AppregistryAttributeGroupAssociationMapOutput {
	return o
}

func (o AppregistryAttributeGroupAssociationMapOutput) ToAppregistryAttributeGroupAssociationMapOutputWithContext(ctx context.Context) AppregistryAttributeGroupAssociationMapOutput {
	return o
}

func (o AppregistryAttributeGroupAssociationMapOutput) MapIndex(k pulumi.StringInput) AppregistryAttributeGroupAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppregistryAttributeGroupAssociation {
		return vs[0].(map[string]*AppregistryAttributeGroupAssociation)[vs[1].(string)]
	}).(AppregistryAttributeGroupAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppregistryAttributeGroupAssociationInput)(nil)).Elem(), &AppregistryAttributeGroupAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppregistryAttributeGroupAssociationArrayInput)(nil)).Elem(), AppregistryAttributeGroupAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppregistryAttributeGroupAssociationMapInput)(nil)).Elem(), AppregistryAttributeGroupAssociationMap{})
	pulumi.RegisterOutputType(AppregistryAttributeGroupAssociationOutput{})
	pulumi.RegisterOutputType(AppregistryAttributeGroupAssociationArrayOutput{})
	pulumi.RegisterOutputType(AppregistryAttributeGroupAssociationMapOutput{})
}
