// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProvisioningArtifact struct {
	pulumi.CustomResourceState

	AcceptLanguage            pulumi.StringPtrOutput `pulumi:"acceptLanguage"`
	Active                    pulumi.BoolPtrOutput   `pulumi:"active"`
	CreatedTime               pulumi.StringOutput    `pulumi:"createdTime"`
	Description               pulumi.StringOutput    `pulumi:"description"`
	DisableTemplateValidation pulumi.BoolPtrOutput   `pulumi:"disableTemplateValidation"`
	Guidance                  pulumi.StringPtrOutput `pulumi:"guidance"`
	Name                      pulumi.StringOutput    `pulumi:"name"`
	ProductId                 pulumi.StringOutput    `pulumi:"productId"`
	TemplatePhysicalId        pulumi.StringPtrOutput `pulumi:"templatePhysicalId"`
	TemplateUrl               pulumi.StringPtrOutput `pulumi:"templateUrl"`
	Type                      pulumi.StringPtrOutput `pulumi:"type"`
}

// NewProvisioningArtifact registers a new resource with the given unique name, arguments, and options.
func NewProvisioningArtifact(ctx *pulumi.Context,
	name string, args *ProvisioningArtifactArgs, opts ...pulumi.ResourceOption) (*ProvisioningArtifact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	var resource ProvisioningArtifact
	err := ctx.RegisterResource("aws:servicecatalog/provisioningArtifact:ProvisioningArtifact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisioningArtifact gets an existing ProvisioningArtifact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisioningArtifact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisioningArtifactState, opts ...pulumi.ResourceOption) (*ProvisioningArtifact, error) {
	var resource ProvisioningArtifact
	err := ctx.ReadResource("aws:servicecatalog/provisioningArtifact:ProvisioningArtifact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisioningArtifact resources.
type provisioningArtifactState struct {
	AcceptLanguage            *string `pulumi:"acceptLanguage"`
	Active                    *bool   `pulumi:"active"`
	CreatedTime               *string `pulumi:"createdTime"`
	Description               *string `pulumi:"description"`
	DisableTemplateValidation *bool   `pulumi:"disableTemplateValidation"`
	Guidance                  *string `pulumi:"guidance"`
	Name                      *string `pulumi:"name"`
	ProductId                 *string `pulumi:"productId"`
	TemplatePhysicalId        *string `pulumi:"templatePhysicalId"`
	TemplateUrl               *string `pulumi:"templateUrl"`
	Type                      *string `pulumi:"type"`
}

type ProvisioningArtifactState struct {
	AcceptLanguage            pulumi.StringPtrInput
	Active                    pulumi.BoolPtrInput
	CreatedTime               pulumi.StringPtrInput
	Description               pulumi.StringPtrInput
	DisableTemplateValidation pulumi.BoolPtrInput
	Guidance                  pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	ProductId                 pulumi.StringPtrInput
	TemplatePhysicalId        pulumi.StringPtrInput
	TemplateUrl               pulumi.StringPtrInput
	Type                      pulumi.StringPtrInput
}

func (ProvisioningArtifactState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningArtifactState)(nil)).Elem()
}

type provisioningArtifactArgs struct {
	AcceptLanguage            *string `pulumi:"acceptLanguage"`
	Active                    *bool   `pulumi:"active"`
	Description               *string `pulumi:"description"`
	DisableTemplateValidation *bool   `pulumi:"disableTemplateValidation"`
	Guidance                  *string `pulumi:"guidance"`
	Name                      *string `pulumi:"name"`
	ProductId                 string  `pulumi:"productId"`
	TemplatePhysicalId        *string `pulumi:"templatePhysicalId"`
	TemplateUrl               *string `pulumi:"templateUrl"`
	Type                      *string `pulumi:"type"`
}

// The set of arguments for constructing a ProvisioningArtifact resource.
type ProvisioningArtifactArgs struct {
	AcceptLanguage            pulumi.StringPtrInput
	Active                    pulumi.BoolPtrInput
	Description               pulumi.StringPtrInput
	DisableTemplateValidation pulumi.BoolPtrInput
	Guidance                  pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	ProductId                 pulumi.StringInput
	TemplatePhysicalId        pulumi.StringPtrInput
	TemplateUrl               pulumi.StringPtrInput
	Type                      pulumi.StringPtrInput
}

func (ProvisioningArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningArtifactArgs)(nil)).Elem()
}

type ProvisioningArtifactInput interface {
	pulumi.Input

	ToProvisioningArtifactOutput() ProvisioningArtifactOutput
	ToProvisioningArtifactOutputWithContext(ctx context.Context) ProvisioningArtifactOutput
}

func (*ProvisioningArtifact) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningArtifact)(nil)).Elem()
}

func (i *ProvisioningArtifact) ToProvisioningArtifactOutput() ProvisioningArtifactOutput {
	return i.ToProvisioningArtifactOutputWithContext(context.Background())
}

func (i *ProvisioningArtifact) ToProvisioningArtifactOutputWithContext(ctx context.Context) ProvisioningArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningArtifactOutput)
}

// ProvisioningArtifactArrayInput is an input type that accepts ProvisioningArtifactArray and ProvisioningArtifactArrayOutput values.
// You can construct a concrete instance of `ProvisioningArtifactArrayInput` via:
//
//	ProvisioningArtifactArray{ ProvisioningArtifactArgs{...} }
type ProvisioningArtifactArrayInput interface {
	pulumi.Input

	ToProvisioningArtifactArrayOutput() ProvisioningArtifactArrayOutput
	ToProvisioningArtifactArrayOutputWithContext(context.Context) ProvisioningArtifactArrayOutput
}

type ProvisioningArtifactArray []ProvisioningArtifactInput

func (ProvisioningArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisioningArtifact)(nil)).Elem()
}

func (i ProvisioningArtifactArray) ToProvisioningArtifactArrayOutput() ProvisioningArtifactArrayOutput {
	return i.ToProvisioningArtifactArrayOutputWithContext(context.Background())
}

func (i ProvisioningArtifactArray) ToProvisioningArtifactArrayOutputWithContext(ctx context.Context) ProvisioningArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningArtifactArrayOutput)
}

// ProvisioningArtifactMapInput is an input type that accepts ProvisioningArtifactMap and ProvisioningArtifactMapOutput values.
// You can construct a concrete instance of `ProvisioningArtifactMapInput` via:
//
//	ProvisioningArtifactMap{ "key": ProvisioningArtifactArgs{...} }
type ProvisioningArtifactMapInput interface {
	pulumi.Input

	ToProvisioningArtifactMapOutput() ProvisioningArtifactMapOutput
	ToProvisioningArtifactMapOutputWithContext(context.Context) ProvisioningArtifactMapOutput
}

type ProvisioningArtifactMap map[string]ProvisioningArtifactInput

func (ProvisioningArtifactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisioningArtifact)(nil)).Elem()
}

func (i ProvisioningArtifactMap) ToProvisioningArtifactMapOutput() ProvisioningArtifactMapOutput {
	return i.ToProvisioningArtifactMapOutputWithContext(context.Background())
}

func (i ProvisioningArtifactMap) ToProvisioningArtifactMapOutputWithContext(ctx context.Context) ProvisioningArtifactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningArtifactMapOutput)
}

type ProvisioningArtifactOutput struct{ *pulumi.OutputState }

func (ProvisioningArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningArtifact)(nil)).Elem()
}

func (o ProvisioningArtifactOutput) ToProvisioningArtifactOutput() ProvisioningArtifactOutput {
	return o
}

func (o ProvisioningArtifactOutput) ToProvisioningArtifactOutputWithContext(ctx context.Context) ProvisioningArtifactOutput {
	return o
}

func (o ProvisioningArtifactOutput) AcceptLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringPtrOutput { return v.AcceptLanguage }).(pulumi.StringPtrOutput)
}

func (o ProvisioningArtifactOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.BoolPtrOutput { return v.Active }).(pulumi.BoolPtrOutput)
}

func (o ProvisioningArtifactOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o ProvisioningArtifactOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o ProvisioningArtifactOutput) DisableTemplateValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.BoolPtrOutput { return v.DisableTemplateValidation }).(pulumi.BoolPtrOutput)
}

func (o ProvisioningArtifactOutput) Guidance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringPtrOutput { return v.Guidance }).(pulumi.StringPtrOutput)
}

func (o ProvisioningArtifactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProvisioningArtifactOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

func (o ProvisioningArtifactOutput) TemplatePhysicalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringPtrOutput { return v.TemplatePhysicalId }).(pulumi.StringPtrOutput)
}

func (o ProvisioningArtifactOutput) TemplateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringPtrOutput { return v.TemplateUrl }).(pulumi.StringPtrOutput)
}

func (o ProvisioningArtifactOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningArtifact) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type ProvisioningArtifactArrayOutput struct{ *pulumi.OutputState }

func (ProvisioningArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisioningArtifact)(nil)).Elem()
}

func (o ProvisioningArtifactArrayOutput) ToProvisioningArtifactArrayOutput() ProvisioningArtifactArrayOutput {
	return o
}

func (o ProvisioningArtifactArrayOutput) ToProvisioningArtifactArrayOutputWithContext(ctx context.Context) ProvisioningArtifactArrayOutput {
	return o
}

func (o ProvisioningArtifactArrayOutput) Index(i pulumi.IntInput) ProvisioningArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProvisioningArtifact {
		return vs[0].([]*ProvisioningArtifact)[vs[1].(int)]
	}).(ProvisioningArtifactOutput)
}

type ProvisioningArtifactMapOutput struct{ *pulumi.OutputState }

func (ProvisioningArtifactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisioningArtifact)(nil)).Elem()
}

func (o ProvisioningArtifactMapOutput) ToProvisioningArtifactMapOutput() ProvisioningArtifactMapOutput {
	return o
}

func (o ProvisioningArtifactMapOutput) ToProvisioningArtifactMapOutputWithContext(ctx context.Context) ProvisioningArtifactMapOutput {
	return o
}

func (o ProvisioningArtifactMapOutput) MapIndex(k pulumi.StringInput) ProvisioningArtifactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProvisioningArtifact {
		return vs[0].(map[string]*ProvisioningArtifact)[vs[1].(string)]
	}).(ProvisioningArtifactOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningArtifactInput)(nil)).Elem(), &ProvisioningArtifact{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningArtifactArrayInput)(nil)).Elem(), ProvisioningArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningArtifactMapInput)(nil)).Elem(), ProvisioningArtifactMap{})
	pulumi.RegisterOutputType(ProvisioningArtifactOutput{})
	pulumi.RegisterOutputType(ProvisioningArtifactArrayOutput{})
	pulumi.RegisterOutputType(ProvisioningArtifactMapOutput{})
}
