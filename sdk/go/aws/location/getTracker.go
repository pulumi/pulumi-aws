// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupTracker(ctx *pulumi.Context, args *LookupTrackerArgs, opts ...pulumi.InvokeOption) (*LookupTrackerResult, error) {
	var rv LookupTrackerResult
	err := ctx.Invoke("aws:location/getTracker:getTracker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTracker.
type LookupTrackerArgs struct {
	Tags        map[string]string `pulumi:"tags"`
	TrackerName string            `pulumi:"trackerName"`
}

// A collection of values returned by getTracker.
type LookupTrackerResult struct {
	CreateTime  string `pulumi:"createTime"`
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                string            `pulumi:"id"`
	KmsKeyId          string            `pulumi:"kmsKeyId"`
	PositionFiltering string            `pulumi:"positionFiltering"`
	Tags              map[string]string `pulumi:"tags"`
	TrackerArn        string            `pulumi:"trackerArn"`
	TrackerName       string            `pulumi:"trackerName"`
	UpdateTime        string            `pulumi:"updateTime"`
}

func LookupTrackerOutput(ctx *pulumi.Context, args LookupTrackerOutputArgs, opts ...pulumi.InvokeOption) LookupTrackerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTrackerResult, error) {
			args := v.(LookupTrackerArgs)
			r, err := LookupTracker(ctx, &args, opts...)
			var s LookupTrackerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTrackerResultOutput)
}

// A collection of arguments for invoking getTracker.
type LookupTrackerOutputArgs struct {
	Tags        pulumi.StringMapInput `pulumi:"tags"`
	TrackerName pulumi.StringInput    `pulumi:"trackerName"`
}

func (LookupTrackerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrackerArgs)(nil)).Elem()
}

// A collection of values returned by getTracker.
type LookupTrackerResultOutput struct{ *pulumi.OutputState }

func (LookupTrackerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrackerResult)(nil)).Elem()
}

func (o LookupTrackerResultOutput) ToLookupTrackerResultOutput() LookupTrackerResultOutput {
	return o
}

func (o LookupTrackerResultOutput) ToLookupTrackerResultOutputWithContext(ctx context.Context) LookupTrackerResultOutput {
	return o
}

func (o LookupTrackerResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupTrackerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTrackerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTrackerResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o LookupTrackerResultOutput) PositionFiltering() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.PositionFiltering }).(pulumi.StringOutput)
}

func (o LookupTrackerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTrackerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupTrackerResultOutput) TrackerArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.TrackerArn }).(pulumi.StringOutput)
}

func (o LookupTrackerResultOutput) TrackerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.TrackerName }).(pulumi.StringOutput)
}

func (o LookupTrackerResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTrackerResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTrackerResultOutput{})
}
