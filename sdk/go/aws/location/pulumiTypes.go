// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MapConfiguration struct {
	// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location-maps/latest/APIReference/API_CreateMap.html).
	Style string `pulumi:"style"`
}

// MapConfigurationInput is an input type that accepts MapConfigurationArgs and MapConfigurationOutput values.
// You can construct a concrete instance of `MapConfigurationInput` via:
//
//          MapConfigurationArgs{...}
type MapConfigurationInput interface {
	pulumi.Input

	ToMapConfigurationOutput() MapConfigurationOutput
	ToMapConfigurationOutputWithContext(context.Context) MapConfigurationOutput
}

type MapConfigurationArgs struct {
	// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location-maps/latest/APIReference/API_CreateMap.html).
	Style pulumi.StringInput `pulumi:"style"`
}

func (MapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (i MapConfigurationArgs) ToMapConfigurationOutput() MapConfigurationOutput {
	return i.ToMapConfigurationOutputWithContext(context.Background())
}

func (i MapConfigurationArgs) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationOutput)
}

func (i MapConfigurationArgs) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return i.ToMapConfigurationPtrOutputWithContext(context.Background())
}

func (i MapConfigurationArgs) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationOutput).ToMapConfigurationPtrOutputWithContext(ctx)
}

// MapConfigurationPtrInput is an input type that accepts MapConfigurationArgs, MapConfigurationPtr and MapConfigurationPtrOutput values.
// You can construct a concrete instance of `MapConfigurationPtrInput` via:
//
//          MapConfigurationArgs{...}
//
//  or:
//
//          nil
type MapConfigurationPtrInput interface {
	pulumi.Input

	ToMapConfigurationPtrOutput() MapConfigurationPtrOutput
	ToMapConfigurationPtrOutputWithContext(context.Context) MapConfigurationPtrOutput
}

type mapConfigurationPtrType MapConfigurationArgs

func MapConfigurationPtr(v *MapConfigurationArgs) MapConfigurationPtrInput {
	return (*mapConfigurationPtrType)(v)
}

func (*mapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapConfiguration)(nil)).Elem()
}

func (i *mapConfigurationPtrType) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return i.ToMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *mapConfigurationPtrType) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationPtrOutput)
}

type MapConfigurationOutput struct{ *pulumi.OutputState }

func (MapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (o MapConfigurationOutput) ToMapConfigurationOutput() MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return o.ToMapConfigurationPtrOutputWithContext(context.Background())
}

func (o MapConfigurationOutput) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapConfiguration) *MapConfiguration {
		return &v
	}).(MapConfigurationPtrOutput)
}

// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location-maps/latest/APIReference/API_CreateMap.html).
func (o MapConfigurationOutput) Style() pulumi.StringOutput {
	return o.ApplyT(func(v MapConfiguration) string { return v.Style }).(pulumi.StringOutput)
}

type MapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapConfiguration)(nil)).Elem()
}

func (o MapConfigurationPtrOutput) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return o
}

func (o MapConfigurationPtrOutput) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return o
}

func (o MapConfigurationPtrOutput) Elem() MapConfigurationOutput {
	return o.ApplyT(func(v *MapConfiguration) MapConfiguration {
		if v != nil {
			return *v
		}
		var ret MapConfiguration
		return ret
	}).(MapConfigurationOutput)
}

// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location-maps/latest/APIReference/API_CreateMap.html).
func (o MapConfigurationPtrOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Style
	}).(pulumi.StringPtrOutput)
}

type GetMapConfiguration struct {
	// The map style selected from an available data provider.
	Style string `pulumi:"style"`
}

// GetMapConfigurationInput is an input type that accepts GetMapConfigurationArgs and GetMapConfigurationOutput values.
// You can construct a concrete instance of `GetMapConfigurationInput` via:
//
//          GetMapConfigurationArgs{...}
type GetMapConfigurationInput interface {
	pulumi.Input

	ToGetMapConfigurationOutput() GetMapConfigurationOutput
	ToGetMapConfigurationOutputWithContext(context.Context) GetMapConfigurationOutput
}

type GetMapConfigurationArgs struct {
	// The map style selected from an available data provider.
	Style pulumi.StringInput `pulumi:"style"`
}

func (GetMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapConfiguration)(nil)).Elem()
}

func (i GetMapConfigurationArgs) ToGetMapConfigurationOutput() GetMapConfigurationOutput {
	return i.ToGetMapConfigurationOutputWithContext(context.Background())
}

func (i GetMapConfigurationArgs) ToGetMapConfigurationOutputWithContext(ctx context.Context) GetMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMapConfigurationOutput)
}

// GetMapConfigurationArrayInput is an input type that accepts GetMapConfigurationArray and GetMapConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMapConfigurationArrayInput` via:
//
//          GetMapConfigurationArray{ GetMapConfigurationArgs{...} }
type GetMapConfigurationArrayInput interface {
	pulumi.Input

	ToGetMapConfigurationArrayOutput() GetMapConfigurationArrayOutput
	ToGetMapConfigurationArrayOutputWithContext(context.Context) GetMapConfigurationArrayOutput
}

type GetMapConfigurationArray []GetMapConfigurationInput

func (GetMapConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMapConfiguration)(nil)).Elem()
}

func (i GetMapConfigurationArray) ToGetMapConfigurationArrayOutput() GetMapConfigurationArrayOutput {
	return i.ToGetMapConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMapConfigurationArray) ToGetMapConfigurationArrayOutputWithContext(ctx context.Context) GetMapConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMapConfigurationArrayOutput)
}

type GetMapConfigurationOutput struct{ *pulumi.OutputState }

func (GetMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapConfiguration)(nil)).Elem()
}

func (o GetMapConfigurationOutput) ToGetMapConfigurationOutput() GetMapConfigurationOutput {
	return o
}

func (o GetMapConfigurationOutput) ToGetMapConfigurationOutputWithContext(ctx context.Context) GetMapConfigurationOutput {
	return o
}

// The map style selected from an available data provider.
func (o GetMapConfigurationOutput) Style() pulumi.StringOutput {
	return o.ApplyT(func(v GetMapConfiguration) string { return v.Style }).(pulumi.StringOutput)
}

type GetMapConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMapConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMapConfiguration)(nil)).Elem()
}

func (o GetMapConfigurationArrayOutput) ToGetMapConfigurationArrayOutput() GetMapConfigurationArrayOutput {
	return o
}

func (o GetMapConfigurationArrayOutput) ToGetMapConfigurationArrayOutputWithContext(ctx context.Context) GetMapConfigurationArrayOutput {
	return o
}

func (o GetMapConfigurationArrayOutput) Index(i pulumi.IntInput) GetMapConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMapConfiguration {
		return vs[0].([]GetMapConfiguration)[vs[1].(int)]
	}).(GetMapConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MapConfigurationInput)(nil)).Elem(), MapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapConfigurationPtrInput)(nil)).Elem(), MapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMapConfigurationInput)(nil)).Elem(), GetMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMapConfigurationArrayInput)(nil)).Elem(), GetMapConfigurationArray{})
	pulumi.RegisterOutputType(MapConfigurationOutput{})
	pulumi.RegisterOutputType(MapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetMapConfigurationOutput{})
	pulumi.RegisterOutputType(GetMapConfigurationArrayOutput{})
}
