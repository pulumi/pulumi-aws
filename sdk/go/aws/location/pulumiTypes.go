// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MapConfiguration struct {
	// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
	Style string `pulumi:"style"`
}

// MapConfigurationInput is an input type that accepts MapConfigurationArgs and MapConfigurationOutput values.
// You can construct a concrete instance of `MapConfigurationInput` via:
//
//          MapConfigurationArgs{...}
type MapConfigurationInput interface {
	pulumi.Input

	ToMapConfigurationOutput() MapConfigurationOutput
	ToMapConfigurationOutputWithContext(context.Context) MapConfigurationOutput
}

type MapConfigurationArgs struct {
	// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
	Style pulumi.StringInput `pulumi:"style"`
}

func (MapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (i MapConfigurationArgs) ToMapConfigurationOutput() MapConfigurationOutput {
	return i.ToMapConfigurationOutputWithContext(context.Background())
}

func (i MapConfigurationArgs) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationOutput)
}

func (i MapConfigurationArgs) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return i.ToMapConfigurationPtrOutputWithContext(context.Background())
}

func (i MapConfigurationArgs) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationOutput).ToMapConfigurationPtrOutputWithContext(ctx)
}

// MapConfigurationPtrInput is an input type that accepts MapConfigurationArgs, MapConfigurationPtr and MapConfigurationPtrOutput values.
// You can construct a concrete instance of `MapConfigurationPtrInput` via:
//
//          MapConfigurationArgs{...}
//
//  or:
//
//          nil
type MapConfigurationPtrInput interface {
	pulumi.Input

	ToMapConfigurationPtrOutput() MapConfigurationPtrOutput
	ToMapConfigurationPtrOutputWithContext(context.Context) MapConfigurationPtrOutput
}

type mapConfigurationPtrType MapConfigurationArgs

func MapConfigurationPtr(v *MapConfigurationArgs) MapConfigurationPtrInput {
	return (*mapConfigurationPtrType)(v)
}

func (*mapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MapConfiguration)(nil)).Elem()
}

func (i *mapConfigurationPtrType) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return i.ToMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *mapConfigurationPtrType) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationPtrOutput)
}

type MapConfigurationOutput struct{ *pulumi.OutputState }

func (MapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (o MapConfigurationOutput) ToMapConfigurationOutput() MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return o.ToMapConfigurationPtrOutputWithContext(context.Background())
}

func (o MapConfigurationOutput) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapConfiguration) *MapConfiguration {
		return &v
	}).(MapConfigurationPtrOutput)
}

// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
func (o MapConfigurationOutput) Style() pulumi.StringOutput {
	return o.ApplyT(func(v MapConfiguration) string { return v.Style }).(pulumi.StringOutput)
}

type MapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapConfiguration)(nil)).Elem()
}

func (o MapConfigurationPtrOutput) ToMapConfigurationPtrOutput() MapConfigurationPtrOutput {
	return o
}

func (o MapConfigurationPtrOutput) ToMapConfigurationPtrOutputWithContext(ctx context.Context) MapConfigurationPtrOutput {
	return o
}

func (o MapConfigurationPtrOutput) Elem() MapConfigurationOutput {
	return o.ApplyT(func(v *MapConfiguration) MapConfiguration {
		if v != nil {
			return *v
		}
		var ret MapConfiguration
		return ret
	}).(MapConfigurationOutput)
}

// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
func (o MapConfigurationPtrOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MapConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Style
	}).(pulumi.StringPtrOutput)
}

type PlaceIndexDataSourceConfiguration struct {
	// Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
	IntendedUse *string `pulumi:"intendedUse"`
}

// PlaceIndexDataSourceConfigurationInput is an input type that accepts PlaceIndexDataSourceConfigurationArgs and PlaceIndexDataSourceConfigurationOutput values.
// You can construct a concrete instance of `PlaceIndexDataSourceConfigurationInput` via:
//
//          PlaceIndexDataSourceConfigurationArgs{...}
type PlaceIndexDataSourceConfigurationInput interface {
	pulumi.Input

	ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput
	ToPlaceIndexDataSourceConfigurationOutputWithContext(context.Context) PlaceIndexDataSourceConfigurationOutput
}

type PlaceIndexDataSourceConfigurationArgs struct {
	// Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
	IntendedUse pulumi.StringPtrInput `pulumi:"intendedUse"`
}

func (PlaceIndexDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput {
	return i.ToPlaceIndexDataSourceConfigurationOutputWithContext(context.Background())
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaceIndexDataSourceConfigurationOutput)
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return i.ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaceIndexDataSourceConfigurationOutput).ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx)
}

// PlaceIndexDataSourceConfigurationPtrInput is an input type that accepts PlaceIndexDataSourceConfigurationArgs, PlaceIndexDataSourceConfigurationPtr and PlaceIndexDataSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `PlaceIndexDataSourceConfigurationPtrInput` via:
//
//          PlaceIndexDataSourceConfigurationArgs{...}
//
//  or:
//
//          nil
type PlaceIndexDataSourceConfigurationPtrInput interface {
	pulumi.Input

	ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput
	ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Context) PlaceIndexDataSourceConfigurationPtrOutput
}

type placeIndexDataSourceConfigurationPtrType PlaceIndexDataSourceConfigurationArgs

func PlaceIndexDataSourceConfigurationPtr(v *PlaceIndexDataSourceConfigurationArgs) PlaceIndexDataSourceConfigurationPtrInput {
	return (*placeIndexDataSourceConfigurationPtrType)(v)
}

func (*placeIndexDataSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i *placeIndexDataSourceConfigurationPtrType) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return i.ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *placeIndexDataSourceConfigurationPtrType) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaceIndexDataSourceConfigurationPtrOutput)
}

type PlaceIndexDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (PlaceIndexDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return o.ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlaceIndexDataSourceConfiguration) *PlaceIndexDataSourceConfiguration {
		return &v
	}).(PlaceIndexDataSourceConfigurationPtrOutput)
}

// Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
func (o PlaceIndexDataSourceConfigurationOutput) IntendedUse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PlaceIndexDataSourceConfiguration) *string { return v.IntendedUse }).(pulumi.StringPtrOutput)
}

type PlaceIndexDataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PlaceIndexDataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o PlaceIndexDataSourceConfigurationPtrOutput) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationPtrOutput) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationPtrOutput) Elem() PlaceIndexDataSourceConfigurationOutput {
	return o.ApplyT(func(v *PlaceIndexDataSourceConfiguration) PlaceIndexDataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret PlaceIndexDataSourceConfiguration
		return ret
	}).(PlaceIndexDataSourceConfigurationOutput)
}

// Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
func (o PlaceIndexDataSourceConfigurationPtrOutput) IntendedUse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlaceIndexDataSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.IntendedUse
	}).(pulumi.StringPtrOutput)
}

type GetMapConfiguration struct {
	// The map style selected from an available data provider.
	Style string `pulumi:"style"`
}

// GetMapConfigurationInput is an input type that accepts GetMapConfigurationArgs and GetMapConfigurationOutput values.
// You can construct a concrete instance of `GetMapConfigurationInput` via:
//
//          GetMapConfigurationArgs{...}
type GetMapConfigurationInput interface {
	pulumi.Input

	ToGetMapConfigurationOutput() GetMapConfigurationOutput
	ToGetMapConfigurationOutputWithContext(context.Context) GetMapConfigurationOutput
}

type GetMapConfigurationArgs struct {
	// The map style selected from an available data provider.
	Style pulumi.StringInput `pulumi:"style"`
}

func (GetMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapConfiguration)(nil)).Elem()
}

func (i GetMapConfigurationArgs) ToGetMapConfigurationOutput() GetMapConfigurationOutput {
	return i.ToGetMapConfigurationOutputWithContext(context.Background())
}

func (i GetMapConfigurationArgs) ToGetMapConfigurationOutputWithContext(ctx context.Context) GetMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMapConfigurationOutput)
}

// GetMapConfigurationArrayInput is an input type that accepts GetMapConfigurationArray and GetMapConfigurationArrayOutput values.
// You can construct a concrete instance of `GetMapConfigurationArrayInput` via:
//
//          GetMapConfigurationArray{ GetMapConfigurationArgs{...} }
type GetMapConfigurationArrayInput interface {
	pulumi.Input

	ToGetMapConfigurationArrayOutput() GetMapConfigurationArrayOutput
	ToGetMapConfigurationArrayOutputWithContext(context.Context) GetMapConfigurationArrayOutput
}

type GetMapConfigurationArray []GetMapConfigurationInput

func (GetMapConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMapConfiguration)(nil)).Elem()
}

func (i GetMapConfigurationArray) ToGetMapConfigurationArrayOutput() GetMapConfigurationArrayOutput {
	return i.ToGetMapConfigurationArrayOutputWithContext(context.Background())
}

func (i GetMapConfigurationArray) ToGetMapConfigurationArrayOutputWithContext(ctx context.Context) GetMapConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMapConfigurationArrayOutput)
}

type GetMapConfigurationOutput struct{ *pulumi.OutputState }

func (GetMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapConfiguration)(nil)).Elem()
}

func (o GetMapConfigurationOutput) ToGetMapConfigurationOutput() GetMapConfigurationOutput {
	return o
}

func (o GetMapConfigurationOutput) ToGetMapConfigurationOutputWithContext(ctx context.Context) GetMapConfigurationOutput {
	return o
}

// The map style selected from an available data provider.
func (o GetMapConfigurationOutput) Style() pulumi.StringOutput {
	return o.ApplyT(func(v GetMapConfiguration) string { return v.Style }).(pulumi.StringOutput)
}

type GetMapConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetMapConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMapConfiguration)(nil)).Elem()
}

func (o GetMapConfigurationArrayOutput) ToGetMapConfigurationArrayOutput() GetMapConfigurationArrayOutput {
	return o
}

func (o GetMapConfigurationArrayOutput) ToGetMapConfigurationArrayOutputWithContext(ctx context.Context) GetMapConfigurationArrayOutput {
	return o
}

func (o GetMapConfigurationArrayOutput) Index(i pulumi.IntInput) GetMapConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMapConfiguration {
		return vs[0].([]GetMapConfiguration)[vs[1].(int)]
	}).(GetMapConfigurationOutput)
}

type GetPlaceIndexDataSourceConfiguration struct {
	IntendedUse string `pulumi:"intendedUse"`
}

// GetPlaceIndexDataSourceConfigurationInput is an input type that accepts GetPlaceIndexDataSourceConfigurationArgs and GetPlaceIndexDataSourceConfigurationOutput values.
// You can construct a concrete instance of `GetPlaceIndexDataSourceConfigurationInput` via:
//
//          GetPlaceIndexDataSourceConfigurationArgs{...}
type GetPlaceIndexDataSourceConfigurationInput interface {
	pulumi.Input

	ToGetPlaceIndexDataSourceConfigurationOutput() GetPlaceIndexDataSourceConfigurationOutput
	ToGetPlaceIndexDataSourceConfigurationOutputWithContext(context.Context) GetPlaceIndexDataSourceConfigurationOutput
}

type GetPlaceIndexDataSourceConfigurationArgs struct {
	IntendedUse pulumi.StringInput `pulumi:"intendedUse"`
}

func (GetPlaceIndexDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i GetPlaceIndexDataSourceConfigurationArgs) ToGetPlaceIndexDataSourceConfigurationOutput() GetPlaceIndexDataSourceConfigurationOutput {
	return i.ToGetPlaceIndexDataSourceConfigurationOutputWithContext(context.Background())
}

func (i GetPlaceIndexDataSourceConfigurationArgs) ToGetPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) GetPlaceIndexDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlaceIndexDataSourceConfigurationOutput)
}

// GetPlaceIndexDataSourceConfigurationArrayInput is an input type that accepts GetPlaceIndexDataSourceConfigurationArray and GetPlaceIndexDataSourceConfigurationArrayOutput values.
// You can construct a concrete instance of `GetPlaceIndexDataSourceConfigurationArrayInput` via:
//
//          GetPlaceIndexDataSourceConfigurationArray{ GetPlaceIndexDataSourceConfigurationArgs{...} }
type GetPlaceIndexDataSourceConfigurationArrayInput interface {
	pulumi.Input

	ToGetPlaceIndexDataSourceConfigurationArrayOutput() GetPlaceIndexDataSourceConfigurationArrayOutput
	ToGetPlaceIndexDataSourceConfigurationArrayOutputWithContext(context.Context) GetPlaceIndexDataSourceConfigurationArrayOutput
}

type GetPlaceIndexDataSourceConfigurationArray []GetPlaceIndexDataSourceConfigurationInput

func (GetPlaceIndexDataSourceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i GetPlaceIndexDataSourceConfigurationArray) ToGetPlaceIndexDataSourceConfigurationArrayOutput() GetPlaceIndexDataSourceConfigurationArrayOutput {
	return i.ToGetPlaceIndexDataSourceConfigurationArrayOutputWithContext(context.Background())
}

func (i GetPlaceIndexDataSourceConfigurationArray) ToGetPlaceIndexDataSourceConfigurationArrayOutputWithContext(ctx context.Context) GetPlaceIndexDataSourceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlaceIndexDataSourceConfigurationArrayOutput)
}

type GetPlaceIndexDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (GetPlaceIndexDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o GetPlaceIndexDataSourceConfigurationOutput) ToGetPlaceIndexDataSourceConfigurationOutput() GetPlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o GetPlaceIndexDataSourceConfigurationOutput) ToGetPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) GetPlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o GetPlaceIndexDataSourceConfigurationOutput) IntendedUse() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlaceIndexDataSourceConfiguration) string { return v.IntendedUse }).(pulumi.StringOutput)
}

type GetPlaceIndexDataSourceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetPlaceIndexDataSourceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o GetPlaceIndexDataSourceConfigurationArrayOutput) ToGetPlaceIndexDataSourceConfigurationArrayOutput() GetPlaceIndexDataSourceConfigurationArrayOutput {
	return o
}

func (o GetPlaceIndexDataSourceConfigurationArrayOutput) ToGetPlaceIndexDataSourceConfigurationArrayOutputWithContext(ctx context.Context) GetPlaceIndexDataSourceConfigurationArrayOutput {
	return o
}

func (o GetPlaceIndexDataSourceConfigurationArrayOutput) Index(i pulumi.IntInput) GetPlaceIndexDataSourceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPlaceIndexDataSourceConfiguration {
		return vs[0].([]GetPlaceIndexDataSourceConfiguration)[vs[1].(int)]
	}).(GetPlaceIndexDataSourceConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MapConfigurationInput)(nil)).Elem(), MapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapConfigurationPtrInput)(nil)).Elem(), MapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlaceIndexDataSourceConfigurationInput)(nil)).Elem(), PlaceIndexDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlaceIndexDataSourceConfigurationPtrInput)(nil)).Elem(), PlaceIndexDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMapConfigurationInput)(nil)).Elem(), GetMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMapConfigurationArrayInput)(nil)).Elem(), GetMapConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlaceIndexDataSourceConfigurationInput)(nil)).Elem(), GetPlaceIndexDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlaceIndexDataSourceConfigurationArrayInput)(nil)).Elem(), GetPlaceIndexDataSourceConfigurationArray{})
	pulumi.RegisterOutputType(MapConfigurationOutput{})
	pulumi.RegisterOutputType(MapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PlaceIndexDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(PlaceIndexDataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetMapConfigurationOutput{})
	pulumi.RegisterOutputType(GetMapConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetPlaceIndexDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(GetPlaceIndexDataSourceConfigurationArrayOutput{})
}
