// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMap(ctx *pulumi.Context, args *LookupMapArgs, opts ...pulumi.InvokeOption) (*LookupMapResult, error) {
	var rv LookupMapResult
	err := ctx.Invoke("aws:location/getMap:getMap", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMap.
type LookupMapArgs struct {
	MapName string            `pulumi:"mapName"`
	Tags    map[string]string `pulumi:"tags"`
}

// A collection of values returned by getMap.
type LookupMapResult struct {
	Configurations []GetMapConfiguration `pulumi:"configurations"`
	CreateTime     string                `pulumi:"createTime"`
	Description    string                `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id         string            `pulumi:"id"`
	MapArn     string            `pulumi:"mapArn"`
	MapName    string            `pulumi:"mapName"`
	Tags       map[string]string `pulumi:"tags"`
	UpdateTime string            `pulumi:"updateTime"`
}

func LookupMapOutput(ctx *pulumi.Context, args LookupMapOutputArgs, opts ...pulumi.InvokeOption) LookupMapResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMapResult, error) {
			args := v.(LookupMapArgs)
			r, err := LookupMap(ctx, &args, opts...)
			var s LookupMapResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMapResultOutput)
}

// A collection of arguments for invoking getMap.
type LookupMapOutputArgs struct {
	MapName pulumi.StringInput    `pulumi:"mapName"`
	Tags    pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupMapOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMapArgs)(nil)).Elem()
}

// A collection of values returned by getMap.
type LookupMapResultOutput struct{ *pulumi.OutputState }

func (LookupMapResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMapResult)(nil)).Elem()
}

func (o LookupMapResultOutput) ToLookupMapResultOutput() LookupMapResultOutput {
	return o
}

func (o LookupMapResultOutput) ToLookupMapResultOutputWithContext(ctx context.Context) LookupMapResultOutput {
	return o
}

func (o LookupMapResultOutput) Configurations() GetMapConfigurationArrayOutput {
	return o.ApplyT(func(v LookupMapResult) []GetMapConfiguration { return v.Configurations }).(GetMapConfigurationArrayOutput)
}

func (o LookupMapResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMapResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupMapResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMapResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMapResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMapResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMapResultOutput) MapArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMapResult) string { return v.MapArn }).(pulumi.StringOutput)
}

func (o LookupMapResultOutput) MapName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMapResult) string { return v.MapName }).(pulumi.StringOutput)
}

func (o LookupMapResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMapResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupMapResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMapResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMapResultOutput{})
}
