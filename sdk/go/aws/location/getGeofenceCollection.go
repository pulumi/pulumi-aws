// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about a Location Service Geofence Collection.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/location"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := location.LookupGeofenceCollection(ctx, &location.LookupGeofenceCollectionArgs{
//				CollectionName: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGeofenceCollection(ctx *pulumi.Context, args *LookupGeofenceCollectionArgs, opts ...pulumi.InvokeOption) (*LookupGeofenceCollectionResult, error) {
	var rv LookupGeofenceCollectionResult
	err := ctx.Invoke("aws:location/getGeofenceCollection:getGeofenceCollection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGeofenceCollection.
type LookupGeofenceCollectionArgs struct {
	// Name of the geofence collection.
	CollectionName string `pulumi:"collectionName"`
	// Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Key-value map of resource tags for the geofence collection.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getGeofenceCollection.
type LookupGeofenceCollectionResult struct {
	// ARN for the geofence collection resource. Used when you need to specify a resource across all AWS.
	CollectionArn  string `pulumi:"collectionArn"`
	CollectionName string `pulumi:"collectionName"`
	// Timestamp for when the geofence collection resource was created in ISO 8601 format.
	CreateTime string `pulumi:"createTime"`
	// Optional description of the geofence collection resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// Key-value map of resource tags for the geofence collection.
	Tags map[string]string `pulumi:"tags"`
	// Timestamp for when the geofence collection resource was last updated in ISO 8601 format.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupGeofenceCollectionOutput(ctx *pulumi.Context, args LookupGeofenceCollectionOutputArgs, opts ...pulumi.InvokeOption) LookupGeofenceCollectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGeofenceCollectionResult, error) {
			args := v.(LookupGeofenceCollectionArgs)
			r, err := LookupGeofenceCollection(ctx, &args, opts...)
			var s LookupGeofenceCollectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGeofenceCollectionResultOutput)
}

// A collection of arguments for invoking getGeofenceCollection.
type LookupGeofenceCollectionOutputArgs struct {
	// Name of the geofence collection.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Key-value map of resource tags for the geofence collection.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupGeofenceCollectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeofenceCollectionArgs)(nil)).Elem()
}

// A collection of values returned by getGeofenceCollection.
type LookupGeofenceCollectionResultOutput struct{ *pulumi.OutputState }

func (LookupGeofenceCollectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeofenceCollectionResult)(nil)).Elem()
}

func (o LookupGeofenceCollectionResultOutput) ToLookupGeofenceCollectionResultOutput() LookupGeofenceCollectionResultOutput {
	return o
}

func (o LookupGeofenceCollectionResultOutput) ToLookupGeofenceCollectionResultOutputWithContext(ctx context.Context) LookupGeofenceCollectionResultOutput {
	return o
}

// ARN for the geofence collection resource. Used when you need to specify a resource across all AWS.
func (o LookupGeofenceCollectionResultOutput) CollectionArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) string { return v.CollectionArn }).(pulumi.StringOutput)
}

func (o LookupGeofenceCollectionResultOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Timestamp for when the geofence collection resource was created in ISO 8601 format.
func (o LookupGeofenceCollectionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional description of the geofence collection resource.
func (o LookupGeofenceCollectionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGeofenceCollectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
func (o LookupGeofenceCollectionResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Key-value map of resource tags for the geofence collection.
func (o LookupGeofenceCollectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Timestamp for when the geofence collection resource was last updated in ISO 8601 format.
func (o LookupGeofenceCollectionResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGeofenceCollectionResultOutput{})
}
