// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:location/geofenceCollection:GeofenceCollection":
		r = &GeofenceCollection{}
	case "aws:location/map:Map":
		r = &Map{}
	case "aws:location/placeIndex:PlaceIndex":
		r = &PlaceIndex{}
	case "aws:location/routeCalculation:RouteCalculation":
		r = &RouteCalculation{}
	case "aws:location/tracker:Tracker":
		r = &Tracker{}
	case "aws:location/trackerAssociation:TrackerAssociation":
		r = &TrackerAssociation{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := aws.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"aws",
		"location/geofenceCollection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"location/map",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"location/placeIndex",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"location/routeCalculation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"location/tracker",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"location/trackerAssociation",
		&module{version},
	)
}
