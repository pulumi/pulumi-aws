// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package neptune

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::NeptuneGraph::Graph resource creates an Amazon Analytics Graph.
//
// ## Example Usage
//
// ### Neptune Graph (with Vector Search configuration)
//
// Creates a Neptune Graph with 16GB provisioned memory, vector search capability with 128 dimensions, and a single replica for high availability.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/neptune"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create Neptune Graph
//			_, err := neptune.NewGraphGraph(ctx, "example", &neptune.GraphGraphArgs{
//				GraphName:          pulumi.String("example-graph-test-20250203"),
//				ProvisionedMemory:  pulumi.Int(16),
//				DeletionProtection: pulumi.Bool(false),
//				PublicConnectivity: pulumi.Bool(false),
//				ReplicaCount:       pulumi.Int(1),
//				KmsKeyIdentifier:   pulumi.String("arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"),
//				VectorSearchConfiguration: &neptune.GraphGraphVectorSearchConfigurationArgs{
//					VectorSearchDimension: pulumi.Int(128),
//				},
//				Tags: pulumi.StringMap{
//					"Environment": pulumi.String("Development"),
//					"ModifiedBy":  pulumi.String("AWS"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_neptunegraph_graph` using the graph identifier. For example:
//
// ```sh
// $ pulumi import aws:neptune/graphGraph:GraphGraph example "graph_id"
// ```
type GraphGraph struct {
	pulumi.CustomResourceState

	// (String) Graph resource ARN
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A value that indicates whether the graph has deletion protection enabled. The graph can't be deleted when deletion
	// protection is enabled.
	DeletionProtection pulumi.BoolOutput `pulumi:"deletionProtection"`
	// (String) The connection endpoint for the graph. For example: `g-12a3bcdef4.us-east-1.neptune-graph.amazonaws.com`
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The graph name. For example: my-graph-1. The name must contain from 1 to 63 letters, numbers, or hyphens, and its first
	// character must be a letter. It cannot end with a hyphen or contain two consecutive hyphens. If you don't specify a graph
	// name, a unique graph name is generated for you using the prefix graph-for, followed by a combination of Stack Name and a
	// UUID.
	GraphName pulumi.StringOutput `pulumi:"graphName"`
	// Allows user to specify name prefix and have remainder of name automatically generated.
	GraphNamePrefix pulumi.StringPtrOutput `pulumi:"graphNamePrefix"`
	// Specifies a KMS key to use to encrypt data in the new graph. Value must be ARN of KMS Key.
	KmsKeyIdentifier pulumi.StringOutput `pulumi:"kmsKeyIdentifier"`
	// The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.
	ProvisionedMemory pulumi.IntOutput `pulumi:"provisionedMemory"`
	// Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated. When
	// the graph is publicly available, its domain name system (DNS) endpoint resolves to the public IP address from the
	// internet. When the graph isn't publicly available, you need to create a PrivateGraphEndpoint in a given VPC to ensure
	// the DNS name resolves to a private IP address that is reachable from the VPC.
	PublicConnectivity pulumi.BoolOutput `pulumi:"publicConnectivity"`
	// The number of replicas in other AZs. Value must be between 0 and 2.
	ReplicaCount pulumi.IntOutput       `pulumi:"replicaCount"`
	Tags         pulumi.StringMapOutput `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapOutput      `pulumi:"tagsAll"`
	Timeouts GraphGraphTimeoutsPtrOutput `pulumi:"timeouts"`
	// Vector search configuration for the Neptune Graph
	VectorSearchConfiguration GraphGraphVectorSearchConfigurationPtrOutput `pulumi:"vectorSearchConfiguration"`
}

// NewGraphGraph registers a new resource with the given unique name, arguments, and options.
func NewGraphGraph(ctx *pulumi.Context,
	name string, args *GraphGraphArgs, opts ...pulumi.ResourceOption) (*GraphGraph, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProvisionedMemory == nil {
		return nil, errors.New("invalid value for required argument 'ProvisionedMemory'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GraphGraph
	err := ctx.RegisterResource("aws:neptune/graphGraph:GraphGraph", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGraphGraph gets an existing GraphGraph resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGraphGraph(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GraphGraphState, opts ...pulumi.ResourceOption) (*GraphGraph, error) {
	var resource GraphGraph
	err := ctx.ReadResource("aws:neptune/graphGraph:GraphGraph", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GraphGraph resources.
type graphGraphState struct {
	// (String) Graph resource ARN
	Arn *string `pulumi:"arn"`
	// A value that indicates whether the graph has deletion protection enabled. The graph can't be deleted when deletion
	// protection is enabled.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// (String) The connection endpoint for the graph. For example: `g-12a3bcdef4.us-east-1.neptune-graph.amazonaws.com`
	Endpoint *string `pulumi:"endpoint"`
	// The graph name. For example: my-graph-1. The name must contain from 1 to 63 letters, numbers, or hyphens, and its first
	// character must be a letter. It cannot end with a hyphen or contain two consecutive hyphens. If you don't specify a graph
	// name, a unique graph name is generated for you using the prefix graph-for, followed by a combination of Stack Name and a
	// UUID.
	GraphName *string `pulumi:"graphName"`
	// Allows user to specify name prefix and have remainder of name automatically generated.
	GraphNamePrefix *string `pulumi:"graphNamePrefix"`
	// Specifies a KMS key to use to encrypt data in the new graph. Value must be ARN of KMS Key.
	KmsKeyIdentifier *string `pulumi:"kmsKeyIdentifier"`
	// The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.
	ProvisionedMemory *int `pulumi:"provisionedMemory"`
	// Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated. When
	// the graph is publicly available, its domain name system (DNS) endpoint resolves to the public IP address from the
	// internet. When the graph isn't publicly available, you need to create a PrivateGraphEndpoint in a given VPC to ensure
	// the DNS name resolves to a private IP address that is reachable from the VPC.
	PublicConnectivity *bool `pulumi:"publicConnectivity"`
	// The number of replicas in other AZs. Value must be between 0 and 2.
	ReplicaCount *int              `pulumi:"replicaCount"`
	Tags         map[string]string `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll  map[string]string   `pulumi:"tagsAll"`
	Timeouts *GraphGraphTimeouts `pulumi:"timeouts"`
	// Vector search configuration for the Neptune Graph
	VectorSearchConfiguration *GraphGraphVectorSearchConfiguration `pulumi:"vectorSearchConfiguration"`
}

type GraphGraphState struct {
	// (String) Graph resource ARN
	Arn pulumi.StringPtrInput
	// A value that indicates whether the graph has deletion protection enabled. The graph can't be deleted when deletion
	// protection is enabled.
	DeletionProtection pulumi.BoolPtrInput
	// (String) The connection endpoint for the graph. For example: `g-12a3bcdef4.us-east-1.neptune-graph.amazonaws.com`
	Endpoint pulumi.StringPtrInput
	// The graph name. For example: my-graph-1. The name must contain from 1 to 63 letters, numbers, or hyphens, and its first
	// character must be a letter. It cannot end with a hyphen or contain two consecutive hyphens. If you don't specify a graph
	// name, a unique graph name is generated for you using the prefix graph-for, followed by a combination of Stack Name and a
	// UUID.
	GraphName pulumi.StringPtrInput
	// Allows user to specify name prefix and have remainder of name automatically generated.
	GraphNamePrefix pulumi.StringPtrInput
	// Specifies a KMS key to use to encrypt data in the new graph. Value must be ARN of KMS Key.
	KmsKeyIdentifier pulumi.StringPtrInput
	// The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.
	ProvisionedMemory pulumi.IntPtrInput
	// Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated. When
	// the graph is publicly available, its domain name system (DNS) endpoint resolves to the public IP address from the
	// internet. When the graph isn't publicly available, you need to create a PrivateGraphEndpoint in a given VPC to ensure
	// the DNS name resolves to a private IP address that is reachable from the VPC.
	PublicConnectivity pulumi.BoolPtrInput
	// The number of replicas in other AZs. Value must be between 0 and 2.
	ReplicaCount pulumi.IntPtrInput
	Tags         pulumi.StringMapInput
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapInput
	Timeouts GraphGraphTimeoutsPtrInput
	// Vector search configuration for the Neptune Graph
	VectorSearchConfiguration GraphGraphVectorSearchConfigurationPtrInput
}

func (GraphGraphState) ElementType() reflect.Type {
	return reflect.TypeOf((*graphGraphState)(nil)).Elem()
}

type graphGraphArgs struct {
	// A value that indicates whether the graph has deletion protection enabled. The graph can't be deleted when deletion
	// protection is enabled.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// The graph name. For example: my-graph-1. The name must contain from 1 to 63 letters, numbers, or hyphens, and its first
	// character must be a letter. It cannot end with a hyphen or contain two consecutive hyphens. If you don't specify a graph
	// name, a unique graph name is generated for you using the prefix graph-for, followed by a combination of Stack Name and a
	// UUID.
	GraphName *string `pulumi:"graphName"`
	// Allows user to specify name prefix and have remainder of name automatically generated.
	GraphNamePrefix *string `pulumi:"graphNamePrefix"`
	// Specifies a KMS key to use to encrypt data in the new graph. Value must be ARN of KMS Key.
	KmsKeyIdentifier *string `pulumi:"kmsKeyIdentifier"`
	// The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.
	ProvisionedMemory int `pulumi:"provisionedMemory"`
	// Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated. When
	// the graph is publicly available, its domain name system (DNS) endpoint resolves to the public IP address from the
	// internet. When the graph isn't publicly available, you need to create a PrivateGraphEndpoint in a given VPC to ensure
	// the DNS name resolves to a private IP address that is reachable from the VPC.
	PublicConnectivity *bool `pulumi:"publicConnectivity"`
	// The number of replicas in other AZs. Value must be between 0 and 2.
	ReplicaCount *int                `pulumi:"replicaCount"`
	Tags         map[string]string   `pulumi:"tags"`
	Timeouts     *GraphGraphTimeouts `pulumi:"timeouts"`
	// Vector search configuration for the Neptune Graph
	VectorSearchConfiguration *GraphGraphVectorSearchConfiguration `pulumi:"vectorSearchConfiguration"`
}

// The set of arguments for constructing a GraphGraph resource.
type GraphGraphArgs struct {
	// A value that indicates whether the graph has deletion protection enabled. The graph can't be deleted when deletion
	// protection is enabled.
	DeletionProtection pulumi.BoolPtrInput
	// The graph name. For example: my-graph-1. The name must contain from 1 to 63 letters, numbers, or hyphens, and its first
	// character must be a letter. It cannot end with a hyphen or contain two consecutive hyphens. If you don't specify a graph
	// name, a unique graph name is generated for you using the prefix graph-for, followed by a combination of Stack Name and a
	// UUID.
	GraphName pulumi.StringPtrInput
	// Allows user to specify name prefix and have remainder of name automatically generated.
	GraphNamePrefix pulumi.StringPtrInput
	// Specifies a KMS key to use to encrypt data in the new graph. Value must be ARN of KMS Key.
	KmsKeyIdentifier pulumi.StringPtrInput
	// The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.
	ProvisionedMemory pulumi.IntInput
	// Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated. When
	// the graph is publicly available, its domain name system (DNS) endpoint resolves to the public IP address from the
	// internet. When the graph isn't publicly available, you need to create a PrivateGraphEndpoint in a given VPC to ensure
	// the DNS name resolves to a private IP address that is reachable from the VPC.
	PublicConnectivity pulumi.BoolPtrInput
	// The number of replicas in other AZs. Value must be between 0 and 2.
	ReplicaCount pulumi.IntPtrInput
	Tags         pulumi.StringMapInput
	Timeouts     GraphGraphTimeoutsPtrInput
	// Vector search configuration for the Neptune Graph
	VectorSearchConfiguration GraphGraphVectorSearchConfigurationPtrInput
}

func (GraphGraphArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*graphGraphArgs)(nil)).Elem()
}

type GraphGraphInput interface {
	pulumi.Input

	ToGraphGraphOutput() GraphGraphOutput
	ToGraphGraphOutputWithContext(ctx context.Context) GraphGraphOutput
}

func (*GraphGraph) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphGraph)(nil)).Elem()
}

func (i *GraphGraph) ToGraphGraphOutput() GraphGraphOutput {
	return i.ToGraphGraphOutputWithContext(context.Background())
}

func (i *GraphGraph) ToGraphGraphOutputWithContext(ctx context.Context) GraphGraphOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphGraphOutput)
}

// GraphGraphArrayInput is an input type that accepts GraphGraphArray and GraphGraphArrayOutput values.
// You can construct a concrete instance of `GraphGraphArrayInput` via:
//
//	GraphGraphArray{ GraphGraphArgs{...} }
type GraphGraphArrayInput interface {
	pulumi.Input

	ToGraphGraphArrayOutput() GraphGraphArrayOutput
	ToGraphGraphArrayOutputWithContext(context.Context) GraphGraphArrayOutput
}

type GraphGraphArray []GraphGraphInput

func (GraphGraphArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GraphGraph)(nil)).Elem()
}

func (i GraphGraphArray) ToGraphGraphArrayOutput() GraphGraphArrayOutput {
	return i.ToGraphGraphArrayOutputWithContext(context.Background())
}

func (i GraphGraphArray) ToGraphGraphArrayOutputWithContext(ctx context.Context) GraphGraphArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphGraphArrayOutput)
}

// GraphGraphMapInput is an input type that accepts GraphGraphMap and GraphGraphMapOutput values.
// You can construct a concrete instance of `GraphGraphMapInput` via:
//
//	GraphGraphMap{ "key": GraphGraphArgs{...} }
type GraphGraphMapInput interface {
	pulumi.Input

	ToGraphGraphMapOutput() GraphGraphMapOutput
	ToGraphGraphMapOutputWithContext(context.Context) GraphGraphMapOutput
}

type GraphGraphMap map[string]GraphGraphInput

func (GraphGraphMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GraphGraph)(nil)).Elem()
}

func (i GraphGraphMap) ToGraphGraphMapOutput() GraphGraphMapOutput {
	return i.ToGraphGraphMapOutputWithContext(context.Background())
}

func (i GraphGraphMap) ToGraphGraphMapOutputWithContext(ctx context.Context) GraphGraphMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphGraphMapOutput)
}

type GraphGraphOutput struct{ *pulumi.OutputState }

func (GraphGraphOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphGraph)(nil)).Elem()
}

func (o GraphGraphOutput) ToGraphGraphOutput() GraphGraphOutput {
	return o
}

func (o GraphGraphOutput) ToGraphGraphOutputWithContext(ctx context.Context) GraphGraphOutput {
	return o
}

// (String) Graph resource ARN
func (o GraphGraphOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A value that indicates whether the graph has deletion protection enabled. The graph can't be deleted when deletion
// protection is enabled.
func (o GraphGraphOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// (String) The connection endpoint for the graph. For example: `g-12a3bcdef4.us-east-1.neptune-graph.amazonaws.com`
func (o GraphGraphOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// The graph name. For example: my-graph-1. The name must contain from 1 to 63 letters, numbers, or hyphens, and its first
// character must be a letter. It cannot end with a hyphen or contain two consecutive hyphens. If you don't specify a graph
// name, a unique graph name is generated for you using the prefix graph-for, followed by a combination of Stack Name and a
// UUID.
func (o GraphGraphOutput) GraphName() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.StringOutput { return v.GraphName }).(pulumi.StringOutput)
}

// Allows user to specify name prefix and have remainder of name automatically generated.
func (o GraphGraphOutput) GraphNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.StringPtrOutput { return v.GraphNamePrefix }).(pulumi.StringPtrOutput)
}

// Specifies a KMS key to use to encrypt data in the new graph. Value must be ARN of KMS Key.
func (o GraphGraphOutput) KmsKeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.StringOutput { return v.KmsKeyIdentifier }).(pulumi.StringOutput)
}

// The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.
func (o GraphGraphOutput) ProvisionedMemory() pulumi.IntOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.IntOutput { return v.ProvisionedMemory }).(pulumi.IntOutput)
}

// Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated. When
// the graph is publicly available, its domain name system (DNS) endpoint resolves to the public IP address from the
// internet. When the graph isn't publicly available, you need to create a PrivateGraphEndpoint in a given VPC to ensure
// the DNS name resolves to a private IP address that is reachable from the VPC.
func (o GraphGraphOutput) PublicConnectivity() pulumi.BoolOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.BoolOutput { return v.PublicConnectivity }).(pulumi.BoolOutput)
}

// The number of replicas in other AZs. Value must be between 0 and 2.
func (o GraphGraphOutput) ReplicaCount() pulumi.IntOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.IntOutput { return v.ReplicaCount }).(pulumi.IntOutput)
}

func (o GraphGraphOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: Please use `tags` instead.
func (o GraphGraphOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GraphGraph) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o GraphGraphOutput) Timeouts() GraphGraphTimeoutsPtrOutput {
	return o.ApplyT(func(v *GraphGraph) GraphGraphTimeoutsPtrOutput { return v.Timeouts }).(GraphGraphTimeoutsPtrOutput)
}

// Vector search configuration for the Neptune Graph
func (o GraphGraphOutput) VectorSearchConfiguration() GraphGraphVectorSearchConfigurationPtrOutput {
	return o.ApplyT(func(v *GraphGraph) GraphGraphVectorSearchConfigurationPtrOutput { return v.VectorSearchConfiguration }).(GraphGraphVectorSearchConfigurationPtrOutput)
}

type GraphGraphArrayOutput struct{ *pulumi.OutputState }

func (GraphGraphArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GraphGraph)(nil)).Elem()
}

func (o GraphGraphArrayOutput) ToGraphGraphArrayOutput() GraphGraphArrayOutput {
	return o
}

func (o GraphGraphArrayOutput) ToGraphGraphArrayOutputWithContext(ctx context.Context) GraphGraphArrayOutput {
	return o
}

func (o GraphGraphArrayOutput) Index(i pulumi.IntInput) GraphGraphOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GraphGraph {
		return vs[0].([]*GraphGraph)[vs[1].(int)]
	}).(GraphGraphOutput)
}

type GraphGraphMapOutput struct{ *pulumi.OutputState }

func (GraphGraphMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GraphGraph)(nil)).Elem()
}

func (o GraphGraphMapOutput) ToGraphGraphMapOutput() GraphGraphMapOutput {
	return o
}

func (o GraphGraphMapOutput) ToGraphGraphMapOutputWithContext(ctx context.Context) GraphGraphMapOutput {
	return o
}

func (o GraphGraphMapOutput) MapIndex(k pulumi.StringInput) GraphGraphOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GraphGraph {
		return vs[0].(map[string]*GraphGraph)[vs[1].(string)]
	}).(GraphGraphOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GraphGraphInput)(nil)).Elem(), &GraphGraph{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphGraphArrayInput)(nil)).Elem(), GraphGraphArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphGraphMapInput)(nil)).Elem(), GraphGraphMap{})
	pulumi.RegisterOutputType(GraphGraphOutput{})
	pulumi.RegisterOutputType(GraphGraphArrayOutput{})
	pulumi.RegisterOutputType(GraphGraphMapOutput{})
}
