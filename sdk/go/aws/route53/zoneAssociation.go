// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Route53 private Hosted Zone to VPC association resource.
type ZoneAssociation struct {
	s *pulumi.ResourceState
}

// NewZoneAssociation registers a new resource with the given unique name, arguments, and options.
func NewZoneAssociation(ctx *pulumi.Context,
	name string, args *ZoneAssociationArgs, opts ...pulumi.ResourceOpt) (*ZoneAssociation, error) {
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil || args.ZoneId == nil {
		return nil, errors.New("missing required argument 'ZoneId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["vpcId"] = nil
		inputs["vpcRegion"] = nil
		inputs["zoneId"] = nil
	} else {
		inputs["vpcId"] = args.VpcId
		inputs["vpcRegion"] = args.VpcRegion
		inputs["zoneId"] = args.ZoneId
	}
	s, err := ctx.RegisterResource("aws:route53/zoneAssociation:ZoneAssociation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ZoneAssociation{s: s}, nil
}

// GetZoneAssociation gets an existing ZoneAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZoneAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ZoneAssociationState, opts ...pulumi.ResourceOpt) (*ZoneAssociation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["vpcId"] = state.VpcId
		inputs["vpcRegion"] = state.VpcRegion
		inputs["zoneId"] = state.ZoneId
	}
	s, err := ctx.ReadResource("aws:route53/zoneAssociation:ZoneAssociation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ZoneAssociation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ZoneAssociation) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ZoneAssociation) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The VPC to associate with the private hosted zone.
func (r *ZoneAssociation) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// The VPC's region. Defaults to the region of the AWS provider.
func (r *ZoneAssociation) VpcRegion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcRegion"])
}

// The private hosted zone to associate.
func (r *ZoneAssociation) ZoneId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zoneId"])
}

// Input properties used for looking up and filtering ZoneAssociation resources.
type ZoneAssociationState struct {
	// The VPC to associate with the private hosted zone.
	VpcId interface{}
	// The VPC's region. Defaults to the region of the AWS provider.
	VpcRegion interface{}
	// The private hosted zone to associate.
	ZoneId interface{}
}

// The set of arguments for constructing a ZoneAssociation resource.
type ZoneAssociationArgs struct {
	// The VPC to associate with the private hosted zone.
	VpcId interface{}
	// The VPC's region. Defaults to the region of the AWS provider.
	VpcRegion interface{}
	// The private hosted zone to associate.
	ZoneId interface{}
}
