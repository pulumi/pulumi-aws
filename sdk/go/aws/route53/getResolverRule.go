// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupResolverRule(ctx *pulumi.Context, args *LookupResolverRuleArgs, opts ...pulumi.InvokeOption) (*LookupResolverRuleResult, error) {
	var rv LookupResolverRuleResult
	err := ctx.Invoke("aws:route53/getResolverRule:getResolverRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverRule.
type LookupResolverRuleArgs struct {
	DomainName         *string           `pulumi:"domainName"`
	Name               *string           `pulumi:"name"`
	ResolverEndpointId *string           `pulumi:"resolverEndpointId"`
	ResolverRuleId     *string           `pulumi:"resolverRuleId"`
	RuleType           *string           `pulumi:"ruleType"`
	Tags               map[string]string `pulumi:"tags"`
}

// A collection of values returned by getResolverRule.
type LookupResolverRuleResult struct {
	Arn        string `pulumi:"arn"`
	DomainName string `pulumi:"domainName"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string            `pulumi:"id"`
	Name               string            `pulumi:"name"`
	OwnerId            string            `pulumi:"ownerId"`
	ResolverEndpointId string            `pulumi:"resolverEndpointId"`
	ResolverRuleId     string            `pulumi:"resolverRuleId"`
	RuleType           string            `pulumi:"ruleType"`
	ShareStatus        string            `pulumi:"shareStatus"`
	Tags               map[string]string `pulumi:"tags"`
}

func LookupResolverRuleOutput(ctx *pulumi.Context, args LookupResolverRuleOutputArgs, opts ...pulumi.InvokeOption) LookupResolverRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResolverRuleResult, error) {
			args := v.(LookupResolverRuleArgs)
			r, err := LookupResolverRule(ctx, &args, opts...)
			var s LookupResolverRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResolverRuleResultOutput)
}

// A collection of arguments for invoking getResolverRule.
type LookupResolverRuleOutputArgs struct {
	DomainName         pulumi.StringPtrInput `pulumi:"domainName"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	ResolverEndpointId pulumi.StringPtrInput `pulumi:"resolverEndpointId"`
	ResolverRuleId     pulumi.StringPtrInput `pulumi:"resolverRuleId"`
	RuleType           pulumi.StringPtrInput `pulumi:"ruleType"`
	Tags               pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupResolverRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverRuleArgs)(nil)).Elem()
}

// A collection of values returned by getResolverRule.
type LookupResolverRuleResultOutput struct{ *pulumi.OutputState }

func (LookupResolverRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverRuleResult)(nil)).Elem()
}

func (o LookupResolverRuleResultOutput) ToLookupResolverRuleResultOutput() LookupResolverRuleResultOutput {
	return o
}

func (o LookupResolverRuleResultOutput) ToLookupResolverRuleResultOutputWithContext(ctx context.Context) LookupResolverRuleResultOutput {
	return o
}

func (o LookupResolverRuleResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResolverRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) ResolverEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.ResolverEndpointId }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) ResolverRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.ResolverRuleId }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.RuleType }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) ShareStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) string { return v.ShareStatus }).(pulumi.StringOutput)
}

func (o LookupResolverRuleResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupResolverRuleResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResolverRuleResultOutput{})
}
