// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Route 53 Profiles Resource Association.
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import Route 53 Profiles Resource Association using the `example_id_arg`. For example:
//
// ```sh
// $ pulumi import aws:route53/profilesResourceAssociation:ProfilesResourceAssociation example rpa-id-12345678
// ```
type ProfilesResourceAssociation struct {
	pulumi.CustomResourceState

	// Name of the Profile Resource Association.
	Name    pulumi.StringOutput `pulumi:"name"`
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// ID of the profile associated with the VPC.
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// Resource ID of the resource to be associated with the profile.
	ResourceArn pulumi.StringOutput `pulumi:"resourceArn"`
	// Resource properties for the resource to be associated with the profile.
	ResourceProperties pulumi.StringPtrOutput `pulumi:"resourceProperties"`
	// Type of resource associated with the profile.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
	Status pulumi.StringOutput `pulumi:"status"`
	// Status message of the Profile Resource Association.
	StatusMessage pulumi.StringOutput                          `pulumi:"statusMessage"`
	Timeouts      ProfilesResourceAssociationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewProfilesResourceAssociation registers a new resource with the given unique name, arguments, and options.
func NewProfilesResourceAssociation(ctx *pulumi.Context,
	name string, args *ProfilesResourceAssociationArgs, opts ...pulumi.ResourceOption) (*ProfilesResourceAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ProfileId'")
	}
	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProfilesResourceAssociation
	err := ctx.RegisterResource("aws:route53/profilesResourceAssociation:ProfilesResourceAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfilesResourceAssociation gets an existing ProfilesResourceAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfilesResourceAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfilesResourceAssociationState, opts ...pulumi.ResourceOption) (*ProfilesResourceAssociation, error) {
	var resource ProfilesResourceAssociation
	err := ctx.ReadResource("aws:route53/profilesResourceAssociation:ProfilesResourceAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProfilesResourceAssociation resources.
type profilesResourceAssociationState struct {
	// Name of the Profile Resource Association.
	Name    *string `pulumi:"name"`
	OwnerId *string `pulumi:"ownerId"`
	// ID of the profile associated with the VPC.
	ProfileId *string `pulumi:"profileId"`
	// Resource ID of the resource to be associated with the profile.
	ResourceArn *string `pulumi:"resourceArn"`
	// Resource properties for the resource to be associated with the profile.
	ResourceProperties *string `pulumi:"resourceProperties"`
	// Type of resource associated with the profile.
	ResourceType *string `pulumi:"resourceType"`
	// Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
	Status *string `pulumi:"status"`
	// Status message of the Profile Resource Association.
	StatusMessage *string                              `pulumi:"statusMessage"`
	Timeouts      *ProfilesResourceAssociationTimeouts `pulumi:"timeouts"`
}

type ProfilesResourceAssociationState struct {
	// Name of the Profile Resource Association.
	Name    pulumi.StringPtrInput
	OwnerId pulumi.StringPtrInput
	// ID of the profile associated with the VPC.
	ProfileId pulumi.StringPtrInput
	// Resource ID of the resource to be associated with the profile.
	ResourceArn pulumi.StringPtrInput
	// Resource properties for the resource to be associated with the profile.
	ResourceProperties pulumi.StringPtrInput
	// Type of resource associated with the profile.
	ResourceType pulumi.StringPtrInput
	// Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
	Status pulumi.StringPtrInput
	// Status message of the Profile Resource Association.
	StatusMessage pulumi.StringPtrInput
	Timeouts      ProfilesResourceAssociationTimeoutsPtrInput
}

func (ProfilesResourceAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*profilesResourceAssociationState)(nil)).Elem()
}

type profilesResourceAssociationArgs struct {
	// Name of the Profile Resource Association.
	Name *string `pulumi:"name"`
	// ID of the profile associated with the VPC.
	ProfileId string `pulumi:"profileId"`
	// Resource ID of the resource to be associated with the profile.
	ResourceArn string `pulumi:"resourceArn"`
	// Resource properties for the resource to be associated with the profile.
	ResourceProperties *string                              `pulumi:"resourceProperties"`
	Timeouts           *ProfilesResourceAssociationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ProfilesResourceAssociation resource.
type ProfilesResourceAssociationArgs struct {
	// Name of the Profile Resource Association.
	Name pulumi.StringPtrInput
	// ID of the profile associated with the VPC.
	ProfileId pulumi.StringInput
	// Resource ID of the resource to be associated with the profile.
	ResourceArn pulumi.StringInput
	// Resource properties for the resource to be associated with the profile.
	ResourceProperties pulumi.StringPtrInput
	Timeouts           ProfilesResourceAssociationTimeoutsPtrInput
}

func (ProfilesResourceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profilesResourceAssociationArgs)(nil)).Elem()
}

type ProfilesResourceAssociationInput interface {
	pulumi.Input

	ToProfilesResourceAssociationOutput() ProfilesResourceAssociationOutput
	ToProfilesResourceAssociationOutputWithContext(ctx context.Context) ProfilesResourceAssociationOutput
}

func (*ProfilesResourceAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilesResourceAssociation)(nil)).Elem()
}

func (i *ProfilesResourceAssociation) ToProfilesResourceAssociationOutput() ProfilesResourceAssociationOutput {
	return i.ToProfilesResourceAssociationOutputWithContext(context.Background())
}

func (i *ProfilesResourceAssociation) ToProfilesResourceAssociationOutputWithContext(ctx context.Context) ProfilesResourceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilesResourceAssociationOutput)
}

// ProfilesResourceAssociationArrayInput is an input type that accepts ProfilesResourceAssociationArray and ProfilesResourceAssociationArrayOutput values.
// You can construct a concrete instance of `ProfilesResourceAssociationArrayInput` via:
//
//	ProfilesResourceAssociationArray{ ProfilesResourceAssociationArgs{...} }
type ProfilesResourceAssociationArrayInput interface {
	pulumi.Input

	ToProfilesResourceAssociationArrayOutput() ProfilesResourceAssociationArrayOutput
	ToProfilesResourceAssociationArrayOutputWithContext(context.Context) ProfilesResourceAssociationArrayOutput
}

type ProfilesResourceAssociationArray []ProfilesResourceAssociationInput

func (ProfilesResourceAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfilesResourceAssociation)(nil)).Elem()
}

func (i ProfilesResourceAssociationArray) ToProfilesResourceAssociationArrayOutput() ProfilesResourceAssociationArrayOutput {
	return i.ToProfilesResourceAssociationArrayOutputWithContext(context.Background())
}

func (i ProfilesResourceAssociationArray) ToProfilesResourceAssociationArrayOutputWithContext(ctx context.Context) ProfilesResourceAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilesResourceAssociationArrayOutput)
}

// ProfilesResourceAssociationMapInput is an input type that accepts ProfilesResourceAssociationMap and ProfilesResourceAssociationMapOutput values.
// You can construct a concrete instance of `ProfilesResourceAssociationMapInput` via:
//
//	ProfilesResourceAssociationMap{ "key": ProfilesResourceAssociationArgs{...} }
type ProfilesResourceAssociationMapInput interface {
	pulumi.Input

	ToProfilesResourceAssociationMapOutput() ProfilesResourceAssociationMapOutput
	ToProfilesResourceAssociationMapOutputWithContext(context.Context) ProfilesResourceAssociationMapOutput
}

type ProfilesResourceAssociationMap map[string]ProfilesResourceAssociationInput

func (ProfilesResourceAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfilesResourceAssociation)(nil)).Elem()
}

func (i ProfilesResourceAssociationMap) ToProfilesResourceAssociationMapOutput() ProfilesResourceAssociationMapOutput {
	return i.ToProfilesResourceAssociationMapOutputWithContext(context.Background())
}

func (i ProfilesResourceAssociationMap) ToProfilesResourceAssociationMapOutputWithContext(ctx context.Context) ProfilesResourceAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfilesResourceAssociationMapOutput)
}

type ProfilesResourceAssociationOutput struct{ *pulumi.OutputState }

func (ProfilesResourceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfilesResourceAssociation)(nil)).Elem()
}

func (o ProfilesResourceAssociationOutput) ToProfilesResourceAssociationOutput() ProfilesResourceAssociationOutput {
	return o
}

func (o ProfilesResourceAssociationOutput) ToProfilesResourceAssociationOutputWithContext(ctx context.Context) ProfilesResourceAssociationOutput {
	return o
}

// Name of the Profile Resource Association.
func (o ProfilesResourceAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProfilesResourceAssociationOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// ID of the profile associated with the VPC.
func (o ProfilesResourceAssociationOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// Resource ID of the resource to be associated with the profile.
func (o ProfilesResourceAssociationOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

// Resource properties for the resource to be associated with the profile.
func (o ProfilesResourceAssociationOutput) ResourceProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringPtrOutput { return v.ResourceProperties }).(pulumi.StringPtrOutput)
}

// Type of resource associated with the profile.
func (o ProfilesResourceAssociationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
func (o ProfilesResourceAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Status message of the Profile Resource Association.
func (o ProfilesResourceAssociationOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) pulumi.StringOutput { return v.StatusMessage }).(pulumi.StringOutput)
}

func (o ProfilesResourceAssociationOutput) Timeouts() ProfilesResourceAssociationTimeoutsPtrOutput {
	return o.ApplyT(func(v *ProfilesResourceAssociation) ProfilesResourceAssociationTimeoutsPtrOutput { return v.Timeouts }).(ProfilesResourceAssociationTimeoutsPtrOutput)
}

type ProfilesResourceAssociationArrayOutput struct{ *pulumi.OutputState }

func (ProfilesResourceAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfilesResourceAssociation)(nil)).Elem()
}

func (o ProfilesResourceAssociationArrayOutput) ToProfilesResourceAssociationArrayOutput() ProfilesResourceAssociationArrayOutput {
	return o
}

func (o ProfilesResourceAssociationArrayOutput) ToProfilesResourceAssociationArrayOutputWithContext(ctx context.Context) ProfilesResourceAssociationArrayOutput {
	return o
}

func (o ProfilesResourceAssociationArrayOutput) Index(i pulumi.IntInput) ProfilesResourceAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProfilesResourceAssociation {
		return vs[0].([]*ProfilesResourceAssociation)[vs[1].(int)]
	}).(ProfilesResourceAssociationOutput)
}

type ProfilesResourceAssociationMapOutput struct{ *pulumi.OutputState }

func (ProfilesResourceAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfilesResourceAssociation)(nil)).Elem()
}

func (o ProfilesResourceAssociationMapOutput) ToProfilesResourceAssociationMapOutput() ProfilesResourceAssociationMapOutput {
	return o
}

func (o ProfilesResourceAssociationMapOutput) ToProfilesResourceAssociationMapOutputWithContext(ctx context.Context) ProfilesResourceAssociationMapOutput {
	return o
}

func (o ProfilesResourceAssociationMapOutput) MapIndex(k pulumi.StringInput) ProfilesResourceAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProfilesResourceAssociation {
		return vs[0].(map[string]*ProfilesResourceAssociation)[vs[1].(string)]
	}).(ProfilesResourceAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfilesResourceAssociationInput)(nil)).Elem(), &ProfilesResourceAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfilesResourceAssociationArrayInput)(nil)).Elem(), ProfilesResourceAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfilesResourceAssociationMapInput)(nil)).Elem(), ProfilesResourceAssociationMap{})
	pulumi.RegisterOutputType(ProfilesResourceAssociationOutput{})
	pulumi.RegisterOutputType(ProfilesResourceAssociationArrayOutput{})
	pulumi.RegisterOutputType(ProfilesResourceAssociationMapOutput{})
}
