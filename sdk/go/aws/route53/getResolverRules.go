// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetResolverRules(ctx *pulumi.Context, args *GetResolverRulesArgs, opts ...pulumi.InvokeOption) (*GetResolverRulesResult, error) {
	var rv GetResolverRulesResult
	err := ctx.Invoke("aws:route53/getResolverRules:getResolverRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverRules.
type GetResolverRulesArgs struct {
	NameRegex          *string `pulumi:"nameRegex"`
	OwnerId            *string `pulumi:"ownerId"`
	ResolverEndpointId *string `pulumi:"resolverEndpointId"`
	RuleType           *string `pulumi:"ruleType"`
	ShareStatus        *string `pulumi:"shareStatus"`
}

// A collection of values returned by getResolverRules.
type GetResolverRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string   `pulumi:"id"`
	NameRegex          *string  `pulumi:"nameRegex"`
	OwnerId            *string  `pulumi:"ownerId"`
	ResolverEndpointId *string  `pulumi:"resolverEndpointId"`
	ResolverRuleIds    []string `pulumi:"resolverRuleIds"`
	RuleType           *string  `pulumi:"ruleType"`
	ShareStatus        *string  `pulumi:"shareStatus"`
}

func GetResolverRulesOutput(ctx *pulumi.Context, args GetResolverRulesOutputArgs, opts ...pulumi.InvokeOption) GetResolverRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetResolverRulesResult, error) {
			args := v.(GetResolverRulesArgs)
			r, err := GetResolverRules(ctx, &args, opts...)
			var s GetResolverRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetResolverRulesResultOutput)
}

// A collection of arguments for invoking getResolverRules.
type GetResolverRulesOutputArgs struct {
	NameRegex          pulumi.StringPtrInput `pulumi:"nameRegex"`
	OwnerId            pulumi.StringPtrInput `pulumi:"ownerId"`
	ResolverEndpointId pulumi.StringPtrInput `pulumi:"resolverEndpointId"`
	RuleType           pulumi.StringPtrInput `pulumi:"ruleType"`
	ShareStatus        pulumi.StringPtrInput `pulumi:"shareStatus"`
}

func (GetResolverRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverRulesArgs)(nil)).Elem()
}

// A collection of values returned by getResolverRules.
type GetResolverRulesResultOutput struct{ *pulumi.OutputState }

func (GetResolverRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolverRulesResult)(nil)).Elem()
}

func (o GetResolverRulesResultOutput) ToGetResolverRulesResultOutput() GetResolverRulesResultOutput {
	return o
}

func (o GetResolverRulesResultOutput) ToGetResolverRulesResultOutputWithContext(ctx context.Context) GetResolverRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetResolverRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolverRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetResolverRulesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverRulesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetResolverRulesResultOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverRulesResult) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

func (o GetResolverRulesResultOutput) ResolverEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverRulesResult) *string { return v.ResolverEndpointId }).(pulumi.StringPtrOutput)
}

func (o GetResolverRulesResultOutput) ResolverRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResolverRulesResult) []string { return v.ResolverRuleIds }).(pulumi.StringArrayOutput)
}

func (o GetResolverRulesResultOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverRulesResult) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

func (o GetResolverRulesResultOutput) ShareStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResolverRulesResult) *string { return v.ShareStatus }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResolverRulesResultOutput{})
}
