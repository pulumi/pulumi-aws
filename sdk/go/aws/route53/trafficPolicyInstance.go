// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TrafficPolicyInstance struct {
	pulumi.CustomResourceState

	HostedZoneId         pulumi.StringOutput `pulumi:"hostedZoneId"`
	Name                 pulumi.StringOutput `pulumi:"name"`
	TrafficPolicyId      pulumi.StringOutput `pulumi:"trafficPolicyId"`
	TrafficPolicyVersion pulumi.IntOutput    `pulumi:"trafficPolicyVersion"`
	Ttl                  pulumi.IntOutput    `pulumi:"ttl"`
}

// NewTrafficPolicyInstance registers a new resource with the given unique name, arguments, and options.
func NewTrafficPolicyInstance(ctx *pulumi.Context,
	name string, args *TrafficPolicyInstanceArgs, opts ...pulumi.ResourceOption) (*TrafficPolicyInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostedZoneId == nil {
		return nil, errors.New("invalid value for required argument 'HostedZoneId'")
	}
	if args.TrafficPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'TrafficPolicyId'")
	}
	if args.TrafficPolicyVersion == nil {
		return nil, errors.New("invalid value for required argument 'TrafficPolicyVersion'")
	}
	if args.Ttl == nil {
		return nil, errors.New("invalid value for required argument 'Ttl'")
	}
	var resource TrafficPolicyInstance
	err := ctx.RegisterResource("aws:route53/trafficPolicyInstance:TrafficPolicyInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficPolicyInstance gets an existing TrafficPolicyInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficPolicyInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficPolicyInstanceState, opts ...pulumi.ResourceOption) (*TrafficPolicyInstance, error) {
	var resource TrafficPolicyInstance
	err := ctx.ReadResource("aws:route53/trafficPolicyInstance:TrafficPolicyInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficPolicyInstance resources.
type trafficPolicyInstanceState struct {
	HostedZoneId         *string `pulumi:"hostedZoneId"`
	Name                 *string `pulumi:"name"`
	TrafficPolicyId      *string `pulumi:"trafficPolicyId"`
	TrafficPolicyVersion *int    `pulumi:"trafficPolicyVersion"`
	Ttl                  *int    `pulumi:"ttl"`
}

type TrafficPolicyInstanceState struct {
	HostedZoneId         pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	TrafficPolicyId      pulumi.StringPtrInput
	TrafficPolicyVersion pulumi.IntPtrInput
	Ttl                  pulumi.IntPtrInput
}

func (TrafficPolicyInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficPolicyInstanceState)(nil)).Elem()
}

type trafficPolicyInstanceArgs struct {
	HostedZoneId         string  `pulumi:"hostedZoneId"`
	Name                 *string `pulumi:"name"`
	TrafficPolicyId      string  `pulumi:"trafficPolicyId"`
	TrafficPolicyVersion int     `pulumi:"trafficPolicyVersion"`
	Ttl                  int     `pulumi:"ttl"`
}

// The set of arguments for constructing a TrafficPolicyInstance resource.
type TrafficPolicyInstanceArgs struct {
	HostedZoneId         pulumi.StringInput
	Name                 pulumi.StringPtrInput
	TrafficPolicyId      pulumi.StringInput
	TrafficPolicyVersion pulumi.IntInput
	Ttl                  pulumi.IntInput
}

func (TrafficPolicyInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficPolicyInstanceArgs)(nil)).Elem()
}

type TrafficPolicyInstanceInput interface {
	pulumi.Input

	ToTrafficPolicyInstanceOutput() TrafficPolicyInstanceOutput
	ToTrafficPolicyInstanceOutputWithContext(ctx context.Context) TrafficPolicyInstanceOutput
}

func (*TrafficPolicyInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficPolicyInstance)(nil)).Elem()
}

func (i *TrafficPolicyInstance) ToTrafficPolicyInstanceOutput() TrafficPolicyInstanceOutput {
	return i.ToTrafficPolicyInstanceOutputWithContext(context.Background())
}

func (i *TrafficPolicyInstance) ToTrafficPolicyInstanceOutputWithContext(ctx context.Context) TrafficPolicyInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficPolicyInstanceOutput)
}

// TrafficPolicyInstanceArrayInput is an input type that accepts TrafficPolicyInstanceArray and TrafficPolicyInstanceArrayOutput values.
// You can construct a concrete instance of `TrafficPolicyInstanceArrayInput` via:
//
//	TrafficPolicyInstanceArray{ TrafficPolicyInstanceArgs{...} }
type TrafficPolicyInstanceArrayInput interface {
	pulumi.Input

	ToTrafficPolicyInstanceArrayOutput() TrafficPolicyInstanceArrayOutput
	ToTrafficPolicyInstanceArrayOutputWithContext(context.Context) TrafficPolicyInstanceArrayOutput
}

type TrafficPolicyInstanceArray []TrafficPolicyInstanceInput

func (TrafficPolicyInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficPolicyInstance)(nil)).Elem()
}

func (i TrafficPolicyInstanceArray) ToTrafficPolicyInstanceArrayOutput() TrafficPolicyInstanceArrayOutput {
	return i.ToTrafficPolicyInstanceArrayOutputWithContext(context.Background())
}

func (i TrafficPolicyInstanceArray) ToTrafficPolicyInstanceArrayOutputWithContext(ctx context.Context) TrafficPolicyInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficPolicyInstanceArrayOutput)
}

// TrafficPolicyInstanceMapInput is an input type that accepts TrafficPolicyInstanceMap and TrafficPolicyInstanceMapOutput values.
// You can construct a concrete instance of `TrafficPolicyInstanceMapInput` via:
//
//	TrafficPolicyInstanceMap{ "key": TrafficPolicyInstanceArgs{...} }
type TrafficPolicyInstanceMapInput interface {
	pulumi.Input

	ToTrafficPolicyInstanceMapOutput() TrafficPolicyInstanceMapOutput
	ToTrafficPolicyInstanceMapOutputWithContext(context.Context) TrafficPolicyInstanceMapOutput
}

type TrafficPolicyInstanceMap map[string]TrafficPolicyInstanceInput

func (TrafficPolicyInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficPolicyInstance)(nil)).Elem()
}

func (i TrafficPolicyInstanceMap) ToTrafficPolicyInstanceMapOutput() TrafficPolicyInstanceMapOutput {
	return i.ToTrafficPolicyInstanceMapOutputWithContext(context.Background())
}

func (i TrafficPolicyInstanceMap) ToTrafficPolicyInstanceMapOutputWithContext(ctx context.Context) TrafficPolicyInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficPolicyInstanceMapOutput)
}

type TrafficPolicyInstanceOutput struct{ *pulumi.OutputState }

func (TrafficPolicyInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficPolicyInstance)(nil)).Elem()
}

func (o TrafficPolicyInstanceOutput) ToTrafficPolicyInstanceOutput() TrafficPolicyInstanceOutput {
	return o
}

func (o TrafficPolicyInstanceOutput) ToTrafficPolicyInstanceOutputWithContext(ctx context.Context) TrafficPolicyInstanceOutput {
	return o
}

func (o TrafficPolicyInstanceOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficPolicyInstance) pulumi.StringOutput { return v.HostedZoneId }).(pulumi.StringOutput)
}

func (o TrafficPolicyInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficPolicyInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TrafficPolicyInstanceOutput) TrafficPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficPolicyInstance) pulumi.StringOutput { return v.TrafficPolicyId }).(pulumi.StringOutput)
}

func (o TrafficPolicyInstanceOutput) TrafficPolicyVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficPolicyInstance) pulumi.IntOutput { return v.TrafficPolicyVersion }).(pulumi.IntOutput)
}

func (o TrafficPolicyInstanceOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficPolicyInstance) pulumi.IntOutput { return v.Ttl }).(pulumi.IntOutput)
}

type TrafficPolicyInstanceArrayOutput struct{ *pulumi.OutputState }

func (TrafficPolicyInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficPolicyInstance)(nil)).Elem()
}

func (o TrafficPolicyInstanceArrayOutput) ToTrafficPolicyInstanceArrayOutput() TrafficPolicyInstanceArrayOutput {
	return o
}

func (o TrafficPolicyInstanceArrayOutput) ToTrafficPolicyInstanceArrayOutputWithContext(ctx context.Context) TrafficPolicyInstanceArrayOutput {
	return o
}

func (o TrafficPolicyInstanceArrayOutput) Index(i pulumi.IntInput) TrafficPolicyInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficPolicyInstance {
		return vs[0].([]*TrafficPolicyInstance)[vs[1].(int)]
	}).(TrafficPolicyInstanceOutput)
}

type TrafficPolicyInstanceMapOutput struct{ *pulumi.OutputState }

func (TrafficPolicyInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficPolicyInstance)(nil)).Elem()
}

func (o TrafficPolicyInstanceMapOutput) ToTrafficPolicyInstanceMapOutput() TrafficPolicyInstanceMapOutput {
	return o
}

func (o TrafficPolicyInstanceMapOutput) ToTrafficPolicyInstanceMapOutputWithContext(ctx context.Context) TrafficPolicyInstanceMapOutput {
	return o
}

func (o TrafficPolicyInstanceMapOutput) MapIndex(k pulumi.StringInput) TrafficPolicyInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficPolicyInstance {
		return vs[0].(map[string]*TrafficPolicyInstance)[vs[1].(string)]
	}).(TrafficPolicyInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficPolicyInstanceInput)(nil)).Elem(), &TrafficPolicyInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficPolicyInstanceArrayInput)(nil)).Elem(), TrafficPolicyInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficPolicyInstanceMapInput)(nil)).Elem(), TrafficPolicyInstanceMap{})
	pulumi.RegisterOutputType(TrafficPolicyInstanceOutput{})
	pulumi.RegisterOutputType(TrafficPolicyInstanceArrayOutput{})
	pulumi.RegisterOutputType(TrafficPolicyInstanceMapOutput{})
}
