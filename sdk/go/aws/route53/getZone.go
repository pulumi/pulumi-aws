// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `route53.Zone` provides details about a specific Route 53 Hosted Zone.
//
// This data source allows to find a Hosted Zone ID given Hosted Zone name and certain search criteria.
//
// ## Example Usage
//
// The following example shows how to get a Hosted Zone from its name and from this data how to create a Record Set.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/route53"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			selected, err := route53.LookupZone(ctx, &route53.LookupZoneArgs{
//				Name:        pulumi.StringRef("test.com."),
//				PrivateZone: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = route53.NewRecord(ctx, "www", &route53.RecordArgs{
//				ZoneId: *pulumi.String(selected.ZoneId),
//				Name:   pulumi.String(fmt.Sprintf("www.%v", selected.Name)),
//				Type:   pulumi.String("A"),
//				Ttl:    pulumi.Int(300),
//				Records: pulumi.StringArray{
//					pulumi.String("10.0.0.1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupZone(ctx *pulumi.Context, args *LookupZoneArgs, opts ...pulumi.InvokeOption) (*LookupZoneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneResult
	err := ctx.Invoke("aws:route53/getZone:getZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZone.
type LookupZoneArgs struct {
	// Hosted Zone name of the desired Hosted Zone.
	Name *string `pulumi:"name"`
	// Used with `name` field to get a private Hosted Zone.
	PrivateZone *bool `pulumi:"privateZone"`
	// The number of Record Set in the Hosted Zone.
	ResourceRecordSetCount *int `pulumi:"resourceRecordSetCount"`
	// Used with `name` field. A map of tags, each pair of which must exactly match a pair on the desired Hosted Zone.
	Tags map[string]string `pulumi:"tags"`
	// Used with `name` field to get a private Hosted Zone associated with the vpcId (in this case, privateZone is not mandatory).
	VpcId *string `pulumi:"vpcId"`
	// Hosted Zone id of the desired Hosted Zone.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getZone.
type LookupZoneResult struct {
	// ARN of the Hosted Zone.
	Arn string `pulumi:"arn"`
	// Caller Reference of the Hosted Zone.
	CallerReference string `pulumi:"callerReference"`
	// Comment field of the Hosted Zone.
	Comment string `pulumi:"comment"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The description provided by the service that created the Hosted Zone (e.g., `arn:aws:servicediscovery:us-east-1:1234567890:namespace/ns-xxxxxxxxxxxxxxxx`).
	LinkedServiceDescription string `pulumi:"linkedServiceDescription"`
	// The service that created the Hosted Zone (e.g., `servicediscovery.amazonaws.com`).
	LinkedServicePrincipal string `pulumi:"linkedServicePrincipal"`
	Name                   string `pulumi:"name"`
	// List of DNS name servers for the Hosted Zone.
	NameServers []string `pulumi:"nameServers"`
	// The Route 53 name server that created the SOA record.
	PrimaryNameServer string `pulumi:"primaryNameServer"`
	PrivateZone       *bool  `pulumi:"privateZone"`
	// The number of Record Set in the Hosted Zone.
	ResourceRecordSetCount int               `pulumi:"resourceRecordSetCount"`
	Tags                   map[string]string `pulumi:"tags"`
	VpcId                  string            `pulumi:"vpcId"`
	ZoneId                 string            `pulumi:"zoneId"`
}

func LookupZoneOutput(ctx *pulumi.Context, args LookupZoneOutputArgs, opts ...pulumi.InvokeOption) LookupZoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZoneResult, error) {
			args := v.(LookupZoneArgs)
			r, err := LookupZone(ctx, &args, opts...)
			var s LookupZoneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZoneResultOutput)
}

// A collection of arguments for invoking getZone.
type LookupZoneOutputArgs struct {
	// Hosted Zone name of the desired Hosted Zone.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Used with `name` field to get a private Hosted Zone.
	PrivateZone pulumi.BoolPtrInput `pulumi:"privateZone"`
	// The number of Record Set in the Hosted Zone.
	ResourceRecordSetCount pulumi.IntPtrInput `pulumi:"resourceRecordSetCount"`
	// Used with `name` field. A map of tags, each pair of which must exactly match a pair on the desired Hosted Zone.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Used with `name` field to get a private Hosted Zone associated with the vpcId (in this case, privateZone is not mandatory).
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// Hosted Zone id of the desired Hosted Zone.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (LookupZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneArgs)(nil)).Elem()
}

// A collection of values returned by getZone.
type LookupZoneResultOutput struct{ *pulumi.OutputState }

func (LookupZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneResult)(nil)).Elem()
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutput() LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutputWithContext(ctx context.Context) LookupZoneResultOutput {
	return o
}

// ARN of the Hosted Zone.
func (o LookupZoneResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Caller Reference of the Hosted Zone.
func (o LookupZoneResultOutput) CallerReference() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.CallerReference }).(pulumi.StringOutput)
}

// Comment field of the Hosted Zone.
func (o LookupZoneResultOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Comment }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

// The description provided by the service that created the Hosted Zone (e.g., `arn:aws:servicediscovery:us-east-1:1234567890:namespace/ns-xxxxxxxxxxxxxxxx`).
func (o LookupZoneResultOutput) LinkedServiceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.LinkedServiceDescription }).(pulumi.StringOutput)
}

// The service that created the Hosted Zone (e.g., `servicediscovery.amazonaws.com`).
func (o LookupZoneResultOutput) LinkedServicePrincipal() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.LinkedServicePrincipal }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of DNS name servers for the Hosted Zone.
func (o LookupZoneResultOutput) NameServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []string { return v.NameServers }).(pulumi.StringArrayOutput)
}

// The Route 53 name server that created the SOA record.
func (o LookupZoneResultOutput) PrimaryNameServer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.PrimaryNameServer }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) PrivateZone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupZoneResult) *bool { return v.PrivateZone }).(pulumi.BoolPtrOutput)
}

// The number of Record Set in the Hosted Zone.
func (o LookupZoneResultOutput) ResourceRecordSetCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupZoneResult) int { return v.ResourceRecordSetCount }).(pulumi.IntOutput)
}

func (o LookupZoneResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupZoneResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupZoneResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneResultOutput{})
}
