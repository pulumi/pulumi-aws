// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `route53.ResolverEndpoint` provides details about a specific Route53 Resolver Endpoint.
//
// This data source allows to find a list of IPaddresses associated with a specific Route53 Resolver Endpoint.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/route53"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "rslvr-in-1abc2345ef678g91h"
// 		_, err := route53.LookupResolverEndpoint(ctx, &route53.LookupResolverEndpointArgs{
// 			ResolverEndpointId: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/route53"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := route53.LookupResolverEndpoint(ctx, &route53.LookupResolverEndpointArgs{
// 			Filters: []route53.GetResolverEndpointFilter{
// 				route53.GetResolverEndpointFilter{
// 					Name: "NAME",
// 					Values: []string{
// 						"MyResolverExampleName",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupResolverEndpoint(ctx *pulumi.Context, args *LookupResolverEndpointArgs, opts ...pulumi.InvokeOption) (*LookupResolverEndpointResult, error) {
	var rv LookupResolverEndpointResult
	err := ctx.Invoke("aws:route53/getResolverEndpoint:getResolverEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverEndpoint.
type LookupResolverEndpointArgs struct {
	// One or more name/value pairs to use as filters. There are
	// several valid keys, for a full reference, check out
	// [Route53resolver Filter value in the AWS API reference][1].
	Filters []GetResolverEndpointFilter `pulumi:"filters"`
	// The ID of the Route53 Resolver Endpoint.
	ResolverEndpointId *string `pulumi:"resolverEndpointId"`
}

// A collection of values returned by getResolverEndpoint.
type LookupResolverEndpointResult struct {
	Arn       string                      `pulumi:"arn"`
	Direction string                      `pulumi:"direction"`
	Filters   []GetResolverEndpointFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string   `pulumi:"id"`
	IpAddresses        []string `pulumi:"ipAddresses"`
	Name               string   `pulumi:"name"`
	ResolverEndpointId *string  `pulumi:"resolverEndpointId"`
	Status             string   `pulumi:"status"`
	VpcId              string   `pulumi:"vpcId"`
}
