// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Route 53 Resolver DNS Firewall rule group association resource.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/route53"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := route53.NewResolverFirewallRuleGroup(ctx, "example", &route53.ResolverFirewallRuleGroupArgs{
//				Name: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = route53.NewResolverFirewallRuleGroupAssociation(ctx, "example", &route53.ResolverFirewallRuleGroupAssociationArgs{
//				Name:                pulumi.String("example"),
//				FirewallRuleGroupId: example.ID(),
//				Priority:            pulumi.Int(100),
//				VpcId:               pulumi.Any(exampleAwsVpc.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Using `pulumi import`, import Route 53 Resolver DNS Firewall rule group associations using the Route 53 Resolver DNS Firewall rule group association ID. For example:
//
// ```sh
// $ pulumi import aws:route53/resolverFirewallRuleGroupAssociation:ResolverFirewallRuleGroupAssociation example rslvr-frgassoc-0123456789abcdef
// ```
type ResolverFirewallRuleGroupAssociation struct {
	pulumi.CustomResourceState

	// The ARN (Amazon Resource Name) of the firewall rule group association.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId pulumi.StringOutput `pulumi:"firewallRuleGroupId"`
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection pulumi.StringOutput `pulumi:"mutationProtection"`
	// A name that lets you identify the rule group association, to manage and use it.
	Name pulumi.StringOutput `pulumi:"name"`
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewResolverFirewallRuleGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewResolverFirewallRuleGroupAssociation(ctx *pulumi.Context,
	name string, args *ResolverFirewallRuleGroupAssociationArgs, opts ...pulumi.ResourceOption) (*ResolverFirewallRuleGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallRuleGroupId == nil {
		return nil, errors.New("invalid value for required argument 'FirewallRuleGroupId'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResolverFirewallRuleGroupAssociation
	err := ctx.RegisterResource("aws:route53/resolverFirewallRuleGroupAssociation:ResolverFirewallRuleGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResolverFirewallRuleGroupAssociation gets an existing ResolverFirewallRuleGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResolverFirewallRuleGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResolverFirewallRuleGroupAssociationState, opts ...pulumi.ResourceOption) (*ResolverFirewallRuleGroupAssociation, error) {
	var resource ResolverFirewallRuleGroupAssociation
	err := ctx.ReadResource("aws:route53/resolverFirewallRuleGroupAssociation:ResolverFirewallRuleGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResolverFirewallRuleGroupAssociation resources.
type resolverFirewallRuleGroupAssociationState struct {
	// The ARN (Amazon Resource Name) of the firewall rule group association.
	Arn *string `pulumi:"arn"`
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId *string `pulumi:"firewallRuleGroupId"`
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection *string `pulumi:"mutationProtection"`
	// A name that lets you identify the rule group association, to manage and use it.
	Name *string `pulumi:"name"`
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority *int `pulumi:"priority"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId *string `pulumi:"vpcId"`
}

type ResolverFirewallRuleGroupAssociationState struct {
	// The ARN (Amazon Resource Name) of the firewall rule group association.
	Arn pulumi.StringPtrInput
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId pulumi.StringPtrInput
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection pulumi.StringPtrInput
	// A name that lets you identify the rule group association, to manage and use it.
	Name pulumi.StringPtrInput
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority pulumi.IntPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId pulumi.StringPtrInput
}

func (ResolverFirewallRuleGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallRuleGroupAssociationState)(nil)).Elem()
}

type resolverFirewallRuleGroupAssociationArgs struct {
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId string `pulumi:"firewallRuleGroupId"`
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection *string `pulumi:"mutationProtection"`
	// A name that lets you identify the rule group association, to manage and use it.
	Name *string `pulumi:"name"`
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority int `pulumi:"priority"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a ResolverFirewallRuleGroupAssociation resource.
type ResolverFirewallRuleGroupAssociationArgs struct {
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId pulumi.StringInput
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection pulumi.StringPtrInput
	// A name that lets you identify the rule group association, to manage and use it.
	Name pulumi.StringPtrInput
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority pulumi.IntInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId pulumi.StringInput
}

func (ResolverFirewallRuleGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallRuleGroupAssociationArgs)(nil)).Elem()
}

type ResolverFirewallRuleGroupAssociationInput interface {
	pulumi.Input

	ToResolverFirewallRuleGroupAssociationOutput() ResolverFirewallRuleGroupAssociationOutput
	ToResolverFirewallRuleGroupAssociationOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationOutput
}

func (*ResolverFirewallRuleGroupAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverFirewallRuleGroupAssociation)(nil)).Elem()
}

func (i *ResolverFirewallRuleGroupAssociation) ToResolverFirewallRuleGroupAssociationOutput() ResolverFirewallRuleGroupAssociationOutput {
	return i.ToResolverFirewallRuleGroupAssociationOutputWithContext(context.Background())
}

func (i *ResolverFirewallRuleGroupAssociation) ToResolverFirewallRuleGroupAssociationOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverFirewallRuleGroupAssociationOutput)
}

// ResolverFirewallRuleGroupAssociationArrayInput is an input type that accepts ResolverFirewallRuleGroupAssociationArray and ResolverFirewallRuleGroupAssociationArrayOutput values.
// You can construct a concrete instance of `ResolverFirewallRuleGroupAssociationArrayInput` via:
//
//	ResolverFirewallRuleGroupAssociationArray{ ResolverFirewallRuleGroupAssociationArgs{...} }
type ResolverFirewallRuleGroupAssociationArrayInput interface {
	pulumi.Input

	ToResolverFirewallRuleGroupAssociationArrayOutput() ResolverFirewallRuleGroupAssociationArrayOutput
	ToResolverFirewallRuleGroupAssociationArrayOutputWithContext(context.Context) ResolverFirewallRuleGroupAssociationArrayOutput
}

type ResolverFirewallRuleGroupAssociationArray []ResolverFirewallRuleGroupAssociationInput

func (ResolverFirewallRuleGroupAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResolverFirewallRuleGroupAssociation)(nil)).Elem()
}

func (i ResolverFirewallRuleGroupAssociationArray) ToResolverFirewallRuleGroupAssociationArrayOutput() ResolverFirewallRuleGroupAssociationArrayOutput {
	return i.ToResolverFirewallRuleGroupAssociationArrayOutputWithContext(context.Background())
}

func (i ResolverFirewallRuleGroupAssociationArray) ToResolverFirewallRuleGroupAssociationArrayOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverFirewallRuleGroupAssociationArrayOutput)
}

// ResolverFirewallRuleGroupAssociationMapInput is an input type that accepts ResolverFirewallRuleGroupAssociationMap and ResolverFirewallRuleGroupAssociationMapOutput values.
// You can construct a concrete instance of `ResolverFirewallRuleGroupAssociationMapInput` via:
//
//	ResolverFirewallRuleGroupAssociationMap{ "key": ResolverFirewallRuleGroupAssociationArgs{...} }
type ResolverFirewallRuleGroupAssociationMapInput interface {
	pulumi.Input

	ToResolverFirewallRuleGroupAssociationMapOutput() ResolverFirewallRuleGroupAssociationMapOutput
	ToResolverFirewallRuleGroupAssociationMapOutputWithContext(context.Context) ResolverFirewallRuleGroupAssociationMapOutput
}

type ResolverFirewallRuleGroupAssociationMap map[string]ResolverFirewallRuleGroupAssociationInput

func (ResolverFirewallRuleGroupAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResolverFirewallRuleGroupAssociation)(nil)).Elem()
}

func (i ResolverFirewallRuleGroupAssociationMap) ToResolverFirewallRuleGroupAssociationMapOutput() ResolverFirewallRuleGroupAssociationMapOutput {
	return i.ToResolverFirewallRuleGroupAssociationMapOutputWithContext(context.Background())
}

func (i ResolverFirewallRuleGroupAssociationMap) ToResolverFirewallRuleGroupAssociationMapOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverFirewallRuleGroupAssociationMapOutput)
}

type ResolverFirewallRuleGroupAssociationOutput struct{ *pulumi.OutputState }

func (ResolverFirewallRuleGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverFirewallRuleGroupAssociation)(nil)).Elem()
}

func (o ResolverFirewallRuleGroupAssociationOutput) ToResolverFirewallRuleGroupAssociationOutput() ResolverFirewallRuleGroupAssociationOutput {
	return o
}

func (o ResolverFirewallRuleGroupAssociationOutput) ToResolverFirewallRuleGroupAssociationOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationOutput {
	return o
}

// The ARN (Amazon Resource Name) of the firewall rule group association.
func (o ResolverFirewallRuleGroupAssociationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The unique identifier of the firewall rule group.
func (o ResolverFirewallRuleGroupAssociationOutput) FirewallRuleGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.StringOutput { return v.FirewallRuleGroupId }).(pulumi.StringOutput)
}

// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
func (o ResolverFirewallRuleGroupAssociationOutput) MutationProtection() pulumi.StringOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.StringOutput { return v.MutationProtection }).(pulumi.StringOutput)
}

// A name that lets you identify the rule group association, to manage and use it.
func (o ResolverFirewallRuleGroupAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
func (o ResolverFirewallRuleGroupAssociationOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ResolverFirewallRuleGroupAssociationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o ResolverFirewallRuleGroupAssociationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The unique identifier of the VPC that you want to associate with the rule group.
func (o ResolverFirewallRuleGroupAssociationOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResolverFirewallRuleGroupAssociation) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type ResolverFirewallRuleGroupAssociationArrayOutput struct{ *pulumi.OutputState }

func (ResolverFirewallRuleGroupAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResolverFirewallRuleGroupAssociation)(nil)).Elem()
}

func (o ResolverFirewallRuleGroupAssociationArrayOutput) ToResolverFirewallRuleGroupAssociationArrayOutput() ResolverFirewallRuleGroupAssociationArrayOutput {
	return o
}

func (o ResolverFirewallRuleGroupAssociationArrayOutput) ToResolverFirewallRuleGroupAssociationArrayOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationArrayOutput {
	return o
}

func (o ResolverFirewallRuleGroupAssociationArrayOutput) Index(i pulumi.IntInput) ResolverFirewallRuleGroupAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResolverFirewallRuleGroupAssociation {
		return vs[0].([]*ResolverFirewallRuleGroupAssociation)[vs[1].(int)]
	}).(ResolverFirewallRuleGroupAssociationOutput)
}

type ResolverFirewallRuleGroupAssociationMapOutput struct{ *pulumi.OutputState }

func (ResolverFirewallRuleGroupAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResolverFirewallRuleGroupAssociation)(nil)).Elem()
}

func (o ResolverFirewallRuleGroupAssociationMapOutput) ToResolverFirewallRuleGroupAssociationMapOutput() ResolverFirewallRuleGroupAssociationMapOutput {
	return o
}

func (o ResolverFirewallRuleGroupAssociationMapOutput) ToResolverFirewallRuleGroupAssociationMapOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationMapOutput {
	return o
}

func (o ResolverFirewallRuleGroupAssociationMapOutput) MapIndex(k pulumi.StringInput) ResolverFirewallRuleGroupAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResolverFirewallRuleGroupAssociation {
		return vs[0].(map[string]*ResolverFirewallRuleGroupAssociation)[vs[1].(string)]
	}).(ResolverFirewallRuleGroupAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverFirewallRuleGroupAssociationInput)(nil)).Elem(), &ResolverFirewallRuleGroupAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverFirewallRuleGroupAssociationArrayInput)(nil)).Elem(), ResolverFirewallRuleGroupAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverFirewallRuleGroupAssociationMapInput)(nil)).Elem(), ResolverFirewallRuleGroupAssociationMap{})
	pulumi.RegisterOutputType(ResolverFirewallRuleGroupAssociationOutput{})
	pulumi.RegisterOutputType(ResolverFirewallRuleGroupAssociationArrayOutput{})
	pulumi.RegisterOutputType(ResolverFirewallRuleGroupAssociationMapOutput{})
}
