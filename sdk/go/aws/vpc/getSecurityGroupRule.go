// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `vpc.getSecurityGroupRule` provides details about a specific security group rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetSecurityGroupRule(ctx, &vpc.GetSecurityGroupRuleArgs{
//				SecurityGroupRuleId: pulumi.StringRef(_var.Security_group_rule_id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityGroupRule(ctx *pulumi.Context, args *GetSecurityGroupRuleArgs, opts ...pulumi.InvokeOption) (*GetSecurityGroupRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityGroupRuleResult
	err := ctx.Invoke("aws:vpc/getSecurityGroupRule:getSecurityGroupRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityGroupRule.
type GetSecurityGroupRuleArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetSecurityGroupRuleFilter `pulumi:"filters"`
	// ID of the security group rule to select.
	SecurityGroupRuleId *string `pulumi:"securityGroupRuleId"`
}

// A collection of values returned by getSecurityGroupRule.
type GetSecurityGroupRuleResult struct {
	// The Amazon Resource Name (ARN) of the security group rule.
	Arn string `pulumi:"arn"`
	// The destination IPv4 CIDR range.
	CidrIpv4 string `pulumi:"cidrIpv4"`
	// The destination IPv6 CIDR range.
	CidrIpv6 string `pulumi:"cidrIpv6"`
	// The security group rule description.
	Description string                       `pulumi:"description"`
	Filters     []GetSecurityGroupRuleFilter `pulumi:"filters"`
	// The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
	FromPort int    `pulumi:"fromPort"`
	Id       string `pulumi:"id"`
	// The IP protocol name or number. Use `-1` to specify all protocols.
	IpProtocol string `pulumi:"ipProtocol"`
	// Indicates whether the security group rule is an outbound rule.
	IsEgress bool `pulumi:"isEgress"`
	// The ID of the destination prefix list.
	PrefixListId string `pulumi:"prefixListId"`
	// The destination security group that is referenced in the rule.
	ReferencedSecurityGroupId string `pulumi:"referencedSecurityGroupId"`
	// The ID of the security group.
	SecurityGroupId     string `pulumi:"securityGroupId"`
	SecurityGroupRuleId string `pulumi:"securityGroupRuleId"`
	// A map of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
	ToPort int `pulumi:"toPort"`
}

func GetSecurityGroupRuleOutput(ctx *pulumi.Context, args GetSecurityGroupRuleOutputArgs, opts ...pulumi.InvokeOption) GetSecurityGroupRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityGroupRuleResult, error) {
			args := v.(GetSecurityGroupRuleArgs)
			r, err := GetSecurityGroupRule(ctx, &args, opts...)
			var s GetSecurityGroupRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityGroupRuleResultOutput)
}

// A collection of arguments for invoking getSecurityGroupRule.
type GetSecurityGroupRuleOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters GetSecurityGroupRuleFilterArrayInput `pulumi:"filters"`
	// ID of the security group rule to select.
	SecurityGroupRuleId pulumi.StringPtrInput `pulumi:"securityGroupRuleId"`
}

func (GetSecurityGroupRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRuleArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityGroupRule.
type GetSecurityGroupRuleResultOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRuleResult)(nil)).Elem()
}

func (o GetSecurityGroupRuleResultOutput) ToGetSecurityGroupRuleResultOutput() GetSecurityGroupRuleResultOutput {
	return o
}

func (o GetSecurityGroupRuleResultOutput) ToGetSecurityGroupRuleResultOutputWithContext(ctx context.Context) GetSecurityGroupRuleResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the security group rule.
func (o GetSecurityGroupRuleResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The destination IPv4 CIDR range.
func (o GetSecurityGroupRuleResultOutput) CidrIpv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.CidrIpv4 }).(pulumi.StringOutput)
}

// The destination IPv6 CIDR range.
func (o GetSecurityGroupRuleResultOutput) CidrIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.CidrIpv6 }).(pulumi.StringOutput)
}

// The security group rule description.
func (o GetSecurityGroupRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSecurityGroupRuleResultOutput) Filters() GetSecurityGroupRuleFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) []GetSecurityGroupRuleFilter { return v.Filters }).(GetSecurityGroupRuleFilterArrayOutput)
}

// The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
func (o GetSecurityGroupRuleResultOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o GetSecurityGroupRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IP protocol name or number. Use `-1` to specify all protocols.
func (o GetSecurityGroupRuleResultOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// Indicates whether the security group rule is an outbound rule.
func (o GetSecurityGroupRuleResultOutput) IsEgress() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) bool { return v.IsEgress }).(pulumi.BoolOutput)
}

// The ID of the destination prefix list.
func (o GetSecurityGroupRuleResultOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.PrefixListId }).(pulumi.StringOutput)
}

// The destination security group that is referenced in the rule.
func (o GetSecurityGroupRuleResultOutput) ReferencedSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.ReferencedSecurityGroupId }).(pulumi.StringOutput)
}

// The ID of the security group.
func (o GetSecurityGroupRuleResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o GetSecurityGroupRuleResultOutput) SecurityGroupRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) string { return v.SecurityGroupRuleId }).(pulumi.StringOutput)
}

// A map of tags assigned to the resource.
func (o GetSecurityGroupRuleResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
func (o GetSecurityGroupRuleResultOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupRuleResult) int { return v.ToPort }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityGroupRuleResultOutput{})
}
