// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Registers an on-premises server or virtual machine with Amazon EC2 so that it can be managed using Run Command.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			assumeRole, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
//				Statements: []iam.GetPolicyDocumentStatement{
//					{
//						Effect: pulumi.StringRef("Allow"),
//						Principals: []iam.GetPolicyDocumentStatementPrincipal{
//							{
//								Type: "Service",
//								Identifiers: []string{
//									"ssm.amazonaws.com",
//								},
//							},
//						},
//						Actions: []string{
//							"sts:AssumeRole",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			testRole, err := iam.NewRole(ctx, "testRole", &iam.RoleArgs{
//				AssumeRolePolicy: *pulumi.String(assumeRole.Json),
//			})
//			if err != nil {
//				return err
//			}
//			testAttach, err := iam.NewRolePolicyAttachment(ctx, "testAttach", &iam.RolePolicyAttachmentArgs{
//				Role:      testRole.Name,
//				PolicyArn: pulumi.String("arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ssm.NewActivation(ctx, "foo", &ssm.ActivationArgs{
//				Description:       pulumi.String("Test"),
//				IamRole:           testRole.ID(),
//				RegistrationLimit: pulumi.Int(5),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				testAttach,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import AWS SSM Activation using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:ssm/activation:Activation example e488f2f6-e686-4afb-8a04-ef6dfEXAMPLE
//
// ```
//
//	-> __Note:__ The `activation_code` attribute cannot be imported.
type Activation struct {
	pulumi.CustomResourceState

	// The code the system generates when it processes the activation.
	ActivationCode pulumi.StringOutput `pulumi:"activationCode"`
	// The description of the resource that you want to register.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// UTC timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time. This provider will only perform drift detection of its value when present in a configuration.
	ExpirationDate pulumi.StringOutput `pulumi:"expirationDate"`
	// If the current activation has expired.
	Expired pulumi.BoolOutput `pulumi:"expired"`
	// The IAM Role to attach to the managed instance.
	IamRole pulumi.StringOutput `pulumi:"iamRole"`
	// The default name of the registered managed instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of managed instances that are currently registered using this activation.
	RegistrationCount pulumi.IntOutput `pulumi:"registrationCount"`
	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit pulumi.IntPtrOutput `pulumi:"registrationLimit"`
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewActivation registers a new resource with the given unique name, arguments, and options.
func NewActivation(ctx *pulumi.Context,
	name string, args *ActivationArgs, opts ...pulumi.ResourceOption) (*Activation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IamRole == nil {
		return nil, errors.New("invalid value for required argument 'IamRole'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Activation
	err := ctx.RegisterResource("aws:ssm/activation:Activation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActivation gets an existing Activation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActivation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActivationState, opts ...pulumi.ResourceOption) (*Activation, error) {
	var resource Activation
	err := ctx.ReadResource("aws:ssm/activation:Activation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Activation resources.
type activationState struct {
	// The code the system generates when it processes the activation.
	ActivationCode *string `pulumi:"activationCode"`
	// The description of the resource that you want to register.
	Description *string `pulumi:"description"`
	// UTC timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time. This provider will only perform drift detection of its value when present in a configuration.
	ExpirationDate *string `pulumi:"expirationDate"`
	// If the current activation has expired.
	Expired *bool `pulumi:"expired"`
	// The IAM Role to attach to the managed instance.
	IamRole *string `pulumi:"iamRole"`
	// The default name of the registered managed instance.
	Name *string `pulumi:"name"`
	// The number of managed instances that are currently registered using this activation.
	RegistrationCount *int `pulumi:"registrationCount"`
	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit *int `pulumi:"registrationLimit"`
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ActivationState struct {
	// The code the system generates when it processes the activation.
	ActivationCode pulumi.StringPtrInput
	// The description of the resource that you want to register.
	Description pulumi.StringPtrInput
	// UTC timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time. This provider will only perform drift detection of its value when present in a configuration.
	ExpirationDate pulumi.StringPtrInput
	// If the current activation has expired.
	Expired pulumi.BoolPtrInput
	// The IAM Role to attach to the managed instance.
	IamRole pulumi.StringPtrInput
	// The default name of the registered managed instance.
	Name pulumi.StringPtrInput
	// The number of managed instances that are currently registered using this activation.
	RegistrationCount pulumi.IntPtrInput
	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit pulumi.IntPtrInput
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (ActivationState) ElementType() reflect.Type {
	return reflect.TypeOf((*activationState)(nil)).Elem()
}

type activationArgs struct {
	// The description of the resource that you want to register.
	Description *string `pulumi:"description"`
	// UTC timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time. This provider will only perform drift detection of its value when present in a configuration.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The IAM Role to attach to the managed instance.
	IamRole string `pulumi:"iamRole"`
	// The default name of the registered managed instance.
	Name *string `pulumi:"name"`
	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit *int `pulumi:"registrationLimit"`
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Activation resource.
type ActivationArgs struct {
	// The description of the resource that you want to register.
	Description pulumi.StringPtrInput
	// UTC timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time. This provider will only perform drift detection of its value when present in a configuration.
	ExpirationDate pulumi.StringPtrInput
	// The IAM Role to attach to the managed instance.
	IamRole pulumi.StringInput
	// The default name of the registered managed instance.
	Name pulumi.StringPtrInput
	// The maximum number of managed instances you want to register. The default value is 1 instance.
	RegistrationLimit pulumi.IntPtrInput
	// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (ActivationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*activationArgs)(nil)).Elem()
}

type ActivationInput interface {
	pulumi.Input

	ToActivationOutput() ActivationOutput
	ToActivationOutputWithContext(ctx context.Context) ActivationOutput
}

func (*Activation) ElementType() reflect.Type {
	return reflect.TypeOf((**Activation)(nil)).Elem()
}

func (i *Activation) ToActivationOutput() ActivationOutput {
	return i.ToActivationOutputWithContext(context.Background())
}

func (i *Activation) ToActivationOutputWithContext(ctx context.Context) ActivationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivationOutput)
}

// ActivationArrayInput is an input type that accepts ActivationArray and ActivationArrayOutput values.
// You can construct a concrete instance of `ActivationArrayInput` via:
//
//	ActivationArray{ ActivationArgs{...} }
type ActivationArrayInput interface {
	pulumi.Input

	ToActivationArrayOutput() ActivationArrayOutput
	ToActivationArrayOutputWithContext(context.Context) ActivationArrayOutput
}

type ActivationArray []ActivationInput

func (ActivationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Activation)(nil)).Elem()
}

func (i ActivationArray) ToActivationArrayOutput() ActivationArrayOutput {
	return i.ToActivationArrayOutputWithContext(context.Background())
}

func (i ActivationArray) ToActivationArrayOutputWithContext(ctx context.Context) ActivationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivationArrayOutput)
}

// ActivationMapInput is an input type that accepts ActivationMap and ActivationMapOutput values.
// You can construct a concrete instance of `ActivationMapInput` via:
//
//	ActivationMap{ "key": ActivationArgs{...} }
type ActivationMapInput interface {
	pulumi.Input

	ToActivationMapOutput() ActivationMapOutput
	ToActivationMapOutputWithContext(context.Context) ActivationMapOutput
}

type ActivationMap map[string]ActivationInput

func (ActivationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Activation)(nil)).Elem()
}

func (i ActivationMap) ToActivationMapOutput() ActivationMapOutput {
	return i.ToActivationMapOutputWithContext(context.Background())
}

func (i ActivationMap) ToActivationMapOutputWithContext(ctx context.Context) ActivationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivationMapOutput)
}

type ActivationOutput struct{ *pulumi.OutputState }

func (ActivationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Activation)(nil)).Elem()
}

func (o ActivationOutput) ToActivationOutput() ActivationOutput {
	return o
}

func (o ActivationOutput) ToActivationOutputWithContext(ctx context.Context) ActivationOutput {
	return o
}

// The code the system generates when it processes the activation.
func (o ActivationOutput) ActivationCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Activation) pulumi.StringOutput { return v.ActivationCode }).(pulumi.StringOutput)
}

// The description of the resource that you want to register.
func (o ActivationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Activation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// UTC timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) by which this activation request should expire. The default value is 24 hours from resource creation time. This provider will only perform drift detection of its value when present in a configuration.
func (o ActivationOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Activation) pulumi.StringOutput { return v.ExpirationDate }).(pulumi.StringOutput)
}

// If the current activation has expired.
func (o ActivationOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v *Activation) pulumi.BoolOutput { return v.Expired }).(pulumi.BoolOutput)
}

// The IAM Role to attach to the managed instance.
func (o ActivationOutput) IamRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Activation) pulumi.StringOutput { return v.IamRole }).(pulumi.StringOutput)
}

// The default name of the registered managed instance.
func (o ActivationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Activation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of managed instances that are currently registered using this activation.
func (o ActivationOutput) RegistrationCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Activation) pulumi.IntOutput { return v.RegistrationCount }).(pulumi.IntOutput)
}

// The maximum number of managed instances you want to register. The default value is 1 instance.
func (o ActivationOutput) RegistrationLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Activation) pulumi.IntPtrOutput { return v.RegistrationLimit }).(pulumi.IntPtrOutput)
}

// A map of tags to assign to the object. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ActivationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Activation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o ActivationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Activation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type ActivationArrayOutput struct{ *pulumi.OutputState }

func (ActivationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Activation)(nil)).Elem()
}

func (o ActivationArrayOutput) ToActivationArrayOutput() ActivationArrayOutput {
	return o
}

func (o ActivationArrayOutput) ToActivationArrayOutputWithContext(ctx context.Context) ActivationArrayOutput {
	return o
}

func (o ActivationArrayOutput) Index(i pulumi.IntInput) ActivationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Activation {
		return vs[0].([]*Activation)[vs[1].(int)]
	}).(ActivationOutput)
}

type ActivationMapOutput struct{ *pulumi.OutputState }

func (ActivationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Activation)(nil)).Elem()
}

func (o ActivationMapOutput) ToActivationMapOutput() ActivationMapOutput {
	return o
}

func (o ActivationMapOutput) ToActivationMapOutputWithContext(ctx context.Context) ActivationMapOutput {
	return o
}

func (o ActivationMapOutput) MapIndex(k pulumi.StringInput) ActivationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Activation {
		return vs[0].(map[string]*Activation)[vs[1].(string)]
	}).(ActivationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActivationInput)(nil)).Elem(), &Activation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActivationArrayInput)(nil)).Elem(), ActivationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActivationMapInput)(nil)).Elem(), ActivationMap{})
	pulumi.RegisterOutputType(ActivationOutput{})
	pulumi.RegisterOutputType(ActivationArrayOutput{})
	pulumi.RegisterOutputType(ActivationMapOutput{})
}
