// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssm.LookupContactsRotation(ctx, &ssm.LookupContactsRotationArgs{
//				Arn: "arn:aws:ssm-contacts:us-east-1:012345678910:rotation/example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupContactsRotation(ctx *pulumi.Context, args *LookupContactsRotationArgs, opts ...pulumi.InvokeOption) (*LookupContactsRotationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContactsRotationResult
	err := ctx.Invoke("aws:ssm/getContactsRotation:getContactsRotation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContactsRotation.
type LookupContactsRotationArgs struct {
	// The Amazon Resource Name (ARN) of the rotation.
	Arn string `pulumi:"arn"`
}

// A collection of values returned by getContactsRotation.
type LookupContactsRotationResult struct {
	Arn string `pulumi:"arn"`
	// The Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
	ContactIds []string `pulumi:"contactIds"`
	Id         string   `pulumi:"id"`
	// The name for the rotation.
	Name string `pulumi:"name"`
	// Information about when an on-call rotation is in effect and how long the rotation period lasts.
	Recurrences []GetContactsRotationRecurrence `pulumi:"recurrences"`
	// The date and time, in RFC 3339 format, that the rotation goes into effect.
	StartTime string `pulumi:"startTime"`
	// A map of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
	TimeZoneId string `pulumi:"timeZoneId"`
}

func LookupContactsRotationOutput(ctx *pulumi.Context, args LookupContactsRotationOutputArgs, opts ...pulumi.InvokeOption) LookupContactsRotationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContactsRotationResult, error) {
			args := v.(LookupContactsRotationArgs)
			r, err := LookupContactsRotation(ctx, &args, opts...)
			var s LookupContactsRotationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContactsRotationResultOutput)
}

// A collection of arguments for invoking getContactsRotation.
type LookupContactsRotationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the rotation.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupContactsRotationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactsRotationArgs)(nil)).Elem()
}

// A collection of values returned by getContactsRotation.
type LookupContactsRotationResultOutput struct{ *pulumi.OutputState }

func (LookupContactsRotationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactsRotationResult)(nil)).Elem()
}

func (o LookupContactsRotationResultOutput) ToLookupContactsRotationResultOutput() LookupContactsRotationResultOutput {
	return o
}

func (o LookupContactsRotationResultOutput) ToLookupContactsRotationResultOutputWithContext(ctx context.Context) LookupContactsRotationResultOutput {
	return o
}

func (o LookupContactsRotationResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
func (o LookupContactsRotationResultOutput) ContactIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) []string { return v.ContactIds }).(pulumi.StringArrayOutput)
}

func (o LookupContactsRotationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name for the rotation.
func (o LookupContactsRotationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Information about when an on-call rotation is in effect and how long the rotation period lasts.
func (o LookupContactsRotationResultOutput) Recurrences() GetContactsRotationRecurrenceArrayOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) []GetContactsRotationRecurrence { return v.Recurrences }).(GetContactsRotationRecurrenceArrayOutput)
}

// The date and time, in RFC 3339 format, that the rotation goes into effect.
func (o LookupContactsRotationResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// A map of tags to assign to the resource.
func (o LookupContactsRotationResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The time zone to base the rotation’s activity on in Internet Assigned Numbers Authority (IANA) format.
func (o LookupContactsRotationResultOutput) TimeZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactsRotationResult) string { return v.TimeZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContactsRotationResultOutput{})
}
