// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates an SSM Document to an instance or EC2 tag.
//
// ## Example Usage
// ### Create an association for a specific instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssm.NewAssociation(ctx, "example", &ssm.AssociationArgs{
//				Targets: ssm.AssociationTargetArray{
//					&ssm.AssociationTargetArgs{
//						Key: pulumi.String("InstanceIds"),
//						Values: pulumi.StringArray{
//							aws_instance.Example.Id,
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create an association for all managed instances in an AWS account
//
// To target all managed instances in an AWS account, set the `key` as `"InstanceIds"` with `values` set as `["*"]`. This example also illustrates how to use an Amazon owned SSM document named `AmazonCloudWatch-ManageAgent`.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssm.NewAssociation(ctx, "example", &ssm.AssociationArgs{
//				Targets: ssm.AssociationTargetArray{
//					&ssm.AssociationTargetArgs{
//						Key: pulumi.String("InstanceIds"),
//						Values: pulumi.StringArray{
//							pulumi.String("*"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create an association for a specific tag
//
// This example shows how to target all managed instances that are assigned a tag key of `Environment` and value of `Development`.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssm.NewAssociation(ctx, "example", &ssm.AssociationArgs{
//				Targets: ssm.AssociationTargetArray{
//					&ssm.AssociationTargetArgs{
//						Key: pulumi.String("tag:Environment"),
//						Values: pulumi.StringArray{
//							pulumi.String("Development"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create an association with a specific schedule
//
// This example shows how to schedule an association in various ways.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssm.NewAssociation(ctx, "example", &ssm.AssociationArgs{
//				ScheduleExpression: pulumi.String("cron(0 2 ? * SUN *)"),
//				Targets: ssm.AssociationTargetArray{
//					&ssm.AssociationTargetArgs{
//						Key: pulumi.String("InstanceIds"),
//						Values: pulumi.StringArray{
//							aws_instance.Example.Id,
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import SSM associations using the `association_id`. For example:
//
// ```sh
//
//	$ pulumi import aws:ssm/association:Association test-association 10abcdef-0abc-1234-5678-90abcdef123456
//
// ```
type Association struct {
	pulumi.CustomResourceState

	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval pulumi.BoolPtrOutput `pulumi:"applyOnlyAtCronInterval"`
	// The ARN of the SSM association
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ID of the SSM association.
	AssociationId pulumi.StringOutput `pulumi:"associationId"`
	// The descriptive name for the association.
	AssociationName pulumi.StringPtrOutput `pulumi:"associationName"`
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName pulumi.StringPtrOutput `pulumi:"automationTargetParameterName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumi.StringPtrOutput `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumi.StringOutput `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumi.StringPtrOutput `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors pulumi.StringPtrOutput `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name pulumi.StringOutput `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation AssociationOutputLocationPtrOutput `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression pulumi.StringPtrOutput `pulumi:"scheduleExpression"`
	// The mode for generating association compliance. You can specify `AUTO` or `MANUAL`.
	SyncCompliance pulumi.StringPtrOutput `pulumi:"syncCompliance"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets AssociationTargetArrayOutput `pulumi:"targets"`
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds pulumi.IntPtrOutput `pulumi:"waitForSuccessTimeoutSeconds"`
}

// NewAssociation registers a new resource with the given unique name, arguments, and options.
func NewAssociation(ctx *pulumi.Context,
	name string, args *AssociationArgs, opts ...pulumi.ResourceOption) (*Association, error) {
	if args == nil {
		args = &AssociationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Association
	err := ctx.RegisterResource("aws:ssm/association:Association", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssociation gets an existing Association resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssociationState, opts ...pulumi.ResourceOption) (*Association, error) {
	var resource Association
	err := ctx.ReadResource("aws:ssm/association:Association", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Association resources.
type associationState struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval *bool `pulumi:"applyOnlyAtCronInterval"`
	// The ARN of the SSM association
	Arn *string `pulumi:"arn"`
	// The ID of the SSM association.
	AssociationId *string `pulumi:"associationId"`
	// The descriptive name for the association.
	AssociationName *string `pulumi:"associationName"`
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName *string `pulumi:"automationTargetParameterName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity *string `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId *string `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency *string `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors *string `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name *string `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation *AssociationOutputLocation `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters map[string]string `pulumi:"parameters"`
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// The mode for generating association compliance. You can specify `AUTO` or `MANUAL`.
	SyncCompliance *string `pulumi:"syncCompliance"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets []AssociationTarget `pulumi:"targets"`
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds *int `pulumi:"waitForSuccessTimeoutSeconds"`
}

type AssociationState struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval pulumi.BoolPtrInput
	// The ARN of the SSM association
	Arn pulumi.StringPtrInput
	// The ID of the SSM association.
	AssociationId pulumi.StringPtrInput
	// The descriptive name for the association.
	AssociationName pulumi.StringPtrInput
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName pulumi.StringPtrInput
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumi.StringPtrInput
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumi.StringPtrInput
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId pulumi.StringPtrInput
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumi.StringPtrInput
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors pulumi.StringPtrInput
	// The name of the SSM document to apply.
	Name pulumi.StringPtrInput
	// An output location block. Output Location is documented below.
	OutputLocation AssociationOutputLocationPtrInput
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumi.StringMapInput
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression pulumi.StringPtrInput
	// The mode for generating association compliance. You can specify `AUTO` or `MANUAL`.
	SyncCompliance pulumi.StringPtrInput
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets AssociationTargetArrayInput
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds pulumi.IntPtrInput
}

func (AssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*associationState)(nil)).Elem()
}

type associationArgs struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval *bool `pulumi:"applyOnlyAtCronInterval"`
	// The descriptive name for the association.
	AssociationName *string `pulumi:"associationName"`
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName *string `pulumi:"automationTargetParameterName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity *string `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId *string `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency *string `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors *string `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name *string `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation *AssociationOutputLocation `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters map[string]string `pulumi:"parameters"`
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// The mode for generating association compliance. You can specify `AUTO` or `MANUAL`.
	SyncCompliance *string `pulumi:"syncCompliance"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets []AssociationTarget `pulumi:"targets"`
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds *int `pulumi:"waitForSuccessTimeoutSeconds"`
}

// The set of arguments for constructing a Association resource.
type AssociationArgs struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval pulumi.BoolPtrInput
	// The descriptive name for the association.
	AssociationName pulumi.StringPtrInput
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName pulumi.StringPtrInput
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumi.StringPtrInput
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumi.StringPtrInput
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId pulumi.StringPtrInput
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumi.StringPtrInput
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors pulumi.StringPtrInput
	// The name of the SSM document to apply.
	Name pulumi.StringPtrInput
	// An output location block. Output Location is documented below.
	OutputLocation AssociationOutputLocationPtrInput
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumi.StringMapInput
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression pulumi.StringPtrInput
	// The mode for generating association compliance. You can specify `AUTO` or `MANUAL`.
	SyncCompliance pulumi.StringPtrInput
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets AssociationTargetArrayInput
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds pulumi.IntPtrInput
}

func (AssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*associationArgs)(nil)).Elem()
}

type AssociationInput interface {
	pulumi.Input

	ToAssociationOutput() AssociationOutput
	ToAssociationOutputWithContext(ctx context.Context) AssociationOutput
}

func (*Association) ElementType() reflect.Type {
	return reflect.TypeOf((**Association)(nil)).Elem()
}

func (i *Association) ToAssociationOutput() AssociationOutput {
	return i.ToAssociationOutputWithContext(context.Background())
}

func (i *Association) ToAssociationOutputWithContext(ctx context.Context) AssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationOutput)
}

// AssociationArrayInput is an input type that accepts AssociationArray and AssociationArrayOutput values.
// You can construct a concrete instance of `AssociationArrayInput` via:
//
//	AssociationArray{ AssociationArgs{...} }
type AssociationArrayInput interface {
	pulumi.Input

	ToAssociationArrayOutput() AssociationArrayOutput
	ToAssociationArrayOutputWithContext(context.Context) AssociationArrayOutput
}

type AssociationArray []AssociationInput

func (AssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Association)(nil)).Elem()
}

func (i AssociationArray) ToAssociationArrayOutput() AssociationArrayOutput {
	return i.ToAssociationArrayOutputWithContext(context.Background())
}

func (i AssociationArray) ToAssociationArrayOutputWithContext(ctx context.Context) AssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationArrayOutput)
}

// AssociationMapInput is an input type that accepts AssociationMap and AssociationMapOutput values.
// You can construct a concrete instance of `AssociationMapInput` via:
//
//	AssociationMap{ "key": AssociationArgs{...} }
type AssociationMapInput interface {
	pulumi.Input

	ToAssociationMapOutput() AssociationMapOutput
	ToAssociationMapOutputWithContext(context.Context) AssociationMapOutput
}

type AssociationMap map[string]AssociationInput

func (AssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Association)(nil)).Elem()
}

func (i AssociationMap) ToAssociationMapOutput() AssociationMapOutput {
	return i.ToAssociationMapOutputWithContext(context.Background())
}

func (i AssociationMap) ToAssociationMapOutputWithContext(ctx context.Context) AssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationMapOutput)
}

type AssociationOutput struct{ *pulumi.OutputState }

func (AssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Association)(nil)).Elem()
}

func (o AssociationOutput) ToAssociationOutput() AssociationOutput {
	return o
}

func (o AssociationOutput) ToAssociationOutputWithContext(ctx context.Context) AssociationOutput {
	return o
}

// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
func (o AssociationOutput) ApplyOnlyAtCronInterval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.BoolPtrOutput { return v.ApplyOnlyAtCronInterval }).(pulumi.BoolPtrOutput)
}

// The ARN of the SSM association
func (o AssociationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Association) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ID of the SSM association.
func (o AssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Association) pulumi.StringOutput { return v.AssociationId }).(pulumi.StringOutput)
}

// The descriptive name for the association.
func (o AssociationOutput) AssociationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.AssociationName }).(pulumi.StringPtrOutput)
}

// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
func (o AssociationOutput) AutomationTargetParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.AutomationTargetParameterName }).(pulumi.StringPtrOutput)
}

// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
func (o AssociationOutput) ComplianceSeverity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.ComplianceSeverity }).(pulumi.StringPtrOutput)
}

// The document version you want to associate with the target(s). Can be a specific version or the default version.
func (o AssociationOutput) DocumentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Association) pulumi.StringOutput { return v.DocumentVersion }).(pulumi.StringOutput)
}

// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
//
// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
func (o AssociationOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
func (o AssociationOutput) MaxConcurrency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.MaxConcurrency }).(pulumi.StringPtrOutput)
}

// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
func (o AssociationOutput) MaxErrors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.MaxErrors }).(pulumi.StringPtrOutput)
}

// The name of the SSM document to apply.
func (o AssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Association) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An output location block. Output Location is documented below.
func (o AssociationOutput) OutputLocation() AssociationOutputLocationPtrOutput {
	return o.ApplyT(func(v *Association) AssociationOutputLocationPtrOutput { return v.OutputLocation }).(AssociationOutputLocationPtrOutput)
}

// A block of arbitrary string parameters to pass to the SSM document.
func (o AssociationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Association) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
func (o AssociationOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.ScheduleExpression }).(pulumi.StringPtrOutput)
}

// The mode for generating association compliance. You can specify `AUTO` or `MANUAL`.
func (o AssociationOutput) SyncCompliance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.StringPtrOutput { return v.SyncCompliance }).(pulumi.StringPtrOutput)
}

// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
func (o AssociationOutput) Targets() AssociationTargetArrayOutput {
	return o.ApplyT(func(v *Association) AssociationTargetArrayOutput { return v.Targets }).(AssociationTargetArrayOutput)
}

// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
//
// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
func (o AssociationOutput) WaitForSuccessTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Association) pulumi.IntPtrOutput { return v.WaitForSuccessTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AssociationArrayOutput struct{ *pulumi.OutputState }

func (AssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Association)(nil)).Elem()
}

func (o AssociationArrayOutput) ToAssociationArrayOutput() AssociationArrayOutput {
	return o
}

func (o AssociationArrayOutput) ToAssociationArrayOutputWithContext(ctx context.Context) AssociationArrayOutput {
	return o
}

func (o AssociationArrayOutput) Index(i pulumi.IntInput) AssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Association {
		return vs[0].([]*Association)[vs[1].(int)]
	}).(AssociationOutput)
}

type AssociationMapOutput struct{ *pulumi.OutputState }

func (AssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Association)(nil)).Elem()
}

func (o AssociationMapOutput) ToAssociationMapOutput() AssociationMapOutput {
	return o
}

func (o AssociationMapOutput) ToAssociationMapOutputWithContext(ctx context.Context) AssociationMapOutput {
	return o
}

func (o AssociationMapOutput) MapIndex(k pulumi.StringInput) AssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Association {
		return vs[0].(map[string]*Association)[vs[1].(string)]
	}).(AssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationInput)(nil)).Elem(), &Association{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationArrayInput)(nil)).Elem(), AssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationMapInput)(nil)).Elem(), AssociationMap{})
	pulumi.RegisterOutputType(AssociationOutput{})
	pulumi.RegisterOutputType(AssociationArrayOutput{})
	pulumi.RegisterOutputType(AssociationMapOutput{})
}
