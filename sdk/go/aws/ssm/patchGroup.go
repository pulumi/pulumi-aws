// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SSM Patch Group resource
type PatchGroup struct {
	s *pulumi.ResourceState
}

// NewPatchGroup registers a new resource with the given unique name, arguments, and options.
func NewPatchGroup(ctx *pulumi.Context,
	name string, args *PatchGroupArgs, opts ...pulumi.ResourceOpt) (*PatchGroup, error) {
	if args == nil || args.BaselineId == nil {
		return nil, errors.New("missing required argument 'BaselineId'")
	}
	if args == nil || args.PatchGroup == nil {
		return nil, errors.New("missing required argument 'PatchGroup'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["baselineId"] = nil
		inputs["patchGroup"] = nil
	} else {
		inputs["baselineId"] = args.BaselineId
		inputs["patchGroup"] = args.PatchGroup
	}
	s, err := ctx.RegisterResource("aws:ssm/patchGroup:PatchGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PatchGroup{s: s}, nil
}

// GetPatchGroup gets an existing PatchGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPatchGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PatchGroupState, opts ...pulumi.ResourceOpt) (*PatchGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["baselineId"] = state.BaselineId
		inputs["patchGroup"] = state.PatchGroup
	}
	s, err := ctx.ReadResource("aws:ssm/patchGroup:PatchGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PatchGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *PatchGroup) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *PatchGroup) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the patch baseline to register the patch group with.
func (r *PatchGroup) BaselineId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["baselineId"])
}

// The name of the patch group that should be registered with the patch baseline.
func (r *PatchGroup) PatchGroup() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["patchGroup"])
}

// Input properties used for looking up and filtering PatchGroup resources.
type PatchGroupState struct {
	// The ID of the patch baseline to register the patch group with.
	BaselineId interface{}
	// The name of the patch group that should be registered with the patch baseline.
	PatchGroup interface{}
}

// The set of arguments for constructing a PatchGroup resource.
type PatchGroupArgs struct {
	// The ID of the patch baseline to register the patch group with.
	BaselineId interface{}
	// The name of the patch group that should be registered with the patch baseline.
	PatchGroup interface{}
}
