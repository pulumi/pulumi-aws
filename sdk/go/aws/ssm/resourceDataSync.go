// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SSM resource data sync.
type ResourceDataSync struct {
	s *pulumi.ResourceState
}

// NewResourceDataSync registers a new resource with the given unique name, arguments, and options.
func NewResourceDataSync(ctx *pulumi.Context,
	name string, args *ResourceDataSyncArgs, opts ...pulumi.ResourceOpt) (*ResourceDataSync, error) {
	if args == nil || args.S3Destination == nil {
		return nil, errors.New("missing required argument 'S3Destination'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["s3Destination"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["s3Destination"] = args.S3Destination
	}
	s, err := ctx.RegisterResource("aws:ssm/resourceDataSync:ResourceDataSync", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ResourceDataSync{s: s}, nil
}

// GetResourceDataSync gets an existing ResourceDataSync resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceDataSync(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ResourceDataSyncState, opts ...pulumi.ResourceOpt) (*ResourceDataSync, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
		inputs["s3Destination"] = state.S3Destination
	}
	s, err := ctx.ReadResource("aws:ssm/resourceDataSync:ResourceDataSync", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ResourceDataSync{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ResourceDataSync) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ResourceDataSync) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Name for the configuration.
func (r *ResourceDataSync) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Amazon S3 configuration details for the sync.
func (r *ResourceDataSync) S3Destination() *pulumi.Output {
	return r.s.State["s3Destination"]
}

// Input properties used for looking up and filtering ResourceDataSync resources.
type ResourceDataSyncState struct {
	// Name for the configuration.
	Name interface{}
	// Amazon S3 configuration details for the sync.
	S3Destination interface{}
}

// The set of arguments for constructing a ResourceDataSync resource.
type ResourceDataSyncArgs struct {
	// Name for the configuration.
	Name interface{}
	// Amazon S3 configuration details for the sync.
	S3Destination interface{}
}
