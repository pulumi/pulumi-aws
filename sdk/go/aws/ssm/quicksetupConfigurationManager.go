// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS SSM Quick Setup Configuration Manager.
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import SSM Quick Setup Configuration Manager using the `manager_arn`. For example:
//
// ```sh
// $ pulumi import aws:ssm/quicksetupConfigurationManager:QuicksetupConfigurationManager example arn:aws:ssm-quicksetup:us-east-1:012345678901:configuration-manager/abcd-1234
// ```
type QuicksetupConfigurationManager struct {
	pulumi.CustomResourceState

	// Definition of the Quick Setup configuration that the configuration manager deploys. See `configurationDefinition` below.
	ConfigurationDefinition QuicksetupConfigurationManagerConfigurationDefinitionPtrOutput `pulumi:"configurationDefinition"`
	// Description of the configuration manager.
	Description pulumi.StringOutput `pulumi:"description"`
	// ARN of the Configuration Manager.
	ManagerArn pulumi.StringOutput `pulumi:"managerArn"`
	// Configuration manager name.
	//
	// The following arguments are optional:
	Name pulumi.StringOutput `pulumi:"name"`
	// A summary of the state of the configuration manager. This includes deployment statuses, association statuses, drift statuses, health checks, and more. See `statusSummaries` below.
	StatusSummaries QuicksetupConfigurationManagerStatusSummaryArrayOutput `pulumi:"statusSummaries"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapOutput                          `pulumi:"tagsAll"`
	Timeouts QuicksetupConfigurationManagerTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewQuicksetupConfigurationManager registers a new resource with the given unique name, arguments, and options.
func NewQuicksetupConfigurationManager(ctx *pulumi.Context,
	name string, args *QuicksetupConfigurationManagerArgs, opts ...pulumi.ResourceOption) (*QuicksetupConfigurationManager, error) {
	if args == nil {
		args = &QuicksetupConfigurationManagerArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QuicksetupConfigurationManager
	err := ctx.RegisterResource("aws:ssm/quicksetupConfigurationManager:QuicksetupConfigurationManager", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQuicksetupConfigurationManager gets an existing QuicksetupConfigurationManager resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQuicksetupConfigurationManager(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QuicksetupConfigurationManagerState, opts ...pulumi.ResourceOption) (*QuicksetupConfigurationManager, error) {
	var resource QuicksetupConfigurationManager
	err := ctx.ReadResource("aws:ssm/quicksetupConfigurationManager:QuicksetupConfigurationManager", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QuicksetupConfigurationManager resources.
type quicksetupConfigurationManagerState struct {
	// Definition of the Quick Setup configuration that the configuration manager deploys. See `configurationDefinition` below.
	ConfigurationDefinition *QuicksetupConfigurationManagerConfigurationDefinition `pulumi:"configurationDefinition"`
	// Description of the configuration manager.
	Description *string `pulumi:"description"`
	// ARN of the Configuration Manager.
	ManagerArn *string `pulumi:"managerArn"`
	// Configuration manager name.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// A summary of the state of the configuration manager. This includes deployment statuses, association statuses, drift statuses, health checks, and more. See `statusSummaries` below.
	StatusSummaries []QuicksetupConfigurationManagerStatusSummary `pulumi:"statusSummaries"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  map[string]string                       `pulumi:"tagsAll"`
	Timeouts *QuicksetupConfigurationManagerTimeouts `pulumi:"timeouts"`
}

type QuicksetupConfigurationManagerState struct {
	// Definition of the Quick Setup configuration that the configuration manager deploys. See `configurationDefinition` below.
	ConfigurationDefinition QuicksetupConfigurationManagerConfigurationDefinitionPtrInput
	// Description of the configuration manager.
	Description pulumi.StringPtrInput
	// ARN of the Configuration Manager.
	ManagerArn pulumi.StringPtrInput
	// Configuration manager name.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// A summary of the state of the configuration manager. This includes deployment statuses, association statuses, drift statuses, health checks, and more. See `statusSummaries` below.
	StatusSummaries QuicksetupConfigurationManagerStatusSummaryArrayInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapInput
	Timeouts QuicksetupConfigurationManagerTimeoutsPtrInput
}

func (QuicksetupConfigurationManagerState) ElementType() reflect.Type {
	return reflect.TypeOf((*quicksetupConfigurationManagerState)(nil)).Elem()
}

type quicksetupConfigurationManagerArgs struct {
	// Definition of the Quick Setup configuration that the configuration manager deploys. See `configurationDefinition` below.
	ConfigurationDefinition *QuicksetupConfigurationManagerConfigurationDefinition `pulumi:"configurationDefinition"`
	// Description of the configuration manager.
	Description *string `pulumi:"description"`
	// Configuration manager name.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string                       `pulumi:"tags"`
	Timeouts *QuicksetupConfigurationManagerTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a QuicksetupConfigurationManager resource.
type QuicksetupConfigurationManagerArgs struct {
	// Definition of the Quick Setup configuration that the configuration manager deploys. See `configurationDefinition` below.
	ConfigurationDefinition QuicksetupConfigurationManagerConfigurationDefinitionPtrInput
	// Description of the configuration manager.
	Description pulumi.StringPtrInput
	// Configuration manager name.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts QuicksetupConfigurationManagerTimeoutsPtrInput
}

func (QuicksetupConfigurationManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*quicksetupConfigurationManagerArgs)(nil)).Elem()
}

type QuicksetupConfigurationManagerInput interface {
	pulumi.Input

	ToQuicksetupConfigurationManagerOutput() QuicksetupConfigurationManagerOutput
	ToQuicksetupConfigurationManagerOutputWithContext(ctx context.Context) QuicksetupConfigurationManagerOutput
}

func (*QuicksetupConfigurationManager) ElementType() reflect.Type {
	return reflect.TypeOf((**QuicksetupConfigurationManager)(nil)).Elem()
}

func (i *QuicksetupConfigurationManager) ToQuicksetupConfigurationManagerOutput() QuicksetupConfigurationManagerOutput {
	return i.ToQuicksetupConfigurationManagerOutputWithContext(context.Background())
}

func (i *QuicksetupConfigurationManager) ToQuicksetupConfigurationManagerOutputWithContext(ctx context.Context) QuicksetupConfigurationManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuicksetupConfigurationManagerOutput)
}

// QuicksetupConfigurationManagerArrayInput is an input type that accepts QuicksetupConfigurationManagerArray and QuicksetupConfigurationManagerArrayOutput values.
// You can construct a concrete instance of `QuicksetupConfigurationManagerArrayInput` via:
//
//	QuicksetupConfigurationManagerArray{ QuicksetupConfigurationManagerArgs{...} }
type QuicksetupConfigurationManagerArrayInput interface {
	pulumi.Input

	ToQuicksetupConfigurationManagerArrayOutput() QuicksetupConfigurationManagerArrayOutput
	ToQuicksetupConfigurationManagerArrayOutputWithContext(context.Context) QuicksetupConfigurationManagerArrayOutput
}

type QuicksetupConfigurationManagerArray []QuicksetupConfigurationManagerInput

func (QuicksetupConfigurationManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QuicksetupConfigurationManager)(nil)).Elem()
}

func (i QuicksetupConfigurationManagerArray) ToQuicksetupConfigurationManagerArrayOutput() QuicksetupConfigurationManagerArrayOutput {
	return i.ToQuicksetupConfigurationManagerArrayOutputWithContext(context.Background())
}

func (i QuicksetupConfigurationManagerArray) ToQuicksetupConfigurationManagerArrayOutputWithContext(ctx context.Context) QuicksetupConfigurationManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuicksetupConfigurationManagerArrayOutput)
}

// QuicksetupConfigurationManagerMapInput is an input type that accepts QuicksetupConfigurationManagerMap and QuicksetupConfigurationManagerMapOutput values.
// You can construct a concrete instance of `QuicksetupConfigurationManagerMapInput` via:
//
//	QuicksetupConfigurationManagerMap{ "key": QuicksetupConfigurationManagerArgs{...} }
type QuicksetupConfigurationManagerMapInput interface {
	pulumi.Input

	ToQuicksetupConfigurationManagerMapOutput() QuicksetupConfigurationManagerMapOutput
	ToQuicksetupConfigurationManagerMapOutputWithContext(context.Context) QuicksetupConfigurationManagerMapOutput
}

type QuicksetupConfigurationManagerMap map[string]QuicksetupConfigurationManagerInput

func (QuicksetupConfigurationManagerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QuicksetupConfigurationManager)(nil)).Elem()
}

func (i QuicksetupConfigurationManagerMap) ToQuicksetupConfigurationManagerMapOutput() QuicksetupConfigurationManagerMapOutput {
	return i.ToQuicksetupConfigurationManagerMapOutputWithContext(context.Background())
}

func (i QuicksetupConfigurationManagerMap) ToQuicksetupConfigurationManagerMapOutputWithContext(ctx context.Context) QuicksetupConfigurationManagerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuicksetupConfigurationManagerMapOutput)
}

type QuicksetupConfigurationManagerOutput struct{ *pulumi.OutputState }

func (QuicksetupConfigurationManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuicksetupConfigurationManager)(nil)).Elem()
}

func (o QuicksetupConfigurationManagerOutput) ToQuicksetupConfigurationManagerOutput() QuicksetupConfigurationManagerOutput {
	return o
}

func (o QuicksetupConfigurationManagerOutput) ToQuicksetupConfigurationManagerOutputWithContext(ctx context.Context) QuicksetupConfigurationManagerOutput {
	return o
}

// Definition of the Quick Setup configuration that the configuration manager deploys. See `configurationDefinition` below.
func (o QuicksetupConfigurationManagerOutput) ConfigurationDefinition() QuicksetupConfigurationManagerConfigurationDefinitionPtrOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) QuicksetupConfigurationManagerConfigurationDefinitionPtrOutput {
		return v.ConfigurationDefinition
	}).(QuicksetupConfigurationManagerConfigurationDefinitionPtrOutput)
}

// Description of the configuration manager.
func (o QuicksetupConfigurationManagerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// ARN of the Configuration Manager.
func (o QuicksetupConfigurationManagerOutput) ManagerArn() pulumi.StringOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) pulumi.StringOutput { return v.ManagerArn }).(pulumi.StringOutput)
}

// Configuration manager name.
//
// The following arguments are optional:
func (o QuicksetupConfigurationManagerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A summary of the state of the configuration manager. This includes deployment statuses, association statuses, drift statuses, health checks, and more. See `statusSummaries` below.
func (o QuicksetupConfigurationManagerOutput) StatusSummaries() QuicksetupConfigurationManagerStatusSummaryArrayOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) QuicksetupConfigurationManagerStatusSummaryArrayOutput {
		return v.StatusSummaries
	}).(QuicksetupConfigurationManagerStatusSummaryArrayOutput)
}

// Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o QuicksetupConfigurationManagerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o QuicksetupConfigurationManagerOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o QuicksetupConfigurationManagerOutput) Timeouts() QuicksetupConfigurationManagerTimeoutsPtrOutput {
	return o.ApplyT(func(v *QuicksetupConfigurationManager) QuicksetupConfigurationManagerTimeoutsPtrOutput {
		return v.Timeouts
	}).(QuicksetupConfigurationManagerTimeoutsPtrOutput)
}

type QuicksetupConfigurationManagerArrayOutput struct{ *pulumi.OutputState }

func (QuicksetupConfigurationManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QuicksetupConfigurationManager)(nil)).Elem()
}

func (o QuicksetupConfigurationManagerArrayOutput) ToQuicksetupConfigurationManagerArrayOutput() QuicksetupConfigurationManagerArrayOutput {
	return o
}

func (o QuicksetupConfigurationManagerArrayOutput) ToQuicksetupConfigurationManagerArrayOutputWithContext(ctx context.Context) QuicksetupConfigurationManagerArrayOutput {
	return o
}

func (o QuicksetupConfigurationManagerArrayOutput) Index(i pulumi.IntInput) QuicksetupConfigurationManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QuicksetupConfigurationManager {
		return vs[0].([]*QuicksetupConfigurationManager)[vs[1].(int)]
	}).(QuicksetupConfigurationManagerOutput)
}

type QuicksetupConfigurationManagerMapOutput struct{ *pulumi.OutputState }

func (QuicksetupConfigurationManagerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QuicksetupConfigurationManager)(nil)).Elem()
}

func (o QuicksetupConfigurationManagerMapOutput) ToQuicksetupConfigurationManagerMapOutput() QuicksetupConfigurationManagerMapOutput {
	return o
}

func (o QuicksetupConfigurationManagerMapOutput) ToQuicksetupConfigurationManagerMapOutputWithContext(ctx context.Context) QuicksetupConfigurationManagerMapOutput {
	return o
}

func (o QuicksetupConfigurationManagerMapOutput) MapIndex(k pulumi.StringInput) QuicksetupConfigurationManagerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QuicksetupConfigurationManager {
		return vs[0].(map[string]*QuicksetupConfigurationManager)[vs[1].(string)]
	}).(QuicksetupConfigurationManagerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QuicksetupConfigurationManagerInput)(nil)).Elem(), &QuicksetupConfigurationManager{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuicksetupConfigurationManagerArrayInput)(nil)).Elem(), QuicksetupConfigurationManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuicksetupConfigurationManagerMapInput)(nil)).Elem(), QuicksetupConfigurationManagerMap{})
	pulumi.RegisterOutputType(QuicksetupConfigurationManagerOutput{})
	pulumi.RegisterOutputType(QuicksetupConfigurationManagerArrayOutput{})
	pulumi.RegisterOutputType(QuicksetupConfigurationManagerMapOutput{})
}
