// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AssociationOutputLocation struct {
	// The S3 bucket name.
	S3BucketName string `pulumi:"s3BucketName"`
	// The S3 bucket prefix. Results stored in the root if not configured.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
	// The S3 bucket region.
	//
	// Targets specify what instance IDs or tags to apply the document to and has these keys:
	S3Region *string `pulumi:"s3Region"`
}

// AssociationOutputLocationInput is an input type that accepts AssociationOutputLocationArgs and AssociationOutputLocationOutput values.
// You can construct a concrete instance of `AssociationOutputLocationInput` via:
//
//	AssociationOutputLocationArgs{...}
type AssociationOutputLocationInput interface {
	pulumi.Input

	ToAssociationOutputLocationOutput() AssociationOutputLocationOutput
	ToAssociationOutputLocationOutputWithContext(context.Context) AssociationOutputLocationOutput
}

type AssociationOutputLocationArgs struct {
	// The S3 bucket name.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// The S3 bucket prefix. Results stored in the root if not configured.
	S3KeyPrefix pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
	// The S3 bucket region.
	//
	// Targets specify what instance IDs or tags to apply the document to and has these keys:
	S3Region pulumi.StringPtrInput `pulumi:"s3Region"`
}

func (AssociationOutputLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationOutputLocation)(nil)).Elem()
}

func (i AssociationOutputLocationArgs) ToAssociationOutputLocationOutput() AssociationOutputLocationOutput {
	return i.ToAssociationOutputLocationOutputWithContext(context.Background())
}

func (i AssociationOutputLocationArgs) ToAssociationOutputLocationOutputWithContext(ctx context.Context) AssociationOutputLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationOutputLocationOutput)
}

func (i AssociationOutputLocationArgs) ToAssociationOutputLocationPtrOutput() AssociationOutputLocationPtrOutput {
	return i.ToAssociationOutputLocationPtrOutputWithContext(context.Background())
}

func (i AssociationOutputLocationArgs) ToAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationOutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationOutputLocationOutput).ToAssociationOutputLocationPtrOutputWithContext(ctx)
}

// AssociationOutputLocationPtrInput is an input type that accepts AssociationOutputLocationArgs, AssociationOutputLocationPtr and AssociationOutputLocationPtrOutput values.
// You can construct a concrete instance of `AssociationOutputLocationPtrInput` via:
//
//	        AssociationOutputLocationArgs{...}
//
//	or:
//
//	        nil
type AssociationOutputLocationPtrInput interface {
	pulumi.Input

	ToAssociationOutputLocationPtrOutput() AssociationOutputLocationPtrOutput
	ToAssociationOutputLocationPtrOutputWithContext(context.Context) AssociationOutputLocationPtrOutput
}

type associationOutputLocationPtrType AssociationOutputLocationArgs

func AssociationOutputLocationPtr(v *AssociationOutputLocationArgs) AssociationOutputLocationPtrInput {
	return (*associationOutputLocationPtrType)(v)
}

func (*associationOutputLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationOutputLocation)(nil)).Elem()
}

func (i *associationOutputLocationPtrType) ToAssociationOutputLocationPtrOutput() AssociationOutputLocationPtrOutput {
	return i.ToAssociationOutputLocationPtrOutputWithContext(context.Background())
}

func (i *associationOutputLocationPtrType) ToAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationOutputLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationOutputLocationPtrOutput)
}

type AssociationOutputLocationOutput struct{ *pulumi.OutputState }

func (AssociationOutputLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationOutputLocation)(nil)).Elem()
}

func (o AssociationOutputLocationOutput) ToAssociationOutputLocationOutput() AssociationOutputLocationOutput {
	return o
}

func (o AssociationOutputLocationOutput) ToAssociationOutputLocationOutputWithContext(ctx context.Context) AssociationOutputLocationOutput {
	return o
}

func (o AssociationOutputLocationOutput) ToAssociationOutputLocationPtrOutput() AssociationOutputLocationPtrOutput {
	return o.ToAssociationOutputLocationPtrOutputWithContext(context.Background())
}

func (o AssociationOutputLocationOutput) ToAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationOutputLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssociationOutputLocation) *AssociationOutputLocation {
		return &v
	}).(AssociationOutputLocationPtrOutput)
}

// The S3 bucket name.
func (o AssociationOutputLocationOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v AssociationOutputLocation) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// The S3 bucket prefix. Results stored in the root if not configured.
func (o AssociationOutputLocationOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssociationOutputLocation) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

// The S3 bucket region.
//
// Targets specify what instance IDs or tags to apply the document to and has these keys:
func (o AssociationOutputLocationOutput) S3Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssociationOutputLocation) *string { return v.S3Region }).(pulumi.StringPtrOutput)
}

type AssociationOutputLocationPtrOutput struct{ *pulumi.OutputState }

func (AssociationOutputLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssociationOutputLocation)(nil)).Elem()
}

func (o AssociationOutputLocationPtrOutput) ToAssociationOutputLocationPtrOutput() AssociationOutputLocationPtrOutput {
	return o
}

func (o AssociationOutputLocationPtrOutput) ToAssociationOutputLocationPtrOutputWithContext(ctx context.Context) AssociationOutputLocationPtrOutput {
	return o
}

func (o AssociationOutputLocationPtrOutput) Elem() AssociationOutputLocationOutput {
	return o.ApplyT(func(v *AssociationOutputLocation) AssociationOutputLocation {
		if v != nil {
			return *v
		}
		var ret AssociationOutputLocation
		return ret
	}).(AssociationOutputLocationOutput)
}

// The S3 bucket name.
func (o AssociationOutputLocationPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssociationOutputLocation) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// The S3 bucket prefix. Results stored in the root if not configured.
func (o AssociationOutputLocationPtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssociationOutputLocation) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// The S3 bucket region.
//
// Targets specify what instance IDs or tags to apply the document to and has these keys:
func (o AssociationOutputLocationPtrOutput) S3Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssociationOutputLocation) *string {
		if v == nil {
			return nil
		}
		return v.S3Region
	}).(pulumi.StringPtrOutput)
}

type AssociationTarget struct {
	// Either `InstanceIds` or `tag:Tag Name` to specify an EC2 tag.
	Key string `pulumi:"key"`
	// A list of instance IDs or tag values. AWS currently limits this list size to one value.
	Values []string `pulumi:"values"`
}

// AssociationTargetInput is an input type that accepts AssociationTargetArgs and AssociationTargetOutput values.
// You can construct a concrete instance of `AssociationTargetInput` via:
//
//	AssociationTargetArgs{...}
type AssociationTargetInput interface {
	pulumi.Input

	ToAssociationTargetOutput() AssociationTargetOutput
	ToAssociationTargetOutputWithContext(context.Context) AssociationTargetOutput
}

type AssociationTargetArgs struct {
	// Either `InstanceIds` or `tag:Tag Name` to specify an EC2 tag.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of instance IDs or tag values. AWS currently limits this list size to one value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AssociationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationTarget)(nil)).Elem()
}

func (i AssociationTargetArgs) ToAssociationTargetOutput() AssociationTargetOutput {
	return i.ToAssociationTargetOutputWithContext(context.Background())
}

func (i AssociationTargetArgs) ToAssociationTargetOutputWithContext(ctx context.Context) AssociationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationTargetOutput)
}

// AssociationTargetArrayInput is an input type that accepts AssociationTargetArray and AssociationTargetArrayOutput values.
// You can construct a concrete instance of `AssociationTargetArrayInput` via:
//
//	AssociationTargetArray{ AssociationTargetArgs{...} }
type AssociationTargetArrayInput interface {
	pulumi.Input

	ToAssociationTargetArrayOutput() AssociationTargetArrayOutput
	ToAssociationTargetArrayOutputWithContext(context.Context) AssociationTargetArrayOutput
}

type AssociationTargetArray []AssociationTargetInput

func (AssociationTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssociationTarget)(nil)).Elem()
}

func (i AssociationTargetArray) ToAssociationTargetArrayOutput() AssociationTargetArrayOutput {
	return i.ToAssociationTargetArrayOutputWithContext(context.Background())
}

func (i AssociationTargetArray) ToAssociationTargetArrayOutputWithContext(ctx context.Context) AssociationTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssociationTargetArrayOutput)
}

type AssociationTargetOutput struct{ *pulumi.OutputState }

func (AssociationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociationTarget)(nil)).Elem()
}

func (o AssociationTargetOutput) ToAssociationTargetOutput() AssociationTargetOutput {
	return o
}

func (o AssociationTargetOutput) ToAssociationTargetOutputWithContext(ctx context.Context) AssociationTargetOutput {
	return o
}

// Either `InstanceIds` or `tag:Tag Name` to specify an EC2 tag.
func (o AssociationTargetOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AssociationTarget) string { return v.Key }).(pulumi.StringOutput)
}

// A list of instance IDs or tag values. AWS currently limits this list size to one value.
func (o AssociationTargetOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AssociationTarget) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AssociationTargetArrayOutput struct{ *pulumi.OutputState }

func (AssociationTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssociationTarget)(nil)).Elem()
}

func (o AssociationTargetArrayOutput) ToAssociationTargetArrayOutput() AssociationTargetArrayOutput {
	return o
}

func (o AssociationTargetArrayOutput) ToAssociationTargetArrayOutputWithContext(ctx context.Context) AssociationTargetArrayOutput {
	return o
}

func (o AssociationTargetArrayOutput) Index(i pulumi.IntInput) AssociationTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AssociationTarget {
		return vs[0].([]AssociationTarget)[vs[1].(int)]
	}).(AssociationTargetOutput)
}

type ContactsRotationRecurrence struct {
	DailySettings []ContactsRotationRecurrenceDailySetting `pulumi:"dailySettings"`
	// (Optional) Information about on-call rotations that recur monthly. See Monthly Settings for more details.
	MonthlySettings []ContactsRotationRecurrenceMonthlySetting `pulumi:"monthlySettings"`
	// (Required) The number of contacts, or shift team members designated to be on call concurrently during a shift.
	NumberOfOnCalls int `pulumi:"numberOfOnCalls"`
	// (Required) The number of days, weeks, or months a single rotation lasts.
	RecurrenceMultiplier int `pulumi:"recurrenceMultiplier"`
	// (Optional) Information about the days of the week that the on-call rotation coverage includes. See Shift Coverages for more details.
	ShiftCoverages []ContactsRotationRecurrenceShiftCoverage `pulumi:"shiftCoverages"`
	// (Optional) Information about on-call rotations that recur weekly. See Weekly Settings for more details.
	WeeklySettings []ContactsRotationRecurrenceWeeklySetting `pulumi:"weeklySettings"`
}

// ContactsRotationRecurrenceInput is an input type that accepts ContactsRotationRecurrenceArgs and ContactsRotationRecurrenceOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceInput` via:
//
//	ContactsRotationRecurrenceArgs{...}
type ContactsRotationRecurrenceInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceOutput() ContactsRotationRecurrenceOutput
	ToContactsRotationRecurrenceOutputWithContext(context.Context) ContactsRotationRecurrenceOutput
}

type ContactsRotationRecurrenceArgs struct {
	DailySettings ContactsRotationRecurrenceDailySettingArrayInput `pulumi:"dailySettings"`
	// (Optional) Information about on-call rotations that recur monthly. See Monthly Settings for more details.
	MonthlySettings ContactsRotationRecurrenceMonthlySettingArrayInput `pulumi:"monthlySettings"`
	// (Required) The number of contacts, or shift team members designated to be on call concurrently during a shift.
	NumberOfOnCalls pulumi.IntInput `pulumi:"numberOfOnCalls"`
	// (Required) The number of days, weeks, or months a single rotation lasts.
	RecurrenceMultiplier pulumi.IntInput `pulumi:"recurrenceMultiplier"`
	// (Optional) Information about the days of the week that the on-call rotation coverage includes. See Shift Coverages for more details.
	ShiftCoverages ContactsRotationRecurrenceShiftCoverageArrayInput `pulumi:"shiftCoverages"`
	// (Optional) Information about on-call rotations that recur weekly. See Weekly Settings for more details.
	WeeklySettings ContactsRotationRecurrenceWeeklySettingArrayInput `pulumi:"weeklySettings"`
}

func (ContactsRotationRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrence)(nil)).Elem()
}

func (i ContactsRotationRecurrenceArgs) ToContactsRotationRecurrenceOutput() ContactsRotationRecurrenceOutput {
	return i.ToContactsRotationRecurrenceOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceArgs) ToContactsRotationRecurrenceOutputWithContext(ctx context.Context) ContactsRotationRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceOutput)
}

func (i ContactsRotationRecurrenceArgs) ToContactsRotationRecurrencePtrOutput() ContactsRotationRecurrencePtrOutput {
	return i.ToContactsRotationRecurrencePtrOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceArgs) ToContactsRotationRecurrencePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceOutput).ToContactsRotationRecurrencePtrOutputWithContext(ctx)
}

// ContactsRotationRecurrencePtrInput is an input type that accepts ContactsRotationRecurrenceArgs, ContactsRotationRecurrencePtr and ContactsRotationRecurrencePtrOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrencePtrInput` via:
//
//	        ContactsRotationRecurrenceArgs{...}
//
//	or:
//
//	        nil
type ContactsRotationRecurrencePtrInput interface {
	pulumi.Input

	ToContactsRotationRecurrencePtrOutput() ContactsRotationRecurrencePtrOutput
	ToContactsRotationRecurrencePtrOutputWithContext(context.Context) ContactsRotationRecurrencePtrOutput
}

type contactsRotationRecurrencePtrType ContactsRotationRecurrenceArgs

func ContactsRotationRecurrencePtr(v *ContactsRotationRecurrenceArgs) ContactsRotationRecurrencePtrInput {
	return (*contactsRotationRecurrencePtrType)(v)
}

func (*contactsRotationRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrence)(nil)).Elem()
}

func (i *contactsRotationRecurrencePtrType) ToContactsRotationRecurrencePtrOutput() ContactsRotationRecurrencePtrOutput {
	return i.ToContactsRotationRecurrencePtrOutputWithContext(context.Background())
}

func (i *contactsRotationRecurrencePtrType) ToContactsRotationRecurrencePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrencePtrOutput)
}

type ContactsRotationRecurrenceOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrence)(nil)).Elem()
}

func (o ContactsRotationRecurrenceOutput) ToContactsRotationRecurrenceOutput() ContactsRotationRecurrenceOutput {
	return o
}

func (o ContactsRotationRecurrenceOutput) ToContactsRotationRecurrenceOutputWithContext(ctx context.Context) ContactsRotationRecurrenceOutput {
	return o
}

func (o ContactsRotationRecurrenceOutput) ToContactsRotationRecurrencePtrOutput() ContactsRotationRecurrencePtrOutput {
	return o.ToContactsRotationRecurrencePtrOutputWithContext(context.Background())
}

func (o ContactsRotationRecurrenceOutput) ToContactsRotationRecurrencePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactsRotationRecurrence) *ContactsRotationRecurrence {
		return &v
	}).(ContactsRotationRecurrencePtrOutput)
}

func (o ContactsRotationRecurrenceOutput) DailySettings() ContactsRotationRecurrenceDailySettingArrayOutput {
	return o.ApplyT(func(v ContactsRotationRecurrence) []ContactsRotationRecurrenceDailySetting { return v.DailySettings }).(ContactsRotationRecurrenceDailySettingArrayOutput)
}

// (Optional) Information about on-call rotations that recur monthly. See Monthly Settings for more details.
func (o ContactsRotationRecurrenceOutput) MonthlySettings() ContactsRotationRecurrenceMonthlySettingArrayOutput {
	return o.ApplyT(func(v ContactsRotationRecurrence) []ContactsRotationRecurrenceMonthlySetting {
		return v.MonthlySettings
	}).(ContactsRotationRecurrenceMonthlySettingArrayOutput)
}

// (Required) The number of contacts, or shift team members designated to be on call concurrently during a shift.
func (o ContactsRotationRecurrenceOutput) NumberOfOnCalls() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrence) int { return v.NumberOfOnCalls }).(pulumi.IntOutput)
}

// (Required) The number of days, weeks, or months a single rotation lasts.
func (o ContactsRotationRecurrenceOutput) RecurrenceMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrence) int { return v.RecurrenceMultiplier }).(pulumi.IntOutput)
}

// (Optional) Information about the days of the week that the on-call rotation coverage includes. See Shift Coverages for more details.
func (o ContactsRotationRecurrenceOutput) ShiftCoverages() ContactsRotationRecurrenceShiftCoverageArrayOutput {
	return o.ApplyT(func(v ContactsRotationRecurrence) []ContactsRotationRecurrenceShiftCoverage { return v.ShiftCoverages }).(ContactsRotationRecurrenceShiftCoverageArrayOutput)
}

// (Optional) Information about on-call rotations that recur weekly. See Weekly Settings for more details.
func (o ContactsRotationRecurrenceOutput) WeeklySettings() ContactsRotationRecurrenceWeeklySettingArrayOutput {
	return o.ApplyT(func(v ContactsRotationRecurrence) []ContactsRotationRecurrenceWeeklySetting { return v.WeeklySettings }).(ContactsRotationRecurrenceWeeklySettingArrayOutput)
}

type ContactsRotationRecurrencePtrOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrence)(nil)).Elem()
}

func (o ContactsRotationRecurrencePtrOutput) ToContactsRotationRecurrencePtrOutput() ContactsRotationRecurrencePtrOutput {
	return o
}

func (o ContactsRotationRecurrencePtrOutput) ToContactsRotationRecurrencePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrencePtrOutput {
	return o
}

func (o ContactsRotationRecurrencePtrOutput) Elem() ContactsRotationRecurrenceOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrence) ContactsRotationRecurrence {
		if v != nil {
			return *v
		}
		var ret ContactsRotationRecurrence
		return ret
	}).(ContactsRotationRecurrenceOutput)
}

func (o ContactsRotationRecurrencePtrOutput) DailySettings() ContactsRotationRecurrenceDailySettingArrayOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrence) []ContactsRotationRecurrenceDailySetting {
		if v == nil {
			return nil
		}
		return v.DailySettings
	}).(ContactsRotationRecurrenceDailySettingArrayOutput)
}

// (Optional) Information about on-call rotations that recur monthly. See Monthly Settings for more details.
func (o ContactsRotationRecurrencePtrOutput) MonthlySettings() ContactsRotationRecurrenceMonthlySettingArrayOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrence) []ContactsRotationRecurrenceMonthlySetting {
		if v == nil {
			return nil
		}
		return v.MonthlySettings
	}).(ContactsRotationRecurrenceMonthlySettingArrayOutput)
}

// (Required) The number of contacts, or shift team members designated to be on call concurrently during a shift.
func (o ContactsRotationRecurrencePtrOutput) NumberOfOnCalls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.NumberOfOnCalls
	}).(pulumi.IntPtrOutput)
}

// (Required) The number of days, weeks, or months a single rotation lasts.
func (o ContactsRotationRecurrencePtrOutput) RecurrenceMultiplier() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.RecurrenceMultiplier
	}).(pulumi.IntPtrOutput)
}

// (Optional) Information about the days of the week that the on-call rotation coverage includes. See Shift Coverages for more details.
func (o ContactsRotationRecurrencePtrOutput) ShiftCoverages() ContactsRotationRecurrenceShiftCoverageArrayOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrence) []ContactsRotationRecurrenceShiftCoverage {
		if v == nil {
			return nil
		}
		return v.ShiftCoverages
	}).(ContactsRotationRecurrenceShiftCoverageArrayOutput)
}

// (Optional) Information about on-call rotations that recur weekly. See Weekly Settings for more details.
func (o ContactsRotationRecurrencePtrOutput) WeeklySettings() ContactsRotationRecurrenceWeeklySettingArrayOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrence) []ContactsRotationRecurrenceWeeklySetting {
		if v == nil {
			return nil
		}
		return v.WeeklySettings
	}).(ContactsRotationRecurrenceWeeklySettingArrayOutput)
}

type ContactsRotationRecurrenceDailySetting struct {
	// (Required) The hour of the day.
	HourOfDay int `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// ContactsRotationRecurrenceDailySettingInput is an input type that accepts ContactsRotationRecurrenceDailySettingArgs and ContactsRotationRecurrenceDailySettingOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceDailySettingInput` via:
//
//	ContactsRotationRecurrenceDailySettingArgs{...}
type ContactsRotationRecurrenceDailySettingInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceDailySettingOutput() ContactsRotationRecurrenceDailySettingOutput
	ToContactsRotationRecurrenceDailySettingOutputWithContext(context.Context) ContactsRotationRecurrenceDailySettingOutput
}

type ContactsRotationRecurrenceDailySettingArgs struct {
	// (Required) The hour of the day.
	HourOfDay pulumi.IntInput `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (ContactsRotationRecurrenceDailySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (i ContactsRotationRecurrenceDailySettingArgs) ToContactsRotationRecurrenceDailySettingOutput() ContactsRotationRecurrenceDailySettingOutput {
	return i.ToContactsRotationRecurrenceDailySettingOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceDailySettingArgs) ToContactsRotationRecurrenceDailySettingOutputWithContext(ctx context.Context) ContactsRotationRecurrenceDailySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceDailySettingOutput)
}

// ContactsRotationRecurrenceDailySettingArrayInput is an input type that accepts ContactsRotationRecurrenceDailySettingArray and ContactsRotationRecurrenceDailySettingArrayOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceDailySettingArrayInput` via:
//
//	ContactsRotationRecurrenceDailySettingArray{ ContactsRotationRecurrenceDailySettingArgs{...} }
type ContactsRotationRecurrenceDailySettingArrayInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceDailySettingArrayOutput() ContactsRotationRecurrenceDailySettingArrayOutput
	ToContactsRotationRecurrenceDailySettingArrayOutputWithContext(context.Context) ContactsRotationRecurrenceDailySettingArrayOutput
}

type ContactsRotationRecurrenceDailySettingArray []ContactsRotationRecurrenceDailySettingInput

func (ContactsRotationRecurrenceDailySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (i ContactsRotationRecurrenceDailySettingArray) ToContactsRotationRecurrenceDailySettingArrayOutput() ContactsRotationRecurrenceDailySettingArrayOutput {
	return i.ToContactsRotationRecurrenceDailySettingArrayOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceDailySettingArray) ToContactsRotationRecurrenceDailySettingArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceDailySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceDailySettingArrayOutput)
}

type ContactsRotationRecurrenceDailySettingOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceDailySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (o ContactsRotationRecurrenceDailySettingOutput) ToContactsRotationRecurrenceDailySettingOutput() ContactsRotationRecurrenceDailySettingOutput {
	return o
}

func (o ContactsRotationRecurrenceDailySettingOutput) ToContactsRotationRecurrenceDailySettingOutputWithContext(ctx context.Context) ContactsRotationRecurrenceDailySettingOutput {
	return o
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceDailySettingOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceDailySetting) int { return v.HourOfDay }).(pulumi.IntOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceDailySettingOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceDailySetting) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type ContactsRotationRecurrenceDailySettingArrayOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceDailySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (o ContactsRotationRecurrenceDailySettingArrayOutput) ToContactsRotationRecurrenceDailySettingArrayOutput() ContactsRotationRecurrenceDailySettingArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceDailySettingArrayOutput) ToContactsRotationRecurrenceDailySettingArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceDailySettingArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceDailySettingArrayOutput) Index(i pulumi.IntInput) ContactsRotationRecurrenceDailySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsRotationRecurrenceDailySetting {
		return vs[0].([]ContactsRotationRecurrenceDailySetting)[vs[1].(int)]
	}).(ContactsRotationRecurrenceDailySettingOutput)
}

type ContactsRotationRecurrenceMonthlySetting struct {
	// (Required) The day of the month when monthly recurring on-call rotations begin.
	DayOfMonth int `pulumi:"dayOfMonth"`
	// (Required) The hand off time. See Hand Off Time for more details.
	HandOffTime *ContactsRotationRecurrenceMonthlySettingHandOffTime `pulumi:"handOffTime"`
}

// ContactsRotationRecurrenceMonthlySettingInput is an input type that accepts ContactsRotationRecurrenceMonthlySettingArgs and ContactsRotationRecurrenceMonthlySettingOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceMonthlySettingInput` via:
//
//	ContactsRotationRecurrenceMonthlySettingArgs{...}
type ContactsRotationRecurrenceMonthlySettingInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceMonthlySettingOutput() ContactsRotationRecurrenceMonthlySettingOutput
	ToContactsRotationRecurrenceMonthlySettingOutputWithContext(context.Context) ContactsRotationRecurrenceMonthlySettingOutput
}

type ContactsRotationRecurrenceMonthlySettingArgs struct {
	// (Required) The day of the month when monthly recurring on-call rotations begin.
	DayOfMonth pulumi.IntInput `pulumi:"dayOfMonth"`
	// (Required) The hand off time. See Hand Off Time for more details.
	HandOffTime ContactsRotationRecurrenceMonthlySettingHandOffTimePtrInput `pulumi:"handOffTime"`
}

func (ContactsRotationRecurrenceMonthlySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (i ContactsRotationRecurrenceMonthlySettingArgs) ToContactsRotationRecurrenceMonthlySettingOutput() ContactsRotationRecurrenceMonthlySettingOutput {
	return i.ToContactsRotationRecurrenceMonthlySettingOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceMonthlySettingArgs) ToContactsRotationRecurrenceMonthlySettingOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceMonthlySettingOutput)
}

// ContactsRotationRecurrenceMonthlySettingArrayInput is an input type that accepts ContactsRotationRecurrenceMonthlySettingArray and ContactsRotationRecurrenceMonthlySettingArrayOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceMonthlySettingArrayInput` via:
//
//	ContactsRotationRecurrenceMonthlySettingArray{ ContactsRotationRecurrenceMonthlySettingArgs{...} }
type ContactsRotationRecurrenceMonthlySettingArrayInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceMonthlySettingArrayOutput() ContactsRotationRecurrenceMonthlySettingArrayOutput
	ToContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(context.Context) ContactsRotationRecurrenceMonthlySettingArrayOutput
}

type ContactsRotationRecurrenceMonthlySettingArray []ContactsRotationRecurrenceMonthlySettingInput

func (ContactsRotationRecurrenceMonthlySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (i ContactsRotationRecurrenceMonthlySettingArray) ToContactsRotationRecurrenceMonthlySettingArrayOutput() ContactsRotationRecurrenceMonthlySettingArrayOutput {
	return i.ToContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceMonthlySettingArray) ToContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceMonthlySettingArrayOutput)
}

type ContactsRotationRecurrenceMonthlySettingOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceMonthlySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (o ContactsRotationRecurrenceMonthlySettingOutput) ToContactsRotationRecurrenceMonthlySettingOutput() ContactsRotationRecurrenceMonthlySettingOutput {
	return o
}

func (o ContactsRotationRecurrenceMonthlySettingOutput) ToContactsRotationRecurrenceMonthlySettingOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingOutput {
	return o
}

// (Required) The day of the month when monthly recurring on-call rotations begin.
func (o ContactsRotationRecurrenceMonthlySettingOutput) DayOfMonth() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceMonthlySetting) int { return v.DayOfMonth }).(pulumi.IntOutput)
}

// (Required) The hand off time. See Hand Off Time for more details.
func (o ContactsRotationRecurrenceMonthlySettingOutput) HandOffTime() ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceMonthlySetting) *ContactsRotationRecurrenceMonthlySettingHandOffTime {
		return v.HandOffTime
	}).(ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput)
}

type ContactsRotationRecurrenceMonthlySettingArrayOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceMonthlySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (o ContactsRotationRecurrenceMonthlySettingArrayOutput) ToContactsRotationRecurrenceMonthlySettingArrayOutput() ContactsRotationRecurrenceMonthlySettingArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceMonthlySettingArrayOutput) ToContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceMonthlySettingArrayOutput) Index(i pulumi.IntInput) ContactsRotationRecurrenceMonthlySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsRotationRecurrenceMonthlySetting {
		return vs[0].([]ContactsRotationRecurrenceMonthlySetting)[vs[1].(int)]
	}).(ContactsRotationRecurrenceMonthlySettingOutput)
}

type ContactsRotationRecurrenceMonthlySettingHandOffTime struct {
	// (Required) The hour of the day.
	HourOfDay int `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// ContactsRotationRecurrenceMonthlySettingHandOffTimeInput is an input type that accepts ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs and ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceMonthlySettingHandOffTimeInput` via:
//
//	ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs{...}
type ContactsRotationRecurrenceMonthlySettingHandOffTimeInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceMonthlySettingHandOffTimeOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput
	ToContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput
}

type ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs struct {
	// (Required) The hour of the day.
	HourOfDay pulumi.IntInput `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (i ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ToContactsRotationRecurrenceMonthlySettingHandOffTimeOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return i.ToContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ToContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput)
}

func (i ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return i.ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput).ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(ctx)
}

// ContactsRotationRecurrenceMonthlySettingHandOffTimePtrInput is an input type that accepts ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs, ContactsRotationRecurrenceMonthlySettingHandOffTimePtr and ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceMonthlySettingHandOffTimePtrInput` via:
//
//	        ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs{...}
//
//	or:
//
//	        nil
type ContactsRotationRecurrenceMonthlySettingHandOffTimePtrInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput
	ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput
}

type contactsRotationRecurrenceMonthlySettingHandOffTimePtrType ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs

func ContactsRotationRecurrenceMonthlySettingHandOffTimePtr(v *ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ContactsRotationRecurrenceMonthlySettingHandOffTimePtrInput {
	return (*contactsRotationRecurrenceMonthlySettingHandOffTimePtrType)(v)
}

func (*contactsRotationRecurrenceMonthlySettingHandOffTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (i *contactsRotationRecurrenceMonthlySettingHandOffTimePtrType) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return i.ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(context.Background())
}

func (i *contactsRotationRecurrenceMonthlySettingHandOffTimePtrType) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput)
}

type ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (o ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ToContactsRotationRecurrenceMonthlySettingHandOffTimeOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return o
}

func (o ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ToContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return o
}

func (o ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return o.ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(context.Background())
}

func (o ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactsRotationRecurrenceMonthlySettingHandOffTime) *ContactsRotationRecurrenceMonthlySettingHandOffTime {
		return &v
	}).(ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceMonthlySettingHandOffTime) int { return v.HourOfDay }).(pulumi.IntOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceMonthlySettingHandOffTime) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (o ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput() ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return o
}

func (o ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput) ToContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput {
	return o
}

func (o ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput) Elem() ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceMonthlySettingHandOffTime) ContactsRotationRecurrenceMonthlySettingHandOffTime {
		if v != nil {
			return *v
		}
		var ret ContactsRotationRecurrenceMonthlySettingHandOffTime
		return ret
	}).(ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceMonthlySettingHandOffTime) *int {
		if v == nil {
			return nil
		}
		return &v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput) MinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceMonthlySettingHandOffTime) *int {
		if v == nil {
			return nil
		}
		return &v.MinuteOfHour
	}).(pulumi.IntPtrOutput)
}

type ContactsRotationRecurrenceShiftCoverage struct {
	// (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
	CoverageTimes []ContactsRotationRecurrenceShiftCoverageCoverageTime `pulumi:"coverageTimes"`
	MapBlockKey   string                                                `pulumi:"mapBlockKey"`
}

// ContactsRotationRecurrenceShiftCoverageInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageArgs and ContactsRotationRecurrenceShiftCoverageOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageInput` via:
//
//	ContactsRotationRecurrenceShiftCoverageArgs{...}
type ContactsRotationRecurrenceShiftCoverageInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageOutput() ContactsRotationRecurrenceShiftCoverageOutput
	ToContactsRotationRecurrenceShiftCoverageOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageOutput
}

type ContactsRotationRecurrenceShiftCoverageArgs struct {
	// (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
	CoverageTimes ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput `pulumi:"coverageTimes"`
	MapBlockKey   pulumi.StringInput                                            `pulumi:"mapBlockKey"`
}

func (ContactsRotationRecurrenceShiftCoverageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (i ContactsRotationRecurrenceShiftCoverageArgs) ToContactsRotationRecurrenceShiftCoverageOutput() ContactsRotationRecurrenceShiftCoverageOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageArgs) ToContactsRotationRecurrenceShiftCoverageOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageOutput)
}

// ContactsRotationRecurrenceShiftCoverageArrayInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageArray and ContactsRotationRecurrenceShiftCoverageArrayOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageArrayInput` via:
//
//	ContactsRotationRecurrenceShiftCoverageArray{ ContactsRotationRecurrenceShiftCoverageArgs{...} }
type ContactsRotationRecurrenceShiftCoverageArrayInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageArrayOutput() ContactsRotationRecurrenceShiftCoverageArrayOutput
	ToContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageArrayOutput
}

type ContactsRotationRecurrenceShiftCoverageArray []ContactsRotationRecurrenceShiftCoverageInput

func (ContactsRotationRecurrenceShiftCoverageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (i ContactsRotationRecurrenceShiftCoverageArray) ToContactsRotationRecurrenceShiftCoverageArrayOutput() ContactsRotationRecurrenceShiftCoverageArrayOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageArray) ToContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageArrayOutput)
}

type ContactsRotationRecurrenceShiftCoverageOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageOutput) ToContactsRotationRecurrenceShiftCoverageOutput() ContactsRotationRecurrenceShiftCoverageOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageOutput) ToContactsRotationRecurrenceShiftCoverageOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageOutput {
	return o
}

// (Required) Information about when an on-call shift begins and ends. See Coverage Times for more details.
func (o ContactsRotationRecurrenceShiftCoverageOutput) CoverageTimes() ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverage) []ContactsRotationRecurrenceShiftCoverageCoverageTime {
		return v.CoverageTimes
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput)
}

func (o ContactsRotationRecurrenceShiftCoverageOutput) MapBlockKey() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverage) string { return v.MapBlockKey }).(pulumi.StringOutput)
}

type ContactsRotationRecurrenceShiftCoverageArrayOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageArrayOutput) ToContactsRotationRecurrenceShiftCoverageArrayOutput() ContactsRotationRecurrenceShiftCoverageArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageArrayOutput) ToContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageArrayOutput) Index(i pulumi.IntInput) ContactsRotationRecurrenceShiftCoverageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsRotationRecurrenceShiftCoverage {
		return vs[0].([]ContactsRotationRecurrenceShiftCoverage)[vs[1].(int)]
	}).(ContactsRotationRecurrenceShiftCoverageOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTime struct {
	// (Required) The end time of the on-call shift. See Hand Off Time for more details.
	End *ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd `pulumi:"end"`
	// (Required) The start time of the on-call shift. See Hand Off Time for more details.
	Start *ContactsRotationRecurrenceShiftCoverageCoverageTimeStart `pulumi:"start"`
}

// ContactsRotationRecurrenceShiftCoverageCoverageTimeInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs and ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageCoverageTimeInput` via:
//
//	ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs{...}
type ContactsRotationRecurrenceShiftCoverageCoverageTimeInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageCoverageTimeOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput
	ToContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs struct {
	// (Required) The end time of the on-call shift. See Hand Off Time for more details.
	End ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrInput `pulumi:"end"`
	// (Required) The start time of the on-call shift. See Hand Off Time for more details.
	Start ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrInput `pulumi:"start"`
}

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput)
}

// ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageCoverageTimeArray and ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput` via:
//
//	ContactsRotationRecurrenceShiftCoverageCoverageTimeArray{ ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs{...} }
type ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput
	ToContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeArray []ContactsRotationRecurrenceShiftCoverageCoverageTimeInput

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeArray) ToContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeArray) ToContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return o
}

// (Required) The end time of the on-call shift. See Hand Off Time for more details.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) End() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverageCoverageTime) *ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd {
		return v.End
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput)
}

// (Required) The start time of the on-call shift. See Hand Off Time for more details.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) Start() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverageCoverageTime) *ContactsRotationRecurrenceShiftCoverageCoverageTimeStart {
		return v.Start
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) Index(i pulumi.IntInput) ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsRotationRecurrenceShiftCoverageCoverageTime {
		return vs[0].([]ContactsRotationRecurrenceShiftCoverageCoverageTime)[vs[1].(int)]
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd struct {
	// (Required) The hour of the day.
	HourOfDay int `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// ContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs and ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput` via:
//
//	ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs{...}
type ContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput
	ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs struct {
	// (Required) The hour of the day.
	HourOfDay pulumi.IntInput `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput)
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput).ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(ctx)
}

// ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs, ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtr and ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrInput` via:
//
//	        ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs{...}
//
//	or:
//
//	        nil
type ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput
	ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput
}

type contactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrType ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs

func ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtr(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrInput {
	return (*contactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrType)(v)
}

func (*contactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (i *contactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrType) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(context.Background())
}

func (i *contactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrType) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return o.ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(context.Background())
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) *ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd {
		return &v
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) int { return v.HourOfDay }).(pulumi.IntOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput) Elem() ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd {
		if v != nil {
			return *v
		}
		var ret ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd
		return ret
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) *int {
		if v == nil {
			return nil
		}
		return &v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput) MinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) *int {
		if v == nil {
			return nil
		}
		return &v.MinuteOfHour
	}).(pulumi.IntPtrOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeStart struct {
	// (Required) The hour of the day.
	HourOfDay int `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// ContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs and ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput` via:
//
//	ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs{...}
type ContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput
	ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs struct {
	// (Required) The hour of the day.
	HourOfDay pulumi.IntInput `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput)
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput).ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(ctx)
}

// ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrInput is an input type that accepts ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs, ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtr and ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrInput` via:
//
//	        ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs{...}
//
//	or:
//
//	        nil
type ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput
	ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput
}

type contactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrType ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs

func ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtr(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrInput {
	return (*contactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrType)(v)
}

func (*contactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (i *contactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrType) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return i.ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(context.Background())
}

func (i *contactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrType) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return o.ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(context.Background())
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactsRotationRecurrenceShiftCoverageCoverageTimeStart) *ContactsRotationRecurrenceShiftCoverageCoverageTimeStart {
		return &v
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverageCoverageTimeStart) int { return v.HourOfDay }).(pulumi.IntOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceShiftCoverageCoverageTimeStart) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput) ToContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput {
	return o
}

func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput) Elem() ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeStart) ContactsRotationRecurrenceShiftCoverageCoverageTimeStart {
		if v != nil {
			return *v
		}
		var ret ContactsRotationRecurrenceShiftCoverageCoverageTimeStart
		return ret
	}).(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeStart) *int {
		if v == nil {
			return nil
		}
		return &v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput) MinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceShiftCoverageCoverageTimeStart) *int {
		if v == nil {
			return nil
		}
		return &v.MinuteOfHour
	}).(pulumi.IntPtrOutput)
}

type ContactsRotationRecurrenceWeeklySetting struct {
	// (Required) The day of the week when the shift coverage occurs.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// (Required) The hand off time. See Hand Off Time for more details.
	HandOffTime *ContactsRotationRecurrenceWeeklySettingHandOffTime `pulumi:"handOffTime"`
}

// ContactsRotationRecurrenceWeeklySettingInput is an input type that accepts ContactsRotationRecurrenceWeeklySettingArgs and ContactsRotationRecurrenceWeeklySettingOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceWeeklySettingInput` via:
//
//	ContactsRotationRecurrenceWeeklySettingArgs{...}
type ContactsRotationRecurrenceWeeklySettingInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceWeeklySettingOutput() ContactsRotationRecurrenceWeeklySettingOutput
	ToContactsRotationRecurrenceWeeklySettingOutputWithContext(context.Context) ContactsRotationRecurrenceWeeklySettingOutput
}

type ContactsRotationRecurrenceWeeklySettingArgs struct {
	// (Required) The day of the week when the shift coverage occurs.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// (Required) The hand off time. See Hand Off Time for more details.
	HandOffTime ContactsRotationRecurrenceWeeklySettingHandOffTimePtrInput `pulumi:"handOffTime"`
}

func (ContactsRotationRecurrenceWeeklySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (i ContactsRotationRecurrenceWeeklySettingArgs) ToContactsRotationRecurrenceWeeklySettingOutput() ContactsRotationRecurrenceWeeklySettingOutput {
	return i.ToContactsRotationRecurrenceWeeklySettingOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceWeeklySettingArgs) ToContactsRotationRecurrenceWeeklySettingOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceWeeklySettingOutput)
}

// ContactsRotationRecurrenceWeeklySettingArrayInput is an input type that accepts ContactsRotationRecurrenceWeeklySettingArray and ContactsRotationRecurrenceWeeklySettingArrayOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceWeeklySettingArrayInput` via:
//
//	ContactsRotationRecurrenceWeeklySettingArray{ ContactsRotationRecurrenceWeeklySettingArgs{...} }
type ContactsRotationRecurrenceWeeklySettingArrayInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceWeeklySettingArrayOutput() ContactsRotationRecurrenceWeeklySettingArrayOutput
	ToContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(context.Context) ContactsRotationRecurrenceWeeklySettingArrayOutput
}

type ContactsRotationRecurrenceWeeklySettingArray []ContactsRotationRecurrenceWeeklySettingInput

func (ContactsRotationRecurrenceWeeklySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (i ContactsRotationRecurrenceWeeklySettingArray) ToContactsRotationRecurrenceWeeklySettingArrayOutput() ContactsRotationRecurrenceWeeklySettingArrayOutput {
	return i.ToContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceWeeklySettingArray) ToContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceWeeklySettingArrayOutput)
}

type ContactsRotationRecurrenceWeeklySettingOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceWeeklySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (o ContactsRotationRecurrenceWeeklySettingOutput) ToContactsRotationRecurrenceWeeklySettingOutput() ContactsRotationRecurrenceWeeklySettingOutput {
	return o
}

func (o ContactsRotationRecurrenceWeeklySettingOutput) ToContactsRotationRecurrenceWeeklySettingOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingOutput {
	return o
}

// (Required) The day of the week when the shift coverage occurs.
func (o ContactsRotationRecurrenceWeeklySettingOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceWeeklySetting) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// (Required) The hand off time. See Hand Off Time for more details.
func (o ContactsRotationRecurrenceWeeklySettingOutput) HandOffTime() ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceWeeklySetting) *ContactsRotationRecurrenceWeeklySettingHandOffTime {
		return v.HandOffTime
	}).(ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput)
}

type ContactsRotationRecurrenceWeeklySettingArrayOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceWeeklySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (o ContactsRotationRecurrenceWeeklySettingArrayOutput) ToContactsRotationRecurrenceWeeklySettingArrayOutput() ContactsRotationRecurrenceWeeklySettingArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceWeeklySettingArrayOutput) ToContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingArrayOutput {
	return o
}

func (o ContactsRotationRecurrenceWeeklySettingArrayOutput) Index(i pulumi.IntInput) ContactsRotationRecurrenceWeeklySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsRotationRecurrenceWeeklySetting {
		return vs[0].([]ContactsRotationRecurrenceWeeklySetting)[vs[1].(int)]
	}).(ContactsRotationRecurrenceWeeklySettingOutput)
}

type ContactsRotationRecurrenceWeeklySettingHandOffTime struct {
	// (Required) The hour of the day.
	HourOfDay int `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// ContactsRotationRecurrenceWeeklySettingHandOffTimeInput is an input type that accepts ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs and ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceWeeklySettingHandOffTimeInput` via:
//
//	ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs{...}
type ContactsRotationRecurrenceWeeklySettingHandOffTimeInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceWeeklySettingHandOffTimeOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput
	ToContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput
}

type ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs struct {
	// (Required) The hour of the day.
	HourOfDay pulumi.IntInput `pulumi:"hourOfDay"`
	// (Required) The minutes of the hour.
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (i ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ToContactsRotationRecurrenceWeeklySettingHandOffTimeOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return i.ToContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ToContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput)
}

func (i ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return i.ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(context.Background())
}

func (i ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput).ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(ctx)
}

// ContactsRotationRecurrenceWeeklySettingHandOffTimePtrInput is an input type that accepts ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs, ContactsRotationRecurrenceWeeklySettingHandOffTimePtr and ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput values.
// You can construct a concrete instance of `ContactsRotationRecurrenceWeeklySettingHandOffTimePtrInput` via:
//
//	        ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs{...}
//
//	or:
//
//	        nil
type ContactsRotationRecurrenceWeeklySettingHandOffTimePtrInput interface {
	pulumi.Input

	ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput
	ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput
}

type contactsRotationRecurrenceWeeklySettingHandOffTimePtrType ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs

func ContactsRotationRecurrenceWeeklySettingHandOffTimePtr(v *ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ContactsRotationRecurrenceWeeklySettingHandOffTimePtrInput {
	return (*contactsRotationRecurrenceWeeklySettingHandOffTimePtrType)(v)
}

func (*contactsRotationRecurrenceWeeklySettingHandOffTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (i *contactsRotationRecurrenceWeeklySettingHandOffTimePtrType) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return i.ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(context.Background())
}

func (i *contactsRotationRecurrenceWeeklySettingHandOffTimePtrType) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput)
}

type ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (o ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ToContactsRotationRecurrenceWeeklySettingHandOffTimeOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return o
}

func (o ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ToContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return o
}

func (o ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return o.ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(context.Background())
}

func (o ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactsRotationRecurrenceWeeklySettingHandOffTime) *ContactsRotationRecurrenceWeeklySettingHandOffTime {
		return &v
	}).(ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceWeeklySettingHandOffTime) int { return v.HourOfDay }).(pulumi.IntOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v ContactsRotationRecurrenceWeeklySettingHandOffTime) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput struct{ *pulumi.OutputState }

func (ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (o ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput() ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return o
}

func (o ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput) ToContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutputWithContext(ctx context.Context) ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput {
	return o
}

func (o ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput) Elem() ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceWeeklySettingHandOffTime) ContactsRotationRecurrenceWeeklySettingHandOffTime {
		if v != nil {
			return *v
		}
		var ret ContactsRotationRecurrenceWeeklySettingHandOffTime
		return ret
	}).(ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput)
}

// (Required) The hour of the day.
func (o ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput) HourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceWeeklySettingHandOffTime) *int {
		if v == nil {
			return nil
		}
		return &v.HourOfDay
	}).(pulumi.IntPtrOutput)
}

// (Required) The minutes of the hour.
func (o ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput) MinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContactsRotationRecurrenceWeeklySettingHandOffTime) *int {
		if v == nil {
			return nil
		}
		return &v.MinuteOfHour
	}).(pulumi.IntPtrOutput)
}

type DocumentAttachmentsSource struct {
	// The key of a key-value pair that identifies the location of an attachment to the document. Valid values: `SourceUrl`, `S3FileUrl`, `AttachmentReference`.
	Key string `pulumi:"key"`
	// The name of the document attachment file.
	Name *string `pulumi:"name"`
	// The value of a key-value pair that identifies the location of an attachment to the document. The argument format is a list of a single string that depends on the type of key you specify - see the [API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_AttachmentsSource.html) for details.
	Values []string `pulumi:"values"`
}

// DocumentAttachmentsSourceInput is an input type that accepts DocumentAttachmentsSourceArgs and DocumentAttachmentsSourceOutput values.
// You can construct a concrete instance of `DocumentAttachmentsSourceInput` via:
//
//	DocumentAttachmentsSourceArgs{...}
type DocumentAttachmentsSourceInput interface {
	pulumi.Input

	ToDocumentAttachmentsSourceOutput() DocumentAttachmentsSourceOutput
	ToDocumentAttachmentsSourceOutputWithContext(context.Context) DocumentAttachmentsSourceOutput
}

type DocumentAttachmentsSourceArgs struct {
	// The key of a key-value pair that identifies the location of an attachment to the document. Valid values: `SourceUrl`, `S3FileUrl`, `AttachmentReference`.
	Key pulumi.StringInput `pulumi:"key"`
	// The name of the document attachment file.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of a key-value pair that identifies the location of an attachment to the document. The argument format is a list of a single string that depends on the type of key you specify - see the [API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_AttachmentsSource.html) for details.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DocumentAttachmentsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentAttachmentsSource)(nil)).Elem()
}

func (i DocumentAttachmentsSourceArgs) ToDocumentAttachmentsSourceOutput() DocumentAttachmentsSourceOutput {
	return i.ToDocumentAttachmentsSourceOutputWithContext(context.Background())
}

func (i DocumentAttachmentsSourceArgs) ToDocumentAttachmentsSourceOutputWithContext(ctx context.Context) DocumentAttachmentsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAttachmentsSourceOutput)
}

// DocumentAttachmentsSourceArrayInput is an input type that accepts DocumentAttachmentsSourceArray and DocumentAttachmentsSourceArrayOutput values.
// You can construct a concrete instance of `DocumentAttachmentsSourceArrayInput` via:
//
//	DocumentAttachmentsSourceArray{ DocumentAttachmentsSourceArgs{...} }
type DocumentAttachmentsSourceArrayInput interface {
	pulumi.Input

	ToDocumentAttachmentsSourceArrayOutput() DocumentAttachmentsSourceArrayOutput
	ToDocumentAttachmentsSourceArrayOutputWithContext(context.Context) DocumentAttachmentsSourceArrayOutput
}

type DocumentAttachmentsSourceArray []DocumentAttachmentsSourceInput

func (DocumentAttachmentsSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentAttachmentsSource)(nil)).Elem()
}

func (i DocumentAttachmentsSourceArray) ToDocumentAttachmentsSourceArrayOutput() DocumentAttachmentsSourceArrayOutput {
	return i.ToDocumentAttachmentsSourceArrayOutputWithContext(context.Background())
}

func (i DocumentAttachmentsSourceArray) ToDocumentAttachmentsSourceArrayOutputWithContext(ctx context.Context) DocumentAttachmentsSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAttachmentsSourceArrayOutput)
}

type DocumentAttachmentsSourceOutput struct{ *pulumi.OutputState }

func (DocumentAttachmentsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentAttachmentsSource)(nil)).Elem()
}

func (o DocumentAttachmentsSourceOutput) ToDocumentAttachmentsSourceOutput() DocumentAttachmentsSourceOutput {
	return o
}

func (o DocumentAttachmentsSourceOutput) ToDocumentAttachmentsSourceOutputWithContext(ctx context.Context) DocumentAttachmentsSourceOutput {
	return o
}

// The key of a key-value pair that identifies the location of an attachment to the document. Valid values: `SourceUrl`, `S3FileUrl`, `AttachmentReference`.
func (o DocumentAttachmentsSourceOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentAttachmentsSource) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the document attachment file.
func (o DocumentAttachmentsSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentAttachmentsSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of a key-value pair that identifies the location of an attachment to the document. The argument format is a list of a single string that depends on the type of key you specify - see the [API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_AttachmentsSource.html) for details.
func (o DocumentAttachmentsSourceOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DocumentAttachmentsSource) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DocumentAttachmentsSourceArrayOutput struct{ *pulumi.OutputState }

func (DocumentAttachmentsSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentAttachmentsSource)(nil)).Elem()
}

func (o DocumentAttachmentsSourceArrayOutput) ToDocumentAttachmentsSourceArrayOutput() DocumentAttachmentsSourceArrayOutput {
	return o
}

func (o DocumentAttachmentsSourceArrayOutput) ToDocumentAttachmentsSourceArrayOutputWithContext(ctx context.Context) DocumentAttachmentsSourceArrayOutput {
	return o
}

func (o DocumentAttachmentsSourceArrayOutput) Index(i pulumi.IntInput) DocumentAttachmentsSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DocumentAttachmentsSource {
		return vs[0].([]DocumentAttachmentsSource)[vs[1].(int)]
	}).(DocumentAttachmentsSourceOutput)
}

type DocumentParameter struct {
	// If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.
	Description *string `pulumi:"description"`
	// The name of the document.
	Name *string `pulumi:"name"`
	// The type of parameter. Valid values: `String`, `StringList`.
	Type *string `pulumi:"type"`
}

// DocumentParameterInput is an input type that accepts DocumentParameterArgs and DocumentParameterOutput values.
// You can construct a concrete instance of `DocumentParameterInput` via:
//
//	DocumentParameterArgs{...}
type DocumentParameterInput interface {
	pulumi.Input

	ToDocumentParameterOutput() DocumentParameterOutput
	ToDocumentParameterOutputWithContext(context.Context) DocumentParameterOutput
}

type DocumentParameterArgs struct {
	// If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the document.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of parameter. Valid values: `String`, `StringList`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DocumentParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentParameter)(nil)).Elem()
}

func (i DocumentParameterArgs) ToDocumentParameterOutput() DocumentParameterOutput {
	return i.ToDocumentParameterOutputWithContext(context.Background())
}

func (i DocumentParameterArgs) ToDocumentParameterOutputWithContext(ctx context.Context) DocumentParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentParameterOutput)
}

// DocumentParameterArrayInput is an input type that accepts DocumentParameterArray and DocumentParameterArrayOutput values.
// You can construct a concrete instance of `DocumentParameterArrayInput` via:
//
//	DocumentParameterArray{ DocumentParameterArgs{...} }
type DocumentParameterArrayInput interface {
	pulumi.Input

	ToDocumentParameterArrayOutput() DocumentParameterArrayOutput
	ToDocumentParameterArrayOutputWithContext(context.Context) DocumentParameterArrayOutput
}

type DocumentParameterArray []DocumentParameterInput

func (DocumentParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentParameter)(nil)).Elem()
}

func (i DocumentParameterArray) ToDocumentParameterArrayOutput() DocumentParameterArrayOutput {
	return i.ToDocumentParameterArrayOutputWithContext(context.Background())
}

func (i DocumentParameterArray) ToDocumentParameterArrayOutputWithContext(ctx context.Context) DocumentParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentParameterArrayOutput)
}

type DocumentParameterOutput struct{ *pulumi.OutputState }

func (DocumentParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentParameter)(nil)).Elem()
}

func (o DocumentParameterOutput) ToDocumentParameterOutput() DocumentParameterOutput {
	return o
}

func (o DocumentParameterOutput) ToDocumentParameterOutputWithContext(ctx context.Context) DocumentParameterOutput {
	return o
}

// If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.
func (o DocumentParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.
func (o DocumentParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the document.
func (o DocumentParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of parameter. Valid values: `String`, `StringList`.
func (o DocumentParameterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentParameter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DocumentParameterArrayOutput struct{ *pulumi.OutputState }

func (DocumentParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DocumentParameter)(nil)).Elem()
}

func (o DocumentParameterArrayOutput) ToDocumentParameterArrayOutput() DocumentParameterArrayOutput {
	return o
}

func (o DocumentParameterArrayOutput) ToDocumentParameterArrayOutputWithContext(ctx context.Context) DocumentParameterArrayOutput {
	return o
}

func (o DocumentParameterArrayOutput) Index(i pulumi.IntInput) DocumentParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DocumentParameter {
		return vs[0].([]DocumentParameter)[vs[1].(int)]
	}).(DocumentParameterOutput)
}

type MaintenanceWindowTargetTarget struct {
	Key    string   `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// MaintenanceWindowTargetTargetInput is an input type that accepts MaintenanceWindowTargetTargetArgs and MaintenanceWindowTargetTargetOutput values.
// You can construct a concrete instance of `MaintenanceWindowTargetTargetInput` via:
//
//	MaintenanceWindowTargetTargetArgs{...}
type MaintenanceWindowTargetTargetInput interface {
	pulumi.Input

	ToMaintenanceWindowTargetTargetOutput() MaintenanceWindowTargetTargetOutput
	ToMaintenanceWindowTargetTargetOutputWithContext(context.Context) MaintenanceWindowTargetTargetOutput
}

type MaintenanceWindowTargetTargetArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MaintenanceWindowTargetTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTargetTarget)(nil)).Elem()
}

func (i MaintenanceWindowTargetTargetArgs) ToMaintenanceWindowTargetTargetOutput() MaintenanceWindowTargetTargetOutput {
	return i.ToMaintenanceWindowTargetTargetOutputWithContext(context.Background())
}

func (i MaintenanceWindowTargetTargetArgs) ToMaintenanceWindowTargetTargetOutputWithContext(ctx context.Context) MaintenanceWindowTargetTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTargetTargetOutput)
}

// MaintenanceWindowTargetTargetArrayInput is an input type that accepts MaintenanceWindowTargetTargetArray and MaintenanceWindowTargetTargetArrayOutput values.
// You can construct a concrete instance of `MaintenanceWindowTargetTargetArrayInput` via:
//
//	MaintenanceWindowTargetTargetArray{ MaintenanceWindowTargetTargetArgs{...} }
type MaintenanceWindowTargetTargetArrayInput interface {
	pulumi.Input

	ToMaintenanceWindowTargetTargetArrayOutput() MaintenanceWindowTargetTargetArrayOutput
	ToMaintenanceWindowTargetTargetArrayOutputWithContext(context.Context) MaintenanceWindowTargetTargetArrayOutput
}

type MaintenanceWindowTargetTargetArray []MaintenanceWindowTargetTargetInput

func (MaintenanceWindowTargetTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTargetTarget)(nil)).Elem()
}

func (i MaintenanceWindowTargetTargetArray) ToMaintenanceWindowTargetTargetArrayOutput() MaintenanceWindowTargetTargetArrayOutput {
	return i.ToMaintenanceWindowTargetTargetArrayOutputWithContext(context.Background())
}

func (i MaintenanceWindowTargetTargetArray) ToMaintenanceWindowTargetTargetArrayOutputWithContext(ctx context.Context) MaintenanceWindowTargetTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTargetTargetArrayOutput)
}

type MaintenanceWindowTargetTargetOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTargetTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTargetTarget)(nil)).Elem()
}

func (o MaintenanceWindowTargetTargetOutput) ToMaintenanceWindowTargetTargetOutput() MaintenanceWindowTargetTargetOutput {
	return o
}

func (o MaintenanceWindowTargetTargetOutput) ToMaintenanceWindowTargetTargetOutputWithContext(ctx context.Context) MaintenanceWindowTargetTargetOutput {
	return o
}

func (o MaintenanceWindowTargetTargetOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MaintenanceWindowTargetTarget) string { return v.Key }).(pulumi.StringOutput)
}

func (o MaintenanceWindowTargetTargetOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MaintenanceWindowTargetTarget) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type MaintenanceWindowTargetTargetArrayOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTargetTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTargetTarget)(nil)).Elem()
}

func (o MaintenanceWindowTargetTargetArrayOutput) ToMaintenanceWindowTargetTargetArrayOutput() MaintenanceWindowTargetTargetArrayOutput {
	return o
}

func (o MaintenanceWindowTargetTargetArrayOutput) ToMaintenanceWindowTargetTargetArrayOutputWithContext(ctx context.Context) MaintenanceWindowTargetTargetArrayOutput {
	return o
}

func (o MaintenanceWindowTargetTargetArrayOutput) Index(i pulumi.IntInput) MaintenanceWindowTargetTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MaintenanceWindowTargetTarget {
		return vs[0].([]MaintenanceWindowTargetTarget)[vs[1].(int)]
	}).(MaintenanceWindowTargetTargetOutput)
}

type MaintenanceWindowTaskTarget struct {
	Key string `pulumi:"key"`
	// The array of strings.
	Values []string `pulumi:"values"`
}

// MaintenanceWindowTaskTargetInput is an input type that accepts MaintenanceWindowTaskTargetArgs and MaintenanceWindowTaskTargetOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTargetInput` via:
//
//	MaintenanceWindowTaskTargetArgs{...}
type MaintenanceWindowTaskTargetInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTargetOutput() MaintenanceWindowTaskTargetOutput
	ToMaintenanceWindowTaskTargetOutputWithContext(context.Context) MaintenanceWindowTaskTargetOutput
}

type MaintenanceWindowTaskTargetArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
	// The array of strings.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MaintenanceWindowTaskTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTarget)(nil)).Elem()
}

func (i MaintenanceWindowTaskTargetArgs) ToMaintenanceWindowTaskTargetOutput() MaintenanceWindowTaskTargetOutput {
	return i.ToMaintenanceWindowTaskTargetOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTargetArgs) ToMaintenanceWindowTaskTargetOutputWithContext(ctx context.Context) MaintenanceWindowTaskTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTargetOutput)
}

// MaintenanceWindowTaskTargetArrayInput is an input type that accepts MaintenanceWindowTaskTargetArray and MaintenanceWindowTaskTargetArrayOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTargetArrayInput` via:
//
//	MaintenanceWindowTaskTargetArray{ MaintenanceWindowTaskTargetArgs{...} }
type MaintenanceWindowTaskTargetArrayInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTargetArrayOutput() MaintenanceWindowTaskTargetArrayOutput
	ToMaintenanceWindowTaskTargetArrayOutputWithContext(context.Context) MaintenanceWindowTaskTargetArrayOutput
}

type MaintenanceWindowTaskTargetArray []MaintenanceWindowTaskTargetInput

func (MaintenanceWindowTaskTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTaskTarget)(nil)).Elem()
}

func (i MaintenanceWindowTaskTargetArray) ToMaintenanceWindowTaskTargetArrayOutput() MaintenanceWindowTaskTargetArrayOutput {
	return i.ToMaintenanceWindowTaskTargetArrayOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTargetArray) ToMaintenanceWindowTaskTargetArrayOutputWithContext(ctx context.Context) MaintenanceWindowTaskTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTargetArrayOutput)
}

type MaintenanceWindowTaskTargetOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTarget)(nil)).Elem()
}

func (o MaintenanceWindowTaskTargetOutput) ToMaintenanceWindowTaskTargetOutput() MaintenanceWindowTaskTargetOutput {
	return o
}

func (o MaintenanceWindowTaskTargetOutput) ToMaintenanceWindowTaskTargetOutputWithContext(ctx context.Context) MaintenanceWindowTaskTargetOutput {
	return o
}

func (o MaintenanceWindowTaskTargetOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTarget) string { return v.Key }).(pulumi.StringOutput)
}

// The array of strings.
func (o MaintenanceWindowTaskTargetOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTarget) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type MaintenanceWindowTaskTargetArrayOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTaskTarget)(nil)).Elem()
}

func (o MaintenanceWindowTaskTargetArrayOutput) ToMaintenanceWindowTaskTargetArrayOutput() MaintenanceWindowTaskTargetArrayOutput {
	return o
}

func (o MaintenanceWindowTaskTargetArrayOutput) ToMaintenanceWindowTaskTargetArrayOutputWithContext(ctx context.Context) MaintenanceWindowTaskTargetArrayOutput {
	return o
}

func (o MaintenanceWindowTaskTargetArrayOutput) Index(i pulumi.IntInput) MaintenanceWindowTaskTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MaintenanceWindowTaskTarget {
		return vs[0].([]MaintenanceWindowTaskTarget)[vs[1].(int)]
	}).(MaintenanceWindowTaskTargetOutput)
}

type MaintenanceWindowTaskTaskInvocationParameters struct {
	// The parameters for an AUTOMATION task type. Documented below.
	AutomationParameters *MaintenanceWindowTaskTaskInvocationParametersAutomationParameters `pulumi:"automationParameters"`
	// The parameters for a LAMBDA task type. Documented below.
	LambdaParameters *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters `pulumi:"lambdaParameters"`
	// The parameters for a RUN_COMMAND task type. Documented below.
	RunCommandParameters *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters `pulumi:"runCommandParameters"`
	// The parameters for a STEP_FUNCTIONS task type. Documented below.
	StepFunctionsParameters *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters `pulumi:"stepFunctionsParameters"`
}

// MaintenanceWindowTaskTaskInvocationParametersInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersArgs and MaintenanceWindowTaskTaskInvocationParametersOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersOutput() MaintenanceWindowTaskTaskInvocationParametersOutput
	ToMaintenanceWindowTaskTaskInvocationParametersOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersOutput
}

type MaintenanceWindowTaskTaskInvocationParametersArgs struct {
	// The parameters for an AUTOMATION task type. Documented below.
	AutomationParameters MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrInput `pulumi:"automationParameters"`
	// The parameters for a LAMBDA task type. Documented below.
	LambdaParameters MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrInput `pulumi:"lambdaParameters"`
	// The parameters for a RUN_COMMAND task type. Documented below.
	RunCommandParameters MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrInput `pulumi:"runCommandParameters"`
	// The parameters for a STEP_FUNCTIONS task type. Documented below.
	StepFunctionsParameters MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrInput `pulumi:"stepFunctionsParameters"`
}

func (MaintenanceWindowTaskTaskInvocationParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParameters)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersOutput() MaintenanceWindowTaskTaskInvocationParametersOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersOutput)
}

func (i MaintenanceWindowTaskTaskInvocationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersOutput).ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(ctx)
}

// MaintenanceWindowTaskTaskInvocationParametersPtrInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersArgs, MaintenanceWindowTaskTaskInvocationParametersPtr and MaintenanceWindowTaskTaskInvocationParametersPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersPtrInput` via:
//
//	        MaintenanceWindowTaskTaskInvocationParametersArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowTaskTaskInvocationParametersPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersPtrOutput
	ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersPtrOutput
}

type maintenanceWindowTaskTaskInvocationParametersPtrType MaintenanceWindowTaskTaskInvocationParametersArgs

func MaintenanceWindowTaskTaskInvocationParametersPtr(v *MaintenanceWindowTaskTaskInvocationParametersArgs) MaintenanceWindowTaskTaskInvocationParametersPtrInput {
	return (*maintenanceWindowTaskTaskInvocationParametersPtrType)(v)
}

func (*maintenanceWindowTaskTaskInvocationParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParameters)(nil)).Elem()
}

func (i *maintenanceWindowTaskTaskInvocationParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowTaskTaskInvocationParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersOutput() MaintenanceWindowTaskTaskInvocationParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return o.ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowTaskTaskInvocationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParameters {
		return &v
	}).(MaintenanceWindowTaskTaskInvocationParametersPtrOutput)
}

// The parameters for an AUTOMATION task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersOutput) AutomationParameters() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersAutomationParameters {
		return v.AutomationParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput)
}

// The parameters for a LAMBDA task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersOutput) LambdaParameters() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters {
		return v.LambdaParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput)
}

// The parameters for a RUN_COMMAND task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersOutput) RunCommandParameters() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters {
		return v.RunCommandParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput)
}

// The parameters for a STEP_FUNCTIONS task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersOutput) StepFunctionsParameters() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters {
		return v.StepFunctionsParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersPtrOutput) Elem() MaintenanceWindowTaskTaskInvocationParametersOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParameters) MaintenanceWindowTaskTaskInvocationParameters {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowTaskTaskInvocationParameters
		return ret
	}).(MaintenanceWindowTaskTaskInvocationParametersOutput)
}

// The parameters for an AUTOMATION task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersPtrOutput) AutomationParameters() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersAutomationParameters {
		if v == nil {
			return nil
		}
		return v.AutomationParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput)
}

// The parameters for a LAMBDA task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersPtrOutput) LambdaParameters() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters {
		if v == nil {
			return nil
		}
		return v.LambdaParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput)
}

// The parameters for a RUN_COMMAND task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersPtrOutput) RunCommandParameters() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters {
		if v == nil {
			return nil
		}
		return v.RunCommandParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput)
}

// The parameters for a STEP_FUNCTIONS task type. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersPtrOutput) StepFunctionsParameters() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParameters) *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters {
		if v == nil {
			return nil
		}
		return v.StepFunctionsParameters
	}).(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParameters struct {
	// The version of an Automation document to use during task execution.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The parameters for the RUN_COMMAND task execution. Documented below.
	Parameters []MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter `pulumi:"parameters"`
}

// MaintenanceWindowTaskTaskInvocationParametersAutomationParametersInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs and MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersAutomationParametersInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput
	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs struct {
	// The version of an Automation document to use during task execution.
	DocumentVersion pulumi.StringPtrInput `pulumi:"documentVersion"`
	// The parameters for the RUN_COMMAND task execution. Documented below.
	Parameters MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayInput `pulumi:"parameters"`
}

func (MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParameters)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput)
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput).ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(ctx)
}

// MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs, MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtr and MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrInput` via:
//
//	        MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput
	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput
}

type maintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrType MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs

func MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtr(v *MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrInput {
	return (*maintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrType)(v)
}

func (*maintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersAutomationParameters)(nil)).Elem()
}

func (i *maintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return o.ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowTaskTaskInvocationParametersAutomationParameters) *MaintenanceWindowTaskTaskInvocationParametersAutomationParameters {
		return &v
	}).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput)
}

// The version of an Automation document to use during task execution.
func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersAutomationParameters) *string {
		return v.DocumentVersion
	}).(pulumi.StringPtrOutput)
}

// The parameters for the RUN_COMMAND task execution. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput) Parameters() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersAutomationParameters) []MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter {
		return v.Parameters
	}).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersAutomationParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput) Elem() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersAutomationParameters) MaintenanceWindowTaskTaskInvocationParametersAutomationParameters {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowTaskTaskInvocationParametersAutomationParameters
		return ret
	}).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput)
}

// The version of an Automation document to use during task execution.
func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersAutomationParameters) *string {
		if v == nil {
			return nil
		}
		return v.DocumentVersion
	}).(pulumi.StringPtrOutput)
}

// The parameters for the RUN_COMMAND task execution. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput) Parameters() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersAutomationParameters) []MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter struct {
	// The parameter name.
	Name string `pulumi:"name"`
	// The array of strings.
	Values []string `pulumi:"values"`
}

// MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs and MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput
	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs struct {
	// The parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// The array of strings.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput)
}

// MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArray and MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArray{ MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs{...} }
type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput
	ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArray []MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterInput

func (MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArray) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArray) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput {
	return o
}

// The parameter name.
func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The array of strings.
func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput() MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput) ToMaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput) Index(i pulumi.IntInput) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter {
		return vs[0].([]MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter)[vs[1].(int)]
	}).(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersLambdaParameters struct {
	// Pass client-specific information to the Lambda function that you are invoking.
	ClientContext *string `pulumi:"clientContext"`
	// JSON to provide to your Lambda function as input.
	Payload *string `pulumi:"payload"`
	// Specify a Lambda function version or alias name.
	Qualifier *string `pulumi:"qualifier"`
}

// MaintenanceWindowTaskTaskInvocationParametersLambdaParametersInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs and MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersLambdaParametersInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersLambdaParametersInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput
	ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput
}

type MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs struct {
	// Pass client-specific information to the Lambda function that you are invoking.
	ClientContext pulumi.StringPtrInput `pulumi:"clientContext"`
	// JSON to provide to your Lambda function as input.
	Payload pulumi.StringPtrInput `pulumi:"payload"`
	// Specify a Lambda function version or alias name.
	Qualifier pulumi.StringPtrInput `pulumi:"qualifier"`
}

func (MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersLambdaParameters)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput)
}

func (i MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput).ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(ctx)
}

// MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs, MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtr and MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrInput` via:
//
//	        MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput
	ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput
}

type maintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrType MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs

func MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtr(v *MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrInput {
	return (*maintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrType)(v)
}

func (*maintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersLambdaParameters)(nil)).Elem()
}

func (i *maintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersLambdaParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return o.ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters {
		return &v
	}).(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput)
}

// Pass client-specific information to the Lambda function that you are invoking.
func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) ClientContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) *string { return v.ClientContext }).(pulumi.StringPtrOutput)
}

// JSON to provide to your Lambda function as input.
func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) *string { return v.Payload }).(pulumi.StringPtrOutput)
}

// Specify a Lambda function version or alias name.
func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) *string { return v.Qualifier }).(pulumi.StringPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersLambdaParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput) Elem() MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) MaintenanceWindowTaskTaskInvocationParametersLambdaParameters {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowTaskTaskInvocationParametersLambdaParameters
		return ret
	}).(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput)
}

// Pass client-specific information to the Lambda function that you are invoking.
func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput) ClientContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) *string {
		if v == nil {
			return nil
		}
		return v.ClientContext
	}).(pulumi.StringPtrOutput)
}

// JSON to provide to your Lambda function as input.
func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) *string {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.StringPtrOutput)
}

// Specify a Lambda function version or alias name.
func (o MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersLambdaParameters) *string {
		if v == nil {
			return nil
		}
		return v.Qualifier
	}).(pulumi.StringPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters struct {
	// Configuration options for sending command output to CloudWatch Logs. Documented below.
	CloudwatchConfig *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig `pulumi:"cloudwatchConfig"`
	// Information about the command(s) to execute.
	Comment *string `pulumi:"comment"`
	// The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
	DocumentHash *string `pulumi:"documentHash"`
	// SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
	DocumentHashType *string `pulumi:"documentHashType"`
	// The version of an Automation document to use during task execution.
	DocumentVersion *string `pulumi:"documentVersion"`
	// Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
	NotificationConfig *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig `pulumi:"notificationConfig"`
	// The name of the Amazon S3 bucket.
	OutputS3Bucket *string `pulumi:"outputS3Bucket"`
	// The Amazon S3 bucket subfolder.
	OutputS3KeyPrefix *string `pulumi:"outputS3KeyPrefix"`
	// The parameters for the RUN_COMMAND task execution. Documented below.
	Parameters []MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter `pulumi:"parameters"`
	// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.
	ServiceRoleArn *string `pulumi:"serviceRoleArn"`
	// If this time is reached and the command has not already started executing, it doesn't run.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs struct {
	// Configuration options for sending command output to CloudWatch Logs. Documented below.
	CloudwatchConfig MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrInput `pulumi:"cloudwatchConfig"`
	// Information about the command(s) to execute.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
	DocumentHash pulumi.StringPtrInput `pulumi:"documentHash"`
	// SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
	DocumentHashType pulumi.StringPtrInput `pulumi:"documentHashType"`
	// The version of an Automation document to use during task execution.
	DocumentVersion pulumi.StringPtrInput `pulumi:"documentVersion"`
	// Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
	NotificationConfig MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrInput `pulumi:"notificationConfig"`
	// The name of the Amazon S3 bucket.
	OutputS3Bucket pulumi.StringPtrInput `pulumi:"outputS3Bucket"`
	// The Amazon S3 bucket subfolder.
	OutputS3KeyPrefix pulumi.StringPtrInput `pulumi:"outputS3KeyPrefix"`
	// The parameters for the RUN_COMMAND task execution. Documented below.
	Parameters MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayInput `pulumi:"parameters"`
	// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.
	ServiceRoleArn pulumi.StringPtrInput `pulumi:"serviceRoleArn"`
	// If this time is reached and the command has not already started executing, it doesn't run.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput)
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput).ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(ctx)
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs, MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtr and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrInput` via:
//
//	        MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput
}

type maintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrType MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs

func MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtr(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrInput {
	return (*maintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrType)(v)
}

func (*maintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters)(nil)).Elem()
}

func (i *maintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return o.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters {
		return &v
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput)
}

// Configuration options for sending command output to CloudWatch Logs. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) CloudwatchConfig() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig {
		return v.CloudwatchConfig
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput)
}

// Information about the command(s) to execute.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) DocumentHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		return v.DocumentHash
	}).(pulumi.StringPtrOutput)
}

// SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) DocumentHashType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		return v.DocumentHashType
	}).(pulumi.StringPtrOutput)
}

// The version of an Automation document to use during task execution.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		return v.DocumentVersion
	}).(pulumi.StringPtrOutput)
}

// Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) NotificationConfig() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig {
		return v.NotificationConfig
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput)
}

// The name of the Amazon S3 bucket.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) OutputS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		return v.OutputS3Bucket
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 bucket subfolder.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) OutputS3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		return v.OutputS3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// The parameters for the RUN_COMMAND task execution. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) Parameters() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) []MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter {
		return v.Parameters
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput)
}

// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) ServiceRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		return v.ServiceRoleArn
	}).(pulumi.StringPtrOutput)
}

// If this time is reached and the command has not already started executing, it doesn't run.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *int {
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) Elem() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters
		return ret
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput)
}

// Configuration options for sending command output to CloudWatch Logs. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) CloudwatchConfig() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig {
		if v == nil {
			return nil
		}
		return v.CloudwatchConfig
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput)
}

// Information about the command(s) to execute.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) DocumentHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		if v == nil {
			return nil
		}
		return v.DocumentHash
	}).(pulumi.StringPtrOutput)
}

// SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) DocumentHashType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		if v == nil {
			return nil
		}
		return v.DocumentHashType
	}).(pulumi.StringPtrOutput)
}

// The version of an Automation document to use during task execution.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		if v == nil {
			return nil
		}
		return v.DocumentVersion
	}).(pulumi.StringPtrOutput)
}

// Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) NotificationConfig() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig {
		if v == nil {
			return nil
		}
		return v.NotificationConfig
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput)
}

// The name of the Amazon S3 bucket.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) OutputS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		if v == nil {
			return nil
		}
		return v.OutputS3Bucket
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 bucket subfolder.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) OutputS3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		if v == nil {
			return nil
		}
		return v.OutputS3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// The parameters for the RUN_COMMAND task execution. Documented below.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) Parameters() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) []MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput)
}

// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for maintenance window Run Command tasks.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) ServiceRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRoleArn
	}).(pulumi.StringPtrOutput)
}

// If this time is reached and the command has not already started executing, it doesn't run.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig struct {
	// The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/SystemsManagerDocumentName.
	CloudwatchLogGroupName *string `pulumi:"cloudwatchLogGroupName"`
	// Enables Systems Manager to send command output to CloudWatch Logs.
	CloudwatchOutputEnabled *bool `pulumi:"cloudwatchOutputEnabled"`
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs struct {
	// The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/SystemsManagerDocumentName.
	CloudwatchLogGroupName pulumi.StringPtrInput `pulumi:"cloudwatchLogGroupName"`
	// Enables Systems Manager to send command output to CloudWatch Logs.
	CloudwatchOutputEnabled pulumi.BoolPtrInput `pulumi:"cloudwatchOutputEnabled"`
}

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput)
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput).ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(ctx)
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs, MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtr and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrInput` via:
//
//	        MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput
}

type maintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrType MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs

func MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtr(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrInput {
	return (*maintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrType)(v)
}

func (*maintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig)(nil)).Elem()
}

func (i *maintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrType) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrType) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return o.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig {
		return &v
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput)
}

// The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/SystemsManagerDocumentName.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput) CloudwatchLogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig) *string {
		return v.CloudwatchLogGroupName
	}).(pulumi.StringPtrOutput)
}

// Enables Systems Manager to send command output to CloudWatch Logs.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput) CloudwatchOutputEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig) *bool {
		return v.CloudwatchOutputEnabled
	}).(pulumi.BoolPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput) Elem() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig
		return ret
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput)
}

// The name of the CloudWatch log group where you want to send command output. If you don't specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/SystemsManagerDocumentName.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput) CloudwatchLogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig) *string {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogGroupName
	}).(pulumi.StringPtrOutput)
}

// Enables Systems Manager to send command output to CloudWatch Logs.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput) CloudwatchOutputEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CloudwatchOutputEnabled
	}).(pulumi.BoolPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig struct {
	// An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
	NotificationArn *string `pulumi:"notificationArn"`
	// The different events for which you can receive notifications. Valid values: `All`, `InProgress`, `Success`, `TimedOut`, `Cancelled`, and `Failed`
	NotificationEvents []string `pulumi:"notificationEvents"`
	// When specified with `Command`, receive notification when the status of a command changes. When specified with `Invocation`, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: `Command` and `Invocation`
	NotificationType *string `pulumi:"notificationType"`
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs struct {
	// An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
	NotificationArn pulumi.StringPtrInput `pulumi:"notificationArn"`
	// The different events for which you can receive notifications. Valid values: `All`, `InProgress`, `Success`, `TimedOut`, `Cancelled`, and `Failed`
	NotificationEvents pulumi.StringArrayInput `pulumi:"notificationEvents"`
	// When specified with `Command`, receive notification when the status of a command changes. When specified with `Invocation`, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: `Command` and `Invocation`
	NotificationType pulumi.StringPtrInput `pulumi:"notificationType"`
}

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput)
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput).ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(ctx)
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs, MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtr and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrInput` via:
//
//	        MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput
}

type maintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrType MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs

func MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtr(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrInput {
	return (*maintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrType)(v)
}

func (*maintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig)(nil)).Elem()
}

func (i *maintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrType) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrType) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return o.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig {
		return &v
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput)
}

// An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) NotificationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) *string {
		return v.NotificationArn
	}).(pulumi.StringPtrOutput)
}

// The different events for which you can receive notifications. Valid values: `All`, `InProgress`, `Success`, `TimedOut`, `Cancelled`, and `Failed`
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) NotificationEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) []string {
		return v.NotificationEvents
	}).(pulumi.StringArrayOutput)
}

// When specified with `Command`, receive notification when the status of a command changes. When specified with `Invocation`, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: `Command` and `Invocation`
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput) NotificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) *string {
		return v.NotificationType
	}).(pulumi.StringPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput) Elem() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig
		return ret
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput)
}

// An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput) NotificationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) *string {
		if v == nil {
			return nil
		}
		return v.NotificationArn
	}).(pulumi.StringPtrOutput)
}

// The different events for which you can receive notifications. Valid values: `All`, `InProgress`, `Success`, `TimedOut`, `Cancelled`, and `Failed`
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput) NotificationEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) []string {
		if v == nil {
			return nil
		}
		return v.NotificationEvents
	}).(pulumi.StringArrayOutput)
}

// When specified with `Command`, receive notification when the status of a command changes. When specified with `Invocation`, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: `Command` and `Invocation`
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput) NotificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig) *string {
		if v == nil {
			return nil
		}
		return v.NotificationType
	}).(pulumi.StringPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter struct {
	// The parameter name.
	Name string `pulumi:"name"`
	// The array of strings.
	Values []string `pulumi:"values"`
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs struct {
	// The parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// The array of strings.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput)
}

// MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArray and MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArray{ MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs{...} }
type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput
	ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArray []MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterInput

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArray) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArray) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput {
	return o
}

// The parameter name.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The array of strings.
func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput() MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput) ToMaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput) Index(i pulumi.IntInput) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter {
		return vs[0].([]MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter)[vs[1].(int)]
	}).(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters struct {
	// The inputs for the STEP_FUNCTION task.
	Input *string `pulumi:"input"`
	// The name of the STEP_FUNCTION task.
	Name *string `pulumi:"name"`
}

// MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs and MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersInput` via:
//
//	MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs{...}
type MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput
	ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput
}

type MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs struct {
	// The inputs for the STEP_FUNCTION task.
	Input pulumi.StringPtrInput `pulumi:"input"`
	// The name of the STEP_FUNCTION task.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters)(nil)).Elem()
}

func (i MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput)
}

func (i MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(context.Background())
}

func (i MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput).ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(ctx)
}

// MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrInput is an input type that accepts MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs, MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtr and MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput values.
// You can construct a concrete instance of `MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrInput` via:
//
//	        MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs{...}
//
//	or:
//
//	        nil
type MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput
	ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput
}

type maintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrType MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs

func MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtr(v *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrInput {
	return (*maintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrType)(v)
}

func (*maintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters)(nil)).Elem()
}

func (i *maintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return i.ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(context.Background())
}

func (i *maintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrType) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return o.ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters) *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters {
		return &v
	}).(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput)
}

// The inputs for the STEP_FUNCTION task.
func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput) Input() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters) *string { return v.Input }).(pulumi.StringPtrOutput)
}

// The name of the STEP_FUNCTION task.
func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters)(nil)).Elem()
}

func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput) ToMaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutputWithContext(ctx context.Context) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput {
	return o
}

func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput) Elem() MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters) MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters
		return ret
	}).(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput)
}

// The inputs for the STEP_FUNCTION task.
func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput) Input() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters) *string {
		if v == nil {
			return nil
		}
		return v.Input
	}).(pulumi.StringPtrOutput)
}

// The name of the STEP_FUNCTION task.
func (o MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type PatchBaselineApprovalRule struct {
	// Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 100. Conflicts with `approveUntilDate`.
	ApproveAfterDays *int `pulumi:"approveAfterDays"`
	// Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as `YYYY-MM-DD`. Conflicts with `approveAfterDays`
	ApproveUntilDate *string `pulumi:"approveUntilDate"`
	// Compliance level for patches approved by this rule. Valid values are `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, and `UNSPECIFIED`. The default value is `UNSPECIFIED`.
	ComplianceLevel *string `pulumi:"complianceLevel"`
	// Boolean enabling the application of non-security updates. The default value is `false`. Valid for Linux instances only.
	EnableNonSecurity *bool `pulumi:"enableNonSecurity"`
	// Patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the `operatingSystem` value can be found in the [SSM DescribePatchProperties API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchProperties.html). Valid Values are exact values for the patch property given as the key, or a wildcard `*`, which matches all values. `PATCH_SET` defaults to `OS` if unspecified
	PatchFilters []PatchBaselineApprovalRulePatchFilter `pulumi:"patchFilters"`
}

// PatchBaselineApprovalRuleInput is an input type that accepts PatchBaselineApprovalRuleArgs and PatchBaselineApprovalRuleOutput values.
// You can construct a concrete instance of `PatchBaselineApprovalRuleInput` via:
//
//	PatchBaselineApprovalRuleArgs{...}
type PatchBaselineApprovalRuleInput interface {
	pulumi.Input

	ToPatchBaselineApprovalRuleOutput() PatchBaselineApprovalRuleOutput
	ToPatchBaselineApprovalRuleOutputWithContext(context.Context) PatchBaselineApprovalRuleOutput
}

type PatchBaselineApprovalRuleArgs struct {
	// Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 100. Conflicts with `approveUntilDate`.
	ApproveAfterDays pulumi.IntPtrInput `pulumi:"approveAfterDays"`
	// Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as `YYYY-MM-DD`. Conflicts with `approveAfterDays`
	ApproveUntilDate pulumi.StringPtrInput `pulumi:"approveUntilDate"`
	// Compliance level for patches approved by this rule. Valid values are `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, and `UNSPECIFIED`. The default value is `UNSPECIFIED`.
	ComplianceLevel pulumi.StringPtrInput `pulumi:"complianceLevel"`
	// Boolean enabling the application of non-security updates. The default value is `false`. Valid for Linux instances only.
	EnableNonSecurity pulumi.BoolPtrInput `pulumi:"enableNonSecurity"`
	// Patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the `operatingSystem` value can be found in the [SSM DescribePatchProperties API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchProperties.html). Valid Values are exact values for the patch property given as the key, or a wildcard `*`, which matches all values. `PATCH_SET` defaults to `OS` if unspecified
	PatchFilters PatchBaselineApprovalRulePatchFilterArrayInput `pulumi:"patchFilters"`
}

func (PatchBaselineApprovalRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineApprovalRule)(nil)).Elem()
}

func (i PatchBaselineApprovalRuleArgs) ToPatchBaselineApprovalRuleOutput() PatchBaselineApprovalRuleOutput {
	return i.ToPatchBaselineApprovalRuleOutputWithContext(context.Background())
}

func (i PatchBaselineApprovalRuleArgs) ToPatchBaselineApprovalRuleOutputWithContext(ctx context.Context) PatchBaselineApprovalRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineApprovalRuleOutput)
}

// PatchBaselineApprovalRuleArrayInput is an input type that accepts PatchBaselineApprovalRuleArray and PatchBaselineApprovalRuleArrayOutput values.
// You can construct a concrete instance of `PatchBaselineApprovalRuleArrayInput` via:
//
//	PatchBaselineApprovalRuleArray{ PatchBaselineApprovalRuleArgs{...} }
type PatchBaselineApprovalRuleArrayInput interface {
	pulumi.Input

	ToPatchBaselineApprovalRuleArrayOutput() PatchBaselineApprovalRuleArrayOutput
	ToPatchBaselineApprovalRuleArrayOutputWithContext(context.Context) PatchBaselineApprovalRuleArrayOutput
}

type PatchBaselineApprovalRuleArray []PatchBaselineApprovalRuleInput

func (PatchBaselineApprovalRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineApprovalRule)(nil)).Elem()
}

func (i PatchBaselineApprovalRuleArray) ToPatchBaselineApprovalRuleArrayOutput() PatchBaselineApprovalRuleArrayOutput {
	return i.ToPatchBaselineApprovalRuleArrayOutputWithContext(context.Background())
}

func (i PatchBaselineApprovalRuleArray) ToPatchBaselineApprovalRuleArrayOutputWithContext(ctx context.Context) PatchBaselineApprovalRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineApprovalRuleArrayOutput)
}

type PatchBaselineApprovalRuleOutput struct{ *pulumi.OutputState }

func (PatchBaselineApprovalRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineApprovalRule)(nil)).Elem()
}

func (o PatchBaselineApprovalRuleOutput) ToPatchBaselineApprovalRuleOutput() PatchBaselineApprovalRuleOutput {
	return o
}

func (o PatchBaselineApprovalRuleOutput) ToPatchBaselineApprovalRuleOutputWithContext(ctx context.Context) PatchBaselineApprovalRuleOutput {
	return o
}

// Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 100. Conflicts with `approveUntilDate`.
func (o PatchBaselineApprovalRuleOutput) ApproveAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PatchBaselineApprovalRule) *int { return v.ApproveAfterDays }).(pulumi.IntPtrOutput)
}

// Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as `YYYY-MM-DD`. Conflicts with `approveAfterDays`
func (o PatchBaselineApprovalRuleOutput) ApproveUntilDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchBaselineApprovalRule) *string { return v.ApproveUntilDate }).(pulumi.StringPtrOutput)
}

// Compliance level for patches approved by this rule. Valid values are `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, and `UNSPECIFIED`. The default value is `UNSPECIFIED`.
func (o PatchBaselineApprovalRuleOutput) ComplianceLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchBaselineApprovalRule) *string { return v.ComplianceLevel }).(pulumi.StringPtrOutput)
}

// Boolean enabling the application of non-security updates. The default value is `false`. Valid for Linux instances only.
func (o PatchBaselineApprovalRuleOutput) EnableNonSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PatchBaselineApprovalRule) *bool { return v.EnableNonSecurity }).(pulumi.BoolPtrOutput)
}

// Patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the `operatingSystem` value can be found in the [SSM DescribePatchProperties API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchProperties.html). Valid Values are exact values for the patch property given as the key, or a wildcard `*`, which matches all values. `PATCH_SET` defaults to `OS` if unspecified
func (o PatchBaselineApprovalRuleOutput) PatchFilters() PatchBaselineApprovalRulePatchFilterArrayOutput {
	return o.ApplyT(func(v PatchBaselineApprovalRule) []PatchBaselineApprovalRulePatchFilter { return v.PatchFilters }).(PatchBaselineApprovalRulePatchFilterArrayOutput)
}

type PatchBaselineApprovalRuleArrayOutput struct{ *pulumi.OutputState }

func (PatchBaselineApprovalRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineApprovalRule)(nil)).Elem()
}

func (o PatchBaselineApprovalRuleArrayOutput) ToPatchBaselineApprovalRuleArrayOutput() PatchBaselineApprovalRuleArrayOutput {
	return o
}

func (o PatchBaselineApprovalRuleArrayOutput) ToPatchBaselineApprovalRuleArrayOutputWithContext(ctx context.Context) PatchBaselineApprovalRuleArrayOutput {
	return o
}

func (o PatchBaselineApprovalRuleArrayOutput) Index(i pulumi.IntInput) PatchBaselineApprovalRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchBaselineApprovalRule {
		return vs[0].([]PatchBaselineApprovalRule)[vs[1].(int)]
	}).(PatchBaselineApprovalRuleOutput)
}

type PatchBaselineApprovalRulePatchFilter struct {
	Key    string   `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// PatchBaselineApprovalRulePatchFilterInput is an input type that accepts PatchBaselineApprovalRulePatchFilterArgs and PatchBaselineApprovalRulePatchFilterOutput values.
// You can construct a concrete instance of `PatchBaselineApprovalRulePatchFilterInput` via:
//
//	PatchBaselineApprovalRulePatchFilterArgs{...}
type PatchBaselineApprovalRulePatchFilterInput interface {
	pulumi.Input

	ToPatchBaselineApprovalRulePatchFilterOutput() PatchBaselineApprovalRulePatchFilterOutput
	ToPatchBaselineApprovalRulePatchFilterOutputWithContext(context.Context) PatchBaselineApprovalRulePatchFilterOutput
}

type PatchBaselineApprovalRulePatchFilterArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PatchBaselineApprovalRulePatchFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (i PatchBaselineApprovalRulePatchFilterArgs) ToPatchBaselineApprovalRulePatchFilterOutput() PatchBaselineApprovalRulePatchFilterOutput {
	return i.ToPatchBaselineApprovalRulePatchFilterOutputWithContext(context.Background())
}

func (i PatchBaselineApprovalRulePatchFilterArgs) ToPatchBaselineApprovalRulePatchFilterOutputWithContext(ctx context.Context) PatchBaselineApprovalRulePatchFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineApprovalRulePatchFilterOutput)
}

// PatchBaselineApprovalRulePatchFilterArrayInput is an input type that accepts PatchBaselineApprovalRulePatchFilterArray and PatchBaselineApprovalRulePatchFilterArrayOutput values.
// You can construct a concrete instance of `PatchBaselineApprovalRulePatchFilterArrayInput` via:
//
//	PatchBaselineApprovalRulePatchFilterArray{ PatchBaselineApprovalRulePatchFilterArgs{...} }
type PatchBaselineApprovalRulePatchFilterArrayInput interface {
	pulumi.Input

	ToPatchBaselineApprovalRulePatchFilterArrayOutput() PatchBaselineApprovalRulePatchFilterArrayOutput
	ToPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(context.Context) PatchBaselineApprovalRulePatchFilterArrayOutput
}

type PatchBaselineApprovalRulePatchFilterArray []PatchBaselineApprovalRulePatchFilterInput

func (PatchBaselineApprovalRulePatchFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (i PatchBaselineApprovalRulePatchFilterArray) ToPatchBaselineApprovalRulePatchFilterArrayOutput() PatchBaselineApprovalRulePatchFilterArrayOutput {
	return i.ToPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(context.Background())
}

func (i PatchBaselineApprovalRulePatchFilterArray) ToPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(ctx context.Context) PatchBaselineApprovalRulePatchFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineApprovalRulePatchFilterArrayOutput)
}

type PatchBaselineApprovalRulePatchFilterOutput struct{ *pulumi.OutputState }

func (PatchBaselineApprovalRulePatchFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (o PatchBaselineApprovalRulePatchFilterOutput) ToPatchBaselineApprovalRulePatchFilterOutput() PatchBaselineApprovalRulePatchFilterOutput {
	return o
}

func (o PatchBaselineApprovalRulePatchFilterOutput) ToPatchBaselineApprovalRulePatchFilterOutputWithContext(ctx context.Context) PatchBaselineApprovalRulePatchFilterOutput {
	return o
}

func (o PatchBaselineApprovalRulePatchFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PatchBaselineApprovalRulePatchFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o PatchBaselineApprovalRulePatchFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchBaselineApprovalRulePatchFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PatchBaselineApprovalRulePatchFilterArrayOutput struct{ *pulumi.OutputState }

func (PatchBaselineApprovalRulePatchFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (o PatchBaselineApprovalRulePatchFilterArrayOutput) ToPatchBaselineApprovalRulePatchFilterArrayOutput() PatchBaselineApprovalRulePatchFilterArrayOutput {
	return o
}

func (o PatchBaselineApprovalRulePatchFilterArrayOutput) ToPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(ctx context.Context) PatchBaselineApprovalRulePatchFilterArrayOutput {
	return o
}

func (o PatchBaselineApprovalRulePatchFilterArrayOutput) Index(i pulumi.IntInput) PatchBaselineApprovalRulePatchFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchBaselineApprovalRulePatchFilter {
		return vs[0].([]PatchBaselineApprovalRulePatchFilter)[vs[1].(int)]
	}).(PatchBaselineApprovalRulePatchFilterOutput)
}

type PatchBaselineGlobalFilter struct {
	Key    string   `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// PatchBaselineGlobalFilterInput is an input type that accepts PatchBaselineGlobalFilterArgs and PatchBaselineGlobalFilterOutput values.
// You can construct a concrete instance of `PatchBaselineGlobalFilterInput` via:
//
//	PatchBaselineGlobalFilterArgs{...}
type PatchBaselineGlobalFilterInput interface {
	pulumi.Input

	ToPatchBaselineGlobalFilterOutput() PatchBaselineGlobalFilterOutput
	ToPatchBaselineGlobalFilterOutputWithContext(context.Context) PatchBaselineGlobalFilterOutput
}

type PatchBaselineGlobalFilterArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PatchBaselineGlobalFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineGlobalFilter)(nil)).Elem()
}

func (i PatchBaselineGlobalFilterArgs) ToPatchBaselineGlobalFilterOutput() PatchBaselineGlobalFilterOutput {
	return i.ToPatchBaselineGlobalFilterOutputWithContext(context.Background())
}

func (i PatchBaselineGlobalFilterArgs) ToPatchBaselineGlobalFilterOutputWithContext(ctx context.Context) PatchBaselineGlobalFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineGlobalFilterOutput)
}

// PatchBaselineGlobalFilterArrayInput is an input type that accepts PatchBaselineGlobalFilterArray and PatchBaselineGlobalFilterArrayOutput values.
// You can construct a concrete instance of `PatchBaselineGlobalFilterArrayInput` via:
//
//	PatchBaselineGlobalFilterArray{ PatchBaselineGlobalFilterArgs{...} }
type PatchBaselineGlobalFilterArrayInput interface {
	pulumi.Input

	ToPatchBaselineGlobalFilterArrayOutput() PatchBaselineGlobalFilterArrayOutput
	ToPatchBaselineGlobalFilterArrayOutputWithContext(context.Context) PatchBaselineGlobalFilterArrayOutput
}

type PatchBaselineGlobalFilterArray []PatchBaselineGlobalFilterInput

func (PatchBaselineGlobalFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineGlobalFilter)(nil)).Elem()
}

func (i PatchBaselineGlobalFilterArray) ToPatchBaselineGlobalFilterArrayOutput() PatchBaselineGlobalFilterArrayOutput {
	return i.ToPatchBaselineGlobalFilterArrayOutputWithContext(context.Background())
}

func (i PatchBaselineGlobalFilterArray) ToPatchBaselineGlobalFilterArrayOutputWithContext(ctx context.Context) PatchBaselineGlobalFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineGlobalFilterArrayOutput)
}

type PatchBaselineGlobalFilterOutput struct{ *pulumi.OutputState }

func (PatchBaselineGlobalFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineGlobalFilter)(nil)).Elem()
}

func (o PatchBaselineGlobalFilterOutput) ToPatchBaselineGlobalFilterOutput() PatchBaselineGlobalFilterOutput {
	return o
}

func (o PatchBaselineGlobalFilterOutput) ToPatchBaselineGlobalFilterOutputWithContext(ctx context.Context) PatchBaselineGlobalFilterOutput {
	return o
}

func (o PatchBaselineGlobalFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PatchBaselineGlobalFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o PatchBaselineGlobalFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchBaselineGlobalFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PatchBaselineGlobalFilterArrayOutput struct{ *pulumi.OutputState }

func (PatchBaselineGlobalFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineGlobalFilter)(nil)).Elem()
}

func (o PatchBaselineGlobalFilterArrayOutput) ToPatchBaselineGlobalFilterArrayOutput() PatchBaselineGlobalFilterArrayOutput {
	return o
}

func (o PatchBaselineGlobalFilterArrayOutput) ToPatchBaselineGlobalFilterArrayOutputWithContext(ctx context.Context) PatchBaselineGlobalFilterArrayOutput {
	return o
}

func (o PatchBaselineGlobalFilterArrayOutput) Index(i pulumi.IntInput) PatchBaselineGlobalFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchBaselineGlobalFilter {
		return vs[0].([]PatchBaselineGlobalFilter)[vs[1].(int)]
	}).(PatchBaselineGlobalFilterOutput)
}

type PatchBaselineSource struct {
	// Value of the yum repo configuration. For information about other options available for your yum repository configuration, see the [`dnf.conf` documentation](https://man7.org/linux/man-pages/man5/dnf.conf.5.html)
	Configuration string `pulumi:"configuration"`
	// Name specified to identify the patch source.
	Name string `pulumi:"name"`
	// Specific operating system versions a patch repository applies to, such as `"Ubuntu16.04"`, `"AmazonLinux2016.09"`, `"RedhatEnterpriseLinux7.2"` or `"Suse12.7"`. For lists of supported product values, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html).
	Products []string `pulumi:"products"`
}

// PatchBaselineSourceInput is an input type that accepts PatchBaselineSourceArgs and PatchBaselineSourceOutput values.
// You can construct a concrete instance of `PatchBaselineSourceInput` via:
//
//	PatchBaselineSourceArgs{...}
type PatchBaselineSourceInput interface {
	pulumi.Input

	ToPatchBaselineSourceOutput() PatchBaselineSourceOutput
	ToPatchBaselineSourceOutputWithContext(context.Context) PatchBaselineSourceOutput
}

type PatchBaselineSourceArgs struct {
	// Value of the yum repo configuration. For information about other options available for your yum repository configuration, see the [`dnf.conf` documentation](https://man7.org/linux/man-pages/man5/dnf.conf.5.html)
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// Name specified to identify the patch source.
	Name pulumi.StringInput `pulumi:"name"`
	// Specific operating system versions a patch repository applies to, such as `"Ubuntu16.04"`, `"AmazonLinux2016.09"`, `"RedhatEnterpriseLinux7.2"` or `"Suse12.7"`. For lists of supported product values, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html).
	Products pulumi.StringArrayInput `pulumi:"products"`
}

func (PatchBaselineSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineSource)(nil)).Elem()
}

func (i PatchBaselineSourceArgs) ToPatchBaselineSourceOutput() PatchBaselineSourceOutput {
	return i.ToPatchBaselineSourceOutputWithContext(context.Background())
}

func (i PatchBaselineSourceArgs) ToPatchBaselineSourceOutputWithContext(ctx context.Context) PatchBaselineSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineSourceOutput)
}

// PatchBaselineSourceArrayInput is an input type that accepts PatchBaselineSourceArray and PatchBaselineSourceArrayOutput values.
// You can construct a concrete instance of `PatchBaselineSourceArrayInput` via:
//
//	PatchBaselineSourceArray{ PatchBaselineSourceArgs{...} }
type PatchBaselineSourceArrayInput interface {
	pulumi.Input

	ToPatchBaselineSourceArrayOutput() PatchBaselineSourceArrayOutput
	ToPatchBaselineSourceArrayOutputWithContext(context.Context) PatchBaselineSourceArrayOutput
}

type PatchBaselineSourceArray []PatchBaselineSourceInput

func (PatchBaselineSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineSource)(nil)).Elem()
}

func (i PatchBaselineSourceArray) ToPatchBaselineSourceArrayOutput() PatchBaselineSourceArrayOutput {
	return i.ToPatchBaselineSourceArrayOutputWithContext(context.Background())
}

func (i PatchBaselineSourceArray) ToPatchBaselineSourceArrayOutputWithContext(ctx context.Context) PatchBaselineSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchBaselineSourceArrayOutput)
}

type PatchBaselineSourceOutput struct{ *pulumi.OutputState }

func (PatchBaselineSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchBaselineSource)(nil)).Elem()
}

func (o PatchBaselineSourceOutput) ToPatchBaselineSourceOutput() PatchBaselineSourceOutput {
	return o
}

func (o PatchBaselineSourceOutput) ToPatchBaselineSourceOutputWithContext(ctx context.Context) PatchBaselineSourceOutput {
	return o
}

// Value of the yum repo configuration. For information about other options available for your yum repository configuration, see the [`dnf.conf` documentation](https://man7.org/linux/man-pages/man5/dnf.conf.5.html)
func (o PatchBaselineSourceOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v PatchBaselineSource) string { return v.Configuration }).(pulumi.StringOutput)
}

// Name specified to identify the patch source.
func (o PatchBaselineSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PatchBaselineSource) string { return v.Name }).(pulumi.StringOutput)
}

// Specific operating system versions a patch repository applies to, such as `"Ubuntu16.04"`, `"AmazonLinux2016.09"`, `"RedhatEnterpriseLinux7.2"` or `"Suse12.7"`. For lists of supported product values, see [PatchFilter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html).
func (o PatchBaselineSourceOutput) Products() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PatchBaselineSource) []string { return v.Products }).(pulumi.StringArrayOutput)
}

type PatchBaselineSourceArrayOutput struct{ *pulumi.OutputState }

func (PatchBaselineSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchBaselineSource)(nil)).Elem()
}

func (o PatchBaselineSourceArrayOutput) ToPatchBaselineSourceArrayOutput() PatchBaselineSourceArrayOutput {
	return o
}

func (o PatchBaselineSourceArrayOutput) ToPatchBaselineSourceArrayOutputWithContext(ctx context.Context) PatchBaselineSourceArrayOutput {
	return o
}

func (o PatchBaselineSourceArrayOutput) Index(i pulumi.IntInput) PatchBaselineSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchBaselineSource {
		return vs[0].([]PatchBaselineSource)[vs[1].(int)]
	}).(PatchBaselineSourceOutput)
}

type ResourceDataSyncS3Destination struct {
	// Name of S3 bucket where the aggregated data is stored.
	BucketName string `pulumi:"bucketName"`
	// ARN of an encryption key for a destination in Amazon S3.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Prefix for the bucket.
	Prefix *string `pulumi:"prefix"`
	// Region with the bucket targeted by the Resource Data Sync.
	Region string `pulumi:"region"`
	// A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
	SyncFormat *string `pulumi:"syncFormat"`
}

// ResourceDataSyncS3DestinationInput is an input type that accepts ResourceDataSyncS3DestinationArgs and ResourceDataSyncS3DestinationOutput values.
// You can construct a concrete instance of `ResourceDataSyncS3DestinationInput` via:
//
//	ResourceDataSyncS3DestinationArgs{...}
type ResourceDataSyncS3DestinationInput interface {
	pulumi.Input

	ToResourceDataSyncS3DestinationOutput() ResourceDataSyncS3DestinationOutput
	ToResourceDataSyncS3DestinationOutputWithContext(context.Context) ResourceDataSyncS3DestinationOutput
}

type ResourceDataSyncS3DestinationArgs struct {
	// Name of S3 bucket where the aggregated data is stored.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// ARN of an encryption key for a destination in Amazon S3.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// Prefix for the bucket.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Region with the bucket targeted by the Resource Data Sync.
	Region pulumi.StringInput `pulumi:"region"`
	// A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
	SyncFormat pulumi.StringPtrInput `pulumi:"syncFormat"`
}

func (ResourceDataSyncS3DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncS3Destination)(nil)).Elem()
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationOutput() ResourceDataSyncS3DestinationOutput {
	return i.ToResourceDataSyncS3DestinationOutputWithContext(context.Background())
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncS3DestinationOutput)
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return i.ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Background())
}

func (i ResourceDataSyncS3DestinationArgs) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncS3DestinationOutput).ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx)
}

// ResourceDataSyncS3DestinationPtrInput is an input type that accepts ResourceDataSyncS3DestinationArgs, ResourceDataSyncS3DestinationPtr and ResourceDataSyncS3DestinationPtrOutput values.
// You can construct a concrete instance of `ResourceDataSyncS3DestinationPtrInput` via:
//
//	        ResourceDataSyncS3DestinationArgs{...}
//
//	or:
//
//	        nil
type ResourceDataSyncS3DestinationPtrInput interface {
	pulumi.Input

	ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput
	ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Context) ResourceDataSyncS3DestinationPtrOutput
}

type resourceDataSyncS3DestinationPtrType ResourceDataSyncS3DestinationArgs

func ResourceDataSyncS3DestinationPtr(v *ResourceDataSyncS3DestinationArgs) ResourceDataSyncS3DestinationPtrInput {
	return (*resourceDataSyncS3DestinationPtrType)(v)
}

func (*resourceDataSyncS3DestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncS3Destination)(nil)).Elem()
}

func (i *resourceDataSyncS3DestinationPtrType) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return i.ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Background())
}

func (i *resourceDataSyncS3DestinationPtrType) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceDataSyncS3DestinationPtrOutput)
}

type ResourceDataSyncS3DestinationOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncS3DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDataSyncS3Destination)(nil)).Elem()
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationOutput() ResourceDataSyncS3DestinationOutput {
	return o
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationOutput {
	return o
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return o.ToResourceDataSyncS3DestinationPtrOutputWithContext(context.Background())
}

func (o ResourceDataSyncS3DestinationOutput) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDataSyncS3Destination) *ResourceDataSyncS3Destination {
		return &v
	}).(ResourceDataSyncS3DestinationPtrOutput)
}

// Name of S3 bucket where the aggregated data is stored.
func (o ResourceDataSyncS3DestinationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) string { return v.BucketName }).(pulumi.StringOutput)
}

// ARN of an encryption key for a destination in Amazon S3.
func (o ResourceDataSyncS3DestinationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Prefix for the bucket.
func (o ResourceDataSyncS3DestinationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Region with the bucket targeted by the Resource Data Sync.
func (o ResourceDataSyncS3DestinationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) string { return v.Region }).(pulumi.StringOutput)
}

// A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
func (o ResourceDataSyncS3DestinationOutput) SyncFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceDataSyncS3Destination) *string { return v.SyncFormat }).(pulumi.StringPtrOutput)
}

type ResourceDataSyncS3DestinationPtrOutput struct{ *pulumi.OutputState }

func (ResourceDataSyncS3DestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDataSyncS3Destination)(nil)).Elem()
}

func (o ResourceDataSyncS3DestinationPtrOutput) ToResourceDataSyncS3DestinationPtrOutput() ResourceDataSyncS3DestinationPtrOutput {
	return o
}

func (o ResourceDataSyncS3DestinationPtrOutput) ToResourceDataSyncS3DestinationPtrOutputWithContext(ctx context.Context) ResourceDataSyncS3DestinationPtrOutput {
	return o
}

func (o ResourceDataSyncS3DestinationPtrOutput) Elem() ResourceDataSyncS3DestinationOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) ResourceDataSyncS3Destination {
		if v != nil {
			return *v
		}
		var ret ResourceDataSyncS3Destination
		return ret
	}).(ResourceDataSyncS3DestinationOutput)
}

// Name of S3 bucket where the aggregated data is stored.
func (o ResourceDataSyncS3DestinationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// ARN of an encryption key for a destination in Amazon S3.
func (o ResourceDataSyncS3DestinationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Prefix for the bucket.
func (o ResourceDataSyncS3DestinationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Region with the bucket targeted by the Resource Data Sync.
func (o ResourceDataSyncS3DestinationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
func (o ResourceDataSyncS3DestinationPtrOutput) SyncFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceDataSyncS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.SyncFormat
	}).(pulumi.StringPtrOutput)
}

type GetContactsRotationRecurrence struct {
	DailySettings        []GetContactsRotationRecurrenceDailySetting   `pulumi:"dailySettings"`
	MonthlySettings      []GetContactsRotationRecurrenceMonthlySetting `pulumi:"monthlySettings"`
	NumberOfOnCalls      int                                           `pulumi:"numberOfOnCalls"`
	RecurrenceMultiplier int                                           `pulumi:"recurrenceMultiplier"`
	ShiftCoverages       []GetContactsRotationRecurrenceShiftCoverage  `pulumi:"shiftCoverages"`
	WeeklySettings       []GetContactsRotationRecurrenceWeeklySetting  `pulumi:"weeklySettings"`
}

// GetContactsRotationRecurrenceInput is an input type that accepts GetContactsRotationRecurrenceArgs and GetContactsRotationRecurrenceOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceInput` via:
//
//	GetContactsRotationRecurrenceArgs{...}
type GetContactsRotationRecurrenceInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceOutput() GetContactsRotationRecurrenceOutput
	ToGetContactsRotationRecurrenceOutputWithContext(context.Context) GetContactsRotationRecurrenceOutput
}

type GetContactsRotationRecurrenceArgs struct {
	DailySettings        GetContactsRotationRecurrenceDailySettingArrayInput   `pulumi:"dailySettings"`
	MonthlySettings      GetContactsRotationRecurrenceMonthlySettingArrayInput `pulumi:"monthlySettings"`
	NumberOfOnCalls      pulumi.IntInput                                       `pulumi:"numberOfOnCalls"`
	RecurrenceMultiplier pulumi.IntInput                                       `pulumi:"recurrenceMultiplier"`
	ShiftCoverages       GetContactsRotationRecurrenceShiftCoverageArrayInput  `pulumi:"shiftCoverages"`
	WeeklySettings       GetContactsRotationRecurrenceWeeklySettingArrayInput  `pulumi:"weeklySettings"`
}

func (GetContactsRotationRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrence)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceArgs) ToGetContactsRotationRecurrenceOutput() GetContactsRotationRecurrenceOutput {
	return i.ToGetContactsRotationRecurrenceOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceArgs) ToGetContactsRotationRecurrenceOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceOutput)
}

// GetContactsRotationRecurrenceArrayInput is an input type that accepts GetContactsRotationRecurrenceArray and GetContactsRotationRecurrenceArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceArrayInput` via:
//
//	GetContactsRotationRecurrenceArray{ GetContactsRotationRecurrenceArgs{...} }
type GetContactsRotationRecurrenceArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceArrayOutput() GetContactsRotationRecurrenceArrayOutput
	ToGetContactsRotationRecurrenceArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceArrayOutput
}

type GetContactsRotationRecurrenceArray []GetContactsRotationRecurrenceInput

func (GetContactsRotationRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrence)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceArray) ToGetContactsRotationRecurrenceArrayOutput() GetContactsRotationRecurrenceArrayOutput {
	return i.ToGetContactsRotationRecurrenceArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceArray) ToGetContactsRotationRecurrenceArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceArrayOutput)
}

type GetContactsRotationRecurrenceOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrence)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceOutput) ToGetContactsRotationRecurrenceOutput() GetContactsRotationRecurrenceOutput {
	return o
}

func (o GetContactsRotationRecurrenceOutput) ToGetContactsRotationRecurrenceOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceOutput {
	return o
}

func (o GetContactsRotationRecurrenceOutput) DailySettings() GetContactsRotationRecurrenceDailySettingArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrence) []GetContactsRotationRecurrenceDailySetting {
		return v.DailySettings
	}).(GetContactsRotationRecurrenceDailySettingArrayOutput)
}

func (o GetContactsRotationRecurrenceOutput) MonthlySettings() GetContactsRotationRecurrenceMonthlySettingArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrence) []GetContactsRotationRecurrenceMonthlySetting {
		return v.MonthlySettings
	}).(GetContactsRotationRecurrenceMonthlySettingArrayOutput)
}

func (o GetContactsRotationRecurrenceOutput) NumberOfOnCalls() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrence) int { return v.NumberOfOnCalls }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceOutput) RecurrenceMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrence) int { return v.RecurrenceMultiplier }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceOutput) ShiftCoverages() GetContactsRotationRecurrenceShiftCoverageArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrence) []GetContactsRotationRecurrenceShiftCoverage {
		return v.ShiftCoverages
	}).(GetContactsRotationRecurrenceShiftCoverageArrayOutput)
}

func (o GetContactsRotationRecurrenceOutput) WeeklySettings() GetContactsRotationRecurrenceWeeklySettingArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrence) []GetContactsRotationRecurrenceWeeklySetting {
		return v.WeeklySettings
	}).(GetContactsRotationRecurrenceWeeklySettingArrayOutput)
}

type GetContactsRotationRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrence)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceArrayOutput) ToGetContactsRotationRecurrenceArrayOutput() GetContactsRotationRecurrenceArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceArrayOutput) ToGetContactsRotationRecurrenceArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrence {
		return vs[0].([]GetContactsRotationRecurrence)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceOutput)
}

type GetContactsRotationRecurrenceDailySetting struct {
	HourOfDay    int `pulumi:"hourOfDay"`
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// GetContactsRotationRecurrenceDailySettingInput is an input type that accepts GetContactsRotationRecurrenceDailySettingArgs and GetContactsRotationRecurrenceDailySettingOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceDailySettingInput` via:
//
//	GetContactsRotationRecurrenceDailySettingArgs{...}
type GetContactsRotationRecurrenceDailySettingInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceDailySettingOutput() GetContactsRotationRecurrenceDailySettingOutput
	ToGetContactsRotationRecurrenceDailySettingOutputWithContext(context.Context) GetContactsRotationRecurrenceDailySettingOutput
}

type GetContactsRotationRecurrenceDailySettingArgs struct {
	HourOfDay    pulumi.IntInput `pulumi:"hourOfDay"`
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (GetContactsRotationRecurrenceDailySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceDailySettingArgs) ToGetContactsRotationRecurrenceDailySettingOutput() GetContactsRotationRecurrenceDailySettingOutput {
	return i.ToGetContactsRotationRecurrenceDailySettingOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceDailySettingArgs) ToGetContactsRotationRecurrenceDailySettingOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceDailySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceDailySettingOutput)
}

// GetContactsRotationRecurrenceDailySettingArrayInput is an input type that accepts GetContactsRotationRecurrenceDailySettingArray and GetContactsRotationRecurrenceDailySettingArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceDailySettingArrayInput` via:
//
//	GetContactsRotationRecurrenceDailySettingArray{ GetContactsRotationRecurrenceDailySettingArgs{...} }
type GetContactsRotationRecurrenceDailySettingArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceDailySettingArrayOutput() GetContactsRotationRecurrenceDailySettingArrayOutput
	ToGetContactsRotationRecurrenceDailySettingArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceDailySettingArrayOutput
}

type GetContactsRotationRecurrenceDailySettingArray []GetContactsRotationRecurrenceDailySettingInput

func (GetContactsRotationRecurrenceDailySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceDailySettingArray) ToGetContactsRotationRecurrenceDailySettingArrayOutput() GetContactsRotationRecurrenceDailySettingArrayOutput {
	return i.ToGetContactsRotationRecurrenceDailySettingArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceDailySettingArray) ToGetContactsRotationRecurrenceDailySettingArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceDailySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceDailySettingArrayOutput)
}

type GetContactsRotationRecurrenceDailySettingOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceDailySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceDailySettingOutput) ToGetContactsRotationRecurrenceDailySettingOutput() GetContactsRotationRecurrenceDailySettingOutput {
	return o
}

func (o GetContactsRotationRecurrenceDailySettingOutput) ToGetContactsRotationRecurrenceDailySettingOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceDailySettingOutput {
	return o
}

func (o GetContactsRotationRecurrenceDailySettingOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceDailySetting) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceDailySettingOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceDailySetting) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type GetContactsRotationRecurrenceDailySettingArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceDailySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceDailySetting)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceDailySettingArrayOutput) ToGetContactsRotationRecurrenceDailySettingArrayOutput() GetContactsRotationRecurrenceDailySettingArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceDailySettingArrayOutput) ToGetContactsRotationRecurrenceDailySettingArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceDailySettingArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceDailySettingArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceDailySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceDailySetting {
		return vs[0].([]GetContactsRotationRecurrenceDailySetting)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceDailySettingOutput)
}

type GetContactsRotationRecurrenceMonthlySetting struct {
	DayOfMonth   int                                                      `pulumi:"dayOfMonth"`
	HandOffTimes []GetContactsRotationRecurrenceMonthlySettingHandOffTime `pulumi:"handOffTimes"`
}

// GetContactsRotationRecurrenceMonthlySettingInput is an input type that accepts GetContactsRotationRecurrenceMonthlySettingArgs and GetContactsRotationRecurrenceMonthlySettingOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceMonthlySettingInput` via:
//
//	GetContactsRotationRecurrenceMonthlySettingArgs{...}
type GetContactsRotationRecurrenceMonthlySettingInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceMonthlySettingOutput() GetContactsRotationRecurrenceMonthlySettingOutput
	ToGetContactsRotationRecurrenceMonthlySettingOutputWithContext(context.Context) GetContactsRotationRecurrenceMonthlySettingOutput
}

type GetContactsRotationRecurrenceMonthlySettingArgs struct {
	DayOfMonth   pulumi.IntInput                                                  `pulumi:"dayOfMonth"`
	HandOffTimes GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayInput `pulumi:"handOffTimes"`
}

func (GetContactsRotationRecurrenceMonthlySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceMonthlySettingArgs) ToGetContactsRotationRecurrenceMonthlySettingOutput() GetContactsRotationRecurrenceMonthlySettingOutput {
	return i.ToGetContactsRotationRecurrenceMonthlySettingOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceMonthlySettingArgs) ToGetContactsRotationRecurrenceMonthlySettingOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceMonthlySettingOutput)
}

// GetContactsRotationRecurrenceMonthlySettingArrayInput is an input type that accepts GetContactsRotationRecurrenceMonthlySettingArray and GetContactsRotationRecurrenceMonthlySettingArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceMonthlySettingArrayInput` via:
//
//	GetContactsRotationRecurrenceMonthlySettingArray{ GetContactsRotationRecurrenceMonthlySettingArgs{...} }
type GetContactsRotationRecurrenceMonthlySettingArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceMonthlySettingArrayOutput() GetContactsRotationRecurrenceMonthlySettingArrayOutput
	ToGetContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceMonthlySettingArrayOutput
}

type GetContactsRotationRecurrenceMonthlySettingArray []GetContactsRotationRecurrenceMonthlySettingInput

func (GetContactsRotationRecurrenceMonthlySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceMonthlySettingArray) ToGetContactsRotationRecurrenceMonthlySettingArrayOutput() GetContactsRotationRecurrenceMonthlySettingArrayOutput {
	return i.ToGetContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceMonthlySettingArray) ToGetContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceMonthlySettingArrayOutput)
}

type GetContactsRotationRecurrenceMonthlySettingOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceMonthlySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceMonthlySettingOutput) ToGetContactsRotationRecurrenceMonthlySettingOutput() GetContactsRotationRecurrenceMonthlySettingOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingOutput) ToGetContactsRotationRecurrenceMonthlySettingOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingOutput) DayOfMonth() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceMonthlySetting) int { return v.DayOfMonth }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceMonthlySettingOutput) HandOffTimes() GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceMonthlySetting) []GetContactsRotationRecurrenceMonthlySettingHandOffTime {
		return v.HandOffTimes
	}).(GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput)
}

type GetContactsRotationRecurrenceMonthlySettingArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceMonthlySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceMonthlySetting)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceMonthlySettingArrayOutput) ToGetContactsRotationRecurrenceMonthlySettingArrayOutput() GetContactsRotationRecurrenceMonthlySettingArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingArrayOutput) ToGetContactsRotationRecurrenceMonthlySettingArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceMonthlySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceMonthlySetting {
		return vs[0].([]GetContactsRotationRecurrenceMonthlySetting)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceMonthlySettingOutput)
}

type GetContactsRotationRecurrenceMonthlySettingHandOffTime struct {
	HourOfDay    int `pulumi:"hourOfDay"`
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// GetContactsRotationRecurrenceMonthlySettingHandOffTimeInput is an input type that accepts GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs and GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceMonthlySettingHandOffTimeInput` via:
//
//	GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs{...}
type GetContactsRotationRecurrenceMonthlySettingHandOffTimeInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput() GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput
	ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(context.Context) GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput
}

type GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs struct {
	HourOfDay    pulumi.IntInput `pulumi:"hourOfDay"`
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput() GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return i.ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput)
}

// GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayInput is an input type that accepts GetContactsRotationRecurrenceMonthlySettingHandOffTimeArray and GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayInput` via:
//
//	GetContactsRotationRecurrenceMonthlySettingHandOffTimeArray{ GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs{...} }
type GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput() GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput
	ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput
}

type GetContactsRotationRecurrenceMonthlySettingHandOffTimeArray []GetContactsRotationRecurrenceMonthlySettingHandOffTimeInput

func (GetContactsRotationRecurrenceMonthlySettingHandOffTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceMonthlySettingHandOffTimeArray) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput() GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput {
	return i.ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceMonthlySettingHandOffTimeArray) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput)
}

type GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput() GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceMonthlySettingHandOffTime) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceMonthlySettingHandOffTime) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceMonthlySettingHandOffTime)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput() GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput) ToGetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceMonthlySettingHandOffTime {
		return vs[0].([]GetContactsRotationRecurrenceMonthlySettingHandOffTime)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput)
}

type GetContactsRotationRecurrenceShiftCoverage struct {
	CoverageTimes []GetContactsRotationRecurrenceShiftCoverageCoverageTime `pulumi:"coverageTimes"`
	MapBlockKey   string                                                   `pulumi:"mapBlockKey"`
}

// GetContactsRotationRecurrenceShiftCoverageInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageArgs and GetContactsRotationRecurrenceShiftCoverageOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageArgs{...}
type GetContactsRotationRecurrenceShiftCoverageInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageOutput() GetContactsRotationRecurrenceShiftCoverageOutput
	ToGetContactsRotationRecurrenceShiftCoverageOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageOutput
}

type GetContactsRotationRecurrenceShiftCoverageArgs struct {
	CoverageTimes GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput `pulumi:"coverageTimes"`
	MapBlockKey   pulumi.StringInput                                               `pulumi:"mapBlockKey"`
}

func (GetContactsRotationRecurrenceShiftCoverageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageArgs) ToGetContactsRotationRecurrenceShiftCoverageOutput() GetContactsRotationRecurrenceShiftCoverageOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageArgs) ToGetContactsRotationRecurrenceShiftCoverageOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageOutput)
}

// GetContactsRotationRecurrenceShiftCoverageArrayInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageArray and GetContactsRotationRecurrenceShiftCoverageArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageArrayInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageArray{ GetContactsRotationRecurrenceShiftCoverageArgs{...} }
type GetContactsRotationRecurrenceShiftCoverageArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageArrayOutput() GetContactsRotationRecurrenceShiftCoverageArrayOutput
	ToGetContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageArrayOutput
}

type GetContactsRotationRecurrenceShiftCoverageArray []GetContactsRotationRecurrenceShiftCoverageInput

func (GetContactsRotationRecurrenceShiftCoverageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageArray) ToGetContactsRotationRecurrenceShiftCoverageArrayOutput() GetContactsRotationRecurrenceShiftCoverageArrayOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageArray) ToGetContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageArrayOutput)
}

type GetContactsRotationRecurrenceShiftCoverageOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageOutput) ToGetContactsRotationRecurrenceShiftCoverageOutput() GetContactsRotationRecurrenceShiftCoverageOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageOutput) ToGetContactsRotationRecurrenceShiftCoverageOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageOutput) CoverageTimes() GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverage) []GetContactsRotationRecurrenceShiftCoverageCoverageTime {
		return v.CoverageTimes
	}).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput)
}

func (o GetContactsRotationRecurrenceShiftCoverageOutput) MapBlockKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverage) string { return v.MapBlockKey }).(pulumi.StringOutput)
}

type GetContactsRotationRecurrenceShiftCoverageArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverage)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageArrayOutput() GetContactsRotationRecurrenceShiftCoverageArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceShiftCoverageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceShiftCoverage {
		return vs[0].([]GetContactsRotationRecurrenceShiftCoverage)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceShiftCoverageOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTime struct {
	Ends   []GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd   `pulumi:"ends"`
	Starts []GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart `pulumi:"starts"`
}

// GetContactsRotationRecurrenceShiftCoverageCoverageTimeInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs and GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageCoverageTimeInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs{...}
type GetContactsRotationRecurrenceShiftCoverageCoverageTimeInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput
	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs struct {
	Ends   GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayInput   `pulumi:"ends"`
	Starts GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayInput `pulumi:"starts"`
}

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput)
}

// GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageCoverageTimeArray and GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageCoverageTimeArray{ GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs{...} }
type GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput
	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeArray []GetContactsRotationRecurrenceShiftCoverageCoverageTimeInput

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeArray) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeArray) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) Ends() GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverageCoverageTime) []GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd {
		return v.Ends
	}).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput)
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput) Starts() GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverageCoverageTime) []GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart {
		return v.Starts
	}).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverageCoverageTime)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceShiftCoverageCoverageTime {
		return vs[0].([]GetContactsRotationRecurrenceShiftCoverageCoverageTime)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd struct {
	HourOfDay    int `pulumi:"hourOfDay"`
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs and GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs{...}
type GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput
	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs struct {
	HourOfDay    pulumi.IntInput `pulumi:"hourOfDay"`
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput)
}

// GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArray and GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArray{ GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs{...} }
type GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput
	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArray []GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArray) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArray) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd {
		return vs[0].([]GetContactsRotationRecurrenceShiftCoverageCoverageTimeEnd)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart struct {
	HourOfDay    int `pulumi:"hourOfDay"`
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs and GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs{...}
type GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput
	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs struct {
	HourOfDay    pulumi.IntInput `pulumi:"hourOfDay"`
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput)
}

// GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayInput is an input type that accepts GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArray and GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayInput` via:
//
//	GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArray{ GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs{...} }
type GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput
	ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArray []GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArray) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput {
	return i.ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArray) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput() GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput) ToGetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart {
		return vs[0].([]GetContactsRotationRecurrenceShiftCoverageCoverageTimeStart)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput)
}

type GetContactsRotationRecurrenceWeeklySetting struct {
	DayOfWeek    string                                                  `pulumi:"dayOfWeek"`
	HandOffTimes []GetContactsRotationRecurrenceWeeklySettingHandOffTime `pulumi:"handOffTimes"`
}

// GetContactsRotationRecurrenceWeeklySettingInput is an input type that accepts GetContactsRotationRecurrenceWeeklySettingArgs and GetContactsRotationRecurrenceWeeklySettingOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceWeeklySettingInput` via:
//
//	GetContactsRotationRecurrenceWeeklySettingArgs{...}
type GetContactsRotationRecurrenceWeeklySettingInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceWeeklySettingOutput() GetContactsRotationRecurrenceWeeklySettingOutput
	ToGetContactsRotationRecurrenceWeeklySettingOutputWithContext(context.Context) GetContactsRotationRecurrenceWeeklySettingOutput
}

type GetContactsRotationRecurrenceWeeklySettingArgs struct {
	DayOfWeek    pulumi.StringInput                                              `pulumi:"dayOfWeek"`
	HandOffTimes GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayInput `pulumi:"handOffTimes"`
}

func (GetContactsRotationRecurrenceWeeklySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceWeeklySettingArgs) ToGetContactsRotationRecurrenceWeeklySettingOutput() GetContactsRotationRecurrenceWeeklySettingOutput {
	return i.ToGetContactsRotationRecurrenceWeeklySettingOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceWeeklySettingArgs) ToGetContactsRotationRecurrenceWeeklySettingOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceWeeklySettingOutput)
}

// GetContactsRotationRecurrenceWeeklySettingArrayInput is an input type that accepts GetContactsRotationRecurrenceWeeklySettingArray and GetContactsRotationRecurrenceWeeklySettingArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceWeeklySettingArrayInput` via:
//
//	GetContactsRotationRecurrenceWeeklySettingArray{ GetContactsRotationRecurrenceWeeklySettingArgs{...} }
type GetContactsRotationRecurrenceWeeklySettingArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceWeeklySettingArrayOutput() GetContactsRotationRecurrenceWeeklySettingArrayOutput
	ToGetContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceWeeklySettingArrayOutput
}

type GetContactsRotationRecurrenceWeeklySettingArray []GetContactsRotationRecurrenceWeeklySettingInput

func (GetContactsRotationRecurrenceWeeklySettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceWeeklySettingArray) ToGetContactsRotationRecurrenceWeeklySettingArrayOutput() GetContactsRotationRecurrenceWeeklySettingArrayOutput {
	return i.ToGetContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceWeeklySettingArray) ToGetContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceWeeklySettingArrayOutput)
}

type GetContactsRotationRecurrenceWeeklySettingOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceWeeklySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceWeeklySettingOutput) ToGetContactsRotationRecurrenceWeeklySettingOutput() GetContactsRotationRecurrenceWeeklySettingOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingOutput) ToGetContactsRotationRecurrenceWeeklySettingOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceWeeklySetting) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

func (o GetContactsRotationRecurrenceWeeklySettingOutput) HandOffTimes() GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceWeeklySetting) []GetContactsRotationRecurrenceWeeklySettingHandOffTime {
		return v.HandOffTimes
	}).(GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput)
}

type GetContactsRotationRecurrenceWeeklySettingArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceWeeklySettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceWeeklySetting)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceWeeklySettingArrayOutput) ToGetContactsRotationRecurrenceWeeklySettingArrayOutput() GetContactsRotationRecurrenceWeeklySettingArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingArrayOutput) ToGetContactsRotationRecurrenceWeeklySettingArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceWeeklySettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceWeeklySetting {
		return vs[0].([]GetContactsRotationRecurrenceWeeklySetting)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceWeeklySettingOutput)
}

type GetContactsRotationRecurrenceWeeklySettingHandOffTime struct {
	HourOfDay    int `pulumi:"hourOfDay"`
	MinuteOfHour int `pulumi:"minuteOfHour"`
}

// GetContactsRotationRecurrenceWeeklySettingHandOffTimeInput is an input type that accepts GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs and GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceWeeklySettingHandOffTimeInput` via:
//
//	GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs{...}
type GetContactsRotationRecurrenceWeeklySettingHandOffTimeInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput() GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput
	ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(context.Context) GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput
}

type GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs struct {
	HourOfDay    pulumi.IntInput `pulumi:"hourOfDay"`
	MinuteOfHour pulumi.IntInput `pulumi:"minuteOfHour"`
}

func (GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput() GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return i.ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput)
}

// GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayInput is an input type that accepts GetContactsRotationRecurrenceWeeklySettingHandOffTimeArray and GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput values.
// You can construct a concrete instance of `GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayInput` via:
//
//	GetContactsRotationRecurrenceWeeklySettingHandOffTimeArray{ GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs{...} }
type GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayInput interface {
	pulumi.Input

	ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput() GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput
	ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutputWithContext(context.Context) GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput
}

type GetContactsRotationRecurrenceWeeklySettingHandOffTimeArray []GetContactsRotationRecurrenceWeeklySettingHandOffTimeInput

func (GetContactsRotationRecurrenceWeeklySettingHandOffTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (i GetContactsRotationRecurrenceWeeklySettingHandOffTimeArray) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput() GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput {
	return i.ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutputWithContext(context.Background())
}

func (i GetContactsRotationRecurrenceWeeklySettingHandOffTimeArray) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput)
}

type GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput() GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) HourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceWeeklySettingHandOffTime) int { return v.HourOfDay }).(pulumi.IntOutput)
}

func (o GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput) MinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetContactsRotationRecurrenceWeeklySettingHandOffTime) int { return v.MinuteOfHour }).(pulumi.IntOutput)
}

type GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput struct{ *pulumi.OutputState }

func (GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsRotationRecurrenceWeeklySettingHandOffTime)(nil)).Elem()
}

func (o GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput() GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput) ToGetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutputWithContext(ctx context.Context) GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput {
	return o
}

func (o GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput) Index(i pulumi.IntInput) GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsRotationRecurrenceWeeklySettingHandOffTime {
		return vs[0].([]GetContactsRotationRecurrenceWeeklySettingHandOffTime)[vs[1].(int)]
	}).(GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput)
}

type GetInstancesFilter struct {
	// Name of the filter field. Valid values can be found in the [SSM InstanceInformationStringFilter API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_InstanceInformationStringFilter.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//	GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [SSM InstanceInformationStringFilter API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_InstanceInformationStringFilter.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//	GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

// Name of the filter field. Valid values can be found in the [SSM InstanceInformationStringFilter API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_InstanceInformationStringFilter.html).
func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetMaintenanceWindowsFilter struct {
	// Name of the filter field. Valid values can be found in the [SSM DescribeMaintenanceWindows API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribeMaintenanceWindows.html#API_DescribeMaintenanceWindows_RequestSyntax).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetMaintenanceWindowsFilterInput is an input type that accepts GetMaintenanceWindowsFilterArgs and GetMaintenanceWindowsFilterOutput values.
// You can construct a concrete instance of `GetMaintenanceWindowsFilterInput` via:
//
//	GetMaintenanceWindowsFilterArgs{...}
type GetMaintenanceWindowsFilterInput interface {
	pulumi.Input

	ToGetMaintenanceWindowsFilterOutput() GetMaintenanceWindowsFilterOutput
	ToGetMaintenanceWindowsFilterOutputWithContext(context.Context) GetMaintenanceWindowsFilterOutput
}

type GetMaintenanceWindowsFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [SSM DescribeMaintenanceWindows API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribeMaintenanceWindows.html#API_DescribeMaintenanceWindows_RequestSyntax).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMaintenanceWindowsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaintenanceWindowsFilter)(nil)).Elem()
}

func (i GetMaintenanceWindowsFilterArgs) ToGetMaintenanceWindowsFilterOutput() GetMaintenanceWindowsFilterOutput {
	return i.ToGetMaintenanceWindowsFilterOutputWithContext(context.Background())
}

func (i GetMaintenanceWindowsFilterArgs) ToGetMaintenanceWindowsFilterOutputWithContext(ctx context.Context) GetMaintenanceWindowsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMaintenanceWindowsFilterOutput)
}

// GetMaintenanceWindowsFilterArrayInput is an input type that accepts GetMaintenanceWindowsFilterArray and GetMaintenanceWindowsFilterArrayOutput values.
// You can construct a concrete instance of `GetMaintenanceWindowsFilterArrayInput` via:
//
//	GetMaintenanceWindowsFilterArray{ GetMaintenanceWindowsFilterArgs{...} }
type GetMaintenanceWindowsFilterArrayInput interface {
	pulumi.Input

	ToGetMaintenanceWindowsFilterArrayOutput() GetMaintenanceWindowsFilterArrayOutput
	ToGetMaintenanceWindowsFilterArrayOutputWithContext(context.Context) GetMaintenanceWindowsFilterArrayOutput
}

type GetMaintenanceWindowsFilterArray []GetMaintenanceWindowsFilterInput

func (GetMaintenanceWindowsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMaintenanceWindowsFilter)(nil)).Elem()
}

func (i GetMaintenanceWindowsFilterArray) ToGetMaintenanceWindowsFilterArrayOutput() GetMaintenanceWindowsFilterArrayOutput {
	return i.ToGetMaintenanceWindowsFilterArrayOutputWithContext(context.Background())
}

func (i GetMaintenanceWindowsFilterArray) ToGetMaintenanceWindowsFilterArrayOutputWithContext(ctx context.Context) GetMaintenanceWindowsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMaintenanceWindowsFilterArrayOutput)
}

type GetMaintenanceWindowsFilterOutput struct{ *pulumi.OutputState }

func (GetMaintenanceWindowsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaintenanceWindowsFilter)(nil)).Elem()
}

func (o GetMaintenanceWindowsFilterOutput) ToGetMaintenanceWindowsFilterOutput() GetMaintenanceWindowsFilterOutput {
	return o
}

func (o GetMaintenanceWindowsFilterOutput) ToGetMaintenanceWindowsFilterOutputWithContext(ctx context.Context) GetMaintenanceWindowsFilterOutput {
	return o
}

// Name of the filter field. Valid values can be found in the [SSM DescribeMaintenanceWindows API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribeMaintenanceWindows.html#API_DescribeMaintenanceWindows_RequestSyntax).
func (o GetMaintenanceWindowsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaintenanceWindowsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetMaintenanceWindowsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMaintenanceWindowsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMaintenanceWindowsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMaintenanceWindowsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMaintenanceWindowsFilter)(nil)).Elem()
}

func (o GetMaintenanceWindowsFilterArrayOutput) ToGetMaintenanceWindowsFilterArrayOutput() GetMaintenanceWindowsFilterArrayOutput {
	return o
}

func (o GetMaintenanceWindowsFilterArrayOutput) ToGetMaintenanceWindowsFilterArrayOutputWithContext(ctx context.Context) GetMaintenanceWindowsFilterArrayOutput {
	return o
}

func (o GetMaintenanceWindowsFilterArrayOutput) Index(i pulumi.IntInput) GetMaintenanceWindowsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMaintenanceWindowsFilter {
		return vs[0].([]GetMaintenanceWindowsFilter)[vs[1].(int)]
	}).(GetMaintenanceWindowsFilterOutput)
}

type GetPatchBaselineApprovalRule struct {
	// Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline.
	ApproveAfterDays int `pulumi:"approveAfterDays"`
	// Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as `YYYY-MM-DD`. Conflicts with `approveAfterDays`
	ApproveUntilDate string `pulumi:"approveUntilDate"`
	// Compliance level for patches approved by this rule.
	ComplianceLevel string `pulumi:"complianceLevel"`
	// Boolean enabling the application of non-security updates.
	EnableNonSecurity bool `pulumi:"enableNonSecurity"`
	// Patch filter group that defines the criteria for the rule.
	PatchFilters []GetPatchBaselineApprovalRulePatchFilter `pulumi:"patchFilters"`
}

// GetPatchBaselineApprovalRuleInput is an input type that accepts GetPatchBaselineApprovalRuleArgs and GetPatchBaselineApprovalRuleOutput values.
// You can construct a concrete instance of `GetPatchBaselineApprovalRuleInput` via:
//
//	GetPatchBaselineApprovalRuleArgs{...}
type GetPatchBaselineApprovalRuleInput interface {
	pulumi.Input

	ToGetPatchBaselineApprovalRuleOutput() GetPatchBaselineApprovalRuleOutput
	ToGetPatchBaselineApprovalRuleOutputWithContext(context.Context) GetPatchBaselineApprovalRuleOutput
}

type GetPatchBaselineApprovalRuleArgs struct {
	// Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline.
	ApproveAfterDays pulumi.IntInput `pulumi:"approveAfterDays"`
	// Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as `YYYY-MM-DD`. Conflicts with `approveAfterDays`
	ApproveUntilDate pulumi.StringInput `pulumi:"approveUntilDate"`
	// Compliance level for patches approved by this rule.
	ComplianceLevel pulumi.StringInput `pulumi:"complianceLevel"`
	// Boolean enabling the application of non-security updates.
	EnableNonSecurity pulumi.BoolInput `pulumi:"enableNonSecurity"`
	// Patch filter group that defines the criteria for the rule.
	PatchFilters GetPatchBaselineApprovalRulePatchFilterArrayInput `pulumi:"patchFilters"`
}

func (GetPatchBaselineApprovalRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineApprovalRule)(nil)).Elem()
}

func (i GetPatchBaselineApprovalRuleArgs) ToGetPatchBaselineApprovalRuleOutput() GetPatchBaselineApprovalRuleOutput {
	return i.ToGetPatchBaselineApprovalRuleOutputWithContext(context.Background())
}

func (i GetPatchBaselineApprovalRuleArgs) ToGetPatchBaselineApprovalRuleOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineApprovalRuleOutput)
}

// GetPatchBaselineApprovalRuleArrayInput is an input type that accepts GetPatchBaselineApprovalRuleArray and GetPatchBaselineApprovalRuleArrayOutput values.
// You can construct a concrete instance of `GetPatchBaselineApprovalRuleArrayInput` via:
//
//	GetPatchBaselineApprovalRuleArray{ GetPatchBaselineApprovalRuleArgs{...} }
type GetPatchBaselineApprovalRuleArrayInput interface {
	pulumi.Input

	ToGetPatchBaselineApprovalRuleArrayOutput() GetPatchBaselineApprovalRuleArrayOutput
	ToGetPatchBaselineApprovalRuleArrayOutputWithContext(context.Context) GetPatchBaselineApprovalRuleArrayOutput
}

type GetPatchBaselineApprovalRuleArray []GetPatchBaselineApprovalRuleInput

func (GetPatchBaselineApprovalRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineApprovalRule)(nil)).Elem()
}

func (i GetPatchBaselineApprovalRuleArray) ToGetPatchBaselineApprovalRuleArrayOutput() GetPatchBaselineApprovalRuleArrayOutput {
	return i.ToGetPatchBaselineApprovalRuleArrayOutputWithContext(context.Background())
}

func (i GetPatchBaselineApprovalRuleArray) ToGetPatchBaselineApprovalRuleArrayOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineApprovalRuleArrayOutput)
}

type GetPatchBaselineApprovalRuleOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineApprovalRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineApprovalRule)(nil)).Elem()
}

func (o GetPatchBaselineApprovalRuleOutput) ToGetPatchBaselineApprovalRuleOutput() GetPatchBaselineApprovalRuleOutput {
	return o
}

func (o GetPatchBaselineApprovalRuleOutput) ToGetPatchBaselineApprovalRuleOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRuleOutput {
	return o
}

// Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline.
func (o GetPatchBaselineApprovalRuleOutput) ApproveAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetPatchBaselineApprovalRule) int { return v.ApproveAfterDays }).(pulumi.IntOutput)
}

// Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as `YYYY-MM-DD`. Conflicts with `approveAfterDays`
func (o GetPatchBaselineApprovalRuleOutput) ApproveUntilDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselineApprovalRule) string { return v.ApproveUntilDate }).(pulumi.StringOutput)
}

// Compliance level for patches approved by this rule.
func (o GetPatchBaselineApprovalRuleOutput) ComplianceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselineApprovalRule) string { return v.ComplianceLevel }).(pulumi.StringOutput)
}

// Boolean enabling the application of non-security updates.
func (o GetPatchBaselineApprovalRuleOutput) EnableNonSecurity() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPatchBaselineApprovalRule) bool { return v.EnableNonSecurity }).(pulumi.BoolOutput)
}

// Patch filter group that defines the criteria for the rule.
func (o GetPatchBaselineApprovalRuleOutput) PatchFilters() GetPatchBaselineApprovalRulePatchFilterArrayOutput {
	return o.ApplyT(func(v GetPatchBaselineApprovalRule) []GetPatchBaselineApprovalRulePatchFilter { return v.PatchFilters }).(GetPatchBaselineApprovalRulePatchFilterArrayOutput)
}

type GetPatchBaselineApprovalRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineApprovalRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineApprovalRule)(nil)).Elem()
}

func (o GetPatchBaselineApprovalRuleArrayOutput) ToGetPatchBaselineApprovalRuleArrayOutput() GetPatchBaselineApprovalRuleArrayOutput {
	return o
}

func (o GetPatchBaselineApprovalRuleArrayOutput) ToGetPatchBaselineApprovalRuleArrayOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRuleArrayOutput {
	return o
}

func (o GetPatchBaselineApprovalRuleArrayOutput) Index(i pulumi.IntInput) GetPatchBaselineApprovalRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPatchBaselineApprovalRule {
		return vs[0].([]GetPatchBaselineApprovalRule)[vs[1].(int)]
	}).(GetPatchBaselineApprovalRuleOutput)
}

type GetPatchBaselineApprovalRulePatchFilter struct {
	// Key for the filter.
	Key string `pulumi:"key"`
	// Value for the filter.
	Values []string `pulumi:"values"`
}

// GetPatchBaselineApprovalRulePatchFilterInput is an input type that accepts GetPatchBaselineApprovalRulePatchFilterArgs and GetPatchBaselineApprovalRulePatchFilterOutput values.
// You can construct a concrete instance of `GetPatchBaselineApprovalRulePatchFilterInput` via:
//
//	GetPatchBaselineApprovalRulePatchFilterArgs{...}
type GetPatchBaselineApprovalRulePatchFilterInput interface {
	pulumi.Input

	ToGetPatchBaselineApprovalRulePatchFilterOutput() GetPatchBaselineApprovalRulePatchFilterOutput
	ToGetPatchBaselineApprovalRulePatchFilterOutputWithContext(context.Context) GetPatchBaselineApprovalRulePatchFilterOutput
}

type GetPatchBaselineApprovalRulePatchFilterArgs struct {
	// Key for the filter.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPatchBaselineApprovalRulePatchFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (i GetPatchBaselineApprovalRulePatchFilterArgs) ToGetPatchBaselineApprovalRulePatchFilterOutput() GetPatchBaselineApprovalRulePatchFilterOutput {
	return i.ToGetPatchBaselineApprovalRulePatchFilterOutputWithContext(context.Background())
}

func (i GetPatchBaselineApprovalRulePatchFilterArgs) ToGetPatchBaselineApprovalRulePatchFilterOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRulePatchFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineApprovalRulePatchFilterOutput)
}

// GetPatchBaselineApprovalRulePatchFilterArrayInput is an input type that accepts GetPatchBaselineApprovalRulePatchFilterArray and GetPatchBaselineApprovalRulePatchFilterArrayOutput values.
// You can construct a concrete instance of `GetPatchBaselineApprovalRulePatchFilterArrayInput` via:
//
//	GetPatchBaselineApprovalRulePatchFilterArray{ GetPatchBaselineApprovalRulePatchFilterArgs{...} }
type GetPatchBaselineApprovalRulePatchFilterArrayInput interface {
	pulumi.Input

	ToGetPatchBaselineApprovalRulePatchFilterArrayOutput() GetPatchBaselineApprovalRulePatchFilterArrayOutput
	ToGetPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(context.Context) GetPatchBaselineApprovalRulePatchFilterArrayOutput
}

type GetPatchBaselineApprovalRulePatchFilterArray []GetPatchBaselineApprovalRulePatchFilterInput

func (GetPatchBaselineApprovalRulePatchFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (i GetPatchBaselineApprovalRulePatchFilterArray) ToGetPatchBaselineApprovalRulePatchFilterArrayOutput() GetPatchBaselineApprovalRulePatchFilterArrayOutput {
	return i.ToGetPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(context.Background())
}

func (i GetPatchBaselineApprovalRulePatchFilterArray) ToGetPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRulePatchFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineApprovalRulePatchFilterArrayOutput)
}

type GetPatchBaselineApprovalRulePatchFilterOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineApprovalRulePatchFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (o GetPatchBaselineApprovalRulePatchFilterOutput) ToGetPatchBaselineApprovalRulePatchFilterOutput() GetPatchBaselineApprovalRulePatchFilterOutput {
	return o
}

func (o GetPatchBaselineApprovalRulePatchFilterOutput) ToGetPatchBaselineApprovalRulePatchFilterOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRulePatchFilterOutput {
	return o
}

// Key for the filter.
func (o GetPatchBaselineApprovalRulePatchFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselineApprovalRulePatchFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Value for the filter.
func (o GetPatchBaselineApprovalRulePatchFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPatchBaselineApprovalRulePatchFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPatchBaselineApprovalRulePatchFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineApprovalRulePatchFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineApprovalRulePatchFilter)(nil)).Elem()
}

func (o GetPatchBaselineApprovalRulePatchFilterArrayOutput) ToGetPatchBaselineApprovalRulePatchFilterArrayOutput() GetPatchBaselineApprovalRulePatchFilterArrayOutput {
	return o
}

func (o GetPatchBaselineApprovalRulePatchFilterArrayOutput) ToGetPatchBaselineApprovalRulePatchFilterArrayOutputWithContext(ctx context.Context) GetPatchBaselineApprovalRulePatchFilterArrayOutput {
	return o
}

func (o GetPatchBaselineApprovalRulePatchFilterArrayOutput) Index(i pulumi.IntInput) GetPatchBaselineApprovalRulePatchFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPatchBaselineApprovalRulePatchFilter {
		return vs[0].([]GetPatchBaselineApprovalRulePatchFilter)[vs[1].(int)]
	}).(GetPatchBaselineApprovalRulePatchFilterOutput)
}

type GetPatchBaselineGlobalFilter struct {
	// Key for the filter.
	Key string `pulumi:"key"`
	// Value for the filter.
	Values []string `pulumi:"values"`
}

// GetPatchBaselineGlobalFilterInput is an input type that accepts GetPatchBaselineGlobalFilterArgs and GetPatchBaselineGlobalFilterOutput values.
// You can construct a concrete instance of `GetPatchBaselineGlobalFilterInput` via:
//
//	GetPatchBaselineGlobalFilterArgs{...}
type GetPatchBaselineGlobalFilterInput interface {
	pulumi.Input

	ToGetPatchBaselineGlobalFilterOutput() GetPatchBaselineGlobalFilterOutput
	ToGetPatchBaselineGlobalFilterOutputWithContext(context.Context) GetPatchBaselineGlobalFilterOutput
}

type GetPatchBaselineGlobalFilterArgs struct {
	// Key for the filter.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPatchBaselineGlobalFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineGlobalFilter)(nil)).Elem()
}

func (i GetPatchBaselineGlobalFilterArgs) ToGetPatchBaselineGlobalFilterOutput() GetPatchBaselineGlobalFilterOutput {
	return i.ToGetPatchBaselineGlobalFilterOutputWithContext(context.Background())
}

func (i GetPatchBaselineGlobalFilterArgs) ToGetPatchBaselineGlobalFilterOutputWithContext(ctx context.Context) GetPatchBaselineGlobalFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineGlobalFilterOutput)
}

// GetPatchBaselineGlobalFilterArrayInput is an input type that accepts GetPatchBaselineGlobalFilterArray and GetPatchBaselineGlobalFilterArrayOutput values.
// You can construct a concrete instance of `GetPatchBaselineGlobalFilterArrayInput` via:
//
//	GetPatchBaselineGlobalFilterArray{ GetPatchBaselineGlobalFilterArgs{...} }
type GetPatchBaselineGlobalFilterArrayInput interface {
	pulumi.Input

	ToGetPatchBaselineGlobalFilterArrayOutput() GetPatchBaselineGlobalFilterArrayOutput
	ToGetPatchBaselineGlobalFilterArrayOutputWithContext(context.Context) GetPatchBaselineGlobalFilterArrayOutput
}

type GetPatchBaselineGlobalFilterArray []GetPatchBaselineGlobalFilterInput

func (GetPatchBaselineGlobalFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineGlobalFilter)(nil)).Elem()
}

func (i GetPatchBaselineGlobalFilterArray) ToGetPatchBaselineGlobalFilterArrayOutput() GetPatchBaselineGlobalFilterArrayOutput {
	return i.ToGetPatchBaselineGlobalFilterArrayOutputWithContext(context.Background())
}

func (i GetPatchBaselineGlobalFilterArray) ToGetPatchBaselineGlobalFilterArrayOutputWithContext(ctx context.Context) GetPatchBaselineGlobalFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineGlobalFilterArrayOutput)
}

type GetPatchBaselineGlobalFilterOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineGlobalFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineGlobalFilter)(nil)).Elem()
}

func (o GetPatchBaselineGlobalFilterOutput) ToGetPatchBaselineGlobalFilterOutput() GetPatchBaselineGlobalFilterOutput {
	return o
}

func (o GetPatchBaselineGlobalFilterOutput) ToGetPatchBaselineGlobalFilterOutputWithContext(ctx context.Context) GetPatchBaselineGlobalFilterOutput {
	return o
}

// Key for the filter.
func (o GetPatchBaselineGlobalFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselineGlobalFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Value for the filter.
func (o GetPatchBaselineGlobalFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPatchBaselineGlobalFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPatchBaselineGlobalFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineGlobalFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineGlobalFilter)(nil)).Elem()
}

func (o GetPatchBaselineGlobalFilterArrayOutput) ToGetPatchBaselineGlobalFilterArrayOutput() GetPatchBaselineGlobalFilterArrayOutput {
	return o
}

func (o GetPatchBaselineGlobalFilterArrayOutput) ToGetPatchBaselineGlobalFilterArrayOutputWithContext(ctx context.Context) GetPatchBaselineGlobalFilterArrayOutput {
	return o
}

func (o GetPatchBaselineGlobalFilterArrayOutput) Index(i pulumi.IntInput) GetPatchBaselineGlobalFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPatchBaselineGlobalFilter {
		return vs[0].([]GetPatchBaselineGlobalFilter)[vs[1].(int)]
	}).(GetPatchBaselineGlobalFilterOutput)
}

type GetPatchBaselineSource struct {
	// Value of the yum repo configuration.
	Configuration string `pulumi:"configuration"`
	// Name specified to identify the patch source.
	Name string `pulumi:"name"`
	// Specific operating system versions a patch repository applies to.
	Products []string `pulumi:"products"`
}

// GetPatchBaselineSourceInput is an input type that accepts GetPatchBaselineSourceArgs and GetPatchBaselineSourceOutput values.
// You can construct a concrete instance of `GetPatchBaselineSourceInput` via:
//
//	GetPatchBaselineSourceArgs{...}
type GetPatchBaselineSourceInput interface {
	pulumi.Input

	ToGetPatchBaselineSourceOutput() GetPatchBaselineSourceOutput
	ToGetPatchBaselineSourceOutputWithContext(context.Context) GetPatchBaselineSourceOutput
}

type GetPatchBaselineSourceArgs struct {
	// Value of the yum repo configuration.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// Name specified to identify the patch source.
	Name pulumi.StringInput `pulumi:"name"`
	// Specific operating system versions a patch repository applies to.
	Products pulumi.StringArrayInput `pulumi:"products"`
}

func (GetPatchBaselineSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineSource)(nil)).Elem()
}

func (i GetPatchBaselineSourceArgs) ToGetPatchBaselineSourceOutput() GetPatchBaselineSourceOutput {
	return i.ToGetPatchBaselineSourceOutputWithContext(context.Background())
}

func (i GetPatchBaselineSourceArgs) ToGetPatchBaselineSourceOutputWithContext(ctx context.Context) GetPatchBaselineSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineSourceOutput)
}

// GetPatchBaselineSourceArrayInput is an input type that accepts GetPatchBaselineSourceArray and GetPatchBaselineSourceArrayOutput values.
// You can construct a concrete instance of `GetPatchBaselineSourceArrayInput` via:
//
//	GetPatchBaselineSourceArray{ GetPatchBaselineSourceArgs{...} }
type GetPatchBaselineSourceArrayInput interface {
	pulumi.Input

	ToGetPatchBaselineSourceArrayOutput() GetPatchBaselineSourceArrayOutput
	ToGetPatchBaselineSourceArrayOutputWithContext(context.Context) GetPatchBaselineSourceArrayOutput
}

type GetPatchBaselineSourceArray []GetPatchBaselineSourceInput

func (GetPatchBaselineSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineSource)(nil)).Elem()
}

func (i GetPatchBaselineSourceArray) ToGetPatchBaselineSourceArrayOutput() GetPatchBaselineSourceArrayOutput {
	return i.ToGetPatchBaselineSourceArrayOutputWithContext(context.Background())
}

func (i GetPatchBaselineSourceArray) ToGetPatchBaselineSourceArrayOutputWithContext(ctx context.Context) GetPatchBaselineSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselineSourceArrayOutput)
}

type GetPatchBaselineSourceOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselineSource)(nil)).Elem()
}

func (o GetPatchBaselineSourceOutput) ToGetPatchBaselineSourceOutput() GetPatchBaselineSourceOutput {
	return o
}

func (o GetPatchBaselineSourceOutput) ToGetPatchBaselineSourceOutputWithContext(ctx context.Context) GetPatchBaselineSourceOutput {
	return o
}

// Value of the yum repo configuration.
func (o GetPatchBaselineSourceOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselineSource) string { return v.Configuration }).(pulumi.StringOutput)
}

// Name specified to identify the patch source.
func (o GetPatchBaselineSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselineSource) string { return v.Name }).(pulumi.StringOutput)
}

// Specific operating system versions a patch repository applies to.
func (o GetPatchBaselineSourceOutput) Products() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPatchBaselineSource) []string { return v.Products }).(pulumi.StringArrayOutput)
}

type GetPatchBaselineSourceArrayOutput struct{ *pulumi.OutputState }

func (GetPatchBaselineSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselineSource)(nil)).Elem()
}

func (o GetPatchBaselineSourceArrayOutput) ToGetPatchBaselineSourceArrayOutput() GetPatchBaselineSourceArrayOutput {
	return o
}

func (o GetPatchBaselineSourceArrayOutput) ToGetPatchBaselineSourceArrayOutputWithContext(ctx context.Context) GetPatchBaselineSourceArrayOutput {
	return o
}

func (o GetPatchBaselineSourceArrayOutput) Index(i pulumi.IntInput) GetPatchBaselineSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPatchBaselineSource {
		return vs[0].([]GetPatchBaselineSource)[vs[1].(int)]
	}).(GetPatchBaselineSourceOutput)
}

type GetPatchBaselinesBaselineIdentity struct {
	// Description of the patch baseline.
	BaselineDescription string `pulumi:"baselineDescription"`
	// ID of the patch baseline.
	BaselineId string `pulumi:"baselineId"`
	// Name of the patch baseline.
	BaselineName string `pulumi:"baselineName"`
	// Indicates whether this is the default baseline. AWS Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.
	DefaultBaseline bool `pulumi:"defaultBaseline"`
	// Operating system the patch baseline applies to.
	OperatingSystem string `pulumi:"operatingSystem"`
}

// GetPatchBaselinesBaselineIdentityInput is an input type that accepts GetPatchBaselinesBaselineIdentityArgs and GetPatchBaselinesBaselineIdentityOutput values.
// You can construct a concrete instance of `GetPatchBaselinesBaselineIdentityInput` via:
//
//	GetPatchBaselinesBaselineIdentityArgs{...}
type GetPatchBaselinesBaselineIdentityInput interface {
	pulumi.Input

	ToGetPatchBaselinesBaselineIdentityOutput() GetPatchBaselinesBaselineIdentityOutput
	ToGetPatchBaselinesBaselineIdentityOutputWithContext(context.Context) GetPatchBaselinesBaselineIdentityOutput
}

type GetPatchBaselinesBaselineIdentityArgs struct {
	// Description of the patch baseline.
	BaselineDescription pulumi.StringInput `pulumi:"baselineDescription"`
	// ID of the patch baseline.
	BaselineId pulumi.StringInput `pulumi:"baselineId"`
	// Name of the patch baseline.
	BaselineName pulumi.StringInput `pulumi:"baselineName"`
	// Indicates whether this is the default baseline. AWS Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.
	DefaultBaseline pulumi.BoolInput `pulumi:"defaultBaseline"`
	// Operating system the patch baseline applies to.
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
}

func (GetPatchBaselinesBaselineIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselinesBaselineIdentity)(nil)).Elem()
}

func (i GetPatchBaselinesBaselineIdentityArgs) ToGetPatchBaselinesBaselineIdentityOutput() GetPatchBaselinesBaselineIdentityOutput {
	return i.ToGetPatchBaselinesBaselineIdentityOutputWithContext(context.Background())
}

func (i GetPatchBaselinesBaselineIdentityArgs) ToGetPatchBaselinesBaselineIdentityOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselinesBaselineIdentityOutput)
}

// GetPatchBaselinesBaselineIdentityArrayInput is an input type that accepts GetPatchBaselinesBaselineIdentityArray and GetPatchBaselinesBaselineIdentityArrayOutput values.
// You can construct a concrete instance of `GetPatchBaselinesBaselineIdentityArrayInput` via:
//
//	GetPatchBaselinesBaselineIdentityArray{ GetPatchBaselinesBaselineIdentityArgs{...} }
type GetPatchBaselinesBaselineIdentityArrayInput interface {
	pulumi.Input

	ToGetPatchBaselinesBaselineIdentityArrayOutput() GetPatchBaselinesBaselineIdentityArrayOutput
	ToGetPatchBaselinesBaselineIdentityArrayOutputWithContext(context.Context) GetPatchBaselinesBaselineIdentityArrayOutput
}

type GetPatchBaselinesBaselineIdentityArray []GetPatchBaselinesBaselineIdentityInput

func (GetPatchBaselinesBaselineIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselinesBaselineIdentity)(nil)).Elem()
}

func (i GetPatchBaselinesBaselineIdentityArray) ToGetPatchBaselinesBaselineIdentityArrayOutput() GetPatchBaselinesBaselineIdentityArrayOutput {
	return i.ToGetPatchBaselinesBaselineIdentityArrayOutputWithContext(context.Background())
}

func (i GetPatchBaselinesBaselineIdentityArray) ToGetPatchBaselinesBaselineIdentityArrayOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselinesBaselineIdentityArrayOutput)
}

type GetPatchBaselinesBaselineIdentityOutput struct{ *pulumi.OutputState }

func (GetPatchBaselinesBaselineIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselinesBaselineIdentity)(nil)).Elem()
}

func (o GetPatchBaselinesBaselineIdentityOutput) ToGetPatchBaselinesBaselineIdentityOutput() GetPatchBaselinesBaselineIdentityOutput {
	return o
}

func (o GetPatchBaselinesBaselineIdentityOutput) ToGetPatchBaselinesBaselineIdentityOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineIdentityOutput {
	return o
}

// Description of the patch baseline.
func (o GetPatchBaselinesBaselineIdentityOutput) BaselineDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaselineIdentity) string { return v.BaselineDescription }).(pulumi.StringOutput)
}

// ID of the patch baseline.
func (o GetPatchBaselinesBaselineIdentityOutput) BaselineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaselineIdentity) string { return v.BaselineId }).(pulumi.StringOutput)
}

// Name of the patch baseline.
func (o GetPatchBaselinesBaselineIdentityOutput) BaselineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaselineIdentity) string { return v.BaselineName }).(pulumi.StringOutput)
}

// Indicates whether this is the default baseline. AWS Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.
func (o GetPatchBaselinesBaselineIdentityOutput) DefaultBaseline() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaselineIdentity) bool { return v.DefaultBaseline }).(pulumi.BoolOutput)
}

// Operating system the patch baseline applies to.
func (o GetPatchBaselinesBaselineIdentityOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesBaselineIdentity) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

type GetPatchBaselinesBaselineIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetPatchBaselinesBaselineIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselinesBaselineIdentity)(nil)).Elem()
}

func (o GetPatchBaselinesBaselineIdentityArrayOutput) ToGetPatchBaselinesBaselineIdentityArrayOutput() GetPatchBaselinesBaselineIdentityArrayOutput {
	return o
}

func (o GetPatchBaselinesBaselineIdentityArrayOutput) ToGetPatchBaselinesBaselineIdentityArrayOutputWithContext(ctx context.Context) GetPatchBaselinesBaselineIdentityArrayOutput {
	return o
}

func (o GetPatchBaselinesBaselineIdentityArrayOutput) Index(i pulumi.IntInput) GetPatchBaselinesBaselineIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPatchBaselinesBaselineIdentity {
		return vs[0].([]GetPatchBaselinesBaselineIdentity)[vs[1].(int)]
	}).(GetPatchBaselinesBaselineIdentityOutput)
}

type GetPatchBaselinesFilter struct {
	// Filter key. See the [AWS SSM documentation](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchBaselines.html) for valid values.
	Key string `pulumi:"key"`
	// Filter values. See the [AWS SSM documentation](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchBaselines.html) for example values.
	Values []string `pulumi:"values"`
}

// GetPatchBaselinesFilterInput is an input type that accepts GetPatchBaselinesFilterArgs and GetPatchBaselinesFilterOutput values.
// You can construct a concrete instance of `GetPatchBaselinesFilterInput` via:
//
//	GetPatchBaselinesFilterArgs{...}
type GetPatchBaselinesFilterInput interface {
	pulumi.Input

	ToGetPatchBaselinesFilterOutput() GetPatchBaselinesFilterOutput
	ToGetPatchBaselinesFilterOutputWithContext(context.Context) GetPatchBaselinesFilterOutput
}

type GetPatchBaselinesFilterArgs struct {
	// Filter key. See the [AWS SSM documentation](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchBaselines.html) for valid values.
	Key pulumi.StringInput `pulumi:"key"`
	// Filter values. See the [AWS SSM documentation](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchBaselines.html) for example values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPatchBaselinesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselinesFilter)(nil)).Elem()
}

func (i GetPatchBaselinesFilterArgs) ToGetPatchBaselinesFilterOutput() GetPatchBaselinesFilterOutput {
	return i.ToGetPatchBaselinesFilterOutputWithContext(context.Background())
}

func (i GetPatchBaselinesFilterArgs) ToGetPatchBaselinesFilterOutputWithContext(ctx context.Context) GetPatchBaselinesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselinesFilterOutput)
}

// GetPatchBaselinesFilterArrayInput is an input type that accepts GetPatchBaselinesFilterArray and GetPatchBaselinesFilterArrayOutput values.
// You can construct a concrete instance of `GetPatchBaselinesFilterArrayInput` via:
//
//	GetPatchBaselinesFilterArray{ GetPatchBaselinesFilterArgs{...} }
type GetPatchBaselinesFilterArrayInput interface {
	pulumi.Input

	ToGetPatchBaselinesFilterArrayOutput() GetPatchBaselinesFilterArrayOutput
	ToGetPatchBaselinesFilterArrayOutputWithContext(context.Context) GetPatchBaselinesFilterArrayOutput
}

type GetPatchBaselinesFilterArray []GetPatchBaselinesFilterInput

func (GetPatchBaselinesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselinesFilter)(nil)).Elem()
}

func (i GetPatchBaselinesFilterArray) ToGetPatchBaselinesFilterArrayOutput() GetPatchBaselinesFilterArrayOutput {
	return i.ToGetPatchBaselinesFilterArrayOutputWithContext(context.Background())
}

func (i GetPatchBaselinesFilterArray) ToGetPatchBaselinesFilterArrayOutputWithContext(ctx context.Context) GetPatchBaselinesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPatchBaselinesFilterArrayOutput)
}

type GetPatchBaselinesFilterOutput struct{ *pulumi.OutputState }

func (GetPatchBaselinesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPatchBaselinesFilter)(nil)).Elem()
}

func (o GetPatchBaselinesFilterOutput) ToGetPatchBaselinesFilterOutput() GetPatchBaselinesFilterOutput {
	return o
}

func (o GetPatchBaselinesFilterOutput) ToGetPatchBaselinesFilterOutputWithContext(ctx context.Context) GetPatchBaselinesFilterOutput {
	return o
}

// Filter key. See the [AWS SSM documentation](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchBaselines.html) for valid values.
func (o GetPatchBaselinesFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPatchBaselinesFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Filter values. See the [AWS SSM documentation](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchBaselines.html) for example values.
func (o GetPatchBaselinesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPatchBaselinesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPatchBaselinesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPatchBaselinesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPatchBaselinesFilter)(nil)).Elem()
}

func (o GetPatchBaselinesFilterArrayOutput) ToGetPatchBaselinesFilterArrayOutput() GetPatchBaselinesFilterArrayOutput {
	return o
}

func (o GetPatchBaselinesFilterArrayOutput) ToGetPatchBaselinesFilterArrayOutputWithContext(ctx context.Context) GetPatchBaselinesFilterArrayOutput {
	return o
}

func (o GetPatchBaselinesFilterArrayOutput) Index(i pulumi.IntInput) GetPatchBaselinesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPatchBaselinesFilter {
		return vs[0].([]GetPatchBaselinesFilter)[vs[1].(int)]
	}).(GetPatchBaselinesFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationOutputLocationInput)(nil)).Elem(), AssociationOutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationOutputLocationPtrInput)(nil)).Elem(), AssociationOutputLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationTargetInput)(nil)).Elem(), AssociationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssociationTargetArrayInput)(nil)).Elem(), AssociationTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceInput)(nil)).Elem(), ContactsRotationRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrencePtrInput)(nil)).Elem(), ContactsRotationRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceDailySettingInput)(nil)).Elem(), ContactsRotationRecurrenceDailySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceDailySettingArrayInput)(nil)).Elem(), ContactsRotationRecurrenceDailySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceMonthlySettingInput)(nil)).Elem(), ContactsRotationRecurrenceMonthlySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceMonthlySettingArrayInput)(nil)).Elem(), ContactsRotationRecurrenceMonthlySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceMonthlySettingHandOffTimeInput)(nil)).Elem(), ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceMonthlySettingHandOffTimePtrInput)(nil)).Elem(), ContactsRotationRecurrenceMonthlySettingHandOffTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageArrayInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageCoverageTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageCoverageTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrInput)(nil)).Elem(), ContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceWeeklySettingInput)(nil)).Elem(), ContactsRotationRecurrenceWeeklySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceWeeklySettingArrayInput)(nil)).Elem(), ContactsRotationRecurrenceWeeklySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceWeeklySettingHandOffTimeInput)(nil)).Elem(), ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsRotationRecurrenceWeeklySettingHandOffTimePtrInput)(nil)).Elem(), ContactsRotationRecurrenceWeeklySettingHandOffTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAttachmentsSourceInput)(nil)).Elem(), DocumentAttachmentsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAttachmentsSourceArrayInput)(nil)).Elem(), DocumentAttachmentsSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentParameterInput)(nil)).Elem(), DocumentParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentParameterArrayInput)(nil)).Elem(), DocumentParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTargetTargetInput)(nil)).Elem(), MaintenanceWindowTargetTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTargetTargetArrayInput)(nil)).Elem(), MaintenanceWindowTargetTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTargetInput)(nil)).Elem(), MaintenanceWindowTaskTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTargetArrayInput)(nil)).Elem(), MaintenanceWindowTaskTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersPtrInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParametersInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersAutomationParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersLambdaParametersInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersLambdaParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrInput)(nil)).Elem(), MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineApprovalRuleInput)(nil)).Elem(), PatchBaselineApprovalRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineApprovalRuleArrayInput)(nil)).Elem(), PatchBaselineApprovalRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineApprovalRulePatchFilterInput)(nil)).Elem(), PatchBaselineApprovalRulePatchFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineApprovalRulePatchFilterArrayInput)(nil)).Elem(), PatchBaselineApprovalRulePatchFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineGlobalFilterInput)(nil)).Elem(), PatchBaselineGlobalFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineGlobalFilterArrayInput)(nil)).Elem(), PatchBaselineGlobalFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineSourceInput)(nil)).Elem(), PatchBaselineSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PatchBaselineSourceArrayInput)(nil)).Elem(), PatchBaselineSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncS3DestinationInput)(nil)).Elem(), ResourceDataSyncS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceDataSyncS3DestinationPtrInput)(nil)).Elem(), ResourceDataSyncS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceInput)(nil)).Elem(), GetContactsRotationRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceDailySettingInput)(nil)).Elem(), GetContactsRotationRecurrenceDailySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceDailySettingArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceDailySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySettingInput)(nil)).Elem(), GetContactsRotationRecurrenceMonthlySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySettingArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceMonthlySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySettingHandOffTimeInput)(nil)).Elem(), GetContactsRotationRecurrenceMonthlySettingHandOffTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceMonthlySettingHandOffTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageCoverageTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageCoverageTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySettingInput)(nil)).Elem(), GetContactsRotationRecurrenceWeeklySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySettingArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceWeeklySettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySettingHandOffTimeInput)(nil)).Elem(), GetContactsRotationRecurrenceWeeklySettingHandOffTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayInput)(nil)).Elem(), GetContactsRotationRecurrenceWeeklySettingHandOffTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterInput)(nil)).Elem(), GetInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterArrayInput)(nil)).Elem(), GetInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMaintenanceWindowsFilterInput)(nil)).Elem(), GetMaintenanceWindowsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMaintenanceWindowsFilterArrayInput)(nil)).Elem(), GetMaintenanceWindowsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineApprovalRuleInput)(nil)).Elem(), GetPatchBaselineApprovalRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineApprovalRuleArrayInput)(nil)).Elem(), GetPatchBaselineApprovalRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineApprovalRulePatchFilterInput)(nil)).Elem(), GetPatchBaselineApprovalRulePatchFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineApprovalRulePatchFilterArrayInput)(nil)).Elem(), GetPatchBaselineApprovalRulePatchFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineGlobalFilterInput)(nil)).Elem(), GetPatchBaselineGlobalFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineGlobalFilterArrayInput)(nil)).Elem(), GetPatchBaselineGlobalFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineSourceInput)(nil)).Elem(), GetPatchBaselineSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselineSourceArrayInput)(nil)).Elem(), GetPatchBaselineSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselinesBaselineIdentityInput)(nil)).Elem(), GetPatchBaselinesBaselineIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselinesBaselineIdentityArrayInput)(nil)).Elem(), GetPatchBaselinesBaselineIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselinesFilterInput)(nil)).Elem(), GetPatchBaselinesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPatchBaselinesFilterArrayInput)(nil)).Elem(), GetPatchBaselinesFilterArray{})
	pulumi.RegisterOutputType(AssociationOutputLocationOutput{})
	pulumi.RegisterOutputType(AssociationOutputLocationPtrOutput{})
	pulumi.RegisterOutputType(AssociationTargetOutput{})
	pulumi.RegisterOutputType(AssociationTargetArrayOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrencePtrOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceDailySettingOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceDailySettingArrayOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceMonthlySettingOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceMonthlySettingArrayOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceMonthlySettingHandOffTimeOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceMonthlySettingHandOffTimePtrOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageArrayOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageCoverageTimeOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageCoverageTimeEndPtrOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceShiftCoverageCoverageTimeStartPtrOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceWeeklySettingOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceWeeklySettingArrayOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceWeeklySettingHandOffTimeOutput{})
	pulumi.RegisterOutputType(ContactsRotationRecurrenceWeeklySettingHandOffTimePtrOutput{})
	pulumi.RegisterOutputType(DocumentAttachmentsSourceOutput{})
	pulumi.RegisterOutputType(DocumentAttachmentsSourceArrayOutput{})
	pulumi.RegisterOutputType(DocumentParameterOutput{})
	pulumi.RegisterOutputType(DocumentParameterArrayOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTargetTargetOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTargetTargetArrayOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTargetOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTargetArrayOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameterArrayOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersLambdaParametersPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersCloudwatchConfigPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameterArrayOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParametersPtrOutput{})
	pulumi.RegisterOutputType(PatchBaselineApprovalRuleOutput{})
	pulumi.RegisterOutputType(PatchBaselineApprovalRuleArrayOutput{})
	pulumi.RegisterOutputType(PatchBaselineApprovalRulePatchFilterOutput{})
	pulumi.RegisterOutputType(PatchBaselineApprovalRulePatchFilterArrayOutput{})
	pulumi.RegisterOutputType(PatchBaselineGlobalFilterOutput{})
	pulumi.RegisterOutputType(PatchBaselineGlobalFilterArrayOutput{})
	pulumi.RegisterOutputType(PatchBaselineSourceOutput{})
	pulumi.RegisterOutputType(PatchBaselineSourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncS3DestinationOutput{})
	pulumi.RegisterOutputType(ResourceDataSyncS3DestinationPtrOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceDailySettingOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceDailySettingArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceMonthlySettingOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceMonthlySettingArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceMonthlySettingHandOffTimeOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceMonthlySettingHandOffTimeArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageCoverageTimeOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageCoverageTimeArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageCoverageTimeEndArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceShiftCoverageCoverageTimeStartArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceWeeklySettingOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceWeeklySettingArrayOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceWeeklySettingHandOffTimeOutput{})
	pulumi.RegisterOutputType(GetContactsRotationRecurrenceWeeklySettingHandOffTimeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMaintenanceWindowsFilterOutput{})
	pulumi.RegisterOutputType(GetMaintenanceWindowsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineApprovalRuleOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineApprovalRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineApprovalRulePatchFilterOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineApprovalRulePatchFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineGlobalFilterOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineGlobalFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineSourceOutput{})
	pulumi.RegisterOutputType(GetPatchBaselineSourceArrayOutput{})
	pulumi.RegisterOutputType(GetPatchBaselinesBaselineIdentityOutput{})
	pulumi.RegisterOutputType(GetPatchBaselinesBaselineIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetPatchBaselinesFilterOutput{})
	pulumi.RegisterOutputType(GetPatchBaselinesFilterArrayOutput{})
}
