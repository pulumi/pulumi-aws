// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package worklink

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type WebsiteCertificateAuthorityAssociation struct {
	pulumi.CustomResourceState

	// The root certificate of the Certificate Authority.
	Certificate pulumi.StringOutput `pulumi:"certificate"`
	// The certificate name to display.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The ARN of the fleet.
	FleetArn pulumi.StringOutput `pulumi:"fleetArn"`
	// A unique identifier for the Certificate Authority.
	WebsiteCaId pulumi.StringOutput `pulumi:"websiteCaId"`
}

// NewWebsiteCertificateAuthorityAssociation registers a new resource with the given unique name, arguments, and options.
func NewWebsiteCertificateAuthorityAssociation(ctx *pulumi.Context,
	name string, args *WebsiteCertificateAuthorityAssociationArgs, opts ...pulumi.ResourceOption) (*WebsiteCertificateAuthorityAssociation, error) {
	if args == nil || args.Certificate == nil {
		return nil, errors.New("missing required argument 'Certificate'")
	}
	if args == nil || args.FleetArn == nil {
		return nil, errors.New("missing required argument 'FleetArn'")
	}
	if args == nil {
		args = &WebsiteCertificateAuthorityAssociationArgs{}
	}
	var resource WebsiteCertificateAuthorityAssociation
	err := ctx.RegisterResource("aws:worklink/websiteCertificateAuthorityAssociation:WebsiteCertificateAuthorityAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebsiteCertificateAuthorityAssociation gets an existing WebsiteCertificateAuthorityAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebsiteCertificateAuthorityAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebsiteCertificateAuthorityAssociationState, opts ...pulumi.ResourceOption) (*WebsiteCertificateAuthorityAssociation, error) {
	var resource WebsiteCertificateAuthorityAssociation
	err := ctx.ReadResource("aws:worklink/websiteCertificateAuthorityAssociation:WebsiteCertificateAuthorityAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebsiteCertificateAuthorityAssociation resources.
type websiteCertificateAuthorityAssociationState struct {
	// The root certificate of the Certificate Authority.
	Certificate *string `pulumi:"certificate"`
	// The certificate name to display.
	DisplayName *string `pulumi:"displayName"`
	// The ARN of the fleet.
	FleetArn *string `pulumi:"fleetArn"`
	// A unique identifier for the Certificate Authority.
	WebsiteCaId *string `pulumi:"websiteCaId"`
}

type WebsiteCertificateAuthorityAssociationState struct {
	// The root certificate of the Certificate Authority.
	Certificate pulumi.StringPtrInput
	// The certificate name to display.
	DisplayName pulumi.StringPtrInput
	// The ARN of the fleet.
	FleetArn pulumi.StringPtrInput
	// A unique identifier for the Certificate Authority.
	WebsiteCaId pulumi.StringPtrInput
}

func (WebsiteCertificateAuthorityAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*websiteCertificateAuthorityAssociationState)(nil)).Elem()
}

type websiteCertificateAuthorityAssociationArgs struct {
	// The root certificate of the Certificate Authority.
	Certificate string `pulumi:"certificate"`
	// The certificate name to display.
	DisplayName *string `pulumi:"displayName"`
	// The ARN of the fleet.
	FleetArn string `pulumi:"fleetArn"`
}

// The set of arguments for constructing a WebsiteCertificateAuthorityAssociation resource.
type WebsiteCertificateAuthorityAssociationArgs struct {
	// The root certificate of the Certificate Authority.
	Certificate pulumi.StringInput
	// The certificate name to display.
	DisplayName pulumi.StringPtrInput
	// The ARN of the fleet.
	FleetArn pulumi.StringInput
}

func (WebsiteCertificateAuthorityAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*websiteCertificateAuthorityAssociationArgs)(nil)).Elem()
}
