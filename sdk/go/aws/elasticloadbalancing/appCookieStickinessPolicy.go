// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancing

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated: aws.elasticloadbalancing.AppCookieStickinessPolicy has been deprecated in favor of aws.elb.AppCookieStickinessPolicy
type AppCookieStickinessPolicy struct {
	pulumi.CustomResourceState

	CookieName   pulumi.StringOutput `pulumi:"cookieName"`
	LbPort       pulumi.IntOutput    `pulumi:"lbPort"`
	LoadBalancer pulumi.StringOutput `pulumi:"loadBalancer"`
	Name         pulumi.StringOutput `pulumi:"name"`
}

// NewAppCookieStickinessPolicy registers a new resource with the given unique name, arguments, and options.
func NewAppCookieStickinessPolicy(ctx *pulumi.Context,
	name string, args *AppCookieStickinessPolicyArgs, opts ...pulumi.ResourceOption) (*AppCookieStickinessPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CookieName == nil {
		return nil, errors.New("invalid value for required argument 'CookieName'")
	}
	if args.LbPort == nil {
		return nil, errors.New("invalid value for required argument 'LbPort'")
	}
	if args.LoadBalancer == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancer'")
	}
	var resource AppCookieStickinessPolicy
	err := ctx.RegisterResource("aws:elasticloadbalancing/appCookieStickinessPolicy:AppCookieStickinessPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppCookieStickinessPolicy gets an existing AppCookieStickinessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppCookieStickinessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppCookieStickinessPolicyState, opts ...pulumi.ResourceOption) (*AppCookieStickinessPolicy, error) {
	var resource AppCookieStickinessPolicy
	err := ctx.ReadResource("aws:elasticloadbalancing/appCookieStickinessPolicy:AppCookieStickinessPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppCookieStickinessPolicy resources.
type appCookieStickinessPolicyState struct {
	CookieName   *string `pulumi:"cookieName"`
	LbPort       *int    `pulumi:"lbPort"`
	LoadBalancer *string `pulumi:"loadBalancer"`
	Name         *string `pulumi:"name"`
}

type AppCookieStickinessPolicyState struct {
	CookieName   pulumi.StringPtrInput
	LbPort       pulumi.IntPtrInput
	LoadBalancer pulumi.StringPtrInput
	Name         pulumi.StringPtrInput
}

func (AppCookieStickinessPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*appCookieStickinessPolicyState)(nil)).Elem()
}

type appCookieStickinessPolicyArgs struct {
	CookieName   string  `pulumi:"cookieName"`
	LbPort       int     `pulumi:"lbPort"`
	LoadBalancer string  `pulumi:"loadBalancer"`
	Name         *string `pulumi:"name"`
}

// The set of arguments for constructing a AppCookieStickinessPolicy resource.
type AppCookieStickinessPolicyArgs struct {
	CookieName   pulumi.StringInput
	LbPort       pulumi.IntInput
	LoadBalancer pulumi.StringInput
	Name         pulumi.StringPtrInput
}

func (AppCookieStickinessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appCookieStickinessPolicyArgs)(nil)).Elem()
}

type AppCookieStickinessPolicyInput interface {
	pulumi.Input

	ToAppCookieStickinessPolicyOutput() AppCookieStickinessPolicyOutput
	ToAppCookieStickinessPolicyOutputWithContext(ctx context.Context) AppCookieStickinessPolicyOutput
}

func (*AppCookieStickinessPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCookieStickinessPolicy)(nil)).Elem()
}

func (i *AppCookieStickinessPolicy) ToAppCookieStickinessPolicyOutput() AppCookieStickinessPolicyOutput {
	return i.ToAppCookieStickinessPolicyOutputWithContext(context.Background())
}

func (i *AppCookieStickinessPolicy) ToAppCookieStickinessPolicyOutputWithContext(ctx context.Context) AppCookieStickinessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCookieStickinessPolicyOutput)
}

// AppCookieStickinessPolicyArrayInput is an input type that accepts AppCookieStickinessPolicyArray and AppCookieStickinessPolicyArrayOutput values.
// You can construct a concrete instance of `AppCookieStickinessPolicyArrayInput` via:
//
//	AppCookieStickinessPolicyArray{ AppCookieStickinessPolicyArgs{...} }
type AppCookieStickinessPolicyArrayInput interface {
	pulumi.Input

	ToAppCookieStickinessPolicyArrayOutput() AppCookieStickinessPolicyArrayOutput
	ToAppCookieStickinessPolicyArrayOutputWithContext(context.Context) AppCookieStickinessPolicyArrayOutput
}

type AppCookieStickinessPolicyArray []AppCookieStickinessPolicyInput

func (AppCookieStickinessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppCookieStickinessPolicy)(nil)).Elem()
}

func (i AppCookieStickinessPolicyArray) ToAppCookieStickinessPolicyArrayOutput() AppCookieStickinessPolicyArrayOutput {
	return i.ToAppCookieStickinessPolicyArrayOutputWithContext(context.Background())
}

func (i AppCookieStickinessPolicyArray) ToAppCookieStickinessPolicyArrayOutputWithContext(ctx context.Context) AppCookieStickinessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCookieStickinessPolicyArrayOutput)
}

// AppCookieStickinessPolicyMapInput is an input type that accepts AppCookieStickinessPolicyMap and AppCookieStickinessPolicyMapOutput values.
// You can construct a concrete instance of `AppCookieStickinessPolicyMapInput` via:
//
//	AppCookieStickinessPolicyMap{ "key": AppCookieStickinessPolicyArgs{...} }
type AppCookieStickinessPolicyMapInput interface {
	pulumi.Input

	ToAppCookieStickinessPolicyMapOutput() AppCookieStickinessPolicyMapOutput
	ToAppCookieStickinessPolicyMapOutputWithContext(context.Context) AppCookieStickinessPolicyMapOutput
}

type AppCookieStickinessPolicyMap map[string]AppCookieStickinessPolicyInput

func (AppCookieStickinessPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppCookieStickinessPolicy)(nil)).Elem()
}

func (i AppCookieStickinessPolicyMap) ToAppCookieStickinessPolicyMapOutput() AppCookieStickinessPolicyMapOutput {
	return i.ToAppCookieStickinessPolicyMapOutputWithContext(context.Background())
}

func (i AppCookieStickinessPolicyMap) ToAppCookieStickinessPolicyMapOutputWithContext(ctx context.Context) AppCookieStickinessPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCookieStickinessPolicyMapOutput)
}

type AppCookieStickinessPolicyOutput struct{ *pulumi.OutputState }

func (AppCookieStickinessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCookieStickinessPolicy)(nil)).Elem()
}

func (o AppCookieStickinessPolicyOutput) ToAppCookieStickinessPolicyOutput() AppCookieStickinessPolicyOutput {
	return o
}

func (o AppCookieStickinessPolicyOutput) ToAppCookieStickinessPolicyOutputWithContext(ctx context.Context) AppCookieStickinessPolicyOutput {
	return o
}

func (o AppCookieStickinessPolicyOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCookieStickinessPolicy) pulumi.StringOutput { return v.CookieName }).(pulumi.StringOutput)
}

func (o AppCookieStickinessPolicyOutput) LbPort() pulumi.IntOutput {
	return o.ApplyT(func(v *AppCookieStickinessPolicy) pulumi.IntOutput { return v.LbPort }).(pulumi.IntOutput)
}

func (o AppCookieStickinessPolicyOutput) LoadBalancer() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCookieStickinessPolicy) pulumi.StringOutput { return v.LoadBalancer }).(pulumi.StringOutput)
}

func (o AppCookieStickinessPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppCookieStickinessPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AppCookieStickinessPolicyArrayOutput struct{ *pulumi.OutputState }

func (AppCookieStickinessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppCookieStickinessPolicy)(nil)).Elem()
}

func (o AppCookieStickinessPolicyArrayOutput) ToAppCookieStickinessPolicyArrayOutput() AppCookieStickinessPolicyArrayOutput {
	return o
}

func (o AppCookieStickinessPolicyArrayOutput) ToAppCookieStickinessPolicyArrayOutputWithContext(ctx context.Context) AppCookieStickinessPolicyArrayOutput {
	return o
}

func (o AppCookieStickinessPolicyArrayOutput) Index(i pulumi.IntInput) AppCookieStickinessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppCookieStickinessPolicy {
		return vs[0].([]*AppCookieStickinessPolicy)[vs[1].(int)]
	}).(AppCookieStickinessPolicyOutput)
}

type AppCookieStickinessPolicyMapOutput struct{ *pulumi.OutputState }

func (AppCookieStickinessPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppCookieStickinessPolicy)(nil)).Elem()
}

func (o AppCookieStickinessPolicyMapOutput) ToAppCookieStickinessPolicyMapOutput() AppCookieStickinessPolicyMapOutput {
	return o
}

func (o AppCookieStickinessPolicyMapOutput) ToAppCookieStickinessPolicyMapOutputWithContext(ctx context.Context) AppCookieStickinessPolicyMapOutput {
	return o
}

func (o AppCookieStickinessPolicyMapOutput) MapIndex(k pulumi.StringInput) AppCookieStickinessPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppCookieStickinessPolicy {
		return vs[0].(map[string]*AppCookieStickinessPolicy)[vs[1].(string)]
	}).(AppCookieStickinessPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppCookieStickinessPolicyInput)(nil)).Elem(), &AppCookieStickinessPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCookieStickinessPolicyArrayInput)(nil)).Elem(), AppCookieStickinessPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppCookieStickinessPolicyMapInput)(nil)).Elem(), AppCookieStickinessPolicyMap{})
	pulumi.RegisterOutputType(AppCookieStickinessPolicyOutput{})
	pulumi.RegisterOutputType(AppCookieStickinessPolicyArrayOutput{})
	pulumi.RegisterOutputType(AppCookieStickinessPolicyMapOutput{})
}
