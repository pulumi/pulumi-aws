// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancing

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides information about a "classic" Elastic Load Balancer (ELB).
// See [LB Data Source](/docs/providers/aws/d/lb.html) if you are looking for "v2"
// Application Load Balancer (ALB) or Network Load Balancer (NLB).
// 
// This data source can prove useful when a module accepts an LB as an input
// variable and needs to, for example, determine the security groups associated
// with it, etc.
func LookupoadBalancer(ctx *pulumi.Context, args *GetLoadBalancerArgs) (*GetLoadBalancerResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("aws:elasticloadbalancing/getLoadBalancer:getLoadBalancer", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetLoadBalancerResult{}
	if v, ok := outputs["accessLogs"]; ok {
		ret.AccessLogs = v
	}
	if v, ok := outputs["availabilityZones"]; ok {
		ret.AvailabilityZones = v
	}
	if v, ok := outputs["connectionDraining"]; ok {
		ret.ConnectionDraining = v
	}
	if v, ok := outputs["connectionDrainingTimeout"]; ok {
		ret.ConnectionDrainingTimeout = v
	}
	if v, ok := outputs["crossZoneLoadBalancing"]; ok {
		ret.CrossZoneLoadBalancing = v
	}
	if v, ok := outputs["dnsName"]; ok {
		ret.DnsName = v
	}
	if v, ok := outputs["healthCheck"]; ok {
		ret.HealthCheck = v
	}
	if v, ok := outputs["idleTimeout"]; ok {
		ret.IdleTimeout = v
	}
	if v, ok := outputs["instances"]; ok {
		ret.Instances = v
	}
	if v, ok := outputs["internal"]; ok {
		ret.Internal = v
	}
	if v, ok := outputs["listeners"]; ok {
		ret.Listeners = v
	}
	if v, ok := outputs["securityGroups"]; ok {
		ret.SecurityGroups = v
	}
	if v, ok := outputs["sourceSecurityGroup"]; ok {
		ret.SourceSecurityGroup = v
	}
	if v, ok := outputs["sourceSecurityGroupId"]; ok {
		ret.SourceSecurityGroupId = v
	}
	if v, ok := outputs["subnets"]; ok {
		ret.Subnets = v
	}
	if v, ok := outputs["tags"]; ok {
		ret.Tags = v
	}
	if v, ok := outputs["zoneId"]; ok {
		ret.ZoneId = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getLoadBalancer.
type GetLoadBalancerArgs struct {
	// The unique name of the load balancer.
	Name interface{}
	Tags interface{}
}

// A collection of values returned by getLoadBalancer.
type GetLoadBalancerResult struct {
	AccessLogs interface{}
	AvailabilityZones interface{}
	ConnectionDraining interface{}
	ConnectionDrainingTimeout interface{}
	CrossZoneLoadBalancing interface{}
	DnsName interface{}
	HealthCheck interface{}
	IdleTimeout interface{}
	Instances interface{}
	Internal interface{}
	Listeners interface{}
	SecurityGroups interface{}
	SourceSecurityGroup interface{}
	SourceSecurityGroupId interface{}
	Subnets interface{}
	Tags interface{}
	ZoneId interface{}
}
