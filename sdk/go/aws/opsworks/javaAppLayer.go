// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an OpsWorks Java application layer resource.
type JavaAppLayer struct {
	pulumi.CustomResourceState
}

// NewJavaAppLayer registers a new resource with the given unique name, arguments, and options.
func NewJavaAppLayer(ctx *pulumi.Context,
	name string, args *JavaAppLayerArgs, opts ...pulumi.ResourceOption) (*JavaAppLayer, error) {
	if args == nil {
		args = &JavaAppLayerArgs{}
	}

	var resource JavaAppLayer
	err := ctx.RegisterResource("aws:opsworks/javaAppLayer:JavaAppLayer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJavaAppLayer gets an existing JavaAppLayer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJavaAppLayer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JavaAppLayerState, opts ...pulumi.ResourceOption) (*JavaAppLayer, error) {
	var resource JavaAppLayer
	err := ctx.ReadResource("aws:opsworks/javaAppLayer:JavaAppLayer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JavaAppLayer resources.
type javaAppLayerState struct {
}

type JavaAppLayerState struct {
}

func (JavaAppLayerState) ElementType() reflect.Type {
	return reflect.TypeOf((*javaAppLayerState)(nil)).Elem()
}

type javaAppLayerArgs struct {
}

// The set of arguments for constructing a JavaAppLayer resource.
type JavaAppLayerArgs struct {
}

func (JavaAppLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*javaAppLayerArgs)(nil)).Elem()
}

type JavaAppLayerInput interface {
	pulumi.Input

	ToJavaAppLayerOutput() JavaAppLayerOutput
	ToJavaAppLayerOutputWithContext(ctx context.Context) JavaAppLayerOutput
}

func (*JavaAppLayer) ElementType() reflect.Type {
	return reflect.TypeOf((**JavaAppLayer)(nil)).Elem()
}

func (i *JavaAppLayer) ToJavaAppLayerOutput() JavaAppLayerOutput {
	return i.ToJavaAppLayerOutputWithContext(context.Background())
}

func (i *JavaAppLayer) ToJavaAppLayerOutputWithContext(ctx context.Context) JavaAppLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerOutput)
}

// JavaAppLayerArrayInput is an input type that accepts JavaAppLayerArray and JavaAppLayerArrayOutput values.
// You can construct a concrete instance of `JavaAppLayerArrayInput` via:
//
//	JavaAppLayerArray{ JavaAppLayerArgs{...} }
type JavaAppLayerArrayInput interface {
	pulumi.Input

	ToJavaAppLayerArrayOutput() JavaAppLayerArrayOutput
	ToJavaAppLayerArrayOutputWithContext(context.Context) JavaAppLayerArrayOutput
}

type JavaAppLayerArray []JavaAppLayerInput

func (JavaAppLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JavaAppLayer)(nil)).Elem()
}

func (i JavaAppLayerArray) ToJavaAppLayerArrayOutput() JavaAppLayerArrayOutput {
	return i.ToJavaAppLayerArrayOutputWithContext(context.Background())
}

func (i JavaAppLayerArray) ToJavaAppLayerArrayOutputWithContext(ctx context.Context) JavaAppLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerArrayOutput)
}

// JavaAppLayerMapInput is an input type that accepts JavaAppLayerMap and JavaAppLayerMapOutput values.
// You can construct a concrete instance of `JavaAppLayerMapInput` via:
//
//	JavaAppLayerMap{ "key": JavaAppLayerArgs{...} }
type JavaAppLayerMapInput interface {
	pulumi.Input

	ToJavaAppLayerMapOutput() JavaAppLayerMapOutput
	ToJavaAppLayerMapOutputWithContext(context.Context) JavaAppLayerMapOutput
}

type JavaAppLayerMap map[string]JavaAppLayerInput

func (JavaAppLayerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JavaAppLayer)(nil)).Elem()
}

func (i JavaAppLayerMap) ToJavaAppLayerMapOutput() JavaAppLayerMapOutput {
	return i.ToJavaAppLayerMapOutputWithContext(context.Background())
}

func (i JavaAppLayerMap) ToJavaAppLayerMapOutputWithContext(ctx context.Context) JavaAppLayerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerMapOutput)
}

type JavaAppLayerOutput struct{ *pulumi.OutputState }

func (JavaAppLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JavaAppLayer)(nil)).Elem()
}

func (o JavaAppLayerOutput) ToJavaAppLayerOutput() JavaAppLayerOutput {
	return o
}

func (o JavaAppLayerOutput) ToJavaAppLayerOutputWithContext(ctx context.Context) JavaAppLayerOutput {
	return o
}

type JavaAppLayerArrayOutput struct{ *pulumi.OutputState }

func (JavaAppLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JavaAppLayer)(nil)).Elem()
}

func (o JavaAppLayerArrayOutput) ToJavaAppLayerArrayOutput() JavaAppLayerArrayOutput {
	return o
}

func (o JavaAppLayerArrayOutput) ToJavaAppLayerArrayOutputWithContext(ctx context.Context) JavaAppLayerArrayOutput {
	return o
}

func (o JavaAppLayerArrayOutput) Index(i pulumi.IntInput) JavaAppLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JavaAppLayer {
		return vs[0].([]*JavaAppLayer)[vs[1].(int)]
	}).(JavaAppLayerOutput)
}

type JavaAppLayerMapOutput struct{ *pulumi.OutputState }

func (JavaAppLayerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JavaAppLayer)(nil)).Elem()
}

func (o JavaAppLayerMapOutput) ToJavaAppLayerMapOutput() JavaAppLayerMapOutput {
	return o
}

func (o JavaAppLayerMapOutput) ToJavaAppLayerMapOutputWithContext(ctx context.Context) JavaAppLayerMapOutput {
	return o
}

func (o JavaAppLayerMapOutput) MapIndex(k pulumi.StringInput) JavaAppLayerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JavaAppLayer {
		return vs[0].(map[string]*JavaAppLayer)[vs[1].(string)]
	}).(JavaAppLayerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerInput)(nil)).Elem(), &JavaAppLayer{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerArrayInput)(nil)).Elem(), JavaAppLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerMapInput)(nil)).Elem(), JavaAppLayerMap{})
	pulumi.RegisterOutputType(JavaAppLayerOutput{})
	pulumi.RegisterOutputType(JavaAppLayerArrayOutput{})
	pulumi.RegisterOutputType(JavaAppLayerMapOutput{})
}
