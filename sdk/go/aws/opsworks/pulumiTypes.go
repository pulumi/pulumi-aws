// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationAppSource struct {
	// Password to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	Password *string `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision *string `pulumi:"revision"`
	// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	SshKey *string `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type string `pulumi:"type"`
	// The URL where the app resource can be found.
	Url *string `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username *string `pulumi:"username"`
}

// ApplicationAppSourceInput is an input type that accepts ApplicationAppSourceArgs and ApplicationAppSourceOutput values.
// You can construct a concrete instance of `ApplicationAppSourceInput` via:
//
//	ApplicationAppSourceArgs{...}
type ApplicationAppSourceInput interface {
	pulumi.Input

	ToApplicationAppSourceOutput() ApplicationAppSourceOutput
	ToApplicationAppSourceOutputWithContext(context.Context) ApplicationAppSourceOutput
}

type ApplicationAppSourceArgs struct {
	// Password to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type pulumi.StringInput `pulumi:"type"`
	// The URL where the app resource can be found.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplicationAppSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return i.ToApplicationAppSourceOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceOutput)
}

// ApplicationAppSourceArrayInput is an input type that accepts ApplicationAppSourceArray and ApplicationAppSourceArrayOutput values.
// You can construct a concrete instance of `ApplicationAppSourceArrayInput` via:
//
//	ApplicationAppSourceArray{ ApplicationAppSourceArgs{...} }
type ApplicationAppSourceArrayInput interface {
	pulumi.Input

	ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput
	ToApplicationAppSourceArrayOutputWithContext(context.Context) ApplicationAppSourceArrayOutput
}

type ApplicationAppSourceArray []ApplicationAppSourceInput

func (ApplicationAppSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return i.ToApplicationAppSourceArrayOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceArrayOutput)
}

type ApplicationAppSourceOutput struct{ *pulumi.OutputState }

func (ApplicationAppSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return o
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return o
}

// Password to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
func (o ApplicationAppSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// For sources that are version-aware, the revision to use.
func (o ApplicationAppSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
func (o ApplicationAppSourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The type of source to use. For example, "archive".
func (o ApplicationAppSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAppSource) string { return v.Type }).(pulumi.StringOutput)
}

// The URL where the app resource can be found.
func (o ApplicationAppSourceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Username to use when authenticating to the source.
func (o ApplicationAppSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplicationAppSourceArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAppSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) Index(i pulumi.IntInput) ApplicationAppSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAppSource {
		return vs[0].([]ApplicationAppSource)[vs[1].(int)]
	}).(ApplicationAppSourceOutput)
}

type ApplicationEnvironment struct {
	// Variable name.
	Key string `pulumi:"key"`
	// Set visibility of the variable value to `true` or `false`.
	Secure *bool `pulumi:"secure"`
	// Variable value.
	Value string `pulumi:"value"`
}

// ApplicationEnvironmentInput is an input type that accepts ApplicationEnvironmentArgs and ApplicationEnvironmentOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentInput` via:
//
//	ApplicationEnvironmentArgs{...}
type ApplicationEnvironmentInput interface {
	pulumi.Input

	ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput
	ToApplicationEnvironmentOutputWithContext(context.Context) ApplicationEnvironmentOutput
}

type ApplicationEnvironmentArgs struct {
	// Variable name.
	Key pulumi.StringInput `pulumi:"key"`
	// Set visibility of the variable value to `true` or `false`.
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Variable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return i.ToApplicationEnvironmentOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentOutput)
}

// ApplicationEnvironmentArrayInput is an input type that accepts ApplicationEnvironmentArray and ApplicationEnvironmentArrayOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentArrayInput` via:
//
//	ApplicationEnvironmentArray{ ApplicationEnvironmentArgs{...} }
type ApplicationEnvironmentArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput
	ToApplicationEnvironmentArrayOutputWithContext(context.Context) ApplicationEnvironmentArrayOutput
}

type ApplicationEnvironmentArray []ApplicationEnvironmentInput

func (ApplicationEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return i.ToApplicationEnvironmentArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentArrayOutput)
}

type ApplicationEnvironmentOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return o
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return o
}

// Variable name.
func (o ApplicationEnvironmentOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironment) string { return v.Key }).(pulumi.StringOutput)
}

// Set visibility of the variable value to `true` or `false`.
func (o ApplicationEnvironmentOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationEnvironment) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Variable value.
func (o ApplicationEnvironmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironment) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationEnvironment {
		return vs[0].([]ApplicationEnvironment)[vs[1].(int)]
	}).(ApplicationEnvironmentOutput)
}

type ApplicationSslConfiguration struct {
	// The contents of the certificate's domain.crt file.
	Certificate string `pulumi:"certificate"`
	// Can be used to specify an intermediate certificate authority key or client authentication.
	Chain *string `pulumi:"chain"`
	// The private key; the contents of the certificate's domain.key file.
	PrivateKey string `pulumi:"privateKey"`
}

// ApplicationSslConfigurationInput is an input type that accepts ApplicationSslConfigurationArgs and ApplicationSslConfigurationOutput values.
// You can construct a concrete instance of `ApplicationSslConfigurationInput` via:
//
//	ApplicationSslConfigurationArgs{...}
type ApplicationSslConfigurationInput interface {
	pulumi.Input

	ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput
	ToApplicationSslConfigurationOutputWithContext(context.Context) ApplicationSslConfigurationOutput
}

type ApplicationSslConfigurationArgs struct {
	// The contents of the certificate's domain.crt file.
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// Can be used to specify an intermediate certificate authority key or client authentication.
	Chain pulumi.StringPtrInput `pulumi:"chain"`
	// The private key; the contents of the certificate's domain.key file.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (ApplicationSslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return i.ToApplicationSslConfigurationOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationOutput)
}

// ApplicationSslConfigurationArrayInput is an input type that accepts ApplicationSslConfigurationArray and ApplicationSslConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationSslConfigurationArrayInput` via:
//
//	ApplicationSslConfigurationArray{ ApplicationSslConfigurationArgs{...} }
type ApplicationSslConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput
	ToApplicationSslConfigurationArrayOutputWithContext(context.Context) ApplicationSslConfigurationArrayOutput
}

type ApplicationSslConfigurationArray []ApplicationSslConfigurationInput

func (ApplicationSslConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return i.ToApplicationSslConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationArrayOutput)
}

type ApplicationSslConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationSslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return o
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return o
}

// The contents of the certificate's domain.crt file.
func (o ApplicationSslConfigurationOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSslConfiguration) string { return v.Certificate }).(pulumi.StringOutput)
}

// Can be used to specify an intermediate certificate authority key or client authentication.
func (o ApplicationSslConfigurationOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSslConfiguration) *string { return v.Chain }).(pulumi.StringPtrOutput)
}

// The private key; the contents of the certificate's domain.key file.
func (o ApplicationSslConfigurationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSslConfiguration) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type ApplicationSslConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSslConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationSslConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSslConfiguration {
		return vs[0].([]ApplicationSslConfiguration)[vs[1].(int)]
	}).(ApplicationSslConfigurationOutput)
}

type InstanceEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Iops                *int    `pulumi:"iops"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// InstanceEbsBlockDeviceInput is an input type that accepts InstanceEbsBlockDeviceArgs and InstanceEbsBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceInput` via:
//
//	InstanceEbsBlockDeviceArgs{...}
type InstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput
	ToInstanceEbsBlockDeviceOutputWithContext(context.Context) InstanceEbsBlockDeviceOutput
}

type InstanceEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return i.ToInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceOutput)
}

// InstanceEbsBlockDeviceArrayInput is an input type that accepts InstanceEbsBlockDeviceArray and InstanceEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceArrayInput` via:
//
//	InstanceEbsBlockDeviceArray{ InstanceEbsBlockDeviceArgs{...} }
type InstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput
	ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceArrayOutput
}

type InstanceEbsBlockDeviceArray []InstanceEbsBlockDeviceInput

func (InstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return i.ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArrayOutput)
}

type InstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o InstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEbsBlockDevice {
		return vs[0].([]InstanceEbsBlockDevice)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceOutput)
}

type InstanceEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

// InstanceEphemeralBlockDeviceInput is an input type that accepts InstanceEphemeralBlockDeviceArgs and InstanceEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceInput` via:
//
//	InstanceEphemeralBlockDeviceArgs{...}
type InstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput
	ToInstanceEphemeralBlockDeviceOutputWithContext(context.Context) InstanceEphemeralBlockDeviceOutput
}

type InstanceEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return i.ToInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceOutput)
}

// InstanceEphemeralBlockDeviceArrayInput is an input type that accepts InstanceEphemeralBlockDeviceArray and InstanceEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceArrayInput` via:
//
//	InstanceEphemeralBlockDeviceArray{ InstanceEphemeralBlockDeviceArgs{...} }
type InstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput
	ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArrayOutput
}

type InstanceEphemeralBlockDeviceArray []InstanceEphemeralBlockDeviceInput

func (InstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArrayOutput)
}

type InstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o InstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type InstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEphemeralBlockDevice {
		return vs[0].([]InstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Iops                *int    `pulumi:"iops"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// InstanceRootBlockDeviceInput is an input type that accepts InstanceRootBlockDeviceArgs and InstanceRootBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceRootBlockDeviceInput` via:
//
//	InstanceRootBlockDeviceArgs{...}
type InstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput
	ToInstanceRootBlockDeviceOutputWithContext(context.Context) InstanceRootBlockDeviceOutput
}

type InstanceRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

// InstanceRootBlockDeviceArrayInput is an input type that accepts InstanceRootBlockDeviceArray and InstanceRootBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceRootBlockDeviceArrayInput` via:
//
//	InstanceRootBlockDeviceArray{ InstanceRootBlockDeviceArgs{...} }
type InstanceRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput
	ToInstanceRootBlockDeviceArrayOutputWithContext(context.Context) InstanceRootBlockDeviceArrayOutput
}

type InstanceRootBlockDeviceArray []InstanceRootBlockDeviceInput

func (InstanceRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArray) ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput {
	return i.ToInstanceRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArray) ToInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceArrayOutput)
}

type InstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceArrayOutput) ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput {
	return o
}

func (o InstanceRootBlockDeviceArrayOutput) ToInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArrayOutput {
	return o
}

func (o InstanceRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceRootBlockDevice {
		return vs[0].([]InstanceRootBlockDevice)[vs[1].(int)]
	}).(InstanceRootBlockDeviceOutput)
}

type StackCustomCookbooksSource struct {
	// Password to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
	Password *string `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision *string `pulumi:"revision"`
	// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	SshKey *string `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type string `pulumi:"type"`
	// The URL where the cookbooks resource can be found.
	Url string `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username *string `pulumi:"username"`
}

// StackCustomCookbooksSourceInput is an input type that accepts StackCustomCookbooksSourceArgs and StackCustomCookbooksSourceOutput values.
// You can construct a concrete instance of `StackCustomCookbooksSourceInput` via:
//
//	StackCustomCookbooksSourceArgs{...}
type StackCustomCookbooksSourceInput interface {
	pulumi.Input

	ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput
	ToStackCustomCookbooksSourceOutputWithContext(context.Context) StackCustomCookbooksSourceOutput
}

type StackCustomCookbooksSourceArgs struct {
	// Password to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type pulumi.StringInput `pulumi:"type"`
	// The URL where the cookbooks resource can be found.
	Url pulumi.StringInput `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (StackCustomCookbooksSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackCustomCookbooksSource)(nil)).Elem()
}

func (i StackCustomCookbooksSourceArgs) ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput {
	return i.ToStackCustomCookbooksSourceOutputWithContext(context.Background())
}

func (i StackCustomCookbooksSourceArgs) ToStackCustomCookbooksSourceOutputWithContext(ctx context.Context) StackCustomCookbooksSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackCustomCookbooksSourceOutput)
}

// StackCustomCookbooksSourceArrayInput is an input type that accepts StackCustomCookbooksSourceArray and StackCustomCookbooksSourceArrayOutput values.
// You can construct a concrete instance of `StackCustomCookbooksSourceArrayInput` via:
//
//	StackCustomCookbooksSourceArray{ StackCustomCookbooksSourceArgs{...} }
type StackCustomCookbooksSourceArrayInput interface {
	pulumi.Input

	ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput
	ToStackCustomCookbooksSourceArrayOutputWithContext(context.Context) StackCustomCookbooksSourceArrayOutput
}

type StackCustomCookbooksSourceArray []StackCustomCookbooksSourceInput

func (StackCustomCookbooksSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackCustomCookbooksSource)(nil)).Elem()
}

func (i StackCustomCookbooksSourceArray) ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput {
	return i.ToStackCustomCookbooksSourceArrayOutputWithContext(context.Background())
}

func (i StackCustomCookbooksSourceArray) ToStackCustomCookbooksSourceArrayOutputWithContext(ctx context.Context) StackCustomCookbooksSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackCustomCookbooksSourceArrayOutput)
}

type StackCustomCookbooksSourceOutput struct{ *pulumi.OutputState }

func (StackCustomCookbooksSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackCustomCookbooksSource)(nil)).Elem()
}

func (o StackCustomCookbooksSourceOutput) ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput {
	return o
}

func (o StackCustomCookbooksSourceOutput) ToStackCustomCookbooksSourceOutputWithContext(ctx context.Context) StackCustomCookbooksSourceOutput {
	return o
}

// Password to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
func (o StackCustomCookbooksSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// For sources that are version-aware, the revision to use.
func (o StackCustomCookbooksSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
func (o StackCustomCookbooksSourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The type of source to use. For example, "archive".
func (o StackCustomCookbooksSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) string { return v.Type }).(pulumi.StringOutput)
}

// The URL where the cookbooks resource can be found.
func (o StackCustomCookbooksSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) string { return v.Url }).(pulumi.StringOutput)
}

// Username to use when authenticating to the source.
func (o StackCustomCookbooksSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type StackCustomCookbooksSourceArrayOutput struct{ *pulumi.OutputState }

func (StackCustomCookbooksSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackCustomCookbooksSource)(nil)).Elem()
}

func (o StackCustomCookbooksSourceArrayOutput) ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput {
	return o
}

func (o StackCustomCookbooksSourceArrayOutput) ToStackCustomCookbooksSourceArrayOutputWithContext(ctx context.Context) StackCustomCookbooksSourceArrayOutput {
	return o
}

func (o StackCustomCookbooksSourceArrayOutput) Index(i pulumi.IntInput) StackCustomCookbooksSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackCustomCookbooksSource {
		return vs[0].([]StackCustomCookbooksSource)[vs[1].(int)]
	}).(StackCustomCookbooksSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAppSourceInput)(nil)).Elem(), ApplicationAppSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAppSourceArrayInput)(nil)).Elem(), ApplicationAppSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentInput)(nil)).Elem(), ApplicationEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentArrayInput)(nil)).Elem(), ApplicationEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSslConfigurationInput)(nil)).Elem(), ApplicationSslConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSslConfigurationArrayInput)(nil)).Elem(), ApplicationSslConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEbsBlockDeviceInput)(nil)).Elem(), InstanceEbsBlockDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEbsBlockDeviceArrayInput)(nil)).Elem(), InstanceEbsBlockDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEphemeralBlockDeviceInput)(nil)).Elem(), InstanceEphemeralBlockDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEphemeralBlockDeviceArrayInput)(nil)).Elem(), InstanceEphemeralBlockDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRootBlockDeviceInput)(nil)).Elem(), InstanceRootBlockDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRootBlockDeviceArrayInput)(nil)).Elem(), InstanceRootBlockDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackCustomCookbooksSourceInput)(nil)).Elem(), StackCustomCookbooksSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackCustomCookbooksSourceArrayInput)(nil)).Elem(), StackCustomCookbooksSourceArray{})
	pulumi.RegisterOutputType(ApplicationAppSourceOutput{})
	pulumi.RegisterOutputType(ApplicationAppSourceArrayOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSslConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationSslConfigurationArrayOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(StackCustomCookbooksSourceOutput{})
	pulumi.RegisterOutputType(StackCustomCookbooksSourceArrayOutput{})
}
