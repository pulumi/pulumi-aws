// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationAppSource struct {
	// Password to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	Password *string `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision *string `pulumi:"revision"`
	// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	SshKey *string `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type string `pulumi:"type"`
	// The URL where the app resource can be found.
	Url *string `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username *string `pulumi:"username"`
}

// ApplicationAppSourceInput is an input type that accepts ApplicationAppSourceArgs and ApplicationAppSourceOutput values.
// You can construct a concrete instance of `ApplicationAppSourceInput` via:
//
//          ApplicationAppSourceArgs{...}
type ApplicationAppSourceInput interface {
	pulumi.Input

	ToApplicationAppSourceOutput() ApplicationAppSourceOutput
	ToApplicationAppSourceOutputWithContext(context.Context) ApplicationAppSourceOutput
}

type ApplicationAppSourceArgs struct {
	// Password to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type pulumi.StringInput `pulumi:"type"`
	// The URL where the app resource can be found.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplicationAppSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return i.ToApplicationAppSourceOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceOutput)
}

// ApplicationAppSourceArrayInput is an input type that accepts ApplicationAppSourceArray and ApplicationAppSourceArrayOutput values.
// You can construct a concrete instance of `ApplicationAppSourceArrayInput` via:
//
//          ApplicationAppSourceArray{ ApplicationAppSourceArgs{...} }
type ApplicationAppSourceArrayInput interface {
	pulumi.Input

	ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput
	ToApplicationAppSourceArrayOutputWithContext(context.Context) ApplicationAppSourceArrayOutput
}

type ApplicationAppSourceArray []ApplicationAppSourceInput

func (ApplicationAppSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return i.ToApplicationAppSourceArrayOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceArrayOutput)
}

type ApplicationAppSourceOutput struct{ *pulumi.OutputState }

func (ApplicationAppSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return o
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return o
}

// Password to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
func (o ApplicationAppSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// For sources that are version-aware, the revision to use.
func (o ApplicationAppSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// SSH key to use when authenticating to the source. This provider cannot perform drift detection of this configuration.
func (o ApplicationAppSourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The type of source to use. For example, "archive".
func (o ApplicationAppSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationAppSource) string { return v.Type }).(pulumi.StringOutput)
}

// The URL where the app resource can be found.
func (o ApplicationAppSourceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Username to use when authenticating to the source.
func (o ApplicationAppSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationAppSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplicationAppSourceArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAppSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) Index(i pulumi.IntInput) ApplicationAppSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationAppSource {
		return vs[0].([]ApplicationAppSource)[vs[1].(int)]
	}).(ApplicationAppSourceOutput)
}

type ApplicationEnvironment struct {
	// Variable name.
	Key string `pulumi:"key"`
	// Set visibility of the variable value to `true` or `false`.
	Secure *bool `pulumi:"secure"`
	// Variable value.
	Value string `pulumi:"value"`
}

// ApplicationEnvironmentInput is an input type that accepts ApplicationEnvironmentArgs and ApplicationEnvironmentOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentInput` via:
//
//          ApplicationEnvironmentArgs{...}
type ApplicationEnvironmentInput interface {
	pulumi.Input

	ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput
	ToApplicationEnvironmentOutputWithContext(context.Context) ApplicationEnvironmentOutput
}

type ApplicationEnvironmentArgs struct {
	// Variable name.
	Key pulumi.StringInput `pulumi:"key"`
	// Set visibility of the variable value to `true` or `false`.
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Variable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return i.ToApplicationEnvironmentOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentOutput)
}

// ApplicationEnvironmentArrayInput is an input type that accepts ApplicationEnvironmentArray and ApplicationEnvironmentArrayOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentArrayInput` via:
//
//          ApplicationEnvironmentArray{ ApplicationEnvironmentArgs{...} }
type ApplicationEnvironmentArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput
	ToApplicationEnvironmentArrayOutputWithContext(context.Context) ApplicationEnvironmentArrayOutput
}

type ApplicationEnvironmentArray []ApplicationEnvironmentInput

func (ApplicationEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return i.ToApplicationEnvironmentArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentArrayOutput)
}

type ApplicationEnvironmentOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return o
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return o
}

// Variable name.
func (o ApplicationEnvironmentOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironment) string { return v.Key }).(pulumi.StringOutput)
}

// Set visibility of the variable value to `true` or `false`.
func (o ApplicationEnvironmentOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationEnvironment) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Variable value.
func (o ApplicationEnvironmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironment) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationEnvironment {
		return vs[0].([]ApplicationEnvironment)[vs[1].(int)]
	}).(ApplicationEnvironmentOutput)
}

type ApplicationSslConfiguration struct {
	// The contents of the certificate's domain.crt file.
	Certificate string `pulumi:"certificate"`
	// Can be used to specify an intermediate certificate authority key or client authentication.
	Chain *string `pulumi:"chain"`
	// The private key; the contents of the certificate's domain.key file.
	PrivateKey string `pulumi:"privateKey"`
}

// ApplicationSslConfigurationInput is an input type that accepts ApplicationSslConfigurationArgs and ApplicationSslConfigurationOutput values.
// You can construct a concrete instance of `ApplicationSslConfigurationInput` via:
//
//          ApplicationSslConfigurationArgs{...}
type ApplicationSslConfigurationInput interface {
	pulumi.Input

	ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput
	ToApplicationSslConfigurationOutputWithContext(context.Context) ApplicationSslConfigurationOutput
}

type ApplicationSslConfigurationArgs struct {
	// The contents of the certificate's domain.crt file.
	Certificate pulumi.StringInput `pulumi:"certificate"`
	// Can be used to specify an intermediate certificate authority key or client authentication.
	Chain pulumi.StringPtrInput `pulumi:"chain"`
	// The private key; the contents of the certificate's domain.key file.
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (ApplicationSslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return i.ToApplicationSslConfigurationOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationOutput)
}

// ApplicationSslConfigurationArrayInput is an input type that accepts ApplicationSslConfigurationArray and ApplicationSslConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationSslConfigurationArrayInput` via:
//
//          ApplicationSslConfigurationArray{ ApplicationSslConfigurationArgs{...} }
type ApplicationSslConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput
	ToApplicationSslConfigurationArrayOutputWithContext(context.Context) ApplicationSslConfigurationArrayOutput
}

type ApplicationSslConfigurationArray []ApplicationSslConfigurationInput

func (ApplicationSslConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return i.ToApplicationSslConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationArrayOutput)
}

type ApplicationSslConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationSslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return o
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return o
}

// The contents of the certificate's domain.crt file.
func (o ApplicationSslConfigurationOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSslConfiguration) string { return v.Certificate }).(pulumi.StringOutput)
}

// Can be used to specify an intermediate certificate authority key or client authentication.
func (o ApplicationSslConfigurationOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSslConfiguration) *string { return v.Chain }).(pulumi.StringPtrOutput)
}

// The private key; the contents of the certificate's domain.key file.
func (o ApplicationSslConfigurationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSslConfiguration) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type ApplicationSslConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSslConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationSslConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSslConfiguration {
		return vs[0].([]ApplicationSslConfiguration)[vs[1].(int)]
	}).(ApplicationSslConfigurationOutput)
}

type CustomLayerCloudwatchConfiguration struct {
	Enabled *bool `pulumi:"enabled"`
	// A block the specifies how an opsworks logs look like. See Log Streams.
	LogStreams []CustomLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// CustomLayerCloudwatchConfigurationInput is an input type that accepts CustomLayerCloudwatchConfigurationArgs and CustomLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `CustomLayerCloudwatchConfigurationInput` via:
//
//          CustomLayerCloudwatchConfigurationArgs{...}
type CustomLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToCustomLayerCloudwatchConfigurationOutput() CustomLayerCloudwatchConfigurationOutput
	ToCustomLayerCloudwatchConfigurationOutputWithContext(context.Context) CustomLayerCloudwatchConfigurationOutput
}

type CustomLayerCloudwatchConfigurationArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A block the specifies how an opsworks logs look like. See Log Streams.
	LogStreams CustomLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (CustomLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i CustomLayerCloudwatchConfigurationArgs) ToCustomLayerCloudwatchConfigurationOutput() CustomLayerCloudwatchConfigurationOutput {
	return i.ToCustomLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i CustomLayerCloudwatchConfigurationArgs) ToCustomLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerCloudwatchConfigurationOutput)
}

func (i CustomLayerCloudwatchConfigurationArgs) ToCustomLayerCloudwatchConfigurationPtrOutput() CustomLayerCloudwatchConfigurationPtrOutput {
	return i.ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i CustomLayerCloudwatchConfigurationArgs) ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerCloudwatchConfigurationOutput).ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// CustomLayerCloudwatchConfigurationPtrInput is an input type that accepts CustomLayerCloudwatchConfigurationArgs, CustomLayerCloudwatchConfigurationPtr and CustomLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `CustomLayerCloudwatchConfigurationPtrInput` via:
//
//          CustomLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type CustomLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToCustomLayerCloudwatchConfigurationPtrOutput() CustomLayerCloudwatchConfigurationPtrOutput
	ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) CustomLayerCloudwatchConfigurationPtrOutput
}

type customLayerCloudwatchConfigurationPtrType CustomLayerCloudwatchConfigurationArgs

func CustomLayerCloudwatchConfigurationPtr(v *CustomLayerCloudwatchConfigurationArgs) CustomLayerCloudwatchConfigurationPtrInput {
	return (*customLayerCloudwatchConfigurationPtrType)(v)
}

func (*customLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *customLayerCloudwatchConfigurationPtrType) ToCustomLayerCloudwatchConfigurationPtrOutput() CustomLayerCloudwatchConfigurationPtrOutput {
	return i.ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *customLayerCloudwatchConfigurationPtrType) ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerCloudwatchConfigurationPtrOutput)
}

type CustomLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (CustomLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o CustomLayerCloudwatchConfigurationOutput) ToCustomLayerCloudwatchConfigurationOutput() CustomLayerCloudwatchConfigurationOutput {
	return o
}

func (o CustomLayerCloudwatchConfigurationOutput) ToCustomLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationOutput {
	return o
}

func (o CustomLayerCloudwatchConfigurationOutput) ToCustomLayerCloudwatchConfigurationPtrOutput() CustomLayerCloudwatchConfigurationPtrOutput {
	return o.ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o CustomLayerCloudwatchConfigurationOutput) ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomLayerCloudwatchConfiguration) *CustomLayerCloudwatchConfiguration {
		return &v
	}).(CustomLayerCloudwatchConfigurationPtrOutput)
}

func (o CustomLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A block the specifies how an opsworks logs look like. See Log Streams.
func (o CustomLayerCloudwatchConfigurationOutput) LogStreams() CustomLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfiguration) []CustomLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(CustomLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type CustomLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CustomLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o CustomLayerCloudwatchConfigurationPtrOutput) ToCustomLayerCloudwatchConfigurationPtrOutput() CustomLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o CustomLayerCloudwatchConfigurationPtrOutput) ToCustomLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o CustomLayerCloudwatchConfigurationPtrOutput) Elem() CustomLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *CustomLayerCloudwatchConfiguration) CustomLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret CustomLayerCloudwatchConfiguration
		return ret
	}).(CustomLayerCloudwatchConfigurationOutput)
}

func (o CustomLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A block the specifies how an opsworks logs look like. See Log Streams.
func (o CustomLayerCloudwatchConfigurationPtrOutput) LogStreams() CustomLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *CustomLayerCloudwatchConfiguration) []CustomLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(CustomLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type CustomLayerCloudwatchConfigurationLogStream struct {
	// Specifies the max number of log events in a batch, up to `10000`. The default value is `1000`.
	BatchCount *int `pulumi:"batchCount"`
	// Specifies the maximum size of log events in a batch, in bytes, up to `1048576` bytes. The default value is `32768` bytes.
	BatchSize *int `pulumi:"batchSize"`
	// Specifies the time duration for the batching of log events. The minimum value is `5000` and default value is `5000`.
	BufferDuration *int `pulumi:"bufferDuration"`
	// Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).
	DatetimeFormat *string `pulumi:"datetimeFormat"`
	// Specifies the encoding of the log file so that the file can be read correctly. The default is `utf8`.
	Encoding *string `pulumi:"encoding"`
	// Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).
	File string `pulumi:"file"`
	// Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as `1`, `2-5`. The default value is `1`.
	FileFingerprintLines *string `pulumi:"fileFingerprintLines"`
	// Specifies where to start to read data (`startOfFile` or `endOfFile`). The default is `startOfFile`.
	InitialPosition *string `pulumi:"initialPosition"`
	// Specifies the destination log group. A log group is created automatically if it doesn't already exist.
	LogGroupName string `pulumi:"logGroupName"`
	// Specifies the pattern for identifying the start of a log message.
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	// Specifies the time zone of log event time stamps.
	TimeZone *string `pulumi:"timeZone"`
}

// CustomLayerCloudwatchConfigurationLogStreamInput is an input type that accepts CustomLayerCloudwatchConfigurationLogStreamArgs and CustomLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `CustomLayerCloudwatchConfigurationLogStreamInput` via:
//
//          CustomLayerCloudwatchConfigurationLogStreamArgs{...}
type CustomLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToCustomLayerCloudwatchConfigurationLogStreamOutput() CustomLayerCloudwatchConfigurationLogStreamOutput
	ToCustomLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) CustomLayerCloudwatchConfigurationLogStreamOutput
}

type CustomLayerCloudwatchConfigurationLogStreamArgs struct {
	// Specifies the max number of log events in a batch, up to `10000`. The default value is `1000`.
	BatchCount pulumi.IntPtrInput `pulumi:"batchCount"`
	// Specifies the maximum size of log events in a batch, in bytes, up to `1048576` bytes. The default value is `32768` bytes.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// Specifies the time duration for the batching of log events. The minimum value is `5000` and default value is `5000`.
	BufferDuration pulumi.IntPtrInput `pulumi:"bufferDuration"`
	// Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).
	DatetimeFormat pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	// Specifies the encoding of the log file so that the file can be read correctly. The default is `utf8`.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).
	File pulumi.StringInput `pulumi:"file"`
	// Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as `1`, `2-5`. The default value is `1`.
	FileFingerprintLines pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	// Specifies where to start to read data (`startOfFile` or `endOfFile`). The default is `startOfFile`.
	InitialPosition pulumi.StringPtrInput `pulumi:"initialPosition"`
	// Specifies the destination log group. A log group is created automatically if it doesn't already exist.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	// Specifies the pattern for identifying the start of a log message.
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	// Specifies the time zone of log event time stamps.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (CustomLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i CustomLayerCloudwatchConfigurationLogStreamArgs) ToCustomLayerCloudwatchConfigurationLogStreamOutput() CustomLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToCustomLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i CustomLayerCloudwatchConfigurationLogStreamArgs) ToCustomLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerCloudwatchConfigurationLogStreamOutput)
}

// CustomLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts CustomLayerCloudwatchConfigurationLogStreamArray and CustomLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `CustomLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          CustomLayerCloudwatchConfigurationLogStreamArray{ CustomLayerCloudwatchConfigurationLogStreamArgs{...} }
type CustomLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToCustomLayerCloudwatchConfigurationLogStreamArrayOutput() CustomLayerCloudwatchConfigurationLogStreamArrayOutput
	ToCustomLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) CustomLayerCloudwatchConfigurationLogStreamArrayOutput
}

type CustomLayerCloudwatchConfigurationLogStreamArray []CustomLayerCloudwatchConfigurationLogStreamInput

func (CustomLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i CustomLayerCloudwatchConfigurationLogStreamArray) ToCustomLayerCloudwatchConfigurationLogStreamArrayOutput() CustomLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToCustomLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i CustomLayerCloudwatchConfigurationLogStreamArray) ToCustomLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type CustomLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (CustomLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o CustomLayerCloudwatchConfigurationLogStreamOutput) ToCustomLayerCloudwatchConfigurationLogStreamOutput() CustomLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o CustomLayerCloudwatchConfigurationLogStreamOutput) ToCustomLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

// Specifies the max number of log events in a batch, up to `10000`. The default value is `1000`.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

// Specifies the maximum size of log events in a batch, in bytes, up to `1048576` bytes. The default value is `32768` bytes.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// Specifies the time duration for the batching of log events. The minimum value is `5000` and default value is `5000`.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

// Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

// Specifies the encoding of the log file so that the file can be read correctly. The default is `utf8`.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

// Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as `1`, `2-5`. The default value is `1`.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

// Specifies where to start to read data (`startOfFile` or `endOfFile`). The default is `startOfFile`.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

// Specifies the destination log group. A log group is created automatically if it doesn't already exist.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

// Specifies the pattern for identifying the start of a log message.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

// Specifies the time zone of log event time stamps.
func (o CustomLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type CustomLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (CustomLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o CustomLayerCloudwatchConfigurationLogStreamArrayOutput) ToCustomLayerCloudwatchConfigurationLogStreamArrayOutput() CustomLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o CustomLayerCloudwatchConfigurationLogStreamArrayOutput) ToCustomLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) CustomLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o CustomLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) CustomLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomLayerCloudwatchConfigurationLogStream {
		return vs[0].([]CustomLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(CustomLayerCloudwatchConfigurationLogStreamOutput)
}

type CustomLayerEbsVolume struct {
	// Encrypt the volume.
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// CustomLayerEbsVolumeInput is an input type that accepts CustomLayerEbsVolumeArgs and CustomLayerEbsVolumeOutput values.
// You can construct a concrete instance of `CustomLayerEbsVolumeInput` via:
//
//          CustomLayerEbsVolumeArgs{...}
type CustomLayerEbsVolumeInput interface {
	pulumi.Input

	ToCustomLayerEbsVolumeOutput() CustomLayerEbsVolumeOutput
	ToCustomLayerEbsVolumeOutputWithContext(context.Context) CustomLayerEbsVolumeOutput
}

type CustomLayerEbsVolumeArgs struct {
	// Encrypt the volume.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerEbsVolume)(nil)).Elem()
}

func (i CustomLayerEbsVolumeArgs) ToCustomLayerEbsVolumeOutput() CustomLayerEbsVolumeOutput {
	return i.ToCustomLayerEbsVolumeOutputWithContext(context.Background())
}

func (i CustomLayerEbsVolumeArgs) ToCustomLayerEbsVolumeOutputWithContext(ctx context.Context) CustomLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerEbsVolumeOutput)
}

// CustomLayerEbsVolumeArrayInput is an input type that accepts CustomLayerEbsVolumeArray and CustomLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `CustomLayerEbsVolumeArrayInput` via:
//
//          CustomLayerEbsVolumeArray{ CustomLayerEbsVolumeArgs{...} }
type CustomLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToCustomLayerEbsVolumeArrayOutput() CustomLayerEbsVolumeArrayOutput
	ToCustomLayerEbsVolumeArrayOutputWithContext(context.Context) CustomLayerEbsVolumeArrayOutput
}

type CustomLayerEbsVolumeArray []CustomLayerEbsVolumeInput

func (CustomLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLayerEbsVolume)(nil)).Elem()
}

func (i CustomLayerEbsVolumeArray) ToCustomLayerEbsVolumeArrayOutput() CustomLayerEbsVolumeArrayOutput {
	return i.ToCustomLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i CustomLayerEbsVolumeArray) ToCustomLayerEbsVolumeArrayOutputWithContext(ctx context.Context) CustomLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerEbsVolumeArrayOutput)
}

type CustomLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (CustomLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerEbsVolume)(nil)).Elem()
}

func (o CustomLayerEbsVolumeOutput) ToCustomLayerEbsVolumeOutput() CustomLayerEbsVolumeOutput {
	return o
}

func (o CustomLayerEbsVolumeOutput) ToCustomLayerEbsVolumeOutputWithContext(ctx context.Context) CustomLayerEbsVolumeOutput {
	return o
}

// Encrypt the volume.
func (o CustomLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o CustomLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o CustomLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o CustomLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v CustomLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o CustomLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o CustomLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v CustomLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o CustomLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (CustomLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLayerEbsVolume)(nil)).Elem()
}

func (o CustomLayerEbsVolumeArrayOutput) ToCustomLayerEbsVolumeArrayOutput() CustomLayerEbsVolumeArrayOutput {
	return o
}

func (o CustomLayerEbsVolumeArrayOutput) ToCustomLayerEbsVolumeArrayOutputWithContext(ctx context.Context) CustomLayerEbsVolumeArrayOutput {
	return o
}

func (o CustomLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) CustomLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomLayerEbsVolume {
		return vs[0].([]CustomLayerEbsVolume)[vs[1].(int)]
	}).(CustomLayerEbsVolumeOutput)
}

type EcsClusterLayerCloudwatchConfiguration struct {
	Enabled    *bool                                             `pulumi:"enabled"`
	LogStreams []EcsClusterLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// EcsClusterLayerCloudwatchConfigurationInput is an input type that accepts EcsClusterLayerCloudwatchConfigurationArgs and EcsClusterLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `EcsClusterLayerCloudwatchConfigurationInput` via:
//
//          EcsClusterLayerCloudwatchConfigurationArgs{...}
type EcsClusterLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToEcsClusterLayerCloudwatchConfigurationOutput() EcsClusterLayerCloudwatchConfigurationOutput
	ToEcsClusterLayerCloudwatchConfigurationOutputWithContext(context.Context) EcsClusterLayerCloudwatchConfigurationOutput
}

type EcsClusterLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                       `pulumi:"enabled"`
	LogStreams EcsClusterLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (EcsClusterLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsClusterLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i EcsClusterLayerCloudwatchConfigurationArgs) ToEcsClusterLayerCloudwatchConfigurationOutput() EcsClusterLayerCloudwatchConfigurationOutput {
	return i.ToEcsClusterLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i EcsClusterLayerCloudwatchConfigurationArgs) ToEcsClusterLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerCloudwatchConfigurationOutput)
}

func (i EcsClusterLayerCloudwatchConfigurationArgs) ToEcsClusterLayerCloudwatchConfigurationPtrOutput() EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return i.ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i EcsClusterLayerCloudwatchConfigurationArgs) ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerCloudwatchConfigurationOutput).ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// EcsClusterLayerCloudwatchConfigurationPtrInput is an input type that accepts EcsClusterLayerCloudwatchConfigurationArgs, EcsClusterLayerCloudwatchConfigurationPtr and EcsClusterLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `EcsClusterLayerCloudwatchConfigurationPtrInput` via:
//
//          EcsClusterLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type EcsClusterLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToEcsClusterLayerCloudwatchConfigurationPtrOutput() EcsClusterLayerCloudwatchConfigurationPtrOutput
	ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) EcsClusterLayerCloudwatchConfigurationPtrOutput
}

type ecsClusterLayerCloudwatchConfigurationPtrType EcsClusterLayerCloudwatchConfigurationArgs

func EcsClusterLayerCloudwatchConfigurationPtr(v *EcsClusterLayerCloudwatchConfigurationArgs) EcsClusterLayerCloudwatchConfigurationPtrInput {
	return (*ecsClusterLayerCloudwatchConfigurationPtrType)(v)
}

func (*ecsClusterLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsClusterLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *ecsClusterLayerCloudwatchConfigurationPtrType) ToEcsClusterLayerCloudwatchConfigurationPtrOutput() EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return i.ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *ecsClusterLayerCloudwatchConfigurationPtrType) ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerCloudwatchConfigurationPtrOutput)
}

type EcsClusterLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsClusterLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o EcsClusterLayerCloudwatchConfigurationOutput) ToEcsClusterLayerCloudwatchConfigurationOutput() EcsClusterLayerCloudwatchConfigurationOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationOutput) ToEcsClusterLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationOutput) ToEcsClusterLayerCloudwatchConfigurationPtrOutput() EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return o.ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o EcsClusterLayerCloudwatchConfigurationOutput) ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EcsClusterLayerCloudwatchConfiguration) *EcsClusterLayerCloudwatchConfiguration {
		return &v
	}).(EcsClusterLayerCloudwatchConfigurationPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationOutput) LogStreams() EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfiguration) []EcsClusterLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type EcsClusterLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsClusterLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o EcsClusterLayerCloudwatchConfigurationPtrOutput) ToEcsClusterLayerCloudwatchConfigurationPtrOutput() EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationPtrOutput) ToEcsClusterLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationPtrOutput) Elem() EcsClusterLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *EcsClusterLayerCloudwatchConfiguration) EcsClusterLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret EcsClusterLayerCloudwatchConfiguration
		return ret
	}).(EcsClusterLayerCloudwatchConfigurationOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationPtrOutput) LogStreams() EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayerCloudwatchConfiguration) []EcsClusterLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type EcsClusterLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// EcsClusterLayerCloudwatchConfigurationLogStreamInput is an input type that accepts EcsClusterLayerCloudwatchConfigurationLogStreamArgs and EcsClusterLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `EcsClusterLayerCloudwatchConfigurationLogStreamInput` via:
//
//          EcsClusterLayerCloudwatchConfigurationLogStreamArgs{...}
type EcsClusterLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToEcsClusterLayerCloudwatchConfigurationLogStreamOutput() EcsClusterLayerCloudwatchConfigurationLogStreamOutput
	ToEcsClusterLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) EcsClusterLayerCloudwatchConfigurationLogStreamOutput
}

type EcsClusterLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (EcsClusterLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsClusterLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i EcsClusterLayerCloudwatchConfigurationLogStreamArgs) ToEcsClusterLayerCloudwatchConfigurationLogStreamOutput() EcsClusterLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToEcsClusterLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i EcsClusterLayerCloudwatchConfigurationLogStreamArgs) ToEcsClusterLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerCloudwatchConfigurationLogStreamOutput)
}

// EcsClusterLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts EcsClusterLayerCloudwatchConfigurationLogStreamArray and EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `EcsClusterLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          EcsClusterLayerCloudwatchConfigurationLogStreamArray{ EcsClusterLayerCloudwatchConfigurationLogStreamArgs{...} }
type EcsClusterLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToEcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput() EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput
	ToEcsClusterLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput
}

type EcsClusterLayerCloudwatchConfigurationLogStreamArray []EcsClusterLayerCloudwatchConfigurationLogStreamInput

func (EcsClusterLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcsClusterLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i EcsClusterLayerCloudwatchConfigurationLogStreamArray) ToEcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput() EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToEcsClusterLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i EcsClusterLayerCloudwatchConfigurationLogStreamArray) ToEcsClusterLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type EcsClusterLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsClusterLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) ToEcsClusterLayerCloudwatchConfigurationLogStreamOutput() EcsClusterLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) ToEcsClusterLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcsClusterLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput) ToEcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput() EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput) ToEcsClusterLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) EcsClusterLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EcsClusterLayerCloudwatchConfigurationLogStream {
		return vs[0].([]EcsClusterLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(EcsClusterLayerCloudwatchConfigurationLogStreamOutput)
}

type EcsClusterLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// EcsClusterLayerEbsVolumeInput is an input type that accepts EcsClusterLayerEbsVolumeArgs and EcsClusterLayerEbsVolumeOutput values.
// You can construct a concrete instance of `EcsClusterLayerEbsVolumeInput` via:
//
//          EcsClusterLayerEbsVolumeArgs{...}
type EcsClusterLayerEbsVolumeInput interface {
	pulumi.Input

	ToEcsClusterLayerEbsVolumeOutput() EcsClusterLayerEbsVolumeOutput
	ToEcsClusterLayerEbsVolumeOutputWithContext(context.Context) EcsClusterLayerEbsVolumeOutput
}

type EcsClusterLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EcsClusterLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsClusterLayerEbsVolume)(nil)).Elem()
}

func (i EcsClusterLayerEbsVolumeArgs) ToEcsClusterLayerEbsVolumeOutput() EcsClusterLayerEbsVolumeOutput {
	return i.ToEcsClusterLayerEbsVolumeOutputWithContext(context.Background())
}

func (i EcsClusterLayerEbsVolumeArgs) ToEcsClusterLayerEbsVolumeOutputWithContext(ctx context.Context) EcsClusterLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerEbsVolumeOutput)
}

// EcsClusterLayerEbsVolumeArrayInput is an input type that accepts EcsClusterLayerEbsVolumeArray and EcsClusterLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `EcsClusterLayerEbsVolumeArrayInput` via:
//
//          EcsClusterLayerEbsVolumeArray{ EcsClusterLayerEbsVolumeArgs{...} }
type EcsClusterLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToEcsClusterLayerEbsVolumeArrayOutput() EcsClusterLayerEbsVolumeArrayOutput
	ToEcsClusterLayerEbsVolumeArrayOutputWithContext(context.Context) EcsClusterLayerEbsVolumeArrayOutput
}

type EcsClusterLayerEbsVolumeArray []EcsClusterLayerEbsVolumeInput

func (EcsClusterLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcsClusterLayerEbsVolume)(nil)).Elem()
}

func (i EcsClusterLayerEbsVolumeArray) ToEcsClusterLayerEbsVolumeArrayOutput() EcsClusterLayerEbsVolumeArrayOutput {
	return i.ToEcsClusterLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i EcsClusterLayerEbsVolumeArray) ToEcsClusterLayerEbsVolumeArrayOutputWithContext(ctx context.Context) EcsClusterLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerEbsVolumeArrayOutput)
}

type EcsClusterLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcsClusterLayerEbsVolume)(nil)).Elem()
}

func (o EcsClusterLayerEbsVolumeOutput) ToEcsClusterLayerEbsVolumeOutput() EcsClusterLayerEbsVolumeOutput {
	return o
}

func (o EcsClusterLayerEbsVolumeOutput) ToEcsClusterLayerEbsVolumeOutputWithContext(ctx context.Context) EcsClusterLayerEbsVolumeOutput {
	return o
}

func (o EcsClusterLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o EcsClusterLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o EcsClusterLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v EcsClusterLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o EcsClusterLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v EcsClusterLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o EcsClusterLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o EcsClusterLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v EcsClusterLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o EcsClusterLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcsClusterLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EcsClusterLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcsClusterLayerEbsVolume)(nil)).Elem()
}

func (o EcsClusterLayerEbsVolumeArrayOutput) ToEcsClusterLayerEbsVolumeArrayOutput() EcsClusterLayerEbsVolumeArrayOutput {
	return o
}

func (o EcsClusterLayerEbsVolumeArrayOutput) ToEcsClusterLayerEbsVolumeArrayOutputWithContext(ctx context.Context) EcsClusterLayerEbsVolumeArrayOutput {
	return o
}

func (o EcsClusterLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) EcsClusterLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EcsClusterLayerEbsVolume {
		return vs[0].([]EcsClusterLayerEbsVolume)[vs[1].(int)]
	}).(EcsClusterLayerEbsVolumeOutput)
}

type GangliaLayerCloudwatchConfiguration struct {
	Enabled    *bool                                          `pulumi:"enabled"`
	LogStreams []GangliaLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// GangliaLayerCloudwatchConfigurationInput is an input type that accepts GangliaLayerCloudwatchConfigurationArgs and GangliaLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `GangliaLayerCloudwatchConfigurationInput` via:
//
//          GangliaLayerCloudwatchConfigurationArgs{...}
type GangliaLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToGangliaLayerCloudwatchConfigurationOutput() GangliaLayerCloudwatchConfigurationOutput
	ToGangliaLayerCloudwatchConfigurationOutputWithContext(context.Context) GangliaLayerCloudwatchConfigurationOutput
}

type GangliaLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                    `pulumi:"enabled"`
	LogStreams GangliaLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (GangliaLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i GangliaLayerCloudwatchConfigurationArgs) ToGangliaLayerCloudwatchConfigurationOutput() GangliaLayerCloudwatchConfigurationOutput {
	return i.ToGangliaLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i GangliaLayerCloudwatchConfigurationArgs) ToGangliaLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerCloudwatchConfigurationOutput)
}

func (i GangliaLayerCloudwatchConfigurationArgs) ToGangliaLayerCloudwatchConfigurationPtrOutput() GangliaLayerCloudwatchConfigurationPtrOutput {
	return i.ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i GangliaLayerCloudwatchConfigurationArgs) ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerCloudwatchConfigurationOutput).ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// GangliaLayerCloudwatchConfigurationPtrInput is an input type that accepts GangliaLayerCloudwatchConfigurationArgs, GangliaLayerCloudwatchConfigurationPtr and GangliaLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `GangliaLayerCloudwatchConfigurationPtrInput` via:
//
//          GangliaLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type GangliaLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToGangliaLayerCloudwatchConfigurationPtrOutput() GangliaLayerCloudwatchConfigurationPtrOutput
	ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) GangliaLayerCloudwatchConfigurationPtrOutput
}

type gangliaLayerCloudwatchConfigurationPtrType GangliaLayerCloudwatchConfigurationArgs

func GangliaLayerCloudwatchConfigurationPtr(v *GangliaLayerCloudwatchConfigurationArgs) GangliaLayerCloudwatchConfigurationPtrInput {
	return (*gangliaLayerCloudwatchConfigurationPtrType)(v)
}

func (*gangliaLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GangliaLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *gangliaLayerCloudwatchConfigurationPtrType) ToGangliaLayerCloudwatchConfigurationPtrOutput() GangliaLayerCloudwatchConfigurationPtrOutput {
	return i.ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *gangliaLayerCloudwatchConfigurationPtrType) ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerCloudwatchConfigurationPtrOutput)
}

type GangliaLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (GangliaLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o GangliaLayerCloudwatchConfigurationOutput) ToGangliaLayerCloudwatchConfigurationOutput() GangliaLayerCloudwatchConfigurationOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationOutput) ToGangliaLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationOutput) ToGangliaLayerCloudwatchConfigurationPtrOutput() GangliaLayerCloudwatchConfigurationPtrOutput {
	return o.ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o GangliaLayerCloudwatchConfigurationOutput) ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GangliaLayerCloudwatchConfiguration) *GangliaLayerCloudwatchConfiguration {
		return &v
	}).(GangliaLayerCloudwatchConfigurationPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationOutput) LogStreams() GangliaLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfiguration) []GangliaLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(GangliaLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type GangliaLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GangliaLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GangliaLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o GangliaLayerCloudwatchConfigurationPtrOutput) ToGangliaLayerCloudwatchConfigurationPtrOutput() GangliaLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationPtrOutput) ToGangliaLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationPtrOutput) Elem() GangliaLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *GangliaLayerCloudwatchConfiguration) GangliaLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret GangliaLayerCloudwatchConfiguration
		return ret
	}).(GangliaLayerCloudwatchConfigurationOutput)
}

func (o GangliaLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GangliaLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationPtrOutput) LogStreams() GangliaLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *GangliaLayerCloudwatchConfiguration) []GangliaLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(GangliaLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type GangliaLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// GangliaLayerCloudwatchConfigurationLogStreamInput is an input type that accepts GangliaLayerCloudwatchConfigurationLogStreamArgs and GangliaLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `GangliaLayerCloudwatchConfigurationLogStreamInput` via:
//
//          GangliaLayerCloudwatchConfigurationLogStreamArgs{...}
type GangliaLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToGangliaLayerCloudwatchConfigurationLogStreamOutput() GangliaLayerCloudwatchConfigurationLogStreamOutput
	ToGangliaLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) GangliaLayerCloudwatchConfigurationLogStreamOutput
}

type GangliaLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (GangliaLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i GangliaLayerCloudwatchConfigurationLogStreamArgs) ToGangliaLayerCloudwatchConfigurationLogStreamOutput() GangliaLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToGangliaLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i GangliaLayerCloudwatchConfigurationLogStreamArgs) ToGangliaLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerCloudwatchConfigurationLogStreamOutput)
}

// GangliaLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts GangliaLayerCloudwatchConfigurationLogStreamArray and GangliaLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `GangliaLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          GangliaLayerCloudwatchConfigurationLogStreamArray{ GangliaLayerCloudwatchConfigurationLogStreamArgs{...} }
type GangliaLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToGangliaLayerCloudwatchConfigurationLogStreamArrayOutput() GangliaLayerCloudwatchConfigurationLogStreamArrayOutput
	ToGangliaLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) GangliaLayerCloudwatchConfigurationLogStreamArrayOutput
}

type GangliaLayerCloudwatchConfigurationLogStreamArray []GangliaLayerCloudwatchConfigurationLogStreamInput

func (GangliaLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i GangliaLayerCloudwatchConfigurationLogStreamArray) ToGangliaLayerCloudwatchConfigurationLogStreamArrayOutput() GangliaLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToGangliaLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i GangliaLayerCloudwatchConfigurationLogStreamArray) ToGangliaLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type GangliaLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (GangliaLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) ToGangliaLayerCloudwatchConfigurationLogStreamOutput() GangliaLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) ToGangliaLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o GangliaLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type GangliaLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (GangliaLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o GangliaLayerCloudwatchConfigurationLogStreamArrayOutput) ToGangliaLayerCloudwatchConfigurationLogStreamArrayOutput() GangliaLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationLogStreamArrayOutput) ToGangliaLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) GangliaLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o GangliaLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) GangliaLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GangliaLayerCloudwatchConfigurationLogStream {
		return vs[0].([]GangliaLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(GangliaLayerCloudwatchConfigurationLogStreamOutput)
}

type GangliaLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// GangliaLayerEbsVolumeInput is an input type that accepts GangliaLayerEbsVolumeArgs and GangliaLayerEbsVolumeOutput values.
// You can construct a concrete instance of `GangliaLayerEbsVolumeInput` via:
//
//          GangliaLayerEbsVolumeArgs{...}
type GangliaLayerEbsVolumeInput interface {
	pulumi.Input

	ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput
	ToGangliaLayerEbsVolumeOutputWithContext(context.Context) GangliaLayerEbsVolumeOutput
}

type GangliaLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GangliaLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerEbsVolume)(nil)).Elem()
}

func (i GangliaLayerEbsVolumeArgs) ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput {
	return i.ToGangliaLayerEbsVolumeOutputWithContext(context.Background())
}

func (i GangliaLayerEbsVolumeArgs) ToGangliaLayerEbsVolumeOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerEbsVolumeOutput)
}

// GangliaLayerEbsVolumeArrayInput is an input type that accepts GangliaLayerEbsVolumeArray and GangliaLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `GangliaLayerEbsVolumeArrayInput` via:
//
//          GangliaLayerEbsVolumeArray{ GangliaLayerEbsVolumeArgs{...} }
type GangliaLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput
	ToGangliaLayerEbsVolumeArrayOutputWithContext(context.Context) GangliaLayerEbsVolumeArrayOutput
}

type GangliaLayerEbsVolumeArray []GangliaLayerEbsVolumeInput

func (GangliaLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerEbsVolume)(nil)).Elem()
}

func (i GangliaLayerEbsVolumeArray) ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput {
	return i.ToGangliaLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i GangliaLayerEbsVolumeArray) ToGangliaLayerEbsVolumeArrayOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerEbsVolumeArrayOutput)
}

type GangliaLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (GangliaLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerEbsVolume)(nil)).Elem()
}

func (o GangliaLayerEbsVolumeOutput) ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput {
	return o
}

func (o GangliaLayerEbsVolumeOutput) ToGangliaLayerEbsVolumeOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeOutput {
	return o
}

func (o GangliaLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GangliaLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o GangliaLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GangliaLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o GangliaLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GangliaLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o GangliaLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v GangliaLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o GangliaLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o GangliaLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GangliaLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o GangliaLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GangliaLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GangliaLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (GangliaLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerEbsVolume)(nil)).Elem()
}

func (o GangliaLayerEbsVolumeArrayOutput) ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput {
	return o
}

func (o GangliaLayerEbsVolumeArrayOutput) ToGangliaLayerEbsVolumeArrayOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeArrayOutput {
	return o
}

func (o GangliaLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) GangliaLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GangliaLayerEbsVolume {
		return vs[0].([]GangliaLayerEbsVolume)[vs[1].(int)]
	}).(GangliaLayerEbsVolumeOutput)
}

type HaproxyLayerCloudwatchConfiguration struct {
	Enabled    *bool                                          `pulumi:"enabled"`
	LogStreams []HaproxyLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// HaproxyLayerCloudwatchConfigurationInput is an input type that accepts HaproxyLayerCloudwatchConfigurationArgs and HaproxyLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `HaproxyLayerCloudwatchConfigurationInput` via:
//
//          HaproxyLayerCloudwatchConfigurationArgs{...}
type HaproxyLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToHaproxyLayerCloudwatchConfigurationOutput() HaproxyLayerCloudwatchConfigurationOutput
	ToHaproxyLayerCloudwatchConfigurationOutputWithContext(context.Context) HaproxyLayerCloudwatchConfigurationOutput
}

type HaproxyLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                    `pulumi:"enabled"`
	LogStreams HaproxyLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (HaproxyLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i HaproxyLayerCloudwatchConfigurationArgs) ToHaproxyLayerCloudwatchConfigurationOutput() HaproxyLayerCloudwatchConfigurationOutput {
	return i.ToHaproxyLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i HaproxyLayerCloudwatchConfigurationArgs) ToHaproxyLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerCloudwatchConfigurationOutput)
}

func (i HaproxyLayerCloudwatchConfigurationArgs) ToHaproxyLayerCloudwatchConfigurationPtrOutput() HaproxyLayerCloudwatchConfigurationPtrOutput {
	return i.ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i HaproxyLayerCloudwatchConfigurationArgs) ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerCloudwatchConfigurationOutput).ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// HaproxyLayerCloudwatchConfigurationPtrInput is an input type that accepts HaproxyLayerCloudwatchConfigurationArgs, HaproxyLayerCloudwatchConfigurationPtr and HaproxyLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `HaproxyLayerCloudwatchConfigurationPtrInput` via:
//
//          HaproxyLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type HaproxyLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToHaproxyLayerCloudwatchConfigurationPtrOutput() HaproxyLayerCloudwatchConfigurationPtrOutput
	ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) HaproxyLayerCloudwatchConfigurationPtrOutput
}

type haproxyLayerCloudwatchConfigurationPtrType HaproxyLayerCloudwatchConfigurationArgs

func HaproxyLayerCloudwatchConfigurationPtr(v *HaproxyLayerCloudwatchConfigurationArgs) HaproxyLayerCloudwatchConfigurationPtrInput {
	return (*haproxyLayerCloudwatchConfigurationPtrType)(v)
}

func (*haproxyLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HaproxyLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *haproxyLayerCloudwatchConfigurationPtrType) ToHaproxyLayerCloudwatchConfigurationPtrOutput() HaproxyLayerCloudwatchConfigurationPtrOutput {
	return i.ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *haproxyLayerCloudwatchConfigurationPtrType) ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerCloudwatchConfigurationPtrOutput)
}

type HaproxyLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (HaproxyLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o HaproxyLayerCloudwatchConfigurationOutput) ToHaproxyLayerCloudwatchConfigurationOutput() HaproxyLayerCloudwatchConfigurationOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationOutput) ToHaproxyLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationOutput) ToHaproxyLayerCloudwatchConfigurationPtrOutput() HaproxyLayerCloudwatchConfigurationPtrOutput {
	return o.ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o HaproxyLayerCloudwatchConfigurationOutput) ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HaproxyLayerCloudwatchConfiguration) *HaproxyLayerCloudwatchConfiguration {
		return &v
	}).(HaproxyLayerCloudwatchConfigurationPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationOutput) LogStreams() HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfiguration) []HaproxyLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type HaproxyLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (HaproxyLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HaproxyLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o HaproxyLayerCloudwatchConfigurationPtrOutput) ToHaproxyLayerCloudwatchConfigurationPtrOutput() HaproxyLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationPtrOutput) ToHaproxyLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationPtrOutput) Elem() HaproxyLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *HaproxyLayerCloudwatchConfiguration) HaproxyLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret HaproxyLayerCloudwatchConfiguration
		return ret
	}).(HaproxyLayerCloudwatchConfigurationOutput)
}

func (o HaproxyLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HaproxyLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationPtrOutput) LogStreams() HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *HaproxyLayerCloudwatchConfiguration) []HaproxyLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type HaproxyLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// HaproxyLayerCloudwatchConfigurationLogStreamInput is an input type that accepts HaproxyLayerCloudwatchConfigurationLogStreamArgs and HaproxyLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `HaproxyLayerCloudwatchConfigurationLogStreamInput` via:
//
//          HaproxyLayerCloudwatchConfigurationLogStreamArgs{...}
type HaproxyLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToHaproxyLayerCloudwatchConfigurationLogStreamOutput() HaproxyLayerCloudwatchConfigurationLogStreamOutput
	ToHaproxyLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) HaproxyLayerCloudwatchConfigurationLogStreamOutput
}

type HaproxyLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (HaproxyLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i HaproxyLayerCloudwatchConfigurationLogStreamArgs) ToHaproxyLayerCloudwatchConfigurationLogStreamOutput() HaproxyLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToHaproxyLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i HaproxyLayerCloudwatchConfigurationLogStreamArgs) ToHaproxyLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerCloudwatchConfigurationLogStreamOutput)
}

// HaproxyLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts HaproxyLayerCloudwatchConfigurationLogStreamArray and HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `HaproxyLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          HaproxyLayerCloudwatchConfigurationLogStreamArray{ HaproxyLayerCloudwatchConfigurationLogStreamArgs{...} }
type HaproxyLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToHaproxyLayerCloudwatchConfigurationLogStreamArrayOutput() HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput
	ToHaproxyLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput
}

type HaproxyLayerCloudwatchConfigurationLogStreamArray []HaproxyLayerCloudwatchConfigurationLogStreamInput

func (HaproxyLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaproxyLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i HaproxyLayerCloudwatchConfigurationLogStreamArray) ToHaproxyLayerCloudwatchConfigurationLogStreamArrayOutput() HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToHaproxyLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i HaproxyLayerCloudwatchConfigurationLogStreamArray) ToHaproxyLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type HaproxyLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (HaproxyLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) ToHaproxyLayerCloudwatchConfigurationLogStreamOutput() HaproxyLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) ToHaproxyLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaproxyLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput) ToHaproxyLayerCloudwatchConfigurationLogStreamArrayOutput() HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput) ToHaproxyLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) HaproxyLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaproxyLayerCloudwatchConfigurationLogStream {
		return vs[0].([]HaproxyLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(HaproxyLayerCloudwatchConfigurationLogStreamOutput)
}

type HaproxyLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// HaproxyLayerEbsVolumeInput is an input type that accepts HaproxyLayerEbsVolumeArgs and HaproxyLayerEbsVolumeOutput values.
// You can construct a concrete instance of `HaproxyLayerEbsVolumeInput` via:
//
//          HaproxyLayerEbsVolumeArgs{...}
type HaproxyLayerEbsVolumeInput interface {
	pulumi.Input

	ToHaproxyLayerEbsVolumeOutput() HaproxyLayerEbsVolumeOutput
	ToHaproxyLayerEbsVolumeOutputWithContext(context.Context) HaproxyLayerEbsVolumeOutput
}

type HaproxyLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HaproxyLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerEbsVolume)(nil)).Elem()
}

func (i HaproxyLayerEbsVolumeArgs) ToHaproxyLayerEbsVolumeOutput() HaproxyLayerEbsVolumeOutput {
	return i.ToHaproxyLayerEbsVolumeOutputWithContext(context.Background())
}

func (i HaproxyLayerEbsVolumeArgs) ToHaproxyLayerEbsVolumeOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerEbsVolumeOutput)
}

// HaproxyLayerEbsVolumeArrayInput is an input type that accepts HaproxyLayerEbsVolumeArray and HaproxyLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `HaproxyLayerEbsVolumeArrayInput` via:
//
//          HaproxyLayerEbsVolumeArray{ HaproxyLayerEbsVolumeArgs{...} }
type HaproxyLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToHaproxyLayerEbsVolumeArrayOutput() HaproxyLayerEbsVolumeArrayOutput
	ToHaproxyLayerEbsVolumeArrayOutputWithContext(context.Context) HaproxyLayerEbsVolumeArrayOutput
}

type HaproxyLayerEbsVolumeArray []HaproxyLayerEbsVolumeInput

func (HaproxyLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaproxyLayerEbsVolume)(nil)).Elem()
}

func (i HaproxyLayerEbsVolumeArray) ToHaproxyLayerEbsVolumeArrayOutput() HaproxyLayerEbsVolumeArrayOutput {
	return i.ToHaproxyLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i HaproxyLayerEbsVolumeArray) ToHaproxyLayerEbsVolumeArrayOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerEbsVolumeArrayOutput)
}

type HaproxyLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (HaproxyLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerEbsVolume)(nil)).Elem()
}

func (o HaproxyLayerEbsVolumeOutput) ToHaproxyLayerEbsVolumeOutput() HaproxyLayerEbsVolumeOutput {
	return o
}

func (o HaproxyLayerEbsVolumeOutput) ToHaproxyLayerEbsVolumeOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeOutput {
	return o
}

func (o HaproxyLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HaproxyLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o HaproxyLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HaproxyLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o HaproxyLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v HaproxyLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o HaproxyLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v HaproxyLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o HaproxyLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o HaproxyLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v HaproxyLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o HaproxyLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HaproxyLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HaproxyLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (HaproxyLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaproxyLayerEbsVolume)(nil)).Elem()
}

func (o HaproxyLayerEbsVolumeArrayOutput) ToHaproxyLayerEbsVolumeArrayOutput() HaproxyLayerEbsVolumeArrayOutput {
	return o
}

func (o HaproxyLayerEbsVolumeArrayOutput) ToHaproxyLayerEbsVolumeArrayOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeArrayOutput {
	return o
}

func (o HaproxyLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) HaproxyLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaproxyLayerEbsVolume {
		return vs[0].([]HaproxyLayerEbsVolume)[vs[1].(int)]
	}).(HaproxyLayerEbsVolumeOutput)
}

type InstanceEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Iops                *int    `pulumi:"iops"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// InstanceEbsBlockDeviceInput is an input type that accepts InstanceEbsBlockDeviceArgs and InstanceEbsBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceInput` via:
//
//          InstanceEbsBlockDeviceArgs{...}
type InstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput
	ToInstanceEbsBlockDeviceOutputWithContext(context.Context) InstanceEbsBlockDeviceOutput
}

type InstanceEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return i.ToInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceOutput)
}

// InstanceEbsBlockDeviceArrayInput is an input type that accepts InstanceEbsBlockDeviceArray and InstanceEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceArrayInput` via:
//
//          InstanceEbsBlockDeviceArray{ InstanceEbsBlockDeviceArgs{...} }
type InstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput
	ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceArrayOutput
}

type InstanceEbsBlockDeviceArray []InstanceEbsBlockDeviceInput

func (InstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return i.ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArrayOutput)
}

type InstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o InstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEbsBlockDevice {
		return vs[0].([]InstanceEbsBlockDevice)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceOutput)
}

type InstanceEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

// InstanceEphemeralBlockDeviceInput is an input type that accepts InstanceEphemeralBlockDeviceArgs and InstanceEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceInput` via:
//
//          InstanceEphemeralBlockDeviceArgs{...}
type InstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput
	ToInstanceEphemeralBlockDeviceOutputWithContext(context.Context) InstanceEphemeralBlockDeviceOutput
}

type InstanceEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return i.ToInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceOutput)
}

// InstanceEphemeralBlockDeviceArrayInput is an input type that accepts InstanceEphemeralBlockDeviceArray and InstanceEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceArrayInput` via:
//
//          InstanceEphemeralBlockDeviceArray{ InstanceEphemeralBlockDeviceArgs{...} }
type InstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput
	ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArrayOutput
}

type InstanceEphemeralBlockDeviceArray []InstanceEphemeralBlockDeviceInput

func (InstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArrayOutput)
}

type InstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o InstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type InstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEphemeralBlockDevice {
		return vs[0].([]InstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Iops                *int    `pulumi:"iops"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// InstanceRootBlockDeviceInput is an input type that accepts InstanceRootBlockDeviceArgs and InstanceRootBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceRootBlockDeviceInput` via:
//
//          InstanceRootBlockDeviceArgs{...}
type InstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput
	ToInstanceRootBlockDeviceOutputWithContext(context.Context) InstanceRootBlockDeviceOutput
}

type InstanceRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

// InstanceRootBlockDeviceArrayInput is an input type that accepts InstanceRootBlockDeviceArray and InstanceRootBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceRootBlockDeviceArrayInput` via:
//
//          InstanceRootBlockDeviceArray{ InstanceRootBlockDeviceArgs{...} }
type InstanceRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput
	ToInstanceRootBlockDeviceArrayOutputWithContext(context.Context) InstanceRootBlockDeviceArrayOutput
}

type InstanceRootBlockDeviceArray []InstanceRootBlockDeviceInput

func (InstanceRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArray) ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput {
	return i.ToInstanceRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArray) ToInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceArrayOutput)
}

type InstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceArrayOutput) ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput {
	return o
}

func (o InstanceRootBlockDeviceArrayOutput) ToInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArrayOutput {
	return o
}

func (o InstanceRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceRootBlockDevice {
		return vs[0].([]InstanceRootBlockDevice)[vs[1].(int)]
	}).(InstanceRootBlockDeviceOutput)
}

type JavaAppLayerCloudwatchConfiguration struct {
	Enabled    *bool                                          `pulumi:"enabled"`
	LogStreams []JavaAppLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// JavaAppLayerCloudwatchConfigurationInput is an input type that accepts JavaAppLayerCloudwatchConfigurationArgs and JavaAppLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `JavaAppLayerCloudwatchConfigurationInput` via:
//
//          JavaAppLayerCloudwatchConfigurationArgs{...}
type JavaAppLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToJavaAppLayerCloudwatchConfigurationOutput() JavaAppLayerCloudwatchConfigurationOutput
	ToJavaAppLayerCloudwatchConfigurationOutputWithContext(context.Context) JavaAppLayerCloudwatchConfigurationOutput
}

type JavaAppLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                    `pulumi:"enabled"`
	LogStreams JavaAppLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (JavaAppLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i JavaAppLayerCloudwatchConfigurationArgs) ToJavaAppLayerCloudwatchConfigurationOutput() JavaAppLayerCloudwatchConfigurationOutput {
	return i.ToJavaAppLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i JavaAppLayerCloudwatchConfigurationArgs) ToJavaAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerCloudwatchConfigurationOutput)
}

func (i JavaAppLayerCloudwatchConfigurationArgs) ToJavaAppLayerCloudwatchConfigurationPtrOutput() JavaAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i JavaAppLayerCloudwatchConfigurationArgs) ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerCloudwatchConfigurationOutput).ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// JavaAppLayerCloudwatchConfigurationPtrInput is an input type that accepts JavaAppLayerCloudwatchConfigurationArgs, JavaAppLayerCloudwatchConfigurationPtr and JavaAppLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `JavaAppLayerCloudwatchConfigurationPtrInput` via:
//
//          JavaAppLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type JavaAppLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToJavaAppLayerCloudwatchConfigurationPtrOutput() JavaAppLayerCloudwatchConfigurationPtrOutput
	ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) JavaAppLayerCloudwatchConfigurationPtrOutput
}

type javaAppLayerCloudwatchConfigurationPtrType JavaAppLayerCloudwatchConfigurationArgs

func JavaAppLayerCloudwatchConfigurationPtr(v *JavaAppLayerCloudwatchConfigurationArgs) JavaAppLayerCloudwatchConfigurationPtrInput {
	return (*javaAppLayerCloudwatchConfigurationPtrType)(v)
}

func (*javaAppLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JavaAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *javaAppLayerCloudwatchConfigurationPtrType) ToJavaAppLayerCloudwatchConfigurationPtrOutput() JavaAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *javaAppLayerCloudwatchConfigurationPtrType) ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerCloudwatchConfigurationPtrOutput)
}

type JavaAppLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (JavaAppLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o JavaAppLayerCloudwatchConfigurationOutput) ToJavaAppLayerCloudwatchConfigurationOutput() JavaAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationOutput) ToJavaAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationOutput) ToJavaAppLayerCloudwatchConfigurationPtrOutput() JavaAppLayerCloudwatchConfigurationPtrOutput {
	return o.ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o JavaAppLayerCloudwatchConfigurationOutput) ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JavaAppLayerCloudwatchConfiguration) *JavaAppLayerCloudwatchConfiguration {
		return &v
	}).(JavaAppLayerCloudwatchConfigurationPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationOutput) LogStreams() JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfiguration) []JavaAppLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type JavaAppLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (JavaAppLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JavaAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o JavaAppLayerCloudwatchConfigurationPtrOutput) ToJavaAppLayerCloudwatchConfigurationPtrOutput() JavaAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationPtrOutput) ToJavaAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationPtrOutput) Elem() JavaAppLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *JavaAppLayerCloudwatchConfiguration) JavaAppLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret JavaAppLayerCloudwatchConfiguration
		return ret
	}).(JavaAppLayerCloudwatchConfigurationOutput)
}

func (o JavaAppLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JavaAppLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationPtrOutput) LogStreams() JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *JavaAppLayerCloudwatchConfiguration) []JavaAppLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type JavaAppLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// JavaAppLayerCloudwatchConfigurationLogStreamInput is an input type that accepts JavaAppLayerCloudwatchConfigurationLogStreamArgs and JavaAppLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `JavaAppLayerCloudwatchConfigurationLogStreamInput` via:
//
//          JavaAppLayerCloudwatchConfigurationLogStreamArgs{...}
type JavaAppLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToJavaAppLayerCloudwatchConfigurationLogStreamOutput() JavaAppLayerCloudwatchConfigurationLogStreamOutput
	ToJavaAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) JavaAppLayerCloudwatchConfigurationLogStreamOutput
}

type JavaAppLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (JavaAppLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i JavaAppLayerCloudwatchConfigurationLogStreamArgs) ToJavaAppLayerCloudwatchConfigurationLogStreamOutput() JavaAppLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToJavaAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i JavaAppLayerCloudwatchConfigurationLogStreamArgs) ToJavaAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerCloudwatchConfigurationLogStreamOutput)
}

// JavaAppLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts JavaAppLayerCloudwatchConfigurationLogStreamArray and JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `JavaAppLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          JavaAppLayerCloudwatchConfigurationLogStreamArray{ JavaAppLayerCloudwatchConfigurationLogStreamArgs{...} }
type JavaAppLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToJavaAppLayerCloudwatchConfigurationLogStreamArrayOutput() JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput
	ToJavaAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput
}

type JavaAppLayerCloudwatchConfigurationLogStreamArray []JavaAppLayerCloudwatchConfigurationLogStreamInput

func (JavaAppLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JavaAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i JavaAppLayerCloudwatchConfigurationLogStreamArray) ToJavaAppLayerCloudwatchConfigurationLogStreamArrayOutput() JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToJavaAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i JavaAppLayerCloudwatchConfigurationLogStreamArray) ToJavaAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type JavaAppLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (JavaAppLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) ToJavaAppLayerCloudwatchConfigurationLogStreamOutput() JavaAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) ToJavaAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JavaAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToJavaAppLayerCloudwatchConfigurationLogStreamArrayOutput() JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToJavaAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) JavaAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JavaAppLayerCloudwatchConfigurationLogStream {
		return vs[0].([]JavaAppLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(JavaAppLayerCloudwatchConfigurationLogStreamOutput)
}

type JavaAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// JavaAppLayerEbsVolumeInput is an input type that accepts JavaAppLayerEbsVolumeArgs and JavaAppLayerEbsVolumeOutput values.
// You can construct a concrete instance of `JavaAppLayerEbsVolumeInput` via:
//
//          JavaAppLayerEbsVolumeArgs{...}
type JavaAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToJavaAppLayerEbsVolumeOutput() JavaAppLayerEbsVolumeOutput
	ToJavaAppLayerEbsVolumeOutputWithContext(context.Context) JavaAppLayerEbsVolumeOutput
}

type JavaAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (JavaAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerEbsVolume)(nil)).Elem()
}

func (i JavaAppLayerEbsVolumeArgs) ToJavaAppLayerEbsVolumeOutput() JavaAppLayerEbsVolumeOutput {
	return i.ToJavaAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i JavaAppLayerEbsVolumeArgs) ToJavaAppLayerEbsVolumeOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerEbsVolumeOutput)
}

// JavaAppLayerEbsVolumeArrayInput is an input type that accepts JavaAppLayerEbsVolumeArray and JavaAppLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `JavaAppLayerEbsVolumeArrayInput` via:
//
//          JavaAppLayerEbsVolumeArray{ JavaAppLayerEbsVolumeArgs{...} }
type JavaAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToJavaAppLayerEbsVolumeArrayOutput() JavaAppLayerEbsVolumeArrayOutput
	ToJavaAppLayerEbsVolumeArrayOutputWithContext(context.Context) JavaAppLayerEbsVolumeArrayOutput
}

type JavaAppLayerEbsVolumeArray []JavaAppLayerEbsVolumeInput

func (JavaAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JavaAppLayerEbsVolume)(nil)).Elem()
}

func (i JavaAppLayerEbsVolumeArray) ToJavaAppLayerEbsVolumeArrayOutput() JavaAppLayerEbsVolumeArrayOutput {
	return i.ToJavaAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i JavaAppLayerEbsVolumeArray) ToJavaAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerEbsVolumeArrayOutput)
}

type JavaAppLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (JavaAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerEbsVolume)(nil)).Elem()
}

func (o JavaAppLayerEbsVolumeOutput) ToJavaAppLayerEbsVolumeOutput() JavaAppLayerEbsVolumeOutput {
	return o
}

func (o JavaAppLayerEbsVolumeOutput) ToJavaAppLayerEbsVolumeOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeOutput {
	return o
}

func (o JavaAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JavaAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o JavaAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JavaAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o JavaAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v JavaAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o JavaAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v JavaAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o JavaAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o JavaAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v JavaAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o JavaAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JavaAppLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (JavaAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JavaAppLayerEbsVolume)(nil)).Elem()
}

func (o JavaAppLayerEbsVolumeArrayOutput) ToJavaAppLayerEbsVolumeArrayOutput() JavaAppLayerEbsVolumeArrayOutput {
	return o
}

func (o JavaAppLayerEbsVolumeArrayOutput) ToJavaAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeArrayOutput {
	return o
}

func (o JavaAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) JavaAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JavaAppLayerEbsVolume {
		return vs[0].([]JavaAppLayerEbsVolume)[vs[1].(int)]
	}).(JavaAppLayerEbsVolumeOutput)
}

type MemcachedLayerCloudwatchConfiguration struct {
	Enabled    *bool                                            `pulumi:"enabled"`
	LogStreams []MemcachedLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// MemcachedLayerCloudwatchConfigurationInput is an input type that accepts MemcachedLayerCloudwatchConfigurationArgs and MemcachedLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `MemcachedLayerCloudwatchConfigurationInput` via:
//
//          MemcachedLayerCloudwatchConfigurationArgs{...}
type MemcachedLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToMemcachedLayerCloudwatchConfigurationOutput() MemcachedLayerCloudwatchConfigurationOutput
	ToMemcachedLayerCloudwatchConfigurationOutputWithContext(context.Context) MemcachedLayerCloudwatchConfigurationOutput
}

type MemcachedLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                      `pulumi:"enabled"`
	LogStreams MemcachedLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (MemcachedLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i MemcachedLayerCloudwatchConfigurationArgs) ToMemcachedLayerCloudwatchConfigurationOutput() MemcachedLayerCloudwatchConfigurationOutput {
	return i.ToMemcachedLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i MemcachedLayerCloudwatchConfigurationArgs) ToMemcachedLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerCloudwatchConfigurationOutput)
}

func (i MemcachedLayerCloudwatchConfigurationArgs) ToMemcachedLayerCloudwatchConfigurationPtrOutput() MemcachedLayerCloudwatchConfigurationPtrOutput {
	return i.ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i MemcachedLayerCloudwatchConfigurationArgs) ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerCloudwatchConfigurationOutput).ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// MemcachedLayerCloudwatchConfigurationPtrInput is an input type that accepts MemcachedLayerCloudwatchConfigurationArgs, MemcachedLayerCloudwatchConfigurationPtr and MemcachedLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `MemcachedLayerCloudwatchConfigurationPtrInput` via:
//
//          MemcachedLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type MemcachedLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToMemcachedLayerCloudwatchConfigurationPtrOutput() MemcachedLayerCloudwatchConfigurationPtrOutput
	ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) MemcachedLayerCloudwatchConfigurationPtrOutput
}

type memcachedLayerCloudwatchConfigurationPtrType MemcachedLayerCloudwatchConfigurationArgs

func MemcachedLayerCloudwatchConfigurationPtr(v *MemcachedLayerCloudwatchConfigurationArgs) MemcachedLayerCloudwatchConfigurationPtrInput {
	return (*memcachedLayerCloudwatchConfigurationPtrType)(v)
}

func (*memcachedLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MemcachedLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *memcachedLayerCloudwatchConfigurationPtrType) ToMemcachedLayerCloudwatchConfigurationPtrOutput() MemcachedLayerCloudwatchConfigurationPtrOutput {
	return i.ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *memcachedLayerCloudwatchConfigurationPtrType) ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerCloudwatchConfigurationPtrOutput)
}

type MemcachedLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (MemcachedLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o MemcachedLayerCloudwatchConfigurationOutput) ToMemcachedLayerCloudwatchConfigurationOutput() MemcachedLayerCloudwatchConfigurationOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationOutput) ToMemcachedLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationOutput) ToMemcachedLayerCloudwatchConfigurationPtrOutput() MemcachedLayerCloudwatchConfigurationPtrOutput {
	return o.ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o MemcachedLayerCloudwatchConfigurationOutput) ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MemcachedLayerCloudwatchConfiguration) *MemcachedLayerCloudwatchConfiguration {
		return &v
	}).(MemcachedLayerCloudwatchConfigurationPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationOutput) LogStreams() MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfiguration) []MemcachedLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type MemcachedLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MemcachedLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MemcachedLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o MemcachedLayerCloudwatchConfigurationPtrOutput) ToMemcachedLayerCloudwatchConfigurationPtrOutput() MemcachedLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationPtrOutput) ToMemcachedLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationPtrOutput) Elem() MemcachedLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *MemcachedLayerCloudwatchConfiguration) MemcachedLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret MemcachedLayerCloudwatchConfiguration
		return ret
	}).(MemcachedLayerCloudwatchConfigurationOutput)
}

func (o MemcachedLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MemcachedLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationPtrOutput) LogStreams() MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *MemcachedLayerCloudwatchConfiguration) []MemcachedLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type MemcachedLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// MemcachedLayerCloudwatchConfigurationLogStreamInput is an input type that accepts MemcachedLayerCloudwatchConfigurationLogStreamArgs and MemcachedLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `MemcachedLayerCloudwatchConfigurationLogStreamInput` via:
//
//          MemcachedLayerCloudwatchConfigurationLogStreamArgs{...}
type MemcachedLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToMemcachedLayerCloudwatchConfigurationLogStreamOutput() MemcachedLayerCloudwatchConfigurationLogStreamOutput
	ToMemcachedLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) MemcachedLayerCloudwatchConfigurationLogStreamOutput
}

type MemcachedLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (MemcachedLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i MemcachedLayerCloudwatchConfigurationLogStreamArgs) ToMemcachedLayerCloudwatchConfigurationLogStreamOutput() MemcachedLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToMemcachedLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i MemcachedLayerCloudwatchConfigurationLogStreamArgs) ToMemcachedLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerCloudwatchConfigurationLogStreamOutput)
}

// MemcachedLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts MemcachedLayerCloudwatchConfigurationLogStreamArray and MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `MemcachedLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          MemcachedLayerCloudwatchConfigurationLogStreamArray{ MemcachedLayerCloudwatchConfigurationLogStreamArgs{...} }
type MemcachedLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToMemcachedLayerCloudwatchConfigurationLogStreamArrayOutput() MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput
	ToMemcachedLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput
}

type MemcachedLayerCloudwatchConfigurationLogStreamArray []MemcachedLayerCloudwatchConfigurationLogStreamInput

func (MemcachedLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MemcachedLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i MemcachedLayerCloudwatchConfigurationLogStreamArray) ToMemcachedLayerCloudwatchConfigurationLogStreamArrayOutput() MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToMemcachedLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i MemcachedLayerCloudwatchConfigurationLogStreamArray) ToMemcachedLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type MemcachedLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (MemcachedLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) ToMemcachedLayerCloudwatchConfigurationLogStreamOutput() MemcachedLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) ToMemcachedLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MemcachedLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput) ToMemcachedLayerCloudwatchConfigurationLogStreamArrayOutput() MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput) ToMemcachedLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) MemcachedLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MemcachedLayerCloudwatchConfigurationLogStream {
		return vs[0].([]MemcachedLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(MemcachedLayerCloudwatchConfigurationLogStreamOutput)
}

type MemcachedLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// MemcachedLayerEbsVolumeInput is an input type that accepts MemcachedLayerEbsVolumeArgs and MemcachedLayerEbsVolumeOutput values.
// You can construct a concrete instance of `MemcachedLayerEbsVolumeInput` via:
//
//          MemcachedLayerEbsVolumeArgs{...}
type MemcachedLayerEbsVolumeInput interface {
	pulumi.Input

	ToMemcachedLayerEbsVolumeOutput() MemcachedLayerEbsVolumeOutput
	ToMemcachedLayerEbsVolumeOutputWithContext(context.Context) MemcachedLayerEbsVolumeOutput
}

type MemcachedLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MemcachedLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerEbsVolume)(nil)).Elem()
}

func (i MemcachedLayerEbsVolumeArgs) ToMemcachedLayerEbsVolumeOutput() MemcachedLayerEbsVolumeOutput {
	return i.ToMemcachedLayerEbsVolumeOutputWithContext(context.Background())
}

func (i MemcachedLayerEbsVolumeArgs) ToMemcachedLayerEbsVolumeOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerEbsVolumeOutput)
}

// MemcachedLayerEbsVolumeArrayInput is an input type that accepts MemcachedLayerEbsVolumeArray and MemcachedLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `MemcachedLayerEbsVolumeArrayInput` via:
//
//          MemcachedLayerEbsVolumeArray{ MemcachedLayerEbsVolumeArgs{...} }
type MemcachedLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToMemcachedLayerEbsVolumeArrayOutput() MemcachedLayerEbsVolumeArrayOutput
	ToMemcachedLayerEbsVolumeArrayOutputWithContext(context.Context) MemcachedLayerEbsVolumeArrayOutput
}

type MemcachedLayerEbsVolumeArray []MemcachedLayerEbsVolumeInput

func (MemcachedLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MemcachedLayerEbsVolume)(nil)).Elem()
}

func (i MemcachedLayerEbsVolumeArray) ToMemcachedLayerEbsVolumeArrayOutput() MemcachedLayerEbsVolumeArrayOutput {
	return i.ToMemcachedLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i MemcachedLayerEbsVolumeArray) ToMemcachedLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerEbsVolumeArrayOutput)
}

type MemcachedLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (MemcachedLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerEbsVolume)(nil)).Elem()
}

func (o MemcachedLayerEbsVolumeOutput) ToMemcachedLayerEbsVolumeOutput() MemcachedLayerEbsVolumeOutput {
	return o
}

func (o MemcachedLayerEbsVolumeOutput) ToMemcachedLayerEbsVolumeOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeOutput {
	return o
}

func (o MemcachedLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MemcachedLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o MemcachedLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MemcachedLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o MemcachedLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v MemcachedLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o MemcachedLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v MemcachedLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o MemcachedLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o MemcachedLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v MemcachedLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o MemcachedLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MemcachedLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MemcachedLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (MemcachedLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MemcachedLayerEbsVolume)(nil)).Elem()
}

func (o MemcachedLayerEbsVolumeArrayOutput) ToMemcachedLayerEbsVolumeArrayOutput() MemcachedLayerEbsVolumeArrayOutput {
	return o
}

func (o MemcachedLayerEbsVolumeArrayOutput) ToMemcachedLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeArrayOutput {
	return o
}

func (o MemcachedLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) MemcachedLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MemcachedLayerEbsVolume {
		return vs[0].([]MemcachedLayerEbsVolume)[vs[1].(int)]
	}).(MemcachedLayerEbsVolumeOutput)
}

type MysqlLayerCloudwatchConfiguration struct {
	Enabled    *bool                                        `pulumi:"enabled"`
	LogStreams []MysqlLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// MysqlLayerCloudwatchConfigurationInput is an input type that accepts MysqlLayerCloudwatchConfigurationArgs and MysqlLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `MysqlLayerCloudwatchConfigurationInput` via:
//
//          MysqlLayerCloudwatchConfigurationArgs{...}
type MysqlLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToMysqlLayerCloudwatchConfigurationOutput() MysqlLayerCloudwatchConfigurationOutput
	ToMysqlLayerCloudwatchConfigurationOutputWithContext(context.Context) MysqlLayerCloudwatchConfigurationOutput
}

type MysqlLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                  `pulumi:"enabled"`
	LogStreams MysqlLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (MysqlLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i MysqlLayerCloudwatchConfigurationArgs) ToMysqlLayerCloudwatchConfigurationOutput() MysqlLayerCloudwatchConfigurationOutput {
	return i.ToMysqlLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i MysqlLayerCloudwatchConfigurationArgs) ToMysqlLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerCloudwatchConfigurationOutput)
}

func (i MysqlLayerCloudwatchConfigurationArgs) ToMysqlLayerCloudwatchConfigurationPtrOutput() MysqlLayerCloudwatchConfigurationPtrOutput {
	return i.ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i MysqlLayerCloudwatchConfigurationArgs) ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerCloudwatchConfigurationOutput).ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// MysqlLayerCloudwatchConfigurationPtrInput is an input type that accepts MysqlLayerCloudwatchConfigurationArgs, MysqlLayerCloudwatchConfigurationPtr and MysqlLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `MysqlLayerCloudwatchConfigurationPtrInput` via:
//
//          MysqlLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type MysqlLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToMysqlLayerCloudwatchConfigurationPtrOutput() MysqlLayerCloudwatchConfigurationPtrOutput
	ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) MysqlLayerCloudwatchConfigurationPtrOutput
}

type mysqlLayerCloudwatchConfigurationPtrType MysqlLayerCloudwatchConfigurationArgs

func MysqlLayerCloudwatchConfigurationPtr(v *MysqlLayerCloudwatchConfigurationArgs) MysqlLayerCloudwatchConfigurationPtrInput {
	return (*mysqlLayerCloudwatchConfigurationPtrType)(v)
}

func (*mysqlLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *mysqlLayerCloudwatchConfigurationPtrType) ToMysqlLayerCloudwatchConfigurationPtrOutput() MysqlLayerCloudwatchConfigurationPtrOutput {
	return i.ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *mysqlLayerCloudwatchConfigurationPtrType) ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerCloudwatchConfigurationPtrOutput)
}

type MysqlLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (MysqlLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o MysqlLayerCloudwatchConfigurationOutput) ToMysqlLayerCloudwatchConfigurationOutput() MysqlLayerCloudwatchConfigurationOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationOutput) ToMysqlLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationOutput) ToMysqlLayerCloudwatchConfigurationPtrOutput() MysqlLayerCloudwatchConfigurationPtrOutput {
	return o.ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o MysqlLayerCloudwatchConfigurationOutput) ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlLayerCloudwatchConfiguration) *MysqlLayerCloudwatchConfiguration {
		return &v
	}).(MysqlLayerCloudwatchConfigurationPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationOutput) LogStreams() MysqlLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfiguration) []MysqlLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(MysqlLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type MysqlLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (MysqlLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o MysqlLayerCloudwatchConfigurationPtrOutput) ToMysqlLayerCloudwatchConfigurationPtrOutput() MysqlLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationPtrOutput) ToMysqlLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationPtrOutput) Elem() MysqlLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *MysqlLayerCloudwatchConfiguration) MysqlLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret MysqlLayerCloudwatchConfiguration
		return ret
	}).(MysqlLayerCloudwatchConfigurationOutput)
}

func (o MysqlLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationPtrOutput) LogStreams() MysqlLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *MysqlLayerCloudwatchConfiguration) []MysqlLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(MysqlLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type MysqlLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// MysqlLayerCloudwatchConfigurationLogStreamInput is an input type that accepts MysqlLayerCloudwatchConfigurationLogStreamArgs and MysqlLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `MysqlLayerCloudwatchConfigurationLogStreamInput` via:
//
//          MysqlLayerCloudwatchConfigurationLogStreamArgs{...}
type MysqlLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToMysqlLayerCloudwatchConfigurationLogStreamOutput() MysqlLayerCloudwatchConfigurationLogStreamOutput
	ToMysqlLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) MysqlLayerCloudwatchConfigurationLogStreamOutput
}

type MysqlLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (MysqlLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i MysqlLayerCloudwatchConfigurationLogStreamArgs) ToMysqlLayerCloudwatchConfigurationLogStreamOutput() MysqlLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToMysqlLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i MysqlLayerCloudwatchConfigurationLogStreamArgs) ToMysqlLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerCloudwatchConfigurationLogStreamOutput)
}

// MysqlLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts MysqlLayerCloudwatchConfigurationLogStreamArray and MysqlLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `MysqlLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          MysqlLayerCloudwatchConfigurationLogStreamArray{ MysqlLayerCloudwatchConfigurationLogStreamArgs{...} }
type MysqlLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToMysqlLayerCloudwatchConfigurationLogStreamArrayOutput() MysqlLayerCloudwatchConfigurationLogStreamArrayOutput
	ToMysqlLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) MysqlLayerCloudwatchConfigurationLogStreamArrayOutput
}

type MysqlLayerCloudwatchConfigurationLogStreamArray []MysqlLayerCloudwatchConfigurationLogStreamInput

func (MysqlLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i MysqlLayerCloudwatchConfigurationLogStreamArray) ToMysqlLayerCloudwatchConfigurationLogStreamArrayOutput() MysqlLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToMysqlLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i MysqlLayerCloudwatchConfigurationLogStreamArray) ToMysqlLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type MysqlLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (MysqlLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) ToMysqlLayerCloudwatchConfigurationLogStreamOutput() MysqlLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) ToMysqlLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o MysqlLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type MysqlLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (MysqlLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o MysqlLayerCloudwatchConfigurationLogStreamArrayOutput) ToMysqlLayerCloudwatchConfigurationLogStreamArrayOutput() MysqlLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationLogStreamArrayOutput) ToMysqlLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) MysqlLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o MysqlLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) MysqlLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlLayerCloudwatchConfigurationLogStream {
		return vs[0].([]MysqlLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(MysqlLayerCloudwatchConfigurationLogStreamOutput)
}

type MysqlLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// MysqlLayerEbsVolumeInput is an input type that accepts MysqlLayerEbsVolumeArgs and MysqlLayerEbsVolumeOutput values.
// You can construct a concrete instance of `MysqlLayerEbsVolumeInput` via:
//
//          MysqlLayerEbsVolumeArgs{...}
type MysqlLayerEbsVolumeInput interface {
	pulumi.Input

	ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput
	ToMysqlLayerEbsVolumeOutputWithContext(context.Context) MysqlLayerEbsVolumeOutput
}

type MysqlLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MysqlLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerEbsVolume)(nil)).Elem()
}

func (i MysqlLayerEbsVolumeArgs) ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput {
	return i.ToMysqlLayerEbsVolumeOutputWithContext(context.Background())
}

func (i MysqlLayerEbsVolumeArgs) ToMysqlLayerEbsVolumeOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerEbsVolumeOutput)
}

// MysqlLayerEbsVolumeArrayInput is an input type that accepts MysqlLayerEbsVolumeArray and MysqlLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `MysqlLayerEbsVolumeArrayInput` via:
//
//          MysqlLayerEbsVolumeArray{ MysqlLayerEbsVolumeArgs{...} }
type MysqlLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput
	ToMysqlLayerEbsVolumeArrayOutputWithContext(context.Context) MysqlLayerEbsVolumeArrayOutput
}

type MysqlLayerEbsVolumeArray []MysqlLayerEbsVolumeInput

func (MysqlLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerEbsVolume)(nil)).Elem()
}

func (i MysqlLayerEbsVolumeArray) ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput {
	return i.ToMysqlLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i MysqlLayerEbsVolumeArray) ToMysqlLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerEbsVolumeArrayOutput)
}

type MysqlLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (MysqlLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerEbsVolume)(nil)).Elem()
}

func (o MysqlLayerEbsVolumeOutput) ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput {
	return o
}

func (o MysqlLayerEbsVolumeOutput) ToMysqlLayerEbsVolumeOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeOutput {
	return o
}

func (o MysqlLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o MysqlLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o MysqlLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o MysqlLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v MysqlLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o MysqlLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o MysqlLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v MysqlLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o MysqlLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MysqlLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (MysqlLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerEbsVolume)(nil)).Elem()
}

func (o MysqlLayerEbsVolumeArrayOutput) ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput {
	return o
}

func (o MysqlLayerEbsVolumeArrayOutput) ToMysqlLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeArrayOutput {
	return o
}

func (o MysqlLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) MysqlLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlLayerEbsVolume {
		return vs[0].([]MysqlLayerEbsVolume)[vs[1].(int)]
	}).(MysqlLayerEbsVolumeOutput)
}

type NodejsAppLayerCloudwatchConfiguration struct {
	Enabled    *bool                                            `pulumi:"enabled"`
	LogStreams []NodejsAppLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// NodejsAppLayerCloudwatchConfigurationInput is an input type that accepts NodejsAppLayerCloudwatchConfigurationArgs and NodejsAppLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `NodejsAppLayerCloudwatchConfigurationInput` via:
//
//          NodejsAppLayerCloudwatchConfigurationArgs{...}
type NodejsAppLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToNodejsAppLayerCloudwatchConfigurationOutput() NodejsAppLayerCloudwatchConfigurationOutput
	ToNodejsAppLayerCloudwatchConfigurationOutputWithContext(context.Context) NodejsAppLayerCloudwatchConfigurationOutput
}

type NodejsAppLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                      `pulumi:"enabled"`
	LogStreams NodejsAppLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (NodejsAppLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i NodejsAppLayerCloudwatchConfigurationArgs) ToNodejsAppLayerCloudwatchConfigurationOutput() NodejsAppLayerCloudwatchConfigurationOutput {
	return i.ToNodejsAppLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i NodejsAppLayerCloudwatchConfigurationArgs) ToNodejsAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerCloudwatchConfigurationOutput)
}

func (i NodejsAppLayerCloudwatchConfigurationArgs) ToNodejsAppLayerCloudwatchConfigurationPtrOutput() NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i NodejsAppLayerCloudwatchConfigurationArgs) ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerCloudwatchConfigurationOutput).ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// NodejsAppLayerCloudwatchConfigurationPtrInput is an input type that accepts NodejsAppLayerCloudwatchConfigurationArgs, NodejsAppLayerCloudwatchConfigurationPtr and NodejsAppLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `NodejsAppLayerCloudwatchConfigurationPtrInput` via:
//
//          NodejsAppLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type NodejsAppLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToNodejsAppLayerCloudwatchConfigurationPtrOutput() NodejsAppLayerCloudwatchConfigurationPtrOutput
	ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) NodejsAppLayerCloudwatchConfigurationPtrOutput
}

type nodejsAppLayerCloudwatchConfigurationPtrType NodejsAppLayerCloudwatchConfigurationArgs

func NodejsAppLayerCloudwatchConfigurationPtr(v *NodejsAppLayerCloudwatchConfigurationArgs) NodejsAppLayerCloudwatchConfigurationPtrInput {
	return (*nodejsAppLayerCloudwatchConfigurationPtrType)(v)
}

func (*nodejsAppLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodejsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *nodejsAppLayerCloudwatchConfigurationPtrType) ToNodejsAppLayerCloudwatchConfigurationPtrOutput() NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *nodejsAppLayerCloudwatchConfigurationPtrType) ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerCloudwatchConfigurationPtrOutput)
}

type NodejsAppLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o NodejsAppLayerCloudwatchConfigurationOutput) ToNodejsAppLayerCloudwatchConfigurationOutput() NodejsAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationOutput) ToNodejsAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationOutput) ToNodejsAppLayerCloudwatchConfigurationPtrOutput() NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return o.ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o NodejsAppLayerCloudwatchConfigurationOutput) ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodejsAppLayerCloudwatchConfiguration) *NodejsAppLayerCloudwatchConfiguration {
		return &v
	}).(NodejsAppLayerCloudwatchConfigurationPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationOutput) LogStreams() NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfiguration) []NodejsAppLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type NodejsAppLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodejsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o NodejsAppLayerCloudwatchConfigurationPtrOutput) ToNodejsAppLayerCloudwatchConfigurationPtrOutput() NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationPtrOutput) ToNodejsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationPtrOutput) Elem() NodejsAppLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *NodejsAppLayerCloudwatchConfiguration) NodejsAppLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret NodejsAppLayerCloudwatchConfiguration
		return ret
	}).(NodejsAppLayerCloudwatchConfigurationOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodejsAppLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationPtrOutput) LogStreams() NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *NodejsAppLayerCloudwatchConfiguration) []NodejsAppLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type NodejsAppLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// NodejsAppLayerCloudwatchConfigurationLogStreamInput is an input type that accepts NodejsAppLayerCloudwatchConfigurationLogStreamArgs and NodejsAppLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `NodejsAppLayerCloudwatchConfigurationLogStreamInput` via:
//
//          NodejsAppLayerCloudwatchConfigurationLogStreamArgs{...}
type NodejsAppLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToNodejsAppLayerCloudwatchConfigurationLogStreamOutput() NodejsAppLayerCloudwatchConfigurationLogStreamOutput
	ToNodejsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) NodejsAppLayerCloudwatchConfigurationLogStreamOutput
}

type NodejsAppLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (NodejsAppLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i NodejsAppLayerCloudwatchConfigurationLogStreamArgs) ToNodejsAppLayerCloudwatchConfigurationLogStreamOutput() NodejsAppLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToNodejsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i NodejsAppLayerCloudwatchConfigurationLogStreamArgs) ToNodejsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerCloudwatchConfigurationLogStreamOutput)
}

// NodejsAppLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts NodejsAppLayerCloudwatchConfigurationLogStreamArray and NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `NodejsAppLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          NodejsAppLayerCloudwatchConfigurationLogStreamArray{ NodejsAppLayerCloudwatchConfigurationLogStreamArgs{...} }
type NodejsAppLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToNodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput() NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput
	ToNodejsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput
}

type NodejsAppLayerCloudwatchConfigurationLogStreamArray []NodejsAppLayerCloudwatchConfigurationLogStreamInput

func (NodejsAppLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodejsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i NodejsAppLayerCloudwatchConfigurationLogStreamArray) ToNodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput() NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToNodejsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i NodejsAppLayerCloudwatchConfigurationLogStreamArray) ToNodejsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type NodejsAppLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) ToNodejsAppLayerCloudwatchConfigurationLogStreamOutput() NodejsAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) ToNodejsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodejsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToNodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput() NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToNodejsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) NodejsAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodejsAppLayerCloudwatchConfigurationLogStream {
		return vs[0].([]NodejsAppLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(NodejsAppLayerCloudwatchConfigurationLogStreamOutput)
}

type NodejsAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// NodejsAppLayerEbsVolumeInput is an input type that accepts NodejsAppLayerEbsVolumeArgs and NodejsAppLayerEbsVolumeOutput values.
// You can construct a concrete instance of `NodejsAppLayerEbsVolumeInput` via:
//
//          NodejsAppLayerEbsVolumeArgs{...}
type NodejsAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToNodejsAppLayerEbsVolumeOutput() NodejsAppLayerEbsVolumeOutput
	ToNodejsAppLayerEbsVolumeOutputWithContext(context.Context) NodejsAppLayerEbsVolumeOutput
}

type NodejsAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NodejsAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (i NodejsAppLayerEbsVolumeArgs) ToNodejsAppLayerEbsVolumeOutput() NodejsAppLayerEbsVolumeOutput {
	return i.ToNodejsAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i NodejsAppLayerEbsVolumeArgs) ToNodejsAppLayerEbsVolumeOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerEbsVolumeOutput)
}

// NodejsAppLayerEbsVolumeArrayInput is an input type that accepts NodejsAppLayerEbsVolumeArray and NodejsAppLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `NodejsAppLayerEbsVolumeArrayInput` via:
//
//          NodejsAppLayerEbsVolumeArray{ NodejsAppLayerEbsVolumeArgs{...} }
type NodejsAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToNodejsAppLayerEbsVolumeArrayOutput() NodejsAppLayerEbsVolumeArrayOutput
	ToNodejsAppLayerEbsVolumeArrayOutputWithContext(context.Context) NodejsAppLayerEbsVolumeArrayOutput
}

type NodejsAppLayerEbsVolumeArray []NodejsAppLayerEbsVolumeInput

func (NodejsAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (i NodejsAppLayerEbsVolumeArray) ToNodejsAppLayerEbsVolumeArrayOutput() NodejsAppLayerEbsVolumeArrayOutput {
	return i.ToNodejsAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i NodejsAppLayerEbsVolumeArray) ToNodejsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerEbsVolumeArrayOutput)
}

type NodejsAppLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (o NodejsAppLayerEbsVolumeOutput) ToNodejsAppLayerEbsVolumeOutput() NodejsAppLayerEbsVolumeOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeOutput) ToNodejsAppLayerEbsVolumeOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o NodejsAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o NodejsAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v NodejsAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o NodejsAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v NodejsAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o NodejsAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o NodejsAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v NodejsAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o NodejsAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodejsAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NodejsAppLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (o NodejsAppLayerEbsVolumeArrayOutput) ToNodejsAppLayerEbsVolumeArrayOutput() NodejsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeArrayOutput) ToNodejsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) NodejsAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodejsAppLayerEbsVolume {
		return vs[0].([]NodejsAppLayerEbsVolume)[vs[1].(int)]
	}).(NodejsAppLayerEbsVolumeOutput)
}

type PhpAppLayerCloudwatchConfiguration struct {
	Enabled    *bool                                         `pulumi:"enabled"`
	LogStreams []PhpAppLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// PhpAppLayerCloudwatchConfigurationInput is an input type that accepts PhpAppLayerCloudwatchConfigurationArgs and PhpAppLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `PhpAppLayerCloudwatchConfigurationInput` via:
//
//          PhpAppLayerCloudwatchConfigurationArgs{...}
type PhpAppLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToPhpAppLayerCloudwatchConfigurationOutput() PhpAppLayerCloudwatchConfigurationOutput
	ToPhpAppLayerCloudwatchConfigurationOutputWithContext(context.Context) PhpAppLayerCloudwatchConfigurationOutput
}

type PhpAppLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                   `pulumi:"enabled"`
	LogStreams PhpAppLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (PhpAppLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i PhpAppLayerCloudwatchConfigurationArgs) ToPhpAppLayerCloudwatchConfigurationOutput() PhpAppLayerCloudwatchConfigurationOutput {
	return i.ToPhpAppLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i PhpAppLayerCloudwatchConfigurationArgs) ToPhpAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerCloudwatchConfigurationOutput)
}

func (i PhpAppLayerCloudwatchConfigurationArgs) ToPhpAppLayerCloudwatchConfigurationPtrOutput() PhpAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i PhpAppLayerCloudwatchConfigurationArgs) ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerCloudwatchConfigurationOutput).ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// PhpAppLayerCloudwatchConfigurationPtrInput is an input type that accepts PhpAppLayerCloudwatchConfigurationArgs, PhpAppLayerCloudwatchConfigurationPtr and PhpAppLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `PhpAppLayerCloudwatchConfigurationPtrInput` via:
//
//          PhpAppLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type PhpAppLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToPhpAppLayerCloudwatchConfigurationPtrOutput() PhpAppLayerCloudwatchConfigurationPtrOutput
	ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) PhpAppLayerCloudwatchConfigurationPtrOutput
}

type phpAppLayerCloudwatchConfigurationPtrType PhpAppLayerCloudwatchConfigurationArgs

func PhpAppLayerCloudwatchConfigurationPtr(v *PhpAppLayerCloudwatchConfigurationArgs) PhpAppLayerCloudwatchConfigurationPtrInput {
	return (*phpAppLayerCloudwatchConfigurationPtrType)(v)
}

func (*phpAppLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PhpAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *phpAppLayerCloudwatchConfigurationPtrType) ToPhpAppLayerCloudwatchConfigurationPtrOutput() PhpAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *phpAppLayerCloudwatchConfigurationPtrType) ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerCloudwatchConfigurationPtrOutput)
}

type PhpAppLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (PhpAppLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o PhpAppLayerCloudwatchConfigurationOutput) ToPhpAppLayerCloudwatchConfigurationOutput() PhpAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationOutput) ToPhpAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationOutput) ToPhpAppLayerCloudwatchConfigurationPtrOutput() PhpAppLayerCloudwatchConfigurationPtrOutput {
	return o.ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o PhpAppLayerCloudwatchConfigurationOutput) ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PhpAppLayerCloudwatchConfiguration) *PhpAppLayerCloudwatchConfiguration {
		return &v
	}).(PhpAppLayerCloudwatchConfigurationPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationOutput) LogStreams() PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfiguration) []PhpAppLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type PhpAppLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PhpAppLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PhpAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o PhpAppLayerCloudwatchConfigurationPtrOutput) ToPhpAppLayerCloudwatchConfigurationPtrOutput() PhpAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationPtrOutput) ToPhpAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationPtrOutput) Elem() PhpAppLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *PhpAppLayerCloudwatchConfiguration) PhpAppLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret PhpAppLayerCloudwatchConfiguration
		return ret
	}).(PhpAppLayerCloudwatchConfigurationOutput)
}

func (o PhpAppLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PhpAppLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationPtrOutput) LogStreams() PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *PhpAppLayerCloudwatchConfiguration) []PhpAppLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type PhpAppLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// PhpAppLayerCloudwatchConfigurationLogStreamInput is an input type that accepts PhpAppLayerCloudwatchConfigurationLogStreamArgs and PhpAppLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `PhpAppLayerCloudwatchConfigurationLogStreamInput` via:
//
//          PhpAppLayerCloudwatchConfigurationLogStreamArgs{...}
type PhpAppLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToPhpAppLayerCloudwatchConfigurationLogStreamOutput() PhpAppLayerCloudwatchConfigurationLogStreamOutput
	ToPhpAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) PhpAppLayerCloudwatchConfigurationLogStreamOutput
}

type PhpAppLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (PhpAppLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i PhpAppLayerCloudwatchConfigurationLogStreamArgs) ToPhpAppLayerCloudwatchConfigurationLogStreamOutput() PhpAppLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToPhpAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i PhpAppLayerCloudwatchConfigurationLogStreamArgs) ToPhpAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerCloudwatchConfigurationLogStreamOutput)
}

// PhpAppLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts PhpAppLayerCloudwatchConfigurationLogStreamArray and PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `PhpAppLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          PhpAppLayerCloudwatchConfigurationLogStreamArray{ PhpAppLayerCloudwatchConfigurationLogStreamArgs{...} }
type PhpAppLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToPhpAppLayerCloudwatchConfigurationLogStreamArrayOutput() PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput
	ToPhpAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput
}

type PhpAppLayerCloudwatchConfigurationLogStreamArray []PhpAppLayerCloudwatchConfigurationLogStreamInput

func (PhpAppLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhpAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i PhpAppLayerCloudwatchConfigurationLogStreamArray) ToPhpAppLayerCloudwatchConfigurationLogStreamArrayOutput() PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToPhpAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i PhpAppLayerCloudwatchConfigurationLogStreamArray) ToPhpAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type PhpAppLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (PhpAppLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) ToPhpAppLayerCloudwatchConfigurationLogStreamOutput() PhpAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) ToPhpAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhpAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToPhpAppLayerCloudwatchConfigurationLogStreamArrayOutput() PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToPhpAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) PhpAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PhpAppLayerCloudwatchConfigurationLogStream {
		return vs[0].([]PhpAppLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(PhpAppLayerCloudwatchConfigurationLogStreamOutput)
}

type PhpAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// PhpAppLayerEbsVolumeInput is an input type that accepts PhpAppLayerEbsVolumeArgs and PhpAppLayerEbsVolumeOutput values.
// You can construct a concrete instance of `PhpAppLayerEbsVolumeInput` via:
//
//          PhpAppLayerEbsVolumeArgs{...}
type PhpAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToPhpAppLayerEbsVolumeOutput() PhpAppLayerEbsVolumeOutput
	ToPhpAppLayerEbsVolumeOutputWithContext(context.Context) PhpAppLayerEbsVolumeOutput
}

type PhpAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PhpAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerEbsVolume)(nil)).Elem()
}

func (i PhpAppLayerEbsVolumeArgs) ToPhpAppLayerEbsVolumeOutput() PhpAppLayerEbsVolumeOutput {
	return i.ToPhpAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i PhpAppLayerEbsVolumeArgs) ToPhpAppLayerEbsVolumeOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerEbsVolumeOutput)
}

// PhpAppLayerEbsVolumeArrayInput is an input type that accepts PhpAppLayerEbsVolumeArray and PhpAppLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `PhpAppLayerEbsVolumeArrayInput` via:
//
//          PhpAppLayerEbsVolumeArray{ PhpAppLayerEbsVolumeArgs{...} }
type PhpAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToPhpAppLayerEbsVolumeArrayOutput() PhpAppLayerEbsVolumeArrayOutput
	ToPhpAppLayerEbsVolumeArrayOutputWithContext(context.Context) PhpAppLayerEbsVolumeArrayOutput
}

type PhpAppLayerEbsVolumeArray []PhpAppLayerEbsVolumeInput

func (PhpAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhpAppLayerEbsVolume)(nil)).Elem()
}

func (i PhpAppLayerEbsVolumeArray) ToPhpAppLayerEbsVolumeArrayOutput() PhpAppLayerEbsVolumeArrayOutput {
	return i.ToPhpAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i PhpAppLayerEbsVolumeArray) ToPhpAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerEbsVolumeArrayOutput)
}

type PhpAppLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (PhpAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerEbsVolume)(nil)).Elem()
}

func (o PhpAppLayerEbsVolumeOutput) ToPhpAppLayerEbsVolumeOutput() PhpAppLayerEbsVolumeOutput {
	return o
}

func (o PhpAppLayerEbsVolumeOutput) ToPhpAppLayerEbsVolumeOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeOutput {
	return o
}

func (o PhpAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PhpAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o PhpAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PhpAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o PhpAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v PhpAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o PhpAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v PhpAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o PhpAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o PhpAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v PhpAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o PhpAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PhpAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PhpAppLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (PhpAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhpAppLayerEbsVolume)(nil)).Elem()
}

func (o PhpAppLayerEbsVolumeArrayOutput) ToPhpAppLayerEbsVolumeArrayOutput() PhpAppLayerEbsVolumeArrayOutput {
	return o
}

func (o PhpAppLayerEbsVolumeArrayOutput) ToPhpAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeArrayOutput {
	return o
}

func (o PhpAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) PhpAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PhpAppLayerEbsVolume {
		return vs[0].([]PhpAppLayerEbsVolume)[vs[1].(int)]
	}).(PhpAppLayerEbsVolumeOutput)
}

type RailsAppLayerCloudwatchConfiguration struct {
	Enabled    *bool                                           `pulumi:"enabled"`
	LogStreams []RailsAppLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// RailsAppLayerCloudwatchConfigurationInput is an input type that accepts RailsAppLayerCloudwatchConfigurationArgs and RailsAppLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `RailsAppLayerCloudwatchConfigurationInput` via:
//
//          RailsAppLayerCloudwatchConfigurationArgs{...}
type RailsAppLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToRailsAppLayerCloudwatchConfigurationOutput() RailsAppLayerCloudwatchConfigurationOutput
	ToRailsAppLayerCloudwatchConfigurationOutputWithContext(context.Context) RailsAppLayerCloudwatchConfigurationOutput
}

type RailsAppLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                     `pulumi:"enabled"`
	LogStreams RailsAppLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (RailsAppLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i RailsAppLayerCloudwatchConfigurationArgs) ToRailsAppLayerCloudwatchConfigurationOutput() RailsAppLayerCloudwatchConfigurationOutput {
	return i.ToRailsAppLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i RailsAppLayerCloudwatchConfigurationArgs) ToRailsAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerCloudwatchConfigurationOutput)
}

func (i RailsAppLayerCloudwatchConfigurationArgs) ToRailsAppLayerCloudwatchConfigurationPtrOutput() RailsAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i RailsAppLayerCloudwatchConfigurationArgs) ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerCloudwatchConfigurationOutput).ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// RailsAppLayerCloudwatchConfigurationPtrInput is an input type that accepts RailsAppLayerCloudwatchConfigurationArgs, RailsAppLayerCloudwatchConfigurationPtr and RailsAppLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `RailsAppLayerCloudwatchConfigurationPtrInput` via:
//
//          RailsAppLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type RailsAppLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToRailsAppLayerCloudwatchConfigurationPtrOutput() RailsAppLayerCloudwatchConfigurationPtrOutput
	ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) RailsAppLayerCloudwatchConfigurationPtrOutput
}

type railsAppLayerCloudwatchConfigurationPtrType RailsAppLayerCloudwatchConfigurationArgs

func RailsAppLayerCloudwatchConfigurationPtr(v *RailsAppLayerCloudwatchConfigurationArgs) RailsAppLayerCloudwatchConfigurationPtrInput {
	return (*railsAppLayerCloudwatchConfigurationPtrType)(v)
}

func (*railsAppLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RailsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *railsAppLayerCloudwatchConfigurationPtrType) ToRailsAppLayerCloudwatchConfigurationPtrOutput() RailsAppLayerCloudwatchConfigurationPtrOutput {
	return i.ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *railsAppLayerCloudwatchConfigurationPtrType) ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerCloudwatchConfigurationPtrOutput)
}

type RailsAppLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (RailsAppLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o RailsAppLayerCloudwatchConfigurationOutput) ToRailsAppLayerCloudwatchConfigurationOutput() RailsAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationOutput) ToRailsAppLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationOutput) ToRailsAppLayerCloudwatchConfigurationPtrOutput() RailsAppLayerCloudwatchConfigurationPtrOutput {
	return o.ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o RailsAppLayerCloudwatchConfigurationOutput) ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RailsAppLayerCloudwatchConfiguration) *RailsAppLayerCloudwatchConfiguration {
		return &v
	}).(RailsAppLayerCloudwatchConfigurationPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationOutput) LogStreams() RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfiguration) []RailsAppLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type RailsAppLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RailsAppLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RailsAppLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o RailsAppLayerCloudwatchConfigurationPtrOutput) ToRailsAppLayerCloudwatchConfigurationPtrOutput() RailsAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationPtrOutput) ToRailsAppLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationPtrOutput) Elem() RailsAppLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *RailsAppLayerCloudwatchConfiguration) RailsAppLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret RailsAppLayerCloudwatchConfiguration
		return ret
	}).(RailsAppLayerCloudwatchConfigurationOutput)
}

func (o RailsAppLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationPtrOutput) LogStreams() RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *RailsAppLayerCloudwatchConfiguration) []RailsAppLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type RailsAppLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// RailsAppLayerCloudwatchConfigurationLogStreamInput is an input type that accepts RailsAppLayerCloudwatchConfigurationLogStreamArgs and RailsAppLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `RailsAppLayerCloudwatchConfigurationLogStreamInput` via:
//
//          RailsAppLayerCloudwatchConfigurationLogStreamArgs{...}
type RailsAppLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToRailsAppLayerCloudwatchConfigurationLogStreamOutput() RailsAppLayerCloudwatchConfigurationLogStreamOutput
	ToRailsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) RailsAppLayerCloudwatchConfigurationLogStreamOutput
}

type RailsAppLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (RailsAppLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i RailsAppLayerCloudwatchConfigurationLogStreamArgs) ToRailsAppLayerCloudwatchConfigurationLogStreamOutput() RailsAppLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToRailsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i RailsAppLayerCloudwatchConfigurationLogStreamArgs) ToRailsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerCloudwatchConfigurationLogStreamOutput)
}

// RailsAppLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts RailsAppLayerCloudwatchConfigurationLogStreamArray and RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `RailsAppLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          RailsAppLayerCloudwatchConfigurationLogStreamArray{ RailsAppLayerCloudwatchConfigurationLogStreamArgs{...} }
type RailsAppLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToRailsAppLayerCloudwatchConfigurationLogStreamArrayOutput() RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput
	ToRailsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput
}

type RailsAppLayerCloudwatchConfigurationLogStreamArray []RailsAppLayerCloudwatchConfigurationLogStreamInput

func (RailsAppLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RailsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i RailsAppLayerCloudwatchConfigurationLogStreamArray) ToRailsAppLayerCloudwatchConfigurationLogStreamArrayOutput() RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToRailsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i RailsAppLayerCloudwatchConfigurationLogStreamArray) ToRailsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type RailsAppLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (RailsAppLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) ToRailsAppLayerCloudwatchConfigurationLogStreamOutput() RailsAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) ToRailsAppLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RailsAppLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToRailsAppLayerCloudwatchConfigurationLogStreamArrayOutput() RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput) ToRailsAppLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) RailsAppLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RailsAppLayerCloudwatchConfigurationLogStream {
		return vs[0].([]RailsAppLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(RailsAppLayerCloudwatchConfigurationLogStreamOutput)
}

type RailsAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// RailsAppLayerEbsVolumeInput is an input type that accepts RailsAppLayerEbsVolumeArgs and RailsAppLayerEbsVolumeOutput values.
// You can construct a concrete instance of `RailsAppLayerEbsVolumeInput` via:
//
//          RailsAppLayerEbsVolumeArgs{...}
type RailsAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToRailsAppLayerEbsVolumeOutput() RailsAppLayerEbsVolumeOutput
	ToRailsAppLayerEbsVolumeOutputWithContext(context.Context) RailsAppLayerEbsVolumeOutput
}

type RailsAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RailsAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerEbsVolume)(nil)).Elem()
}

func (i RailsAppLayerEbsVolumeArgs) ToRailsAppLayerEbsVolumeOutput() RailsAppLayerEbsVolumeOutput {
	return i.ToRailsAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i RailsAppLayerEbsVolumeArgs) ToRailsAppLayerEbsVolumeOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerEbsVolumeOutput)
}

// RailsAppLayerEbsVolumeArrayInput is an input type that accepts RailsAppLayerEbsVolumeArray and RailsAppLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `RailsAppLayerEbsVolumeArrayInput` via:
//
//          RailsAppLayerEbsVolumeArray{ RailsAppLayerEbsVolumeArgs{...} }
type RailsAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToRailsAppLayerEbsVolumeArrayOutput() RailsAppLayerEbsVolumeArrayOutput
	ToRailsAppLayerEbsVolumeArrayOutputWithContext(context.Context) RailsAppLayerEbsVolumeArrayOutput
}

type RailsAppLayerEbsVolumeArray []RailsAppLayerEbsVolumeInput

func (RailsAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RailsAppLayerEbsVolume)(nil)).Elem()
}

func (i RailsAppLayerEbsVolumeArray) ToRailsAppLayerEbsVolumeArrayOutput() RailsAppLayerEbsVolumeArrayOutput {
	return i.ToRailsAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i RailsAppLayerEbsVolumeArray) ToRailsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerEbsVolumeArrayOutput)
}

type RailsAppLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (RailsAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerEbsVolume)(nil)).Elem()
}

func (o RailsAppLayerEbsVolumeOutput) ToRailsAppLayerEbsVolumeOutput() RailsAppLayerEbsVolumeOutput {
	return o
}

func (o RailsAppLayerEbsVolumeOutput) ToRailsAppLayerEbsVolumeOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeOutput {
	return o
}

func (o RailsAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RailsAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o RailsAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RailsAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o RailsAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v RailsAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o RailsAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v RailsAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o RailsAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o RailsAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v RailsAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o RailsAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RailsAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RailsAppLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (RailsAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RailsAppLayerEbsVolume)(nil)).Elem()
}

func (o RailsAppLayerEbsVolumeArrayOutput) ToRailsAppLayerEbsVolumeArrayOutput() RailsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o RailsAppLayerEbsVolumeArrayOutput) ToRailsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o RailsAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) RailsAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RailsAppLayerEbsVolume {
		return vs[0].([]RailsAppLayerEbsVolume)[vs[1].(int)]
	}).(RailsAppLayerEbsVolumeOutput)
}

type StackCustomCookbooksSource struct {
	// Password to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
	Password *string `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision *string `pulumi:"revision"`
	// SSH key to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
	SshKey *string `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type string `pulumi:"type"`
	// The URL where the cookbooks resource can be found.
	Url string `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username *string `pulumi:"username"`
}

// StackCustomCookbooksSourceInput is an input type that accepts StackCustomCookbooksSourceArgs and StackCustomCookbooksSourceOutput values.
// You can construct a concrete instance of `StackCustomCookbooksSourceInput` via:
//
//          StackCustomCookbooksSourceArgs{...}
type StackCustomCookbooksSourceInput interface {
	pulumi.Input

	ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput
	ToStackCustomCookbooksSourceOutputWithContext(context.Context) StackCustomCookbooksSourceOutput
}

type StackCustomCookbooksSourceArgs struct {
	// Password to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// SSH key to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type pulumi.StringInput `pulumi:"type"`
	// The URL where the cookbooks resource can be found.
	Url pulumi.StringInput `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (StackCustomCookbooksSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackCustomCookbooksSource)(nil)).Elem()
}

func (i StackCustomCookbooksSourceArgs) ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput {
	return i.ToStackCustomCookbooksSourceOutputWithContext(context.Background())
}

func (i StackCustomCookbooksSourceArgs) ToStackCustomCookbooksSourceOutputWithContext(ctx context.Context) StackCustomCookbooksSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackCustomCookbooksSourceOutput)
}

// StackCustomCookbooksSourceArrayInput is an input type that accepts StackCustomCookbooksSourceArray and StackCustomCookbooksSourceArrayOutput values.
// You can construct a concrete instance of `StackCustomCookbooksSourceArrayInput` via:
//
//          StackCustomCookbooksSourceArray{ StackCustomCookbooksSourceArgs{...} }
type StackCustomCookbooksSourceArrayInput interface {
	pulumi.Input

	ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput
	ToStackCustomCookbooksSourceArrayOutputWithContext(context.Context) StackCustomCookbooksSourceArrayOutput
}

type StackCustomCookbooksSourceArray []StackCustomCookbooksSourceInput

func (StackCustomCookbooksSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackCustomCookbooksSource)(nil)).Elem()
}

func (i StackCustomCookbooksSourceArray) ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput {
	return i.ToStackCustomCookbooksSourceArrayOutputWithContext(context.Background())
}

func (i StackCustomCookbooksSourceArray) ToStackCustomCookbooksSourceArrayOutputWithContext(ctx context.Context) StackCustomCookbooksSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackCustomCookbooksSourceArrayOutput)
}

type StackCustomCookbooksSourceOutput struct{ *pulumi.OutputState }

func (StackCustomCookbooksSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackCustomCookbooksSource)(nil)).Elem()
}

func (o StackCustomCookbooksSourceOutput) ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput {
	return o
}

func (o StackCustomCookbooksSourceOutput) ToStackCustomCookbooksSourceOutputWithContext(ctx context.Context) StackCustomCookbooksSourceOutput {
	return o
}

// Password to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
func (o StackCustomCookbooksSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// For sources that are version-aware, the revision to use.
func (o StackCustomCookbooksSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// SSH key to use when authenticating to the source. The provider cannot perform drift detection of this configuration.
func (o StackCustomCookbooksSourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The type of source to use. For example, "archive".
func (o StackCustomCookbooksSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) string { return v.Type }).(pulumi.StringOutput)
}

// The URL where the cookbooks resource can be found.
func (o StackCustomCookbooksSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) string { return v.Url }).(pulumi.StringOutput)
}

// Username to use when authenticating to the source.
func (o StackCustomCookbooksSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackCustomCookbooksSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type StackCustomCookbooksSourceArrayOutput struct{ *pulumi.OutputState }

func (StackCustomCookbooksSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackCustomCookbooksSource)(nil)).Elem()
}

func (o StackCustomCookbooksSourceArrayOutput) ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput {
	return o
}

func (o StackCustomCookbooksSourceArrayOutput) ToStackCustomCookbooksSourceArrayOutputWithContext(ctx context.Context) StackCustomCookbooksSourceArrayOutput {
	return o
}

func (o StackCustomCookbooksSourceArrayOutput) Index(i pulumi.IntInput) StackCustomCookbooksSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackCustomCookbooksSource {
		return vs[0].([]StackCustomCookbooksSource)[vs[1].(int)]
	}).(StackCustomCookbooksSourceOutput)
}

type StaticWebLayerCloudwatchConfiguration struct {
	Enabled    *bool                                            `pulumi:"enabled"`
	LogStreams []StaticWebLayerCloudwatchConfigurationLogStream `pulumi:"logStreams"`
}

// StaticWebLayerCloudwatchConfigurationInput is an input type that accepts StaticWebLayerCloudwatchConfigurationArgs and StaticWebLayerCloudwatchConfigurationOutput values.
// You can construct a concrete instance of `StaticWebLayerCloudwatchConfigurationInput` via:
//
//          StaticWebLayerCloudwatchConfigurationArgs{...}
type StaticWebLayerCloudwatchConfigurationInput interface {
	pulumi.Input

	ToStaticWebLayerCloudwatchConfigurationOutput() StaticWebLayerCloudwatchConfigurationOutput
	ToStaticWebLayerCloudwatchConfigurationOutputWithContext(context.Context) StaticWebLayerCloudwatchConfigurationOutput
}

type StaticWebLayerCloudwatchConfigurationArgs struct {
	Enabled    pulumi.BoolPtrInput                                      `pulumi:"enabled"`
	LogStreams StaticWebLayerCloudwatchConfigurationLogStreamArrayInput `pulumi:"logStreams"`
}

func (StaticWebLayerCloudwatchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i StaticWebLayerCloudwatchConfigurationArgs) ToStaticWebLayerCloudwatchConfigurationOutput() StaticWebLayerCloudwatchConfigurationOutput {
	return i.ToStaticWebLayerCloudwatchConfigurationOutputWithContext(context.Background())
}

func (i StaticWebLayerCloudwatchConfigurationArgs) ToStaticWebLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerCloudwatchConfigurationOutput)
}

func (i StaticWebLayerCloudwatchConfigurationArgs) ToStaticWebLayerCloudwatchConfigurationPtrOutput() StaticWebLayerCloudwatchConfigurationPtrOutput {
	return i.ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i StaticWebLayerCloudwatchConfigurationArgs) ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerCloudwatchConfigurationOutput).ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(ctx)
}

// StaticWebLayerCloudwatchConfigurationPtrInput is an input type that accepts StaticWebLayerCloudwatchConfigurationArgs, StaticWebLayerCloudwatchConfigurationPtr and StaticWebLayerCloudwatchConfigurationPtrOutput values.
// You can construct a concrete instance of `StaticWebLayerCloudwatchConfigurationPtrInput` via:
//
//          StaticWebLayerCloudwatchConfigurationArgs{...}
//
//  or:
//
//          nil
type StaticWebLayerCloudwatchConfigurationPtrInput interface {
	pulumi.Input

	ToStaticWebLayerCloudwatchConfigurationPtrOutput() StaticWebLayerCloudwatchConfigurationPtrOutput
	ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(context.Context) StaticWebLayerCloudwatchConfigurationPtrOutput
}

type staticWebLayerCloudwatchConfigurationPtrType StaticWebLayerCloudwatchConfigurationArgs

func StaticWebLayerCloudwatchConfigurationPtr(v *StaticWebLayerCloudwatchConfigurationArgs) StaticWebLayerCloudwatchConfigurationPtrInput {
	return (*staticWebLayerCloudwatchConfigurationPtrType)(v)
}

func (*staticWebLayerCloudwatchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticWebLayerCloudwatchConfiguration)(nil)).Elem()
}

func (i *staticWebLayerCloudwatchConfigurationPtrType) ToStaticWebLayerCloudwatchConfigurationPtrOutput() StaticWebLayerCloudwatchConfigurationPtrOutput {
	return i.ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (i *staticWebLayerCloudwatchConfigurationPtrType) ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerCloudwatchConfigurationPtrOutput)
}

type StaticWebLayerCloudwatchConfigurationOutput struct{ *pulumi.OutputState }

func (StaticWebLayerCloudwatchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o StaticWebLayerCloudwatchConfigurationOutput) ToStaticWebLayerCloudwatchConfigurationOutput() StaticWebLayerCloudwatchConfigurationOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationOutput) ToStaticWebLayerCloudwatchConfigurationOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationOutput) ToStaticWebLayerCloudwatchConfigurationPtrOutput() StaticWebLayerCloudwatchConfigurationPtrOutput {
	return o.ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(context.Background())
}

func (o StaticWebLayerCloudwatchConfigurationOutput) ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticWebLayerCloudwatchConfiguration) *StaticWebLayerCloudwatchConfiguration {
		return &v
	}).(StaticWebLayerCloudwatchConfigurationPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationOutput) LogStreams() StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfiguration) []StaticWebLayerCloudwatchConfigurationLogStream {
		return v.LogStreams
	}).(StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type StaticWebLayerCloudwatchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StaticWebLayerCloudwatchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticWebLayerCloudwatchConfiguration)(nil)).Elem()
}

func (o StaticWebLayerCloudwatchConfigurationPtrOutput) ToStaticWebLayerCloudwatchConfigurationPtrOutput() StaticWebLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationPtrOutput) ToStaticWebLayerCloudwatchConfigurationPtrOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationPtrOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationPtrOutput) Elem() StaticWebLayerCloudwatchConfigurationOutput {
	return o.ApplyT(func(v *StaticWebLayerCloudwatchConfiguration) StaticWebLayerCloudwatchConfiguration {
		if v != nil {
			return *v
		}
		var ret StaticWebLayerCloudwatchConfiguration
		return ret
	}).(StaticWebLayerCloudwatchConfigurationOutput)
}

func (o StaticWebLayerCloudwatchConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticWebLayerCloudwatchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationPtrOutput) LogStreams() StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o.ApplyT(func(v *StaticWebLayerCloudwatchConfiguration) []StaticWebLayerCloudwatchConfigurationLogStream {
		if v == nil {
			return nil
		}
		return v.LogStreams
	}).(StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type StaticWebLayerCloudwatchConfigurationLogStream struct {
	BatchCount            *int    `pulumi:"batchCount"`
	BatchSize             *int    `pulumi:"batchSize"`
	BufferDuration        *int    `pulumi:"bufferDuration"`
	DatetimeFormat        *string `pulumi:"datetimeFormat"`
	Encoding              *string `pulumi:"encoding"`
	File                  string  `pulumi:"file"`
	FileFingerprintLines  *string `pulumi:"fileFingerprintLines"`
	InitialPosition       *string `pulumi:"initialPosition"`
	LogGroupName          string  `pulumi:"logGroupName"`
	MultilineStartPattern *string `pulumi:"multilineStartPattern"`
	TimeZone              *string `pulumi:"timeZone"`
}

// StaticWebLayerCloudwatchConfigurationLogStreamInput is an input type that accepts StaticWebLayerCloudwatchConfigurationLogStreamArgs and StaticWebLayerCloudwatchConfigurationLogStreamOutput values.
// You can construct a concrete instance of `StaticWebLayerCloudwatchConfigurationLogStreamInput` via:
//
//          StaticWebLayerCloudwatchConfigurationLogStreamArgs{...}
type StaticWebLayerCloudwatchConfigurationLogStreamInput interface {
	pulumi.Input

	ToStaticWebLayerCloudwatchConfigurationLogStreamOutput() StaticWebLayerCloudwatchConfigurationLogStreamOutput
	ToStaticWebLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Context) StaticWebLayerCloudwatchConfigurationLogStreamOutput
}

type StaticWebLayerCloudwatchConfigurationLogStreamArgs struct {
	BatchCount            pulumi.IntPtrInput    `pulumi:"batchCount"`
	BatchSize             pulumi.IntPtrInput    `pulumi:"batchSize"`
	BufferDuration        pulumi.IntPtrInput    `pulumi:"bufferDuration"`
	DatetimeFormat        pulumi.StringPtrInput `pulumi:"datetimeFormat"`
	Encoding              pulumi.StringPtrInput `pulumi:"encoding"`
	File                  pulumi.StringInput    `pulumi:"file"`
	FileFingerprintLines  pulumi.StringPtrInput `pulumi:"fileFingerprintLines"`
	InitialPosition       pulumi.StringPtrInput `pulumi:"initialPosition"`
	LogGroupName          pulumi.StringInput    `pulumi:"logGroupName"`
	MultilineStartPattern pulumi.StringPtrInput `pulumi:"multilineStartPattern"`
	TimeZone              pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (StaticWebLayerCloudwatchConfigurationLogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i StaticWebLayerCloudwatchConfigurationLogStreamArgs) ToStaticWebLayerCloudwatchConfigurationLogStreamOutput() StaticWebLayerCloudwatchConfigurationLogStreamOutput {
	return i.ToStaticWebLayerCloudwatchConfigurationLogStreamOutputWithContext(context.Background())
}

func (i StaticWebLayerCloudwatchConfigurationLogStreamArgs) ToStaticWebLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerCloudwatchConfigurationLogStreamOutput)
}

// StaticWebLayerCloudwatchConfigurationLogStreamArrayInput is an input type that accepts StaticWebLayerCloudwatchConfigurationLogStreamArray and StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput values.
// You can construct a concrete instance of `StaticWebLayerCloudwatchConfigurationLogStreamArrayInput` via:
//
//          StaticWebLayerCloudwatchConfigurationLogStreamArray{ StaticWebLayerCloudwatchConfigurationLogStreamArgs{...} }
type StaticWebLayerCloudwatchConfigurationLogStreamArrayInput interface {
	pulumi.Input

	ToStaticWebLayerCloudwatchConfigurationLogStreamArrayOutput() StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput
	ToStaticWebLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Context) StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput
}

type StaticWebLayerCloudwatchConfigurationLogStreamArray []StaticWebLayerCloudwatchConfigurationLogStreamInput

func (StaticWebLayerCloudwatchConfigurationLogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticWebLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (i StaticWebLayerCloudwatchConfigurationLogStreamArray) ToStaticWebLayerCloudwatchConfigurationLogStreamArrayOutput() StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput {
	return i.ToStaticWebLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(context.Background())
}

func (i StaticWebLayerCloudwatchConfigurationLogStreamArray) ToStaticWebLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput)
}

type StaticWebLayerCloudwatchConfigurationLogStreamOutput struct{ *pulumi.OutputState }

func (StaticWebLayerCloudwatchConfigurationLogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) ToStaticWebLayerCloudwatchConfigurationLogStreamOutput() StaticWebLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) ToStaticWebLayerCloudwatchConfigurationLogStreamOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationLogStreamOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) BatchCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *int { return v.BatchCount }).(pulumi.IntPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) BufferDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *int { return v.BufferDuration }).(pulumi.IntPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) DatetimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *string { return v.DatetimeFormat }).(pulumi.StringPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) File() pulumi.StringOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) string { return v.File }).(pulumi.StringOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) FileFingerprintLines() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *string { return v.FileFingerprintLines }).(pulumi.StringPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) InitialPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *string { return v.InitialPosition }).(pulumi.StringPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) string { return v.LogGroupName }).(pulumi.StringOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) MultilineStartPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *string { return v.MultilineStartPattern }).(pulumi.StringPtrOutput)
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerCloudwatchConfigurationLogStream) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput struct{ *pulumi.OutputState }

func (StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticWebLayerCloudwatchConfigurationLogStream)(nil)).Elem()
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput) ToStaticWebLayerCloudwatchConfigurationLogStreamArrayOutput() StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput) ToStaticWebLayerCloudwatchConfigurationLogStreamArrayOutputWithContext(ctx context.Context) StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput {
	return o
}

func (o StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput) Index(i pulumi.IntInput) StaticWebLayerCloudwatchConfigurationLogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticWebLayerCloudwatchConfigurationLogStream {
		return vs[0].([]StaticWebLayerCloudwatchConfigurationLogStream)[vs[1].(int)]
	}).(StaticWebLayerCloudwatchConfigurationLogStreamOutput)
}

type StaticWebLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops *int `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint string `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks int `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel *string `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size int `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type *string `pulumi:"type"`
}

// StaticWebLayerEbsVolumeInput is an input type that accepts StaticWebLayerEbsVolumeArgs and StaticWebLayerEbsVolumeOutput values.
// You can construct a concrete instance of `StaticWebLayerEbsVolumeInput` via:
//
//          StaticWebLayerEbsVolumeArgs{...}
type StaticWebLayerEbsVolumeInput interface {
	pulumi.Input

	ToStaticWebLayerEbsVolumeOutput() StaticWebLayerEbsVolumeOutput
	ToStaticWebLayerEbsVolumeOutputWithContext(context.Context) StaticWebLayerEbsVolumeOutput
}

type StaticWebLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// For PIOPS volumes, the IOPS per disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The path to mount the EBS volume on the layer's instances.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// The number of disks to use for the EBS volume.
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	// The RAID level to use for the volume.
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	// The size of the volume in gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StaticWebLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerEbsVolume)(nil)).Elem()
}

func (i StaticWebLayerEbsVolumeArgs) ToStaticWebLayerEbsVolumeOutput() StaticWebLayerEbsVolumeOutput {
	return i.ToStaticWebLayerEbsVolumeOutputWithContext(context.Background())
}

func (i StaticWebLayerEbsVolumeArgs) ToStaticWebLayerEbsVolumeOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerEbsVolumeOutput)
}

// StaticWebLayerEbsVolumeArrayInput is an input type that accepts StaticWebLayerEbsVolumeArray and StaticWebLayerEbsVolumeArrayOutput values.
// You can construct a concrete instance of `StaticWebLayerEbsVolumeArrayInput` via:
//
//          StaticWebLayerEbsVolumeArray{ StaticWebLayerEbsVolumeArgs{...} }
type StaticWebLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToStaticWebLayerEbsVolumeArrayOutput() StaticWebLayerEbsVolumeArrayOutput
	ToStaticWebLayerEbsVolumeArrayOutputWithContext(context.Context) StaticWebLayerEbsVolumeArrayOutput
}

type StaticWebLayerEbsVolumeArray []StaticWebLayerEbsVolumeInput

func (StaticWebLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticWebLayerEbsVolume)(nil)).Elem()
}

func (i StaticWebLayerEbsVolumeArray) ToStaticWebLayerEbsVolumeArrayOutput() StaticWebLayerEbsVolumeArrayOutput {
	return i.ToStaticWebLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i StaticWebLayerEbsVolumeArray) ToStaticWebLayerEbsVolumeArrayOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerEbsVolumeArrayOutput)
}

type StaticWebLayerEbsVolumeOutput struct{ *pulumi.OutputState }

func (StaticWebLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerEbsVolume)(nil)).Elem()
}

func (o StaticWebLayerEbsVolumeOutput) ToStaticWebLayerEbsVolumeOutput() StaticWebLayerEbsVolumeOutput {
	return o
}

func (o StaticWebLayerEbsVolumeOutput) ToStaticWebLayerEbsVolumeOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeOutput {
	return o
}

func (o StaticWebLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StaticWebLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// For PIOPS volumes, the IOPS per disk.
func (o StaticWebLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StaticWebLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The path to mount the EBS volume on the layer's instances.
func (o StaticWebLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v StaticWebLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

// The number of disks to use for the EBS volume.
func (o StaticWebLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func(v StaticWebLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

// The RAID level to use for the volume.
func (o StaticWebLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o StaticWebLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v StaticWebLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

// The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
func (o StaticWebLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticWebLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StaticWebLayerEbsVolumeArrayOutput struct{ *pulumi.OutputState }

func (StaticWebLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticWebLayerEbsVolume)(nil)).Elem()
}

func (o StaticWebLayerEbsVolumeArrayOutput) ToStaticWebLayerEbsVolumeArrayOutput() StaticWebLayerEbsVolumeArrayOutput {
	return o
}

func (o StaticWebLayerEbsVolumeArrayOutput) ToStaticWebLayerEbsVolumeArrayOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeArrayOutput {
	return o
}

func (o StaticWebLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) StaticWebLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticWebLayerEbsVolume {
		return vs[0].([]StaticWebLayerEbsVolume)[vs[1].(int)]
	}).(StaticWebLayerEbsVolumeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAppSourceInput)(nil)).Elem(), ApplicationAppSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAppSourceArrayInput)(nil)).Elem(), ApplicationAppSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentInput)(nil)).Elem(), ApplicationEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentArrayInput)(nil)).Elem(), ApplicationEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSslConfigurationInput)(nil)).Elem(), ApplicationSslConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSslConfigurationArrayInput)(nil)).Elem(), ApplicationSslConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerCloudwatchConfigurationInput)(nil)).Elem(), CustomLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), CustomLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), CustomLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), CustomLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerEbsVolumeInput)(nil)).Elem(), CustomLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerEbsVolumeArrayInput)(nil)).Elem(), CustomLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerCloudwatchConfigurationInput)(nil)).Elem(), EcsClusterLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), EcsClusterLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), EcsClusterLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), EcsClusterLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerEbsVolumeInput)(nil)).Elem(), EcsClusterLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerEbsVolumeArrayInput)(nil)).Elem(), EcsClusterLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GangliaLayerCloudwatchConfigurationInput)(nil)).Elem(), GangliaLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GangliaLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), GangliaLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GangliaLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), GangliaLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GangliaLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), GangliaLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GangliaLayerEbsVolumeInput)(nil)).Elem(), GangliaLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GangliaLayerEbsVolumeArrayInput)(nil)).Elem(), GangliaLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaproxyLayerCloudwatchConfigurationInput)(nil)).Elem(), HaproxyLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaproxyLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), HaproxyLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaproxyLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), HaproxyLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaproxyLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), HaproxyLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaproxyLayerEbsVolumeInput)(nil)).Elem(), HaproxyLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaproxyLayerEbsVolumeArrayInput)(nil)).Elem(), HaproxyLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEbsBlockDeviceInput)(nil)).Elem(), InstanceEbsBlockDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEbsBlockDeviceArrayInput)(nil)).Elem(), InstanceEbsBlockDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEphemeralBlockDeviceInput)(nil)).Elem(), InstanceEphemeralBlockDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEphemeralBlockDeviceArrayInput)(nil)).Elem(), InstanceEphemeralBlockDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRootBlockDeviceInput)(nil)).Elem(), InstanceRootBlockDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRootBlockDeviceArrayInput)(nil)).Elem(), InstanceRootBlockDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerCloudwatchConfigurationInput)(nil)).Elem(), JavaAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), JavaAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), JavaAppLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), JavaAppLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerEbsVolumeInput)(nil)).Elem(), JavaAppLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JavaAppLayerEbsVolumeArrayInput)(nil)).Elem(), JavaAppLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemcachedLayerCloudwatchConfigurationInput)(nil)).Elem(), MemcachedLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemcachedLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), MemcachedLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemcachedLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), MemcachedLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemcachedLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), MemcachedLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemcachedLayerEbsVolumeInput)(nil)).Elem(), MemcachedLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemcachedLayerEbsVolumeArrayInput)(nil)).Elem(), MemcachedLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlLayerCloudwatchConfigurationInput)(nil)).Elem(), MysqlLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), MysqlLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), MysqlLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), MysqlLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlLayerEbsVolumeInput)(nil)).Elem(), MysqlLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlLayerEbsVolumeArrayInput)(nil)).Elem(), MysqlLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerCloudwatchConfigurationInput)(nil)).Elem(), NodejsAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), NodejsAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), NodejsAppLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), NodejsAppLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerEbsVolumeInput)(nil)).Elem(), NodejsAppLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerEbsVolumeArrayInput)(nil)).Elem(), NodejsAppLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerCloudwatchConfigurationInput)(nil)).Elem(), PhpAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), PhpAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), PhpAppLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), PhpAppLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerEbsVolumeInput)(nil)).Elem(), PhpAppLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerEbsVolumeArrayInput)(nil)).Elem(), PhpAppLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerCloudwatchConfigurationInput)(nil)).Elem(), RailsAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), RailsAppLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), RailsAppLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), RailsAppLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerEbsVolumeInput)(nil)).Elem(), RailsAppLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerEbsVolumeArrayInput)(nil)).Elem(), RailsAppLayerEbsVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackCustomCookbooksSourceInput)(nil)).Elem(), StackCustomCookbooksSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackCustomCookbooksSourceArrayInput)(nil)).Elem(), StackCustomCookbooksSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebLayerCloudwatchConfigurationInput)(nil)).Elem(), StaticWebLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebLayerCloudwatchConfigurationPtrInput)(nil)).Elem(), StaticWebLayerCloudwatchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebLayerCloudwatchConfigurationLogStreamInput)(nil)).Elem(), StaticWebLayerCloudwatchConfigurationLogStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebLayerCloudwatchConfigurationLogStreamArrayInput)(nil)).Elem(), StaticWebLayerCloudwatchConfigurationLogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebLayerEbsVolumeInput)(nil)).Elem(), StaticWebLayerEbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebLayerEbsVolumeArrayInput)(nil)).Elem(), StaticWebLayerEbsVolumeArray{})
	pulumi.RegisterOutputType(ApplicationAppSourceOutput{})
	pulumi.RegisterOutputType(ApplicationAppSourceArrayOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSslConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationSslConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CustomLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(CustomLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CustomLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(CustomLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(CustomLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(CustomLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(GangliaLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(GangliaLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GangliaLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(GangliaLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(GangliaLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(GangliaLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(HaproxyLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(HaproxyLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(HaproxyLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(HaproxyLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(HaproxyLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(HaproxyLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(JavaAppLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(JavaAppLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(JavaAppLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(JavaAppLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(JavaAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(JavaAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(MemcachedLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(MemcachedLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(MemcachedLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(MemcachedLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(MemcachedLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(MemcachedLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(MysqlLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(MysqlLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(MysqlLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(MysqlLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(MysqlLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(MysqlLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(PhpAppLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(PhpAppLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PhpAppLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(PhpAppLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(PhpAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(PhpAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(RailsAppLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(RailsAppLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RailsAppLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(RailsAppLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(RailsAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(RailsAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(StackCustomCookbooksSourceOutput{})
	pulumi.RegisterOutputType(StackCustomCookbooksSourceArrayOutput{})
	pulumi.RegisterOutputType(StaticWebLayerCloudwatchConfigurationOutput{})
	pulumi.RegisterOutputType(StaticWebLayerCloudwatchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(StaticWebLayerCloudwatchConfigurationLogStreamOutput{})
	pulumi.RegisterOutputType(StaticWebLayerCloudwatchConfigurationLogStreamArrayOutput{})
	pulumi.RegisterOutputType(StaticWebLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(StaticWebLayerEbsVolumeArrayOutput{})
}
