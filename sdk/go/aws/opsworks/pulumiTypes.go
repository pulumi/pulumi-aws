// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package opsworks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ApplicationAppSource struct {
	Password *string `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision *string `pulumi:"revision"`
	SshKey *string `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type string `pulumi:"type"`
	// The URL where the app resource can be found.
	Url *string `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username *string `pulumi:"username"`
}

type ApplicationAppSourceInput interface {
	pulumi.Input

	ToApplicationAppSourceOutput() ApplicationAppSourceOutput
	ToApplicationAppSourceOutputWithContext(context.Context) ApplicationAppSourceOutput
}

type ApplicationAppSourceArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type pulumi.StringInput `pulumi:"type"`
	// The URL where the app resource can be found.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplicationAppSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return i.ToApplicationAppSourceOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceOutput)
}

type ApplicationAppSourceArrayInput interface {
	pulumi.Input

	ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput
	ToApplicationAppSourceArrayOutputWithContext(context.Context) ApplicationAppSourceArrayOutput
}

type ApplicationAppSourceArray []ApplicationAppSourceInput

func (ApplicationAppSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return i.ToApplicationAppSourceArrayOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceArrayOutput)
}

type ApplicationAppSourceOutput struct { *pulumi.OutputState }

func (ApplicationAppSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return o
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return o
}

func (o ApplicationAppSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// For sources that are version-aware, the revision to use.
func (o ApplicationAppSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

func (o ApplicationAppSourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The type of source to use. For example, "archive".
func (o ApplicationAppSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationAppSource) string { return v.Type }).(pulumi.StringOutput)
}

// The URL where the app resource can be found.
func (o ApplicationAppSourceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Username to use when authenticating to the source.
func (o ApplicationAppSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplicationAppSourceArrayOutput struct { *pulumi.OutputState}

func (ApplicationAppSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) Index(i pulumi.IntInput) ApplicationAppSourceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ApplicationAppSource {
		return vs[0].([]ApplicationAppSource)[vs[1].(int)]
	}).(ApplicationAppSourceOutput)
}

type ApplicationEnvironment struct {
	Key string `pulumi:"key"`
	Secure *bool `pulumi:"secure"`
	Value string `pulumi:"value"`
}

type ApplicationEnvironmentInput interface {
	pulumi.Input

	ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput
	ToApplicationEnvironmentOutputWithContext(context.Context) ApplicationEnvironmentOutput
}

type ApplicationEnvironmentArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return i.ToApplicationEnvironmentOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentOutput)
}

type ApplicationEnvironmentArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput
	ToApplicationEnvironmentArrayOutputWithContext(context.Context) ApplicationEnvironmentArrayOutput
}

type ApplicationEnvironmentArray []ApplicationEnvironmentInput

func (ApplicationEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return i.ToApplicationEnvironmentArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentArrayOutput)
}

type ApplicationEnvironmentOutput struct { *pulumi.OutputState }

func (ApplicationEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return o
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return o
}

func (o ApplicationEnvironmentOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationEnvironment) string { return v.Key }).(pulumi.StringOutput)
}

func (o ApplicationEnvironmentOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ApplicationEnvironment) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

func (o ApplicationEnvironmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationEnvironment) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationEnvironmentArrayOutput struct { *pulumi.OutputState}

func (ApplicationEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ApplicationEnvironment {
		return vs[0].([]ApplicationEnvironment)[vs[1].(int)]
	}).(ApplicationEnvironmentOutput)
}

type ApplicationSslConfiguration struct {
	Certificate string `pulumi:"certificate"`
	Chain *string `pulumi:"chain"`
	PrivateKey string `pulumi:"privateKey"`
}

type ApplicationSslConfigurationInput interface {
	pulumi.Input

	ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput
	ToApplicationSslConfigurationOutputWithContext(context.Context) ApplicationSslConfigurationOutput
}

type ApplicationSslConfigurationArgs struct {
	Certificate pulumi.StringInput `pulumi:"certificate"`
	Chain pulumi.StringPtrInput `pulumi:"chain"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (ApplicationSslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return i.ToApplicationSslConfigurationOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationOutput)
}

type ApplicationSslConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput
	ToApplicationSslConfigurationArrayOutputWithContext(context.Context) ApplicationSslConfigurationArrayOutput
}

type ApplicationSslConfigurationArray []ApplicationSslConfigurationInput

func (ApplicationSslConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return i.ToApplicationSslConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationArrayOutput)
}

type ApplicationSslConfigurationOutput struct { *pulumi.OutputState }

func (ApplicationSslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return o
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return o
}

func (o ApplicationSslConfigurationOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationSslConfiguration) string { return v.Certificate }).(pulumi.StringOutput)
}

func (o ApplicationSslConfigurationOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationSslConfiguration) *string { return v.Chain }).(pulumi.StringPtrOutput)
}

func (o ApplicationSslConfigurationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationSslConfiguration) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type ApplicationSslConfigurationArrayOutput struct { *pulumi.OutputState}

func (ApplicationSslConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationSslConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ApplicationSslConfiguration {
		return vs[0].([]ApplicationSslConfiguration)[vs[1].(int)]
	}).(ApplicationSslConfigurationOutput)
}

type CustomLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type CustomLayerEbsVolumeInput interface {
	pulumi.Input

	ToCustomLayerEbsVolumeOutput() CustomLayerEbsVolumeOutput
	ToCustomLayerEbsVolumeOutputWithContext(context.Context) CustomLayerEbsVolumeOutput
}

type CustomLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerEbsVolume)(nil)).Elem()
}

func (i CustomLayerEbsVolumeArgs) ToCustomLayerEbsVolumeOutput() CustomLayerEbsVolumeOutput {
	return i.ToCustomLayerEbsVolumeOutputWithContext(context.Background())
}

func (i CustomLayerEbsVolumeArgs) ToCustomLayerEbsVolumeOutputWithContext(ctx context.Context) CustomLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerEbsVolumeOutput)
}

type CustomLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToCustomLayerEbsVolumeArrayOutput() CustomLayerEbsVolumeArrayOutput
	ToCustomLayerEbsVolumeArrayOutputWithContext(context.Context) CustomLayerEbsVolumeArrayOutput
}

type CustomLayerEbsVolumeArray []CustomLayerEbsVolumeInput

func (CustomLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLayerEbsVolume)(nil)).Elem()
}

func (i CustomLayerEbsVolumeArray) ToCustomLayerEbsVolumeArrayOutput() CustomLayerEbsVolumeArrayOutput {
	return i.ToCustomLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i CustomLayerEbsVolumeArray) ToCustomLayerEbsVolumeArrayOutputWithContext(ctx context.Context) CustomLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerEbsVolumeArrayOutput)
}

type CustomLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (CustomLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLayerEbsVolume)(nil)).Elem()
}

func (o CustomLayerEbsVolumeOutput) ToCustomLayerEbsVolumeOutput() CustomLayerEbsVolumeOutput {
	return o
}

func (o CustomLayerEbsVolumeOutput) ToCustomLayerEbsVolumeOutputWithContext(ctx context.Context) CustomLayerEbsVolumeOutput {
	return o
}

func (o CustomLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v CustomLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o CustomLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v CustomLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o CustomLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v CustomLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o CustomLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v CustomLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o CustomLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CustomLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o CustomLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v CustomLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o CustomLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CustomLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (CustomLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLayerEbsVolume)(nil)).Elem()
}

func (o CustomLayerEbsVolumeArrayOutput) ToCustomLayerEbsVolumeArrayOutput() CustomLayerEbsVolumeArrayOutput {
	return o
}

func (o CustomLayerEbsVolumeArrayOutput) ToCustomLayerEbsVolumeArrayOutputWithContext(ctx context.Context) CustomLayerEbsVolumeArrayOutput {
	return o
}

func (o CustomLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) CustomLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) CustomLayerEbsVolume {
		return vs[0].([]CustomLayerEbsVolume)[vs[1].(int)]
	}).(CustomLayerEbsVolumeOutput)
}

type GangliaLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type GangliaLayerEbsVolumeInput interface {
	pulumi.Input

	ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput
	ToGangliaLayerEbsVolumeOutputWithContext(context.Context) GangliaLayerEbsVolumeOutput
}

type GangliaLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GangliaLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerEbsVolume)(nil)).Elem()
}

func (i GangliaLayerEbsVolumeArgs) ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput {
	return i.ToGangliaLayerEbsVolumeOutputWithContext(context.Background())
}

func (i GangliaLayerEbsVolumeArgs) ToGangliaLayerEbsVolumeOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerEbsVolumeOutput)
}

type GangliaLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput
	ToGangliaLayerEbsVolumeArrayOutputWithContext(context.Context) GangliaLayerEbsVolumeArrayOutput
}

type GangliaLayerEbsVolumeArray []GangliaLayerEbsVolumeInput

func (GangliaLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerEbsVolume)(nil)).Elem()
}

func (i GangliaLayerEbsVolumeArray) ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput {
	return i.ToGangliaLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i GangliaLayerEbsVolumeArray) ToGangliaLayerEbsVolumeArrayOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerEbsVolumeArrayOutput)
}

type GangliaLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (GangliaLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerEbsVolume)(nil)).Elem()
}

func (o GangliaLayerEbsVolumeOutput) ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput {
	return o
}

func (o GangliaLayerEbsVolumeOutput) ToGangliaLayerEbsVolumeOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeOutput {
	return o
}

func (o GangliaLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o GangliaLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o GangliaLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o GangliaLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o GangliaLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o GangliaLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GangliaLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GangliaLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (GangliaLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerEbsVolume)(nil)).Elem()
}

func (o GangliaLayerEbsVolumeArrayOutput) ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput {
	return o
}

func (o GangliaLayerEbsVolumeArrayOutput) ToGangliaLayerEbsVolumeArrayOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeArrayOutput {
	return o
}

func (o GangliaLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) GangliaLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GangliaLayerEbsVolume {
		return vs[0].([]GangliaLayerEbsVolume)[vs[1].(int)]
	}).(GangliaLayerEbsVolumeOutput)
}

type HaproxyLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type HaproxyLayerEbsVolumeInput interface {
	pulumi.Input

	ToHaproxyLayerEbsVolumeOutput() HaproxyLayerEbsVolumeOutput
	ToHaproxyLayerEbsVolumeOutputWithContext(context.Context) HaproxyLayerEbsVolumeOutput
}

type HaproxyLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HaproxyLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerEbsVolume)(nil)).Elem()
}

func (i HaproxyLayerEbsVolumeArgs) ToHaproxyLayerEbsVolumeOutput() HaproxyLayerEbsVolumeOutput {
	return i.ToHaproxyLayerEbsVolumeOutputWithContext(context.Background())
}

func (i HaproxyLayerEbsVolumeArgs) ToHaproxyLayerEbsVolumeOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerEbsVolumeOutput)
}

type HaproxyLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToHaproxyLayerEbsVolumeArrayOutput() HaproxyLayerEbsVolumeArrayOutput
	ToHaproxyLayerEbsVolumeArrayOutputWithContext(context.Context) HaproxyLayerEbsVolumeArrayOutput
}

type HaproxyLayerEbsVolumeArray []HaproxyLayerEbsVolumeInput

func (HaproxyLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaproxyLayerEbsVolume)(nil)).Elem()
}

func (i HaproxyLayerEbsVolumeArray) ToHaproxyLayerEbsVolumeArrayOutput() HaproxyLayerEbsVolumeArrayOutput {
	return i.ToHaproxyLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i HaproxyLayerEbsVolumeArray) ToHaproxyLayerEbsVolumeArrayOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaproxyLayerEbsVolumeArrayOutput)
}

type HaproxyLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (HaproxyLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaproxyLayerEbsVolume)(nil)).Elem()
}

func (o HaproxyLayerEbsVolumeOutput) ToHaproxyLayerEbsVolumeOutput() HaproxyLayerEbsVolumeOutput {
	return o
}

func (o HaproxyLayerEbsVolumeOutput) ToHaproxyLayerEbsVolumeOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeOutput {
	return o
}

func (o HaproxyLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v HaproxyLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o HaproxyLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v HaproxyLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o HaproxyLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v HaproxyLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o HaproxyLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v HaproxyLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o HaproxyLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v HaproxyLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o HaproxyLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v HaproxyLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o HaproxyLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v HaproxyLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HaproxyLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (HaproxyLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaproxyLayerEbsVolume)(nil)).Elem()
}

func (o HaproxyLayerEbsVolumeArrayOutput) ToHaproxyLayerEbsVolumeArrayOutput() HaproxyLayerEbsVolumeArrayOutput {
	return o
}

func (o HaproxyLayerEbsVolumeArrayOutput) ToHaproxyLayerEbsVolumeArrayOutputWithContext(ctx context.Context) HaproxyLayerEbsVolumeArrayOutput {
	return o
}

func (o HaproxyLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) HaproxyLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) HaproxyLayerEbsVolume {
		return vs[0].([]HaproxyLayerEbsVolume)[vs[1].(int)]
	}).(HaproxyLayerEbsVolumeOutput)
}

type InstanceEbsBlockDevice struct {
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	DeviceName string `pulumi:"deviceName"`
	Iops *int `pulumi:"iops"`
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeSize *int `pulumi:"volumeSize"`
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput
	ToInstanceEbsBlockDeviceOutputWithContext(context.Context) InstanceEbsBlockDeviceOutput
}

type InstanceEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return i.ToInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceOutput)
}

type InstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput
	ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceArrayOutput
}

type InstanceEbsBlockDeviceArray []InstanceEbsBlockDeviceInput

func (InstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return i.ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArrayOutput)
}

type InstanceEbsBlockDeviceOutput struct { *pulumi.OutputState }

func (InstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o InstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (InstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceEbsBlockDevice {
		return vs[0].([]InstanceEbsBlockDevice)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceOutput)
}

type InstanceEphemeralBlockDevice struct {
	DeviceName string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type InstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput
	ToInstanceEphemeralBlockDeviceOutputWithContext(context.Context) InstanceEphemeralBlockDeviceOutput
}

type InstanceEphemeralBlockDeviceArgs struct {
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return i.ToInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput
	ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArrayOutput
}

type InstanceEphemeralBlockDeviceArray []InstanceEphemeralBlockDeviceInput

func (InstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArrayOutput)
}

type InstanceEphemeralBlockDeviceOutput struct { *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o InstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type InstanceEphemeralBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (InstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceEphemeralBlockDevice {
		return vs[0].([]InstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceRootBlockDevice struct {
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	Iops *int `pulumi:"iops"`
	VolumeSize *int `pulumi:"volumeSize"`
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput
	ToInstanceRootBlockDeviceOutputWithContext(context.Context) InstanceRootBlockDeviceOutput
}

type InstanceRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

type InstanceRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput
	ToInstanceRootBlockDeviceArrayOutputWithContext(context.Context) InstanceRootBlockDeviceArrayOutput
}

type InstanceRootBlockDeviceArray []InstanceRootBlockDeviceInput

func (InstanceRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArray) ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput {
	return i.ToInstanceRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArray) ToInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceArrayOutput)
}

type InstanceRootBlockDeviceOutput struct { *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (InstanceRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceArrayOutput) ToInstanceRootBlockDeviceArrayOutput() InstanceRootBlockDeviceArrayOutput {
	return o
}

func (o InstanceRootBlockDeviceArrayOutput) ToInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArrayOutput {
	return o
}

func (o InstanceRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceRootBlockDevice {
		return vs[0].([]InstanceRootBlockDevice)[vs[1].(int)]
	}).(InstanceRootBlockDeviceOutput)
}

type JavaAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type JavaAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToJavaAppLayerEbsVolumeOutput() JavaAppLayerEbsVolumeOutput
	ToJavaAppLayerEbsVolumeOutputWithContext(context.Context) JavaAppLayerEbsVolumeOutput
}

type JavaAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (JavaAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerEbsVolume)(nil)).Elem()
}

func (i JavaAppLayerEbsVolumeArgs) ToJavaAppLayerEbsVolumeOutput() JavaAppLayerEbsVolumeOutput {
	return i.ToJavaAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i JavaAppLayerEbsVolumeArgs) ToJavaAppLayerEbsVolumeOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerEbsVolumeOutput)
}

type JavaAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToJavaAppLayerEbsVolumeArrayOutput() JavaAppLayerEbsVolumeArrayOutput
	ToJavaAppLayerEbsVolumeArrayOutputWithContext(context.Context) JavaAppLayerEbsVolumeArrayOutput
}

type JavaAppLayerEbsVolumeArray []JavaAppLayerEbsVolumeInput

func (JavaAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JavaAppLayerEbsVolume)(nil)).Elem()
}

func (i JavaAppLayerEbsVolumeArray) ToJavaAppLayerEbsVolumeArrayOutput() JavaAppLayerEbsVolumeArrayOutput {
	return i.ToJavaAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i JavaAppLayerEbsVolumeArray) ToJavaAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaAppLayerEbsVolumeArrayOutput)
}

type JavaAppLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (JavaAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaAppLayerEbsVolume)(nil)).Elem()
}

func (o JavaAppLayerEbsVolumeOutput) ToJavaAppLayerEbsVolumeOutput() JavaAppLayerEbsVolumeOutput {
	return o
}

func (o JavaAppLayerEbsVolumeOutput) ToJavaAppLayerEbsVolumeOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeOutput {
	return o
}

func (o JavaAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v JavaAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o JavaAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v JavaAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o JavaAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v JavaAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o JavaAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v JavaAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o JavaAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v JavaAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o JavaAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v JavaAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o JavaAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v JavaAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type JavaAppLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (JavaAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JavaAppLayerEbsVolume)(nil)).Elem()
}

func (o JavaAppLayerEbsVolumeArrayOutput) ToJavaAppLayerEbsVolumeArrayOutput() JavaAppLayerEbsVolumeArrayOutput {
	return o
}

func (o JavaAppLayerEbsVolumeArrayOutput) ToJavaAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) JavaAppLayerEbsVolumeArrayOutput {
	return o
}

func (o JavaAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) JavaAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) JavaAppLayerEbsVolume {
		return vs[0].([]JavaAppLayerEbsVolume)[vs[1].(int)]
	}).(JavaAppLayerEbsVolumeOutput)
}

type MemcachedLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type MemcachedLayerEbsVolumeInput interface {
	pulumi.Input

	ToMemcachedLayerEbsVolumeOutput() MemcachedLayerEbsVolumeOutput
	ToMemcachedLayerEbsVolumeOutputWithContext(context.Context) MemcachedLayerEbsVolumeOutput
}

type MemcachedLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MemcachedLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerEbsVolume)(nil)).Elem()
}

func (i MemcachedLayerEbsVolumeArgs) ToMemcachedLayerEbsVolumeOutput() MemcachedLayerEbsVolumeOutput {
	return i.ToMemcachedLayerEbsVolumeOutputWithContext(context.Background())
}

func (i MemcachedLayerEbsVolumeArgs) ToMemcachedLayerEbsVolumeOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerEbsVolumeOutput)
}

type MemcachedLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToMemcachedLayerEbsVolumeArrayOutput() MemcachedLayerEbsVolumeArrayOutput
	ToMemcachedLayerEbsVolumeArrayOutputWithContext(context.Context) MemcachedLayerEbsVolumeArrayOutput
}

type MemcachedLayerEbsVolumeArray []MemcachedLayerEbsVolumeInput

func (MemcachedLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MemcachedLayerEbsVolume)(nil)).Elem()
}

func (i MemcachedLayerEbsVolumeArray) ToMemcachedLayerEbsVolumeArrayOutput() MemcachedLayerEbsVolumeArrayOutput {
	return i.ToMemcachedLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i MemcachedLayerEbsVolumeArray) ToMemcachedLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemcachedLayerEbsVolumeArrayOutput)
}

type MemcachedLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (MemcachedLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemcachedLayerEbsVolume)(nil)).Elem()
}

func (o MemcachedLayerEbsVolumeOutput) ToMemcachedLayerEbsVolumeOutput() MemcachedLayerEbsVolumeOutput {
	return o
}

func (o MemcachedLayerEbsVolumeOutput) ToMemcachedLayerEbsVolumeOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeOutput {
	return o
}

func (o MemcachedLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MemcachedLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o MemcachedLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v MemcachedLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o MemcachedLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v MemcachedLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o MemcachedLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v MemcachedLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o MemcachedLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MemcachedLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o MemcachedLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v MemcachedLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o MemcachedLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MemcachedLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MemcachedLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (MemcachedLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MemcachedLayerEbsVolume)(nil)).Elem()
}

func (o MemcachedLayerEbsVolumeArrayOutput) ToMemcachedLayerEbsVolumeArrayOutput() MemcachedLayerEbsVolumeArrayOutput {
	return o
}

func (o MemcachedLayerEbsVolumeArrayOutput) ToMemcachedLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MemcachedLayerEbsVolumeArrayOutput {
	return o
}

func (o MemcachedLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) MemcachedLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) MemcachedLayerEbsVolume {
		return vs[0].([]MemcachedLayerEbsVolume)[vs[1].(int)]
	}).(MemcachedLayerEbsVolumeOutput)
}

type MysqlLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type MysqlLayerEbsVolumeInput interface {
	pulumi.Input

	ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput
	ToMysqlLayerEbsVolumeOutputWithContext(context.Context) MysqlLayerEbsVolumeOutput
}

type MysqlLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MysqlLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerEbsVolume)(nil)).Elem()
}

func (i MysqlLayerEbsVolumeArgs) ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput {
	return i.ToMysqlLayerEbsVolumeOutputWithContext(context.Background())
}

func (i MysqlLayerEbsVolumeArgs) ToMysqlLayerEbsVolumeOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerEbsVolumeOutput)
}

type MysqlLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput
	ToMysqlLayerEbsVolumeArrayOutputWithContext(context.Context) MysqlLayerEbsVolumeArrayOutput
}

type MysqlLayerEbsVolumeArray []MysqlLayerEbsVolumeInput

func (MysqlLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerEbsVolume)(nil)).Elem()
}

func (i MysqlLayerEbsVolumeArray) ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput {
	return i.ToMysqlLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i MysqlLayerEbsVolumeArray) ToMysqlLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerEbsVolumeArrayOutput)
}

type MysqlLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (MysqlLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerEbsVolume)(nil)).Elem()
}

func (o MysqlLayerEbsVolumeOutput) ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput {
	return o
}

func (o MysqlLayerEbsVolumeOutput) ToMysqlLayerEbsVolumeOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeOutput {
	return o
}

func (o MysqlLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o MysqlLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o MysqlLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o MysqlLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o MysqlLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o MysqlLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o MysqlLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MysqlLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (MysqlLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerEbsVolume)(nil)).Elem()
}

func (o MysqlLayerEbsVolumeArrayOutput) ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput {
	return o
}

func (o MysqlLayerEbsVolumeArrayOutput) ToMysqlLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeArrayOutput {
	return o
}

func (o MysqlLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) MysqlLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) MysqlLayerEbsVolume {
		return vs[0].([]MysqlLayerEbsVolume)[vs[1].(int)]
	}).(MysqlLayerEbsVolumeOutput)
}

type NodejsAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type NodejsAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToNodejsAppLayerEbsVolumeOutput() NodejsAppLayerEbsVolumeOutput
	ToNodejsAppLayerEbsVolumeOutputWithContext(context.Context) NodejsAppLayerEbsVolumeOutput
}

type NodejsAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NodejsAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (i NodejsAppLayerEbsVolumeArgs) ToNodejsAppLayerEbsVolumeOutput() NodejsAppLayerEbsVolumeOutput {
	return i.ToNodejsAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i NodejsAppLayerEbsVolumeArgs) ToNodejsAppLayerEbsVolumeOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerEbsVolumeOutput)
}

type NodejsAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToNodejsAppLayerEbsVolumeArrayOutput() NodejsAppLayerEbsVolumeArrayOutput
	ToNodejsAppLayerEbsVolumeArrayOutputWithContext(context.Context) NodejsAppLayerEbsVolumeArrayOutput
}

type NodejsAppLayerEbsVolumeArray []NodejsAppLayerEbsVolumeInput

func (NodejsAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (i NodejsAppLayerEbsVolumeArray) ToNodejsAppLayerEbsVolumeArrayOutput() NodejsAppLayerEbsVolumeArrayOutput {
	return i.ToNodejsAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i NodejsAppLayerEbsVolumeArray) ToNodejsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerEbsVolumeArrayOutput)
}

type NodejsAppLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (NodejsAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (o NodejsAppLayerEbsVolumeOutput) ToNodejsAppLayerEbsVolumeOutput() NodejsAppLayerEbsVolumeOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeOutput) ToNodejsAppLayerEbsVolumeOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v NodejsAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o NodejsAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v NodejsAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o NodejsAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v NodejsAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o NodejsAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v NodejsAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o NodejsAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NodejsAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o NodejsAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v NodejsAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o NodejsAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NodejsAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NodejsAppLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (NodejsAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodejsAppLayerEbsVolume)(nil)).Elem()
}

func (o NodejsAppLayerEbsVolumeArrayOutput) ToNodejsAppLayerEbsVolumeArrayOutput() NodejsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeArrayOutput) ToNodejsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) NodejsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o NodejsAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) NodejsAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) NodejsAppLayerEbsVolume {
		return vs[0].([]NodejsAppLayerEbsVolume)[vs[1].(int)]
	}).(NodejsAppLayerEbsVolumeOutput)
}

type PhpAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type PhpAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToPhpAppLayerEbsVolumeOutput() PhpAppLayerEbsVolumeOutput
	ToPhpAppLayerEbsVolumeOutputWithContext(context.Context) PhpAppLayerEbsVolumeOutput
}

type PhpAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PhpAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerEbsVolume)(nil)).Elem()
}

func (i PhpAppLayerEbsVolumeArgs) ToPhpAppLayerEbsVolumeOutput() PhpAppLayerEbsVolumeOutput {
	return i.ToPhpAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i PhpAppLayerEbsVolumeArgs) ToPhpAppLayerEbsVolumeOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerEbsVolumeOutput)
}

type PhpAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToPhpAppLayerEbsVolumeArrayOutput() PhpAppLayerEbsVolumeArrayOutput
	ToPhpAppLayerEbsVolumeArrayOutputWithContext(context.Context) PhpAppLayerEbsVolumeArrayOutput
}

type PhpAppLayerEbsVolumeArray []PhpAppLayerEbsVolumeInput

func (PhpAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhpAppLayerEbsVolume)(nil)).Elem()
}

func (i PhpAppLayerEbsVolumeArray) ToPhpAppLayerEbsVolumeArrayOutput() PhpAppLayerEbsVolumeArrayOutput {
	return i.ToPhpAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i PhpAppLayerEbsVolumeArray) ToPhpAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerEbsVolumeArrayOutput)
}

type PhpAppLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (PhpAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhpAppLayerEbsVolume)(nil)).Elem()
}

func (o PhpAppLayerEbsVolumeOutput) ToPhpAppLayerEbsVolumeOutput() PhpAppLayerEbsVolumeOutput {
	return o
}

func (o PhpAppLayerEbsVolumeOutput) ToPhpAppLayerEbsVolumeOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeOutput {
	return o
}

func (o PhpAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PhpAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o PhpAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v PhpAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o PhpAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v PhpAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o PhpAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v PhpAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o PhpAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PhpAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o PhpAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v PhpAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o PhpAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PhpAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PhpAppLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (PhpAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhpAppLayerEbsVolume)(nil)).Elem()
}

func (o PhpAppLayerEbsVolumeArrayOutput) ToPhpAppLayerEbsVolumeArrayOutput() PhpAppLayerEbsVolumeArrayOutput {
	return o
}

func (o PhpAppLayerEbsVolumeArrayOutput) ToPhpAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) PhpAppLayerEbsVolumeArrayOutput {
	return o
}

func (o PhpAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) PhpAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) PhpAppLayerEbsVolume {
		return vs[0].([]PhpAppLayerEbsVolume)[vs[1].(int)]
	}).(PhpAppLayerEbsVolumeOutput)
}

type RailsAppLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type RailsAppLayerEbsVolumeInput interface {
	pulumi.Input

	ToRailsAppLayerEbsVolumeOutput() RailsAppLayerEbsVolumeOutput
	ToRailsAppLayerEbsVolumeOutputWithContext(context.Context) RailsAppLayerEbsVolumeOutput
}

type RailsAppLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RailsAppLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerEbsVolume)(nil)).Elem()
}

func (i RailsAppLayerEbsVolumeArgs) ToRailsAppLayerEbsVolumeOutput() RailsAppLayerEbsVolumeOutput {
	return i.ToRailsAppLayerEbsVolumeOutputWithContext(context.Background())
}

func (i RailsAppLayerEbsVolumeArgs) ToRailsAppLayerEbsVolumeOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerEbsVolumeOutput)
}

type RailsAppLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToRailsAppLayerEbsVolumeArrayOutput() RailsAppLayerEbsVolumeArrayOutput
	ToRailsAppLayerEbsVolumeArrayOutputWithContext(context.Context) RailsAppLayerEbsVolumeArrayOutput
}

type RailsAppLayerEbsVolumeArray []RailsAppLayerEbsVolumeInput

func (RailsAppLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RailsAppLayerEbsVolume)(nil)).Elem()
}

func (i RailsAppLayerEbsVolumeArray) ToRailsAppLayerEbsVolumeArrayOutput() RailsAppLayerEbsVolumeArrayOutput {
	return i.ToRailsAppLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i RailsAppLayerEbsVolumeArray) ToRailsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerEbsVolumeArrayOutput)
}

type RailsAppLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (RailsAppLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RailsAppLayerEbsVolume)(nil)).Elem()
}

func (o RailsAppLayerEbsVolumeOutput) ToRailsAppLayerEbsVolumeOutput() RailsAppLayerEbsVolumeOutput {
	return o
}

func (o RailsAppLayerEbsVolumeOutput) ToRailsAppLayerEbsVolumeOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeOutput {
	return o
}

func (o RailsAppLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v RailsAppLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RailsAppLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o RailsAppLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v RailsAppLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o RailsAppLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v RailsAppLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o RailsAppLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RailsAppLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v RailsAppLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o RailsAppLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RailsAppLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RailsAppLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (RailsAppLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RailsAppLayerEbsVolume)(nil)).Elem()
}

func (o RailsAppLayerEbsVolumeArrayOutput) ToRailsAppLayerEbsVolumeArrayOutput() RailsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o RailsAppLayerEbsVolumeArrayOutput) ToRailsAppLayerEbsVolumeArrayOutputWithContext(ctx context.Context) RailsAppLayerEbsVolumeArrayOutput {
	return o
}

func (o RailsAppLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) RailsAppLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RailsAppLayerEbsVolume {
		return vs[0].([]RailsAppLayerEbsVolume)[vs[1].(int)]
	}).(RailsAppLayerEbsVolumeOutput)
}

type StackCustomCookbooksSource struct {
	Password *string `pulumi:"password"`
	Revision *string `pulumi:"revision"`
	SshKey *string `pulumi:"sshKey"`
	Type string `pulumi:"type"`
	Url string `pulumi:"url"`
	Username *string `pulumi:"username"`
}

type StackCustomCookbooksSourceInput interface {
	pulumi.Input

	ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput
	ToStackCustomCookbooksSourceOutputWithContext(context.Context) StackCustomCookbooksSourceOutput
}

type StackCustomCookbooksSourceArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	Type pulumi.StringInput `pulumi:"type"`
	Url pulumi.StringInput `pulumi:"url"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (StackCustomCookbooksSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackCustomCookbooksSource)(nil)).Elem()
}

func (i StackCustomCookbooksSourceArgs) ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput {
	return i.ToStackCustomCookbooksSourceOutputWithContext(context.Background())
}

func (i StackCustomCookbooksSourceArgs) ToStackCustomCookbooksSourceOutputWithContext(ctx context.Context) StackCustomCookbooksSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackCustomCookbooksSourceOutput)
}

type StackCustomCookbooksSourceArrayInput interface {
	pulumi.Input

	ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput
	ToStackCustomCookbooksSourceArrayOutputWithContext(context.Context) StackCustomCookbooksSourceArrayOutput
}

type StackCustomCookbooksSourceArray []StackCustomCookbooksSourceInput

func (StackCustomCookbooksSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackCustomCookbooksSource)(nil)).Elem()
}

func (i StackCustomCookbooksSourceArray) ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput {
	return i.ToStackCustomCookbooksSourceArrayOutputWithContext(context.Background())
}

func (i StackCustomCookbooksSourceArray) ToStackCustomCookbooksSourceArrayOutputWithContext(ctx context.Context) StackCustomCookbooksSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackCustomCookbooksSourceArrayOutput)
}

type StackCustomCookbooksSourceOutput struct { *pulumi.OutputState }

func (StackCustomCookbooksSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackCustomCookbooksSource)(nil)).Elem()
}

func (o StackCustomCookbooksSourceOutput) ToStackCustomCookbooksSourceOutput() StackCustomCookbooksSourceOutput {
	return o
}

func (o StackCustomCookbooksSourceOutput) ToStackCustomCookbooksSourceOutputWithContext(ctx context.Context) StackCustomCookbooksSourceOutput {
	return o
}

func (o StackCustomCookbooksSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v StackCustomCookbooksSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o StackCustomCookbooksSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func (v StackCustomCookbooksSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

func (o StackCustomCookbooksSourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v StackCustomCookbooksSource) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

func (o StackCustomCookbooksSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v StackCustomCookbooksSource) string { return v.Type }).(pulumi.StringOutput)
}

func (o StackCustomCookbooksSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func (v StackCustomCookbooksSource) string { return v.Url }).(pulumi.StringOutput)
}

func (o StackCustomCookbooksSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v StackCustomCookbooksSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type StackCustomCookbooksSourceArrayOutput struct { *pulumi.OutputState}

func (StackCustomCookbooksSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackCustomCookbooksSource)(nil)).Elem()
}

func (o StackCustomCookbooksSourceArrayOutput) ToStackCustomCookbooksSourceArrayOutput() StackCustomCookbooksSourceArrayOutput {
	return o
}

func (o StackCustomCookbooksSourceArrayOutput) ToStackCustomCookbooksSourceArrayOutputWithContext(ctx context.Context) StackCustomCookbooksSourceArrayOutput {
	return o
}

func (o StackCustomCookbooksSourceArrayOutput) Index(i pulumi.IntInput) StackCustomCookbooksSourceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) StackCustomCookbooksSource {
		return vs[0].([]StackCustomCookbooksSource)[vs[1].(int)]
	}).(StackCustomCookbooksSourceOutput)
}

type StaticWebLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type StaticWebLayerEbsVolumeInput interface {
	pulumi.Input

	ToStaticWebLayerEbsVolumeOutput() StaticWebLayerEbsVolumeOutput
	ToStaticWebLayerEbsVolumeOutputWithContext(context.Context) StaticWebLayerEbsVolumeOutput
}

type StaticWebLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StaticWebLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerEbsVolume)(nil)).Elem()
}

func (i StaticWebLayerEbsVolumeArgs) ToStaticWebLayerEbsVolumeOutput() StaticWebLayerEbsVolumeOutput {
	return i.ToStaticWebLayerEbsVolumeOutputWithContext(context.Background())
}

func (i StaticWebLayerEbsVolumeArgs) ToStaticWebLayerEbsVolumeOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerEbsVolumeOutput)
}

type StaticWebLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToStaticWebLayerEbsVolumeArrayOutput() StaticWebLayerEbsVolumeArrayOutput
	ToStaticWebLayerEbsVolumeArrayOutputWithContext(context.Context) StaticWebLayerEbsVolumeArrayOutput
}

type StaticWebLayerEbsVolumeArray []StaticWebLayerEbsVolumeInput

func (StaticWebLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticWebLayerEbsVolume)(nil)).Elem()
}

func (i StaticWebLayerEbsVolumeArray) ToStaticWebLayerEbsVolumeArrayOutput() StaticWebLayerEbsVolumeArrayOutput {
	return i.ToStaticWebLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i StaticWebLayerEbsVolumeArray) ToStaticWebLayerEbsVolumeArrayOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebLayerEbsVolumeArrayOutput)
}

type StaticWebLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (StaticWebLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticWebLayerEbsVolume)(nil)).Elem()
}

func (o StaticWebLayerEbsVolumeOutput) ToStaticWebLayerEbsVolumeOutput() StaticWebLayerEbsVolumeOutput {
	return o
}

func (o StaticWebLayerEbsVolumeOutput) ToStaticWebLayerEbsVolumeOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeOutput {
	return o
}

func (o StaticWebLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v StaticWebLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o StaticWebLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v StaticWebLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o StaticWebLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v StaticWebLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o StaticWebLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v StaticWebLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o StaticWebLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v StaticWebLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o StaticWebLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v StaticWebLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o StaticWebLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v StaticWebLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StaticWebLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (StaticWebLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticWebLayerEbsVolume)(nil)).Elem()
}

func (o StaticWebLayerEbsVolumeArrayOutput) ToStaticWebLayerEbsVolumeArrayOutput() StaticWebLayerEbsVolumeArrayOutput {
	return o
}

func (o StaticWebLayerEbsVolumeArrayOutput) ToStaticWebLayerEbsVolumeArrayOutputWithContext(ctx context.Context) StaticWebLayerEbsVolumeArrayOutput {
	return o
}

func (o StaticWebLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) StaticWebLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) StaticWebLayerEbsVolume {
		return vs[0].([]StaticWebLayerEbsVolume)[vs[1].(int)]
	}).(StaticWebLayerEbsVolumeOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationAppSourceOutput{})
	pulumi.RegisterOutputType(ApplicationAppSourceArrayOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSslConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationSslConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CustomLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(CustomLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(GangliaLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(GangliaLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(HaproxyLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(HaproxyLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(JavaAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(JavaAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(MemcachedLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(MemcachedLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(MysqlLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(MysqlLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(PhpAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(PhpAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(RailsAppLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(RailsAppLayerEbsVolumeArrayOutput{})
	pulumi.RegisterOutputType(StackCustomCookbooksSourceOutput{})
	pulumi.RegisterOutputType(StackCustomCookbooksSourceArrayOutput{})
	pulumi.RegisterOutputType(StaticWebLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(StaticWebLayerEbsVolumeArrayOutput{})
}
