// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an OpsWorks PHP application layer resource.
//
// ## Import
//
// OpsWorks PHP Application Layers can be imported using the `id`, e.g.,
//
// ```sh
//
//	$ pulumi import aws:opsworks/phpAppLayer:PhpAppLayer bar 00000000-0000-0000-0000-000000000000
//
// ```
type PhpAppLayer struct {
	pulumi.CustomResourceState
}

// NewPhpAppLayer registers a new resource with the given unique name, arguments, and options.
func NewPhpAppLayer(ctx *pulumi.Context,
	name string, args *PhpAppLayerArgs, opts ...pulumi.ResourceOption) (*PhpAppLayer, error) {
	if args == nil {
		args = &PhpAppLayerArgs{}
	}

	var resource PhpAppLayer
	err := ctx.RegisterResource("aws:opsworks/phpAppLayer:PhpAppLayer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPhpAppLayer gets an existing PhpAppLayer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPhpAppLayer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PhpAppLayerState, opts ...pulumi.ResourceOption) (*PhpAppLayer, error) {
	var resource PhpAppLayer
	err := ctx.ReadResource("aws:opsworks/phpAppLayer:PhpAppLayer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PhpAppLayer resources.
type phpAppLayerState struct {
}

type PhpAppLayerState struct {
}

func (PhpAppLayerState) ElementType() reflect.Type {
	return reflect.TypeOf((*phpAppLayerState)(nil)).Elem()
}

type phpAppLayerArgs struct {
}

// The set of arguments for constructing a PhpAppLayer resource.
type PhpAppLayerArgs struct {
}

func (PhpAppLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*phpAppLayerArgs)(nil)).Elem()
}

type PhpAppLayerInput interface {
	pulumi.Input

	ToPhpAppLayerOutput() PhpAppLayerOutput
	ToPhpAppLayerOutputWithContext(ctx context.Context) PhpAppLayerOutput
}

func (*PhpAppLayer) ElementType() reflect.Type {
	return reflect.TypeOf((**PhpAppLayer)(nil)).Elem()
}

func (i *PhpAppLayer) ToPhpAppLayerOutput() PhpAppLayerOutput {
	return i.ToPhpAppLayerOutputWithContext(context.Background())
}

func (i *PhpAppLayer) ToPhpAppLayerOutputWithContext(ctx context.Context) PhpAppLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerOutput)
}

// PhpAppLayerArrayInput is an input type that accepts PhpAppLayerArray and PhpAppLayerArrayOutput values.
// You can construct a concrete instance of `PhpAppLayerArrayInput` via:
//
//	PhpAppLayerArray{ PhpAppLayerArgs{...} }
type PhpAppLayerArrayInput interface {
	pulumi.Input

	ToPhpAppLayerArrayOutput() PhpAppLayerArrayOutput
	ToPhpAppLayerArrayOutputWithContext(context.Context) PhpAppLayerArrayOutput
}

type PhpAppLayerArray []PhpAppLayerInput

func (PhpAppLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhpAppLayer)(nil)).Elem()
}

func (i PhpAppLayerArray) ToPhpAppLayerArrayOutput() PhpAppLayerArrayOutput {
	return i.ToPhpAppLayerArrayOutputWithContext(context.Background())
}

func (i PhpAppLayerArray) ToPhpAppLayerArrayOutputWithContext(ctx context.Context) PhpAppLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerArrayOutput)
}

// PhpAppLayerMapInput is an input type that accepts PhpAppLayerMap and PhpAppLayerMapOutput values.
// You can construct a concrete instance of `PhpAppLayerMapInput` via:
//
//	PhpAppLayerMap{ "key": PhpAppLayerArgs{...} }
type PhpAppLayerMapInput interface {
	pulumi.Input

	ToPhpAppLayerMapOutput() PhpAppLayerMapOutput
	ToPhpAppLayerMapOutputWithContext(context.Context) PhpAppLayerMapOutput
}

type PhpAppLayerMap map[string]PhpAppLayerInput

func (PhpAppLayerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhpAppLayer)(nil)).Elem()
}

func (i PhpAppLayerMap) ToPhpAppLayerMapOutput() PhpAppLayerMapOutput {
	return i.ToPhpAppLayerMapOutputWithContext(context.Background())
}

func (i PhpAppLayerMap) ToPhpAppLayerMapOutputWithContext(ctx context.Context) PhpAppLayerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhpAppLayerMapOutput)
}

type PhpAppLayerOutput struct{ *pulumi.OutputState }

func (PhpAppLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PhpAppLayer)(nil)).Elem()
}

func (o PhpAppLayerOutput) ToPhpAppLayerOutput() PhpAppLayerOutput {
	return o
}

func (o PhpAppLayerOutput) ToPhpAppLayerOutputWithContext(ctx context.Context) PhpAppLayerOutput {
	return o
}

type PhpAppLayerArrayOutput struct{ *pulumi.OutputState }

func (PhpAppLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhpAppLayer)(nil)).Elem()
}

func (o PhpAppLayerArrayOutput) ToPhpAppLayerArrayOutput() PhpAppLayerArrayOutput {
	return o
}

func (o PhpAppLayerArrayOutput) ToPhpAppLayerArrayOutputWithContext(ctx context.Context) PhpAppLayerArrayOutput {
	return o
}

func (o PhpAppLayerArrayOutput) Index(i pulumi.IntInput) PhpAppLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PhpAppLayer {
		return vs[0].([]*PhpAppLayer)[vs[1].(int)]
	}).(PhpAppLayerOutput)
}

type PhpAppLayerMapOutput struct{ *pulumi.OutputState }

func (PhpAppLayerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhpAppLayer)(nil)).Elem()
}

func (o PhpAppLayerMapOutput) ToPhpAppLayerMapOutput() PhpAppLayerMapOutput {
	return o
}

func (o PhpAppLayerMapOutput) ToPhpAppLayerMapOutputWithContext(ctx context.Context) PhpAppLayerMapOutput {
	return o
}

func (o PhpAppLayerMapOutput) MapIndex(k pulumi.StringInput) PhpAppLayerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PhpAppLayer {
		return vs[0].(map[string]*PhpAppLayer)[vs[1].(string)]
	}).(PhpAppLayerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerInput)(nil)).Elem(), &PhpAppLayer{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerArrayInput)(nil)).Elem(), PhpAppLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhpAppLayerMapInput)(nil)).Elem(), PhpAppLayerMap{})
	pulumi.RegisterOutputType(PhpAppLayerOutput{})
	pulumi.RegisterOutputType(PhpAppLayerArrayOutput{})
	pulumi.RegisterOutputType(PhpAppLayerMapOutput{})
}
