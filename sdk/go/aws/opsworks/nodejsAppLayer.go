// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an OpsWorks NodeJS application layer resource.
type NodejsAppLayer struct {
	pulumi.CustomResourceState
}

// NewNodejsAppLayer registers a new resource with the given unique name, arguments, and options.
func NewNodejsAppLayer(ctx *pulumi.Context,
	name string, args *NodejsAppLayerArgs, opts ...pulumi.ResourceOption) (*NodejsAppLayer, error) {
	if args == nil {
		args = &NodejsAppLayerArgs{}
	}

	var resource NodejsAppLayer
	err := ctx.RegisterResource("aws:opsworks/nodejsAppLayer:NodejsAppLayer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodejsAppLayer gets an existing NodejsAppLayer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodejsAppLayer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodejsAppLayerState, opts ...pulumi.ResourceOption) (*NodejsAppLayer, error) {
	var resource NodejsAppLayer
	err := ctx.ReadResource("aws:opsworks/nodejsAppLayer:NodejsAppLayer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodejsAppLayer resources.
type nodejsAppLayerState struct {
}

type NodejsAppLayerState struct {
}

func (NodejsAppLayerState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodejsAppLayerState)(nil)).Elem()
}

type nodejsAppLayerArgs struct {
}

// The set of arguments for constructing a NodejsAppLayer resource.
type NodejsAppLayerArgs struct {
}

func (NodejsAppLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodejsAppLayerArgs)(nil)).Elem()
}

type NodejsAppLayerInput interface {
	pulumi.Input

	ToNodejsAppLayerOutput() NodejsAppLayerOutput
	ToNodejsAppLayerOutputWithContext(ctx context.Context) NodejsAppLayerOutput
}

func (*NodejsAppLayer) ElementType() reflect.Type {
	return reflect.TypeOf((**NodejsAppLayer)(nil)).Elem()
}

func (i *NodejsAppLayer) ToNodejsAppLayerOutput() NodejsAppLayerOutput {
	return i.ToNodejsAppLayerOutputWithContext(context.Background())
}

func (i *NodejsAppLayer) ToNodejsAppLayerOutputWithContext(ctx context.Context) NodejsAppLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerOutput)
}

// NodejsAppLayerArrayInput is an input type that accepts NodejsAppLayerArray and NodejsAppLayerArrayOutput values.
// You can construct a concrete instance of `NodejsAppLayerArrayInput` via:
//
//	NodejsAppLayerArray{ NodejsAppLayerArgs{...} }
type NodejsAppLayerArrayInput interface {
	pulumi.Input

	ToNodejsAppLayerArrayOutput() NodejsAppLayerArrayOutput
	ToNodejsAppLayerArrayOutputWithContext(context.Context) NodejsAppLayerArrayOutput
}

type NodejsAppLayerArray []NodejsAppLayerInput

func (NodejsAppLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodejsAppLayer)(nil)).Elem()
}

func (i NodejsAppLayerArray) ToNodejsAppLayerArrayOutput() NodejsAppLayerArrayOutput {
	return i.ToNodejsAppLayerArrayOutputWithContext(context.Background())
}

func (i NodejsAppLayerArray) ToNodejsAppLayerArrayOutputWithContext(ctx context.Context) NodejsAppLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerArrayOutput)
}

// NodejsAppLayerMapInput is an input type that accepts NodejsAppLayerMap and NodejsAppLayerMapOutput values.
// You can construct a concrete instance of `NodejsAppLayerMapInput` via:
//
//	NodejsAppLayerMap{ "key": NodejsAppLayerArgs{...} }
type NodejsAppLayerMapInput interface {
	pulumi.Input

	ToNodejsAppLayerMapOutput() NodejsAppLayerMapOutput
	ToNodejsAppLayerMapOutputWithContext(context.Context) NodejsAppLayerMapOutput
}

type NodejsAppLayerMap map[string]NodejsAppLayerInput

func (NodejsAppLayerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodejsAppLayer)(nil)).Elem()
}

func (i NodejsAppLayerMap) ToNodejsAppLayerMapOutput() NodejsAppLayerMapOutput {
	return i.ToNodejsAppLayerMapOutputWithContext(context.Background())
}

func (i NodejsAppLayerMap) ToNodejsAppLayerMapOutputWithContext(ctx context.Context) NodejsAppLayerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodejsAppLayerMapOutput)
}

type NodejsAppLayerOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodejsAppLayer)(nil)).Elem()
}

func (o NodejsAppLayerOutput) ToNodejsAppLayerOutput() NodejsAppLayerOutput {
	return o
}

func (o NodejsAppLayerOutput) ToNodejsAppLayerOutputWithContext(ctx context.Context) NodejsAppLayerOutput {
	return o
}

type NodejsAppLayerArrayOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodejsAppLayer)(nil)).Elem()
}

func (o NodejsAppLayerArrayOutput) ToNodejsAppLayerArrayOutput() NodejsAppLayerArrayOutput {
	return o
}

func (o NodejsAppLayerArrayOutput) ToNodejsAppLayerArrayOutputWithContext(ctx context.Context) NodejsAppLayerArrayOutput {
	return o
}

func (o NodejsAppLayerArrayOutput) Index(i pulumi.IntInput) NodejsAppLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodejsAppLayer {
		return vs[0].([]*NodejsAppLayer)[vs[1].(int)]
	}).(NodejsAppLayerOutput)
}

type NodejsAppLayerMapOutput struct{ *pulumi.OutputState }

func (NodejsAppLayerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodejsAppLayer)(nil)).Elem()
}

func (o NodejsAppLayerMapOutput) ToNodejsAppLayerMapOutput() NodejsAppLayerMapOutput {
	return o
}

func (o NodejsAppLayerMapOutput) ToNodejsAppLayerMapOutputWithContext(ctx context.Context) NodejsAppLayerMapOutput {
	return o
}

func (o NodejsAppLayerMapOutput) MapIndex(k pulumi.StringInput) NodejsAppLayerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodejsAppLayer {
		return vs[0].(map[string]*NodejsAppLayer)[vs[1].(string)]
	}).(NodejsAppLayerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerInput)(nil)).Elem(), &NodejsAppLayer{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerArrayInput)(nil)).Elem(), NodejsAppLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodejsAppLayerMapInput)(nil)).Elem(), NodejsAppLayerMap{})
	pulumi.RegisterOutputType(NodejsAppLayerOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerArrayOutput{})
	pulumi.RegisterOutputType(NodejsAppLayerMapOutput{})
}
