// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RailsAppLayer struct {
	pulumi.CustomResourceState

	AppServer                pulumi.StringPtrOutput                        `pulumi:"appServer"`
	Arn                      pulumi.StringOutput                           `pulumi:"arn"`
	AutoAssignElasticIps     pulumi.BoolPtrOutput                          `pulumi:"autoAssignElasticIps"`
	AutoAssignPublicIps      pulumi.BoolPtrOutput                          `pulumi:"autoAssignPublicIps"`
	AutoHealing              pulumi.BoolPtrOutput                          `pulumi:"autoHealing"`
	BundlerVersion           pulumi.StringPtrOutput                        `pulumi:"bundlerVersion"`
	CloudwatchConfiguration  RailsAppLayerCloudwatchConfigurationPtrOutput `pulumi:"cloudwatchConfiguration"`
	CustomConfigureRecipes   pulumi.StringArrayOutput                      `pulumi:"customConfigureRecipes"`
	CustomDeployRecipes      pulumi.StringArrayOutput                      `pulumi:"customDeployRecipes"`
	CustomInstanceProfileArn pulumi.StringPtrOutput                        `pulumi:"customInstanceProfileArn"`
	CustomJson               pulumi.StringPtrOutput                        `pulumi:"customJson"`
	CustomSecurityGroupIds   pulumi.StringArrayOutput                      `pulumi:"customSecurityGroupIds"`
	CustomSetupRecipes       pulumi.StringArrayOutput                      `pulumi:"customSetupRecipes"`
	CustomShutdownRecipes    pulumi.StringArrayOutput                      `pulumi:"customShutdownRecipes"`
	CustomUndeployRecipes    pulumi.StringArrayOutput                      `pulumi:"customUndeployRecipes"`
	DrainElbOnShutdown       pulumi.BoolPtrOutput                          `pulumi:"drainElbOnShutdown"`
	EbsVolumes               RailsAppLayerEbsVolumeArrayOutput             `pulumi:"ebsVolumes"`
	ElasticLoadBalancer      pulumi.StringPtrOutput                        `pulumi:"elasticLoadBalancer"`
	InstallUpdatesOnBoot     pulumi.BoolPtrOutput                          `pulumi:"installUpdatesOnBoot"`
	InstanceShutdownTimeout  pulumi.IntPtrOutput                           `pulumi:"instanceShutdownTimeout"`
	LoadBasedAutoScaling     RailsAppLayerLoadBasedAutoScalingOutput       `pulumi:"loadBasedAutoScaling"`
	ManageBundler            pulumi.BoolPtrOutput                          `pulumi:"manageBundler"`
	Name                     pulumi.StringOutput                           `pulumi:"name"`
	PassengerVersion         pulumi.StringPtrOutput                        `pulumi:"passengerVersion"`
	RubyVersion              pulumi.StringPtrOutput                        `pulumi:"rubyVersion"`
	RubygemsVersion          pulumi.StringPtrOutput                        `pulumi:"rubygemsVersion"`
	StackId                  pulumi.StringOutput                           `pulumi:"stackId"`
	SystemPackages           pulumi.StringArrayOutput                      `pulumi:"systemPackages"`
	Tags                     pulumi.StringMapOutput                        `pulumi:"tags"`
	TagsAll                  pulumi.StringMapOutput                        `pulumi:"tagsAll"`
	UseEbsOptimizedInstances pulumi.BoolPtrOutput                          `pulumi:"useEbsOptimizedInstances"`
}

// NewRailsAppLayer registers a new resource with the given unique name, arguments, and options.
func NewRailsAppLayer(ctx *pulumi.Context,
	name string, args *RailsAppLayerArgs, opts ...pulumi.ResourceOption) (*RailsAppLayer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StackId == nil {
		return nil, errors.New("invalid value for required argument 'StackId'")
	}
	var resource RailsAppLayer
	err := ctx.RegisterResource("aws:opsworks/railsAppLayer:RailsAppLayer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRailsAppLayer gets an existing RailsAppLayer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRailsAppLayer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RailsAppLayerState, opts ...pulumi.ResourceOption) (*RailsAppLayer, error) {
	var resource RailsAppLayer
	err := ctx.ReadResource("aws:opsworks/railsAppLayer:RailsAppLayer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RailsAppLayer resources.
type railsAppLayerState struct {
	AppServer                *string                               `pulumi:"appServer"`
	Arn                      *string                               `pulumi:"arn"`
	AutoAssignElasticIps     *bool                                 `pulumi:"autoAssignElasticIps"`
	AutoAssignPublicIps      *bool                                 `pulumi:"autoAssignPublicIps"`
	AutoHealing              *bool                                 `pulumi:"autoHealing"`
	BundlerVersion           *string                               `pulumi:"bundlerVersion"`
	CloudwatchConfiguration  *RailsAppLayerCloudwatchConfiguration `pulumi:"cloudwatchConfiguration"`
	CustomConfigureRecipes   []string                              `pulumi:"customConfigureRecipes"`
	CustomDeployRecipes      []string                              `pulumi:"customDeployRecipes"`
	CustomInstanceProfileArn *string                               `pulumi:"customInstanceProfileArn"`
	CustomJson               *string                               `pulumi:"customJson"`
	CustomSecurityGroupIds   []string                              `pulumi:"customSecurityGroupIds"`
	CustomSetupRecipes       []string                              `pulumi:"customSetupRecipes"`
	CustomShutdownRecipes    []string                              `pulumi:"customShutdownRecipes"`
	CustomUndeployRecipes    []string                              `pulumi:"customUndeployRecipes"`
	DrainElbOnShutdown       *bool                                 `pulumi:"drainElbOnShutdown"`
	EbsVolumes               []RailsAppLayerEbsVolume              `pulumi:"ebsVolumes"`
	ElasticLoadBalancer      *string                               `pulumi:"elasticLoadBalancer"`
	InstallUpdatesOnBoot     *bool                                 `pulumi:"installUpdatesOnBoot"`
	InstanceShutdownTimeout  *int                                  `pulumi:"instanceShutdownTimeout"`
	LoadBasedAutoScaling     *RailsAppLayerLoadBasedAutoScaling    `pulumi:"loadBasedAutoScaling"`
	ManageBundler            *bool                                 `pulumi:"manageBundler"`
	Name                     *string                               `pulumi:"name"`
	PassengerVersion         *string                               `pulumi:"passengerVersion"`
	RubyVersion              *string                               `pulumi:"rubyVersion"`
	RubygemsVersion          *string                               `pulumi:"rubygemsVersion"`
	StackId                  *string                               `pulumi:"stackId"`
	SystemPackages           []string                              `pulumi:"systemPackages"`
	Tags                     map[string]string                     `pulumi:"tags"`
	TagsAll                  map[string]string                     `pulumi:"tagsAll"`
	UseEbsOptimizedInstances *bool                                 `pulumi:"useEbsOptimizedInstances"`
}

type RailsAppLayerState struct {
	AppServer                pulumi.StringPtrInput
	Arn                      pulumi.StringPtrInput
	AutoAssignElasticIps     pulumi.BoolPtrInput
	AutoAssignPublicIps      pulumi.BoolPtrInput
	AutoHealing              pulumi.BoolPtrInput
	BundlerVersion           pulumi.StringPtrInput
	CloudwatchConfiguration  RailsAppLayerCloudwatchConfigurationPtrInput
	CustomConfigureRecipes   pulumi.StringArrayInput
	CustomDeployRecipes      pulumi.StringArrayInput
	CustomInstanceProfileArn pulumi.StringPtrInput
	CustomJson               pulumi.StringPtrInput
	CustomSecurityGroupIds   pulumi.StringArrayInput
	CustomSetupRecipes       pulumi.StringArrayInput
	CustomShutdownRecipes    pulumi.StringArrayInput
	CustomUndeployRecipes    pulumi.StringArrayInput
	DrainElbOnShutdown       pulumi.BoolPtrInput
	EbsVolumes               RailsAppLayerEbsVolumeArrayInput
	ElasticLoadBalancer      pulumi.StringPtrInput
	InstallUpdatesOnBoot     pulumi.BoolPtrInput
	InstanceShutdownTimeout  pulumi.IntPtrInput
	LoadBasedAutoScaling     RailsAppLayerLoadBasedAutoScalingPtrInput
	ManageBundler            pulumi.BoolPtrInput
	Name                     pulumi.StringPtrInput
	PassengerVersion         pulumi.StringPtrInput
	RubyVersion              pulumi.StringPtrInput
	RubygemsVersion          pulumi.StringPtrInput
	StackId                  pulumi.StringPtrInput
	SystemPackages           pulumi.StringArrayInput
	Tags                     pulumi.StringMapInput
	TagsAll                  pulumi.StringMapInput
	UseEbsOptimizedInstances pulumi.BoolPtrInput
}

func (RailsAppLayerState) ElementType() reflect.Type {
	return reflect.TypeOf((*railsAppLayerState)(nil)).Elem()
}

type railsAppLayerArgs struct {
	AppServer                *string                               `pulumi:"appServer"`
	AutoAssignElasticIps     *bool                                 `pulumi:"autoAssignElasticIps"`
	AutoAssignPublicIps      *bool                                 `pulumi:"autoAssignPublicIps"`
	AutoHealing              *bool                                 `pulumi:"autoHealing"`
	BundlerVersion           *string                               `pulumi:"bundlerVersion"`
	CloudwatchConfiguration  *RailsAppLayerCloudwatchConfiguration `pulumi:"cloudwatchConfiguration"`
	CustomConfigureRecipes   []string                              `pulumi:"customConfigureRecipes"`
	CustomDeployRecipes      []string                              `pulumi:"customDeployRecipes"`
	CustomInstanceProfileArn *string                               `pulumi:"customInstanceProfileArn"`
	CustomJson               *string                               `pulumi:"customJson"`
	CustomSecurityGroupIds   []string                              `pulumi:"customSecurityGroupIds"`
	CustomSetupRecipes       []string                              `pulumi:"customSetupRecipes"`
	CustomShutdownRecipes    []string                              `pulumi:"customShutdownRecipes"`
	CustomUndeployRecipes    []string                              `pulumi:"customUndeployRecipes"`
	DrainElbOnShutdown       *bool                                 `pulumi:"drainElbOnShutdown"`
	EbsVolumes               []RailsAppLayerEbsVolume              `pulumi:"ebsVolumes"`
	ElasticLoadBalancer      *string                               `pulumi:"elasticLoadBalancer"`
	InstallUpdatesOnBoot     *bool                                 `pulumi:"installUpdatesOnBoot"`
	InstanceShutdownTimeout  *int                                  `pulumi:"instanceShutdownTimeout"`
	LoadBasedAutoScaling     *RailsAppLayerLoadBasedAutoScaling    `pulumi:"loadBasedAutoScaling"`
	ManageBundler            *bool                                 `pulumi:"manageBundler"`
	Name                     *string                               `pulumi:"name"`
	PassengerVersion         *string                               `pulumi:"passengerVersion"`
	RubyVersion              *string                               `pulumi:"rubyVersion"`
	RubygemsVersion          *string                               `pulumi:"rubygemsVersion"`
	StackId                  string                                `pulumi:"stackId"`
	SystemPackages           []string                              `pulumi:"systemPackages"`
	Tags                     map[string]string                     `pulumi:"tags"`
	UseEbsOptimizedInstances *bool                                 `pulumi:"useEbsOptimizedInstances"`
}

// The set of arguments for constructing a RailsAppLayer resource.
type RailsAppLayerArgs struct {
	AppServer                pulumi.StringPtrInput
	AutoAssignElasticIps     pulumi.BoolPtrInput
	AutoAssignPublicIps      pulumi.BoolPtrInput
	AutoHealing              pulumi.BoolPtrInput
	BundlerVersion           pulumi.StringPtrInput
	CloudwatchConfiguration  RailsAppLayerCloudwatchConfigurationPtrInput
	CustomConfigureRecipes   pulumi.StringArrayInput
	CustomDeployRecipes      pulumi.StringArrayInput
	CustomInstanceProfileArn pulumi.StringPtrInput
	CustomJson               pulumi.StringPtrInput
	CustomSecurityGroupIds   pulumi.StringArrayInput
	CustomSetupRecipes       pulumi.StringArrayInput
	CustomShutdownRecipes    pulumi.StringArrayInput
	CustomUndeployRecipes    pulumi.StringArrayInput
	DrainElbOnShutdown       pulumi.BoolPtrInput
	EbsVolumes               RailsAppLayerEbsVolumeArrayInput
	ElasticLoadBalancer      pulumi.StringPtrInput
	InstallUpdatesOnBoot     pulumi.BoolPtrInput
	InstanceShutdownTimeout  pulumi.IntPtrInput
	LoadBasedAutoScaling     RailsAppLayerLoadBasedAutoScalingPtrInput
	ManageBundler            pulumi.BoolPtrInput
	Name                     pulumi.StringPtrInput
	PassengerVersion         pulumi.StringPtrInput
	RubyVersion              pulumi.StringPtrInput
	RubygemsVersion          pulumi.StringPtrInput
	StackId                  pulumi.StringInput
	SystemPackages           pulumi.StringArrayInput
	Tags                     pulumi.StringMapInput
	UseEbsOptimizedInstances pulumi.BoolPtrInput
}

func (RailsAppLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*railsAppLayerArgs)(nil)).Elem()
}

type RailsAppLayerInput interface {
	pulumi.Input

	ToRailsAppLayerOutput() RailsAppLayerOutput
	ToRailsAppLayerOutputWithContext(ctx context.Context) RailsAppLayerOutput
}

func (*RailsAppLayer) ElementType() reflect.Type {
	return reflect.TypeOf((**RailsAppLayer)(nil)).Elem()
}

func (i *RailsAppLayer) ToRailsAppLayerOutput() RailsAppLayerOutput {
	return i.ToRailsAppLayerOutputWithContext(context.Background())
}

func (i *RailsAppLayer) ToRailsAppLayerOutputWithContext(ctx context.Context) RailsAppLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerOutput)
}

// RailsAppLayerArrayInput is an input type that accepts RailsAppLayerArray and RailsAppLayerArrayOutput values.
// You can construct a concrete instance of `RailsAppLayerArrayInput` via:
//
//	RailsAppLayerArray{ RailsAppLayerArgs{...} }
type RailsAppLayerArrayInput interface {
	pulumi.Input

	ToRailsAppLayerArrayOutput() RailsAppLayerArrayOutput
	ToRailsAppLayerArrayOutputWithContext(context.Context) RailsAppLayerArrayOutput
}

type RailsAppLayerArray []RailsAppLayerInput

func (RailsAppLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RailsAppLayer)(nil)).Elem()
}

func (i RailsAppLayerArray) ToRailsAppLayerArrayOutput() RailsAppLayerArrayOutput {
	return i.ToRailsAppLayerArrayOutputWithContext(context.Background())
}

func (i RailsAppLayerArray) ToRailsAppLayerArrayOutputWithContext(ctx context.Context) RailsAppLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerArrayOutput)
}

// RailsAppLayerMapInput is an input type that accepts RailsAppLayerMap and RailsAppLayerMapOutput values.
// You can construct a concrete instance of `RailsAppLayerMapInput` via:
//
//	RailsAppLayerMap{ "key": RailsAppLayerArgs{...} }
type RailsAppLayerMapInput interface {
	pulumi.Input

	ToRailsAppLayerMapOutput() RailsAppLayerMapOutput
	ToRailsAppLayerMapOutputWithContext(context.Context) RailsAppLayerMapOutput
}

type RailsAppLayerMap map[string]RailsAppLayerInput

func (RailsAppLayerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RailsAppLayer)(nil)).Elem()
}

func (i RailsAppLayerMap) ToRailsAppLayerMapOutput() RailsAppLayerMapOutput {
	return i.ToRailsAppLayerMapOutputWithContext(context.Background())
}

func (i RailsAppLayerMap) ToRailsAppLayerMapOutputWithContext(ctx context.Context) RailsAppLayerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RailsAppLayerMapOutput)
}

type RailsAppLayerOutput struct{ *pulumi.OutputState }

func (RailsAppLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RailsAppLayer)(nil)).Elem()
}

func (o RailsAppLayerOutput) ToRailsAppLayerOutput() RailsAppLayerOutput {
	return o
}

func (o RailsAppLayerOutput) ToRailsAppLayerOutputWithContext(ctx context.Context) RailsAppLayerOutput {
	return o
}

func (o RailsAppLayerOutput) AppServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.AppServer }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o RailsAppLayerOutput) AutoAssignElasticIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.BoolPtrOutput { return v.AutoAssignElasticIps }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerOutput) AutoAssignPublicIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.BoolPtrOutput { return v.AutoAssignPublicIps }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerOutput) AutoHealing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.BoolPtrOutput { return v.AutoHealing }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerOutput) BundlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.BundlerVersion }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) CloudwatchConfiguration() RailsAppLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) RailsAppLayerCloudwatchConfigurationPtrOutput { return v.CloudwatchConfiguration }).(RailsAppLayerCloudwatchConfigurationPtrOutput)
}

func (o RailsAppLayerOutput) CustomConfigureRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringArrayOutput { return v.CustomConfigureRecipes }).(pulumi.StringArrayOutput)
}

func (o RailsAppLayerOutput) CustomDeployRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringArrayOutput { return v.CustomDeployRecipes }).(pulumi.StringArrayOutput)
}

func (o RailsAppLayerOutput) CustomInstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.CustomInstanceProfileArn }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) CustomJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.CustomJson }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) CustomSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringArrayOutput { return v.CustomSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o RailsAppLayerOutput) CustomSetupRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringArrayOutput { return v.CustomSetupRecipes }).(pulumi.StringArrayOutput)
}

func (o RailsAppLayerOutput) CustomShutdownRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringArrayOutput { return v.CustomShutdownRecipes }).(pulumi.StringArrayOutput)
}

func (o RailsAppLayerOutput) CustomUndeployRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringArrayOutput { return v.CustomUndeployRecipes }).(pulumi.StringArrayOutput)
}

func (o RailsAppLayerOutput) DrainElbOnShutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.BoolPtrOutput { return v.DrainElbOnShutdown }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerOutput) EbsVolumes() RailsAppLayerEbsVolumeArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) RailsAppLayerEbsVolumeArrayOutput { return v.EbsVolumes }).(RailsAppLayerEbsVolumeArrayOutput)
}

func (o RailsAppLayerOutput) ElasticLoadBalancer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.ElasticLoadBalancer }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) InstallUpdatesOnBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.BoolPtrOutput { return v.InstallUpdatesOnBoot }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerOutput) InstanceShutdownTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.IntPtrOutput { return v.InstanceShutdownTimeout }).(pulumi.IntPtrOutput)
}

func (o RailsAppLayerOutput) LoadBasedAutoScaling() RailsAppLayerLoadBasedAutoScalingOutput {
	return o.ApplyT(func(v *RailsAppLayer) RailsAppLayerLoadBasedAutoScalingOutput { return v.LoadBasedAutoScaling }).(RailsAppLayerLoadBasedAutoScalingOutput)
}

func (o RailsAppLayerOutput) ManageBundler() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.BoolPtrOutput { return v.ManageBundler }).(pulumi.BoolPtrOutput)
}

func (o RailsAppLayerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RailsAppLayerOutput) PassengerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.PassengerVersion }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) RubyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.RubyVersion }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) RubygemsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringPtrOutput { return v.RubygemsVersion }).(pulumi.StringPtrOutput)
}

func (o RailsAppLayerOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringOutput { return v.StackId }).(pulumi.StringOutput)
}

func (o RailsAppLayerOutput) SystemPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringArrayOutput { return v.SystemPackages }).(pulumi.StringArrayOutput)
}

func (o RailsAppLayerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o RailsAppLayerOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o RailsAppLayerOutput) UseEbsOptimizedInstances() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RailsAppLayer) pulumi.BoolPtrOutput { return v.UseEbsOptimizedInstances }).(pulumi.BoolPtrOutput)
}

type RailsAppLayerArrayOutput struct{ *pulumi.OutputState }

func (RailsAppLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RailsAppLayer)(nil)).Elem()
}

func (o RailsAppLayerArrayOutput) ToRailsAppLayerArrayOutput() RailsAppLayerArrayOutput {
	return o
}

func (o RailsAppLayerArrayOutput) ToRailsAppLayerArrayOutputWithContext(ctx context.Context) RailsAppLayerArrayOutput {
	return o
}

func (o RailsAppLayerArrayOutput) Index(i pulumi.IntInput) RailsAppLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RailsAppLayer {
		return vs[0].([]*RailsAppLayer)[vs[1].(int)]
	}).(RailsAppLayerOutput)
}

type RailsAppLayerMapOutput struct{ *pulumi.OutputState }

func (RailsAppLayerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RailsAppLayer)(nil)).Elem()
}

func (o RailsAppLayerMapOutput) ToRailsAppLayerMapOutput() RailsAppLayerMapOutput {
	return o
}

func (o RailsAppLayerMapOutput) ToRailsAppLayerMapOutputWithContext(ctx context.Context) RailsAppLayerMapOutput {
	return o
}

func (o RailsAppLayerMapOutput) MapIndex(k pulumi.StringInput) RailsAppLayerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RailsAppLayer {
		return vs[0].(map[string]*RailsAppLayer)[vs[1].(string)]
	}).(RailsAppLayerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerInput)(nil)).Elem(), &RailsAppLayer{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerArrayInput)(nil)).Elem(), RailsAppLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RailsAppLayerMapInput)(nil)).Elem(), RailsAppLayerMap{})
	pulumi.RegisterOutputType(RailsAppLayerOutput{})
	pulumi.RegisterOutputType(RailsAppLayerArrayOutput{})
	pulumi.RegisterOutputType(RailsAppLayerMapOutput{})
}
