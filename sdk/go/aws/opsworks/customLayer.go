// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an OpsWorks custom layer resource.
//
// ## Import
//
// OpsWorks Custom Layers can be imported using the `id`, e.g.,
//
// ```sh
//
//	$ pulumi import aws:opsworks/customLayer:CustomLayer bar 00000000-0000-0000-0000-000000000000
//
// ```
type CustomLayer struct {
	pulumi.CustomResourceState
}

// NewCustomLayer registers a new resource with the given unique name, arguments, and options.
func NewCustomLayer(ctx *pulumi.Context,
	name string, args *CustomLayerArgs, opts ...pulumi.ResourceOption) (*CustomLayer, error) {
	if args == nil {
		args = &CustomLayerArgs{}
	}

	var resource CustomLayer
	err := ctx.RegisterResource("aws:opsworks/customLayer:CustomLayer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomLayer gets an existing CustomLayer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomLayer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomLayerState, opts ...pulumi.ResourceOption) (*CustomLayer, error) {
	var resource CustomLayer
	err := ctx.ReadResource("aws:opsworks/customLayer:CustomLayer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomLayer resources.
type customLayerState struct {
}

type CustomLayerState struct {
}

func (CustomLayerState) ElementType() reflect.Type {
	return reflect.TypeOf((*customLayerState)(nil)).Elem()
}

type customLayerArgs struct {
}

// The set of arguments for constructing a CustomLayer resource.
type CustomLayerArgs struct {
}

func (CustomLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customLayerArgs)(nil)).Elem()
}

type CustomLayerInput interface {
	pulumi.Input

	ToCustomLayerOutput() CustomLayerOutput
	ToCustomLayerOutputWithContext(ctx context.Context) CustomLayerOutput
}

func (*CustomLayer) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLayer)(nil)).Elem()
}

func (i *CustomLayer) ToCustomLayerOutput() CustomLayerOutput {
	return i.ToCustomLayerOutputWithContext(context.Background())
}

func (i *CustomLayer) ToCustomLayerOutputWithContext(ctx context.Context) CustomLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerOutput)
}

// CustomLayerArrayInput is an input type that accepts CustomLayerArray and CustomLayerArrayOutput values.
// You can construct a concrete instance of `CustomLayerArrayInput` via:
//
//	CustomLayerArray{ CustomLayerArgs{...} }
type CustomLayerArrayInput interface {
	pulumi.Input

	ToCustomLayerArrayOutput() CustomLayerArrayOutput
	ToCustomLayerArrayOutputWithContext(context.Context) CustomLayerArrayOutput
}

type CustomLayerArray []CustomLayerInput

func (CustomLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomLayer)(nil)).Elem()
}

func (i CustomLayerArray) ToCustomLayerArrayOutput() CustomLayerArrayOutput {
	return i.ToCustomLayerArrayOutputWithContext(context.Background())
}

func (i CustomLayerArray) ToCustomLayerArrayOutputWithContext(ctx context.Context) CustomLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerArrayOutput)
}

// CustomLayerMapInput is an input type that accepts CustomLayerMap and CustomLayerMapOutput values.
// You can construct a concrete instance of `CustomLayerMapInput` via:
//
//	CustomLayerMap{ "key": CustomLayerArgs{...} }
type CustomLayerMapInput interface {
	pulumi.Input

	ToCustomLayerMapOutput() CustomLayerMapOutput
	ToCustomLayerMapOutputWithContext(context.Context) CustomLayerMapOutput
}

type CustomLayerMap map[string]CustomLayerInput

func (CustomLayerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomLayer)(nil)).Elem()
}

func (i CustomLayerMap) ToCustomLayerMapOutput() CustomLayerMapOutput {
	return i.ToCustomLayerMapOutputWithContext(context.Background())
}

func (i CustomLayerMap) ToCustomLayerMapOutputWithContext(ctx context.Context) CustomLayerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLayerMapOutput)
}

type CustomLayerOutput struct{ *pulumi.OutputState }

func (CustomLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLayer)(nil)).Elem()
}

func (o CustomLayerOutput) ToCustomLayerOutput() CustomLayerOutput {
	return o
}

func (o CustomLayerOutput) ToCustomLayerOutputWithContext(ctx context.Context) CustomLayerOutput {
	return o
}

type CustomLayerArrayOutput struct{ *pulumi.OutputState }

func (CustomLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomLayer)(nil)).Elem()
}

func (o CustomLayerArrayOutput) ToCustomLayerArrayOutput() CustomLayerArrayOutput {
	return o
}

func (o CustomLayerArrayOutput) ToCustomLayerArrayOutputWithContext(ctx context.Context) CustomLayerArrayOutput {
	return o
}

func (o CustomLayerArrayOutput) Index(i pulumi.IntInput) CustomLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomLayer {
		return vs[0].([]*CustomLayer)[vs[1].(int)]
	}).(CustomLayerOutput)
}

type CustomLayerMapOutput struct{ *pulumi.OutputState }

func (CustomLayerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomLayer)(nil)).Elem()
}

func (o CustomLayerMapOutput) ToCustomLayerMapOutput() CustomLayerMapOutput {
	return o
}

func (o CustomLayerMapOutput) ToCustomLayerMapOutputWithContext(ctx context.Context) CustomLayerMapOutput {
	return o
}

func (o CustomLayerMapOutput) MapIndex(k pulumi.StringInput) CustomLayerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomLayer {
		return vs[0].(map[string]*CustomLayer)[vs[1].(string)]
	}).(CustomLayerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerInput)(nil)).Elem(), &CustomLayer{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerArrayInput)(nil)).Elem(), CustomLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLayerMapInput)(nil)).Elem(), CustomLayerMap{})
	pulumi.RegisterOutputType(CustomLayerOutput{})
	pulumi.RegisterOutputType(CustomLayerArrayOutput{})
	pulumi.RegisterOutputType(CustomLayerMapOutput{})
}
