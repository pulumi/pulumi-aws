// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EcsClusterLayer struct {
	pulumi.CustomResourceState

	Arn                      pulumi.StringOutput                             `pulumi:"arn"`
	AutoAssignElasticIps     pulumi.BoolPtrOutput                            `pulumi:"autoAssignElasticIps"`
	AutoAssignPublicIps      pulumi.BoolPtrOutput                            `pulumi:"autoAssignPublicIps"`
	AutoHealing              pulumi.BoolPtrOutput                            `pulumi:"autoHealing"`
	CloudwatchConfiguration  EcsClusterLayerCloudwatchConfigurationPtrOutput `pulumi:"cloudwatchConfiguration"`
	CustomConfigureRecipes   pulumi.StringArrayOutput                        `pulumi:"customConfigureRecipes"`
	CustomDeployRecipes      pulumi.StringArrayOutput                        `pulumi:"customDeployRecipes"`
	CustomInstanceProfileArn pulumi.StringPtrOutput                          `pulumi:"customInstanceProfileArn"`
	CustomJson               pulumi.StringPtrOutput                          `pulumi:"customJson"`
	CustomSecurityGroupIds   pulumi.StringArrayOutput                        `pulumi:"customSecurityGroupIds"`
	CustomSetupRecipes       pulumi.StringArrayOutput                        `pulumi:"customSetupRecipes"`
	CustomShutdownRecipes    pulumi.StringArrayOutput                        `pulumi:"customShutdownRecipes"`
	CustomUndeployRecipes    pulumi.StringArrayOutput                        `pulumi:"customUndeployRecipes"`
	DrainElbOnShutdown       pulumi.BoolPtrOutput                            `pulumi:"drainElbOnShutdown"`
	EbsVolumes               EcsClusterLayerEbsVolumeArrayOutput             `pulumi:"ebsVolumes"`
	EcsClusterArn            pulumi.StringOutput                             `pulumi:"ecsClusterArn"`
	ElasticLoadBalancer      pulumi.StringPtrOutput                          `pulumi:"elasticLoadBalancer"`
	InstallUpdatesOnBoot     pulumi.BoolPtrOutput                            `pulumi:"installUpdatesOnBoot"`
	InstanceShutdownTimeout  pulumi.IntPtrOutput                             `pulumi:"instanceShutdownTimeout"`
	LoadBasedAutoScaling     EcsClusterLayerLoadBasedAutoScalingOutput       `pulumi:"loadBasedAutoScaling"`
	Name                     pulumi.StringOutput                             `pulumi:"name"`
	StackId                  pulumi.StringOutput                             `pulumi:"stackId"`
	SystemPackages           pulumi.StringArrayOutput                        `pulumi:"systemPackages"`
	Tags                     pulumi.StringMapOutput                          `pulumi:"tags"`
	TagsAll                  pulumi.StringMapOutput                          `pulumi:"tagsAll"`
	UseEbsOptimizedInstances pulumi.BoolPtrOutput                            `pulumi:"useEbsOptimizedInstances"`
}

// NewEcsClusterLayer registers a new resource with the given unique name, arguments, and options.
func NewEcsClusterLayer(ctx *pulumi.Context,
	name string, args *EcsClusterLayerArgs, opts ...pulumi.ResourceOption) (*EcsClusterLayer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EcsClusterArn == nil {
		return nil, errors.New("invalid value for required argument 'EcsClusterArn'")
	}
	if args.StackId == nil {
		return nil, errors.New("invalid value for required argument 'StackId'")
	}
	var resource EcsClusterLayer
	err := ctx.RegisterResource("aws:opsworks/ecsClusterLayer:EcsClusterLayer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEcsClusterLayer gets an existing EcsClusterLayer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEcsClusterLayer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EcsClusterLayerState, opts ...pulumi.ResourceOption) (*EcsClusterLayer, error) {
	var resource EcsClusterLayer
	err := ctx.ReadResource("aws:opsworks/ecsClusterLayer:EcsClusterLayer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EcsClusterLayer resources.
type ecsClusterLayerState struct {
	Arn                      *string                                 `pulumi:"arn"`
	AutoAssignElasticIps     *bool                                   `pulumi:"autoAssignElasticIps"`
	AutoAssignPublicIps      *bool                                   `pulumi:"autoAssignPublicIps"`
	AutoHealing              *bool                                   `pulumi:"autoHealing"`
	CloudwatchConfiguration  *EcsClusterLayerCloudwatchConfiguration `pulumi:"cloudwatchConfiguration"`
	CustomConfigureRecipes   []string                                `pulumi:"customConfigureRecipes"`
	CustomDeployRecipes      []string                                `pulumi:"customDeployRecipes"`
	CustomInstanceProfileArn *string                                 `pulumi:"customInstanceProfileArn"`
	CustomJson               *string                                 `pulumi:"customJson"`
	CustomSecurityGroupIds   []string                                `pulumi:"customSecurityGroupIds"`
	CustomSetupRecipes       []string                                `pulumi:"customSetupRecipes"`
	CustomShutdownRecipes    []string                                `pulumi:"customShutdownRecipes"`
	CustomUndeployRecipes    []string                                `pulumi:"customUndeployRecipes"`
	DrainElbOnShutdown       *bool                                   `pulumi:"drainElbOnShutdown"`
	EbsVolumes               []EcsClusterLayerEbsVolume              `pulumi:"ebsVolumes"`
	EcsClusterArn            *string                                 `pulumi:"ecsClusterArn"`
	ElasticLoadBalancer      *string                                 `pulumi:"elasticLoadBalancer"`
	InstallUpdatesOnBoot     *bool                                   `pulumi:"installUpdatesOnBoot"`
	InstanceShutdownTimeout  *int                                    `pulumi:"instanceShutdownTimeout"`
	LoadBasedAutoScaling     *EcsClusterLayerLoadBasedAutoScaling    `pulumi:"loadBasedAutoScaling"`
	Name                     *string                                 `pulumi:"name"`
	StackId                  *string                                 `pulumi:"stackId"`
	SystemPackages           []string                                `pulumi:"systemPackages"`
	Tags                     map[string]string                       `pulumi:"tags"`
	TagsAll                  map[string]string                       `pulumi:"tagsAll"`
	UseEbsOptimizedInstances *bool                                   `pulumi:"useEbsOptimizedInstances"`
}

type EcsClusterLayerState struct {
	Arn                      pulumi.StringPtrInput
	AutoAssignElasticIps     pulumi.BoolPtrInput
	AutoAssignPublicIps      pulumi.BoolPtrInput
	AutoHealing              pulumi.BoolPtrInput
	CloudwatchConfiguration  EcsClusterLayerCloudwatchConfigurationPtrInput
	CustomConfigureRecipes   pulumi.StringArrayInput
	CustomDeployRecipes      pulumi.StringArrayInput
	CustomInstanceProfileArn pulumi.StringPtrInput
	CustomJson               pulumi.StringPtrInput
	CustomSecurityGroupIds   pulumi.StringArrayInput
	CustomSetupRecipes       pulumi.StringArrayInput
	CustomShutdownRecipes    pulumi.StringArrayInput
	CustomUndeployRecipes    pulumi.StringArrayInput
	DrainElbOnShutdown       pulumi.BoolPtrInput
	EbsVolumes               EcsClusterLayerEbsVolumeArrayInput
	EcsClusterArn            pulumi.StringPtrInput
	ElasticLoadBalancer      pulumi.StringPtrInput
	InstallUpdatesOnBoot     pulumi.BoolPtrInput
	InstanceShutdownTimeout  pulumi.IntPtrInput
	LoadBasedAutoScaling     EcsClusterLayerLoadBasedAutoScalingPtrInput
	Name                     pulumi.StringPtrInput
	StackId                  pulumi.StringPtrInput
	SystemPackages           pulumi.StringArrayInput
	Tags                     pulumi.StringMapInput
	TagsAll                  pulumi.StringMapInput
	UseEbsOptimizedInstances pulumi.BoolPtrInput
}

func (EcsClusterLayerState) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsClusterLayerState)(nil)).Elem()
}

type ecsClusterLayerArgs struct {
	AutoAssignElasticIps     *bool                                   `pulumi:"autoAssignElasticIps"`
	AutoAssignPublicIps      *bool                                   `pulumi:"autoAssignPublicIps"`
	AutoHealing              *bool                                   `pulumi:"autoHealing"`
	CloudwatchConfiguration  *EcsClusterLayerCloudwatchConfiguration `pulumi:"cloudwatchConfiguration"`
	CustomConfigureRecipes   []string                                `pulumi:"customConfigureRecipes"`
	CustomDeployRecipes      []string                                `pulumi:"customDeployRecipes"`
	CustomInstanceProfileArn *string                                 `pulumi:"customInstanceProfileArn"`
	CustomJson               *string                                 `pulumi:"customJson"`
	CustomSecurityGroupIds   []string                                `pulumi:"customSecurityGroupIds"`
	CustomSetupRecipes       []string                                `pulumi:"customSetupRecipes"`
	CustomShutdownRecipes    []string                                `pulumi:"customShutdownRecipes"`
	CustomUndeployRecipes    []string                                `pulumi:"customUndeployRecipes"`
	DrainElbOnShutdown       *bool                                   `pulumi:"drainElbOnShutdown"`
	EbsVolumes               []EcsClusterLayerEbsVolume              `pulumi:"ebsVolumes"`
	EcsClusterArn            string                                  `pulumi:"ecsClusterArn"`
	ElasticLoadBalancer      *string                                 `pulumi:"elasticLoadBalancer"`
	InstallUpdatesOnBoot     *bool                                   `pulumi:"installUpdatesOnBoot"`
	InstanceShutdownTimeout  *int                                    `pulumi:"instanceShutdownTimeout"`
	LoadBasedAutoScaling     *EcsClusterLayerLoadBasedAutoScaling    `pulumi:"loadBasedAutoScaling"`
	Name                     *string                                 `pulumi:"name"`
	StackId                  string                                  `pulumi:"stackId"`
	SystemPackages           []string                                `pulumi:"systemPackages"`
	Tags                     map[string]string                       `pulumi:"tags"`
	UseEbsOptimizedInstances *bool                                   `pulumi:"useEbsOptimizedInstances"`
}

// The set of arguments for constructing a EcsClusterLayer resource.
type EcsClusterLayerArgs struct {
	AutoAssignElasticIps     pulumi.BoolPtrInput
	AutoAssignPublicIps      pulumi.BoolPtrInput
	AutoHealing              pulumi.BoolPtrInput
	CloudwatchConfiguration  EcsClusterLayerCloudwatchConfigurationPtrInput
	CustomConfigureRecipes   pulumi.StringArrayInput
	CustomDeployRecipes      pulumi.StringArrayInput
	CustomInstanceProfileArn pulumi.StringPtrInput
	CustomJson               pulumi.StringPtrInput
	CustomSecurityGroupIds   pulumi.StringArrayInput
	CustomSetupRecipes       pulumi.StringArrayInput
	CustomShutdownRecipes    pulumi.StringArrayInput
	CustomUndeployRecipes    pulumi.StringArrayInput
	DrainElbOnShutdown       pulumi.BoolPtrInput
	EbsVolumes               EcsClusterLayerEbsVolumeArrayInput
	EcsClusterArn            pulumi.StringInput
	ElasticLoadBalancer      pulumi.StringPtrInput
	InstallUpdatesOnBoot     pulumi.BoolPtrInput
	InstanceShutdownTimeout  pulumi.IntPtrInput
	LoadBasedAutoScaling     EcsClusterLayerLoadBasedAutoScalingPtrInput
	Name                     pulumi.StringPtrInput
	StackId                  pulumi.StringInput
	SystemPackages           pulumi.StringArrayInput
	Tags                     pulumi.StringMapInput
	UseEbsOptimizedInstances pulumi.BoolPtrInput
}

func (EcsClusterLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ecsClusterLayerArgs)(nil)).Elem()
}

type EcsClusterLayerInput interface {
	pulumi.Input

	ToEcsClusterLayerOutput() EcsClusterLayerOutput
	ToEcsClusterLayerOutputWithContext(ctx context.Context) EcsClusterLayerOutput
}

func (*EcsClusterLayer) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsClusterLayer)(nil)).Elem()
}

func (i *EcsClusterLayer) ToEcsClusterLayerOutput() EcsClusterLayerOutput {
	return i.ToEcsClusterLayerOutputWithContext(context.Background())
}

func (i *EcsClusterLayer) ToEcsClusterLayerOutputWithContext(ctx context.Context) EcsClusterLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerOutput)
}

// EcsClusterLayerArrayInput is an input type that accepts EcsClusterLayerArray and EcsClusterLayerArrayOutput values.
// You can construct a concrete instance of `EcsClusterLayerArrayInput` via:
//
//	EcsClusterLayerArray{ EcsClusterLayerArgs{...} }
type EcsClusterLayerArrayInput interface {
	pulumi.Input

	ToEcsClusterLayerArrayOutput() EcsClusterLayerArrayOutput
	ToEcsClusterLayerArrayOutputWithContext(context.Context) EcsClusterLayerArrayOutput
}

type EcsClusterLayerArray []EcsClusterLayerInput

func (EcsClusterLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsClusterLayer)(nil)).Elem()
}

func (i EcsClusterLayerArray) ToEcsClusterLayerArrayOutput() EcsClusterLayerArrayOutput {
	return i.ToEcsClusterLayerArrayOutputWithContext(context.Background())
}

func (i EcsClusterLayerArray) ToEcsClusterLayerArrayOutputWithContext(ctx context.Context) EcsClusterLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerArrayOutput)
}

// EcsClusterLayerMapInput is an input type that accepts EcsClusterLayerMap and EcsClusterLayerMapOutput values.
// You can construct a concrete instance of `EcsClusterLayerMapInput` via:
//
//	EcsClusterLayerMap{ "key": EcsClusterLayerArgs{...} }
type EcsClusterLayerMapInput interface {
	pulumi.Input

	ToEcsClusterLayerMapOutput() EcsClusterLayerMapOutput
	ToEcsClusterLayerMapOutputWithContext(context.Context) EcsClusterLayerMapOutput
}

type EcsClusterLayerMap map[string]EcsClusterLayerInput

func (EcsClusterLayerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsClusterLayer)(nil)).Elem()
}

func (i EcsClusterLayerMap) ToEcsClusterLayerMapOutput() EcsClusterLayerMapOutput {
	return i.ToEcsClusterLayerMapOutputWithContext(context.Background())
}

func (i EcsClusterLayerMap) ToEcsClusterLayerMapOutputWithContext(ctx context.Context) EcsClusterLayerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcsClusterLayerMapOutput)
}

type EcsClusterLayerOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EcsClusterLayer)(nil)).Elem()
}

func (o EcsClusterLayerOutput) ToEcsClusterLayerOutput() EcsClusterLayerOutput {
	return o
}

func (o EcsClusterLayerOutput) ToEcsClusterLayerOutputWithContext(ctx context.Context) EcsClusterLayerOutput {
	return o
}

func (o EcsClusterLayerOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o EcsClusterLayerOutput) AutoAssignElasticIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.BoolPtrOutput { return v.AutoAssignElasticIps }).(pulumi.BoolPtrOutput)
}

func (o EcsClusterLayerOutput) AutoAssignPublicIps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.BoolPtrOutput { return v.AutoAssignPublicIps }).(pulumi.BoolPtrOutput)
}

func (o EcsClusterLayerOutput) AutoHealing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.BoolPtrOutput { return v.AutoHealing }).(pulumi.BoolPtrOutput)
}

func (o EcsClusterLayerOutput) CloudwatchConfiguration() EcsClusterLayerCloudwatchConfigurationPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) EcsClusterLayerCloudwatchConfigurationPtrOutput {
		return v.CloudwatchConfiguration
	}).(EcsClusterLayerCloudwatchConfigurationPtrOutput)
}

func (o EcsClusterLayerOutput) CustomConfigureRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringArrayOutput { return v.CustomConfigureRecipes }).(pulumi.StringArrayOutput)
}

func (o EcsClusterLayerOutput) CustomDeployRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringArrayOutput { return v.CustomDeployRecipes }).(pulumi.StringArrayOutput)
}

func (o EcsClusterLayerOutput) CustomInstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringPtrOutput { return v.CustomInstanceProfileArn }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerOutput) CustomJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringPtrOutput { return v.CustomJson }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerOutput) CustomSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringArrayOutput { return v.CustomSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o EcsClusterLayerOutput) CustomSetupRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringArrayOutput { return v.CustomSetupRecipes }).(pulumi.StringArrayOutput)
}

func (o EcsClusterLayerOutput) CustomShutdownRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringArrayOutput { return v.CustomShutdownRecipes }).(pulumi.StringArrayOutput)
}

func (o EcsClusterLayerOutput) CustomUndeployRecipes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringArrayOutput { return v.CustomUndeployRecipes }).(pulumi.StringArrayOutput)
}

func (o EcsClusterLayerOutput) DrainElbOnShutdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.BoolPtrOutput { return v.DrainElbOnShutdown }).(pulumi.BoolPtrOutput)
}

func (o EcsClusterLayerOutput) EbsVolumes() EcsClusterLayerEbsVolumeArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) EcsClusterLayerEbsVolumeArrayOutput { return v.EbsVolumes }).(EcsClusterLayerEbsVolumeArrayOutput)
}

func (o EcsClusterLayerOutput) EcsClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringOutput { return v.EcsClusterArn }).(pulumi.StringOutput)
}

func (o EcsClusterLayerOutput) ElasticLoadBalancer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringPtrOutput { return v.ElasticLoadBalancer }).(pulumi.StringPtrOutput)
}

func (o EcsClusterLayerOutput) InstallUpdatesOnBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.BoolPtrOutput { return v.InstallUpdatesOnBoot }).(pulumi.BoolPtrOutput)
}

func (o EcsClusterLayerOutput) InstanceShutdownTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.IntPtrOutput { return v.InstanceShutdownTimeout }).(pulumi.IntPtrOutput)
}

func (o EcsClusterLayerOutput) LoadBasedAutoScaling() EcsClusterLayerLoadBasedAutoScalingOutput {
	return o.ApplyT(func(v *EcsClusterLayer) EcsClusterLayerLoadBasedAutoScalingOutput { return v.LoadBasedAutoScaling }).(EcsClusterLayerLoadBasedAutoScalingOutput)
}

func (o EcsClusterLayerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EcsClusterLayerOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringOutput { return v.StackId }).(pulumi.StringOutput)
}

func (o EcsClusterLayerOutput) SystemPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringArrayOutput { return v.SystemPackages }).(pulumi.StringArrayOutput)
}

func (o EcsClusterLayerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o EcsClusterLayerOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o EcsClusterLayerOutput) UseEbsOptimizedInstances() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EcsClusterLayer) pulumi.BoolPtrOutput { return v.UseEbsOptimizedInstances }).(pulumi.BoolPtrOutput)
}

type EcsClusterLayerArrayOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EcsClusterLayer)(nil)).Elem()
}

func (o EcsClusterLayerArrayOutput) ToEcsClusterLayerArrayOutput() EcsClusterLayerArrayOutput {
	return o
}

func (o EcsClusterLayerArrayOutput) ToEcsClusterLayerArrayOutputWithContext(ctx context.Context) EcsClusterLayerArrayOutput {
	return o
}

func (o EcsClusterLayerArrayOutput) Index(i pulumi.IntInput) EcsClusterLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EcsClusterLayer {
		return vs[0].([]*EcsClusterLayer)[vs[1].(int)]
	}).(EcsClusterLayerOutput)
}

type EcsClusterLayerMapOutput struct{ *pulumi.OutputState }

func (EcsClusterLayerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EcsClusterLayer)(nil)).Elem()
}

func (o EcsClusterLayerMapOutput) ToEcsClusterLayerMapOutput() EcsClusterLayerMapOutput {
	return o
}

func (o EcsClusterLayerMapOutput) ToEcsClusterLayerMapOutputWithContext(ctx context.Context) EcsClusterLayerMapOutput {
	return o
}

func (o EcsClusterLayerMapOutput) MapIndex(k pulumi.StringInput) EcsClusterLayerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EcsClusterLayer {
		return vs[0].(map[string]*EcsClusterLayer)[vs[1].(string)]
	}).(EcsClusterLayerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerInput)(nil)).Elem(), &EcsClusterLayer{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerArrayInput)(nil)).Elem(), EcsClusterLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EcsClusterLayerMapInput)(nil)).Elem(), EcsClusterLayerMap{})
	pulumi.RegisterOutputType(EcsClusterLayerOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerArrayOutput{})
	pulumi.RegisterOutputType(EcsClusterLayerMapOutput{})
}
