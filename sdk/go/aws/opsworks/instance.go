// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an OpsWorks instance resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/opsworks"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := opsworks.NewInstance(ctx, "my-instance", &opsworks.InstanceArgs{
//				StackId: pulumi.Any(aws_opsworks_stack.Main.Id),
//				LayerIds: pulumi.StringArray{
//					aws_opsworks_custom_layer.MyLayer.Id,
//				},
//				InstanceType: pulumi.String("t2.micro"),
//				Os:           pulumi.String("Amazon Linux 2015.09"),
//				State:        pulumi.String("stopped"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Block devices
//
// Each of the `*_block_device` attributes controls a portion of the AWS
// Instance's "Block Device Mapping". It's a good idea to familiarize yourself with [AWS's Block Device
// Mapping docs](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)
// to understand the implications of using these attributes.
//
// ### `ebsBlockDevice`
//
// * `deleteOnTermination` - (Optional) Whether the volume should be destroyed on instance termination. Default is `true`.
// * `deviceName` - (Required) Name of the device to mount.
// * `iops` - (Optional) Amount of provisioned [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volumeType` of `io1`.
// * `snapshotId` - (Optional) Snapshot ID to mount.
// * `volumeSize` - (Optional) Size of the volume in gigabytes.
// * `volumeType` - (Optional) Type of volume. Valid values are `standard`, `gp2`, or `io1`. Default is `standard`.
//
// Modifying any `ebsBlockDevice` currently requires resource replacement.
//
// ### `ephemeralBlockDevice`
//
// * `deviceName` - Name of the block device to mount on the instance.
// * `virtualName` - The [Instance Store Device Name](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
//
// Each AWS Instance type has a different set of Instance Store block devices
// available for attachment. AWS [publishes a
// list](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes)
// of which ephemeral devices are available on each type. The devices are always
// identified by the `virtualName` in the format `ephemeral{0..N}`.
//
// ### `rootBlockDevice`
//
// * `deleteOnTermination` - (Optional) Whether the volume should be destroyed on instance termination. Default is `true`.
// * `iops` - (Optional) Amount of provisioned [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volumeType` of `io1`.
// * `volumeSize` - (Optional) Size of the volume in gigabytes.
// * `volumeType` - (Optional) Type of volume. Valid values are `standard`, `gp2`, or `io1`. Default is `standard`.
//
// Modifying any of the `rootBlockDevice` settings requires resource
// replacement.
//
// > **NOTE:** Currently, changes to `*_block_device` configuration of _existing_
// resources cannot be automatically detected by this provider. After making updates
// to block device configuration, resource recreation can be manually triggered by
// using the [`up` command with the --replace argument](https://www.pulumi.com/docs/reference/cli/pulumi_up/).
//
// ## Import
//
// Using `pulumi import`, import Opsworks Instances using the instance `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:opsworks/instance:Instance my_instance 4d6d1710-ded9-42a1-b08e-b043ad7af1e2
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion pulumi.StringPtrOutput `pulumi:"agentVersion"`
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId pulumi.StringPtrOutput `pulumi:"amiId"`
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture pulumi.StringPtrOutput `pulumi:"architecture"`
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType pulumi.StringPtrOutput `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone pulumi.StringPtrOutput `pulumi:"availabilityZone"`
	// Time that the instance was created.
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs pulumi.BoolPtrOutput `pulumi:"deleteEbs"`
	// Whether to delete the Elastic IP on deletion.
	DeleteEip pulumi.BoolPtrOutput `pulumi:"deleteEip"`
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices InstanceEbsBlockDeviceArrayOutput `pulumi:"ebsBlockDevices"`
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolPtrOutput `pulumi:"ebsOptimized"`
	// EC2 instance ID.
	Ec2InstanceId pulumi.StringPtrOutput `pulumi:"ec2InstanceId"`
	// ECS cluster's ARN for container instances.
	EcsClusterArn pulumi.StringPtrOutput `pulumi:"ecsClusterArn"`
	// Instance Elastic IP address.
	ElasticIp pulumi.StringPtrOutput `pulumi:"elasticIp"`
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	// Instance's host name.
	Hostname pulumi.StringPtrOutput `pulumi:"hostname"`
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass pulumi.StringPtrOutput `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot pulumi.BoolPtrOutput `pulumi:"installUpdatesOnBoot"`
	// ARN of the instance's IAM profile.
	InstanceProfileArn pulumi.StringPtrOutput `pulumi:"instanceProfileArn"`
	// Type of instance to start.
	InstanceType pulumi.StringPtrOutput `pulumi:"instanceType"`
	// ID of the last service error.
	LastServiceErrorId pulumi.StringPtrOutput `pulumi:"lastServiceErrorId"`
	// List of the layers the instance will belong to.
	LayerIds pulumi.StringArrayOutput `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os pulumi.StringPtrOutput `pulumi:"os"`
	// Instance's platform.
	Platform pulumi.StringPtrOutput `pulumi:"platform"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumi.StringPtrOutput `pulumi:"privateDns"`
	// Private IP address assigned to the instance.
	PrivateIp pulumi.StringPtrOutput `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumi.StringPtrOutput `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringPtrOutput `pulumi:"publicIp"`
	// For registered instances, who performed the registration.
	RegisteredBy pulumi.StringPtrOutput `pulumi:"registeredBy"`
	// Instance's reported AWS OpsWorks Stacks agent version.
	ReportedAgentVersion pulumi.StringPtrOutput `pulumi:"reportedAgentVersion"`
	// For registered instances, the reported operating system family.
	ReportedOsFamily pulumi.StringPtrOutput `pulumi:"reportedOsFamily"`
	// For registered instances, the reported operating system name.
	ReportedOsName pulumi.StringPtrOutput `pulumi:"reportedOsName"`
	// For registered instances, the reported operating system version.
	ReportedOsVersion pulumi.StringPtrOutput `pulumi:"reportedOsVersion"`
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices InstanceRootBlockDeviceArrayOutput `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType pulumi.StringPtrOutput `pulumi:"rootDeviceType"`
	// Root device volume ID.
	RootDeviceVolumeId pulumi.StringPtrOutput `pulumi:"rootDeviceVolumeId"`
	// Associated security groups.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// SSH key's Deep Security Agent (DSA) fingerprint.
	SshHostDsaKeyFingerprint pulumi.StringPtrOutput `pulumi:"sshHostDsaKeyFingerprint"`
	// SSH key's RSA fingerprint.
	SshHostRsaKeyFingerprint pulumi.StringPtrOutput `pulumi:"sshHostRsaKeyFingerprint"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringPtrOutput `pulumi:"sshKeyName"`
	// Identifier of the stack the instance will belong to.
	//
	// The following arguments are optional:
	StackId pulumi.StringOutput `pulumi:"stackId"`
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Subnet ID to attach to.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy pulumi.StringPtrOutput `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType pulumi.StringPtrOutput `pulumi:"virtualizationType"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LayerIds == nil {
		return nil, errors.New("invalid value for required argument 'LayerIds'")
	}
	if args.StackId == nil {
		return nil, errors.New("invalid value for required argument 'StackId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("aws:opsworks/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:opsworks/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion *string `pulumi:"agentVersion"`
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId *string `pulumi:"amiId"`
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture *string `pulumi:"architecture"`
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType *string `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Time that the instance was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs *bool `pulumi:"deleteEbs"`
	// Whether to delete the Elastic IP on deletion.
	DeleteEip *bool `pulumi:"deleteEip"`
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// EC2 instance ID.
	Ec2InstanceId *string `pulumi:"ec2InstanceId"`
	// ECS cluster's ARN for container instances.
	EcsClusterArn *string `pulumi:"ecsClusterArn"`
	// Instance Elastic IP address.
	ElasticIp *string `pulumi:"elasticIp"`
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Instance's host name.
	Hostname *string `pulumi:"hostname"`
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass *string `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot *bool `pulumi:"installUpdatesOnBoot"`
	// ARN of the instance's IAM profile.
	InstanceProfileArn *string `pulumi:"instanceProfileArn"`
	// Type of instance to start.
	InstanceType *string `pulumi:"instanceType"`
	// ID of the last service error.
	LastServiceErrorId *string `pulumi:"lastServiceErrorId"`
	// List of the layers the instance will belong to.
	LayerIds []string `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os *string `pulumi:"os"`
	// Instance's platform.
	Platform *string `pulumi:"platform"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns *string `pulumi:"privateDns"`
	// Private IP address assigned to the instance.
	PrivateIp *string `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns *string `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable.
	PublicIp *string `pulumi:"publicIp"`
	// For registered instances, who performed the registration.
	RegisteredBy *string `pulumi:"registeredBy"`
	// Instance's reported AWS OpsWorks Stacks agent version.
	ReportedAgentVersion *string `pulumi:"reportedAgentVersion"`
	// For registered instances, the reported operating system family.
	ReportedOsFamily *string `pulumi:"reportedOsFamily"`
	// For registered instances, the reported operating system name.
	ReportedOsName *string `pulumi:"reportedOsName"`
	// For registered instances, the reported operating system version.
	ReportedOsVersion *string `pulumi:"reportedOsVersion"`
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices []InstanceRootBlockDevice `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType *string `pulumi:"rootDeviceType"`
	// Root device volume ID.
	RootDeviceVolumeId *string `pulumi:"rootDeviceVolumeId"`
	// Associated security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// SSH key's Deep Security Agent (DSA) fingerprint.
	SshHostDsaKeyFingerprint *string `pulumi:"sshHostDsaKeyFingerprint"`
	// SSH key's RSA fingerprint.
	SshHostRsaKeyFingerprint *string `pulumi:"sshHostRsaKeyFingerprint"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName *string `pulumi:"sshKeyName"`
	// Identifier of the stack the instance will belong to.
	//
	// The following arguments are optional:
	StackId *string `pulumi:"stackId"`
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State *string `pulumi:"state"`
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status *string `pulumi:"status"`
	// Subnet ID to attach to.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy *string `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

type InstanceState struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion pulumi.StringPtrInput
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId pulumi.StringPtrInput
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture pulumi.StringPtrInput
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType pulumi.StringPtrInput
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone pulumi.StringPtrInput
	// Time that the instance was created.
	CreatedAt pulumi.StringPtrInput
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs pulumi.BoolPtrInput
	// Whether to delete the Elastic IP on deletion.
	DeleteEip pulumi.BoolPtrInput
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices InstanceEbsBlockDeviceArrayInput
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolPtrInput
	// EC2 instance ID.
	Ec2InstanceId pulumi.StringPtrInput
	// ECS cluster's ARN for container instances.
	EcsClusterArn pulumi.StringPtrInput
	// Instance Elastic IP address.
	ElasticIp pulumi.StringPtrInput
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayInput
	// Instance's host name.
	Hostname pulumi.StringPtrInput
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass pulumi.StringPtrInput
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot pulumi.BoolPtrInput
	// ARN of the instance's IAM profile.
	InstanceProfileArn pulumi.StringPtrInput
	// Type of instance to start.
	InstanceType pulumi.StringPtrInput
	// ID of the last service error.
	LastServiceErrorId pulumi.StringPtrInput
	// List of the layers the instance will belong to.
	LayerIds pulumi.StringArrayInput
	// Name of operating system that will be installed.
	Os pulumi.StringPtrInput
	// Instance's platform.
	Platform pulumi.StringPtrInput
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumi.StringPtrInput
	// Private IP address assigned to the instance.
	PrivateIp pulumi.StringPtrInput
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumi.StringPtrInput
	// Public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringPtrInput
	// For registered instances, who performed the registration.
	RegisteredBy pulumi.StringPtrInput
	// Instance's reported AWS OpsWorks Stacks agent version.
	ReportedAgentVersion pulumi.StringPtrInput
	// For registered instances, the reported operating system family.
	ReportedOsFamily pulumi.StringPtrInput
	// For registered instances, the reported operating system name.
	ReportedOsName pulumi.StringPtrInput
	// For registered instances, the reported operating system version.
	ReportedOsVersion pulumi.StringPtrInput
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices InstanceRootBlockDeviceArrayInput
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType pulumi.StringPtrInput
	// Root device volume ID.
	RootDeviceVolumeId pulumi.StringPtrInput
	// Associated security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// SSH key's Deep Security Agent (DSA) fingerprint.
	SshHostDsaKeyFingerprint pulumi.StringPtrInput
	// SSH key's RSA fingerprint.
	SshHostRsaKeyFingerprint pulumi.StringPtrInput
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringPtrInput
	// Identifier of the stack the instance will belong to.
	//
	// The following arguments are optional:
	StackId pulumi.StringPtrInput
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State pulumi.StringPtrInput
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status pulumi.StringPtrInput
	// Subnet ID to attach to.
	SubnetId pulumi.StringPtrInput
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy pulumi.StringPtrInput
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion *string `pulumi:"agentVersion"`
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId *string `pulumi:"amiId"`
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture *string `pulumi:"architecture"`
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType *string `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Time that the instance was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs *bool `pulumi:"deleteEbs"`
	// Whether to delete the Elastic IP on deletion.
	DeleteEip *bool `pulumi:"deleteEip"`
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// ECS cluster's ARN for container instances.
	EcsClusterArn *string `pulumi:"ecsClusterArn"`
	// Instance Elastic IP address.
	ElasticIp *string `pulumi:"elasticIp"`
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Instance's host name.
	Hostname *string `pulumi:"hostname"`
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass *string `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot *bool `pulumi:"installUpdatesOnBoot"`
	// ARN of the instance's IAM profile.
	InstanceProfileArn *string `pulumi:"instanceProfileArn"`
	// Type of instance to start.
	InstanceType *string `pulumi:"instanceType"`
	// List of the layers the instance will belong to.
	LayerIds []string `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os *string `pulumi:"os"`
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices []InstanceRootBlockDevice `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType *string `pulumi:"rootDeviceType"`
	// Associated security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName *string `pulumi:"sshKeyName"`
	// Identifier of the stack the instance will belong to.
	//
	// The following arguments are optional:
	StackId string `pulumi:"stackId"`
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State *string `pulumi:"state"`
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status *string `pulumi:"status"`
	// Subnet ID to attach to.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy *string `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion pulumi.StringPtrInput
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId pulumi.StringPtrInput
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture pulumi.StringPtrInput
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType pulumi.StringPtrInput
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone pulumi.StringPtrInput
	// Time that the instance was created.
	CreatedAt pulumi.StringPtrInput
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs pulumi.BoolPtrInput
	// Whether to delete the Elastic IP on deletion.
	DeleteEip pulumi.BoolPtrInput
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices InstanceEbsBlockDeviceArrayInput
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolPtrInput
	// ECS cluster's ARN for container instances.
	EcsClusterArn pulumi.StringPtrInput
	// Instance Elastic IP address.
	ElasticIp pulumi.StringPtrInput
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayInput
	// Instance's host name.
	Hostname pulumi.StringPtrInput
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass pulumi.StringPtrInput
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot pulumi.BoolPtrInput
	// ARN of the instance's IAM profile.
	InstanceProfileArn pulumi.StringPtrInput
	// Type of instance to start.
	InstanceType pulumi.StringPtrInput
	// List of the layers the instance will belong to.
	LayerIds pulumi.StringArrayInput
	// Name of operating system that will be installed.
	Os pulumi.StringPtrInput
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices InstanceRootBlockDeviceArrayInput
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType pulumi.StringPtrInput
	// Associated security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringPtrInput
	// Identifier of the stack the instance will belong to.
	//
	// The following arguments are optional:
	StackId pulumi.StringInput
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State pulumi.StringPtrInput
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status pulumi.StringPtrInput
	// Subnet ID to attach to.
	SubnetId pulumi.StringPtrInput
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy pulumi.StringPtrInput
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// OpsWorks agent to install. Default is `INHERIT`.
func (o InstanceOutput) AgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AgentVersion }).(pulumi.StringPtrOutput)
}

// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
func (o InstanceOutput) AmiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AmiId }).(pulumi.StringPtrOutput)
}

// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
func (o InstanceOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Architecture }).(pulumi.StringPtrOutput)
}

// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
func (o InstanceOutput) AutoScalingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AutoScalingType }).(pulumi.StringPtrOutput)
}

// Name of the availability zone where instances will be created by default.
func (o InstanceOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Time that the instance was created.
func (o InstanceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Whether to delete EBS volume on deletion. Default is `true`.
func (o InstanceOutput) DeleteEbs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.DeleteEbs }).(pulumi.BoolPtrOutput)
}

// Whether to delete the Elastic IP on deletion.
func (o InstanceOutput) DeleteEip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.DeleteEip }).(pulumi.BoolPtrOutput)
}

// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
func (o InstanceOutput) EbsBlockDevices() InstanceEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(InstanceEbsBlockDeviceArrayOutput)
}

// Whether the launched EC2 instance will be EBS-optimized.
func (o InstanceOutput) EbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.EbsOptimized }).(pulumi.BoolPtrOutput)
}

// EC2 instance ID.
func (o InstanceOutput) Ec2InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Ec2InstanceId }).(pulumi.StringPtrOutput)
}

// ECS cluster's ARN for container instances.
func (o InstanceOutput) EcsClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.EcsClusterArn }).(pulumi.StringPtrOutput)
}

// Instance Elastic IP address.
func (o InstanceOutput) ElasticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ElasticIp }).(pulumi.StringPtrOutput)
}

// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
func (o InstanceOutput) EphemeralBlockDevices() InstanceEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceEphemeralBlockDeviceArrayOutput { return v.EphemeralBlockDevices }).(InstanceEphemeralBlockDeviceArrayOutput)
}

// Instance's host name.
func (o InstanceOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Hostname }).(pulumi.StringPtrOutput)
}

// For registered instances, infrastructure class: ec2 or on-premises.
func (o InstanceOutput) InfrastructureClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.InfrastructureClass }).(pulumi.StringPtrOutput)
}

// Controls where to install OS and package updates when the instance boots.  Default is `true`.
func (o InstanceOutput) InstallUpdatesOnBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.InstallUpdatesOnBoot }).(pulumi.BoolPtrOutput)
}

// ARN of the instance's IAM profile.
func (o InstanceOutput) InstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.InstanceProfileArn }).(pulumi.StringPtrOutput)
}

// Type of instance to start.
func (o InstanceOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// ID of the last service error.
func (o InstanceOutput) LastServiceErrorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.LastServiceErrorId }).(pulumi.StringPtrOutput)
}

// List of the layers the instance will belong to.
func (o InstanceOutput) LayerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.LayerIds }).(pulumi.StringArrayOutput)
}

// Name of operating system that will be installed.
func (o InstanceOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Os }).(pulumi.StringPtrOutput)
}

// Instance's platform.
func (o InstanceOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Platform }).(pulumi.StringPtrOutput)
}

// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
func (o InstanceOutput) PrivateDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PrivateDns }).(pulumi.StringPtrOutput)
}

// Private IP address assigned to the instance.
func (o InstanceOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
func (o InstanceOutput) PublicDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PublicDns }).(pulumi.StringPtrOutput)
}

// Public IP address assigned to the instance, if applicable.
func (o InstanceOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// For registered instances, who performed the registration.
func (o InstanceOutput) RegisteredBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.RegisteredBy }).(pulumi.StringPtrOutput)
}

// Instance's reported AWS OpsWorks Stacks agent version.
func (o InstanceOutput) ReportedAgentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ReportedAgentVersion }).(pulumi.StringPtrOutput)
}

// For registered instances, the reported operating system family.
func (o InstanceOutput) ReportedOsFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ReportedOsFamily }).(pulumi.StringPtrOutput)
}

// For registered instances, the reported operating system name.
func (o InstanceOutput) ReportedOsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ReportedOsName }).(pulumi.StringPtrOutput)
}

// For registered instances, the reported operating system version.
func (o InstanceOutput) ReportedOsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ReportedOsVersion }).(pulumi.StringPtrOutput)
}

// Configuration block for the root block device of the instance. See Block Devices below.
func (o InstanceOutput) RootBlockDevices() InstanceRootBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceRootBlockDeviceArrayOutput { return v.RootBlockDevices }).(InstanceRootBlockDeviceArrayOutput)
}

// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
func (o InstanceOutput) RootDeviceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.RootDeviceType }).(pulumi.StringPtrOutput)
}

// Root device volume ID.
func (o InstanceOutput) RootDeviceVolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.RootDeviceVolumeId }).(pulumi.StringPtrOutput)
}

// Associated security groups.
func (o InstanceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// SSH key's Deep Security Agent (DSA) fingerprint.
func (o InstanceOutput) SshHostDsaKeyFingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SshHostDsaKeyFingerprint }).(pulumi.StringPtrOutput)
}

// SSH key's RSA fingerprint.
func (o InstanceOutput) SshHostRsaKeyFingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SshHostRsaKeyFingerprint }).(pulumi.StringPtrOutput)
}

// Name of the SSH keypair that instances will have by default.
func (o InstanceOutput) SshKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SshKeyName }).(pulumi.StringPtrOutput)
}

// Identifier of the stack the instance will belong to.
//
// The following arguments are optional:
func (o InstanceOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.StackId }).(pulumi.StringOutput)
}

// Desired state of the instance. Valid values are `running` or `stopped`.
func (o InstanceOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.State }).(pulumi.StringPtrOutput)
}

// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
func (o InstanceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

// Subnet ID to attach to.
func (o InstanceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
func (o InstanceOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Tenancy }).(pulumi.StringPtrOutput)
}

// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
func (o InstanceOutput) VirtualizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.VirtualizationType }).(pulumi.StringPtrOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
