// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an OpsWorks instance resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/opsworks"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := opsworks.NewInstance(ctx, "my-instance", &opsworks.InstanceArgs{
// 			StackId: pulumi.Any(aws_opsworks_stack.Main.Id),
// 			LayerIds: pulumi.StringArray{
// 				pulumi.Any(aws_opsworks_custom_layer.My - layer.Id),
// 			},
// 			InstanceType: pulumi.String("t2.micro"),
// 			Os:           pulumi.String("Amazon Linux 2015.09"),
// 			State:        pulumi.String("stopped"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Block devices
//
// Each of the `*_block_device` attributes controls a portion of the AWS
// Instance's "Block Device Mapping". It's a good idea to familiarize yourself with [AWS's Block Device
// Mapping docs](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)
// to understand the implications of using these attributes.
//
// ### `ebsBlockDevice`
//
// * `deleteOnTermination` - (Optional) Whether the volume should be destroyed on instance termination. Default is `true`.
// * `deviceName` - (Required) Name of the device to mount.
// * `iops` - (Optional) Amount of provisioned [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volumeType` of `io1`.
// * `snapshotId` - (Optional) Snapshot ID to mount.
// * `volumeSize` - (Optional) Size of the volume in gigabytes.
// * `volumeType` - (Optional) Type of volume. Valid values are `standard`, `gp2`, or `io1`. Default is `standard`.
//
// Modifying any `ebsBlockDevice` currently requires resource replacement.
//
// ### `ephemeralBlockDevice`
//
// * `deviceName` - Name of the block device to mount on the instance.
// * `virtualName` - The [Instance Store Device Name](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).
//
// Each AWS Instance type has a different set of Instance Store block devices
// available for attachment. AWS [publishes a
// list](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes)
// of which ephemeral devices are available on each type. The devices are always
// identified by the `virtualName` in the format `ephemeral{0..N}`.
//
// ### `rootBlockDevice`
//
// * `deleteOnTermination` - (Optional) Whether the volume should be destroyed on instance termination. Default is `true`.
// * `iops` - (Optional) Amount of provisioned [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volumeType` of `io1`.
// * `volumeSize` - (Optional) Size of the volume in gigabytes.
// * `volumeType` - (Optional) Type of volume. Valid values are `standard`, `gp2`, or `io1`. Default is `standard`.
//
// Modifying any of the `rootBlockDevice` settings requires resource
// replacement.
//
// > **NOTE:** Currently, changes to `*_block_device` configuration of _existing_
// resources cannot be automatically detected by this provider. After making updates
// to block device configuration, resource recreation can be manually triggered by
// using the [`up` command with the --replace argument](https://www.pulumi.com/docs/reference/cli/pulumi_up/).
//
// ## Import
//
// Opsworks Instances can be imported using the `instance id`, e.g.,
//
// ```sh
//  $ pulumi import aws:opsworks/instance:Instance my_instance 4d6d1710-ded9-42a1-b08e-b043ad7af1e2
// ```
type Instance struct {
	pulumi.CustomResourceState

	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion pulumi.StringPtrOutput `pulumi:"agentVersion"`
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId pulumi.StringOutput `pulumi:"amiId"`
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture pulumi.StringPtrOutput `pulumi:"architecture"`
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType pulumi.StringPtrOutput `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Time that the instance was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs pulumi.BoolPtrOutput `pulumi:"deleteEbs"`
	// Whether to delete the Elastic IP on deletion.
	DeleteEip pulumi.BoolPtrOutput `pulumi:"deleteEip"`
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices InstanceEbsBlockDeviceArrayOutput `pulumi:"ebsBlockDevices"`
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolPtrOutput `pulumi:"ebsOptimized"`
	// EC2 instance ID.
	Ec2InstanceId pulumi.StringOutput `pulumi:"ec2InstanceId"`
	// ECS cluster's ARN for container instances.
	EcsClusterArn pulumi.StringOutput `pulumi:"ecsClusterArn"`
	// Instance Elastic IP address.
	ElasticIp pulumi.StringOutput `pulumi:"elasticIp"`
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	// Instance's host name.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass pulumi.StringOutput `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot pulumi.BoolPtrOutput `pulumi:"installUpdatesOnBoot"`
	// ARN of the instance's IAM profile.
	InstanceProfileArn pulumi.StringOutput `pulumi:"instanceProfileArn"`
	// Type of instance to start.
	InstanceType pulumi.StringPtrOutput `pulumi:"instanceType"`
	// ID of the last service error.
	LastServiceErrorId pulumi.StringOutput `pulumi:"lastServiceErrorId"`
	// List of the layers the instance will belong to.
	LayerIds pulumi.StringArrayOutput `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os pulumi.StringOutput `pulumi:"os"`
	// Instance's platform.
	Platform pulumi.StringOutput `pulumi:"platform"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumi.StringOutput `pulumi:"privateDns"`
	// Private IP address assigned to the instance.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumi.StringOutput `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`
	// For registered instances, who performed the registration.
	RegisteredBy pulumi.StringOutput `pulumi:"registeredBy"`
	// Instance's reported AWS OpsWorks Stacks agent version.
	ReportedAgentVersion pulumi.StringOutput `pulumi:"reportedAgentVersion"`
	// For registered instances, the reported operating system family.
	ReportedOsFamily pulumi.StringOutput `pulumi:"reportedOsFamily"`
	// For registered instances, the reported operating system name.
	ReportedOsName pulumi.StringOutput `pulumi:"reportedOsName"`
	// For registered instances, the reported operating system version.
	ReportedOsVersion pulumi.StringOutput `pulumi:"reportedOsVersion"`
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices InstanceRootBlockDeviceArrayOutput `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType pulumi.StringOutput `pulumi:"rootDeviceType"`
	// Root device volume ID.
	RootDeviceVolumeId pulumi.StringOutput `pulumi:"rootDeviceVolumeId"`
	// Associated security groups.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// SSH key's Deep Security Agent (DSA) fingerprint.
	SshHostDsaKeyFingerprint pulumi.StringOutput `pulumi:"sshHostDsaKeyFingerprint"`
	// SSH key's RSA fingerprint.
	SshHostRsaKeyFingerprint pulumi.StringOutput `pulumi:"sshHostRsaKeyFingerprint"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringOutput `pulumi:"sshKeyName"`
	// Identifier of the stack the instance will belong to.
	StackId pulumi.StringOutput `pulumi:"stackId"`
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State pulumi.StringPtrOutput `pulumi:"state"`
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Subnet ID to attach to.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy pulumi.StringOutput `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType pulumi.StringOutput `pulumi:"virtualizationType"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LayerIds == nil {
		return nil, errors.New("invalid value for required argument 'LayerIds'")
	}
	if args.StackId == nil {
		return nil, errors.New("invalid value for required argument 'StackId'")
	}
	var resource Instance
	err := ctx.RegisterResource("aws:opsworks/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:opsworks/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion *string `pulumi:"agentVersion"`
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId *string `pulumi:"amiId"`
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture *string `pulumi:"architecture"`
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType *string `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Time that the instance was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs *bool `pulumi:"deleteEbs"`
	// Whether to delete the Elastic IP on deletion.
	DeleteEip *bool `pulumi:"deleteEip"`
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// EC2 instance ID.
	Ec2InstanceId *string `pulumi:"ec2InstanceId"`
	// ECS cluster's ARN for container instances.
	EcsClusterArn *string `pulumi:"ecsClusterArn"`
	// Instance Elastic IP address.
	ElasticIp *string `pulumi:"elasticIp"`
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Instance's host name.
	Hostname *string `pulumi:"hostname"`
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass *string `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot *bool `pulumi:"installUpdatesOnBoot"`
	// ARN of the instance's IAM profile.
	InstanceProfileArn *string `pulumi:"instanceProfileArn"`
	// Type of instance to start.
	InstanceType *string `pulumi:"instanceType"`
	// ID of the last service error.
	LastServiceErrorId *string `pulumi:"lastServiceErrorId"`
	// List of the layers the instance will belong to.
	LayerIds []string `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os *string `pulumi:"os"`
	// Instance's platform.
	Platform *string `pulumi:"platform"`
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns *string `pulumi:"privateDns"`
	// Private IP address assigned to the instance.
	PrivateIp *string `pulumi:"privateIp"`
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns *string `pulumi:"publicDns"`
	// Public IP address assigned to the instance, if applicable.
	PublicIp *string `pulumi:"publicIp"`
	// For registered instances, who performed the registration.
	RegisteredBy *string `pulumi:"registeredBy"`
	// Instance's reported AWS OpsWorks Stacks agent version.
	ReportedAgentVersion *string `pulumi:"reportedAgentVersion"`
	// For registered instances, the reported operating system family.
	ReportedOsFamily *string `pulumi:"reportedOsFamily"`
	// For registered instances, the reported operating system name.
	ReportedOsName *string `pulumi:"reportedOsName"`
	// For registered instances, the reported operating system version.
	ReportedOsVersion *string `pulumi:"reportedOsVersion"`
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices []InstanceRootBlockDevice `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType *string `pulumi:"rootDeviceType"`
	// Root device volume ID.
	RootDeviceVolumeId *string `pulumi:"rootDeviceVolumeId"`
	// Associated security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// SSH key's Deep Security Agent (DSA) fingerprint.
	SshHostDsaKeyFingerprint *string `pulumi:"sshHostDsaKeyFingerprint"`
	// SSH key's RSA fingerprint.
	SshHostRsaKeyFingerprint *string `pulumi:"sshHostRsaKeyFingerprint"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName *string `pulumi:"sshKeyName"`
	// Identifier of the stack the instance will belong to.
	StackId *string `pulumi:"stackId"`
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State *string `pulumi:"state"`
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status *string `pulumi:"status"`
	// Subnet ID to attach to.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy *string `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

type InstanceState struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion pulumi.StringPtrInput
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId pulumi.StringPtrInput
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture pulumi.StringPtrInput
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType pulumi.StringPtrInput
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone pulumi.StringPtrInput
	// Time that the instance was created.
	CreatedAt pulumi.StringPtrInput
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs pulumi.BoolPtrInput
	// Whether to delete the Elastic IP on deletion.
	DeleteEip pulumi.BoolPtrInput
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices InstanceEbsBlockDeviceArrayInput
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolPtrInput
	// EC2 instance ID.
	Ec2InstanceId pulumi.StringPtrInput
	// ECS cluster's ARN for container instances.
	EcsClusterArn pulumi.StringPtrInput
	// Instance Elastic IP address.
	ElasticIp pulumi.StringPtrInput
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayInput
	// Instance's host name.
	Hostname pulumi.StringPtrInput
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass pulumi.StringPtrInput
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot pulumi.BoolPtrInput
	// ARN of the instance's IAM profile.
	InstanceProfileArn pulumi.StringPtrInput
	// Type of instance to start.
	InstanceType pulumi.StringPtrInput
	// ID of the last service error.
	LastServiceErrorId pulumi.StringPtrInput
	// List of the layers the instance will belong to.
	LayerIds pulumi.StringArrayInput
	// Name of operating system that will be installed.
	Os pulumi.StringPtrInput
	// Instance's platform.
	Platform pulumi.StringPtrInput
	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	PrivateDns pulumi.StringPtrInput
	// Private IP address assigned to the instance.
	PrivateIp pulumi.StringPtrInput
	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	PublicDns pulumi.StringPtrInput
	// Public IP address assigned to the instance, if applicable.
	PublicIp pulumi.StringPtrInput
	// For registered instances, who performed the registration.
	RegisteredBy pulumi.StringPtrInput
	// Instance's reported AWS OpsWorks Stacks agent version.
	ReportedAgentVersion pulumi.StringPtrInput
	// For registered instances, the reported operating system family.
	ReportedOsFamily pulumi.StringPtrInput
	// For registered instances, the reported operating system name.
	ReportedOsName pulumi.StringPtrInput
	// For registered instances, the reported operating system version.
	ReportedOsVersion pulumi.StringPtrInput
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices InstanceRootBlockDeviceArrayInput
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType pulumi.StringPtrInput
	// Root device volume ID.
	RootDeviceVolumeId pulumi.StringPtrInput
	// Associated security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// SSH key's Deep Security Agent (DSA) fingerprint.
	SshHostDsaKeyFingerprint pulumi.StringPtrInput
	// SSH key's RSA fingerprint.
	SshHostRsaKeyFingerprint pulumi.StringPtrInput
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringPtrInput
	// Identifier of the stack the instance will belong to.
	StackId pulumi.StringPtrInput
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State pulumi.StringPtrInput
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status pulumi.StringPtrInput
	// Subnet ID to attach to.
	SubnetId pulumi.StringPtrInput
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy pulumi.StringPtrInput
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion *string `pulumi:"agentVersion"`
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId *string `pulumi:"amiId"`
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture *string `pulumi:"architecture"`
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType *string `pulumi:"autoScalingType"`
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Time that the instance was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs *bool `pulumi:"deleteEbs"`
	// Whether to delete the Elastic IP on deletion.
	DeleteEip *bool `pulumi:"deleteEip"`
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices []InstanceEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized *bool `pulumi:"ebsOptimized"`
	// ECS cluster's ARN for container instances.
	EcsClusterArn *string `pulumi:"ecsClusterArn"`
	// Instance Elastic IP address.
	ElasticIp *string `pulumi:"elasticIp"`
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices []InstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Instance's host name.
	Hostname *string `pulumi:"hostname"`
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass *string `pulumi:"infrastructureClass"`
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot *bool `pulumi:"installUpdatesOnBoot"`
	// ARN of the instance's IAM profile.
	InstanceProfileArn *string `pulumi:"instanceProfileArn"`
	// Type of instance to start.
	InstanceType *string `pulumi:"instanceType"`
	// List of the layers the instance will belong to.
	LayerIds []string `pulumi:"layerIds"`
	// Name of operating system that will be installed.
	Os *string `pulumi:"os"`
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices []InstanceRootBlockDevice `pulumi:"rootBlockDevices"`
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType *string `pulumi:"rootDeviceType"`
	// Associated security groups.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Name of the SSH keypair that instances will have by default.
	SshKeyName *string `pulumi:"sshKeyName"`
	// Identifier of the stack the instance will belong to.
	StackId string `pulumi:"stackId"`
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State *string `pulumi:"state"`
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status *string `pulumi:"status"`
	// Subnet ID to attach to.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy *string `pulumi:"tenancy"`
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// OpsWorks agent to install. Default is `INHERIT`.
	AgentVersion pulumi.StringPtrInput
	// AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.
	AmiId pulumi.StringPtrInput
	// Machine architecture for created instances.  Valid values are `x8664` or `i386`. The default is `x8664`.
	Architecture pulumi.StringPtrInput
	// Creates load-based or time-based instances.  Valid values are `load`, `timer`.
	AutoScalingType pulumi.StringPtrInput
	// Name of the availability zone where instances will be created by default.
	AvailabilityZone pulumi.StringPtrInput
	// Time that the instance was created.
	CreatedAt pulumi.StringPtrInput
	// Whether to delete EBS volume on deletion. Default is `true`.
	DeleteEbs pulumi.BoolPtrInput
	// Whether to delete the Elastic IP on deletion.
	DeleteEip pulumi.BoolPtrInput
	// Configuration block for additional EBS block devices to attach to the instance. See Block Devices below.
	EbsBlockDevices InstanceEbsBlockDeviceArrayInput
	// Whether the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.BoolPtrInput
	// ECS cluster's ARN for container instances.
	EcsClusterArn pulumi.StringPtrInput
	// Instance Elastic IP address.
	ElasticIp pulumi.StringPtrInput
	// Configuration block for ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below.
	EphemeralBlockDevices InstanceEphemeralBlockDeviceArrayInput
	// Instance's host name.
	Hostname pulumi.StringPtrInput
	// For registered instances, infrastructure class: ec2 or on-premises.
	InfrastructureClass pulumi.StringPtrInput
	// Controls where to install OS and package updates when the instance boots.  Default is `true`.
	InstallUpdatesOnBoot pulumi.BoolPtrInput
	// ARN of the instance's IAM profile.
	InstanceProfileArn pulumi.StringPtrInput
	// Type of instance to start.
	InstanceType pulumi.StringPtrInput
	// List of the layers the instance will belong to.
	LayerIds pulumi.StringArrayInput
	// Name of operating system that will be installed.
	Os pulumi.StringPtrInput
	// Configuration block for the root block device of the instance. See Block Devices below.
	RootBlockDevices InstanceRootBlockDeviceArrayInput
	// Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.
	RootDeviceType pulumi.StringPtrInput
	// Associated security groups.
	SecurityGroupIds pulumi.StringArrayInput
	// Name of the SSH keypair that instances will have by default.
	SshKeyName pulumi.StringPtrInput
	// Identifier of the stack the instance will belong to.
	StackId pulumi.StringInput
	// Desired state of the instance. Valid values are `running` or `stopped`.
	State pulumi.StringPtrInput
	// Instance status. Will be one of `booting`, `connectionLost`, `online`, `pending`, `rebooting`, `requested`, `runningSetup`, `setupFailed`, `shuttingDown`, `startFailed`, `stopFailed`, `stopped`, `stopping`, `terminated`, or `terminating`.
	Status pulumi.StringPtrInput
	// Subnet ID to attach to.
	SubnetId pulumi.StringPtrInput
	// Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.
	Tenancy pulumi.StringPtrInput
	// Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.
	VirtualizationType pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//          InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//          InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
