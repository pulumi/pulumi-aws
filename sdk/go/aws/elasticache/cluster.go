// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Cluster struct {
	pulumi.CustomResourceState

	ApplyImmediately           pulumi.BoolOutput                          `pulumi:"applyImmediately"`
	Arn                        pulumi.StringOutput                        `pulumi:"arn"`
	AutoMinorVersionUpgrade    pulumi.StringPtrOutput                     `pulumi:"autoMinorVersionUpgrade"`
	AvailabilityZone           pulumi.StringOutput                        `pulumi:"availabilityZone"`
	AzMode                     pulumi.StringOutput                        `pulumi:"azMode"`
	CacheNodes                 ClusterCacheNodeArrayOutput                `pulumi:"cacheNodes"`
	ClusterAddress             pulumi.StringOutput                        `pulumi:"clusterAddress"`
	ClusterId                  pulumi.StringOutput                        `pulumi:"clusterId"`
	ConfigurationEndpoint      pulumi.StringOutput                        `pulumi:"configurationEndpoint"`
	Engine                     pulumi.StringOutput                        `pulumi:"engine"`
	EngineVersion              pulumi.StringOutput                        `pulumi:"engineVersion"`
	EngineVersionActual        pulumi.StringOutput                        `pulumi:"engineVersionActual"`
	FinalSnapshotIdentifier    pulumi.StringPtrOutput                     `pulumi:"finalSnapshotIdentifier"`
	IpDiscovery                pulumi.StringOutput                        `pulumi:"ipDiscovery"`
	LogDeliveryConfigurations  ClusterLogDeliveryConfigurationArrayOutput `pulumi:"logDeliveryConfigurations"`
	MaintenanceWindow          pulumi.StringOutput                        `pulumi:"maintenanceWindow"`
	NetworkType                pulumi.StringOutput                        `pulumi:"networkType"`
	NodeType                   pulumi.StringOutput                        `pulumi:"nodeType"`
	NotificationTopicArn       pulumi.StringPtrOutput                     `pulumi:"notificationTopicArn"`
	NumCacheNodes              pulumi.IntOutput                           `pulumi:"numCacheNodes"`
	OutpostMode                pulumi.StringPtrOutput                     `pulumi:"outpostMode"`
	ParameterGroupName         pulumi.StringOutput                        `pulumi:"parameterGroupName"`
	Port                       pulumi.IntOutput                           `pulumi:"port"`
	PreferredAvailabilityZones pulumi.StringArrayOutput                   `pulumi:"preferredAvailabilityZones"`
	PreferredOutpostArn        pulumi.StringOutput                        `pulumi:"preferredOutpostArn"`
	ReplicationGroupId         pulumi.StringOutput                        `pulumi:"replicationGroupId"`
	SecurityGroupIds           pulumi.StringArrayOutput                   `pulumi:"securityGroupIds"`
	// Deprecated: With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
	SecurityGroupNames     pulumi.StringArrayOutput `pulumi:"securityGroupNames"`
	SnapshotArns           pulumi.StringPtrOutput   `pulumi:"snapshotArns"`
	SnapshotName           pulumi.StringPtrOutput   `pulumi:"snapshotName"`
	SnapshotRetentionLimit pulumi.IntPtrOutput      `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow         pulumi.StringOutput      `pulumi:"snapshotWindow"`
	SubnetGroupName        pulumi.StringOutput      `pulumi:"subnetGroupName"`
	Tags                   pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                pulumi.StringMapOutput   `pulumi:"tagsAll"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		args = &ClusterArgs{}
	}

	var resource Cluster
	err := ctx.RegisterResource("aws:elasticache/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("aws:elasticache/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	ApplyImmediately           *bool                             `pulumi:"applyImmediately"`
	Arn                        *string                           `pulumi:"arn"`
	AutoMinorVersionUpgrade    *string                           `pulumi:"autoMinorVersionUpgrade"`
	AvailabilityZone           *string                           `pulumi:"availabilityZone"`
	AzMode                     *string                           `pulumi:"azMode"`
	CacheNodes                 []ClusterCacheNode                `pulumi:"cacheNodes"`
	ClusterAddress             *string                           `pulumi:"clusterAddress"`
	ClusterId                  *string                           `pulumi:"clusterId"`
	ConfigurationEndpoint      *string                           `pulumi:"configurationEndpoint"`
	Engine                     *string                           `pulumi:"engine"`
	EngineVersion              *string                           `pulumi:"engineVersion"`
	EngineVersionActual        *string                           `pulumi:"engineVersionActual"`
	FinalSnapshotIdentifier    *string                           `pulumi:"finalSnapshotIdentifier"`
	IpDiscovery                *string                           `pulumi:"ipDiscovery"`
	LogDeliveryConfigurations  []ClusterLogDeliveryConfiguration `pulumi:"logDeliveryConfigurations"`
	MaintenanceWindow          *string                           `pulumi:"maintenanceWindow"`
	NetworkType                *string                           `pulumi:"networkType"`
	NodeType                   *string                           `pulumi:"nodeType"`
	NotificationTopicArn       *string                           `pulumi:"notificationTopicArn"`
	NumCacheNodes              *int                              `pulumi:"numCacheNodes"`
	OutpostMode                *string                           `pulumi:"outpostMode"`
	ParameterGroupName         *string                           `pulumi:"parameterGroupName"`
	Port                       *int                              `pulumi:"port"`
	PreferredAvailabilityZones []string                          `pulumi:"preferredAvailabilityZones"`
	PreferredOutpostArn        *string                           `pulumi:"preferredOutpostArn"`
	ReplicationGroupId         *string                           `pulumi:"replicationGroupId"`
	SecurityGroupIds           []string                          `pulumi:"securityGroupIds"`
	// Deprecated: With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
	SecurityGroupNames     []string          `pulumi:"securityGroupNames"`
	SnapshotArns           *string           `pulumi:"snapshotArns"`
	SnapshotName           *string           `pulumi:"snapshotName"`
	SnapshotRetentionLimit *int              `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow         *string           `pulumi:"snapshotWindow"`
	SubnetGroupName        *string           `pulumi:"subnetGroupName"`
	Tags                   map[string]string `pulumi:"tags"`
	TagsAll                map[string]string `pulumi:"tagsAll"`
}

type ClusterState struct {
	ApplyImmediately           pulumi.BoolPtrInput
	Arn                        pulumi.StringPtrInput
	AutoMinorVersionUpgrade    pulumi.StringPtrInput
	AvailabilityZone           pulumi.StringPtrInput
	AzMode                     pulumi.StringPtrInput
	CacheNodes                 ClusterCacheNodeArrayInput
	ClusterAddress             pulumi.StringPtrInput
	ClusterId                  pulumi.StringPtrInput
	ConfigurationEndpoint      pulumi.StringPtrInput
	Engine                     pulumi.StringPtrInput
	EngineVersion              pulumi.StringPtrInput
	EngineVersionActual        pulumi.StringPtrInput
	FinalSnapshotIdentifier    pulumi.StringPtrInput
	IpDiscovery                pulumi.StringPtrInput
	LogDeliveryConfigurations  ClusterLogDeliveryConfigurationArrayInput
	MaintenanceWindow          pulumi.StringPtrInput
	NetworkType                pulumi.StringPtrInput
	NodeType                   pulumi.StringPtrInput
	NotificationTopicArn       pulumi.StringPtrInput
	NumCacheNodes              pulumi.IntPtrInput
	OutpostMode                pulumi.StringPtrInput
	ParameterGroupName         pulumi.StringPtrInput
	Port                       pulumi.IntPtrInput
	PreferredAvailabilityZones pulumi.StringArrayInput
	PreferredOutpostArn        pulumi.StringPtrInput
	ReplicationGroupId         pulumi.StringPtrInput
	SecurityGroupIds           pulumi.StringArrayInput
	// Deprecated: With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
	SecurityGroupNames     pulumi.StringArrayInput
	SnapshotArns           pulumi.StringPtrInput
	SnapshotName           pulumi.StringPtrInput
	SnapshotRetentionLimit pulumi.IntPtrInput
	SnapshotWindow         pulumi.StringPtrInput
	SubnetGroupName        pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TagsAll                pulumi.StringMapInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	ApplyImmediately           *bool                             `pulumi:"applyImmediately"`
	AutoMinorVersionUpgrade    *string                           `pulumi:"autoMinorVersionUpgrade"`
	AvailabilityZone           *string                           `pulumi:"availabilityZone"`
	AzMode                     *string                           `pulumi:"azMode"`
	ClusterId                  *string                           `pulumi:"clusterId"`
	Engine                     *string                           `pulumi:"engine"`
	EngineVersion              *string                           `pulumi:"engineVersion"`
	FinalSnapshotIdentifier    *string                           `pulumi:"finalSnapshotIdentifier"`
	IpDiscovery                *string                           `pulumi:"ipDiscovery"`
	LogDeliveryConfigurations  []ClusterLogDeliveryConfiguration `pulumi:"logDeliveryConfigurations"`
	MaintenanceWindow          *string                           `pulumi:"maintenanceWindow"`
	NetworkType                *string                           `pulumi:"networkType"`
	NodeType                   *string                           `pulumi:"nodeType"`
	NotificationTopicArn       *string                           `pulumi:"notificationTopicArn"`
	NumCacheNodes              *int                              `pulumi:"numCacheNodes"`
	OutpostMode                *string                           `pulumi:"outpostMode"`
	ParameterGroupName         *string                           `pulumi:"parameterGroupName"`
	Port                       *int                              `pulumi:"port"`
	PreferredAvailabilityZones []string                          `pulumi:"preferredAvailabilityZones"`
	PreferredOutpostArn        *string                           `pulumi:"preferredOutpostArn"`
	ReplicationGroupId         *string                           `pulumi:"replicationGroupId"`
	SecurityGroupIds           []string                          `pulumi:"securityGroupIds"`
	// Deprecated: With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
	SecurityGroupNames     []string          `pulumi:"securityGroupNames"`
	SnapshotArns           *string           `pulumi:"snapshotArns"`
	SnapshotName           *string           `pulumi:"snapshotName"`
	SnapshotRetentionLimit *int              `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow         *string           `pulumi:"snapshotWindow"`
	SubnetGroupName        *string           `pulumi:"subnetGroupName"`
	Tags                   map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	ApplyImmediately           pulumi.BoolPtrInput
	AutoMinorVersionUpgrade    pulumi.StringPtrInput
	AvailabilityZone           pulumi.StringPtrInput
	AzMode                     pulumi.StringPtrInput
	ClusterId                  pulumi.StringPtrInput
	Engine                     pulumi.StringPtrInput
	EngineVersion              pulumi.StringPtrInput
	FinalSnapshotIdentifier    pulumi.StringPtrInput
	IpDiscovery                pulumi.StringPtrInput
	LogDeliveryConfigurations  ClusterLogDeliveryConfigurationArrayInput
	MaintenanceWindow          pulumi.StringPtrInput
	NetworkType                pulumi.StringPtrInput
	NodeType                   pulumi.StringPtrInput
	NotificationTopicArn       pulumi.StringPtrInput
	NumCacheNodes              pulumi.IntPtrInput
	OutpostMode                pulumi.StringPtrInput
	ParameterGroupName         pulumi.StringPtrInput
	Port                       pulumi.IntPtrInput
	PreferredAvailabilityZones pulumi.StringArrayInput
	PreferredOutpostArn        pulumi.StringPtrInput
	ReplicationGroupId         pulumi.StringPtrInput
	SecurityGroupIds           pulumi.StringArrayInput
	// Deprecated: With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
	SecurityGroupNames     pulumi.StringArrayInput
	SnapshotArns           pulumi.StringPtrInput
	SnapshotName           pulumi.StringPtrInput
	SnapshotRetentionLimit pulumi.IntPtrInput
	SnapshotWindow         pulumi.StringPtrInput
	SubnetGroupName        pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) ApplyImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.ApplyImmediately }).(pulumi.BoolOutput)
}

func (o ClusterOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ClusterOutput) AutoMinorVersionUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.AutoMinorVersionUpgrade }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o ClusterOutput) AzMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.AzMode }).(pulumi.StringOutput)
}

func (o ClusterOutput) CacheNodes() ClusterCacheNodeArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterCacheNodeArrayOutput { return v.CacheNodes }).(ClusterCacheNodeArrayOutput)
}

func (o ClusterOutput) ClusterAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterAddress }).(pulumi.StringOutput)
}

func (o ClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o ClusterOutput) ConfigurationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ConfigurationEndpoint }).(pulumi.StringOutput)
}

func (o ClusterOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

func (o ClusterOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o ClusterOutput) EngineVersionActual() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EngineVersionActual }).(pulumi.StringOutput)
}

func (o ClusterOutput) FinalSnapshotIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.FinalSnapshotIdentifier }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) IpDiscovery() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.IpDiscovery }).(pulumi.StringOutput)
}

func (o ClusterOutput) LogDeliveryConfigurations() ClusterLogDeliveryConfigurationArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterLogDeliveryConfigurationArrayOutput { return v.LogDeliveryConfigurations }).(ClusterLogDeliveryConfigurationArrayOutput)
}

func (o ClusterOutput) MaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.MaintenanceWindow }).(pulumi.StringOutput)
}

func (o ClusterOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.NetworkType }).(pulumi.StringOutput)
}

func (o ClusterOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.NodeType }).(pulumi.StringOutput)
}

func (o ClusterOutput) NotificationTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.NotificationTopicArn }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) NumCacheNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.NumCacheNodes }).(pulumi.IntOutput)
}

func (o ClusterOutput) OutpostMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.OutpostMode }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) ParameterGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ParameterGroupName }).(pulumi.StringOutput)
}

func (o ClusterOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o ClusterOutput) PreferredAvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.PreferredAvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o ClusterOutput) PreferredOutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.PreferredOutpostArn }).(pulumi.StringOutput)
}

func (o ClusterOutput) ReplicationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ReplicationGroupId }).(pulumi.StringOutput)
}

func (o ClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Deprecated: With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.
func (o ClusterOutput) SecurityGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.SecurityGroupNames }).(pulumi.StringArrayOutput)
}

func (o ClusterOutput) SnapshotArns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SnapshotArns }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SnapshotName }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) SnapshotRetentionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.SnapshotRetentionLimit }).(pulumi.IntPtrOutput)
}

func (o ClusterOutput) SnapshotWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SnapshotWindow }).(pulumi.StringOutput)
}

func (o ClusterOutput) SubnetGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SubnetGroupName }).(pulumi.StringOutput)
}

func (o ClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ClusterOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
