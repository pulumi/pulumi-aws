// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSubnetGroup(ctx *pulumi.Context, args *LookupSubnetGroupArgs, opts ...pulumi.InvokeOption) (*LookupSubnetGroupResult, error) {
	var rv LookupSubnetGroupResult
	err := ctx.Invoke("aws:elasticache/getSubnetGroup:getSubnetGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnetGroup.
type LookupSubnetGroupArgs struct {
	Name string            `pulumi:"name"`
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSubnetGroup.
type LookupSubnetGroupResult struct {
	Arn         string `pulumi:"arn"`
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id        string            `pulumi:"id"`
	Name      string            `pulumi:"name"`
	SubnetIds []string          `pulumi:"subnetIds"`
	Tags      map[string]string `pulumi:"tags"`
}

func LookupSubnetGroupOutput(ctx *pulumi.Context, args LookupSubnetGroupOutputArgs, opts ...pulumi.InvokeOption) LookupSubnetGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubnetGroupResult, error) {
			args := v.(LookupSubnetGroupArgs)
			r, err := LookupSubnetGroup(ctx, &args, opts...)
			var s LookupSubnetGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubnetGroupResultOutput)
}

// A collection of arguments for invoking getSubnetGroup.
type LookupSubnetGroupOutputArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupSubnetGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetGroupArgs)(nil)).Elem()
}

// A collection of values returned by getSubnetGroup.
type LookupSubnetGroupResultOutput struct{ *pulumi.OutputState }

func (LookupSubnetGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetGroupResult)(nil)).Elem()
}

func (o LookupSubnetGroupResultOutput) ToLookupSubnetGroupResultOutput() LookupSubnetGroupResultOutput {
	return o
}

func (o LookupSubnetGroupResultOutput) ToLookupSubnetGroupResultOutputWithContext(ctx context.Context) LookupSubnetGroupResultOutput {
	return o
}

func (o LookupSubnetGroupResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetGroupResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupSubnetGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSubnetGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSubnetGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSubnetGroupResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubnetGroupResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o LookupSubnetGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSubnetGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubnetGroupResultOutput{})
}
