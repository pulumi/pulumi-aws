// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterCacheNode struct {
	Address *string `pulumi:"address"`
	// Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferredAvailabilityZones` instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	Id               *string `pulumi:"id"`
	OutpostArn       *string `pulumi:"outpostArn"`
	// The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replicationGroupId`. Changing this value will re-create the resource.
	Port *int `pulumi:"port"`
}

// ClusterCacheNodeInput is an input type that accepts ClusterCacheNodeArgs and ClusterCacheNodeOutput values.
// You can construct a concrete instance of `ClusterCacheNodeInput` via:
//
//	ClusterCacheNodeArgs{...}
type ClusterCacheNodeInput interface {
	pulumi.Input

	ToClusterCacheNodeOutput() ClusterCacheNodeOutput
	ToClusterCacheNodeOutputWithContext(context.Context) ClusterCacheNodeOutput
}

type ClusterCacheNodeArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferredAvailabilityZones` instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	OutpostArn       pulumi.StringPtrInput `pulumi:"outpostArn"`
	// The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replicationGroupId`. Changing this value will re-create the resource.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ClusterCacheNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCacheNode)(nil)).Elem()
}

func (i ClusterCacheNodeArgs) ToClusterCacheNodeOutput() ClusterCacheNodeOutput {
	return i.ToClusterCacheNodeOutputWithContext(context.Background())
}

func (i ClusterCacheNodeArgs) ToClusterCacheNodeOutputWithContext(ctx context.Context) ClusterCacheNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCacheNodeOutput)
}

// ClusterCacheNodeArrayInput is an input type that accepts ClusterCacheNodeArray and ClusterCacheNodeArrayOutput values.
// You can construct a concrete instance of `ClusterCacheNodeArrayInput` via:
//
//	ClusterCacheNodeArray{ ClusterCacheNodeArgs{...} }
type ClusterCacheNodeArrayInput interface {
	pulumi.Input

	ToClusterCacheNodeArrayOutput() ClusterCacheNodeArrayOutput
	ToClusterCacheNodeArrayOutputWithContext(context.Context) ClusterCacheNodeArrayOutput
}

type ClusterCacheNodeArray []ClusterCacheNodeInput

func (ClusterCacheNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCacheNode)(nil)).Elem()
}

func (i ClusterCacheNodeArray) ToClusterCacheNodeArrayOutput() ClusterCacheNodeArrayOutput {
	return i.ToClusterCacheNodeArrayOutputWithContext(context.Background())
}

func (i ClusterCacheNodeArray) ToClusterCacheNodeArrayOutputWithContext(ctx context.Context) ClusterCacheNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCacheNodeArrayOutput)
}

type ClusterCacheNodeOutput struct{ *pulumi.OutputState }

func (ClusterCacheNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCacheNode)(nil)).Elem()
}

func (o ClusterCacheNodeOutput) ToClusterCacheNodeOutput() ClusterCacheNodeOutput {
	return o
}

func (o ClusterCacheNodeOutput) ToClusterCacheNodeOutputWithContext(ctx context.Context) ClusterCacheNodeOutput {
	return o
}

func (o ClusterCacheNodeOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCacheNode) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferredAvailabilityZones` instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
func (o ClusterCacheNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCacheNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o ClusterCacheNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCacheNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterCacheNodeOutput) OutpostArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCacheNode) *string { return v.OutpostArn }).(pulumi.StringPtrOutput)
}

// The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replicationGroupId`. Changing this value will re-create the resource.
func (o ClusterCacheNodeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCacheNode) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ClusterCacheNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterCacheNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCacheNode)(nil)).Elem()
}

func (o ClusterCacheNodeArrayOutput) ToClusterCacheNodeArrayOutput() ClusterCacheNodeArrayOutput {
	return o
}

func (o ClusterCacheNodeArrayOutput) ToClusterCacheNodeArrayOutputWithContext(ctx context.Context) ClusterCacheNodeArrayOutput {
	return o
}

func (o ClusterCacheNodeArrayOutput) Index(i pulumi.IntInput) ClusterCacheNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCacheNode {
		return vs[0].([]ClusterCacheNode)[vs[1].(int)]
	}).(ClusterCacheNodeOutput)
}

type ClusterLogDeliveryConfiguration struct {
	// Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
	Destination string `pulumi:"destination"`
	// For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
	DestinationType string `pulumi:"destinationType"`
	// Valid values are `json` or `text`
	LogFormat string `pulumi:"logFormat"`
	// Valid values are  `slow-log` or `engine-log`. Max 1 of each.
	LogType string `pulumi:"logType"`
}

// ClusterLogDeliveryConfigurationInput is an input type that accepts ClusterLogDeliveryConfigurationArgs and ClusterLogDeliveryConfigurationOutput values.
// You can construct a concrete instance of `ClusterLogDeliveryConfigurationInput` via:
//
//	ClusterLogDeliveryConfigurationArgs{...}
type ClusterLogDeliveryConfigurationInput interface {
	pulumi.Input

	ToClusterLogDeliveryConfigurationOutput() ClusterLogDeliveryConfigurationOutput
	ToClusterLogDeliveryConfigurationOutputWithContext(context.Context) ClusterLogDeliveryConfigurationOutput
}

type ClusterLogDeliveryConfigurationArgs struct {
	// Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
	Destination pulumi.StringInput `pulumi:"destination"`
	// For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
	DestinationType pulumi.StringInput `pulumi:"destinationType"`
	// Valid values are `json` or `text`
	LogFormat pulumi.StringInput `pulumi:"logFormat"`
	// Valid values are  `slow-log` or `engine-log`. Max 1 of each.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (ClusterLogDeliveryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (i ClusterLogDeliveryConfigurationArgs) ToClusterLogDeliveryConfigurationOutput() ClusterLogDeliveryConfigurationOutput {
	return i.ToClusterLogDeliveryConfigurationOutputWithContext(context.Background())
}

func (i ClusterLogDeliveryConfigurationArgs) ToClusterLogDeliveryConfigurationOutputWithContext(ctx context.Context) ClusterLogDeliveryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLogDeliveryConfigurationOutput)
}

// ClusterLogDeliveryConfigurationArrayInput is an input type that accepts ClusterLogDeliveryConfigurationArray and ClusterLogDeliveryConfigurationArrayOutput values.
// You can construct a concrete instance of `ClusterLogDeliveryConfigurationArrayInput` via:
//
//	ClusterLogDeliveryConfigurationArray{ ClusterLogDeliveryConfigurationArgs{...} }
type ClusterLogDeliveryConfigurationArrayInput interface {
	pulumi.Input

	ToClusterLogDeliveryConfigurationArrayOutput() ClusterLogDeliveryConfigurationArrayOutput
	ToClusterLogDeliveryConfigurationArrayOutputWithContext(context.Context) ClusterLogDeliveryConfigurationArrayOutput
}

type ClusterLogDeliveryConfigurationArray []ClusterLogDeliveryConfigurationInput

func (ClusterLogDeliveryConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (i ClusterLogDeliveryConfigurationArray) ToClusterLogDeliveryConfigurationArrayOutput() ClusterLogDeliveryConfigurationArrayOutput {
	return i.ToClusterLogDeliveryConfigurationArrayOutputWithContext(context.Background())
}

func (i ClusterLogDeliveryConfigurationArray) ToClusterLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) ClusterLogDeliveryConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLogDeliveryConfigurationArrayOutput)
}

type ClusterLogDeliveryConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterLogDeliveryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (o ClusterLogDeliveryConfigurationOutput) ToClusterLogDeliveryConfigurationOutput() ClusterLogDeliveryConfigurationOutput {
	return o
}

func (o ClusterLogDeliveryConfigurationOutput) ToClusterLogDeliveryConfigurationOutputWithContext(ctx context.Context) ClusterLogDeliveryConfigurationOutput {
	return o
}

// Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
func (o ClusterLogDeliveryConfigurationOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLogDeliveryConfiguration) string { return v.Destination }).(pulumi.StringOutput)
}

// For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
func (o ClusterLogDeliveryConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLogDeliveryConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Valid values are `json` or `text`
func (o ClusterLogDeliveryConfigurationOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLogDeliveryConfiguration) string { return v.LogFormat }).(pulumi.StringOutput)
}

// Valid values are  `slow-log` or `engine-log`. Max 1 of each.
func (o ClusterLogDeliveryConfigurationOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLogDeliveryConfiguration) string { return v.LogType }).(pulumi.StringOutput)
}

type ClusterLogDeliveryConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ClusterLogDeliveryConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (o ClusterLogDeliveryConfigurationArrayOutput) ToClusterLogDeliveryConfigurationArrayOutput() ClusterLogDeliveryConfigurationArrayOutput {
	return o
}

func (o ClusterLogDeliveryConfigurationArrayOutput) ToClusterLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) ClusterLogDeliveryConfigurationArrayOutput {
	return o
}

func (o ClusterLogDeliveryConfigurationArrayOutput) Index(i pulumi.IntInput) ClusterLogDeliveryConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterLogDeliveryConfiguration {
		return vs[0].([]ClusterLogDeliveryConfiguration)[vs[1].(int)]
	}).(ClusterLogDeliveryConfigurationOutput)
}

type GlobalReplicationGroupGlobalNodeGroup struct {
	// The ID of the global node group.
	GlobalNodeGroupId *string `pulumi:"globalNodeGroupId"`
	// The keyspace for this node group.
	Slots *string `pulumi:"slots"`
}

// GlobalReplicationGroupGlobalNodeGroupInput is an input type that accepts GlobalReplicationGroupGlobalNodeGroupArgs and GlobalReplicationGroupGlobalNodeGroupOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupGlobalNodeGroupInput` via:
//
//	GlobalReplicationGroupGlobalNodeGroupArgs{...}
type GlobalReplicationGroupGlobalNodeGroupInput interface {
	pulumi.Input

	ToGlobalReplicationGroupGlobalNodeGroupOutput() GlobalReplicationGroupGlobalNodeGroupOutput
	ToGlobalReplicationGroupGlobalNodeGroupOutputWithContext(context.Context) GlobalReplicationGroupGlobalNodeGroupOutput
}

type GlobalReplicationGroupGlobalNodeGroupArgs struct {
	// The ID of the global node group.
	GlobalNodeGroupId pulumi.StringPtrInput `pulumi:"globalNodeGroupId"`
	// The keyspace for this node group.
	Slots pulumi.StringPtrInput `pulumi:"slots"`
}

func (GlobalReplicationGroupGlobalNodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupGlobalNodeGroup)(nil)).Elem()
}

func (i GlobalReplicationGroupGlobalNodeGroupArgs) ToGlobalReplicationGroupGlobalNodeGroupOutput() GlobalReplicationGroupGlobalNodeGroupOutput {
	return i.ToGlobalReplicationGroupGlobalNodeGroupOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupGlobalNodeGroupArgs) ToGlobalReplicationGroupGlobalNodeGroupOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalNodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupGlobalNodeGroupOutput)
}

// GlobalReplicationGroupGlobalNodeGroupArrayInput is an input type that accepts GlobalReplicationGroupGlobalNodeGroupArray and GlobalReplicationGroupGlobalNodeGroupArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupGlobalNodeGroupArrayInput` via:
//
//	GlobalReplicationGroupGlobalNodeGroupArray{ GlobalReplicationGroupGlobalNodeGroupArgs{...} }
type GlobalReplicationGroupGlobalNodeGroupArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupGlobalNodeGroupArrayOutput() GlobalReplicationGroupGlobalNodeGroupArrayOutput
	ToGlobalReplicationGroupGlobalNodeGroupArrayOutputWithContext(context.Context) GlobalReplicationGroupGlobalNodeGroupArrayOutput
}

type GlobalReplicationGroupGlobalNodeGroupArray []GlobalReplicationGroupGlobalNodeGroupInput

func (GlobalReplicationGroupGlobalNodeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupGlobalNodeGroup)(nil)).Elem()
}

func (i GlobalReplicationGroupGlobalNodeGroupArray) ToGlobalReplicationGroupGlobalNodeGroupArrayOutput() GlobalReplicationGroupGlobalNodeGroupArrayOutput {
	return i.ToGlobalReplicationGroupGlobalNodeGroupArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupGlobalNodeGroupArray) ToGlobalReplicationGroupGlobalNodeGroupArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalNodeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupGlobalNodeGroupArrayOutput)
}

type GlobalReplicationGroupGlobalNodeGroupOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupGlobalNodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupGlobalNodeGroup)(nil)).Elem()
}

func (o GlobalReplicationGroupGlobalNodeGroupOutput) ToGlobalReplicationGroupGlobalNodeGroupOutput() GlobalReplicationGroupGlobalNodeGroupOutput {
	return o
}

func (o GlobalReplicationGroupGlobalNodeGroupOutput) ToGlobalReplicationGroupGlobalNodeGroupOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalNodeGroupOutput {
	return o
}

// The ID of the global node group.
func (o GlobalReplicationGroupGlobalNodeGroupOutput) GlobalNodeGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupGlobalNodeGroup) *string { return v.GlobalNodeGroupId }).(pulumi.StringPtrOutput)
}

// The keyspace for this node group.
func (o GlobalReplicationGroupGlobalNodeGroupOutput) Slots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupGlobalNodeGroup) *string { return v.Slots }).(pulumi.StringPtrOutput)
}

type GlobalReplicationGroupGlobalNodeGroupArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupGlobalNodeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupGlobalNodeGroup)(nil)).Elem()
}

func (o GlobalReplicationGroupGlobalNodeGroupArrayOutput) ToGlobalReplicationGroupGlobalNodeGroupArrayOutput() GlobalReplicationGroupGlobalNodeGroupArrayOutput {
	return o
}

func (o GlobalReplicationGroupGlobalNodeGroupArrayOutput) ToGlobalReplicationGroupGlobalNodeGroupArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalNodeGroupArrayOutput {
	return o
}

func (o GlobalReplicationGroupGlobalNodeGroupArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupGlobalNodeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalReplicationGroupGlobalNodeGroup {
		return vs[0].([]GlobalReplicationGroupGlobalNodeGroup)[vs[1].(int)]
	}).(GlobalReplicationGroupGlobalNodeGroupOutput)
}

type ParameterGroupParameter struct {
	// The name of the ElastiCache parameter.
	Name string `pulumi:"name"`
	// The value of the ElastiCache parameter.
	Value string `pulumi:"value"`
}

// ParameterGroupParameterInput is an input type that accepts ParameterGroupParameterArgs and ParameterGroupParameterOutput values.
// You can construct a concrete instance of `ParameterGroupParameterInput` via:
//
//	ParameterGroupParameterArgs{...}
type ParameterGroupParameterInput interface {
	pulumi.Input

	ToParameterGroupParameterOutput() ParameterGroupParameterOutput
	ToParameterGroupParameterOutputWithContext(context.Context) ParameterGroupParameterOutput
}

type ParameterGroupParameterArgs struct {
	// The name of the ElastiCache parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the ElastiCache parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParameter)(nil)).Elem()
}

func (i ParameterGroupParameterArgs) ToParameterGroupParameterOutput() ParameterGroupParameterOutput {
	return i.ToParameterGroupParameterOutputWithContext(context.Background())
}

func (i ParameterGroupParameterArgs) ToParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupParameterOutput)
}

// ParameterGroupParameterArrayInput is an input type that accepts ParameterGroupParameterArray and ParameterGroupParameterArrayOutput values.
// You can construct a concrete instance of `ParameterGroupParameterArrayInput` via:
//
//	ParameterGroupParameterArray{ ParameterGroupParameterArgs{...} }
type ParameterGroupParameterArrayInput interface {
	pulumi.Input

	ToParameterGroupParameterArrayOutput() ParameterGroupParameterArrayOutput
	ToParameterGroupParameterArrayOutputWithContext(context.Context) ParameterGroupParameterArrayOutput
}

type ParameterGroupParameterArray []ParameterGroupParameterInput

func (ParameterGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupParameter)(nil)).Elem()
}

func (i ParameterGroupParameterArray) ToParameterGroupParameterArrayOutput() ParameterGroupParameterArrayOutput {
	return i.ToParameterGroupParameterArrayOutputWithContext(context.Background())
}

func (i ParameterGroupParameterArray) ToParameterGroupParameterArrayOutputWithContext(ctx context.Context) ParameterGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupParameterArrayOutput)
}

type ParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParameter)(nil)).Elem()
}

func (o ParameterGroupParameterOutput) ToParameterGroupParameterOutput() ParameterGroupParameterOutput {
	return o
}

func (o ParameterGroupParameterOutput) ToParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupParameterOutput {
	return o
}

// The name of the ElastiCache parameter.
func (o ParameterGroupParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the ElastiCache parameter.
func (o ParameterGroupParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ParameterGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupParameter)(nil)).Elem()
}

func (o ParameterGroupParameterArrayOutput) ToParameterGroupParameterArrayOutput() ParameterGroupParameterArrayOutput {
	return o
}

func (o ParameterGroupParameterArrayOutput) ToParameterGroupParameterArrayOutputWithContext(ctx context.Context) ParameterGroupParameterArrayOutput {
	return o
}

func (o ParameterGroupParameterArrayOutput) Index(i pulumi.IntInput) ParameterGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterGroupParameter {
		return vs[0].([]ParameterGroupParameter)[vs[1].(int)]
	}).(ParameterGroupParameterOutput)
}

type ReplicationGroupLogDeliveryConfiguration struct {
	// Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
	Destination string `pulumi:"destination"`
	// For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
	DestinationType string `pulumi:"destinationType"`
	// Valid values are `json` or `text`
	LogFormat string `pulumi:"logFormat"`
	// Valid values are  `slow-log` or `engine-log`. Max 1 of each.
	LogType string `pulumi:"logType"`
}

// ReplicationGroupLogDeliveryConfigurationInput is an input type that accepts ReplicationGroupLogDeliveryConfigurationArgs and ReplicationGroupLogDeliveryConfigurationOutput values.
// You can construct a concrete instance of `ReplicationGroupLogDeliveryConfigurationInput` via:
//
//	ReplicationGroupLogDeliveryConfigurationArgs{...}
type ReplicationGroupLogDeliveryConfigurationInput interface {
	pulumi.Input

	ToReplicationGroupLogDeliveryConfigurationOutput() ReplicationGroupLogDeliveryConfigurationOutput
	ToReplicationGroupLogDeliveryConfigurationOutputWithContext(context.Context) ReplicationGroupLogDeliveryConfigurationOutput
}

type ReplicationGroupLogDeliveryConfigurationArgs struct {
	// Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
	Destination pulumi.StringInput `pulumi:"destination"`
	// For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
	DestinationType pulumi.StringInput `pulumi:"destinationType"`
	// Valid values are `json` or `text`
	LogFormat pulumi.StringInput `pulumi:"logFormat"`
	// Valid values are  `slow-log` or `engine-log`. Max 1 of each.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (ReplicationGroupLogDeliveryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (i ReplicationGroupLogDeliveryConfigurationArgs) ToReplicationGroupLogDeliveryConfigurationOutput() ReplicationGroupLogDeliveryConfigurationOutput {
	return i.ToReplicationGroupLogDeliveryConfigurationOutputWithContext(context.Background())
}

func (i ReplicationGroupLogDeliveryConfigurationArgs) ToReplicationGroupLogDeliveryConfigurationOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupLogDeliveryConfigurationOutput)
}

// ReplicationGroupLogDeliveryConfigurationArrayInput is an input type that accepts ReplicationGroupLogDeliveryConfigurationArray and ReplicationGroupLogDeliveryConfigurationArrayOutput values.
// You can construct a concrete instance of `ReplicationGroupLogDeliveryConfigurationArrayInput` via:
//
//	ReplicationGroupLogDeliveryConfigurationArray{ ReplicationGroupLogDeliveryConfigurationArgs{...} }
type ReplicationGroupLogDeliveryConfigurationArrayInput interface {
	pulumi.Input

	ToReplicationGroupLogDeliveryConfigurationArrayOutput() ReplicationGroupLogDeliveryConfigurationArrayOutput
	ToReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(context.Context) ReplicationGroupLogDeliveryConfigurationArrayOutput
}

type ReplicationGroupLogDeliveryConfigurationArray []ReplicationGroupLogDeliveryConfigurationInput

func (ReplicationGroupLogDeliveryConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (i ReplicationGroupLogDeliveryConfigurationArray) ToReplicationGroupLogDeliveryConfigurationArrayOutput() ReplicationGroupLogDeliveryConfigurationArrayOutput {
	return i.ToReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(context.Background())
}

func (i ReplicationGroupLogDeliveryConfigurationArray) ToReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupLogDeliveryConfigurationArrayOutput)
}

type ReplicationGroupLogDeliveryConfigurationOutput struct{ *pulumi.OutputState }

func (ReplicationGroupLogDeliveryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (o ReplicationGroupLogDeliveryConfigurationOutput) ToReplicationGroupLogDeliveryConfigurationOutput() ReplicationGroupLogDeliveryConfigurationOutput {
	return o
}

func (o ReplicationGroupLogDeliveryConfigurationOutput) ToReplicationGroupLogDeliveryConfigurationOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationOutput {
	return o
}

// Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.
func (o ReplicationGroupLogDeliveryConfigurationOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfiguration) string { return v.Destination }).(pulumi.StringOutput)
}

// For CloudWatch Logs use `cloudwatch-logs` or for Kinesis Data Firehose use `kinesis-firehose`.
func (o ReplicationGroupLogDeliveryConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Valid values are `json` or `text`
func (o ReplicationGroupLogDeliveryConfigurationOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfiguration) string { return v.LogFormat }).(pulumi.StringOutput)
}

// Valid values are  `slow-log` or `engine-log`. Max 1 of each.
func (o ReplicationGroupLogDeliveryConfigurationOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfiguration) string { return v.LogType }).(pulumi.StringOutput)
}

type ReplicationGroupLogDeliveryConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ReplicationGroupLogDeliveryConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (o ReplicationGroupLogDeliveryConfigurationArrayOutput) ToReplicationGroupLogDeliveryConfigurationArrayOutput() ReplicationGroupLogDeliveryConfigurationArrayOutput {
	return o
}

func (o ReplicationGroupLogDeliveryConfigurationArrayOutput) ToReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationArrayOutput {
	return o
}

func (o ReplicationGroupLogDeliveryConfigurationArrayOutput) Index(i pulumi.IntInput) ReplicationGroupLogDeliveryConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationGroupLogDeliveryConfiguration {
		return vs[0].([]ReplicationGroupLogDeliveryConfiguration)[vs[1].(int)]
	}).(ReplicationGroupLogDeliveryConfigurationOutput)
}

type UserAuthenticationMode struct {
	PasswordCount *int `pulumi:"passwordCount"`
	// Specifies the passwords to use for authentication if `type` is set to `password`.
	Passwords []string `pulumi:"passwords"`
	// Specifies the authentication type. Possible options are: `password`, `no-password-required` or `iam`.
	Type string `pulumi:"type"`
}

// UserAuthenticationModeInput is an input type that accepts UserAuthenticationModeArgs and UserAuthenticationModeOutput values.
// You can construct a concrete instance of `UserAuthenticationModeInput` via:
//
//	UserAuthenticationModeArgs{...}
type UserAuthenticationModeInput interface {
	pulumi.Input

	ToUserAuthenticationModeOutput() UserAuthenticationModeOutput
	ToUserAuthenticationModeOutputWithContext(context.Context) UserAuthenticationModeOutput
}

type UserAuthenticationModeArgs struct {
	PasswordCount pulumi.IntPtrInput `pulumi:"passwordCount"`
	// Specifies the passwords to use for authentication if `type` is set to `password`.
	Passwords pulumi.StringArrayInput `pulumi:"passwords"`
	// Specifies the authentication type. Possible options are: `password`, `no-password-required` or `iam`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (UserAuthenticationModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAuthenticationMode)(nil)).Elem()
}

func (i UserAuthenticationModeArgs) ToUserAuthenticationModeOutput() UserAuthenticationModeOutput {
	return i.ToUserAuthenticationModeOutputWithContext(context.Background())
}

func (i UserAuthenticationModeArgs) ToUserAuthenticationModeOutputWithContext(ctx context.Context) UserAuthenticationModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAuthenticationModeOutput)
}

func (i UserAuthenticationModeArgs) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return i.ToUserAuthenticationModePtrOutputWithContext(context.Background())
}

func (i UserAuthenticationModeArgs) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAuthenticationModeOutput).ToUserAuthenticationModePtrOutputWithContext(ctx)
}

// UserAuthenticationModePtrInput is an input type that accepts UserAuthenticationModeArgs, UserAuthenticationModePtr and UserAuthenticationModePtrOutput values.
// You can construct a concrete instance of `UserAuthenticationModePtrInput` via:
//
//	        UserAuthenticationModeArgs{...}
//
//	or:
//
//	        nil
type UserAuthenticationModePtrInput interface {
	pulumi.Input

	ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput
	ToUserAuthenticationModePtrOutputWithContext(context.Context) UserAuthenticationModePtrOutput
}

type userAuthenticationModePtrType UserAuthenticationModeArgs

func UserAuthenticationModePtr(v *UserAuthenticationModeArgs) UserAuthenticationModePtrInput {
	return (*userAuthenticationModePtrType)(v)
}

func (*userAuthenticationModePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAuthenticationMode)(nil)).Elem()
}

func (i *userAuthenticationModePtrType) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return i.ToUserAuthenticationModePtrOutputWithContext(context.Background())
}

func (i *userAuthenticationModePtrType) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAuthenticationModePtrOutput)
}

type UserAuthenticationModeOutput struct{ *pulumi.OutputState }

func (UserAuthenticationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAuthenticationMode)(nil)).Elem()
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModeOutput() UserAuthenticationModeOutput {
	return o
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModeOutputWithContext(ctx context.Context) UserAuthenticationModeOutput {
	return o
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return o.ToUserAuthenticationModePtrOutputWithContext(context.Background())
}

func (o UserAuthenticationModeOutput) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserAuthenticationMode) *UserAuthenticationMode {
		return &v
	}).(UserAuthenticationModePtrOutput)
}

func (o UserAuthenticationModeOutput) PasswordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserAuthenticationMode) *int { return v.PasswordCount }).(pulumi.IntPtrOutput)
}

// Specifies the passwords to use for authentication if `type` is set to `password`.
func (o UserAuthenticationModeOutput) Passwords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserAuthenticationMode) []string { return v.Passwords }).(pulumi.StringArrayOutput)
}

// Specifies the authentication type. Possible options are: `password`, `no-password-required` or `iam`.
func (o UserAuthenticationModeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UserAuthenticationMode) string { return v.Type }).(pulumi.StringOutput)
}

type UserAuthenticationModePtrOutput struct{ *pulumi.OutputState }

func (UserAuthenticationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAuthenticationMode)(nil)).Elem()
}

func (o UserAuthenticationModePtrOutput) ToUserAuthenticationModePtrOutput() UserAuthenticationModePtrOutput {
	return o
}

func (o UserAuthenticationModePtrOutput) ToUserAuthenticationModePtrOutputWithContext(ctx context.Context) UserAuthenticationModePtrOutput {
	return o
}

func (o UserAuthenticationModePtrOutput) Elem() UserAuthenticationModeOutput {
	return o.ApplyT(func(v *UserAuthenticationMode) UserAuthenticationMode {
		if v != nil {
			return *v
		}
		var ret UserAuthenticationMode
		return ret
	}).(UserAuthenticationModeOutput)
}

func (o UserAuthenticationModePtrOutput) PasswordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserAuthenticationMode) *int {
		if v == nil {
			return nil
		}
		return v.PasswordCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the passwords to use for authentication if `type` is set to `password`.
func (o UserAuthenticationModePtrOutput) Passwords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserAuthenticationMode) []string {
		if v == nil {
			return nil
		}
		return v.Passwords
	}).(pulumi.StringArrayOutput)
}

// Specifies the authentication type. Possible options are: `password`, `no-password-required` or `iam`.
func (o UserAuthenticationModePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserAuthenticationMode) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetClusterCacheNode struct {
	Address string `pulumi:"address"`
	// Availability Zone for the cache cluster.
	AvailabilityZone string `pulumi:"availabilityZone"`
	Id               string `pulumi:"id"`
	OutpostArn       string `pulumi:"outpostArn"`
	// The port number on which each of the cache nodes will
	// accept connections.
	Port int `pulumi:"port"`
}

// GetClusterCacheNodeInput is an input type that accepts GetClusterCacheNodeArgs and GetClusterCacheNodeOutput values.
// You can construct a concrete instance of `GetClusterCacheNodeInput` via:
//
//	GetClusterCacheNodeArgs{...}
type GetClusterCacheNodeInput interface {
	pulumi.Input

	ToGetClusterCacheNodeOutput() GetClusterCacheNodeOutput
	ToGetClusterCacheNodeOutputWithContext(context.Context) GetClusterCacheNodeOutput
}

type GetClusterCacheNodeArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
	// Availability Zone for the cache cluster.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	Id               pulumi.StringInput `pulumi:"id"`
	OutpostArn       pulumi.StringInput `pulumi:"outpostArn"`
	// The port number on which each of the cache nodes will
	// accept connections.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetClusterCacheNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCacheNode)(nil)).Elem()
}

func (i GetClusterCacheNodeArgs) ToGetClusterCacheNodeOutput() GetClusterCacheNodeOutput {
	return i.ToGetClusterCacheNodeOutputWithContext(context.Background())
}

func (i GetClusterCacheNodeArgs) ToGetClusterCacheNodeOutputWithContext(ctx context.Context) GetClusterCacheNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCacheNodeOutput)
}

// GetClusterCacheNodeArrayInput is an input type that accepts GetClusterCacheNodeArray and GetClusterCacheNodeArrayOutput values.
// You can construct a concrete instance of `GetClusterCacheNodeArrayInput` via:
//
//	GetClusterCacheNodeArray{ GetClusterCacheNodeArgs{...} }
type GetClusterCacheNodeArrayInput interface {
	pulumi.Input

	ToGetClusterCacheNodeArrayOutput() GetClusterCacheNodeArrayOutput
	ToGetClusterCacheNodeArrayOutputWithContext(context.Context) GetClusterCacheNodeArrayOutput
}

type GetClusterCacheNodeArray []GetClusterCacheNodeInput

func (GetClusterCacheNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCacheNode)(nil)).Elem()
}

func (i GetClusterCacheNodeArray) ToGetClusterCacheNodeArrayOutput() GetClusterCacheNodeArrayOutput {
	return i.ToGetClusterCacheNodeArrayOutputWithContext(context.Background())
}

func (i GetClusterCacheNodeArray) ToGetClusterCacheNodeArrayOutputWithContext(ctx context.Context) GetClusterCacheNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterCacheNodeArrayOutput)
}

type GetClusterCacheNodeOutput struct{ *pulumi.OutputState }

func (GetClusterCacheNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCacheNode)(nil)).Elem()
}

func (o GetClusterCacheNodeOutput) ToGetClusterCacheNodeOutput() GetClusterCacheNodeOutput {
	return o
}

func (o GetClusterCacheNodeOutput) ToGetClusterCacheNodeOutputWithContext(ctx context.Context) GetClusterCacheNodeOutput {
	return o
}

func (o GetClusterCacheNodeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCacheNode) string { return v.Address }).(pulumi.StringOutput)
}

// Availability Zone for the cache cluster.
func (o GetClusterCacheNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCacheNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetClusterCacheNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCacheNode) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterCacheNodeOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCacheNode) string { return v.OutpostArn }).(pulumi.StringOutput)
}

// The port number on which each of the cache nodes will
// accept connections.
func (o GetClusterCacheNodeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterCacheNode) int { return v.Port }).(pulumi.IntOutput)
}

type GetClusterCacheNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClusterCacheNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterCacheNode)(nil)).Elem()
}

func (o GetClusterCacheNodeArrayOutput) ToGetClusterCacheNodeArrayOutput() GetClusterCacheNodeArrayOutput {
	return o
}

func (o GetClusterCacheNodeArrayOutput) ToGetClusterCacheNodeArrayOutputWithContext(ctx context.Context) GetClusterCacheNodeArrayOutput {
	return o
}

func (o GetClusterCacheNodeArrayOutput) Index(i pulumi.IntInput) GetClusterCacheNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterCacheNode {
		return vs[0].([]GetClusterCacheNode)[vs[1].(int)]
	}).(GetClusterCacheNodeOutput)
}

type GetClusterLogDeliveryConfiguration struct {
	Destination     string `pulumi:"destination"`
	DestinationType string `pulumi:"destinationType"`
	LogFormat       string `pulumi:"logFormat"`
	LogType         string `pulumi:"logType"`
}

// GetClusterLogDeliveryConfigurationInput is an input type that accepts GetClusterLogDeliveryConfigurationArgs and GetClusterLogDeliveryConfigurationOutput values.
// You can construct a concrete instance of `GetClusterLogDeliveryConfigurationInput` via:
//
//	GetClusterLogDeliveryConfigurationArgs{...}
type GetClusterLogDeliveryConfigurationInput interface {
	pulumi.Input

	ToGetClusterLogDeliveryConfigurationOutput() GetClusterLogDeliveryConfigurationOutput
	ToGetClusterLogDeliveryConfigurationOutputWithContext(context.Context) GetClusterLogDeliveryConfigurationOutput
}

type GetClusterLogDeliveryConfigurationArgs struct {
	Destination     pulumi.StringInput `pulumi:"destination"`
	DestinationType pulumi.StringInput `pulumi:"destinationType"`
	LogFormat       pulumi.StringInput `pulumi:"logFormat"`
	LogType         pulumi.StringInput `pulumi:"logType"`
}

func (GetClusterLogDeliveryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (i GetClusterLogDeliveryConfigurationArgs) ToGetClusterLogDeliveryConfigurationOutput() GetClusterLogDeliveryConfigurationOutput {
	return i.ToGetClusterLogDeliveryConfigurationOutputWithContext(context.Background())
}

func (i GetClusterLogDeliveryConfigurationArgs) ToGetClusterLogDeliveryConfigurationOutputWithContext(ctx context.Context) GetClusterLogDeliveryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLogDeliveryConfigurationOutput)
}

// GetClusterLogDeliveryConfigurationArrayInput is an input type that accepts GetClusterLogDeliveryConfigurationArray and GetClusterLogDeliveryConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClusterLogDeliveryConfigurationArrayInput` via:
//
//	GetClusterLogDeliveryConfigurationArray{ GetClusterLogDeliveryConfigurationArgs{...} }
type GetClusterLogDeliveryConfigurationArrayInput interface {
	pulumi.Input

	ToGetClusterLogDeliveryConfigurationArrayOutput() GetClusterLogDeliveryConfigurationArrayOutput
	ToGetClusterLogDeliveryConfigurationArrayOutputWithContext(context.Context) GetClusterLogDeliveryConfigurationArrayOutput
}

type GetClusterLogDeliveryConfigurationArray []GetClusterLogDeliveryConfigurationInput

func (GetClusterLogDeliveryConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (i GetClusterLogDeliveryConfigurationArray) ToGetClusterLogDeliveryConfigurationArrayOutput() GetClusterLogDeliveryConfigurationArrayOutput {
	return i.ToGetClusterLogDeliveryConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClusterLogDeliveryConfigurationArray) ToGetClusterLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) GetClusterLogDeliveryConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLogDeliveryConfigurationArrayOutput)
}

type GetClusterLogDeliveryConfigurationOutput struct{ *pulumi.OutputState }

func (GetClusterLogDeliveryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (o GetClusterLogDeliveryConfigurationOutput) ToGetClusterLogDeliveryConfigurationOutput() GetClusterLogDeliveryConfigurationOutput {
	return o
}

func (o GetClusterLogDeliveryConfigurationOutput) ToGetClusterLogDeliveryConfigurationOutputWithContext(ctx context.Context) GetClusterLogDeliveryConfigurationOutput {
	return o
}

func (o GetClusterLogDeliveryConfigurationOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLogDeliveryConfiguration) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetClusterLogDeliveryConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLogDeliveryConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

func (o GetClusterLogDeliveryConfigurationOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLogDeliveryConfiguration) string { return v.LogFormat }).(pulumi.StringOutput)
}

func (o GetClusterLogDeliveryConfigurationOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLogDeliveryConfiguration) string { return v.LogType }).(pulumi.StringOutput)
}

type GetClusterLogDeliveryConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClusterLogDeliveryConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLogDeliveryConfiguration)(nil)).Elem()
}

func (o GetClusterLogDeliveryConfigurationArrayOutput) ToGetClusterLogDeliveryConfigurationArrayOutput() GetClusterLogDeliveryConfigurationArrayOutput {
	return o
}

func (o GetClusterLogDeliveryConfigurationArrayOutput) ToGetClusterLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) GetClusterLogDeliveryConfigurationArrayOutput {
	return o
}

func (o GetClusterLogDeliveryConfigurationArrayOutput) Index(i pulumi.IntInput) GetClusterLogDeliveryConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterLogDeliveryConfiguration {
		return vs[0].([]GetClusterLogDeliveryConfiguration)[vs[1].(int)]
	}).(GetClusterLogDeliveryConfigurationOutput)
}

type GetReplicationGroupLogDeliveryConfiguration struct {
	Destination     string `pulumi:"destination"`
	DestinationType string `pulumi:"destinationType"`
	LogFormat       string `pulumi:"logFormat"`
	LogType         string `pulumi:"logType"`
}

// GetReplicationGroupLogDeliveryConfigurationInput is an input type that accepts GetReplicationGroupLogDeliveryConfigurationArgs and GetReplicationGroupLogDeliveryConfigurationOutput values.
// You can construct a concrete instance of `GetReplicationGroupLogDeliveryConfigurationInput` via:
//
//	GetReplicationGroupLogDeliveryConfigurationArgs{...}
type GetReplicationGroupLogDeliveryConfigurationInput interface {
	pulumi.Input

	ToGetReplicationGroupLogDeliveryConfigurationOutput() GetReplicationGroupLogDeliveryConfigurationOutput
	ToGetReplicationGroupLogDeliveryConfigurationOutputWithContext(context.Context) GetReplicationGroupLogDeliveryConfigurationOutput
}

type GetReplicationGroupLogDeliveryConfigurationArgs struct {
	Destination     pulumi.StringInput `pulumi:"destination"`
	DestinationType pulumi.StringInput `pulumi:"destinationType"`
	LogFormat       pulumi.StringInput `pulumi:"logFormat"`
	LogType         pulumi.StringInput `pulumi:"logType"`
}

func (GetReplicationGroupLogDeliveryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (i GetReplicationGroupLogDeliveryConfigurationArgs) ToGetReplicationGroupLogDeliveryConfigurationOutput() GetReplicationGroupLogDeliveryConfigurationOutput {
	return i.ToGetReplicationGroupLogDeliveryConfigurationOutputWithContext(context.Background())
}

func (i GetReplicationGroupLogDeliveryConfigurationArgs) ToGetReplicationGroupLogDeliveryConfigurationOutputWithContext(ctx context.Context) GetReplicationGroupLogDeliveryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationGroupLogDeliveryConfigurationOutput)
}

// GetReplicationGroupLogDeliveryConfigurationArrayInput is an input type that accepts GetReplicationGroupLogDeliveryConfigurationArray and GetReplicationGroupLogDeliveryConfigurationArrayOutput values.
// You can construct a concrete instance of `GetReplicationGroupLogDeliveryConfigurationArrayInput` via:
//
//	GetReplicationGroupLogDeliveryConfigurationArray{ GetReplicationGroupLogDeliveryConfigurationArgs{...} }
type GetReplicationGroupLogDeliveryConfigurationArrayInput interface {
	pulumi.Input

	ToGetReplicationGroupLogDeliveryConfigurationArrayOutput() GetReplicationGroupLogDeliveryConfigurationArrayOutput
	ToGetReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(context.Context) GetReplicationGroupLogDeliveryConfigurationArrayOutput
}

type GetReplicationGroupLogDeliveryConfigurationArray []GetReplicationGroupLogDeliveryConfigurationInput

func (GetReplicationGroupLogDeliveryConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (i GetReplicationGroupLogDeliveryConfigurationArray) ToGetReplicationGroupLogDeliveryConfigurationArrayOutput() GetReplicationGroupLogDeliveryConfigurationArrayOutput {
	return i.ToGetReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(context.Background())
}

func (i GetReplicationGroupLogDeliveryConfigurationArray) ToGetReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) GetReplicationGroupLogDeliveryConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationGroupLogDeliveryConfigurationArrayOutput)
}

type GetReplicationGroupLogDeliveryConfigurationOutput struct{ *pulumi.OutputState }

func (GetReplicationGroupLogDeliveryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (o GetReplicationGroupLogDeliveryConfigurationOutput) ToGetReplicationGroupLogDeliveryConfigurationOutput() GetReplicationGroupLogDeliveryConfigurationOutput {
	return o
}

func (o GetReplicationGroupLogDeliveryConfigurationOutput) ToGetReplicationGroupLogDeliveryConfigurationOutputWithContext(ctx context.Context) GetReplicationGroupLogDeliveryConfigurationOutput {
	return o
}

func (o GetReplicationGroupLogDeliveryConfigurationOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationGroupLogDeliveryConfiguration) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetReplicationGroupLogDeliveryConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationGroupLogDeliveryConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

func (o GetReplicationGroupLogDeliveryConfigurationOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationGroupLogDeliveryConfiguration) string { return v.LogFormat }).(pulumi.StringOutput)
}

func (o GetReplicationGroupLogDeliveryConfigurationOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationGroupLogDeliveryConfiguration) string { return v.LogType }).(pulumi.StringOutput)
}

type GetReplicationGroupLogDeliveryConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationGroupLogDeliveryConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationGroupLogDeliveryConfiguration)(nil)).Elem()
}

func (o GetReplicationGroupLogDeliveryConfigurationArrayOutput) ToGetReplicationGroupLogDeliveryConfigurationArrayOutput() GetReplicationGroupLogDeliveryConfigurationArrayOutput {
	return o
}

func (o GetReplicationGroupLogDeliveryConfigurationArrayOutput) ToGetReplicationGroupLogDeliveryConfigurationArrayOutputWithContext(ctx context.Context) GetReplicationGroupLogDeliveryConfigurationArrayOutput {
	return o
}

func (o GetReplicationGroupLogDeliveryConfigurationArrayOutput) Index(i pulumi.IntInput) GetReplicationGroupLogDeliveryConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationGroupLogDeliveryConfiguration {
		return vs[0].([]GetReplicationGroupLogDeliveryConfiguration)[vs[1].(int)]
	}).(GetReplicationGroupLogDeliveryConfigurationOutput)
}

type GetUserAuthenticationMode struct {
	PasswordCount *int    `pulumi:"passwordCount"`
	Type          *string `pulumi:"type"`
}

// GetUserAuthenticationModeInput is an input type that accepts GetUserAuthenticationModeArgs and GetUserAuthenticationModeOutput values.
// You can construct a concrete instance of `GetUserAuthenticationModeInput` via:
//
//	GetUserAuthenticationModeArgs{...}
type GetUserAuthenticationModeInput interface {
	pulumi.Input

	ToGetUserAuthenticationModeOutput() GetUserAuthenticationModeOutput
	ToGetUserAuthenticationModeOutputWithContext(context.Context) GetUserAuthenticationModeOutput
}

type GetUserAuthenticationModeArgs struct {
	PasswordCount pulumi.IntPtrInput    `pulumi:"passwordCount"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (GetUserAuthenticationModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAuthenticationMode)(nil)).Elem()
}

func (i GetUserAuthenticationModeArgs) ToGetUserAuthenticationModeOutput() GetUserAuthenticationModeOutput {
	return i.ToGetUserAuthenticationModeOutputWithContext(context.Background())
}

func (i GetUserAuthenticationModeArgs) ToGetUserAuthenticationModeOutputWithContext(ctx context.Context) GetUserAuthenticationModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAuthenticationModeOutput)
}

// GetUserAuthenticationModeArrayInput is an input type that accepts GetUserAuthenticationModeArray and GetUserAuthenticationModeArrayOutput values.
// You can construct a concrete instance of `GetUserAuthenticationModeArrayInput` via:
//
//	GetUserAuthenticationModeArray{ GetUserAuthenticationModeArgs{...} }
type GetUserAuthenticationModeArrayInput interface {
	pulumi.Input

	ToGetUserAuthenticationModeArrayOutput() GetUserAuthenticationModeArrayOutput
	ToGetUserAuthenticationModeArrayOutputWithContext(context.Context) GetUserAuthenticationModeArrayOutput
}

type GetUserAuthenticationModeArray []GetUserAuthenticationModeInput

func (GetUserAuthenticationModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAuthenticationMode)(nil)).Elem()
}

func (i GetUserAuthenticationModeArray) ToGetUserAuthenticationModeArrayOutput() GetUserAuthenticationModeArrayOutput {
	return i.ToGetUserAuthenticationModeArrayOutputWithContext(context.Background())
}

func (i GetUserAuthenticationModeArray) ToGetUserAuthenticationModeArrayOutputWithContext(ctx context.Context) GetUserAuthenticationModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserAuthenticationModeArrayOutput)
}

type GetUserAuthenticationModeOutput struct{ *pulumi.OutputState }

func (GetUserAuthenticationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserAuthenticationMode)(nil)).Elem()
}

func (o GetUserAuthenticationModeOutput) ToGetUserAuthenticationModeOutput() GetUserAuthenticationModeOutput {
	return o
}

func (o GetUserAuthenticationModeOutput) ToGetUserAuthenticationModeOutputWithContext(ctx context.Context) GetUserAuthenticationModeOutput {
	return o
}

func (o GetUserAuthenticationModeOutput) PasswordCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetUserAuthenticationMode) *int { return v.PasswordCount }).(pulumi.IntPtrOutput)
}

func (o GetUserAuthenticationModeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserAuthenticationMode) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetUserAuthenticationModeArrayOutput struct{ *pulumi.OutputState }

func (GetUserAuthenticationModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserAuthenticationMode)(nil)).Elem()
}

func (o GetUserAuthenticationModeArrayOutput) ToGetUserAuthenticationModeArrayOutput() GetUserAuthenticationModeArrayOutput {
	return o
}

func (o GetUserAuthenticationModeArrayOutput) ToGetUserAuthenticationModeArrayOutputWithContext(ctx context.Context) GetUserAuthenticationModeArrayOutput {
	return o
}

func (o GetUserAuthenticationModeArrayOutput) Index(i pulumi.IntInput) GetUserAuthenticationModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserAuthenticationMode {
		return vs[0].([]GetUserAuthenticationMode)[vs[1].(int)]
	}).(GetUserAuthenticationModeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCacheNodeInput)(nil)).Elem(), ClusterCacheNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCacheNodeArrayInput)(nil)).Elem(), ClusterCacheNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLogDeliveryConfigurationInput)(nil)).Elem(), ClusterLogDeliveryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLogDeliveryConfigurationArrayInput)(nil)).Elem(), ClusterLogDeliveryConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupGlobalNodeGroupInput)(nil)).Elem(), GlobalReplicationGroupGlobalNodeGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupGlobalNodeGroupArrayInput)(nil)).Elem(), GlobalReplicationGroupGlobalNodeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupParameterInput)(nil)).Elem(), ParameterGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupParameterArrayInput)(nil)).Elem(), ParameterGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupLogDeliveryConfigurationInput)(nil)).Elem(), ReplicationGroupLogDeliveryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupLogDeliveryConfigurationArrayInput)(nil)).Elem(), ReplicationGroupLogDeliveryConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserAuthenticationModeInput)(nil)).Elem(), UserAuthenticationModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserAuthenticationModePtrInput)(nil)).Elem(), UserAuthenticationModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCacheNodeInput)(nil)).Elem(), GetClusterCacheNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterCacheNodeArrayInput)(nil)).Elem(), GetClusterCacheNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLogDeliveryConfigurationInput)(nil)).Elem(), GetClusterLogDeliveryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLogDeliveryConfigurationArrayInput)(nil)).Elem(), GetClusterLogDeliveryConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationGroupLogDeliveryConfigurationInput)(nil)).Elem(), GetReplicationGroupLogDeliveryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationGroupLogDeliveryConfigurationArrayInput)(nil)).Elem(), GetReplicationGroupLogDeliveryConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAuthenticationModeInput)(nil)).Elem(), GetUserAuthenticationModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserAuthenticationModeArrayInput)(nil)).Elem(), GetUserAuthenticationModeArray{})
	pulumi.RegisterOutputType(ClusterCacheNodeOutput{})
	pulumi.RegisterOutputType(ClusterCacheNodeArrayOutput{})
	pulumi.RegisterOutputType(ClusterLogDeliveryConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterLogDeliveryConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupGlobalNodeGroupOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupGlobalNodeGroupArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(ParameterGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(ReplicationGroupLogDeliveryConfigurationOutput{})
	pulumi.RegisterOutputType(ReplicationGroupLogDeliveryConfigurationArrayOutput{})
	pulumi.RegisterOutputType(UserAuthenticationModeOutput{})
	pulumi.RegisterOutputType(UserAuthenticationModePtrOutput{})
	pulumi.RegisterOutputType(GetClusterCacheNodeOutput{})
	pulumi.RegisterOutputType(GetClusterCacheNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterLogDeliveryConfigurationOutput{})
	pulumi.RegisterOutputType(GetClusterLogDeliveryConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationGroupLogDeliveryConfigurationOutput{})
	pulumi.RegisterOutputType(GetReplicationGroupLogDeliveryConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetUserAuthenticationModeOutput{})
	pulumi.RegisterOutputType(GetUserAuthenticationModeArrayOutput{})
}
