// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReplicationGroup struct {
	pulumi.CustomResourceState

	ApplyImmediately         pulumi.BoolOutput        `pulumi:"applyImmediately"`
	Arn                      pulumi.StringOutput      `pulumi:"arn"`
	AtRestEncryptionEnabled  pulumi.BoolOutput        `pulumi:"atRestEncryptionEnabled"`
	AuthToken                pulumi.StringPtrOutput   `pulumi:"authToken"`
	AutoMinorVersionUpgrade  pulumi.BoolOutput        `pulumi:"autoMinorVersionUpgrade"`
	AutomaticFailoverEnabled pulumi.BoolPtrOutput     `pulumi:"automaticFailoverEnabled"`
	AvailabilityZones        pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	ClusterEnabled           pulumi.BoolOutput        `pulumi:"clusterEnabled"`
	// Deprecated: Use num_node_groups and replicas_per_node_group instead
	ClusterMode                  ReplicationGroupClusterModeOutput                   `pulumi:"clusterMode"`
	ConfigurationEndpointAddress pulumi.StringOutput                                 `pulumi:"configurationEndpointAddress"`
	DataTieringEnabled           pulumi.BoolOutput                                   `pulumi:"dataTieringEnabled"`
	Description                  pulumi.StringOutput                                 `pulumi:"description"`
	Engine                       pulumi.StringPtrOutput                              `pulumi:"engine"`
	EngineVersion                pulumi.StringOutput                                 `pulumi:"engineVersion"`
	EngineVersionActual          pulumi.StringOutput                                 `pulumi:"engineVersionActual"`
	FinalSnapshotIdentifier      pulumi.StringPtrOutput                              `pulumi:"finalSnapshotIdentifier"`
	GlobalReplicationGroupId     pulumi.StringOutput                                 `pulumi:"globalReplicationGroupId"`
	KmsKeyId                     pulumi.StringPtrOutput                              `pulumi:"kmsKeyId"`
	LogDeliveryConfigurations    ReplicationGroupLogDeliveryConfigurationArrayOutput `pulumi:"logDeliveryConfigurations"`
	MaintenanceWindow            pulumi.StringOutput                                 `pulumi:"maintenanceWindow"`
	MemberClusters               pulumi.StringArrayOutput                            `pulumi:"memberClusters"`
	MultiAzEnabled               pulumi.BoolPtrOutput                                `pulumi:"multiAzEnabled"`
	NodeType                     pulumi.StringOutput                                 `pulumi:"nodeType"`
	NotificationTopicArn         pulumi.StringPtrOutput                              `pulumi:"notificationTopicArn"`
	NumCacheClusters             pulumi.IntOutput                                    `pulumi:"numCacheClusters"`
	NumNodeGroups                pulumi.IntOutput                                    `pulumi:"numNodeGroups"`
	// Deprecated: Use num_cache_clusters instead
	NumberCacheClusters      pulumi.IntOutput         `pulumi:"numberCacheClusters"`
	ParameterGroupName       pulumi.StringOutput      `pulumi:"parameterGroupName"`
	Port                     pulumi.IntPtrOutput      `pulumi:"port"`
	PreferredCacheClusterAzs pulumi.StringArrayOutput `pulumi:"preferredCacheClusterAzs"`
	PrimaryEndpointAddress   pulumi.StringOutput      `pulumi:"primaryEndpointAddress"`
	ReaderEndpointAddress    pulumi.StringOutput      `pulumi:"readerEndpointAddress"`
	ReplicasPerNodeGroup     pulumi.IntOutput         `pulumi:"replicasPerNodeGroup"`
	// Deprecated: Use description instead
	ReplicationGroupDescription pulumi.StringOutput      `pulumi:"replicationGroupDescription"`
	ReplicationGroupId          pulumi.StringOutput      `pulumi:"replicationGroupId"`
	SecurityGroupIds            pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	SecurityGroupNames          pulumi.StringArrayOutput `pulumi:"securityGroupNames"`
	SnapshotArns                pulumi.StringArrayOutput `pulumi:"snapshotArns"`
	SnapshotName                pulumi.StringPtrOutput   `pulumi:"snapshotName"`
	SnapshotRetentionLimit      pulumi.IntPtrOutput      `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow              pulumi.StringOutput      `pulumi:"snapshotWindow"`
	SubnetGroupName             pulumi.StringOutput      `pulumi:"subnetGroupName"`
	Tags                        pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                     pulumi.StringMapOutput   `pulumi:"tagsAll"`
	TransitEncryptionEnabled    pulumi.BoolOutput        `pulumi:"transitEncryptionEnabled"`
	UserGroupIds                pulumi.StringArrayOutput `pulumi:"userGroupIds"`
}

// NewReplicationGroup registers a new resource with the given unique name, arguments, and options.
func NewReplicationGroup(ctx *pulumi.Context,
	name string, args *ReplicationGroupArgs, opts ...pulumi.ResourceOption) (*ReplicationGroup, error) {
	if args == nil {
		args = &ReplicationGroupArgs{}
	}

	if args.AuthToken != nil {
		args.AuthToken = pulumi.ToSecret(args.AuthToken).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"authToken",
	})
	opts = append(opts, secrets)
	var resource ReplicationGroup
	err := ctx.RegisterResource("aws:elasticache/replicationGroup:ReplicationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationGroup gets an existing ReplicationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationGroupState, opts ...pulumi.ResourceOption) (*ReplicationGroup, error) {
	var resource ReplicationGroup
	err := ctx.ReadResource("aws:elasticache/replicationGroup:ReplicationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationGroup resources.
type replicationGroupState struct {
	ApplyImmediately         *bool    `pulumi:"applyImmediately"`
	Arn                      *string  `pulumi:"arn"`
	AtRestEncryptionEnabled  *bool    `pulumi:"atRestEncryptionEnabled"`
	AuthToken                *string  `pulumi:"authToken"`
	AutoMinorVersionUpgrade  *bool    `pulumi:"autoMinorVersionUpgrade"`
	AutomaticFailoverEnabled *bool    `pulumi:"automaticFailoverEnabled"`
	AvailabilityZones        []string `pulumi:"availabilityZones"`
	ClusterEnabled           *bool    `pulumi:"clusterEnabled"`
	// Deprecated: Use num_node_groups and replicas_per_node_group instead
	ClusterMode                  *ReplicationGroupClusterMode               `pulumi:"clusterMode"`
	ConfigurationEndpointAddress *string                                    `pulumi:"configurationEndpointAddress"`
	DataTieringEnabled           *bool                                      `pulumi:"dataTieringEnabled"`
	Description                  *string                                    `pulumi:"description"`
	Engine                       *string                                    `pulumi:"engine"`
	EngineVersion                *string                                    `pulumi:"engineVersion"`
	EngineVersionActual          *string                                    `pulumi:"engineVersionActual"`
	FinalSnapshotIdentifier      *string                                    `pulumi:"finalSnapshotIdentifier"`
	GlobalReplicationGroupId     *string                                    `pulumi:"globalReplicationGroupId"`
	KmsKeyId                     *string                                    `pulumi:"kmsKeyId"`
	LogDeliveryConfigurations    []ReplicationGroupLogDeliveryConfiguration `pulumi:"logDeliveryConfigurations"`
	MaintenanceWindow            *string                                    `pulumi:"maintenanceWindow"`
	MemberClusters               []string                                   `pulumi:"memberClusters"`
	MultiAzEnabled               *bool                                      `pulumi:"multiAzEnabled"`
	NodeType                     *string                                    `pulumi:"nodeType"`
	NotificationTopicArn         *string                                    `pulumi:"notificationTopicArn"`
	NumCacheClusters             *int                                       `pulumi:"numCacheClusters"`
	NumNodeGroups                *int                                       `pulumi:"numNodeGroups"`
	// Deprecated: Use num_cache_clusters instead
	NumberCacheClusters      *int     `pulumi:"numberCacheClusters"`
	ParameterGroupName       *string  `pulumi:"parameterGroupName"`
	Port                     *int     `pulumi:"port"`
	PreferredCacheClusterAzs []string `pulumi:"preferredCacheClusterAzs"`
	PrimaryEndpointAddress   *string  `pulumi:"primaryEndpointAddress"`
	ReaderEndpointAddress    *string  `pulumi:"readerEndpointAddress"`
	ReplicasPerNodeGroup     *int     `pulumi:"replicasPerNodeGroup"`
	// Deprecated: Use description instead
	ReplicationGroupDescription *string           `pulumi:"replicationGroupDescription"`
	ReplicationGroupId          *string           `pulumi:"replicationGroupId"`
	SecurityGroupIds            []string          `pulumi:"securityGroupIds"`
	SecurityGroupNames          []string          `pulumi:"securityGroupNames"`
	SnapshotArns                []string          `pulumi:"snapshotArns"`
	SnapshotName                *string           `pulumi:"snapshotName"`
	SnapshotRetentionLimit      *int              `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow              *string           `pulumi:"snapshotWindow"`
	SubnetGroupName             *string           `pulumi:"subnetGroupName"`
	Tags                        map[string]string `pulumi:"tags"`
	TagsAll                     map[string]string `pulumi:"tagsAll"`
	TransitEncryptionEnabled    *bool             `pulumi:"transitEncryptionEnabled"`
	UserGroupIds                []string          `pulumi:"userGroupIds"`
}

type ReplicationGroupState struct {
	ApplyImmediately         pulumi.BoolPtrInput
	Arn                      pulumi.StringPtrInput
	AtRestEncryptionEnabled  pulumi.BoolPtrInput
	AuthToken                pulumi.StringPtrInput
	AutoMinorVersionUpgrade  pulumi.BoolPtrInput
	AutomaticFailoverEnabled pulumi.BoolPtrInput
	AvailabilityZones        pulumi.StringArrayInput
	ClusterEnabled           pulumi.BoolPtrInput
	// Deprecated: Use num_node_groups and replicas_per_node_group instead
	ClusterMode                  ReplicationGroupClusterModePtrInput
	ConfigurationEndpointAddress pulumi.StringPtrInput
	DataTieringEnabled           pulumi.BoolPtrInput
	Description                  pulumi.StringPtrInput
	Engine                       pulumi.StringPtrInput
	EngineVersion                pulumi.StringPtrInput
	EngineVersionActual          pulumi.StringPtrInput
	FinalSnapshotIdentifier      pulumi.StringPtrInput
	GlobalReplicationGroupId     pulumi.StringPtrInput
	KmsKeyId                     pulumi.StringPtrInput
	LogDeliveryConfigurations    ReplicationGroupLogDeliveryConfigurationArrayInput
	MaintenanceWindow            pulumi.StringPtrInput
	MemberClusters               pulumi.StringArrayInput
	MultiAzEnabled               pulumi.BoolPtrInput
	NodeType                     pulumi.StringPtrInput
	NotificationTopicArn         pulumi.StringPtrInput
	NumCacheClusters             pulumi.IntPtrInput
	NumNodeGroups                pulumi.IntPtrInput
	// Deprecated: Use num_cache_clusters instead
	NumberCacheClusters      pulumi.IntPtrInput
	ParameterGroupName       pulumi.StringPtrInput
	Port                     pulumi.IntPtrInput
	PreferredCacheClusterAzs pulumi.StringArrayInput
	PrimaryEndpointAddress   pulumi.StringPtrInput
	ReaderEndpointAddress    pulumi.StringPtrInput
	ReplicasPerNodeGroup     pulumi.IntPtrInput
	// Deprecated: Use description instead
	ReplicationGroupDescription pulumi.StringPtrInput
	ReplicationGroupId          pulumi.StringPtrInput
	SecurityGroupIds            pulumi.StringArrayInput
	SecurityGroupNames          pulumi.StringArrayInput
	SnapshotArns                pulumi.StringArrayInput
	SnapshotName                pulumi.StringPtrInput
	SnapshotRetentionLimit      pulumi.IntPtrInput
	SnapshotWindow              pulumi.StringPtrInput
	SubnetGroupName             pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	TagsAll                     pulumi.StringMapInput
	TransitEncryptionEnabled    pulumi.BoolPtrInput
	UserGroupIds                pulumi.StringArrayInput
}

func (ReplicationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationGroupState)(nil)).Elem()
}

type replicationGroupArgs struct {
	ApplyImmediately         *bool    `pulumi:"applyImmediately"`
	AtRestEncryptionEnabled  *bool    `pulumi:"atRestEncryptionEnabled"`
	AuthToken                *string  `pulumi:"authToken"`
	AutoMinorVersionUpgrade  *bool    `pulumi:"autoMinorVersionUpgrade"`
	AutomaticFailoverEnabled *bool    `pulumi:"automaticFailoverEnabled"`
	AvailabilityZones        []string `pulumi:"availabilityZones"`
	// Deprecated: Use num_node_groups and replicas_per_node_group instead
	ClusterMode               *ReplicationGroupClusterMode               `pulumi:"clusterMode"`
	DataTieringEnabled        *bool                                      `pulumi:"dataTieringEnabled"`
	Description               *string                                    `pulumi:"description"`
	Engine                    *string                                    `pulumi:"engine"`
	EngineVersion             *string                                    `pulumi:"engineVersion"`
	FinalSnapshotIdentifier   *string                                    `pulumi:"finalSnapshotIdentifier"`
	GlobalReplicationGroupId  *string                                    `pulumi:"globalReplicationGroupId"`
	KmsKeyId                  *string                                    `pulumi:"kmsKeyId"`
	LogDeliveryConfigurations []ReplicationGroupLogDeliveryConfiguration `pulumi:"logDeliveryConfigurations"`
	MaintenanceWindow         *string                                    `pulumi:"maintenanceWindow"`
	MultiAzEnabled            *bool                                      `pulumi:"multiAzEnabled"`
	NodeType                  *string                                    `pulumi:"nodeType"`
	NotificationTopicArn      *string                                    `pulumi:"notificationTopicArn"`
	NumCacheClusters          *int                                       `pulumi:"numCacheClusters"`
	NumNodeGroups             *int                                       `pulumi:"numNodeGroups"`
	// Deprecated: Use num_cache_clusters instead
	NumberCacheClusters      *int     `pulumi:"numberCacheClusters"`
	ParameterGroupName       *string  `pulumi:"parameterGroupName"`
	Port                     *int     `pulumi:"port"`
	PreferredCacheClusterAzs []string `pulumi:"preferredCacheClusterAzs"`
	ReplicasPerNodeGroup     *int     `pulumi:"replicasPerNodeGroup"`
	// Deprecated: Use description instead
	ReplicationGroupDescription *string           `pulumi:"replicationGroupDescription"`
	ReplicationGroupId          *string           `pulumi:"replicationGroupId"`
	SecurityGroupIds            []string          `pulumi:"securityGroupIds"`
	SecurityGroupNames          []string          `pulumi:"securityGroupNames"`
	SnapshotArns                []string          `pulumi:"snapshotArns"`
	SnapshotName                *string           `pulumi:"snapshotName"`
	SnapshotRetentionLimit      *int              `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow              *string           `pulumi:"snapshotWindow"`
	SubnetGroupName             *string           `pulumi:"subnetGroupName"`
	Tags                        map[string]string `pulumi:"tags"`
	TransitEncryptionEnabled    *bool             `pulumi:"transitEncryptionEnabled"`
	UserGroupIds                []string          `pulumi:"userGroupIds"`
}

// The set of arguments for constructing a ReplicationGroup resource.
type ReplicationGroupArgs struct {
	ApplyImmediately         pulumi.BoolPtrInput
	AtRestEncryptionEnabled  pulumi.BoolPtrInput
	AuthToken                pulumi.StringPtrInput
	AutoMinorVersionUpgrade  pulumi.BoolPtrInput
	AutomaticFailoverEnabled pulumi.BoolPtrInput
	AvailabilityZones        pulumi.StringArrayInput
	// Deprecated: Use num_node_groups and replicas_per_node_group instead
	ClusterMode               ReplicationGroupClusterModePtrInput
	DataTieringEnabled        pulumi.BoolPtrInput
	Description               pulumi.StringPtrInput
	Engine                    pulumi.StringPtrInput
	EngineVersion             pulumi.StringPtrInput
	FinalSnapshotIdentifier   pulumi.StringPtrInput
	GlobalReplicationGroupId  pulumi.StringPtrInput
	KmsKeyId                  pulumi.StringPtrInput
	LogDeliveryConfigurations ReplicationGroupLogDeliveryConfigurationArrayInput
	MaintenanceWindow         pulumi.StringPtrInput
	MultiAzEnabled            pulumi.BoolPtrInput
	NodeType                  pulumi.StringPtrInput
	NotificationTopicArn      pulumi.StringPtrInput
	NumCacheClusters          pulumi.IntPtrInput
	NumNodeGroups             pulumi.IntPtrInput
	// Deprecated: Use num_cache_clusters instead
	NumberCacheClusters      pulumi.IntPtrInput
	ParameterGroupName       pulumi.StringPtrInput
	Port                     pulumi.IntPtrInput
	PreferredCacheClusterAzs pulumi.StringArrayInput
	ReplicasPerNodeGroup     pulumi.IntPtrInput
	// Deprecated: Use description instead
	ReplicationGroupDescription pulumi.StringPtrInput
	ReplicationGroupId          pulumi.StringPtrInput
	SecurityGroupIds            pulumi.StringArrayInput
	SecurityGroupNames          pulumi.StringArrayInput
	SnapshotArns                pulumi.StringArrayInput
	SnapshotName                pulumi.StringPtrInput
	SnapshotRetentionLimit      pulumi.IntPtrInput
	SnapshotWindow              pulumi.StringPtrInput
	SubnetGroupName             pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	TransitEncryptionEnabled    pulumi.BoolPtrInput
	UserGroupIds                pulumi.StringArrayInput
}

func (ReplicationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationGroupArgs)(nil)).Elem()
}

type ReplicationGroupInput interface {
	pulumi.Input

	ToReplicationGroupOutput() ReplicationGroupOutput
	ToReplicationGroupOutputWithContext(ctx context.Context) ReplicationGroupOutput
}

func (*ReplicationGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroup)(nil)).Elem()
}

func (i *ReplicationGroup) ToReplicationGroupOutput() ReplicationGroupOutput {
	return i.ToReplicationGroupOutputWithContext(context.Background())
}

func (i *ReplicationGroup) ToReplicationGroupOutputWithContext(ctx context.Context) ReplicationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupOutput)
}

// ReplicationGroupArrayInput is an input type that accepts ReplicationGroupArray and ReplicationGroupArrayOutput values.
// You can construct a concrete instance of `ReplicationGroupArrayInput` via:
//
//	ReplicationGroupArray{ ReplicationGroupArgs{...} }
type ReplicationGroupArrayInput interface {
	pulumi.Input

	ToReplicationGroupArrayOutput() ReplicationGroupArrayOutput
	ToReplicationGroupArrayOutputWithContext(context.Context) ReplicationGroupArrayOutput
}

type ReplicationGroupArray []ReplicationGroupInput

func (ReplicationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicationGroup)(nil)).Elem()
}

func (i ReplicationGroupArray) ToReplicationGroupArrayOutput() ReplicationGroupArrayOutput {
	return i.ToReplicationGroupArrayOutputWithContext(context.Background())
}

func (i ReplicationGroupArray) ToReplicationGroupArrayOutputWithContext(ctx context.Context) ReplicationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupArrayOutput)
}

// ReplicationGroupMapInput is an input type that accepts ReplicationGroupMap and ReplicationGroupMapOutput values.
// You can construct a concrete instance of `ReplicationGroupMapInput` via:
//
//	ReplicationGroupMap{ "key": ReplicationGroupArgs{...} }
type ReplicationGroupMapInput interface {
	pulumi.Input

	ToReplicationGroupMapOutput() ReplicationGroupMapOutput
	ToReplicationGroupMapOutputWithContext(context.Context) ReplicationGroupMapOutput
}

type ReplicationGroupMap map[string]ReplicationGroupInput

func (ReplicationGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicationGroup)(nil)).Elem()
}

func (i ReplicationGroupMap) ToReplicationGroupMapOutput() ReplicationGroupMapOutput {
	return i.ToReplicationGroupMapOutputWithContext(context.Background())
}

func (i ReplicationGroupMap) ToReplicationGroupMapOutputWithContext(ctx context.Context) ReplicationGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupMapOutput)
}

type ReplicationGroupOutput struct{ *pulumi.OutputState }

func (ReplicationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroup)(nil)).Elem()
}

func (o ReplicationGroupOutput) ToReplicationGroupOutput() ReplicationGroupOutput {
	return o
}

func (o ReplicationGroupOutput) ToReplicationGroupOutputWithContext(ctx context.Context) ReplicationGroupOutput {
	return o
}

func (o ReplicationGroupOutput) ApplyImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolOutput { return v.ApplyImmediately }).(pulumi.BoolOutput)
}

func (o ReplicationGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) AtRestEncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolOutput { return v.AtRestEncryptionEnabled }).(pulumi.BoolOutput)
}

func (o ReplicationGroupOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringPtrOutput { return v.AuthToken }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupOutput) AutoMinorVersionUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolOutput { return v.AutoMinorVersionUpgrade }).(pulumi.BoolOutput)
}

func (o ReplicationGroupOutput) AutomaticFailoverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolPtrOutput { return v.AutomaticFailoverEnabled }).(pulumi.BoolPtrOutput)
}

func (o ReplicationGroupOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o ReplicationGroupOutput) ClusterEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolOutput { return v.ClusterEnabled }).(pulumi.BoolOutput)
}

// Deprecated: Use num_node_groups and replicas_per_node_group instead
func (o ReplicationGroupOutput) ClusterMode() ReplicationGroupClusterModeOutput {
	return o.ApplyT(func(v *ReplicationGroup) ReplicationGroupClusterModeOutput { return v.ClusterMode }).(ReplicationGroupClusterModeOutput)
}

func (o ReplicationGroupOutput) ConfigurationEndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.ConfigurationEndpointAddress }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) DataTieringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolOutput { return v.DataTieringEnabled }).(pulumi.BoolOutput)
}

func (o ReplicationGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringPtrOutput { return v.Engine }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) EngineVersionActual() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.EngineVersionActual }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) FinalSnapshotIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringPtrOutput { return v.FinalSnapshotIdentifier }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupOutput) GlobalReplicationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.GlobalReplicationGroupId }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupOutput) LogDeliveryConfigurations() ReplicationGroupLogDeliveryConfigurationArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) ReplicationGroupLogDeliveryConfigurationArrayOutput {
		return v.LogDeliveryConfigurations
	}).(ReplicationGroupLogDeliveryConfigurationArrayOutput)
}

func (o ReplicationGroupOutput) MaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.MaintenanceWindow }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) MemberClusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringArrayOutput { return v.MemberClusters }).(pulumi.StringArrayOutput)
}

func (o ReplicationGroupOutput) MultiAzEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolPtrOutput { return v.MultiAzEnabled }).(pulumi.BoolPtrOutput)
}

func (o ReplicationGroupOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.NodeType }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) NotificationTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringPtrOutput { return v.NotificationTopicArn }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupOutput) NumCacheClusters() pulumi.IntOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.IntOutput { return v.NumCacheClusters }).(pulumi.IntOutput)
}

func (o ReplicationGroupOutput) NumNodeGroups() pulumi.IntOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.IntOutput { return v.NumNodeGroups }).(pulumi.IntOutput)
}

// Deprecated: Use num_cache_clusters instead
func (o ReplicationGroupOutput) NumberCacheClusters() pulumi.IntOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.IntOutput { return v.NumberCacheClusters }).(pulumi.IntOutput)
}

func (o ReplicationGroupOutput) ParameterGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.ParameterGroupName }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ReplicationGroupOutput) PreferredCacheClusterAzs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringArrayOutput { return v.PreferredCacheClusterAzs }).(pulumi.StringArrayOutput)
}

func (o ReplicationGroupOutput) PrimaryEndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.PrimaryEndpointAddress }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) ReaderEndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.ReaderEndpointAddress }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) ReplicasPerNodeGroup() pulumi.IntOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.IntOutput { return v.ReplicasPerNodeGroup }).(pulumi.IntOutput)
}

// Deprecated: Use description instead
func (o ReplicationGroupOutput) ReplicationGroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.ReplicationGroupDescription }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) ReplicationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.ReplicationGroupId }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ReplicationGroupOutput) SecurityGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringArrayOutput { return v.SecurityGroupNames }).(pulumi.StringArrayOutput)
}

func (o ReplicationGroupOutput) SnapshotArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringArrayOutput { return v.SnapshotArns }).(pulumi.StringArrayOutput)
}

func (o ReplicationGroupOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringPtrOutput { return v.SnapshotName }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupOutput) SnapshotRetentionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.IntPtrOutput { return v.SnapshotRetentionLimit }).(pulumi.IntPtrOutput)
}

func (o ReplicationGroupOutput) SnapshotWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.SnapshotWindow }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) SubnetGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringOutput { return v.SubnetGroupName }).(pulumi.StringOutput)
}

func (o ReplicationGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ReplicationGroupOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ReplicationGroupOutput) TransitEncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.BoolOutput { return v.TransitEncryptionEnabled }).(pulumi.BoolOutput)
}

func (o ReplicationGroupOutput) UserGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReplicationGroup) pulumi.StringArrayOutput { return v.UserGroupIds }).(pulumi.StringArrayOutput)
}

type ReplicationGroupArrayOutput struct{ *pulumi.OutputState }

func (ReplicationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicationGroup)(nil)).Elem()
}

func (o ReplicationGroupArrayOutput) ToReplicationGroupArrayOutput() ReplicationGroupArrayOutput {
	return o
}

func (o ReplicationGroupArrayOutput) ToReplicationGroupArrayOutputWithContext(ctx context.Context) ReplicationGroupArrayOutput {
	return o
}

func (o ReplicationGroupArrayOutput) Index(i pulumi.IntInput) ReplicationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReplicationGroup {
		return vs[0].([]*ReplicationGroup)[vs[1].(int)]
	}).(ReplicationGroupOutput)
}

type ReplicationGroupMapOutput struct{ *pulumi.OutputState }

func (ReplicationGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicationGroup)(nil)).Elem()
}

func (o ReplicationGroupMapOutput) ToReplicationGroupMapOutput() ReplicationGroupMapOutput {
	return o
}

func (o ReplicationGroupMapOutput) ToReplicationGroupMapOutputWithContext(ctx context.Context) ReplicationGroupMapOutput {
	return o
}

func (o ReplicationGroupMapOutput) MapIndex(k pulumi.StringInput) ReplicationGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReplicationGroup {
		return vs[0].(map[string]*ReplicationGroup)[vs[1].(string)]
	}).(ReplicationGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupInput)(nil)).Elem(), &ReplicationGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupArrayInput)(nil)).Elem(), ReplicationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupMapInput)(nil)).Elem(), ReplicationGroupMap{})
	pulumi.RegisterOutputType(ReplicationGroupOutput{})
	pulumi.RegisterOutputType(ReplicationGroupArrayOutput{})
	pulumi.RegisterOutputType(ReplicationGroupMapOutput{})
}
