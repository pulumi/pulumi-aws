// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GlobalReplicationGroup struct {
	pulumi.CustomResourceState

	Arn                               pulumi.StringOutput                              `pulumi:"arn"`
	AtRestEncryptionEnabled           pulumi.BoolOutput                                `pulumi:"atRestEncryptionEnabled"`
	AuthTokenEnabled                  pulumi.BoolOutput                                `pulumi:"authTokenEnabled"`
	AutomaticFailoverEnabled          pulumi.BoolOutput                                `pulumi:"automaticFailoverEnabled"`
	CacheNodeType                     pulumi.StringOutput                              `pulumi:"cacheNodeType"`
	ClusterEnabled                    pulumi.BoolOutput                                `pulumi:"clusterEnabled"`
	Engine                            pulumi.StringOutput                              `pulumi:"engine"`
	EngineVersion                     pulumi.StringOutput                              `pulumi:"engineVersion"`
	EngineVersionActual               pulumi.StringOutput                              `pulumi:"engineVersionActual"`
	GlobalNodeGroups                  GlobalReplicationGroupGlobalNodeGroupArrayOutput `pulumi:"globalNodeGroups"`
	GlobalReplicationGroupDescription pulumi.StringPtrOutput                           `pulumi:"globalReplicationGroupDescription"`
	GlobalReplicationGroupId          pulumi.StringOutput                              `pulumi:"globalReplicationGroupId"`
	GlobalReplicationGroupIdSuffix    pulumi.StringOutput                              `pulumi:"globalReplicationGroupIdSuffix"`
	NumNodeGroups                     pulumi.IntOutput                                 `pulumi:"numNodeGroups"`
	ParameterGroupName                pulumi.StringPtrOutput                           `pulumi:"parameterGroupName"`
	PrimaryReplicationGroupId         pulumi.StringOutput                              `pulumi:"primaryReplicationGroupId"`
	TransitEncryptionEnabled          pulumi.BoolOutput                                `pulumi:"transitEncryptionEnabled"`
}

// NewGlobalReplicationGroup registers a new resource with the given unique name, arguments, and options.
func NewGlobalReplicationGroup(ctx *pulumi.Context,
	name string, args *GlobalReplicationGroupArgs, opts ...pulumi.ResourceOption) (*GlobalReplicationGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalReplicationGroupIdSuffix == nil {
		return nil, errors.New("invalid value for required argument 'GlobalReplicationGroupIdSuffix'")
	}
	if args.PrimaryReplicationGroupId == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryReplicationGroupId'")
	}
	var resource GlobalReplicationGroup
	err := ctx.RegisterResource("aws:elasticache/globalReplicationGroup:GlobalReplicationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalReplicationGroup gets an existing GlobalReplicationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalReplicationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalReplicationGroupState, opts ...pulumi.ResourceOption) (*GlobalReplicationGroup, error) {
	var resource GlobalReplicationGroup
	err := ctx.ReadResource("aws:elasticache/globalReplicationGroup:GlobalReplicationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalReplicationGroup resources.
type globalReplicationGroupState struct {
	Arn                               *string                                 `pulumi:"arn"`
	AtRestEncryptionEnabled           *bool                                   `pulumi:"atRestEncryptionEnabled"`
	AuthTokenEnabled                  *bool                                   `pulumi:"authTokenEnabled"`
	AutomaticFailoverEnabled          *bool                                   `pulumi:"automaticFailoverEnabled"`
	CacheNodeType                     *string                                 `pulumi:"cacheNodeType"`
	ClusterEnabled                    *bool                                   `pulumi:"clusterEnabled"`
	Engine                            *string                                 `pulumi:"engine"`
	EngineVersion                     *string                                 `pulumi:"engineVersion"`
	EngineVersionActual               *string                                 `pulumi:"engineVersionActual"`
	GlobalNodeGroups                  []GlobalReplicationGroupGlobalNodeGroup `pulumi:"globalNodeGroups"`
	GlobalReplicationGroupDescription *string                                 `pulumi:"globalReplicationGroupDescription"`
	GlobalReplicationGroupId          *string                                 `pulumi:"globalReplicationGroupId"`
	GlobalReplicationGroupIdSuffix    *string                                 `pulumi:"globalReplicationGroupIdSuffix"`
	NumNodeGroups                     *int                                    `pulumi:"numNodeGroups"`
	ParameterGroupName                *string                                 `pulumi:"parameterGroupName"`
	PrimaryReplicationGroupId         *string                                 `pulumi:"primaryReplicationGroupId"`
	TransitEncryptionEnabled          *bool                                   `pulumi:"transitEncryptionEnabled"`
}

type GlobalReplicationGroupState struct {
	Arn                               pulumi.StringPtrInput
	AtRestEncryptionEnabled           pulumi.BoolPtrInput
	AuthTokenEnabled                  pulumi.BoolPtrInput
	AutomaticFailoverEnabled          pulumi.BoolPtrInput
	CacheNodeType                     pulumi.StringPtrInput
	ClusterEnabled                    pulumi.BoolPtrInput
	Engine                            pulumi.StringPtrInput
	EngineVersion                     pulumi.StringPtrInput
	EngineVersionActual               pulumi.StringPtrInput
	GlobalNodeGroups                  GlobalReplicationGroupGlobalNodeGroupArrayInput
	GlobalReplicationGroupDescription pulumi.StringPtrInput
	GlobalReplicationGroupId          pulumi.StringPtrInput
	GlobalReplicationGroupIdSuffix    pulumi.StringPtrInput
	NumNodeGroups                     pulumi.IntPtrInput
	ParameterGroupName                pulumi.StringPtrInput
	PrimaryReplicationGroupId         pulumi.StringPtrInput
	TransitEncryptionEnabled          pulumi.BoolPtrInput
}

func (GlobalReplicationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalReplicationGroupState)(nil)).Elem()
}

type globalReplicationGroupArgs struct {
	AutomaticFailoverEnabled          *bool   `pulumi:"automaticFailoverEnabled"`
	CacheNodeType                     *string `pulumi:"cacheNodeType"`
	EngineVersion                     *string `pulumi:"engineVersion"`
	GlobalReplicationGroupDescription *string `pulumi:"globalReplicationGroupDescription"`
	GlobalReplicationGroupIdSuffix    string  `pulumi:"globalReplicationGroupIdSuffix"`
	NumNodeGroups                     *int    `pulumi:"numNodeGroups"`
	ParameterGroupName                *string `pulumi:"parameterGroupName"`
	PrimaryReplicationGroupId         string  `pulumi:"primaryReplicationGroupId"`
}

// The set of arguments for constructing a GlobalReplicationGroup resource.
type GlobalReplicationGroupArgs struct {
	AutomaticFailoverEnabled          pulumi.BoolPtrInput
	CacheNodeType                     pulumi.StringPtrInput
	EngineVersion                     pulumi.StringPtrInput
	GlobalReplicationGroupDescription pulumi.StringPtrInput
	GlobalReplicationGroupIdSuffix    pulumi.StringInput
	NumNodeGroups                     pulumi.IntPtrInput
	ParameterGroupName                pulumi.StringPtrInput
	PrimaryReplicationGroupId         pulumi.StringInput
}

func (GlobalReplicationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalReplicationGroupArgs)(nil)).Elem()
}

type GlobalReplicationGroupInput interface {
	pulumi.Input

	ToGlobalReplicationGroupOutput() GlobalReplicationGroupOutput
	ToGlobalReplicationGroupOutputWithContext(ctx context.Context) GlobalReplicationGroupOutput
}

func (*GlobalReplicationGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalReplicationGroup)(nil)).Elem()
}

func (i *GlobalReplicationGroup) ToGlobalReplicationGroupOutput() GlobalReplicationGroupOutput {
	return i.ToGlobalReplicationGroupOutputWithContext(context.Background())
}

func (i *GlobalReplicationGroup) ToGlobalReplicationGroupOutputWithContext(ctx context.Context) GlobalReplicationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupOutput)
}

// GlobalReplicationGroupArrayInput is an input type that accepts GlobalReplicationGroupArray and GlobalReplicationGroupArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupArrayInput` via:
//
//	GlobalReplicationGroupArray{ GlobalReplicationGroupArgs{...} }
type GlobalReplicationGroupArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupArrayOutput() GlobalReplicationGroupArrayOutput
	ToGlobalReplicationGroupArrayOutputWithContext(context.Context) GlobalReplicationGroupArrayOutput
}

type GlobalReplicationGroupArray []GlobalReplicationGroupInput

func (GlobalReplicationGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalReplicationGroup)(nil)).Elem()
}

func (i GlobalReplicationGroupArray) ToGlobalReplicationGroupArrayOutput() GlobalReplicationGroupArrayOutput {
	return i.ToGlobalReplicationGroupArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupArray) ToGlobalReplicationGroupArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupArrayOutput)
}

// GlobalReplicationGroupMapInput is an input type that accepts GlobalReplicationGroupMap and GlobalReplicationGroupMapOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupMapInput` via:
//
//	GlobalReplicationGroupMap{ "key": GlobalReplicationGroupArgs{...} }
type GlobalReplicationGroupMapInput interface {
	pulumi.Input

	ToGlobalReplicationGroupMapOutput() GlobalReplicationGroupMapOutput
	ToGlobalReplicationGroupMapOutputWithContext(context.Context) GlobalReplicationGroupMapOutput
}

type GlobalReplicationGroupMap map[string]GlobalReplicationGroupInput

func (GlobalReplicationGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalReplicationGroup)(nil)).Elem()
}

func (i GlobalReplicationGroupMap) ToGlobalReplicationGroupMapOutput() GlobalReplicationGroupMapOutput {
	return i.ToGlobalReplicationGroupMapOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupMap) ToGlobalReplicationGroupMapOutputWithContext(ctx context.Context) GlobalReplicationGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupMapOutput)
}

type GlobalReplicationGroupOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalReplicationGroup)(nil)).Elem()
}

func (o GlobalReplicationGroupOutput) ToGlobalReplicationGroupOutput() GlobalReplicationGroupOutput {
	return o
}

func (o GlobalReplicationGroupOutput) ToGlobalReplicationGroupOutputWithContext(ctx context.Context) GlobalReplicationGroupOutput {
	return o
}

func (o GlobalReplicationGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) AtRestEncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.BoolOutput { return v.AtRestEncryptionEnabled }).(pulumi.BoolOutput)
}

func (o GlobalReplicationGroupOutput) AuthTokenEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.BoolOutput { return v.AuthTokenEnabled }).(pulumi.BoolOutput)
}

func (o GlobalReplicationGroupOutput) AutomaticFailoverEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.BoolOutput { return v.AutomaticFailoverEnabled }).(pulumi.BoolOutput)
}

func (o GlobalReplicationGroupOutput) CacheNodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.CacheNodeType }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) ClusterEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.BoolOutput { return v.ClusterEnabled }).(pulumi.BoolOutput)
}

func (o GlobalReplicationGroupOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) EngineVersionActual() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.EngineVersionActual }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) GlobalNodeGroups() GlobalReplicationGroupGlobalNodeGroupArrayOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) GlobalReplicationGroupGlobalNodeGroupArrayOutput {
		return v.GlobalNodeGroups
	}).(GlobalReplicationGroupGlobalNodeGroupArrayOutput)
}

func (o GlobalReplicationGroupOutput) GlobalReplicationGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringPtrOutput { return v.GlobalReplicationGroupDescription }).(pulumi.StringPtrOutput)
}

func (o GlobalReplicationGroupOutput) GlobalReplicationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.GlobalReplicationGroupId }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) GlobalReplicationGroupIdSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.GlobalReplicationGroupIdSuffix }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) NumNodeGroups() pulumi.IntOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.IntOutput { return v.NumNodeGroups }).(pulumi.IntOutput)
}

func (o GlobalReplicationGroupOutput) ParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringPtrOutput { return v.ParameterGroupName }).(pulumi.StringPtrOutput)
}

func (o GlobalReplicationGroupOutput) PrimaryReplicationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.StringOutput { return v.PrimaryReplicationGroupId }).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupOutput) TransitEncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GlobalReplicationGroup) pulumi.BoolOutput { return v.TransitEncryptionEnabled }).(pulumi.BoolOutput)
}

type GlobalReplicationGroupArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalReplicationGroup)(nil)).Elem()
}

func (o GlobalReplicationGroupArrayOutput) ToGlobalReplicationGroupArrayOutput() GlobalReplicationGroupArrayOutput {
	return o
}

func (o GlobalReplicationGroupArrayOutput) ToGlobalReplicationGroupArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupArrayOutput {
	return o
}

func (o GlobalReplicationGroupArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GlobalReplicationGroup {
		return vs[0].([]*GlobalReplicationGroup)[vs[1].(int)]
	}).(GlobalReplicationGroupOutput)
}

type GlobalReplicationGroupMapOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalReplicationGroup)(nil)).Elem()
}

func (o GlobalReplicationGroupMapOutput) ToGlobalReplicationGroupMapOutput() GlobalReplicationGroupMapOutput {
	return o
}

func (o GlobalReplicationGroupMapOutput) ToGlobalReplicationGroupMapOutputWithContext(ctx context.Context) GlobalReplicationGroupMapOutput {
	return o
}

func (o GlobalReplicationGroupMapOutput) MapIndex(k pulumi.StringInput) GlobalReplicationGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GlobalReplicationGroup {
		return vs[0].(map[string]*GlobalReplicationGroup)[vs[1].(string)]
	}).(GlobalReplicationGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupInput)(nil)).Elem(), &GlobalReplicationGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupArrayInput)(nil)).Elem(), GlobalReplicationGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupMapInput)(nil)).Elem(), GlobalReplicationGroupMap{})
	pulumi.RegisterOutputType(GlobalReplicationGroupOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupArrayOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupMapOutput{})
}
