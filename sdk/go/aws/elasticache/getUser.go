// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about an Elasticache User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/elasticache"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := elasticache.LookupUser(ctx, &elasticache.LookupUserArgs{
// 			UserId: "example",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	var rv LookupUserResult
	err := ctx.Invoke("aws:elasticache/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	// A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
	AccessString       *string  `pulumi:"accessString"`
	Engine             *string  `pulumi:"engine"`
	NoPasswordRequired *bool    `pulumi:"noPasswordRequired"`
	Passwords          []string `pulumi:"passwords"`
	// The identifier for the user.
	UserId string `pulumi:"userId"`
	// The user name of the user.
	UserName *string `pulumi:"userName"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	// A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
	AccessString *string `pulumi:"accessString"`
	Engine       *string `pulumi:"engine"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string   `pulumi:"id"`
	NoPasswordRequired *bool    `pulumi:"noPasswordRequired"`
	Passwords          []string `pulumi:"passwords"`
	// The identifier for the user.
	UserId string `pulumi:"userId"`
	// The user name of the user.
	UserName *string `pulumi:"userName"`
}
