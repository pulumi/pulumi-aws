// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ivschat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type LoggingConfigurationDestinationConfiguration struct {
	// An Amazon CloudWatch Logs destination configuration where chat activity will be logged.
	CloudwatchLogs *LoggingConfigurationDestinationConfigurationCloudwatchLogs `pulumi:"cloudwatchLogs"`
	// An Amazon Kinesis Data Firehose destination configuration where chat activity will be logged.
	Firehose *LoggingConfigurationDestinationConfigurationFirehose `pulumi:"firehose"`
	// An Amazon S3 destination configuration where chat activity will be logged.
	S3 *LoggingConfigurationDestinationConfigurationS3 `pulumi:"s3"`
}

// LoggingConfigurationDestinationConfigurationInput is an input type that accepts LoggingConfigurationDestinationConfigurationArgs and LoggingConfigurationDestinationConfigurationOutput values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationInput` via:
//
//	LoggingConfigurationDestinationConfigurationArgs{...}
type LoggingConfigurationDestinationConfigurationInput interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationOutput() LoggingConfigurationDestinationConfigurationOutput
	ToLoggingConfigurationDestinationConfigurationOutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationOutput
}

type LoggingConfigurationDestinationConfigurationArgs struct {
	// An Amazon CloudWatch Logs destination configuration where chat activity will be logged.
	CloudwatchLogs LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrInput `pulumi:"cloudwatchLogs"`
	// An Amazon Kinesis Data Firehose destination configuration where chat activity will be logged.
	Firehose LoggingConfigurationDestinationConfigurationFirehosePtrInput `pulumi:"firehose"`
	// An Amazon S3 destination configuration where chat activity will be logged.
	S3 LoggingConfigurationDestinationConfigurationS3PtrInput `pulumi:"s3"`
}

func (LoggingConfigurationDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfiguration)(nil)).Elem()
}

func (i LoggingConfigurationDestinationConfigurationArgs) ToLoggingConfigurationDestinationConfigurationOutput() LoggingConfigurationDestinationConfigurationOutput {
	return i.ToLoggingConfigurationDestinationConfigurationOutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationArgs) ToLoggingConfigurationDestinationConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationOutput)
}

func (i LoggingConfigurationDestinationConfigurationArgs) ToLoggingConfigurationDestinationConfigurationPtrOutput() LoggingConfigurationDestinationConfigurationPtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationArgs) ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationOutput).ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(ctx)
}

// LoggingConfigurationDestinationConfigurationPtrInput is an input type that accepts LoggingConfigurationDestinationConfigurationArgs, LoggingConfigurationDestinationConfigurationPtr and LoggingConfigurationDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationPtrInput` via:
//
//	        LoggingConfigurationDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type LoggingConfigurationDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationPtrOutput() LoggingConfigurationDestinationConfigurationPtrOutput
	ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationPtrOutput
}

type loggingConfigurationDestinationConfigurationPtrType LoggingConfigurationDestinationConfigurationArgs

func LoggingConfigurationDestinationConfigurationPtr(v *LoggingConfigurationDestinationConfigurationArgs) LoggingConfigurationDestinationConfigurationPtrInput {
	return (*loggingConfigurationDestinationConfigurationPtrType)(v)
}

func (*loggingConfigurationDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfiguration)(nil)).Elem()
}

func (i *loggingConfigurationDestinationConfigurationPtrType) ToLoggingConfigurationDestinationConfigurationPtrOutput() LoggingConfigurationDestinationConfigurationPtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *loggingConfigurationDestinationConfigurationPtrType) ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationPtrOutput)
}

type LoggingConfigurationDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfiguration)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationOutput) ToLoggingConfigurationDestinationConfigurationOutput() LoggingConfigurationDestinationConfigurationOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationOutput) ToLoggingConfigurationDestinationConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationOutput) ToLoggingConfigurationDestinationConfigurationPtrOutput() LoggingConfigurationDestinationConfigurationPtrOutput {
	return o.ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationDestinationConfigurationOutput) ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationDestinationConfiguration) *LoggingConfigurationDestinationConfiguration {
		return &v
	}).(LoggingConfigurationDestinationConfigurationPtrOutput)
}

// An Amazon CloudWatch Logs destination configuration where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationOutput) CloudwatchLogs() LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v LoggingConfigurationDestinationConfiguration) *LoggingConfigurationDestinationConfigurationCloudwatchLogs {
		return v.CloudwatchLogs
	}).(LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput)
}

// An Amazon Kinesis Data Firehose destination configuration where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationOutput) Firehose() LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return o.ApplyT(func(v LoggingConfigurationDestinationConfiguration) *LoggingConfigurationDestinationConfigurationFirehose {
		return v.Firehose
	}).(LoggingConfigurationDestinationConfigurationFirehosePtrOutput)
}

// An Amazon S3 destination configuration where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationOutput) S3() LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return o.ApplyT(func(v LoggingConfigurationDestinationConfiguration) *LoggingConfigurationDestinationConfigurationS3 {
		return v.S3
	}).(LoggingConfigurationDestinationConfigurationS3PtrOutput)
}

type LoggingConfigurationDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfiguration)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationPtrOutput) ToLoggingConfigurationDestinationConfigurationPtrOutput() LoggingConfigurationDestinationConfigurationPtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationPtrOutput) ToLoggingConfigurationDestinationConfigurationPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationPtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationPtrOutput) Elem() LoggingConfigurationDestinationConfigurationOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfiguration) LoggingConfigurationDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationDestinationConfiguration
		return ret
	}).(LoggingConfigurationDestinationConfigurationOutput)
}

// An Amazon CloudWatch Logs destination configuration where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationPtrOutput) CloudwatchLogs() LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfiguration) *LoggingConfigurationDestinationConfigurationCloudwatchLogs {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogs
	}).(LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput)
}

// An Amazon Kinesis Data Firehose destination configuration where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationPtrOutput) Firehose() LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfiguration) *LoggingConfigurationDestinationConfigurationFirehose {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(LoggingConfigurationDestinationConfigurationFirehosePtrOutput)
}

// An Amazon S3 destination configuration where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationPtrOutput) S3() LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfiguration) *LoggingConfigurationDestinationConfigurationS3 {
		if v == nil {
			return nil
		}
		return v.S3
	}).(LoggingConfigurationDestinationConfigurationS3PtrOutput)
}

type LoggingConfigurationDestinationConfigurationCloudwatchLogs struct {
	// Name of the Amazon Cloudwatch Logs destination where chat activity will be logged.
	LogGroupName string `pulumi:"logGroupName"`
}

// LoggingConfigurationDestinationConfigurationCloudwatchLogsInput is an input type that accepts LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs and LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationCloudwatchLogsInput` via:
//
//	LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs{...}
type LoggingConfigurationDestinationConfigurationCloudwatchLogsInput interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationCloudwatchLogsOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput
	ToLoggingConfigurationDestinationConfigurationCloudwatchLogsOutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput
}

type LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs struct {
	// Name of the Amazon Cloudwatch Logs destination where chat activity will be logged.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
}

func (LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfigurationCloudwatchLogs)(nil)).Elem()
}

func (i LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput {
	return i.ToLoggingConfigurationDestinationConfigurationCloudwatchLogsOutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput)
}

func (i LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput).ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(ctx)
}

// LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrInput is an input type that accepts LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs, LoggingConfigurationDestinationConfigurationCloudwatchLogsPtr and LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrInput` via:
//
//	        LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs{...}
//
//	or:
//
//	        nil
type LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput
	ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput
}

type loggingConfigurationDestinationConfigurationCloudwatchLogsPtrType LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs

func LoggingConfigurationDestinationConfigurationCloudwatchLogsPtr(v *LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs) LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrInput {
	return (*loggingConfigurationDestinationConfigurationCloudwatchLogsPtrType)(v)
}

func (*loggingConfigurationDestinationConfigurationCloudwatchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfigurationCloudwatchLogs)(nil)).Elem()
}

func (i *loggingConfigurationDestinationConfigurationCloudwatchLogsPtrType) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i *loggingConfigurationDestinationConfigurationCloudwatchLogsPtrType) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput)
}

type LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfigurationCloudwatchLogs)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return o.ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationDestinationConfigurationCloudwatchLogs) *LoggingConfigurationDestinationConfigurationCloudwatchLogs {
		return &v
	}).(LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput)
}

// Name of the Amazon Cloudwatch Logs destination where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LoggingConfigurationDestinationConfigurationCloudwatchLogs) string { return v.LogGroupName }).(pulumi.StringOutput)
}

type LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfigurationCloudwatchLogs)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput() LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput) ToLoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput) Elem() LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfigurationCloudwatchLogs) LoggingConfigurationDestinationConfigurationCloudwatchLogs {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationDestinationConfigurationCloudwatchLogs
		return ret
	}).(LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput)
}

// Name of the Amazon Cloudwatch Logs destination where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfigurationCloudwatchLogs) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationDestinationConfigurationFirehose struct {
	// Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
	DeliveryStreamName string `pulumi:"deliveryStreamName"`
}

// LoggingConfigurationDestinationConfigurationFirehoseInput is an input type that accepts LoggingConfigurationDestinationConfigurationFirehoseArgs and LoggingConfigurationDestinationConfigurationFirehoseOutput values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationFirehoseInput` via:
//
//	LoggingConfigurationDestinationConfigurationFirehoseArgs{...}
type LoggingConfigurationDestinationConfigurationFirehoseInput interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationFirehoseOutput() LoggingConfigurationDestinationConfigurationFirehoseOutput
	ToLoggingConfigurationDestinationConfigurationFirehoseOutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationFirehoseOutput
}

type LoggingConfigurationDestinationConfigurationFirehoseArgs struct {
	// Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
	DeliveryStreamName pulumi.StringInput `pulumi:"deliveryStreamName"`
}

func (LoggingConfigurationDestinationConfigurationFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfigurationFirehose)(nil)).Elem()
}

func (i LoggingConfigurationDestinationConfigurationFirehoseArgs) ToLoggingConfigurationDestinationConfigurationFirehoseOutput() LoggingConfigurationDestinationConfigurationFirehoseOutput {
	return i.ToLoggingConfigurationDestinationConfigurationFirehoseOutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationFirehoseArgs) ToLoggingConfigurationDestinationConfigurationFirehoseOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationFirehoseOutput)
}

func (i LoggingConfigurationDestinationConfigurationFirehoseArgs) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutput() LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationFirehoseArgs) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationFirehoseOutput).ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(ctx)
}

// LoggingConfigurationDestinationConfigurationFirehosePtrInput is an input type that accepts LoggingConfigurationDestinationConfigurationFirehoseArgs, LoggingConfigurationDestinationConfigurationFirehosePtr and LoggingConfigurationDestinationConfigurationFirehosePtrOutput values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationFirehosePtrInput` via:
//
//	        LoggingConfigurationDestinationConfigurationFirehoseArgs{...}
//
//	or:
//
//	        nil
type LoggingConfigurationDestinationConfigurationFirehosePtrInput interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationFirehosePtrOutput() LoggingConfigurationDestinationConfigurationFirehosePtrOutput
	ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationFirehosePtrOutput
}

type loggingConfigurationDestinationConfigurationFirehosePtrType LoggingConfigurationDestinationConfigurationFirehoseArgs

func LoggingConfigurationDestinationConfigurationFirehosePtr(v *LoggingConfigurationDestinationConfigurationFirehoseArgs) LoggingConfigurationDestinationConfigurationFirehosePtrInput {
	return (*loggingConfigurationDestinationConfigurationFirehosePtrType)(v)
}

func (*loggingConfigurationDestinationConfigurationFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfigurationFirehose)(nil)).Elem()
}

func (i *loggingConfigurationDestinationConfigurationFirehosePtrType) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutput() LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(context.Background())
}

func (i *loggingConfigurationDestinationConfigurationFirehosePtrType) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationFirehosePtrOutput)
}

type LoggingConfigurationDestinationConfigurationFirehoseOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfigurationFirehose)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationFirehoseOutput) ToLoggingConfigurationDestinationConfigurationFirehoseOutput() LoggingConfigurationDestinationConfigurationFirehoseOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationFirehoseOutput) ToLoggingConfigurationDestinationConfigurationFirehoseOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationFirehoseOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationFirehoseOutput) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutput() LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return o.ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationDestinationConfigurationFirehoseOutput) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationDestinationConfigurationFirehose) *LoggingConfigurationDestinationConfigurationFirehose {
		return &v
	}).(LoggingConfigurationDestinationConfigurationFirehosePtrOutput)
}

// Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationFirehoseOutput) DeliveryStreamName() pulumi.StringOutput {
	return o.ApplyT(func(v LoggingConfigurationDestinationConfigurationFirehose) string { return v.DeliveryStreamName }).(pulumi.StringOutput)
}

type LoggingConfigurationDestinationConfigurationFirehosePtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfigurationFirehose)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationFirehosePtrOutput) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutput() LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationFirehosePtrOutput) ToLoggingConfigurationDestinationConfigurationFirehosePtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationFirehosePtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationFirehosePtrOutput) Elem() LoggingConfigurationDestinationConfigurationFirehoseOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfigurationFirehose) LoggingConfigurationDestinationConfigurationFirehose {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationDestinationConfigurationFirehose
		return ret
	}).(LoggingConfigurationDestinationConfigurationFirehoseOutput)
}

// Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
func (o LoggingConfigurationDestinationConfigurationFirehosePtrOutput) DeliveryStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfigurationFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStreamName
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationDestinationConfigurationS3 struct {
	// Name of the Amazon S3 bucket where chat activity will be logged.
	//
	// The following arguments are optional:
	BucketName string `pulumi:"bucketName"`
}

// LoggingConfigurationDestinationConfigurationS3Input is an input type that accepts LoggingConfigurationDestinationConfigurationS3Args and LoggingConfigurationDestinationConfigurationS3Output values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationS3Input` via:
//
//	LoggingConfigurationDestinationConfigurationS3Args{...}
type LoggingConfigurationDestinationConfigurationS3Input interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationS3Output() LoggingConfigurationDestinationConfigurationS3Output
	ToLoggingConfigurationDestinationConfigurationS3OutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationS3Output
}

type LoggingConfigurationDestinationConfigurationS3Args struct {
	// Name of the Amazon S3 bucket where chat activity will be logged.
	//
	// The following arguments are optional:
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (LoggingConfigurationDestinationConfigurationS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfigurationS3)(nil)).Elem()
}

func (i LoggingConfigurationDestinationConfigurationS3Args) ToLoggingConfigurationDestinationConfigurationS3Output() LoggingConfigurationDestinationConfigurationS3Output {
	return i.ToLoggingConfigurationDestinationConfigurationS3OutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationS3Args) ToLoggingConfigurationDestinationConfigurationS3OutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationS3Output)
}

func (i LoggingConfigurationDestinationConfigurationS3Args) ToLoggingConfigurationDestinationConfigurationS3PtrOutput() LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(context.Background())
}

func (i LoggingConfigurationDestinationConfigurationS3Args) ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationS3Output).ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(ctx)
}

// LoggingConfigurationDestinationConfigurationS3PtrInput is an input type that accepts LoggingConfigurationDestinationConfigurationS3Args, LoggingConfigurationDestinationConfigurationS3Ptr and LoggingConfigurationDestinationConfigurationS3PtrOutput values.
// You can construct a concrete instance of `LoggingConfigurationDestinationConfigurationS3PtrInput` via:
//
//	        LoggingConfigurationDestinationConfigurationS3Args{...}
//
//	or:
//
//	        nil
type LoggingConfigurationDestinationConfigurationS3PtrInput interface {
	pulumi.Input

	ToLoggingConfigurationDestinationConfigurationS3PtrOutput() LoggingConfigurationDestinationConfigurationS3PtrOutput
	ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(context.Context) LoggingConfigurationDestinationConfigurationS3PtrOutput
}

type loggingConfigurationDestinationConfigurationS3PtrType LoggingConfigurationDestinationConfigurationS3Args

func LoggingConfigurationDestinationConfigurationS3Ptr(v *LoggingConfigurationDestinationConfigurationS3Args) LoggingConfigurationDestinationConfigurationS3PtrInput {
	return (*loggingConfigurationDestinationConfigurationS3PtrType)(v)
}

func (*loggingConfigurationDestinationConfigurationS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfigurationS3)(nil)).Elem()
}

func (i *loggingConfigurationDestinationConfigurationS3PtrType) ToLoggingConfigurationDestinationConfigurationS3PtrOutput() LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return i.ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(context.Background())
}

func (i *loggingConfigurationDestinationConfigurationS3PtrType) ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationDestinationConfigurationS3PtrOutput)
}

type LoggingConfigurationDestinationConfigurationS3Output struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationDestinationConfigurationS3)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationS3Output) ToLoggingConfigurationDestinationConfigurationS3Output() LoggingConfigurationDestinationConfigurationS3Output {
	return o
}

func (o LoggingConfigurationDestinationConfigurationS3Output) ToLoggingConfigurationDestinationConfigurationS3OutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationS3Output {
	return o
}

func (o LoggingConfigurationDestinationConfigurationS3Output) ToLoggingConfigurationDestinationConfigurationS3PtrOutput() LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return o.ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationDestinationConfigurationS3Output) ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationDestinationConfigurationS3) *LoggingConfigurationDestinationConfigurationS3 {
		return &v
	}).(LoggingConfigurationDestinationConfigurationS3PtrOutput)
}

// Name of the Amazon S3 bucket where chat activity will be logged.
//
// The following arguments are optional:
func (o LoggingConfigurationDestinationConfigurationS3Output) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v LoggingConfigurationDestinationConfigurationS3) string { return v.BucketName }).(pulumi.StringOutput)
}

type LoggingConfigurationDestinationConfigurationS3PtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationDestinationConfigurationS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationDestinationConfigurationS3)(nil)).Elem()
}

func (o LoggingConfigurationDestinationConfigurationS3PtrOutput) ToLoggingConfigurationDestinationConfigurationS3PtrOutput() LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationS3PtrOutput) ToLoggingConfigurationDestinationConfigurationS3PtrOutputWithContext(ctx context.Context) LoggingConfigurationDestinationConfigurationS3PtrOutput {
	return o
}

func (o LoggingConfigurationDestinationConfigurationS3PtrOutput) Elem() LoggingConfigurationDestinationConfigurationS3Output {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfigurationS3) LoggingConfigurationDestinationConfigurationS3 {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationDestinationConfigurationS3
		return ret
	}).(LoggingConfigurationDestinationConfigurationS3Output)
}

// Name of the Amazon S3 bucket where chat activity will be logged.
//
// The following arguments are optional:
func (o LoggingConfigurationDestinationConfigurationS3PtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingConfigurationDestinationConfigurationS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

type RoomMessageReviewHandler struct {
	// The fallback behavior (whether the message
	// is allowed or denied) if the handler does not return a valid response,
	// encounters an error, or times out. Valid values: `ALLOW`, `DENY`.
	FallbackResult *string `pulumi:"fallbackResult"`
	// ARN of the lambda message review handler function.
	Uri *string `pulumi:"uri"`
}

// RoomMessageReviewHandlerInput is an input type that accepts RoomMessageReviewHandlerArgs and RoomMessageReviewHandlerOutput values.
// You can construct a concrete instance of `RoomMessageReviewHandlerInput` via:
//
//	RoomMessageReviewHandlerArgs{...}
type RoomMessageReviewHandlerInput interface {
	pulumi.Input

	ToRoomMessageReviewHandlerOutput() RoomMessageReviewHandlerOutput
	ToRoomMessageReviewHandlerOutputWithContext(context.Context) RoomMessageReviewHandlerOutput
}

type RoomMessageReviewHandlerArgs struct {
	// The fallback behavior (whether the message
	// is allowed or denied) if the handler does not return a valid response,
	// encounters an error, or times out. Valid values: `ALLOW`, `DENY`.
	FallbackResult pulumi.StringPtrInput `pulumi:"fallbackResult"`
	// ARN of the lambda message review handler function.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (RoomMessageReviewHandlerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoomMessageReviewHandler)(nil)).Elem()
}

func (i RoomMessageReviewHandlerArgs) ToRoomMessageReviewHandlerOutput() RoomMessageReviewHandlerOutput {
	return i.ToRoomMessageReviewHandlerOutputWithContext(context.Background())
}

func (i RoomMessageReviewHandlerArgs) ToRoomMessageReviewHandlerOutputWithContext(ctx context.Context) RoomMessageReviewHandlerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoomMessageReviewHandlerOutput)
}

func (i RoomMessageReviewHandlerArgs) ToRoomMessageReviewHandlerPtrOutput() RoomMessageReviewHandlerPtrOutput {
	return i.ToRoomMessageReviewHandlerPtrOutputWithContext(context.Background())
}

func (i RoomMessageReviewHandlerArgs) ToRoomMessageReviewHandlerPtrOutputWithContext(ctx context.Context) RoomMessageReviewHandlerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoomMessageReviewHandlerOutput).ToRoomMessageReviewHandlerPtrOutputWithContext(ctx)
}

// RoomMessageReviewHandlerPtrInput is an input type that accepts RoomMessageReviewHandlerArgs, RoomMessageReviewHandlerPtr and RoomMessageReviewHandlerPtrOutput values.
// You can construct a concrete instance of `RoomMessageReviewHandlerPtrInput` via:
//
//	        RoomMessageReviewHandlerArgs{...}
//
//	or:
//
//	        nil
type RoomMessageReviewHandlerPtrInput interface {
	pulumi.Input

	ToRoomMessageReviewHandlerPtrOutput() RoomMessageReviewHandlerPtrOutput
	ToRoomMessageReviewHandlerPtrOutputWithContext(context.Context) RoomMessageReviewHandlerPtrOutput
}

type roomMessageReviewHandlerPtrType RoomMessageReviewHandlerArgs

func RoomMessageReviewHandlerPtr(v *RoomMessageReviewHandlerArgs) RoomMessageReviewHandlerPtrInput {
	return (*roomMessageReviewHandlerPtrType)(v)
}

func (*roomMessageReviewHandlerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoomMessageReviewHandler)(nil)).Elem()
}

func (i *roomMessageReviewHandlerPtrType) ToRoomMessageReviewHandlerPtrOutput() RoomMessageReviewHandlerPtrOutput {
	return i.ToRoomMessageReviewHandlerPtrOutputWithContext(context.Background())
}

func (i *roomMessageReviewHandlerPtrType) ToRoomMessageReviewHandlerPtrOutputWithContext(ctx context.Context) RoomMessageReviewHandlerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoomMessageReviewHandlerPtrOutput)
}

type RoomMessageReviewHandlerOutput struct{ *pulumi.OutputState }

func (RoomMessageReviewHandlerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoomMessageReviewHandler)(nil)).Elem()
}

func (o RoomMessageReviewHandlerOutput) ToRoomMessageReviewHandlerOutput() RoomMessageReviewHandlerOutput {
	return o
}

func (o RoomMessageReviewHandlerOutput) ToRoomMessageReviewHandlerOutputWithContext(ctx context.Context) RoomMessageReviewHandlerOutput {
	return o
}

func (o RoomMessageReviewHandlerOutput) ToRoomMessageReviewHandlerPtrOutput() RoomMessageReviewHandlerPtrOutput {
	return o.ToRoomMessageReviewHandlerPtrOutputWithContext(context.Background())
}

func (o RoomMessageReviewHandlerOutput) ToRoomMessageReviewHandlerPtrOutputWithContext(ctx context.Context) RoomMessageReviewHandlerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoomMessageReviewHandler) *RoomMessageReviewHandler {
		return &v
	}).(RoomMessageReviewHandlerPtrOutput)
}

// The fallback behavior (whether the message
// is allowed or denied) if the handler does not return a valid response,
// encounters an error, or times out. Valid values: `ALLOW`, `DENY`.
func (o RoomMessageReviewHandlerOutput) FallbackResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoomMessageReviewHandler) *string { return v.FallbackResult }).(pulumi.StringPtrOutput)
}

// ARN of the lambda message review handler function.
func (o RoomMessageReviewHandlerOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoomMessageReviewHandler) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type RoomMessageReviewHandlerPtrOutput struct{ *pulumi.OutputState }

func (RoomMessageReviewHandlerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoomMessageReviewHandler)(nil)).Elem()
}

func (o RoomMessageReviewHandlerPtrOutput) ToRoomMessageReviewHandlerPtrOutput() RoomMessageReviewHandlerPtrOutput {
	return o
}

func (o RoomMessageReviewHandlerPtrOutput) ToRoomMessageReviewHandlerPtrOutputWithContext(ctx context.Context) RoomMessageReviewHandlerPtrOutput {
	return o
}

func (o RoomMessageReviewHandlerPtrOutput) Elem() RoomMessageReviewHandlerOutput {
	return o.ApplyT(func(v *RoomMessageReviewHandler) RoomMessageReviewHandler {
		if v != nil {
			return *v
		}
		var ret RoomMessageReviewHandler
		return ret
	}).(RoomMessageReviewHandlerOutput)
}

// The fallback behavior (whether the message
// is allowed or denied) if the handler does not return a valid response,
// encounters an error, or times out. Valid values: `ALLOW`, `DENY`.
func (o RoomMessageReviewHandlerPtrOutput) FallbackResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoomMessageReviewHandler) *string {
		if v == nil {
			return nil
		}
		return v.FallbackResult
	}).(pulumi.StringPtrOutput)
}

// ARN of the lambda message review handler function.
func (o RoomMessageReviewHandlerPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoomMessageReviewHandler) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationInput)(nil)).Elem(), LoggingConfigurationDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationPtrInput)(nil)).Elem(), LoggingConfigurationDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationCloudwatchLogsInput)(nil)).Elem(), LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrInput)(nil)).Elem(), LoggingConfigurationDestinationConfigurationCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationFirehoseInput)(nil)).Elem(), LoggingConfigurationDestinationConfigurationFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationFirehosePtrInput)(nil)).Elem(), LoggingConfigurationDestinationConfigurationFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationS3Input)(nil)).Elem(), LoggingConfigurationDestinationConfigurationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationDestinationConfigurationS3PtrInput)(nil)).Elem(), LoggingConfigurationDestinationConfigurationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoomMessageReviewHandlerInput)(nil)).Elem(), RoomMessageReviewHandlerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoomMessageReviewHandlerPtrInput)(nil)).Elem(), RoomMessageReviewHandlerArgs{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationCloudwatchLogsOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationCloudwatchLogsPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationFirehoseOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationFirehosePtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationS3Output{})
	pulumi.RegisterOutputType(LoggingConfigurationDestinationConfigurationS3PtrOutput{})
	pulumi.RegisterOutputType(RoomMessageReviewHandlerOutput{})
	pulumi.RegisterOutputType(RoomMessageReviewHandlerPtrOutput{})
}
