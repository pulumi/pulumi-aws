// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appautoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PolicyStepScalingPolicyConfiguration struct {
	// Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
	AdjustmentType *string `pulumi:"adjustmentType"`
	// The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
	Cooldown *int `pulumi:"cooldown"`
	// The aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
	MetricAggregationType *string `pulumi:"metricAggregationType"`
	// The minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
	MinAdjustmentMagnitude *int `pulumi:"minAdjustmentMagnitude"`
	// A set of adjustments that manage scaling. These have the following structure:
	StepAdjustments []PolicyStepScalingPolicyConfigurationStepAdjustment `pulumi:"stepAdjustments"`
}

// PolicyStepScalingPolicyConfigurationInput is an input type that accepts PolicyStepScalingPolicyConfigurationArgs and PolicyStepScalingPolicyConfigurationOutput values.
// You can construct a concrete instance of `PolicyStepScalingPolicyConfigurationInput` via:
//
//          PolicyStepScalingPolicyConfigurationArgs{...}
type PolicyStepScalingPolicyConfigurationInput interface {
	pulumi.Input

	ToPolicyStepScalingPolicyConfigurationOutput() PolicyStepScalingPolicyConfigurationOutput
	ToPolicyStepScalingPolicyConfigurationOutputWithContext(context.Context) PolicyStepScalingPolicyConfigurationOutput
}

type PolicyStepScalingPolicyConfigurationArgs struct {
	// Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
	AdjustmentType pulumi.StringPtrInput `pulumi:"adjustmentType"`
	// The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
	Cooldown pulumi.IntPtrInput `pulumi:"cooldown"`
	// The aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
	MetricAggregationType pulumi.StringPtrInput `pulumi:"metricAggregationType"`
	// The minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
	MinAdjustmentMagnitude pulumi.IntPtrInput `pulumi:"minAdjustmentMagnitude"`
	// A set of adjustments that manage scaling. These have the following structure:
	StepAdjustments PolicyStepScalingPolicyConfigurationStepAdjustmentArrayInput `pulumi:"stepAdjustments"`
}

func (PolicyStepScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (i PolicyStepScalingPolicyConfigurationArgs) ToPolicyStepScalingPolicyConfigurationOutput() PolicyStepScalingPolicyConfigurationOutput {
	return i.ToPolicyStepScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i PolicyStepScalingPolicyConfigurationArgs) ToPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepScalingPolicyConfigurationOutput)
}

func (i PolicyStepScalingPolicyConfigurationArgs) ToPolicyStepScalingPolicyConfigurationPtrOutput() PolicyStepScalingPolicyConfigurationPtrOutput {
	return i.ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i PolicyStepScalingPolicyConfigurationArgs) ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepScalingPolicyConfigurationOutput).ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx)
}

// PolicyStepScalingPolicyConfigurationPtrInput is an input type that accepts PolicyStepScalingPolicyConfigurationArgs, PolicyStepScalingPolicyConfigurationPtr and PolicyStepScalingPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `PolicyStepScalingPolicyConfigurationPtrInput` via:
//
//          PolicyStepScalingPolicyConfigurationArgs{...}
//
//  or:
//
//          nil
type PolicyStepScalingPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToPolicyStepScalingPolicyConfigurationPtrOutput() PolicyStepScalingPolicyConfigurationPtrOutput
	ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Context) PolicyStepScalingPolicyConfigurationPtrOutput
}

type policyStepScalingPolicyConfigurationPtrType PolicyStepScalingPolicyConfigurationArgs

func PolicyStepScalingPolicyConfigurationPtr(v *PolicyStepScalingPolicyConfigurationArgs) PolicyStepScalingPolicyConfigurationPtrInput {
	return (*policyStepScalingPolicyConfigurationPtrType)(v)
}

func (*policyStepScalingPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (i *policyStepScalingPolicyConfigurationPtrType) ToPolicyStepScalingPolicyConfigurationPtrOutput() PolicyStepScalingPolicyConfigurationPtrOutput {
	return i.ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *policyStepScalingPolicyConfigurationPtrType) ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepScalingPolicyConfigurationPtrOutput)
}

type PolicyStepScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (PolicyStepScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (o PolicyStepScalingPolicyConfigurationOutput) ToPolicyStepScalingPolicyConfigurationOutput() PolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationOutput) ToPolicyStepScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationOutput) ToPolicyStepScalingPolicyConfigurationPtrOutput() PolicyStepScalingPolicyConfigurationPtrOutput {
	return o.ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o PolicyStepScalingPolicyConfigurationOutput) ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationPtrOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfiguration) *PolicyStepScalingPolicyConfiguration {
		return &v
	}).(PolicyStepScalingPolicyConfigurationPtrOutput)
}

// Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
func (o PolicyStepScalingPolicyConfigurationOutput) AdjustmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfiguration) *string { return v.AdjustmentType }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
func (o PolicyStepScalingPolicyConfigurationOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfiguration) *int { return v.Cooldown }).(pulumi.IntPtrOutput)
}

// The aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
func (o PolicyStepScalingPolicyConfigurationOutput) MetricAggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfiguration) *string { return v.MetricAggregationType }).(pulumi.StringPtrOutput)
}

// The minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
func (o PolicyStepScalingPolicyConfigurationOutput) MinAdjustmentMagnitude() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfiguration) *int { return v.MinAdjustmentMagnitude }).(pulumi.IntPtrOutput)
}

// A set of adjustments that manage scaling. These have the following structure:
func (o PolicyStepScalingPolicyConfigurationOutput) StepAdjustments() PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfiguration) []PolicyStepScalingPolicyConfigurationStepAdjustment {
		return v.StepAdjustments
	}).(PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput)
}

type PolicyStepScalingPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PolicyStepScalingPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyStepScalingPolicyConfiguration)(nil)).Elem()
}

func (o PolicyStepScalingPolicyConfigurationPtrOutput) ToPolicyStepScalingPolicyConfigurationPtrOutput() PolicyStepScalingPolicyConfigurationPtrOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationPtrOutput) ToPolicyStepScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationPtrOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationPtrOutput) Elem() PolicyStepScalingPolicyConfigurationOutput {
	return o.ApplyT(func(v *PolicyStepScalingPolicyConfiguration) PolicyStepScalingPolicyConfiguration { return *v }).(PolicyStepScalingPolicyConfigurationOutput)
}

// Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
func (o PolicyStepScalingPolicyConfigurationPtrOutput) AdjustmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStepScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AdjustmentType
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
func (o PolicyStepScalingPolicyConfigurationPtrOutput) Cooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyStepScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Cooldown
	}).(pulumi.IntPtrOutput)
}

// The aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
func (o PolicyStepScalingPolicyConfigurationPtrOutput) MetricAggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyStepScalingPolicyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MetricAggregationType
	}).(pulumi.StringPtrOutput)
}

// The minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
func (o PolicyStepScalingPolicyConfigurationPtrOutput) MinAdjustmentMagnitude() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyStepScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinAdjustmentMagnitude
	}).(pulumi.IntPtrOutput)
}

// A set of adjustments that manage scaling. These have the following structure:
func (o PolicyStepScalingPolicyConfigurationPtrOutput) StepAdjustments() PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput {
	return o.ApplyT(func(v *PolicyStepScalingPolicyConfiguration) []PolicyStepScalingPolicyConfigurationStepAdjustment {
		if v == nil {
			return nil
		}
		return v.StepAdjustments
	}).(PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput)
}

type PolicyStepScalingPolicyConfigurationStepAdjustment struct {
	// The lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
	MetricIntervalLowerBound *string `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
	MetricIntervalUpperBound *string `pulumi:"metricIntervalUpperBound"`
	// The number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
	ScalingAdjustment int `pulumi:"scalingAdjustment"`
}

// PolicyStepScalingPolicyConfigurationStepAdjustmentInput is an input type that accepts PolicyStepScalingPolicyConfigurationStepAdjustmentArgs and PolicyStepScalingPolicyConfigurationStepAdjustmentOutput values.
// You can construct a concrete instance of `PolicyStepScalingPolicyConfigurationStepAdjustmentInput` via:
//
//          PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{...}
type PolicyStepScalingPolicyConfigurationStepAdjustmentInput interface {
	pulumi.Input

	ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentOutput
	ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutputWithContext(context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentOutput
}

type PolicyStepScalingPolicyConfigurationStepAdjustmentArgs struct {
	// The lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
	MetricIntervalLowerBound pulumi.StringPtrInput `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
	MetricIntervalUpperBound pulumi.StringPtrInput `pulumi:"metricIntervalUpperBound"`
	// The number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
	ScalingAdjustment pulumi.IntInput `pulumi:"scalingAdjustment"`
}

func (PolicyStepScalingPolicyConfigurationStepAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfigurationStepAdjustment)(nil)).Elem()
}

func (i PolicyStepScalingPolicyConfigurationStepAdjustmentArgs) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return i.ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutputWithContext(context.Background())
}

func (i PolicyStepScalingPolicyConfigurationStepAdjustmentArgs) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepScalingPolicyConfigurationStepAdjustmentOutput)
}

// PolicyStepScalingPolicyConfigurationStepAdjustmentArrayInput is an input type that accepts PolicyStepScalingPolicyConfigurationStepAdjustmentArray and PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput values.
// You can construct a concrete instance of `PolicyStepScalingPolicyConfigurationStepAdjustmentArrayInput` via:
//
//          PolicyStepScalingPolicyConfigurationStepAdjustmentArray{ PolicyStepScalingPolicyConfigurationStepAdjustmentArgs{...} }
type PolicyStepScalingPolicyConfigurationStepAdjustmentArrayInput interface {
	pulumi.Input

	ToPolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput
	ToPolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutputWithContext(context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput
}

type PolicyStepScalingPolicyConfigurationStepAdjustmentArray []PolicyStepScalingPolicyConfigurationStepAdjustmentInput

func (PolicyStepScalingPolicyConfigurationStepAdjustmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStepScalingPolicyConfigurationStepAdjustment)(nil)).Elem()
}

func (i PolicyStepScalingPolicyConfigurationStepAdjustmentArray) ToPolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput {
	return i.ToPolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutputWithContext(context.Background())
}

func (i PolicyStepScalingPolicyConfigurationStepAdjustmentArray) ToPolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput)
}

type PolicyStepScalingPolicyConfigurationStepAdjustmentOutput struct{ *pulumi.OutputState }

func (PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepScalingPolicyConfigurationStepAdjustment)(nil)).Elem()
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ToPolicyStepScalingPolicyConfigurationStepAdjustmentOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return o
}

// The lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) MetricIntervalLowerBound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfigurationStepAdjustment) *string { return v.MetricIntervalLowerBound }).(pulumi.StringPtrOutput)
}

// The upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) MetricIntervalUpperBound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfigurationStepAdjustment) *string { return v.MetricIntervalUpperBound }).(pulumi.StringPtrOutput)
}

// The number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
func (o PolicyStepScalingPolicyConfigurationStepAdjustmentOutput) ScalingAdjustment() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyStepScalingPolicyConfigurationStepAdjustment) int { return v.ScalingAdjustment }).(pulumi.IntOutput)
}

type PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput struct{ *pulumi.OutputState }

func (PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStepScalingPolicyConfigurationStepAdjustment)(nil)).Elem()
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput) ToPolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput() PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput) ToPolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutputWithContext(ctx context.Context) PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput {
	return o
}

func (o PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput) Index(i pulumi.IntInput) PolicyStepScalingPolicyConfigurationStepAdjustmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyStepScalingPolicyConfigurationStepAdjustment {
		return vs[0].([]PolicyStepScalingPolicyConfigurationStepAdjustment)[vs[1].(int)]
	}).(PolicyStepScalingPolicyConfigurationStepAdjustmentOutput)
}

type PolicyTargetTrackingScalingPolicyConfiguration struct {
	// A custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
	CustomizedMetricSpecification *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// A predefined metric. See supported fields below.
	PredefinedMetricSpecification *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification `pulumi:"predefinedMetricSpecification"`
	// The amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
	ScaleInCooldown *int `pulumi:"scaleInCooldown"`
	// The amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
	ScaleOutCooldown *int `pulumi:"scaleOutCooldown"`
	// The target value for the metric.
	TargetValue float64 `pulumi:"targetValue"`
}

// PolicyTargetTrackingScalingPolicyConfigurationInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationArgs and PolicyTargetTrackingScalingPolicyConfigurationOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationArgs{...}
type PolicyTargetTrackingScalingPolicyConfigurationInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationOutput() PolicyTargetTrackingScalingPolicyConfigurationOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationOutput
}

type PolicyTargetTrackingScalingPolicyConfigurationArgs struct {
	// A custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
	CustomizedMetricSpecification PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrInput `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
	DisableScaleIn pulumi.BoolPtrInput `pulumi:"disableScaleIn"`
	// A predefined metric. See supported fields below.
	PredefinedMetricSpecification PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrInput `pulumi:"predefinedMetricSpecification"`
	// The amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
	ScaleInCooldown pulumi.IntPtrInput `pulumi:"scaleInCooldown"`
	// The amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
	ScaleOutCooldown pulumi.IntPtrInput `pulumi:"scaleOutCooldown"`
	// The target value for the metric.
	TargetValue pulumi.Float64Input `pulumi:"targetValue"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationOutput() PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationOutput)
}

func (i PolicyTargetTrackingScalingPolicyConfigurationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationOutput).ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx)
}

// PolicyTargetTrackingScalingPolicyConfigurationPtrInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationArgs, PolicyTargetTrackingScalingPolicyConfigurationPtr and PolicyTargetTrackingScalingPolicyConfigurationPtrOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationPtrInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationArgs{...}
//
//  or:
//
//          nil
type PolicyTargetTrackingScalingPolicyConfigurationPtrInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPtrOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationPtrOutput
}

type policyTargetTrackingScalingPolicyConfigurationPtrType PolicyTargetTrackingScalingPolicyConfigurationArgs

func PolicyTargetTrackingScalingPolicyConfigurationPtr(v *PolicyTargetTrackingScalingPolicyConfigurationArgs) PolicyTargetTrackingScalingPolicyConfigurationPtrInput {
	return (*policyTargetTrackingScalingPolicyConfigurationPtrType)(v)
}

func (*policyTargetTrackingScalingPolicyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (i *policyTargetTrackingScalingPolicyConfigurationPtrType) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (i *policyTargetTrackingScalingPolicyConfigurationPtrType) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationPtrOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationOutput() PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o.ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(context.Background())
}

func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfiguration) *PolicyTargetTrackingScalingPolicyConfiguration {
		return &v
	}).(PolicyTargetTrackingScalingPolicyConfigurationPtrOutput)
}

// A custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) CustomizedMetricSpecification() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfiguration) *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification {
		return v.CustomizedMetricSpecification
	}).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfiguration) *bool { return v.DisableScaleIn }).(pulumi.BoolPtrOutput)
}

// A predefined metric. See supported fields below.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) PredefinedMetricSpecification() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfiguration) *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification {
		return v.PredefinedMetricSpecification
	}).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput)
}

// The amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleInCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleInCooldown }).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) ScaleOutCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfiguration) *int { return v.ScaleOutCooldown }).(pulumi.IntPtrOutput)
}

// The target value for the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationOutput) TargetValue() pulumi.Float64Output {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfiguration) float64 { return v.TargetValue }).(pulumi.Float64Output)
}

type PolicyTargetTrackingScalingPolicyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingScalingPolicyConfiguration)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPtrOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) Elem() PolicyTargetTrackingScalingPolicyConfigurationOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfiguration) PolicyTargetTrackingScalingPolicyConfiguration {
		return *v
	}).(PolicyTargetTrackingScalingPolicyConfigurationOutput)
}

// A custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) CustomizedMetricSpecification() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfiguration) *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification {
		if v == nil {
			return nil
		}
		return v.CustomizedMetricSpecification
	}).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableScaleIn
	}).(pulumi.BoolPtrOutput)
}

// A predefined metric. See supported fields below.
func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) PredefinedMetricSpecification() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfiguration) *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification {
		if v == nil {
			return nil
		}
		return v.PredefinedMetricSpecification
	}).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput)
}

// The amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ScaleInCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ScaleInCooldown
	}).(pulumi.IntPtrOutput)
}

// The amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) ScaleOutCooldown() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ScaleOutCooldown
	}).(pulumi.IntPtrOutput)
}

// The target value for the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationPtrOutput) TargetValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.TargetValue
	}).(pulumi.Float64PtrOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification struct {
	// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
	Dimensions []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension `pulumi:"dimensions"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace string `pulumi:"namespace"`
	// The statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
	Statistic string `pulumi:"statistic"`
	// The unit of the metric.
	Unit *string `pulumi:"unit"`
}

// PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs and PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs{...}
type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs struct {
	// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
	Dimensions PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayInput `pulumi:"dimensions"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
	Statistic pulumi.StringInput `pulumi:"statistic"`
	// The unit of the metric.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput)
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput).ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx)
}

// PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs, PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtr and PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs{...}
//
//  or:
//
//          nil
type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput
}

type policyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrType PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs

func PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtr(v *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrInput {
	return (*policyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrType)(v)
}

func (*policyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (i *policyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrType) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *policyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrType) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification {
		return &v
	}).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput)
}

// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Dimensions() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension {
		return v.Dimensions
	}).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput)
}

// The name of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) string {
		return v.MetricName
	}).(pulumi.StringOutput)
}

// The namespace of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) string {
		return v.Namespace
	}).(pulumi.StringOutput)
}

// The statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Statistic() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) string {
		return v.Statistic
	}).(pulumi.StringOutput)
}

// The unit of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) Elem() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification {
		return *v
	}).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput)
}

// Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) Dimensions() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput)
}

// The name of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The namespace of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) Statistic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.Statistic
	}).(pulumi.StringPtrOutput)
}

// The unit of the metric.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension struct {
	// The name of the policy. Must be between 1 and 255 characters in length.
	Name string `pulumi:"name"`
	// Value of the dimension.
	Value string `pulumi:"value"`
}

// PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs and PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs{...}
type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs struct {
	// The name of the policy. Must be between 1 and 255 characters in length.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the dimension.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput)
}

// PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArray and PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArray{ PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArgs{...} }
type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArray []PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionInput

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArray) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArray) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return o
}

// The name of the policy. Must be between 1 and 255 characters in length.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Value of the dimension.
func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput() PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput) ToPolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput) Index(i pulumi.IntInput) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension {
		return vs[0].([]PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension)[vs[1].(int)]
	}).(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification struct {
	// The metric type.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// Reserved for future use. Must be less than or equal to 1023 characters in length.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

// PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs and PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs{...}
type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput
}

type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs struct {
	// The metric type.
	PredefinedMetricType pulumi.StringInput `pulumi:"predefinedMetricType"`
	// Reserved for future use. Must be less than or equal to 1023 characters in length.
	ResourceLabel pulumi.StringPtrInput `pulumi:"resourceLabel"`
}

func (PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (i PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput)
}

func (i PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput).ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx)
}

// PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrInput is an input type that accepts PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs, PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtr and PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrInput` via:
//
//          PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs{...}
//
//  or:
//
//          nil
type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput
	ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput
}

type policyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrType PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs

func PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtr(v *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrInput {
	return (*policyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrType)(v)
}

func (*policyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (i *policyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrType) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *policyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrType) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification {
		return &v
	}).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput)
}

// The metric type.
func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) string {
		return v.PredefinedMetricType
	}).(pulumi.StringOutput)
}

// Reserved for future use. Must be less than or equal to 1023 characters in length.
func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) *string {
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

type PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput) ToPolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput) Elem() PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification {
		return *v
	}).(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput)
}

// The metric type.
func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput) PredefinedMetricType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.PredefinedMetricType
	}).(pulumi.StringPtrOutput)
}

// Reserved for future use. Must be less than or equal to 1023 characters in length.
func (o PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

type ScheduledActionScalableTargetAction struct {
	// The maximum capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// The minimum capacity.
	MinCapacity *int `pulumi:"minCapacity"`
}

// ScheduledActionScalableTargetActionInput is an input type that accepts ScheduledActionScalableTargetActionArgs and ScheduledActionScalableTargetActionOutput values.
// You can construct a concrete instance of `ScheduledActionScalableTargetActionInput` via:
//
//          ScheduledActionScalableTargetActionArgs{...}
type ScheduledActionScalableTargetActionInput interface {
	pulumi.Input

	ToScheduledActionScalableTargetActionOutput() ScheduledActionScalableTargetActionOutput
	ToScheduledActionScalableTargetActionOutputWithContext(context.Context) ScheduledActionScalableTargetActionOutput
}

type ScheduledActionScalableTargetActionArgs struct {
	// The maximum capacity.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// The minimum capacity.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
}

func (ScheduledActionScalableTargetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionScalableTargetAction)(nil)).Elem()
}

func (i ScheduledActionScalableTargetActionArgs) ToScheduledActionScalableTargetActionOutput() ScheduledActionScalableTargetActionOutput {
	return i.ToScheduledActionScalableTargetActionOutputWithContext(context.Background())
}

func (i ScheduledActionScalableTargetActionArgs) ToScheduledActionScalableTargetActionOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionScalableTargetActionOutput)
}

func (i ScheduledActionScalableTargetActionArgs) ToScheduledActionScalableTargetActionPtrOutput() ScheduledActionScalableTargetActionPtrOutput {
	return i.ToScheduledActionScalableTargetActionPtrOutputWithContext(context.Background())
}

func (i ScheduledActionScalableTargetActionArgs) ToScheduledActionScalableTargetActionPtrOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionScalableTargetActionOutput).ToScheduledActionScalableTargetActionPtrOutputWithContext(ctx)
}

// ScheduledActionScalableTargetActionPtrInput is an input type that accepts ScheduledActionScalableTargetActionArgs, ScheduledActionScalableTargetActionPtr and ScheduledActionScalableTargetActionPtrOutput values.
// You can construct a concrete instance of `ScheduledActionScalableTargetActionPtrInput` via:
//
//          ScheduledActionScalableTargetActionArgs{...}
//
//  or:
//
//          nil
type ScheduledActionScalableTargetActionPtrInput interface {
	pulumi.Input

	ToScheduledActionScalableTargetActionPtrOutput() ScheduledActionScalableTargetActionPtrOutput
	ToScheduledActionScalableTargetActionPtrOutputWithContext(context.Context) ScheduledActionScalableTargetActionPtrOutput
}

type scheduledActionScalableTargetActionPtrType ScheduledActionScalableTargetActionArgs

func ScheduledActionScalableTargetActionPtr(v *ScheduledActionScalableTargetActionArgs) ScheduledActionScalableTargetActionPtrInput {
	return (*scheduledActionScalableTargetActionPtrType)(v)
}

func (*scheduledActionScalableTargetActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledActionScalableTargetAction)(nil)).Elem()
}

func (i *scheduledActionScalableTargetActionPtrType) ToScheduledActionScalableTargetActionPtrOutput() ScheduledActionScalableTargetActionPtrOutput {
	return i.ToScheduledActionScalableTargetActionPtrOutputWithContext(context.Background())
}

func (i *scheduledActionScalableTargetActionPtrType) ToScheduledActionScalableTargetActionPtrOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledActionScalableTargetActionPtrOutput)
}

type ScheduledActionScalableTargetActionOutput struct{ *pulumi.OutputState }

func (ScheduledActionScalableTargetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledActionScalableTargetAction)(nil)).Elem()
}

func (o ScheduledActionScalableTargetActionOutput) ToScheduledActionScalableTargetActionOutput() ScheduledActionScalableTargetActionOutput {
	return o
}

func (o ScheduledActionScalableTargetActionOutput) ToScheduledActionScalableTargetActionOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionOutput {
	return o
}

func (o ScheduledActionScalableTargetActionOutput) ToScheduledActionScalableTargetActionPtrOutput() ScheduledActionScalableTargetActionPtrOutput {
	return o.ToScheduledActionScalableTargetActionPtrOutputWithContext(context.Background())
}

func (o ScheduledActionScalableTargetActionOutput) ToScheduledActionScalableTargetActionPtrOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionPtrOutput {
	return o.ApplyT(func(v ScheduledActionScalableTargetAction) *ScheduledActionScalableTargetAction {
		return &v
	}).(ScheduledActionScalableTargetActionPtrOutput)
}

// The maximum capacity.
func (o ScheduledActionScalableTargetActionOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledActionScalableTargetAction) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// The minimum capacity.
func (o ScheduledActionScalableTargetActionOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledActionScalableTargetAction) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

type ScheduledActionScalableTargetActionPtrOutput struct{ *pulumi.OutputState }

func (ScheduledActionScalableTargetActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledActionScalableTargetAction)(nil)).Elem()
}

func (o ScheduledActionScalableTargetActionPtrOutput) ToScheduledActionScalableTargetActionPtrOutput() ScheduledActionScalableTargetActionPtrOutput {
	return o
}

func (o ScheduledActionScalableTargetActionPtrOutput) ToScheduledActionScalableTargetActionPtrOutputWithContext(ctx context.Context) ScheduledActionScalableTargetActionPtrOutput {
	return o
}

func (o ScheduledActionScalableTargetActionPtrOutput) Elem() ScheduledActionScalableTargetActionOutput {
	return o.ApplyT(func(v *ScheduledActionScalableTargetAction) ScheduledActionScalableTargetAction { return *v }).(ScheduledActionScalableTargetActionOutput)
}

// The maximum capacity.
func (o ScheduledActionScalableTargetActionPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledActionScalableTargetAction) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// The minimum capacity.
func (o ScheduledActionScalableTargetActionPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledActionScalableTargetAction) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyStepScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(PolicyStepScalingPolicyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PolicyStepScalingPolicyConfigurationStepAdjustmentOutput{})
	pulumi.RegisterOutputType(PolicyStepScalingPolicyConfigurationStepAdjustmentArrayOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimensionArrayOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledActionScalableTargetActionOutput{})
	pulumi.RegisterOutputType(ScheduledActionScalableTargetActionPtrOutput{})
}
