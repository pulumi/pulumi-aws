// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elastictranscoder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PipelineContentConfig struct {
	Bucket       *string `pulumi:"bucket"`
	StorageClass *string `pulumi:"storageClass"`
}

// PipelineContentConfigInput is an input type that accepts PipelineContentConfigArgs and PipelineContentConfigOutput values.
// You can construct a concrete instance of `PipelineContentConfigInput` via:
//
//	PipelineContentConfigArgs{...}
type PipelineContentConfigInput interface {
	pulumi.Input

	ToPipelineContentConfigOutput() PipelineContentConfigOutput
	ToPipelineContentConfigOutputWithContext(context.Context) PipelineContentConfigOutput
}

type PipelineContentConfigArgs struct {
	Bucket       pulumi.StringPtrInput `pulumi:"bucket"`
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (PipelineContentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineContentConfig)(nil)).Elem()
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigOutput() PipelineContentConfigOutput {
	return i.ToPipelineContentConfigOutputWithContext(context.Background())
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigOutputWithContext(ctx context.Context) PipelineContentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigOutput)
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return i.ToPipelineContentConfigPtrOutputWithContext(context.Background())
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigOutput).ToPipelineContentConfigPtrOutputWithContext(ctx)
}

// PipelineContentConfigPtrInput is an input type that accepts PipelineContentConfigArgs, PipelineContentConfigPtr and PipelineContentConfigPtrOutput values.
// You can construct a concrete instance of `PipelineContentConfigPtrInput` via:
//
//	        PipelineContentConfigArgs{...}
//
//	or:
//
//	        nil
type PipelineContentConfigPtrInput interface {
	pulumi.Input

	ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput
	ToPipelineContentConfigPtrOutputWithContext(context.Context) PipelineContentConfigPtrOutput
}

type pipelineContentConfigPtrType PipelineContentConfigArgs

func PipelineContentConfigPtr(v *PipelineContentConfigArgs) PipelineContentConfigPtrInput {
	return (*pipelineContentConfigPtrType)(v)
}

func (*pipelineContentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineContentConfig)(nil)).Elem()
}

func (i *pipelineContentConfigPtrType) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return i.ToPipelineContentConfigPtrOutputWithContext(context.Background())
}

func (i *pipelineContentConfigPtrType) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigPtrOutput)
}

type PipelineContentConfigOutput struct{ *pulumi.OutputState }

func (PipelineContentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineContentConfig)(nil)).Elem()
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigOutput() PipelineContentConfigOutput {
	return o
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigOutputWithContext(ctx context.Context) PipelineContentConfigOutput {
	return o
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return o.ToPipelineContentConfigPtrOutputWithContext(context.Background())
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineContentConfig) *PipelineContentConfig {
		return &v
	}).(PipelineContentConfigPtrOutput)
}

func (o PipelineContentConfigOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineContentConfig) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o PipelineContentConfigOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineContentConfig) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type PipelineContentConfigPtrOutput struct{ *pulumi.OutputState }

func (PipelineContentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineContentConfig)(nil)).Elem()
}

func (o PipelineContentConfigPtrOutput) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return o
}

func (o PipelineContentConfigPtrOutput) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return o
}

func (o PipelineContentConfigPtrOutput) Elem() PipelineContentConfigOutput {
	return o.ApplyT(func(v *PipelineContentConfig) PipelineContentConfig {
		if v != nil {
			return *v
		}
		var ret PipelineContentConfig
		return ret
	}).(PipelineContentConfigOutput)
}

func (o PipelineContentConfigPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineContentConfig) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o PipelineContentConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineContentConfig) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type PipelineContentConfigPermission struct {
	Accesses    []string `pulumi:"accesses"`
	Grantee     *string  `pulumi:"grantee"`
	GranteeType *string  `pulumi:"granteeType"`
}

// PipelineContentConfigPermissionInput is an input type that accepts PipelineContentConfigPermissionArgs and PipelineContentConfigPermissionOutput values.
// You can construct a concrete instance of `PipelineContentConfigPermissionInput` via:
//
//	PipelineContentConfigPermissionArgs{...}
type PipelineContentConfigPermissionInput interface {
	pulumi.Input

	ToPipelineContentConfigPermissionOutput() PipelineContentConfigPermissionOutput
	ToPipelineContentConfigPermissionOutputWithContext(context.Context) PipelineContentConfigPermissionOutput
}

type PipelineContentConfigPermissionArgs struct {
	Accesses    pulumi.StringArrayInput `pulumi:"accesses"`
	Grantee     pulumi.StringPtrInput   `pulumi:"grantee"`
	GranteeType pulumi.StringPtrInput   `pulumi:"granteeType"`
}

func (PipelineContentConfigPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineContentConfigPermission)(nil)).Elem()
}

func (i PipelineContentConfigPermissionArgs) ToPipelineContentConfigPermissionOutput() PipelineContentConfigPermissionOutput {
	return i.ToPipelineContentConfigPermissionOutputWithContext(context.Background())
}

func (i PipelineContentConfigPermissionArgs) ToPipelineContentConfigPermissionOutputWithContext(ctx context.Context) PipelineContentConfigPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigPermissionOutput)
}

// PipelineContentConfigPermissionArrayInput is an input type that accepts PipelineContentConfigPermissionArray and PipelineContentConfigPermissionArrayOutput values.
// You can construct a concrete instance of `PipelineContentConfigPermissionArrayInput` via:
//
//	PipelineContentConfigPermissionArray{ PipelineContentConfigPermissionArgs{...} }
type PipelineContentConfigPermissionArrayInput interface {
	pulumi.Input

	ToPipelineContentConfigPermissionArrayOutput() PipelineContentConfigPermissionArrayOutput
	ToPipelineContentConfigPermissionArrayOutputWithContext(context.Context) PipelineContentConfigPermissionArrayOutput
}

type PipelineContentConfigPermissionArray []PipelineContentConfigPermissionInput

func (PipelineContentConfigPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineContentConfigPermission)(nil)).Elem()
}

func (i PipelineContentConfigPermissionArray) ToPipelineContentConfigPermissionArrayOutput() PipelineContentConfigPermissionArrayOutput {
	return i.ToPipelineContentConfigPermissionArrayOutputWithContext(context.Background())
}

func (i PipelineContentConfigPermissionArray) ToPipelineContentConfigPermissionArrayOutputWithContext(ctx context.Context) PipelineContentConfigPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigPermissionArrayOutput)
}

type PipelineContentConfigPermissionOutput struct{ *pulumi.OutputState }

func (PipelineContentConfigPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineContentConfigPermission)(nil)).Elem()
}

func (o PipelineContentConfigPermissionOutput) ToPipelineContentConfigPermissionOutput() PipelineContentConfigPermissionOutput {
	return o
}

func (o PipelineContentConfigPermissionOutput) ToPipelineContentConfigPermissionOutputWithContext(ctx context.Context) PipelineContentConfigPermissionOutput {
	return o
}

func (o PipelineContentConfigPermissionOutput) Accesses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineContentConfigPermission) []string { return v.Accesses }).(pulumi.StringArrayOutput)
}

func (o PipelineContentConfigPermissionOutput) Grantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineContentConfigPermission) *string { return v.Grantee }).(pulumi.StringPtrOutput)
}

func (o PipelineContentConfigPermissionOutput) GranteeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineContentConfigPermission) *string { return v.GranteeType }).(pulumi.StringPtrOutput)
}

type PipelineContentConfigPermissionArrayOutput struct{ *pulumi.OutputState }

func (PipelineContentConfigPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineContentConfigPermission)(nil)).Elem()
}

func (o PipelineContentConfigPermissionArrayOutput) ToPipelineContentConfigPermissionArrayOutput() PipelineContentConfigPermissionArrayOutput {
	return o
}

func (o PipelineContentConfigPermissionArrayOutput) ToPipelineContentConfigPermissionArrayOutputWithContext(ctx context.Context) PipelineContentConfigPermissionArrayOutput {
	return o
}

func (o PipelineContentConfigPermissionArrayOutput) Index(i pulumi.IntInput) PipelineContentConfigPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineContentConfigPermission {
		return vs[0].([]PipelineContentConfigPermission)[vs[1].(int)]
	}).(PipelineContentConfigPermissionOutput)
}

type PipelineNotifications struct {
	Completed   *string `pulumi:"completed"`
	Error       *string `pulumi:"error"`
	Progressing *string `pulumi:"progressing"`
	Warning     *string `pulumi:"warning"`
}

// PipelineNotificationsInput is an input type that accepts PipelineNotificationsArgs and PipelineNotificationsOutput values.
// You can construct a concrete instance of `PipelineNotificationsInput` via:
//
//	PipelineNotificationsArgs{...}
type PipelineNotificationsInput interface {
	pulumi.Input

	ToPipelineNotificationsOutput() PipelineNotificationsOutput
	ToPipelineNotificationsOutputWithContext(context.Context) PipelineNotificationsOutput
}

type PipelineNotificationsArgs struct {
	Completed   pulumi.StringPtrInput `pulumi:"completed"`
	Error       pulumi.StringPtrInput `pulumi:"error"`
	Progressing pulumi.StringPtrInput `pulumi:"progressing"`
	Warning     pulumi.StringPtrInput `pulumi:"warning"`
}

func (PipelineNotificationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineNotifications)(nil)).Elem()
}

func (i PipelineNotificationsArgs) ToPipelineNotificationsOutput() PipelineNotificationsOutput {
	return i.ToPipelineNotificationsOutputWithContext(context.Background())
}

func (i PipelineNotificationsArgs) ToPipelineNotificationsOutputWithContext(ctx context.Context) PipelineNotificationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineNotificationsOutput)
}

func (i PipelineNotificationsArgs) ToPipelineNotificationsPtrOutput() PipelineNotificationsPtrOutput {
	return i.ToPipelineNotificationsPtrOutputWithContext(context.Background())
}

func (i PipelineNotificationsArgs) ToPipelineNotificationsPtrOutputWithContext(ctx context.Context) PipelineNotificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineNotificationsOutput).ToPipelineNotificationsPtrOutputWithContext(ctx)
}

// PipelineNotificationsPtrInput is an input type that accepts PipelineNotificationsArgs, PipelineNotificationsPtr and PipelineNotificationsPtrOutput values.
// You can construct a concrete instance of `PipelineNotificationsPtrInput` via:
//
//	        PipelineNotificationsArgs{...}
//
//	or:
//
//	        nil
type PipelineNotificationsPtrInput interface {
	pulumi.Input

	ToPipelineNotificationsPtrOutput() PipelineNotificationsPtrOutput
	ToPipelineNotificationsPtrOutputWithContext(context.Context) PipelineNotificationsPtrOutput
}

type pipelineNotificationsPtrType PipelineNotificationsArgs

func PipelineNotificationsPtr(v *PipelineNotificationsArgs) PipelineNotificationsPtrInput {
	return (*pipelineNotificationsPtrType)(v)
}

func (*pipelineNotificationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineNotifications)(nil)).Elem()
}

func (i *pipelineNotificationsPtrType) ToPipelineNotificationsPtrOutput() PipelineNotificationsPtrOutput {
	return i.ToPipelineNotificationsPtrOutputWithContext(context.Background())
}

func (i *pipelineNotificationsPtrType) ToPipelineNotificationsPtrOutputWithContext(ctx context.Context) PipelineNotificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineNotificationsPtrOutput)
}

type PipelineNotificationsOutput struct{ *pulumi.OutputState }

func (PipelineNotificationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineNotifications)(nil)).Elem()
}

func (o PipelineNotificationsOutput) ToPipelineNotificationsOutput() PipelineNotificationsOutput {
	return o
}

func (o PipelineNotificationsOutput) ToPipelineNotificationsOutputWithContext(ctx context.Context) PipelineNotificationsOutput {
	return o
}

func (o PipelineNotificationsOutput) ToPipelineNotificationsPtrOutput() PipelineNotificationsPtrOutput {
	return o.ToPipelineNotificationsPtrOutputWithContext(context.Background())
}

func (o PipelineNotificationsOutput) ToPipelineNotificationsPtrOutputWithContext(ctx context.Context) PipelineNotificationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineNotifications) *PipelineNotifications {
		return &v
	}).(PipelineNotificationsPtrOutput)
}

func (o PipelineNotificationsOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineNotifications) *string { return v.Completed }).(pulumi.StringPtrOutput)
}

func (o PipelineNotificationsOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineNotifications) *string { return v.Error }).(pulumi.StringPtrOutput)
}

func (o PipelineNotificationsOutput) Progressing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineNotifications) *string { return v.Progressing }).(pulumi.StringPtrOutput)
}

func (o PipelineNotificationsOutput) Warning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineNotifications) *string { return v.Warning }).(pulumi.StringPtrOutput)
}

type PipelineNotificationsPtrOutput struct{ *pulumi.OutputState }

func (PipelineNotificationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineNotifications)(nil)).Elem()
}

func (o PipelineNotificationsPtrOutput) ToPipelineNotificationsPtrOutput() PipelineNotificationsPtrOutput {
	return o
}

func (o PipelineNotificationsPtrOutput) ToPipelineNotificationsPtrOutputWithContext(ctx context.Context) PipelineNotificationsPtrOutput {
	return o
}

func (o PipelineNotificationsPtrOutput) Elem() PipelineNotificationsOutput {
	return o.ApplyT(func(v *PipelineNotifications) PipelineNotifications {
		if v != nil {
			return *v
		}
		var ret PipelineNotifications
		return ret
	}).(PipelineNotificationsOutput)
}

func (o PipelineNotificationsPtrOutput) Completed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineNotifications) *string {
		if v == nil {
			return nil
		}
		return v.Completed
	}).(pulumi.StringPtrOutput)
}

func (o PipelineNotificationsPtrOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineNotifications) *string {
		if v == nil {
			return nil
		}
		return v.Error
	}).(pulumi.StringPtrOutput)
}

func (o PipelineNotificationsPtrOutput) Progressing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineNotifications) *string {
		if v == nil {
			return nil
		}
		return v.Progressing
	}).(pulumi.StringPtrOutput)
}

func (o PipelineNotificationsPtrOutput) Warning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineNotifications) *string {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(pulumi.StringPtrOutput)
}

type PipelineThumbnailConfig struct {
	Bucket       *string `pulumi:"bucket"`
	StorageClass *string `pulumi:"storageClass"`
}

// PipelineThumbnailConfigInput is an input type that accepts PipelineThumbnailConfigArgs and PipelineThumbnailConfigOutput values.
// You can construct a concrete instance of `PipelineThumbnailConfigInput` via:
//
//	PipelineThumbnailConfigArgs{...}
type PipelineThumbnailConfigInput interface {
	pulumi.Input

	ToPipelineThumbnailConfigOutput() PipelineThumbnailConfigOutput
	ToPipelineThumbnailConfigOutputWithContext(context.Context) PipelineThumbnailConfigOutput
}

type PipelineThumbnailConfigArgs struct {
	Bucket       pulumi.StringPtrInput `pulumi:"bucket"`
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (PipelineThumbnailConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineThumbnailConfig)(nil)).Elem()
}

func (i PipelineThumbnailConfigArgs) ToPipelineThumbnailConfigOutput() PipelineThumbnailConfigOutput {
	return i.ToPipelineThumbnailConfigOutputWithContext(context.Background())
}

func (i PipelineThumbnailConfigArgs) ToPipelineThumbnailConfigOutputWithContext(ctx context.Context) PipelineThumbnailConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineThumbnailConfigOutput)
}

func (i PipelineThumbnailConfigArgs) ToPipelineThumbnailConfigPtrOutput() PipelineThumbnailConfigPtrOutput {
	return i.ToPipelineThumbnailConfigPtrOutputWithContext(context.Background())
}

func (i PipelineThumbnailConfigArgs) ToPipelineThumbnailConfigPtrOutputWithContext(ctx context.Context) PipelineThumbnailConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineThumbnailConfigOutput).ToPipelineThumbnailConfigPtrOutputWithContext(ctx)
}

// PipelineThumbnailConfigPtrInput is an input type that accepts PipelineThumbnailConfigArgs, PipelineThumbnailConfigPtr and PipelineThumbnailConfigPtrOutput values.
// You can construct a concrete instance of `PipelineThumbnailConfigPtrInput` via:
//
//	        PipelineThumbnailConfigArgs{...}
//
//	or:
//
//	        nil
type PipelineThumbnailConfigPtrInput interface {
	pulumi.Input

	ToPipelineThumbnailConfigPtrOutput() PipelineThumbnailConfigPtrOutput
	ToPipelineThumbnailConfigPtrOutputWithContext(context.Context) PipelineThumbnailConfigPtrOutput
}

type pipelineThumbnailConfigPtrType PipelineThumbnailConfigArgs

func PipelineThumbnailConfigPtr(v *PipelineThumbnailConfigArgs) PipelineThumbnailConfigPtrInput {
	return (*pipelineThumbnailConfigPtrType)(v)
}

func (*pipelineThumbnailConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineThumbnailConfig)(nil)).Elem()
}

func (i *pipelineThumbnailConfigPtrType) ToPipelineThumbnailConfigPtrOutput() PipelineThumbnailConfigPtrOutput {
	return i.ToPipelineThumbnailConfigPtrOutputWithContext(context.Background())
}

func (i *pipelineThumbnailConfigPtrType) ToPipelineThumbnailConfigPtrOutputWithContext(ctx context.Context) PipelineThumbnailConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineThumbnailConfigPtrOutput)
}

type PipelineThumbnailConfigOutput struct{ *pulumi.OutputState }

func (PipelineThumbnailConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineThumbnailConfig)(nil)).Elem()
}

func (o PipelineThumbnailConfigOutput) ToPipelineThumbnailConfigOutput() PipelineThumbnailConfigOutput {
	return o
}

func (o PipelineThumbnailConfigOutput) ToPipelineThumbnailConfigOutputWithContext(ctx context.Context) PipelineThumbnailConfigOutput {
	return o
}

func (o PipelineThumbnailConfigOutput) ToPipelineThumbnailConfigPtrOutput() PipelineThumbnailConfigPtrOutput {
	return o.ToPipelineThumbnailConfigPtrOutputWithContext(context.Background())
}

func (o PipelineThumbnailConfigOutput) ToPipelineThumbnailConfigPtrOutputWithContext(ctx context.Context) PipelineThumbnailConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineThumbnailConfig) *PipelineThumbnailConfig {
		return &v
	}).(PipelineThumbnailConfigPtrOutput)
}

func (o PipelineThumbnailConfigOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineThumbnailConfig) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o PipelineThumbnailConfigOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineThumbnailConfig) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type PipelineThumbnailConfigPtrOutput struct{ *pulumi.OutputState }

func (PipelineThumbnailConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineThumbnailConfig)(nil)).Elem()
}

func (o PipelineThumbnailConfigPtrOutput) ToPipelineThumbnailConfigPtrOutput() PipelineThumbnailConfigPtrOutput {
	return o
}

func (o PipelineThumbnailConfigPtrOutput) ToPipelineThumbnailConfigPtrOutputWithContext(ctx context.Context) PipelineThumbnailConfigPtrOutput {
	return o
}

func (o PipelineThumbnailConfigPtrOutput) Elem() PipelineThumbnailConfigOutput {
	return o.ApplyT(func(v *PipelineThumbnailConfig) PipelineThumbnailConfig {
		if v != nil {
			return *v
		}
		var ret PipelineThumbnailConfig
		return ret
	}).(PipelineThumbnailConfigOutput)
}

func (o PipelineThumbnailConfigPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineThumbnailConfig) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o PipelineThumbnailConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineThumbnailConfig) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type PipelineThumbnailConfigPermission struct {
	Accesses    []string `pulumi:"accesses"`
	Grantee     *string  `pulumi:"grantee"`
	GranteeType *string  `pulumi:"granteeType"`
}

// PipelineThumbnailConfigPermissionInput is an input type that accepts PipelineThumbnailConfigPermissionArgs and PipelineThumbnailConfigPermissionOutput values.
// You can construct a concrete instance of `PipelineThumbnailConfigPermissionInput` via:
//
//	PipelineThumbnailConfigPermissionArgs{...}
type PipelineThumbnailConfigPermissionInput interface {
	pulumi.Input

	ToPipelineThumbnailConfigPermissionOutput() PipelineThumbnailConfigPermissionOutput
	ToPipelineThumbnailConfigPermissionOutputWithContext(context.Context) PipelineThumbnailConfigPermissionOutput
}

type PipelineThumbnailConfigPermissionArgs struct {
	Accesses    pulumi.StringArrayInput `pulumi:"accesses"`
	Grantee     pulumi.StringPtrInput   `pulumi:"grantee"`
	GranteeType pulumi.StringPtrInput   `pulumi:"granteeType"`
}

func (PipelineThumbnailConfigPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineThumbnailConfigPermission)(nil)).Elem()
}

func (i PipelineThumbnailConfigPermissionArgs) ToPipelineThumbnailConfigPermissionOutput() PipelineThumbnailConfigPermissionOutput {
	return i.ToPipelineThumbnailConfigPermissionOutputWithContext(context.Background())
}

func (i PipelineThumbnailConfigPermissionArgs) ToPipelineThumbnailConfigPermissionOutputWithContext(ctx context.Context) PipelineThumbnailConfigPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineThumbnailConfigPermissionOutput)
}

// PipelineThumbnailConfigPermissionArrayInput is an input type that accepts PipelineThumbnailConfigPermissionArray and PipelineThumbnailConfigPermissionArrayOutput values.
// You can construct a concrete instance of `PipelineThumbnailConfigPermissionArrayInput` via:
//
//	PipelineThumbnailConfigPermissionArray{ PipelineThumbnailConfigPermissionArgs{...} }
type PipelineThumbnailConfigPermissionArrayInput interface {
	pulumi.Input

	ToPipelineThumbnailConfigPermissionArrayOutput() PipelineThumbnailConfigPermissionArrayOutput
	ToPipelineThumbnailConfigPermissionArrayOutputWithContext(context.Context) PipelineThumbnailConfigPermissionArrayOutput
}

type PipelineThumbnailConfigPermissionArray []PipelineThumbnailConfigPermissionInput

func (PipelineThumbnailConfigPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineThumbnailConfigPermission)(nil)).Elem()
}

func (i PipelineThumbnailConfigPermissionArray) ToPipelineThumbnailConfigPermissionArrayOutput() PipelineThumbnailConfigPermissionArrayOutput {
	return i.ToPipelineThumbnailConfigPermissionArrayOutputWithContext(context.Background())
}

func (i PipelineThumbnailConfigPermissionArray) ToPipelineThumbnailConfigPermissionArrayOutputWithContext(ctx context.Context) PipelineThumbnailConfigPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineThumbnailConfigPermissionArrayOutput)
}

type PipelineThumbnailConfigPermissionOutput struct{ *pulumi.OutputState }

func (PipelineThumbnailConfigPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineThumbnailConfigPermission)(nil)).Elem()
}

func (o PipelineThumbnailConfigPermissionOutput) ToPipelineThumbnailConfigPermissionOutput() PipelineThumbnailConfigPermissionOutput {
	return o
}

func (o PipelineThumbnailConfigPermissionOutput) ToPipelineThumbnailConfigPermissionOutputWithContext(ctx context.Context) PipelineThumbnailConfigPermissionOutput {
	return o
}

func (o PipelineThumbnailConfigPermissionOutput) Accesses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineThumbnailConfigPermission) []string { return v.Accesses }).(pulumi.StringArrayOutput)
}

func (o PipelineThumbnailConfigPermissionOutput) Grantee() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineThumbnailConfigPermission) *string { return v.Grantee }).(pulumi.StringPtrOutput)
}

func (o PipelineThumbnailConfigPermissionOutput) GranteeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineThumbnailConfigPermission) *string { return v.GranteeType }).(pulumi.StringPtrOutput)
}

type PipelineThumbnailConfigPermissionArrayOutput struct{ *pulumi.OutputState }

func (PipelineThumbnailConfigPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineThumbnailConfigPermission)(nil)).Elem()
}

func (o PipelineThumbnailConfigPermissionArrayOutput) ToPipelineThumbnailConfigPermissionArrayOutput() PipelineThumbnailConfigPermissionArrayOutput {
	return o
}

func (o PipelineThumbnailConfigPermissionArrayOutput) ToPipelineThumbnailConfigPermissionArrayOutputWithContext(ctx context.Context) PipelineThumbnailConfigPermissionArrayOutput {
	return o
}

func (o PipelineThumbnailConfigPermissionArrayOutput) Index(i pulumi.IntInput) PipelineThumbnailConfigPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineThumbnailConfigPermission {
		return vs[0].([]PipelineThumbnailConfigPermission)[vs[1].(int)]
	}).(PipelineThumbnailConfigPermissionOutput)
}

type PresetAudio struct {
	AudioPackingMode *string `pulumi:"audioPackingMode"`
	BitRate          *string `pulumi:"bitRate"`
	Channels         *string `pulumi:"channels"`
	Codec            *string `pulumi:"codec"`
	SampleRate       *string `pulumi:"sampleRate"`
}

// PresetAudioInput is an input type that accepts PresetAudioArgs and PresetAudioOutput values.
// You can construct a concrete instance of `PresetAudioInput` via:
//
//	PresetAudioArgs{...}
type PresetAudioInput interface {
	pulumi.Input

	ToPresetAudioOutput() PresetAudioOutput
	ToPresetAudioOutputWithContext(context.Context) PresetAudioOutput
}

type PresetAudioArgs struct {
	AudioPackingMode pulumi.StringPtrInput `pulumi:"audioPackingMode"`
	BitRate          pulumi.StringPtrInput `pulumi:"bitRate"`
	Channels         pulumi.StringPtrInput `pulumi:"channels"`
	Codec            pulumi.StringPtrInput `pulumi:"codec"`
	SampleRate       pulumi.StringPtrInput `pulumi:"sampleRate"`
}

func (PresetAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetAudio)(nil)).Elem()
}

func (i PresetAudioArgs) ToPresetAudioOutput() PresetAudioOutput {
	return i.ToPresetAudioOutputWithContext(context.Background())
}

func (i PresetAudioArgs) ToPresetAudioOutputWithContext(ctx context.Context) PresetAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetAudioOutput)
}

func (i PresetAudioArgs) ToPresetAudioPtrOutput() PresetAudioPtrOutput {
	return i.ToPresetAudioPtrOutputWithContext(context.Background())
}

func (i PresetAudioArgs) ToPresetAudioPtrOutputWithContext(ctx context.Context) PresetAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetAudioOutput).ToPresetAudioPtrOutputWithContext(ctx)
}

// PresetAudioPtrInput is an input type that accepts PresetAudioArgs, PresetAudioPtr and PresetAudioPtrOutput values.
// You can construct a concrete instance of `PresetAudioPtrInput` via:
//
//	        PresetAudioArgs{...}
//
//	or:
//
//	        nil
type PresetAudioPtrInput interface {
	pulumi.Input

	ToPresetAudioPtrOutput() PresetAudioPtrOutput
	ToPresetAudioPtrOutputWithContext(context.Context) PresetAudioPtrOutput
}

type presetAudioPtrType PresetAudioArgs

func PresetAudioPtr(v *PresetAudioArgs) PresetAudioPtrInput {
	return (*presetAudioPtrType)(v)
}

func (*presetAudioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetAudio)(nil)).Elem()
}

func (i *presetAudioPtrType) ToPresetAudioPtrOutput() PresetAudioPtrOutput {
	return i.ToPresetAudioPtrOutputWithContext(context.Background())
}

func (i *presetAudioPtrType) ToPresetAudioPtrOutputWithContext(ctx context.Context) PresetAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetAudioPtrOutput)
}

type PresetAudioOutput struct{ *pulumi.OutputState }

func (PresetAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetAudio)(nil)).Elem()
}

func (o PresetAudioOutput) ToPresetAudioOutput() PresetAudioOutput {
	return o
}

func (o PresetAudioOutput) ToPresetAudioOutputWithContext(ctx context.Context) PresetAudioOutput {
	return o
}

func (o PresetAudioOutput) ToPresetAudioPtrOutput() PresetAudioPtrOutput {
	return o.ToPresetAudioPtrOutputWithContext(context.Background())
}

func (o PresetAudioOutput) ToPresetAudioPtrOutputWithContext(ctx context.Context) PresetAudioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PresetAudio) *PresetAudio {
		return &v
	}).(PresetAudioPtrOutput)
}

func (o PresetAudioOutput) AudioPackingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudio) *string { return v.AudioPackingMode }).(pulumi.StringPtrOutput)
}

func (o PresetAudioOutput) BitRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudio) *string { return v.BitRate }).(pulumi.StringPtrOutput)
}

func (o PresetAudioOutput) Channels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudio) *string { return v.Channels }).(pulumi.StringPtrOutput)
}

func (o PresetAudioOutput) Codec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudio) *string { return v.Codec }).(pulumi.StringPtrOutput)
}

func (o PresetAudioOutput) SampleRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudio) *string { return v.SampleRate }).(pulumi.StringPtrOutput)
}

type PresetAudioPtrOutput struct{ *pulumi.OutputState }

func (PresetAudioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetAudio)(nil)).Elem()
}

func (o PresetAudioPtrOutput) ToPresetAudioPtrOutput() PresetAudioPtrOutput {
	return o
}

func (o PresetAudioPtrOutput) ToPresetAudioPtrOutputWithContext(ctx context.Context) PresetAudioPtrOutput {
	return o
}

func (o PresetAudioPtrOutput) Elem() PresetAudioOutput {
	return o.ApplyT(func(v *PresetAudio) PresetAudio {
		if v != nil {
			return *v
		}
		var ret PresetAudio
		return ret
	}).(PresetAudioOutput)
}

func (o PresetAudioPtrOutput) AudioPackingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudio) *string {
		if v == nil {
			return nil
		}
		return v.AudioPackingMode
	}).(pulumi.StringPtrOutput)
}

func (o PresetAudioPtrOutput) BitRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudio) *string {
		if v == nil {
			return nil
		}
		return v.BitRate
	}).(pulumi.StringPtrOutput)
}

func (o PresetAudioPtrOutput) Channels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudio) *string {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(pulumi.StringPtrOutput)
}

func (o PresetAudioPtrOutput) Codec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudio) *string {
		if v == nil {
			return nil
		}
		return v.Codec
	}).(pulumi.StringPtrOutput)
}

func (o PresetAudioPtrOutput) SampleRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudio) *string {
		if v == nil {
			return nil
		}
		return v.SampleRate
	}).(pulumi.StringPtrOutput)
}

type PresetAudioCodecOptions struct {
	BitDepth *string `pulumi:"bitDepth"`
	BitOrder *string `pulumi:"bitOrder"`
	Profile  *string `pulumi:"profile"`
	Signed   *string `pulumi:"signed"`
}

// PresetAudioCodecOptionsInput is an input type that accepts PresetAudioCodecOptionsArgs and PresetAudioCodecOptionsOutput values.
// You can construct a concrete instance of `PresetAudioCodecOptionsInput` via:
//
//	PresetAudioCodecOptionsArgs{...}
type PresetAudioCodecOptionsInput interface {
	pulumi.Input

	ToPresetAudioCodecOptionsOutput() PresetAudioCodecOptionsOutput
	ToPresetAudioCodecOptionsOutputWithContext(context.Context) PresetAudioCodecOptionsOutput
}

type PresetAudioCodecOptionsArgs struct {
	BitDepth pulumi.StringPtrInput `pulumi:"bitDepth"`
	BitOrder pulumi.StringPtrInput `pulumi:"bitOrder"`
	Profile  pulumi.StringPtrInput `pulumi:"profile"`
	Signed   pulumi.StringPtrInput `pulumi:"signed"`
}

func (PresetAudioCodecOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetAudioCodecOptions)(nil)).Elem()
}

func (i PresetAudioCodecOptionsArgs) ToPresetAudioCodecOptionsOutput() PresetAudioCodecOptionsOutput {
	return i.ToPresetAudioCodecOptionsOutputWithContext(context.Background())
}

func (i PresetAudioCodecOptionsArgs) ToPresetAudioCodecOptionsOutputWithContext(ctx context.Context) PresetAudioCodecOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetAudioCodecOptionsOutput)
}

func (i PresetAudioCodecOptionsArgs) ToPresetAudioCodecOptionsPtrOutput() PresetAudioCodecOptionsPtrOutput {
	return i.ToPresetAudioCodecOptionsPtrOutputWithContext(context.Background())
}

func (i PresetAudioCodecOptionsArgs) ToPresetAudioCodecOptionsPtrOutputWithContext(ctx context.Context) PresetAudioCodecOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetAudioCodecOptionsOutput).ToPresetAudioCodecOptionsPtrOutputWithContext(ctx)
}

// PresetAudioCodecOptionsPtrInput is an input type that accepts PresetAudioCodecOptionsArgs, PresetAudioCodecOptionsPtr and PresetAudioCodecOptionsPtrOutput values.
// You can construct a concrete instance of `PresetAudioCodecOptionsPtrInput` via:
//
//	        PresetAudioCodecOptionsArgs{...}
//
//	or:
//
//	        nil
type PresetAudioCodecOptionsPtrInput interface {
	pulumi.Input

	ToPresetAudioCodecOptionsPtrOutput() PresetAudioCodecOptionsPtrOutput
	ToPresetAudioCodecOptionsPtrOutputWithContext(context.Context) PresetAudioCodecOptionsPtrOutput
}

type presetAudioCodecOptionsPtrType PresetAudioCodecOptionsArgs

func PresetAudioCodecOptionsPtr(v *PresetAudioCodecOptionsArgs) PresetAudioCodecOptionsPtrInput {
	return (*presetAudioCodecOptionsPtrType)(v)
}

func (*presetAudioCodecOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetAudioCodecOptions)(nil)).Elem()
}

func (i *presetAudioCodecOptionsPtrType) ToPresetAudioCodecOptionsPtrOutput() PresetAudioCodecOptionsPtrOutput {
	return i.ToPresetAudioCodecOptionsPtrOutputWithContext(context.Background())
}

func (i *presetAudioCodecOptionsPtrType) ToPresetAudioCodecOptionsPtrOutputWithContext(ctx context.Context) PresetAudioCodecOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetAudioCodecOptionsPtrOutput)
}

type PresetAudioCodecOptionsOutput struct{ *pulumi.OutputState }

func (PresetAudioCodecOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetAudioCodecOptions)(nil)).Elem()
}

func (o PresetAudioCodecOptionsOutput) ToPresetAudioCodecOptionsOutput() PresetAudioCodecOptionsOutput {
	return o
}

func (o PresetAudioCodecOptionsOutput) ToPresetAudioCodecOptionsOutputWithContext(ctx context.Context) PresetAudioCodecOptionsOutput {
	return o
}

func (o PresetAudioCodecOptionsOutput) ToPresetAudioCodecOptionsPtrOutput() PresetAudioCodecOptionsPtrOutput {
	return o.ToPresetAudioCodecOptionsPtrOutputWithContext(context.Background())
}

func (o PresetAudioCodecOptionsOutput) ToPresetAudioCodecOptionsPtrOutputWithContext(ctx context.Context) PresetAudioCodecOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PresetAudioCodecOptions) *PresetAudioCodecOptions {
		return &v
	}).(PresetAudioCodecOptionsPtrOutput)
}

func (o PresetAudioCodecOptionsOutput) BitDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudioCodecOptions) *string { return v.BitDepth }).(pulumi.StringPtrOutput)
}

func (o PresetAudioCodecOptionsOutput) BitOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudioCodecOptions) *string { return v.BitOrder }).(pulumi.StringPtrOutput)
}

func (o PresetAudioCodecOptionsOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudioCodecOptions) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

func (o PresetAudioCodecOptionsOutput) Signed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetAudioCodecOptions) *string { return v.Signed }).(pulumi.StringPtrOutput)
}

type PresetAudioCodecOptionsPtrOutput struct{ *pulumi.OutputState }

func (PresetAudioCodecOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetAudioCodecOptions)(nil)).Elem()
}

func (o PresetAudioCodecOptionsPtrOutput) ToPresetAudioCodecOptionsPtrOutput() PresetAudioCodecOptionsPtrOutput {
	return o
}

func (o PresetAudioCodecOptionsPtrOutput) ToPresetAudioCodecOptionsPtrOutputWithContext(ctx context.Context) PresetAudioCodecOptionsPtrOutput {
	return o
}

func (o PresetAudioCodecOptionsPtrOutput) Elem() PresetAudioCodecOptionsOutput {
	return o.ApplyT(func(v *PresetAudioCodecOptions) PresetAudioCodecOptions {
		if v != nil {
			return *v
		}
		var ret PresetAudioCodecOptions
		return ret
	}).(PresetAudioCodecOptionsOutput)
}

func (o PresetAudioCodecOptionsPtrOutput) BitDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudioCodecOptions) *string {
		if v == nil {
			return nil
		}
		return v.BitDepth
	}).(pulumi.StringPtrOutput)
}

func (o PresetAudioCodecOptionsPtrOutput) BitOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudioCodecOptions) *string {
		if v == nil {
			return nil
		}
		return v.BitOrder
	}).(pulumi.StringPtrOutput)
}

func (o PresetAudioCodecOptionsPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudioCodecOptions) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

func (o PresetAudioCodecOptionsPtrOutput) Signed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetAudioCodecOptions) *string {
		if v == nil {
			return nil
		}
		return v.Signed
	}).(pulumi.StringPtrOutput)
}

type PresetThumbnails struct {
	AspectRatio   *string `pulumi:"aspectRatio"`
	Format        *string `pulumi:"format"`
	Interval      *string `pulumi:"interval"`
	MaxHeight     *string `pulumi:"maxHeight"`
	MaxWidth      *string `pulumi:"maxWidth"`
	PaddingPolicy *string `pulumi:"paddingPolicy"`
	Resolution    *string `pulumi:"resolution"`
	SizingPolicy  *string `pulumi:"sizingPolicy"`
}

// PresetThumbnailsInput is an input type that accepts PresetThumbnailsArgs and PresetThumbnailsOutput values.
// You can construct a concrete instance of `PresetThumbnailsInput` via:
//
//	PresetThumbnailsArgs{...}
type PresetThumbnailsInput interface {
	pulumi.Input

	ToPresetThumbnailsOutput() PresetThumbnailsOutput
	ToPresetThumbnailsOutputWithContext(context.Context) PresetThumbnailsOutput
}

type PresetThumbnailsArgs struct {
	AspectRatio   pulumi.StringPtrInput `pulumi:"aspectRatio"`
	Format        pulumi.StringPtrInput `pulumi:"format"`
	Interval      pulumi.StringPtrInput `pulumi:"interval"`
	MaxHeight     pulumi.StringPtrInput `pulumi:"maxHeight"`
	MaxWidth      pulumi.StringPtrInput `pulumi:"maxWidth"`
	PaddingPolicy pulumi.StringPtrInput `pulumi:"paddingPolicy"`
	Resolution    pulumi.StringPtrInput `pulumi:"resolution"`
	SizingPolicy  pulumi.StringPtrInput `pulumi:"sizingPolicy"`
}

func (PresetThumbnailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetThumbnails)(nil)).Elem()
}

func (i PresetThumbnailsArgs) ToPresetThumbnailsOutput() PresetThumbnailsOutput {
	return i.ToPresetThumbnailsOutputWithContext(context.Background())
}

func (i PresetThumbnailsArgs) ToPresetThumbnailsOutputWithContext(ctx context.Context) PresetThumbnailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetThumbnailsOutput)
}

func (i PresetThumbnailsArgs) ToPresetThumbnailsPtrOutput() PresetThumbnailsPtrOutput {
	return i.ToPresetThumbnailsPtrOutputWithContext(context.Background())
}

func (i PresetThumbnailsArgs) ToPresetThumbnailsPtrOutputWithContext(ctx context.Context) PresetThumbnailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetThumbnailsOutput).ToPresetThumbnailsPtrOutputWithContext(ctx)
}

// PresetThumbnailsPtrInput is an input type that accepts PresetThumbnailsArgs, PresetThumbnailsPtr and PresetThumbnailsPtrOutput values.
// You can construct a concrete instance of `PresetThumbnailsPtrInput` via:
//
//	        PresetThumbnailsArgs{...}
//
//	or:
//
//	        nil
type PresetThumbnailsPtrInput interface {
	pulumi.Input

	ToPresetThumbnailsPtrOutput() PresetThumbnailsPtrOutput
	ToPresetThumbnailsPtrOutputWithContext(context.Context) PresetThumbnailsPtrOutput
}

type presetThumbnailsPtrType PresetThumbnailsArgs

func PresetThumbnailsPtr(v *PresetThumbnailsArgs) PresetThumbnailsPtrInput {
	return (*presetThumbnailsPtrType)(v)
}

func (*presetThumbnailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetThumbnails)(nil)).Elem()
}

func (i *presetThumbnailsPtrType) ToPresetThumbnailsPtrOutput() PresetThumbnailsPtrOutput {
	return i.ToPresetThumbnailsPtrOutputWithContext(context.Background())
}

func (i *presetThumbnailsPtrType) ToPresetThumbnailsPtrOutputWithContext(ctx context.Context) PresetThumbnailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetThumbnailsPtrOutput)
}

type PresetThumbnailsOutput struct{ *pulumi.OutputState }

func (PresetThumbnailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetThumbnails)(nil)).Elem()
}

func (o PresetThumbnailsOutput) ToPresetThumbnailsOutput() PresetThumbnailsOutput {
	return o
}

func (o PresetThumbnailsOutput) ToPresetThumbnailsOutputWithContext(ctx context.Context) PresetThumbnailsOutput {
	return o
}

func (o PresetThumbnailsOutput) ToPresetThumbnailsPtrOutput() PresetThumbnailsPtrOutput {
	return o.ToPresetThumbnailsPtrOutputWithContext(context.Background())
}

func (o PresetThumbnailsOutput) ToPresetThumbnailsPtrOutputWithContext(ctx context.Context) PresetThumbnailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PresetThumbnails) *PresetThumbnails {
		return &v
	}).(PresetThumbnailsPtrOutput)
}

func (o PresetThumbnailsOutput) AspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.AspectRatio }).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsOutput) MaxHeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.MaxHeight }).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsOutput) MaxWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.MaxWidth }).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsOutput) PaddingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.PaddingPolicy }).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsOutput) SizingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetThumbnails) *string { return v.SizingPolicy }).(pulumi.StringPtrOutput)
}

type PresetThumbnailsPtrOutput struct{ *pulumi.OutputState }

func (PresetThumbnailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetThumbnails)(nil)).Elem()
}

func (o PresetThumbnailsPtrOutput) ToPresetThumbnailsPtrOutput() PresetThumbnailsPtrOutput {
	return o
}

func (o PresetThumbnailsPtrOutput) ToPresetThumbnailsPtrOutputWithContext(ctx context.Context) PresetThumbnailsPtrOutput {
	return o
}

func (o PresetThumbnailsPtrOutput) Elem() PresetThumbnailsOutput {
	return o.ApplyT(func(v *PresetThumbnails) PresetThumbnails {
		if v != nil {
			return *v
		}
		var ret PresetThumbnails
		return ret
	}).(PresetThumbnailsOutput)
}

func (o PresetThumbnailsPtrOutput) AspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.AspectRatio
	}).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsPtrOutput) MaxHeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.MaxHeight
	}).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsPtrOutput) MaxWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.MaxWidth
	}).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsPtrOutput) PaddingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.PaddingPolicy
	}).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.Resolution
	}).(pulumi.StringPtrOutput)
}

func (o PresetThumbnailsPtrOutput) SizingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetThumbnails) *string {
		if v == nil {
			return nil
		}
		return v.SizingPolicy
	}).(pulumi.StringPtrOutput)
}

type PresetVideo struct {
	AspectRatio        *string `pulumi:"aspectRatio"`
	BitRate            *string `pulumi:"bitRate"`
	Codec              *string `pulumi:"codec"`
	DisplayAspectRatio *string `pulumi:"displayAspectRatio"`
	FixedGop           *string `pulumi:"fixedGop"`
	FrameRate          *string `pulumi:"frameRate"`
	KeyframesMaxDist   *string `pulumi:"keyframesMaxDist"`
	MaxFrameRate       *string `pulumi:"maxFrameRate"`
	MaxHeight          *string `pulumi:"maxHeight"`
	MaxWidth           *string `pulumi:"maxWidth"`
	PaddingPolicy      *string `pulumi:"paddingPolicy"`
	Resolution         *string `pulumi:"resolution"`
	SizingPolicy       *string `pulumi:"sizingPolicy"`
}

// PresetVideoInput is an input type that accepts PresetVideoArgs and PresetVideoOutput values.
// You can construct a concrete instance of `PresetVideoInput` via:
//
//	PresetVideoArgs{...}
type PresetVideoInput interface {
	pulumi.Input

	ToPresetVideoOutput() PresetVideoOutput
	ToPresetVideoOutputWithContext(context.Context) PresetVideoOutput
}

type PresetVideoArgs struct {
	AspectRatio        pulumi.StringPtrInput `pulumi:"aspectRatio"`
	BitRate            pulumi.StringPtrInput `pulumi:"bitRate"`
	Codec              pulumi.StringPtrInput `pulumi:"codec"`
	DisplayAspectRatio pulumi.StringPtrInput `pulumi:"displayAspectRatio"`
	FixedGop           pulumi.StringPtrInput `pulumi:"fixedGop"`
	FrameRate          pulumi.StringPtrInput `pulumi:"frameRate"`
	KeyframesMaxDist   pulumi.StringPtrInput `pulumi:"keyframesMaxDist"`
	MaxFrameRate       pulumi.StringPtrInput `pulumi:"maxFrameRate"`
	MaxHeight          pulumi.StringPtrInput `pulumi:"maxHeight"`
	MaxWidth           pulumi.StringPtrInput `pulumi:"maxWidth"`
	PaddingPolicy      pulumi.StringPtrInput `pulumi:"paddingPolicy"`
	Resolution         pulumi.StringPtrInput `pulumi:"resolution"`
	SizingPolicy       pulumi.StringPtrInput `pulumi:"sizingPolicy"`
}

func (PresetVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetVideo)(nil)).Elem()
}

func (i PresetVideoArgs) ToPresetVideoOutput() PresetVideoOutput {
	return i.ToPresetVideoOutputWithContext(context.Background())
}

func (i PresetVideoArgs) ToPresetVideoOutputWithContext(ctx context.Context) PresetVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetVideoOutput)
}

func (i PresetVideoArgs) ToPresetVideoPtrOutput() PresetVideoPtrOutput {
	return i.ToPresetVideoPtrOutputWithContext(context.Background())
}

func (i PresetVideoArgs) ToPresetVideoPtrOutputWithContext(ctx context.Context) PresetVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetVideoOutput).ToPresetVideoPtrOutputWithContext(ctx)
}

// PresetVideoPtrInput is an input type that accepts PresetVideoArgs, PresetVideoPtr and PresetVideoPtrOutput values.
// You can construct a concrete instance of `PresetVideoPtrInput` via:
//
//	        PresetVideoArgs{...}
//
//	or:
//
//	        nil
type PresetVideoPtrInput interface {
	pulumi.Input

	ToPresetVideoPtrOutput() PresetVideoPtrOutput
	ToPresetVideoPtrOutputWithContext(context.Context) PresetVideoPtrOutput
}

type presetVideoPtrType PresetVideoArgs

func PresetVideoPtr(v *PresetVideoArgs) PresetVideoPtrInput {
	return (*presetVideoPtrType)(v)
}

func (*presetVideoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetVideo)(nil)).Elem()
}

func (i *presetVideoPtrType) ToPresetVideoPtrOutput() PresetVideoPtrOutput {
	return i.ToPresetVideoPtrOutputWithContext(context.Background())
}

func (i *presetVideoPtrType) ToPresetVideoPtrOutputWithContext(ctx context.Context) PresetVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetVideoPtrOutput)
}

type PresetVideoOutput struct{ *pulumi.OutputState }

func (PresetVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetVideo)(nil)).Elem()
}

func (o PresetVideoOutput) ToPresetVideoOutput() PresetVideoOutput {
	return o
}

func (o PresetVideoOutput) ToPresetVideoOutputWithContext(ctx context.Context) PresetVideoOutput {
	return o
}

func (o PresetVideoOutput) ToPresetVideoPtrOutput() PresetVideoPtrOutput {
	return o.ToPresetVideoPtrOutputWithContext(context.Background())
}

func (o PresetVideoOutput) ToPresetVideoPtrOutputWithContext(ctx context.Context) PresetVideoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PresetVideo) *PresetVideo {
		return &v
	}).(PresetVideoPtrOutput)
}

func (o PresetVideoOutput) AspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.AspectRatio }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) BitRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.BitRate }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) Codec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.Codec }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) DisplayAspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.DisplayAspectRatio }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) FixedGop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.FixedGop }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) FrameRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.FrameRate }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) KeyframesMaxDist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.KeyframesMaxDist }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) MaxFrameRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.MaxFrameRate }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) MaxHeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.MaxHeight }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) MaxWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.MaxWidth }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) PaddingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.PaddingPolicy }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.Resolution }).(pulumi.StringPtrOutput)
}

func (o PresetVideoOutput) SizingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideo) *string { return v.SizingPolicy }).(pulumi.StringPtrOutput)
}

type PresetVideoPtrOutput struct{ *pulumi.OutputState }

func (PresetVideoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PresetVideo)(nil)).Elem()
}

func (o PresetVideoPtrOutput) ToPresetVideoPtrOutput() PresetVideoPtrOutput {
	return o
}

func (o PresetVideoPtrOutput) ToPresetVideoPtrOutputWithContext(ctx context.Context) PresetVideoPtrOutput {
	return o
}

func (o PresetVideoPtrOutput) Elem() PresetVideoOutput {
	return o.ApplyT(func(v *PresetVideo) PresetVideo {
		if v != nil {
			return *v
		}
		var ret PresetVideo
		return ret
	}).(PresetVideoOutput)
}

func (o PresetVideoPtrOutput) AspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.AspectRatio
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) BitRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.BitRate
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) Codec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.Codec
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) DisplayAspectRatio() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.DisplayAspectRatio
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) FixedGop() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.FixedGop
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) FrameRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.FrameRate
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) KeyframesMaxDist() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.KeyframesMaxDist
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) MaxFrameRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.MaxFrameRate
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) MaxHeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.MaxHeight
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) MaxWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.MaxWidth
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) PaddingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.PaddingPolicy
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.Resolution
	}).(pulumi.StringPtrOutput)
}

func (o PresetVideoPtrOutput) SizingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PresetVideo) *string {
		if v == nil {
			return nil
		}
		return v.SizingPolicy
	}).(pulumi.StringPtrOutput)
}

type PresetVideoWatermark struct {
	HorizontalAlign  *string `pulumi:"horizontalAlign"`
	HorizontalOffset *string `pulumi:"horizontalOffset"`
	Id               *string `pulumi:"id"`
	MaxHeight        *string `pulumi:"maxHeight"`
	MaxWidth         *string `pulumi:"maxWidth"`
	Opacity          *string `pulumi:"opacity"`
	SizingPolicy     *string `pulumi:"sizingPolicy"`
	Target           *string `pulumi:"target"`
	VerticalAlign    *string `pulumi:"verticalAlign"`
	VerticalOffset   *string `pulumi:"verticalOffset"`
}

// PresetVideoWatermarkInput is an input type that accepts PresetVideoWatermarkArgs and PresetVideoWatermarkOutput values.
// You can construct a concrete instance of `PresetVideoWatermarkInput` via:
//
//	PresetVideoWatermarkArgs{...}
type PresetVideoWatermarkInput interface {
	pulumi.Input

	ToPresetVideoWatermarkOutput() PresetVideoWatermarkOutput
	ToPresetVideoWatermarkOutputWithContext(context.Context) PresetVideoWatermarkOutput
}

type PresetVideoWatermarkArgs struct {
	HorizontalAlign  pulumi.StringPtrInput `pulumi:"horizontalAlign"`
	HorizontalOffset pulumi.StringPtrInput `pulumi:"horizontalOffset"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	MaxHeight        pulumi.StringPtrInput `pulumi:"maxHeight"`
	MaxWidth         pulumi.StringPtrInput `pulumi:"maxWidth"`
	Opacity          pulumi.StringPtrInput `pulumi:"opacity"`
	SizingPolicy     pulumi.StringPtrInput `pulumi:"sizingPolicy"`
	Target           pulumi.StringPtrInput `pulumi:"target"`
	VerticalAlign    pulumi.StringPtrInput `pulumi:"verticalAlign"`
	VerticalOffset   pulumi.StringPtrInput `pulumi:"verticalOffset"`
}

func (PresetVideoWatermarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetVideoWatermark)(nil)).Elem()
}

func (i PresetVideoWatermarkArgs) ToPresetVideoWatermarkOutput() PresetVideoWatermarkOutput {
	return i.ToPresetVideoWatermarkOutputWithContext(context.Background())
}

func (i PresetVideoWatermarkArgs) ToPresetVideoWatermarkOutputWithContext(ctx context.Context) PresetVideoWatermarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetVideoWatermarkOutput)
}

// PresetVideoWatermarkArrayInput is an input type that accepts PresetVideoWatermarkArray and PresetVideoWatermarkArrayOutput values.
// You can construct a concrete instance of `PresetVideoWatermarkArrayInput` via:
//
//	PresetVideoWatermarkArray{ PresetVideoWatermarkArgs{...} }
type PresetVideoWatermarkArrayInput interface {
	pulumi.Input

	ToPresetVideoWatermarkArrayOutput() PresetVideoWatermarkArrayOutput
	ToPresetVideoWatermarkArrayOutputWithContext(context.Context) PresetVideoWatermarkArrayOutput
}

type PresetVideoWatermarkArray []PresetVideoWatermarkInput

func (PresetVideoWatermarkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PresetVideoWatermark)(nil)).Elem()
}

func (i PresetVideoWatermarkArray) ToPresetVideoWatermarkArrayOutput() PresetVideoWatermarkArrayOutput {
	return i.ToPresetVideoWatermarkArrayOutputWithContext(context.Background())
}

func (i PresetVideoWatermarkArray) ToPresetVideoWatermarkArrayOutputWithContext(ctx context.Context) PresetVideoWatermarkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PresetVideoWatermarkArrayOutput)
}

type PresetVideoWatermarkOutput struct{ *pulumi.OutputState }

func (PresetVideoWatermarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PresetVideoWatermark)(nil)).Elem()
}

func (o PresetVideoWatermarkOutput) ToPresetVideoWatermarkOutput() PresetVideoWatermarkOutput {
	return o
}

func (o PresetVideoWatermarkOutput) ToPresetVideoWatermarkOutputWithContext(ctx context.Context) PresetVideoWatermarkOutput {
	return o
}

func (o PresetVideoWatermarkOutput) HorizontalAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.HorizontalAlign }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) HorizontalOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.HorizontalOffset }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) MaxHeight() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.MaxHeight }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) MaxWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.MaxWidth }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) Opacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.Opacity }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) SizingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.SizingPolicy }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) VerticalAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.VerticalAlign }).(pulumi.StringPtrOutput)
}

func (o PresetVideoWatermarkOutput) VerticalOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PresetVideoWatermark) *string { return v.VerticalOffset }).(pulumi.StringPtrOutput)
}

type PresetVideoWatermarkArrayOutput struct{ *pulumi.OutputState }

func (PresetVideoWatermarkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PresetVideoWatermark)(nil)).Elem()
}

func (o PresetVideoWatermarkArrayOutput) ToPresetVideoWatermarkArrayOutput() PresetVideoWatermarkArrayOutput {
	return o
}

func (o PresetVideoWatermarkArrayOutput) ToPresetVideoWatermarkArrayOutputWithContext(ctx context.Context) PresetVideoWatermarkArrayOutput {
	return o
}

func (o PresetVideoWatermarkArrayOutput) Index(i pulumi.IntInput) PresetVideoWatermarkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PresetVideoWatermark {
		return vs[0].([]PresetVideoWatermark)[vs[1].(int)]
	}).(PresetVideoWatermarkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineContentConfigInput)(nil)).Elem(), PipelineContentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineContentConfigPtrInput)(nil)).Elem(), PipelineContentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineContentConfigPermissionInput)(nil)).Elem(), PipelineContentConfigPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineContentConfigPermissionArrayInput)(nil)).Elem(), PipelineContentConfigPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineNotificationsInput)(nil)).Elem(), PipelineNotificationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineNotificationsPtrInput)(nil)).Elem(), PipelineNotificationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineThumbnailConfigInput)(nil)).Elem(), PipelineThumbnailConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineThumbnailConfigPtrInput)(nil)).Elem(), PipelineThumbnailConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineThumbnailConfigPermissionInput)(nil)).Elem(), PipelineThumbnailConfigPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineThumbnailConfigPermissionArrayInput)(nil)).Elem(), PipelineThumbnailConfigPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetAudioInput)(nil)).Elem(), PresetAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetAudioPtrInput)(nil)).Elem(), PresetAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetAudioCodecOptionsInput)(nil)).Elem(), PresetAudioCodecOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetAudioCodecOptionsPtrInput)(nil)).Elem(), PresetAudioCodecOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetThumbnailsInput)(nil)).Elem(), PresetThumbnailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetThumbnailsPtrInput)(nil)).Elem(), PresetThumbnailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetVideoInput)(nil)).Elem(), PresetVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetVideoPtrInput)(nil)).Elem(), PresetVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetVideoWatermarkInput)(nil)).Elem(), PresetVideoWatermarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PresetVideoWatermarkArrayInput)(nil)).Elem(), PresetVideoWatermarkArray{})
	pulumi.RegisterOutputType(PipelineContentConfigOutput{})
	pulumi.RegisterOutputType(PipelineContentConfigPtrOutput{})
	pulumi.RegisterOutputType(PipelineContentConfigPermissionOutput{})
	pulumi.RegisterOutputType(PipelineContentConfigPermissionArrayOutput{})
	pulumi.RegisterOutputType(PipelineNotificationsOutput{})
	pulumi.RegisterOutputType(PipelineNotificationsPtrOutput{})
	pulumi.RegisterOutputType(PipelineThumbnailConfigOutput{})
	pulumi.RegisterOutputType(PipelineThumbnailConfigPtrOutput{})
	pulumi.RegisterOutputType(PipelineThumbnailConfigPermissionOutput{})
	pulumi.RegisterOutputType(PipelineThumbnailConfigPermissionArrayOutput{})
	pulumi.RegisterOutputType(PresetAudioOutput{})
	pulumi.RegisterOutputType(PresetAudioPtrOutput{})
	pulumi.RegisterOutputType(PresetAudioCodecOptionsOutput{})
	pulumi.RegisterOutputType(PresetAudioCodecOptionsPtrOutput{})
	pulumi.RegisterOutputType(PresetThumbnailsOutput{})
	pulumi.RegisterOutputType(PresetThumbnailsPtrOutput{})
	pulumi.RegisterOutputType(PresetVideoOutput{})
	pulumi.RegisterOutputType(PresetVideoPtrOutput{})
	pulumi.RegisterOutputType(PresetVideoWatermarkOutput{})
	pulumi.RegisterOutputType(PresetVideoWatermarkArrayOutput{})
}
