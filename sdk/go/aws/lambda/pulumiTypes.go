// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AliasRoutingConfig struct {
	// A map that defines the proportion of events that should be sent to different versions of a lambda function.
	AdditionalVersionWeights map[string]float64 `pulumi:"additionalVersionWeights"`
}

// AliasRoutingConfigInput is an input type that accepts AliasRoutingConfigArgs and AliasRoutingConfigOutput values.
// You can construct a concrete instance of `AliasRoutingConfigInput` via:
//
//          AliasRoutingConfigArgs{...}
type AliasRoutingConfigInput interface {
	pulumi.Input

	ToAliasRoutingConfigOutput() AliasRoutingConfigOutput
	ToAliasRoutingConfigOutputWithContext(context.Context) AliasRoutingConfigOutput
}

type AliasRoutingConfigArgs struct {
	// A map that defines the proportion of events that should be sent to different versions of a lambda function.
	AdditionalVersionWeights pulumi.Float64MapInput `pulumi:"additionalVersionWeights"`
}

func (AliasRoutingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingConfig)(nil)).Elem()
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigOutput() AliasRoutingConfigOutput {
	return i.ToAliasRoutingConfigOutputWithContext(context.Background())
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigOutputWithContext(ctx context.Context) AliasRoutingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigOutput)
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return i.ToAliasRoutingConfigPtrOutputWithContext(context.Background())
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigOutput).ToAliasRoutingConfigPtrOutputWithContext(ctx)
}

// AliasRoutingConfigPtrInput is an input type that accepts AliasRoutingConfigArgs, AliasRoutingConfigPtr and AliasRoutingConfigPtrOutput values.
// You can construct a concrete instance of `AliasRoutingConfigPtrInput` via:
//
//          AliasRoutingConfigArgs{...}
//
//  or:
//
//          nil
type AliasRoutingConfigPtrInput interface {
	pulumi.Input

	ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput
	ToAliasRoutingConfigPtrOutputWithContext(context.Context) AliasRoutingConfigPtrOutput
}

type aliasRoutingConfigPtrType AliasRoutingConfigArgs

func AliasRoutingConfigPtr(v *AliasRoutingConfigArgs) AliasRoutingConfigPtrInput {
	return (*aliasRoutingConfigPtrType)(v)
}

func (*aliasRoutingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasRoutingConfig)(nil)).Elem()
}

func (i *aliasRoutingConfigPtrType) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return i.ToAliasRoutingConfigPtrOutputWithContext(context.Background())
}

func (i *aliasRoutingConfigPtrType) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigPtrOutput)
}

type AliasRoutingConfigOutput struct{ *pulumi.OutputState }

func (AliasRoutingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingConfig)(nil)).Elem()
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigOutput() AliasRoutingConfigOutput {
	return o
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigOutputWithContext(ctx context.Context) AliasRoutingConfigOutput {
	return o
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return o.ToAliasRoutingConfigPtrOutputWithContext(context.Background())
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AliasRoutingConfig) *AliasRoutingConfig {
		return &v
	}).(AliasRoutingConfigPtrOutput)
}

// A map that defines the proportion of events that should be sent to different versions of a lambda function.
func (o AliasRoutingConfigOutput) AdditionalVersionWeights() pulumi.Float64MapOutput {
	return o.ApplyT(func(v AliasRoutingConfig) map[string]float64 { return v.AdditionalVersionWeights }).(pulumi.Float64MapOutput)
}

type AliasRoutingConfigPtrOutput struct{ *pulumi.OutputState }

func (AliasRoutingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasRoutingConfig)(nil)).Elem()
}

func (o AliasRoutingConfigPtrOutput) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return o
}

func (o AliasRoutingConfigPtrOutput) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return o
}

func (o AliasRoutingConfigPtrOutput) Elem() AliasRoutingConfigOutput {
	return o.ApplyT(func(v *AliasRoutingConfig) AliasRoutingConfig {
		if v != nil {
			return *v
		}
		var ret AliasRoutingConfig
		return ret
	}).(AliasRoutingConfigOutput)
}

// A map that defines the proportion of events that should be sent to different versions of a lambda function.
func (o AliasRoutingConfigPtrOutput) AdditionalVersionWeights() pulumi.Float64MapOutput {
	return o.ApplyT(func(v *AliasRoutingConfig) map[string]float64 {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionWeights
	}).(pulumi.Float64MapOutput)
}

type CodeSigningConfigAllowedPublishers struct {
	// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	SigningProfileVersionArns []string `pulumi:"signingProfileVersionArns"`
}

// CodeSigningConfigAllowedPublishersInput is an input type that accepts CodeSigningConfigAllowedPublishersArgs and CodeSigningConfigAllowedPublishersOutput values.
// You can construct a concrete instance of `CodeSigningConfigAllowedPublishersInput` via:
//
//          CodeSigningConfigAllowedPublishersArgs{...}
type CodeSigningConfigAllowedPublishersInput interface {
	pulumi.Input

	ToCodeSigningConfigAllowedPublishersOutput() CodeSigningConfigAllowedPublishersOutput
	ToCodeSigningConfigAllowedPublishersOutputWithContext(context.Context) CodeSigningConfigAllowedPublishersOutput
}

type CodeSigningConfigAllowedPublishersArgs struct {
	// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	SigningProfileVersionArns pulumi.StringArrayInput `pulumi:"signingProfileVersionArns"`
}

func (CodeSigningConfigAllowedPublishersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersOutput() CodeSigningConfigAllowedPublishersOutput {
	return i.ToCodeSigningConfigAllowedPublishersOutputWithContext(context.Background())
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigAllowedPublishersOutput)
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return i.ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Background())
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigAllowedPublishersOutput).ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx)
}

// CodeSigningConfigAllowedPublishersPtrInput is an input type that accepts CodeSigningConfigAllowedPublishersArgs, CodeSigningConfigAllowedPublishersPtr and CodeSigningConfigAllowedPublishersPtrOutput values.
// You can construct a concrete instance of `CodeSigningConfigAllowedPublishersPtrInput` via:
//
//          CodeSigningConfigAllowedPublishersArgs{...}
//
//  or:
//
//          nil
type CodeSigningConfigAllowedPublishersPtrInput interface {
	pulumi.Input

	ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput
	ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Context) CodeSigningConfigAllowedPublishersPtrOutput
}

type codeSigningConfigAllowedPublishersPtrType CodeSigningConfigAllowedPublishersArgs

func CodeSigningConfigAllowedPublishersPtr(v *CodeSigningConfigAllowedPublishersArgs) CodeSigningConfigAllowedPublishersPtrInput {
	return (*codeSigningConfigAllowedPublishersPtrType)(v)
}

func (*codeSigningConfigAllowedPublishersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (i *codeSigningConfigAllowedPublishersPtrType) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return i.ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Background())
}

func (i *codeSigningConfigAllowedPublishersPtrType) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigAllowedPublishersPtrOutput)
}

type CodeSigningConfigAllowedPublishersOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigAllowedPublishersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersOutput() CodeSigningConfigAllowedPublishersOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return o.ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Background())
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeSigningConfigAllowedPublishers) *CodeSigningConfigAllowedPublishers {
		return &v
	}).(CodeSigningConfigAllowedPublishersPtrOutput)
}

// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
func (o CodeSigningConfigAllowedPublishersOutput) SigningProfileVersionArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CodeSigningConfigAllowedPublishers) []string { return v.SigningProfileVersionArns }).(pulumi.StringArrayOutput)
}

type CodeSigningConfigAllowedPublishersPtrOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigAllowedPublishersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (o CodeSigningConfigAllowedPublishersPtrOutput) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersPtrOutput) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersPtrOutput) Elem() CodeSigningConfigAllowedPublishersOutput {
	return o.ApplyT(func(v *CodeSigningConfigAllowedPublishers) CodeSigningConfigAllowedPublishers {
		if v != nil {
			return *v
		}
		var ret CodeSigningConfigAllowedPublishers
		return ret
	}).(CodeSigningConfigAllowedPublishersOutput)
}

// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
func (o CodeSigningConfigAllowedPublishersPtrOutput) SigningProfileVersionArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CodeSigningConfigAllowedPublishers) []string {
		if v == nil {
			return nil
		}
		return v.SigningProfileVersionArns
	}).(pulumi.StringArrayOutput)
}

type CodeSigningConfigPolicies struct {
	// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
	UntrustedArtifactOnDeployment string `pulumi:"untrustedArtifactOnDeployment"`
}

// CodeSigningConfigPoliciesInput is an input type that accepts CodeSigningConfigPoliciesArgs and CodeSigningConfigPoliciesOutput values.
// You can construct a concrete instance of `CodeSigningConfigPoliciesInput` via:
//
//          CodeSigningConfigPoliciesArgs{...}
type CodeSigningConfigPoliciesInput interface {
	pulumi.Input

	ToCodeSigningConfigPoliciesOutput() CodeSigningConfigPoliciesOutput
	ToCodeSigningConfigPoliciesOutputWithContext(context.Context) CodeSigningConfigPoliciesOutput
}

type CodeSigningConfigPoliciesArgs struct {
	// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
	UntrustedArtifactOnDeployment pulumi.StringInput `pulumi:"untrustedArtifactOnDeployment"`
}

func (CodeSigningConfigPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigPolicies)(nil)).Elem()
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesOutput() CodeSigningConfigPoliciesOutput {
	return i.ToCodeSigningConfigPoliciesOutputWithContext(context.Background())
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigPoliciesOutput)
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return i.ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Background())
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigPoliciesOutput).ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx)
}

// CodeSigningConfigPoliciesPtrInput is an input type that accepts CodeSigningConfigPoliciesArgs, CodeSigningConfigPoliciesPtr and CodeSigningConfigPoliciesPtrOutput values.
// You can construct a concrete instance of `CodeSigningConfigPoliciesPtrInput` via:
//
//          CodeSigningConfigPoliciesArgs{...}
//
//  or:
//
//          nil
type CodeSigningConfigPoliciesPtrInput interface {
	pulumi.Input

	ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput
	ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Context) CodeSigningConfigPoliciesPtrOutput
}

type codeSigningConfigPoliciesPtrType CodeSigningConfigPoliciesArgs

func CodeSigningConfigPoliciesPtr(v *CodeSigningConfigPoliciesArgs) CodeSigningConfigPoliciesPtrInput {
	return (*codeSigningConfigPoliciesPtrType)(v)
}

func (*codeSigningConfigPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigPolicies)(nil)).Elem()
}

func (i *codeSigningConfigPoliciesPtrType) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return i.ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Background())
}

func (i *codeSigningConfigPoliciesPtrType) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigPoliciesPtrOutput)
}

type CodeSigningConfigPoliciesOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigPolicies)(nil)).Elem()
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesOutput() CodeSigningConfigPoliciesOutput {
	return o
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesOutput {
	return o
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return o.ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Background())
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeSigningConfigPolicies) *CodeSigningConfigPolicies {
		return &v
	}).(CodeSigningConfigPoliciesPtrOutput)
}

// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
func (o CodeSigningConfigPoliciesOutput) UntrustedArtifactOnDeployment() pulumi.StringOutput {
	return o.ApplyT(func(v CodeSigningConfigPolicies) string { return v.UntrustedArtifactOnDeployment }).(pulumi.StringOutput)
}

type CodeSigningConfigPoliciesPtrOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigPolicies)(nil)).Elem()
}

func (o CodeSigningConfigPoliciesPtrOutput) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return o
}

func (o CodeSigningConfigPoliciesPtrOutput) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return o
}

func (o CodeSigningConfigPoliciesPtrOutput) Elem() CodeSigningConfigPoliciesOutput {
	return o.ApplyT(func(v *CodeSigningConfigPolicies) CodeSigningConfigPolicies {
		if v != nil {
			return *v
		}
		var ret CodeSigningConfigPolicies
		return ret
	}).(CodeSigningConfigPoliciesOutput)
}

// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
func (o CodeSigningConfigPoliciesPtrOutput) UntrustedArtifactOnDeployment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeSigningConfigPolicies) *string {
		if v == nil {
			return nil
		}
		return &v.UntrustedArtifactOnDeployment
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingDestinationConfig struct {
	// The destination configuration for failed invocations. Detailed below.
	OnFailure *EventSourceMappingDestinationConfigOnFailure `pulumi:"onFailure"`
}

// EventSourceMappingDestinationConfigInput is an input type that accepts EventSourceMappingDestinationConfigArgs and EventSourceMappingDestinationConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigInput` via:
//
//          EventSourceMappingDestinationConfigArgs{...}
type EventSourceMappingDestinationConfigInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigOutput() EventSourceMappingDestinationConfigOutput
	ToEventSourceMappingDestinationConfigOutputWithContext(context.Context) EventSourceMappingDestinationConfigOutput
}

type EventSourceMappingDestinationConfigArgs struct {
	// The destination configuration for failed invocations. Detailed below.
	OnFailure EventSourceMappingDestinationConfigOnFailurePtrInput `pulumi:"onFailure"`
}

func (EventSourceMappingDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigOutput() EventSourceMappingDestinationConfigOutput {
	return i.ToEventSourceMappingDestinationConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOutput)
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return i.ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOutput).ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingDestinationConfigPtrInput is an input type that accepts EventSourceMappingDestinationConfigArgs, EventSourceMappingDestinationConfigPtr and EventSourceMappingDestinationConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigPtrInput` via:
//
//          EventSourceMappingDestinationConfigArgs{...}
//
//  or:
//
//          nil
type EventSourceMappingDestinationConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput
	ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Context) EventSourceMappingDestinationConfigPtrOutput
}

type eventSourceMappingDestinationConfigPtrType EventSourceMappingDestinationConfigArgs

func EventSourceMappingDestinationConfigPtr(v *EventSourceMappingDestinationConfigArgs) EventSourceMappingDestinationConfigPtrInput {
	return (*eventSourceMappingDestinationConfigPtrType)(v)
}

func (*eventSourceMappingDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (i *eventSourceMappingDestinationConfigPtrType) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return i.ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingDestinationConfigPtrType) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigPtrOutput)
}

type EventSourceMappingDestinationConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigOutput() EventSourceMappingDestinationConfigOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return o.ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingDestinationConfig) *EventSourceMappingDestinationConfig {
		return &v
	}).(EventSourceMappingDestinationConfigPtrOutput)
}

// The destination configuration for failed invocations. Detailed below.
func (o EventSourceMappingDestinationConfigOutput) OnFailure() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v EventSourceMappingDestinationConfig) *EventSourceMappingDestinationConfigOnFailure {
		return v.OnFailure
	}).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

type EventSourceMappingDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigPtrOutput) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigPtrOutput) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigPtrOutput) Elem() EventSourceMappingDestinationConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfig) EventSourceMappingDestinationConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingDestinationConfig
		return ret
	}).(EventSourceMappingDestinationConfigOutput)
}

// The destination configuration for failed invocations. Detailed below.
func (o EventSourceMappingDestinationConfigPtrOutput) OnFailure() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfig) *EventSourceMappingDestinationConfigOnFailure {
		if v == nil {
			return nil
		}
		return v.OnFailure
	}).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

type EventSourceMappingDestinationConfigOnFailure struct {
	// The Amazon Resource Name (ARN) of the destination resource.
	DestinationArn string `pulumi:"destinationArn"`
}

// EventSourceMappingDestinationConfigOnFailureInput is an input type that accepts EventSourceMappingDestinationConfigOnFailureArgs and EventSourceMappingDestinationConfigOnFailureOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigOnFailureInput` via:
//
//          EventSourceMappingDestinationConfigOnFailureArgs{...}
type EventSourceMappingDestinationConfigOnFailureInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigOnFailureOutput() EventSourceMappingDestinationConfigOnFailureOutput
	ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(context.Context) EventSourceMappingDestinationConfigOnFailureOutput
}

type EventSourceMappingDestinationConfigOnFailureArgs struct {
	// The Amazon Resource Name (ARN) of the destination resource.
	DestinationArn pulumi.StringInput `pulumi:"destinationArn"`
}

func (EventSourceMappingDestinationConfigOnFailureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailureOutput() EventSourceMappingDestinationConfigOnFailureOutput {
	return i.ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOnFailureOutput)
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return i.ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOnFailureOutput).ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx)
}

// EventSourceMappingDestinationConfigOnFailurePtrInput is an input type that accepts EventSourceMappingDestinationConfigOnFailureArgs, EventSourceMappingDestinationConfigOnFailurePtr and EventSourceMappingDestinationConfigOnFailurePtrOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigOnFailurePtrInput` via:
//
//          EventSourceMappingDestinationConfigOnFailureArgs{...}
//
//  or:
//
//          nil
type EventSourceMappingDestinationConfigOnFailurePtrInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput
	ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput
}

type eventSourceMappingDestinationConfigOnFailurePtrType EventSourceMappingDestinationConfigOnFailureArgs

func EventSourceMappingDestinationConfigOnFailurePtr(v *EventSourceMappingDestinationConfigOnFailureArgs) EventSourceMappingDestinationConfigOnFailurePtrInput {
	return (*eventSourceMappingDestinationConfigOnFailurePtrType)(v)
}

func (*eventSourceMappingDestinationConfigOnFailurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (i *eventSourceMappingDestinationConfigOnFailurePtrType) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return i.ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingDestinationConfigOnFailurePtrType) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

type EventSourceMappingDestinationConfigOnFailureOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigOnFailureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailureOutput() EventSourceMappingDestinationConfigOnFailureOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailureOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingDestinationConfigOnFailure) *EventSourceMappingDestinationConfigOnFailure {
		return &v
	}).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

// The Amazon Resource Name (ARN) of the destination resource.
func (o EventSourceMappingDestinationConfigOnFailureOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceMappingDestinationConfigOnFailure) string { return v.DestinationArn }).(pulumi.StringOutput)
}

type EventSourceMappingDestinationConfigOnFailurePtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigOnFailurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) Elem() EventSourceMappingDestinationConfigOnFailureOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfigOnFailure) EventSourceMappingDestinationConfigOnFailure {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingDestinationConfigOnFailure
		return ret
	}).(EventSourceMappingDestinationConfigOnFailureOutput)
}

// The Amazon Resource Name (ARN) of the destination resource.
func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfigOnFailure) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingFilterCriteria struct {
	// A set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. Detailed below.
	Filters []EventSourceMappingFilterCriteriaFilter `pulumi:"filters"`
}

// EventSourceMappingFilterCriteriaInput is an input type that accepts EventSourceMappingFilterCriteriaArgs and EventSourceMappingFilterCriteriaOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaInput` via:
//
//          EventSourceMappingFilterCriteriaArgs{...}
type EventSourceMappingFilterCriteriaInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaOutput() EventSourceMappingFilterCriteriaOutput
	ToEventSourceMappingFilterCriteriaOutputWithContext(context.Context) EventSourceMappingFilterCriteriaOutput
}

type EventSourceMappingFilterCriteriaArgs struct {
	// A set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. Detailed below.
	Filters EventSourceMappingFilterCriteriaFilterArrayInput `pulumi:"filters"`
}

func (EventSourceMappingFilterCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaOutput() EventSourceMappingFilterCriteriaOutput {
	return i.ToEventSourceMappingFilterCriteriaOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaOutput)
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return i.ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaOutput).ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx)
}

// EventSourceMappingFilterCriteriaPtrInput is an input type that accepts EventSourceMappingFilterCriteriaArgs, EventSourceMappingFilterCriteriaPtr and EventSourceMappingFilterCriteriaPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaPtrInput` via:
//
//          EventSourceMappingFilterCriteriaArgs{...}
//
//  or:
//
//          nil
type EventSourceMappingFilterCriteriaPtrInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput
	ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Context) EventSourceMappingFilterCriteriaPtrOutput
}

type eventSourceMappingFilterCriteriaPtrType EventSourceMappingFilterCriteriaArgs

func EventSourceMappingFilterCriteriaPtr(v *EventSourceMappingFilterCriteriaArgs) EventSourceMappingFilterCriteriaPtrInput {
	return (*eventSourceMappingFilterCriteriaPtrType)(v)
}

func (*eventSourceMappingFilterCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (i *eventSourceMappingFilterCriteriaPtrType) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return i.ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingFilterCriteriaPtrType) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaPtrOutput)
}

type EventSourceMappingFilterCriteriaOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaOutput() EventSourceMappingFilterCriteriaOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return o.ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingFilterCriteria) *EventSourceMappingFilterCriteria {
		return &v
	}).(EventSourceMappingFilterCriteriaPtrOutput)
}

// A set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. Detailed below.
func (o EventSourceMappingFilterCriteriaOutput) Filters() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o.ApplyT(func(v EventSourceMappingFilterCriteria) []EventSourceMappingFilterCriteriaFilter { return v.Filters }).(EventSourceMappingFilterCriteriaFilterArrayOutput)
}

type EventSourceMappingFilterCriteriaPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaPtrOutput) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaPtrOutput) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaPtrOutput) Elem() EventSourceMappingFilterCriteriaOutput {
	return o.ApplyT(func(v *EventSourceMappingFilterCriteria) EventSourceMappingFilterCriteria {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingFilterCriteria
		return ret
	}).(EventSourceMappingFilterCriteriaOutput)
}

// A set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. Detailed below.
func (o EventSourceMappingFilterCriteriaPtrOutput) Filters() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o.ApplyT(func(v *EventSourceMappingFilterCriteria) []EventSourceMappingFilterCriteriaFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(EventSourceMappingFilterCriteriaFilterArrayOutput)
}

type EventSourceMappingFilterCriteriaFilter struct {
	// A filter pattern up to 4096 characters. See [Filter Rule Syntax](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax).
	Pattern *string `pulumi:"pattern"`
}

// EventSourceMappingFilterCriteriaFilterInput is an input type that accepts EventSourceMappingFilterCriteriaFilterArgs and EventSourceMappingFilterCriteriaFilterOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaFilterInput` via:
//
//          EventSourceMappingFilterCriteriaFilterArgs{...}
type EventSourceMappingFilterCriteriaFilterInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaFilterOutput() EventSourceMappingFilterCriteriaFilterOutput
	ToEventSourceMappingFilterCriteriaFilterOutputWithContext(context.Context) EventSourceMappingFilterCriteriaFilterOutput
}

type EventSourceMappingFilterCriteriaFilterArgs struct {
	// A filter pattern up to 4096 characters. See [Filter Rule Syntax](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax).
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (EventSourceMappingFilterCriteriaFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (i EventSourceMappingFilterCriteriaFilterArgs) ToEventSourceMappingFilterCriteriaFilterOutput() EventSourceMappingFilterCriteriaFilterOutput {
	return i.ToEventSourceMappingFilterCriteriaFilterOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaFilterArgs) ToEventSourceMappingFilterCriteriaFilterOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaFilterOutput)
}

// EventSourceMappingFilterCriteriaFilterArrayInput is an input type that accepts EventSourceMappingFilterCriteriaFilterArray and EventSourceMappingFilterCriteriaFilterArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaFilterArrayInput` via:
//
//          EventSourceMappingFilterCriteriaFilterArray{ EventSourceMappingFilterCriteriaFilterArgs{...} }
type EventSourceMappingFilterCriteriaFilterArrayInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaFilterArrayOutput() EventSourceMappingFilterCriteriaFilterArrayOutput
	ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(context.Context) EventSourceMappingFilterCriteriaFilterArrayOutput
}

type EventSourceMappingFilterCriteriaFilterArray []EventSourceMappingFilterCriteriaFilterInput

func (EventSourceMappingFilterCriteriaFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (i EventSourceMappingFilterCriteriaFilterArray) ToEventSourceMappingFilterCriteriaFilterArrayOutput() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return i.ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaFilterArray) ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaFilterArrayOutput)
}

type EventSourceMappingFilterCriteriaFilterOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaFilterOutput) ToEventSourceMappingFilterCriteriaFilterOutput() EventSourceMappingFilterCriteriaFilterOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaFilterOutput) ToEventSourceMappingFilterCriteriaFilterOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterOutput {
	return o
}

// A filter pattern up to 4096 characters. See [Filter Rule Syntax](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax).
func (o EventSourceMappingFilterCriteriaFilterOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingFilterCriteriaFilter) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type EventSourceMappingFilterCriteriaFilterArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaFilterArrayOutput) ToEventSourceMappingFilterCriteriaFilterArrayOutput() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaFilterArrayOutput) ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaFilterArrayOutput) Index(i pulumi.IntInput) EventSourceMappingFilterCriteriaFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingFilterCriteriaFilter {
		return vs[0].([]EventSourceMappingFilterCriteriaFilter)[vs[1].(int)]
	}).(EventSourceMappingFilterCriteriaFilterOutput)
}

type EventSourceMappingSelfManagedEventSource struct {
	// A map of endpoints for the self managed source.  For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
	Endpoints map[string]string `pulumi:"endpoints"`
}

// EventSourceMappingSelfManagedEventSourceInput is an input type that accepts EventSourceMappingSelfManagedEventSourceArgs and EventSourceMappingSelfManagedEventSourceOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedEventSourceInput` via:
//
//          EventSourceMappingSelfManagedEventSourceArgs{...}
type EventSourceMappingSelfManagedEventSourceInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedEventSourceOutput() EventSourceMappingSelfManagedEventSourceOutput
	ToEventSourceMappingSelfManagedEventSourceOutputWithContext(context.Context) EventSourceMappingSelfManagedEventSourceOutput
}

type EventSourceMappingSelfManagedEventSourceArgs struct {
	// A map of endpoints for the self managed source.  For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
	Endpoints pulumi.StringMapInput `pulumi:"endpoints"`
}

func (EventSourceMappingSelfManagedEventSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourceOutput() EventSourceMappingSelfManagedEventSourceOutput {
	return i.ToEventSourceMappingSelfManagedEventSourceOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourceOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedEventSourceOutput)
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return i.ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedEventSourceOutput).ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx)
}

// EventSourceMappingSelfManagedEventSourcePtrInput is an input type that accepts EventSourceMappingSelfManagedEventSourceArgs, EventSourceMappingSelfManagedEventSourcePtr and EventSourceMappingSelfManagedEventSourcePtrOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedEventSourcePtrInput` via:
//
//          EventSourceMappingSelfManagedEventSourceArgs{...}
//
//  or:
//
//          nil
type EventSourceMappingSelfManagedEventSourcePtrInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput
	ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput
}

type eventSourceMappingSelfManagedEventSourcePtrType EventSourceMappingSelfManagedEventSourceArgs

func EventSourceMappingSelfManagedEventSourcePtr(v *EventSourceMappingSelfManagedEventSourceArgs) EventSourceMappingSelfManagedEventSourcePtrInput {
	return (*eventSourceMappingSelfManagedEventSourcePtrType)(v)
}

func (*eventSourceMappingSelfManagedEventSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (i *eventSourceMappingSelfManagedEventSourcePtrType) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return i.ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingSelfManagedEventSourcePtrType) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedEventSourcePtrOutput)
}

type EventSourceMappingSelfManagedEventSourceOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedEventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourceOutput() EventSourceMappingSelfManagedEventSourceOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourceOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourceOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o.ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Background())
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingSelfManagedEventSource) *EventSourceMappingSelfManagedEventSource {
		return &v
	}).(EventSourceMappingSelfManagedEventSourcePtrOutput)
}

// A map of endpoints for the self managed source.  For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
func (o EventSourceMappingSelfManagedEventSourceOutput) Endpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedEventSource) map[string]string { return v.Endpoints }).(pulumi.StringMapOutput)
}

type EventSourceMappingSelfManagedEventSourcePtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedEventSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedEventSourcePtrOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourcePtrOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourcePtrOutput) Elem() EventSourceMappingSelfManagedEventSourceOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedEventSource) EventSourceMappingSelfManagedEventSource {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingSelfManagedEventSource
		return ret
	}).(EventSourceMappingSelfManagedEventSourceOutput)
}

// A map of endpoints for the self managed source.  For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
func (o EventSourceMappingSelfManagedEventSourcePtrOutput) Endpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedEventSource) map[string]string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringMapOutput)
}

type EventSourceMappingSourceAccessConfiguration struct {
	// The type of this configuration.  For Self Managed Kafka you will need to supply blocks for type `VPC_SUBNET` and `VPC_SECURITY_GROUP`.
	Type string `pulumi:"type"`
	// The URI for this configuration.  For type `VPC_SUBNET` the value should be `subnet:subnet_id` where `subnetId` is the value you would find in an ec2.Subnet resource's id attribute.  For type `VPC_SECURITY_GROUP` the value should be `security_group:security_group_id` where `securityGroupId` is the value you would find in an ec2.SecurityGroup resource's id attribute.
	Uri string `pulumi:"uri"`
}

// EventSourceMappingSourceAccessConfigurationInput is an input type that accepts EventSourceMappingSourceAccessConfigurationArgs and EventSourceMappingSourceAccessConfigurationOutput values.
// You can construct a concrete instance of `EventSourceMappingSourceAccessConfigurationInput` via:
//
//          EventSourceMappingSourceAccessConfigurationArgs{...}
type EventSourceMappingSourceAccessConfigurationInput interface {
	pulumi.Input

	ToEventSourceMappingSourceAccessConfigurationOutput() EventSourceMappingSourceAccessConfigurationOutput
	ToEventSourceMappingSourceAccessConfigurationOutputWithContext(context.Context) EventSourceMappingSourceAccessConfigurationOutput
}

type EventSourceMappingSourceAccessConfigurationArgs struct {
	// The type of this configuration.  For Self Managed Kafka you will need to supply blocks for type `VPC_SUBNET` and `VPC_SECURITY_GROUP`.
	Type pulumi.StringInput `pulumi:"type"`
	// The URI for this configuration.  For type `VPC_SUBNET` the value should be `subnet:subnet_id` where `subnetId` is the value you would find in an ec2.Subnet resource's id attribute.  For type `VPC_SECURITY_GROUP` the value should be `security_group:security_group_id` where `securityGroupId` is the value you would find in an ec2.SecurityGroup resource's id attribute.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (EventSourceMappingSourceAccessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (i EventSourceMappingSourceAccessConfigurationArgs) ToEventSourceMappingSourceAccessConfigurationOutput() EventSourceMappingSourceAccessConfigurationOutput {
	return i.ToEventSourceMappingSourceAccessConfigurationOutputWithContext(context.Background())
}

func (i EventSourceMappingSourceAccessConfigurationArgs) ToEventSourceMappingSourceAccessConfigurationOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSourceAccessConfigurationOutput)
}

// EventSourceMappingSourceAccessConfigurationArrayInput is an input type that accepts EventSourceMappingSourceAccessConfigurationArray and EventSourceMappingSourceAccessConfigurationArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingSourceAccessConfigurationArrayInput` via:
//
//          EventSourceMappingSourceAccessConfigurationArray{ EventSourceMappingSourceAccessConfigurationArgs{...} }
type EventSourceMappingSourceAccessConfigurationArrayInput interface {
	pulumi.Input

	ToEventSourceMappingSourceAccessConfigurationArrayOutput() EventSourceMappingSourceAccessConfigurationArrayOutput
	ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(context.Context) EventSourceMappingSourceAccessConfigurationArrayOutput
}

type EventSourceMappingSourceAccessConfigurationArray []EventSourceMappingSourceAccessConfigurationInput

func (EventSourceMappingSourceAccessConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (i EventSourceMappingSourceAccessConfigurationArray) ToEventSourceMappingSourceAccessConfigurationArrayOutput() EventSourceMappingSourceAccessConfigurationArrayOutput {
	return i.ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingSourceAccessConfigurationArray) ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSourceAccessConfigurationArrayOutput)
}

type EventSourceMappingSourceAccessConfigurationOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSourceAccessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (o EventSourceMappingSourceAccessConfigurationOutput) ToEventSourceMappingSourceAccessConfigurationOutput() EventSourceMappingSourceAccessConfigurationOutput {
	return o
}

func (o EventSourceMappingSourceAccessConfigurationOutput) ToEventSourceMappingSourceAccessConfigurationOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationOutput {
	return o
}

// The type of this configuration.  For Self Managed Kafka you will need to supply blocks for type `VPC_SUBNET` and `VPC_SECURITY_GROUP`.
func (o EventSourceMappingSourceAccessConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceMappingSourceAccessConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// The URI for this configuration.  For type `VPC_SUBNET` the value should be `subnet:subnet_id` where `subnetId` is the value you would find in an ec2.Subnet resource's id attribute.  For type `VPC_SECURITY_GROUP` the value should be `security_group:security_group_id` where `securityGroupId` is the value you would find in an ec2.SecurityGroup resource's id attribute.
func (o EventSourceMappingSourceAccessConfigurationOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceMappingSourceAccessConfiguration) string { return v.Uri }).(pulumi.StringOutput)
}

type EventSourceMappingSourceAccessConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSourceAccessConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (o EventSourceMappingSourceAccessConfigurationArrayOutput) ToEventSourceMappingSourceAccessConfigurationArrayOutput() EventSourceMappingSourceAccessConfigurationArrayOutput {
	return o
}

func (o EventSourceMappingSourceAccessConfigurationArrayOutput) ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationArrayOutput {
	return o
}

func (o EventSourceMappingSourceAccessConfigurationArrayOutput) Index(i pulumi.IntInput) EventSourceMappingSourceAccessConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingSourceAccessConfiguration {
		return vs[0].([]EventSourceMappingSourceAccessConfiguration)[vs[1].(int)]
	}).(EventSourceMappingSourceAccessConfigurationOutput)
}

type FunctionDeadLetterConfig struct {
	// ARN of an SNS topic or SQS queue to notify when an invocation fails. If this option is used, the function's IAM role must be granted suitable access to write to the target object, which means allowing either the `sns:Publish` or `sqs:SendMessage` action on this ARN, depending on which service is targeted.
	TargetArn string `pulumi:"targetArn"`
}

// FunctionDeadLetterConfigInput is an input type that accepts FunctionDeadLetterConfigArgs and FunctionDeadLetterConfigOutput values.
// You can construct a concrete instance of `FunctionDeadLetterConfigInput` via:
//
//          FunctionDeadLetterConfigArgs{...}
type FunctionDeadLetterConfigInput interface {
	pulumi.Input

	ToFunctionDeadLetterConfigOutput() FunctionDeadLetterConfigOutput
	ToFunctionDeadLetterConfigOutputWithContext(context.Context) FunctionDeadLetterConfigOutput
}

type FunctionDeadLetterConfigArgs struct {
	// ARN of an SNS topic or SQS queue to notify when an invocation fails. If this option is used, the function's IAM role must be granted suitable access to write to the target object, which means allowing either the `sns:Publish` or `sqs:SendMessage` action on this ARN, depending on which service is targeted.
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (FunctionDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionDeadLetterConfig)(nil)).Elem()
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigOutput() FunctionDeadLetterConfigOutput {
	return i.ToFunctionDeadLetterConfigOutputWithContext(context.Background())
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigOutputWithContext(ctx context.Context) FunctionDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionDeadLetterConfigOutput)
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return i.ToFunctionDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionDeadLetterConfigOutput).ToFunctionDeadLetterConfigPtrOutputWithContext(ctx)
}

// FunctionDeadLetterConfigPtrInput is an input type that accepts FunctionDeadLetterConfigArgs, FunctionDeadLetterConfigPtr and FunctionDeadLetterConfigPtrOutput values.
// You can construct a concrete instance of `FunctionDeadLetterConfigPtrInput` via:
//
//          FunctionDeadLetterConfigArgs{...}
//
//  or:
//
//          nil
type FunctionDeadLetterConfigPtrInput interface {
	pulumi.Input

	ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput
	ToFunctionDeadLetterConfigPtrOutputWithContext(context.Context) FunctionDeadLetterConfigPtrOutput
}

type functionDeadLetterConfigPtrType FunctionDeadLetterConfigArgs

func FunctionDeadLetterConfigPtr(v *FunctionDeadLetterConfigArgs) FunctionDeadLetterConfigPtrInput {
	return (*functionDeadLetterConfigPtrType)(v)
}

func (*functionDeadLetterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionDeadLetterConfig)(nil)).Elem()
}

func (i *functionDeadLetterConfigPtrType) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return i.ToFunctionDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i *functionDeadLetterConfigPtrType) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionDeadLetterConfigPtrOutput)
}

type FunctionDeadLetterConfigOutput struct{ *pulumi.OutputState }

func (FunctionDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionDeadLetterConfig)(nil)).Elem()
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigOutput() FunctionDeadLetterConfigOutput {
	return o
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigOutputWithContext(ctx context.Context) FunctionDeadLetterConfigOutput {
	return o
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return o.ToFunctionDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionDeadLetterConfig) *FunctionDeadLetterConfig {
		return &v
	}).(FunctionDeadLetterConfigPtrOutput)
}

// ARN of an SNS topic or SQS queue to notify when an invocation fails. If this option is used, the function's IAM role must be granted suitable access to write to the target object, which means allowing either the `sns:Publish` or `sqs:SendMessage` action on this ARN, depending on which service is targeted.
func (o FunctionDeadLetterConfigOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionDeadLetterConfig) string { return v.TargetArn }).(pulumi.StringOutput)
}

type FunctionDeadLetterConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionDeadLetterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionDeadLetterConfig)(nil)).Elem()
}

func (o FunctionDeadLetterConfigPtrOutput) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return o
}

func (o FunctionDeadLetterConfigPtrOutput) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return o
}

func (o FunctionDeadLetterConfigPtrOutput) Elem() FunctionDeadLetterConfigOutput {
	return o.ApplyT(func(v *FunctionDeadLetterConfig) FunctionDeadLetterConfig {
		if v != nil {
			return *v
		}
		var ret FunctionDeadLetterConfig
		return ret
	}).(FunctionDeadLetterConfigOutput)
}

// ARN of an SNS topic or SQS queue to notify when an invocation fails. If this option is used, the function's IAM role must be granted suitable access to write to the target object, which means allowing either the `sns:Publish` or `sqs:SendMessage` action on this ARN, depending on which service is targeted.
func (o FunctionDeadLetterConfigPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionDeadLetterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type FunctionEnvironment struct {
	// Map of environment variables that are accessible from the function code during execution.
	Variables map[string]string `pulumi:"variables"`
}

// FunctionEnvironmentInput is an input type that accepts FunctionEnvironmentArgs and FunctionEnvironmentOutput values.
// You can construct a concrete instance of `FunctionEnvironmentInput` via:
//
//          FunctionEnvironmentArgs{...}
type FunctionEnvironmentInput interface {
	pulumi.Input

	ToFunctionEnvironmentOutput() FunctionEnvironmentOutput
	ToFunctionEnvironmentOutputWithContext(context.Context) FunctionEnvironmentOutput
}

type FunctionEnvironmentArgs struct {
	// Map of environment variables that are accessible from the function code during execution.
	Variables pulumi.StringMapInput `pulumi:"variables"`
}

func (FunctionEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnvironment)(nil)).Elem()
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentOutput() FunctionEnvironmentOutput {
	return i.ToFunctionEnvironmentOutputWithContext(context.Background())
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentOutputWithContext(ctx context.Context) FunctionEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvironmentOutput)
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return i.ToFunctionEnvironmentPtrOutputWithContext(context.Background())
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvironmentOutput).ToFunctionEnvironmentPtrOutputWithContext(ctx)
}

// FunctionEnvironmentPtrInput is an input type that accepts FunctionEnvironmentArgs, FunctionEnvironmentPtr and FunctionEnvironmentPtrOutput values.
// You can construct a concrete instance of `FunctionEnvironmentPtrInput` via:
//
//          FunctionEnvironmentArgs{...}
//
//  or:
//
//          nil
type FunctionEnvironmentPtrInput interface {
	pulumi.Input

	ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput
	ToFunctionEnvironmentPtrOutputWithContext(context.Context) FunctionEnvironmentPtrOutput
}

type functionEnvironmentPtrType FunctionEnvironmentArgs

func FunctionEnvironmentPtr(v *FunctionEnvironmentArgs) FunctionEnvironmentPtrInput {
	return (*functionEnvironmentPtrType)(v)
}

func (*functionEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEnvironment)(nil)).Elem()
}

func (i *functionEnvironmentPtrType) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return i.ToFunctionEnvironmentPtrOutputWithContext(context.Background())
}

func (i *functionEnvironmentPtrType) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvironmentPtrOutput)
}

type FunctionEnvironmentOutput struct{ *pulumi.OutputState }

func (FunctionEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnvironment)(nil)).Elem()
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentOutput() FunctionEnvironmentOutput {
	return o
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentOutputWithContext(ctx context.Context) FunctionEnvironmentOutput {
	return o
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return o.ToFunctionEnvironmentPtrOutputWithContext(context.Background())
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEnvironment) *FunctionEnvironment {
		return &v
	}).(FunctionEnvironmentPtrOutput)
}

// Map of environment variables that are accessible from the function code during execution.
func (o FunctionEnvironmentOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v FunctionEnvironment) map[string]string { return v.Variables }).(pulumi.StringMapOutput)
}

type FunctionEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (FunctionEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEnvironment)(nil)).Elem()
}

func (o FunctionEnvironmentPtrOutput) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return o
}

func (o FunctionEnvironmentPtrOutput) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return o
}

func (o FunctionEnvironmentPtrOutput) Elem() FunctionEnvironmentOutput {
	return o.ApplyT(func(v *FunctionEnvironment) FunctionEnvironment {
		if v != nil {
			return *v
		}
		var ret FunctionEnvironment
		return ret
	}).(FunctionEnvironmentOutput)
}

// Map of environment variables that are accessible from the function code during execution.
func (o FunctionEnvironmentPtrOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FunctionEnvironment) map[string]string {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(pulumi.StringMapOutput)
}

type FunctionEphemeralStorage struct {
	// The size of the Lambda function Ephemeral storage(`/tmp`) represented in MB. The minimum supported `ephemeralStorage` value defaults to `512`MB and the maximum supported value is `10240`MB.
	Size *int `pulumi:"size"`
}

// FunctionEphemeralStorageInput is an input type that accepts FunctionEphemeralStorageArgs and FunctionEphemeralStorageOutput values.
// You can construct a concrete instance of `FunctionEphemeralStorageInput` via:
//
//          FunctionEphemeralStorageArgs{...}
type FunctionEphemeralStorageInput interface {
	pulumi.Input

	ToFunctionEphemeralStorageOutput() FunctionEphemeralStorageOutput
	ToFunctionEphemeralStorageOutputWithContext(context.Context) FunctionEphemeralStorageOutput
}

type FunctionEphemeralStorageArgs struct {
	// The size of the Lambda function Ephemeral storage(`/tmp`) represented in MB. The minimum supported `ephemeralStorage` value defaults to `512`MB and the maximum supported value is `10240`MB.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (FunctionEphemeralStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEphemeralStorage)(nil)).Elem()
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStorageOutput() FunctionEphemeralStorageOutput {
	return i.ToFunctionEphemeralStorageOutputWithContext(context.Background())
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStorageOutputWithContext(ctx context.Context) FunctionEphemeralStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEphemeralStorageOutput)
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return i.ToFunctionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEphemeralStorageOutput).ToFunctionEphemeralStoragePtrOutputWithContext(ctx)
}

// FunctionEphemeralStoragePtrInput is an input type that accepts FunctionEphemeralStorageArgs, FunctionEphemeralStoragePtr and FunctionEphemeralStoragePtrOutput values.
// You can construct a concrete instance of `FunctionEphemeralStoragePtrInput` via:
//
//          FunctionEphemeralStorageArgs{...}
//
//  or:
//
//          nil
type FunctionEphemeralStoragePtrInput interface {
	pulumi.Input

	ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput
	ToFunctionEphemeralStoragePtrOutputWithContext(context.Context) FunctionEphemeralStoragePtrOutput
}

type functionEphemeralStoragePtrType FunctionEphemeralStorageArgs

func FunctionEphemeralStoragePtr(v *FunctionEphemeralStorageArgs) FunctionEphemeralStoragePtrInput {
	return (*functionEphemeralStoragePtrType)(v)
}

func (*functionEphemeralStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEphemeralStorage)(nil)).Elem()
}

func (i *functionEphemeralStoragePtrType) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return i.ToFunctionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (i *functionEphemeralStoragePtrType) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEphemeralStoragePtrOutput)
}

type FunctionEphemeralStorageOutput struct{ *pulumi.OutputState }

func (FunctionEphemeralStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEphemeralStorage)(nil)).Elem()
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStorageOutput() FunctionEphemeralStorageOutput {
	return o
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStorageOutputWithContext(ctx context.Context) FunctionEphemeralStorageOutput {
	return o
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return o.ToFunctionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEphemeralStorage) *FunctionEphemeralStorage {
		return &v
	}).(FunctionEphemeralStoragePtrOutput)
}

// The size of the Lambda function Ephemeral storage(`/tmp`) represented in MB. The minimum supported `ephemeralStorage` value defaults to `512`MB and the maximum supported value is `10240`MB.
func (o FunctionEphemeralStorageOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionEphemeralStorage) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type FunctionEphemeralStoragePtrOutput struct{ *pulumi.OutputState }

func (FunctionEphemeralStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEphemeralStorage)(nil)).Elem()
}

func (o FunctionEphemeralStoragePtrOutput) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return o
}

func (o FunctionEphemeralStoragePtrOutput) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return o
}

func (o FunctionEphemeralStoragePtrOutput) Elem() FunctionEphemeralStorageOutput {
	return o.ApplyT(func(v *FunctionEphemeralStorage) FunctionEphemeralStorage {
		if v != nil {
			return *v
		}
		var ret FunctionEphemeralStorage
		return ret
	}).(FunctionEphemeralStorageOutput)
}

// The size of the Lambda function Ephemeral storage(`/tmp`) represented in MB. The minimum supported `ephemeralStorage` value defaults to `512`MB and the maximum supported value is `10240`MB.
func (o FunctionEphemeralStoragePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FunctionEphemeralStorage) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfig struct {
	// Configuration block with destination configuration for failed asynchronous invocations. See below for details.
	OnFailure *FunctionEventInvokeConfigDestinationConfigOnFailure `pulumi:"onFailure"`
	// Configuration block with destination configuration for successful asynchronous invocations. See below for details.
	OnSuccess *FunctionEventInvokeConfigDestinationConfigOnSuccess `pulumi:"onSuccess"`
}

// FunctionEventInvokeConfigDestinationConfigInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigArgs and FunctionEventInvokeConfigDestinationConfigOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigInput` via:
//
//          FunctionEventInvokeConfigDestinationConfigArgs{...}
type FunctionEventInvokeConfigDestinationConfigInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOutput() FunctionEventInvokeConfigDestinationConfigOutput
	ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOutput
}

type FunctionEventInvokeConfigDestinationConfigArgs struct {
	// Configuration block with destination configuration for failed asynchronous invocations. See below for details.
	OnFailure FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput `pulumi:"onFailure"`
	// Configuration block with destination configuration for successful asynchronous invocations. See below for details.
	OnSuccess FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput `pulumi:"onSuccess"`
}

func (FunctionEventInvokeConfigDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigOutput() FunctionEventInvokeConfigDestinationConfigOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOutput)
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOutput).ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx)
}

// FunctionEventInvokeConfigDestinationConfigPtrInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigArgs, FunctionEventInvokeConfigDestinationConfigPtr and FunctionEventInvokeConfigDestinationConfigPtrOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigPtrInput` via:
//
//          FunctionEventInvokeConfigDestinationConfigArgs{...}
//
//  or:
//
//          nil
type FunctionEventInvokeConfigDestinationConfigPtrInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput
	ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput
}

type functionEventInvokeConfigDestinationConfigPtrType FunctionEventInvokeConfigDestinationConfigArgs

func FunctionEventInvokeConfigDestinationConfigPtr(v *FunctionEventInvokeConfigDestinationConfigArgs) FunctionEventInvokeConfigDestinationConfigPtrInput {
	return (*functionEventInvokeConfigDestinationConfigPtrType)(v)
}

func (*functionEventInvokeConfigDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (i *functionEventInvokeConfigDestinationConfigPtrType) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *functionEventInvokeConfigDestinationConfigPtrType) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigOutput() FunctionEventInvokeConfigDestinationConfigOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o.ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Background())
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfig {
		return &v
	}).(FunctionEventInvokeConfigDestinationConfigPtrOutput)
}

// Configuration block with destination configuration for failed asynchronous invocations. See below for details.
func (o FunctionEventInvokeConfigDestinationConfigOutput) OnFailure() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnFailure {
		return v.OnFailure
	}).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

// Configuration block with destination configuration for successful asynchronous invocations. See below for details.
func (o FunctionEventInvokeConfigDestinationConfigOutput) OnSuccess() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnSuccess {
		return v.OnSuccess
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) Elem() FunctionEventInvokeConfigDestinationConfigOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfig) FunctionEventInvokeConfigDestinationConfig {
		if v != nil {
			return *v
		}
		var ret FunctionEventInvokeConfigDestinationConfig
		return ret
	}).(FunctionEventInvokeConfigDestinationConfigOutput)
}

// Configuration block with destination configuration for failed asynchronous invocations. See below for details.
func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) OnFailure() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnFailure {
		if v == nil {
			return nil
		}
		return v.OnFailure
	}).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

// Configuration block with destination configuration for successful asynchronous invocations. See below for details.
func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) OnSuccess() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnSuccess {
		if v == nil {
			return nil
		}
		return v.OnSuccess
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnFailure struct {
	// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination string `pulumi:"destination"`
}

// FunctionEventInvokeConfigDestinationConfigOnFailureInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnFailureArgs and FunctionEventInvokeConfigDestinationConfigOnFailureOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnFailureInput` via:
//
//          FunctionEventInvokeConfigDestinationConfigOnFailureArgs{...}
type FunctionEventInvokeConfigDestinationConfigOnFailureInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnFailureOutput() FunctionEventInvokeConfigDestinationConfigOnFailureOutput
	ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnFailureOutput
}

type FunctionEventInvokeConfigDestinationConfigOnFailureArgs struct {
	// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination pulumi.StringInput `pulumi:"destination"`
}

func (FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutput() FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnFailureOutput)
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnFailureOutput).ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx)
}

// FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnFailureArgs, FunctionEventInvokeConfigDestinationConfigOnFailurePtr and FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput` via:
//
//          FunctionEventInvokeConfigDestinationConfigOnFailureArgs{...}
//
//  or:
//
//          nil
type FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput
	ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput
}

type functionEventInvokeConfigDestinationConfigOnFailurePtrType FunctionEventInvokeConfigDestinationConfigOnFailureArgs

func FunctionEventInvokeConfigDestinationConfigOnFailurePtr(v *FunctionEventInvokeConfigDestinationConfigOnFailureArgs) FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput {
	return (*functionEventInvokeConfigDestinationConfigOnFailurePtrType)(v)
}

func (*functionEventInvokeConfigDestinationConfigOnFailurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (i *functionEventInvokeConfigDestinationConfigOnFailurePtrType) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i *functionEventInvokeConfigDestinationConfigOnFailurePtrType) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnFailureOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutput() FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventInvokeConfigDestinationConfigOnFailure) *FunctionEventInvokeConfigDestinationConfigOnFailure {
		return &v
	}).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfigOnFailure) string { return v.Destination }).(pulumi.StringOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) Elem() FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnFailure) FunctionEventInvokeConfigDestinationConfigOnFailure {
		if v != nil {
			return *v
		}
		var ret FunctionEventInvokeConfigDestinationConfigOnFailure
		return ret
	}).(FunctionEventInvokeConfigDestinationConfigOnFailureOutput)
}

// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnFailure) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnSuccess struct {
	// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination string `pulumi:"destination"`
}

// FunctionEventInvokeConfigDestinationConfigOnSuccessInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnSuccessArgs and FunctionEventInvokeConfigDestinationConfigOnSuccessOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnSuccessInput` via:
//
//          FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{...}
type FunctionEventInvokeConfigDestinationConfigOnSuccessInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput
	ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessOutput
}

type FunctionEventInvokeConfigDestinationConfigOnSuccessArgs struct {
	// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination pulumi.StringInput `pulumi:"destination"`
}

func (FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput)
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput).ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx)
}

// FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnSuccessArgs, FunctionEventInvokeConfigDestinationConfigOnSuccessPtr and FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput` via:
//
//          FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{...}
//
//  or:
//
//          nil
type FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput
	ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput
}

type functionEventInvokeConfigDestinationConfigOnSuccessPtrType FunctionEventInvokeConfigDestinationConfigOnSuccessArgs

func FunctionEventInvokeConfigDestinationConfigOnSuccessPtr(v *FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput {
	return (*functionEventInvokeConfigDestinationConfigOnSuccessPtrType)(v)
}

func (*functionEventInvokeConfigDestinationConfigOnSuccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (i *functionEventInvokeConfigDestinationConfigOnSuccessPtrType) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Background())
}

func (i *functionEventInvokeConfigDestinationConfigOnSuccessPtrType) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnSuccessOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Background())
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventInvokeConfigDestinationConfigOnSuccess) *FunctionEventInvokeConfigDestinationConfigOnSuccess {
		return &v
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfigOnSuccess) string { return v.Destination }).(pulumi.StringOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) Elem() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnSuccess) FunctionEventInvokeConfigDestinationConfigOnSuccess {
		if v != nil {
			return *v
		}
		var ret FunctionEventInvokeConfigDestinationConfigOnSuccess
		return ret
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput)
}

// Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnSuccess) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

type FunctionFileSystemConfig struct {
	// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
	Arn string `pulumi:"arn"`
	// Path where the function can access the file system, starting with /mnt/.
	LocalMountPath string `pulumi:"localMountPath"`
}

// FunctionFileSystemConfigInput is an input type that accepts FunctionFileSystemConfigArgs and FunctionFileSystemConfigOutput values.
// You can construct a concrete instance of `FunctionFileSystemConfigInput` via:
//
//          FunctionFileSystemConfigArgs{...}
type FunctionFileSystemConfigInput interface {
	pulumi.Input

	ToFunctionFileSystemConfigOutput() FunctionFileSystemConfigOutput
	ToFunctionFileSystemConfigOutputWithContext(context.Context) FunctionFileSystemConfigOutput
}

type FunctionFileSystemConfigArgs struct {
	// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Path where the function can access the file system, starting with /mnt/.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
}

func (FunctionFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFileSystemConfig)(nil)).Elem()
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigOutput() FunctionFileSystemConfigOutput {
	return i.ToFunctionFileSystemConfigOutputWithContext(context.Background())
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigOutputWithContext(ctx context.Context) FunctionFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFileSystemConfigOutput)
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return i.ToFunctionFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFileSystemConfigOutput).ToFunctionFileSystemConfigPtrOutputWithContext(ctx)
}

// FunctionFileSystemConfigPtrInput is an input type that accepts FunctionFileSystemConfigArgs, FunctionFileSystemConfigPtr and FunctionFileSystemConfigPtrOutput values.
// You can construct a concrete instance of `FunctionFileSystemConfigPtrInput` via:
//
//          FunctionFileSystemConfigArgs{...}
//
//  or:
//
//          nil
type FunctionFileSystemConfigPtrInput interface {
	pulumi.Input

	ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput
	ToFunctionFileSystemConfigPtrOutputWithContext(context.Context) FunctionFileSystemConfigPtrOutput
}

type functionFileSystemConfigPtrType FunctionFileSystemConfigArgs

func FunctionFileSystemConfigPtr(v *FunctionFileSystemConfigArgs) FunctionFileSystemConfigPtrInput {
	return (*functionFileSystemConfigPtrType)(v)
}

func (*functionFileSystemConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionFileSystemConfig)(nil)).Elem()
}

func (i *functionFileSystemConfigPtrType) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return i.ToFunctionFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i *functionFileSystemConfigPtrType) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFileSystemConfigPtrOutput)
}

type FunctionFileSystemConfigOutput struct{ *pulumi.OutputState }

func (FunctionFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFileSystemConfig)(nil)).Elem()
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigOutput() FunctionFileSystemConfigOutput {
	return o
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigOutputWithContext(ctx context.Context) FunctionFileSystemConfigOutput {
	return o
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return o.ToFunctionFileSystemConfigPtrOutputWithContext(context.Background())
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionFileSystemConfig) *FunctionFileSystemConfig {
		return &v
	}).(FunctionFileSystemConfigPtrOutput)
}

// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
func (o FunctionFileSystemConfigOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFileSystemConfig) string { return v.Arn }).(pulumi.StringOutput)
}

// Path where the function can access the file system, starting with /mnt/.
func (o FunctionFileSystemConfigOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFileSystemConfig) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

type FunctionFileSystemConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionFileSystemConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionFileSystemConfig)(nil)).Elem()
}

func (o FunctionFileSystemConfigPtrOutput) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return o
}

func (o FunctionFileSystemConfigPtrOutput) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return o
}

func (o FunctionFileSystemConfigPtrOutput) Elem() FunctionFileSystemConfigOutput {
	return o.ApplyT(func(v *FunctionFileSystemConfig) FunctionFileSystemConfig {
		if v != nil {
			return *v
		}
		var ret FunctionFileSystemConfig
		return ret
	}).(FunctionFileSystemConfigOutput)
}

// Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
func (o FunctionFileSystemConfigPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// Path where the function can access the file system, starting with /mnt/.
func (o FunctionFileSystemConfigPtrOutput) LocalMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LocalMountPath
	}).(pulumi.StringPtrOutput)
}

type FunctionImageConfig struct {
	// Parameters that you want to pass in with `entryPoint`.
	Commands []string `pulumi:"commands"`
	// Entry point to your application, which is typically the location of the runtime executable.
	EntryPoints []string `pulumi:"entryPoints"`
	// Working directory.
	WorkingDirectory *string `pulumi:"workingDirectory"`
}

// FunctionImageConfigInput is an input type that accepts FunctionImageConfigArgs and FunctionImageConfigOutput values.
// You can construct a concrete instance of `FunctionImageConfigInput` via:
//
//          FunctionImageConfigArgs{...}
type FunctionImageConfigInput interface {
	pulumi.Input

	ToFunctionImageConfigOutput() FunctionImageConfigOutput
	ToFunctionImageConfigOutputWithContext(context.Context) FunctionImageConfigOutput
}

type FunctionImageConfigArgs struct {
	// Parameters that you want to pass in with `entryPoint`.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// Entry point to your application, which is typically the location of the runtime executable.
	EntryPoints pulumi.StringArrayInput `pulumi:"entryPoints"`
	// Working directory.
	WorkingDirectory pulumi.StringPtrInput `pulumi:"workingDirectory"`
}

func (FunctionImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionImageConfig)(nil)).Elem()
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigOutput() FunctionImageConfigOutput {
	return i.ToFunctionImageConfigOutputWithContext(context.Background())
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigOutputWithContext(ctx context.Context) FunctionImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigOutput)
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return i.ToFunctionImageConfigPtrOutputWithContext(context.Background())
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigOutput).ToFunctionImageConfigPtrOutputWithContext(ctx)
}

// FunctionImageConfigPtrInput is an input type that accepts FunctionImageConfigArgs, FunctionImageConfigPtr and FunctionImageConfigPtrOutput values.
// You can construct a concrete instance of `FunctionImageConfigPtrInput` via:
//
//          FunctionImageConfigArgs{...}
//
//  or:
//
//          nil
type FunctionImageConfigPtrInput interface {
	pulumi.Input

	ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput
	ToFunctionImageConfigPtrOutputWithContext(context.Context) FunctionImageConfigPtrOutput
}

type functionImageConfigPtrType FunctionImageConfigArgs

func FunctionImageConfigPtr(v *FunctionImageConfigArgs) FunctionImageConfigPtrInput {
	return (*functionImageConfigPtrType)(v)
}

func (*functionImageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionImageConfig)(nil)).Elem()
}

func (i *functionImageConfigPtrType) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return i.ToFunctionImageConfigPtrOutputWithContext(context.Background())
}

func (i *functionImageConfigPtrType) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigPtrOutput)
}

type FunctionImageConfigOutput struct{ *pulumi.OutputState }

func (FunctionImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionImageConfig)(nil)).Elem()
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigOutput() FunctionImageConfigOutput {
	return o
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigOutputWithContext(ctx context.Context) FunctionImageConfigOutput {
	return o
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return o.ToFunctionImageConfigPtrOutputWithContext(context.Background())
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionImageConfig) *FunctionImageConfig {
		return &v
	}).(FunctionImageConfigPtrOutput)
}

// Parameters that you want to pass in with `entryPoint`.
func (o FunctionImageConfigOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionImageConfig) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// Entry point to your application, which is typically the location of the runtime executable.
func (o FunctionImageConfigOutput) EntryPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionImageConfig) []string { return v.EntryPoints }).(pulumi.StringArrayOutput)
}

// Working directory.
func (o FunctionImageConfigOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionImageConfig) *string { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type FunctionImageConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionImageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionImageConfig)(nil)).Elem()
}

func (o FunctionImageConfigPtrOutput) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return o
}

func (o FunctionImageConfigPtrOutput) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return o
}

func (o FunctionImageConfigPtrOutput) Elem() FunctionImageConfigOutput {
	return o.ApplyT(func(v *FunctionImageConfig) FunctionImageConfig {
		if v != nil {
			return *v
		}
		var ret FunctionImageConfig
		return ret
	}).(FunctionImageConfigOutput)
}

// Parameters that you want to pass in with `entryPoint`.
func (o FunctionImageConfigPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionImageConfig) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

// Entry point to your application, which is typically the location of the runtime executable.
func (o FunctionImageConfigPtrOutput) EntryPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionImageConfig) []string {
		if v == nil {
			return nil
		}
		return v.EntryPoints
	}).(pulumi.StringArrayOutput)
}

// Working directory.
func (o FunctionImageConfigPtrOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionImageConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDirectory
	}).(pulumi.StringPtrOutput)
}

type FunctionTracingConfig struct {
	// Whether to to sample and trace a subset of incoming requests with AWS X-Ray. Valid values are `PassThrough` and `Active`. If `PassThrough`, Lambda will only trace the request from an upstream service if it contains a tracing header with "sampled=1". If `Active`, Lambda will respect any tracing header it receives from an upstream service. If no tracing header is received, Lambda will call X-Ray for a tracing decision.
	Mode string `pulumi:"mode"`
}

// FunctionTracingConfigInput is an input type that accepts FunctionTracingConfigArgs and FunctionTracingConfigOutput values.
// You can construct a concrete instance of `FunctionTracingConfigInput` via:
//
//          FunctionTracingConfigArgs{...}
type FunctionTracingConfigInput interface {
	pulumi.Input

	ToFunctionTracingConfigOutput() FunctionTracingConfigOutput
	ToFunctionTracingConfigOutputWithContext(context.Context) FunctionTracingConfigOutput
}

type FunctionTracingConfigArgs struct {
	// Whether to to sample and trace a subset of incoming requests with AWS X-Ray. Valid values are `PassThrough` and `Active`. If `PassThrough`, Lambda will only trace the request from an upstream service if it contains a tracing header with "sampled=1". If `Active`, Lambda will respect any tracing header it receives from an upstream service. If no tracing header is received, Lambda will call X-Ray for a tracing decision.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (FunctionTracingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTracingConfig)(nil)).Elem()
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigOutput() FunctionTracingConfigOutput {
	return i.ToFunctionTracingConfigOutputWithContext(context.Background())
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigOutputWithContext(ctx context.Context) FunctionTracingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTracingConfigOutput)
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return i.ToFunctionTracingConfigPtrOutputWithContext(context.Background())
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTracingConfigOutput).ToFunctionTracingConfigPtrOutputWithContext(ctx)
}

// FunctionTracingConfigPtrInput is an input type that accepts FunctionTracingConfigArgs, FunctionTracingConfigPtr and FunctionTracingConfigPtrOutput values.
// You can construct a concrete instance of `FunctionTracingConfigPtrInput` via:
//
//          FunctionTracingConfigArgs{...}
//
//  or:
//
//          nil
type FunctionTracingConfigPtrInput interface {
	pulumi.Input

	ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput
	ToFunctionTracingConfigPtrOutputWithContext(context.Context) FunctionTracingConfigPtrOutput
}

type functionTracingConfigPtrType FunctionTracingConfigArgs

func FunctionTracingConfigPtr(v *FunctionTracingConfigArgs) FunctionTracingConfigPtrInput {
	return (*functionTracingConfigPtrType)(v)
}

func (*functionTracingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTracingConfig)(nil)).Elem()
}

func (i *functionTracingConfigPtrType) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return i.ToFunctionTracingConfigPtrOutputWithContext(context.Background())
}

func (i *functionTracingConfigPtrType) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTracingConfigPtrOutput)
}

type FunctionTracingConfigOutput struct{ *pulumi.OutputState }

func (FunctionTracingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTracingConfig)(nil)).Elem()
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigOutput() FunctionTracingConfigOutput {
	return o
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigOutputWithContext(ctx context.Context) FunctionTracingConfigOutput {
	return o
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return o.ToFunctionTracingConfigPtrOutputWithContext(context.Background())
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTracingConfig) *FunctionTracingConfig {
		return &v
	}).(FunctionTracingConfigPtrOutput)
}

// Whether to to sample and trace a subset of incoming requests with AWS X-Ray. Valid values are `PassThrough` and `Active`. If `PassThrough`, Lambda will only trace the request from an upstream service if it contains a tracing header with "sampled=1". If `Active`, Lambda will respect any tracing header it receives from an upstream service. If no tracing header is received, Lambda will call X-Ray for a tracing decision.
func (o FunctionTracingConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTracingConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type FunctionTracingConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionTracingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTracingConfig)(nil)).Elem()
}

func (o FunctionTracingConfigPtrOutput) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return o
}

func (o FunctionTracingConfigPtrOutput) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return o
}

func (o FunctionTracingConfigPtrOutput) Elem() FunctionTracingConfigOutput {
	return o.ApplyT(func(v *FunctionTracingConfig) FunctionTracingConfig {
		if v != nil {
			return *v
		}
		var ret FunctionTracingConfig
		return ret
	}).(FunctionTracingConfigOutput)
}

// Whether to to sample and trace a subset of incoming requests with AWS X-Ray. Valid values are `PassThrough` and `Active`. If `PassThrough`, Lambda will only trace the request from an upstream service if it contains a tracing header with "sampled=1". If `Active`, Lambda will respect any tracing header it receives from an upstream service. If no tracing header is received, Lambda will call X-Ray for a tracing decision.
func (o FunctionTracingConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTracingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type FunctionUrlCors struct {
	// Whether to allow cookies or other credentials in requests to the function URL. The default is `false`.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// The HTTP headers that origins can include in requests to the function URL. For example: `["date", "keep-alive", "x-custom-header"]`.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// The HTTP methods that are allowed when calling the function URL. For example: `["GET", "POST", "DELETE"]`, or the wildcard character (`["*"]`).
	AllowMethods []string `pulumi:"allowMethods"`
	// The origins that can access the function URL. You can list any number of specific origins (or the wildcard character (`"*"`)), separated by a comma. For example: `["https://www.example.com", "http://localhost:60905"]`.
	AllowOrigins []string `pulumi:"allowOrigins"`
	// The HTTP headers in your function response that you want to expose to origins that call the function URL.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to `0`, which means that the browser doesn't cache results. The maximum value is `86400`.
	MaxAge *int `pulumi:"maxAge"`
}

// FunctionUrlCorsInput is an input type that accepts FunctionUrlCorsArgs and FunctionUrlCorsOutput values.
// You can construct a concrete instance of `FunctionUrlCorsInput` via:
//
//          FunctionUrlCorsArgs{...}
type FunctionUrlCorsInput interface {
	pulumi.Input

	ToFunctionUrlCorsOutput() FunctionUrlCorsOutput
	ToFunctionUrlCorsOutputWithContext(context.Context) FunctionUrlCorsOutput
}

type FunctionUrlCorsArgs struct {
	// Whether to allow cookies or other credentials in requests to the function URL. The default is `false`.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// The HTTP headers that origins can include in requests to the function URL. For example: `["date", "keep-alive", "x-custom-header"]`.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// The HTTP methods that are allowed when calling the function URL. For example: `["GET", "POST", "DELETE"]`, or the wildcard character (`["*"]`).
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	// The origins that can access the function URL. You can list any number of specific origins (or the wildcard character (`"*"`)), separated by a comma. For example: `["https://www.example.com", "http://localhost:60905"]`.
	AllowOrigins pulumi.StringArrayInput `pulumi:"allowOrigins"`
	// The HTTP headers in your function response that you want to expose to origins that call the function URL.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to `0`, which means that the browser doesn't cache results. The maximum value is `86400`.
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
}

func (FunctionUrlCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionUrlCors)(nil)).Elem()
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsOutput() FunctionUrlCorsOutput {
	return i.ToFunctionUrlCorsOutputWithContext(context.Background())
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsOutputWithContext(ctx context.Context) FunctionUrlCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlCorsOutput)
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return i.ToFunctionUrlCorsPtrOutputWithContext(context.Background())
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlCorsOutput).ToFunctionUrlCorsPtrOutputWithContext(ctx)
}

// FunctionUrlCorsPtrInput is an input type that accepts FunctionUrlCorsArgs, FunctionUrlCorsPtr and FunctionUrlCorsPtrOutput values.
// You can construct a concrete instance of `FunctionUrlCorsPtrInput` via:
//
//          FunctionUrlCorsArgs{...}
//
//  or:
//
//          nil
type FunctionUrlCorsPtrInput interface {
	pulumi.Input

	ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput
	ToFunctionUrlCorsPtrOutputWithContext(context.Context) FunctionUrlCorsPtrOutput
}

type functionUrlCorsPtrType FunctionUrlCorsArgs

func FunctionUrlCorsPtr(v *FunctionUrlCorsArgs) FunctionUrlCorsPtrInput {
	return (*functionUrlCorsPtrType)(v)
}

func (*functionUrlCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionUrlCors)(nil)).Elem()
}

func (i *functionUrlCorsPtrType) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return i.ToFunctionUrlCorsPtrOutputWithContext(context.Background())
}

func (i *functionUrlCorsPtrType) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlCorsPtrOutput)
}

type FunctionUrlCorsOutput struct{ *pulumi.OutputState }

func (FunctionUrlCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionUrlCors)(nil)).Elem()
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsOutput() FunctionUrlCorsOutput {
	return o
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsOutputWithContext(ctx context.Context) FunctionUrlCorsOutput {
	return o
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return o.ToFunctionUrlCorsPtrOutputWithContext(context.Background())
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionUrlCors) *FunctionUrlCors {
		return &v
	}).(FunctionUrlCorsPtrOutput)
}

// Whether to allow cookies or other credentials in requests to the function URL. The default is `false`.
func (o FunctionUrlCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionUrlCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// The HTTP headers that origins can include in requests to the function URL. For example: `["date", "keep-alive", "x-custom-header"]`.
func (o FunctionUrlCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// The HTTP methods that are allowed when calling the function URL. For example: `["GET", "POST", "DELETE"]`, or the wildcard character (`["*"]`).
func (o FunctionUrlCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

// The origins that can access the function URL. You can list any number of specific origins (or the wildcard character (`"*"`)), separated by a comma. For example: `["https://www.example.com", "http://localhost:60905"]`.
func (o FunctionUrlCorsOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.AllowOrigins }).(pulumi.StringArrayOutput)
}

// The HTTP headers in your function response that you want to expose to origins that call the function URL.
func (o FunctionUrlCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to `0`, which means that the browser doesn't cache results. The maximum value is `86400`.
func (o FunctionUrlCorsOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionUrlCors) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

type FunctionUrlCorsPtrOutput struct{ *pulumi.OutputState }

func (FunctionUrlCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionUrlCors)(nil)).Elem()
}

func (o FunctionUrlCorsPtrOutput) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return o
}

func (o FunctionUrlCorsPtrOutput) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return o
}

func (o FunctionUrlCorsPtrOutput) Elem() FunctionUrlCorsOutput {
	return o.ApplyT(func(v *FunctionUrlCors) FunctionUrlCors {
		if v != nil {
			return *v
		}
		var ret FunctionUrlCors
		return ret
	}).(FunctionUrlCorsOutput)
}

// Whether to allow cookies or other credentials in requests to the function URL. The default is `false`.
func (o FunctionUrlCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionUrlCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// The HTTP headers that origins can include in requests to the function URL. For example: `["date", "keep-alive", "x-custom-header"]`.
func (o FunctionUrlCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// The HTTP methods that are allowed when calling the function URL. For example: `["GET", "POST", "DELETE"]`, or the wildcard character (`["*"]`).
func (o FunctionUrlCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

// The origins that can access the function URL. You can list any number of specific origins (or the wildcard character (`"*"`)), separated by a comma. For example: `["https://www.example.com", "http://localhost:60905"]`.
func (o FunctionUrlCorsPtrOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(pulumi.StringArrayOutput)
}

// The HTTP headers in your function response that you want to expose to origins that call the function URL.
func (o FunctionUrlCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to `0`, which means that the browser doesn't cache results. The maximum value is `86400`.
func (o FunctionUrlCorsPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FunctionUrlCors) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

type FunctionVpcConfig struct {
	// List of security group IDs associated with the Lambda function.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of subnet IDs associated with the Lambda function.
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// FunctionVpcConfigInput is an input type that accepts FunctionVpcConfigArgs and FunctionVpcConfigOutput values.
// You can construct a concrete instance of `FunctionVpcConfigInput` via:
//
//          FunctionVpcConfigArgs{...}
type FunctionVpcConfigInput interface {
	pulumi.Input

	ToFunctionVpcConfigOutput() FunctionVpcConfigOutput
	ToFunctionVpcConfigOutputWithContext(context.Context) FunctionVpcConfigOutput
}

type FunctionVpcConfigArgs struct {
	// List of security group IDs associated with the Lambda function.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of subnet IDs associated with the Lambda function.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (FunctionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVpcConfig)(nil)).Elem()
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigOutput() FunctionVpcConfigOutput {
	return i.ToFunctionVpcConfigOutputWithContext(context.Background())
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigOutputWithContext(ctx context.Context) FunctionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigOutput)
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return i.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigOutput).ToFunctionVpcConfigPtrOutputWithContext(ctx)
}

// FunctionVpcConfigPtrInput is an input type that accepts FunctionVpcConfigArgs, FunctionVpcConfigPtr and FunctionVpcConfigPtrOutput values.
// You can construct a concrete instance of `FunctionVpcConfigPtrInput` via:
//
//          FunctionVpcConfigArgs{...}
//
//  or:
//
//          nil
type FunctionVpcConfigPtrInput interface {
	pulumi.Input

	ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput
	ToFunctionVpcConfigPtrOutputWithContext(context.Context) FunctionVpcConfigPtrOutput
}

type functionVpcConfigPtrType FunctionVpcConfigArgs

func FunctionVpcConfigPtr(v *FunctionVpcConfigArgs) FunctionVpcConfigPtrInput {
	return (*functionVpcConfigPtrType)(v)
}

func (*functionVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVpcConfig)(nil)).Elem()
}

func (i *functionVpcConfigPtrType) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return i.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (i *functionVpcConfigPtrType) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigPtrOutput)
}

type FunctionVpcConfigOutput struct{ *pulumi.OutputState }

func (FunctionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVpcConfig)(nil)).Elem()
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigOutput() FunctionVpcConfigOutput {
	return o
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigOutputWithContext(ctx context.Context) FunctionVpcConfigOutput {
	return o
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return o.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionVpcConfig) *FunctionVpcConfig {
		return &v
	}).(FunctionVpcConfigPtrOutput)
}

// List of security group IDs associated with the Lambda function.
func (o FunctionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of subnet IDs associated with the Lambda function.
func (o FunctionVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o FunctionVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type FunctionVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVpcConfig)(nil)).Elem()
}

func (o FunctionVpcConfigPtrOutput) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return o
}

func (o FunctionVpcConfigPtrOutput) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return o
}

func (o FunctionVpcConfigPtrOutput) Elem() FunctionVpcConfigOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) FunctionVpcConfig {
		if v != nil {
			return *v
		}
		var ret FunctionVpcConfig
		return ret
	}).(FunctionVpcConfigOutput)
}

// List of security group IDs associated with the Lambda function.
func (o FunctionVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// List of subnet IDs associated with the Lambda function.
func (o FunctionVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o FunctionVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type GetCodeSigningConfigAllowedPublisher struct {
	// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	SigningProfileVersionArns []string `pulumi:"signingProfileVersionArns"`
}

// GetCodeSigningConfigAllowedPublisherInput is an input type that accepts GetCodeSigningConfigAllowedPublisherArgs and GetCodeSigningConfigAllowedPublisherOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigAllowedPublisherInput` via:
//
//          GetCodeSigningConfigAllowedPublisherArgs{...}
type GetCodeSigningConfigAllowedPublisherInput interface {
	pulumi.Input

	ToGetCodeSigningConfigAllowedPublisherOutput() GetCodeSigningConfigAllowedPublisherOutput
	ToGetCodeSigningConfigAllowedPublisherOutputWithContext(context.Context) GetCodeSigningConfigAllowedPublisherOutput
}

type GetCodeSigningConfigAllowedPublisherArgs struct {
	// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	SigningProfileVersionArns pulumi.StringArrayInput `pulumi:"signingProfileVersionArns"`
}

func (GetCodeSigningConfigAllowedPublisherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (i GetCodeSigningConfigAllowedPublisherArgs) ToGetCodeSigningConfigAllowedPublisherOutput() GetCodeSigningConfigAllowedPublisherOutput {
	return i.ToGetCodeSigningConfigAllowedPublisherOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigAllowedPublisherArgs) ToGetCodeSigningConfigAllowedPublisherOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigAllowedPublisherOutput)
}

// GetCodeSigningConfigAllowedPublisherArrayInput is an input type that accepts GetCodeSigningConfigAllowedPublisherArray and GetCodeSigningConfigAllowedPublisherArrayOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigAllowedPublisherArrayInput` via:
//
//          GetCodeSigningConfigAllowedPublisherArray{ GetCodeSigningConfigAllowedPublisherArgs{...} }
type GetCodeSigningConfigAllowedPublisherArrayInput interface {
	pulumi.Input

	ToGetCodeSigningConfigAllowedPublisherArrayOutput() GetCodeSigningConfigAllowedPublisherArrayOutput
	ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(context.Context) GetCodeSigningConfigAllowedPublisherArrayOutput
}

type GetCodeSigningConfigAllowedPublisherArray []GetCodeSigningConfigAllowedPublisherInput

func (GetCodeSigningConfigAllowedPublisherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (i GetCodeSigningConfigAllowedPublisherArray) ToGetCodeSigningConfigAllowedPublisherArrayOutput() GetCodeSigningConfigAllowedPublisherArrayOutput {
	return i.ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigAllowedPublisherArray) ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigAllowedPublisherArrayOutput)
}

type GetCodeSigningConfigAllowedPublisherOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigAllowedPublisherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (o GetCodeSigningConfigAllowedPublisherOutput) ToGetCodeSigningConfigAllowedPublisherOutput() GetCodeSigningConfigAllowedPublisherOutput {
	return o
}

func (o GetCodeSigningConfigAllowedPublisherOutput) ToGetCodeSigningConfigAllowedPublisherOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherOutput {
	return o
}

// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
func (o GetCodeSigningConfigAllowedPublisherOutput) SigningProfileVersionArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCodeSigningConfigAllowedPublisher) []string { return v.SigningProfileVersionArns }).(pulumi.StringArrayOutput)
}

type GetCodeSigningConfigAllowedPublisherArrayOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigAllowedPublisherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (o GetCodeSigningConfigAllowedPublisherArrayOutput) ToGetCodeSigningConfigAllowedPublisherArrayOutput() GetCodeSigningConfigAllowedPublisherArrayOutput {
	return o
}

func (o GetCodeSigningConfigAllowedPublisherArrayOutput) ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherArrayOutput {
	return o
}

func (o GetCodeSigningConfigAllowedPublisherArrayOutput) Index(i pulumi.IntInput) GetCodeSigningConfigAllowedPublisherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCodeSigningConfigAllowedPublisher {
		return vs[0].([]GetCodeSigningConfigAllowedPublisher)[vs[1].(int)]
	}).(GetCodeSigningConfigAllowedPublisherOutput)
}

type GetCodeSigningConfigPolicy struct {
	// Code signing configuration policy for deployment validation failure.
	UntrustedArtifactOnDeployment string `pulumi:"untrustedArtifactOnDeployment"`
}

// GetCodeSigningConfigPolicyInput is an input type that accepts GetCodeSigningConfigPolicyArgs and GetCodeSigningConfigPolicyOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigPolicyInput` via:
//
//          GetCodeSigningConfigPolicyArgs{...}
type GetCodeSigningConfigPolicyInput interface {
	pulumi.Input

	ToGetCodeSigningConfigPolicyOutput() GetCodeSigningConfigPolicyOutput
	ToGetCodeSigningConfigPolicyOutputWithContext(context.Context) GetCodeSigningConfigPolicyOutput
}

type GetCodeSigningConfigPolicyArgs struct {
	// Code signing configuration policy for deployment validation failure.
	UntrustedArtifactOnDeployment pulumi.StringInput `pulumi:"untrustedArtifactOnDeployment"`
}

func (GetCodeSigningConfigPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (i GetCodeSigningConfigPolicyArgs) ToGetCodeSigningConfigPolicyOutput() GetCodeSigningConfigPolicyOutput {
	return i.ToGetCodeSigningConfigPolicyOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigPolicyArgs) ToGetCodeSigningConfigPolicyOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigPolicyOutput)
}

// GetCodeSigningConfigPolicyArrayInput is an input type that accepts GetCodeSigningConfigPolicyArray and GetCodeSigningConfigPolicyArrayOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigPolicyArrayInput` via:
//
//          GetCodeSigningConfigPolicyArray{ GetCodeSigningConfigPolicyArgs{...} }
type GetCodeSigningConfigPolicyArrayInput interface {
	pulumi.Input

	ToGetCodeSigningConfigPolicyArrayOutput() GetCodeSigningConfigPolicyArrayOutput
	ToGetCodeSigningConfigPolicyArrayOutputWithContext(context.Context) GetCodeSigningConfigPolicyArrayOutput
}

type GetCodeSigningConfigPolicyArray []GetCodeSigningConfigPolicyInput

func (GetCodeSigningConfigPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (i GetCodeSigningConfigPolicyArray) ToGetCodeSigningConfigPolicyArrayOutput() GetCodeSigningConfigPolicyArrayOutput {
	return i.ToGetCodeSigningConfigPolicyArrayOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigPolicyArray) ToGetCodeSigningConfigPolicyArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigPolicyArrayOutput)
}

type GetCodeSigningConfigPolicyOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (o GetCodeSigningConfigPolicyOutput) ToGetCodeSigningConfigPolicyOutput() GetCodeSigningConfigPolicyOutput {
	return o
}

func (o GetCodeSigningConfigPolicyOutput) ToGetCodeSigningConfigPolicyOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyOutput {
	return o
}

// Code signing configuration policy for deployment validation failure.
func (o GetCodeSigningConfigPolicyOutput) UntrustedArtifactOnDeployment() pulumi.StringOutput {
	return o.ApplyT(func(v GetCodeSigningConfigPolicy) string { return v.UntrustedArtifactOnDeployment }).(pulumi.StringOutput)
}

type GetCodeSigningConfigPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (o GetCodeSigningConfigPolicyArrayOutput) ToGetCodeSigningConfigPolicyArrayOutput() GetCodeSigningConfigPolicyArrayOutput {
	return o
}

func (o GetCodeSigningConfigPolicyArrayOutput) ToGetCodeSigningConfigPolicyArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyArrayOutput {
	return o
}

func (o GetCodeSigningConfigPolicyArrayOutput) Index(i pulumi.IntInput) GetCodeSigningConfigPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCodeSigningConfigPolicy {
		return vs[0].([]GetCodeSigningConfigPolicy)[vs[1].(int)]
	}).(GetCodeSigningConfigPolicyOutput)
}

type GetFunctionDeadLetterConfig struct {
	TargetArn string `pulumi:"targetArn"`
}

// GetFunctionDeadLetterConfigInput is an input type that accepts GetFunctionDeadLetterConfigArgs and GetFunctionDeadLetterConfigOutput values.
// You can construct a concrete instance of `GetFunctionDeadLetterConfigInput` via:
//
//          GetFunctionDeadLetterConfigArgs{...}
type GetFunctionDeadLetterConfigInput interface {
	pulumi.Input

	ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput
	ToGetFunctionDeadLetterConfigOutputWithContext(context.Context) GetFunctionDeadLetterConfigOutput
}

type GetFunctionDeadLetterConfigArgs struct {
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (GetFunctionDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionDeadLetterConfig)(nil)).Elem()
}

func (i GetFunctionDeadLetterConfigArgs) ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput {
	return i.ToGetFunctionDeadLetterConfigOutputWithContext(context.Background())
}

func (i GetFunctionDeadLetterConfigArgs) ToGetFunctionDeadLetterConfigOutputWithContext(ctx context.Context) GetFunctionDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionDeadLetterConfigOutput)
}

type GetFunctionDeadLetterConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionDeadLetterConfig)(nil)).Elem()
}

func (o GetFunctionDeadLetterConfigOutput) ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput {
	return o
}

func (o GetFunctionDeadLetterConfigOutput) ToGetFunctionDeadLetterConfigOutputWithContext(ctx context.Context) GetFunctionDeadLetterConfigOutput {
	return o
}

func (o GetFunctionDeadLetterConfigOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionDeadLetterConfig) string { return v.TargetArn }).(pulumi.StringOutput)
}

type GetFunctionEnvironment struct {
	Variables map[string]string `pulumi:"variables"`
}

// GetFunctionEnvironmentInput is an input type that accepts GetFunctionEnvironmentArgs and GetFunctionEnvironmentOutput values.
// You can construct a concrete instance of `GetFunctionEnvironmentInput` via:
//
//          GetFunctionEnvironmentArgs{...}
type GetFunctionEnvironmentInput interface {
	pulumi.Input

	ToGetFunctionEnvironmentOutput() GetFunctionEnvironmentOutput
	ToGetFunctionEnvironmentOutputWithContext(context.Context) GetFunctionEnvironmentOutput
}

type GetFunctionEnvironmentArgs struct {
	Variables pulumi.StringMapInput `pulumi:"variables"`
}

func (GetFunctionEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEnvironment)(nil)).Elem()
}

func (i GetFunctionEnvironmentArgs) ToGetFunctionEnvironmentOutput() GetFunctionEnvironmentOutput {
	return i.ToGetFunctionEnvironmentOutputWithContext(context.Background())
}

func (i GetFunctionEnvironmentArgs) ToGetFunctionEnvironmentOutputWithContext(ctx context.Context) GetFunctionEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEnvironmentOutput)
}

type GetFunctionEnvironmentOutput struct{ *pulumi.OutputState }

func (GetFunctionEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEnvironment)(nil)).Elem()
}

func (o GetFunctionEnvironmentOutput) ToGetFunctionEnvironmentOutput() GetFunctionEnvironmentOutput {
	return o
}

func (o GetFunctionEnvironmentOutput) ToGetFunctionEnvironmentOutputWithContext(ctx context.Context) GetFunctionEnvironmentOutput {
	return o
}

func (o GetFunctionEnvironmentOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFunctionEnvironment) map[string]string { return v.Variables }).(pulumi.StringMapOutput)
}

type GetFunctionEphemeralStorage struct {
	Size int `pulumi:"size"`
}

// GetFunctionEphemeralStorageInput is an input type that accepts GetFunctionEphemeralStorageArgs and GetFunctionEphemeralStorageOutput values.
// You can construct a concrete instance of `GetFunctionEphemeralStorageInput` via:
//
//          GetFunctionEphemeralStorageArgs{...}
type GetFunctionEphemeralStorageInput interface {
	pulumi.Input

	ToGetFunctionEphemeralStorageOutput() GetFunctionEphemeralStorageOutput
	ToGetFunctionEphemeralStorageOutputWithContext(context.Context) GetFunctionEphemeralStorageOutput
}

type GetFunctionEphemeralStorageArgs struct {
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetFunctionEphemeralStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEphemeralStorage)(nil)).Elem()
}

func (i GetFunctionEphemeralStorageArgs) ToGetFunctionEphemeralStorageOutput() GetFunctionEphemeralStorageOutput {
	return i.ToGetFunctionEphemeralStorageOutputWithContext(context.Background())
}

func (i GetFunctionEphemeralStorageArgs) ToGetFunctionEphemeralStorageOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEphemeralStorageOutput)
}

// GetFunctionEphemeralStorageArrayInput is an input type that accepts GetFunctionEphemeralStorageArray and GetFunctionEphemeralStorageArrayOutput values.
// You can construct a concrete instance of `GetFunctionEphemeralStorageArrayInput` via:
//
//          GetFunctionEphemeralStorageArray{ GetFunctionEphemeralStorageArgs{...} }
type GetFunctionEphemeralStorageArrayInput interface {
	pulumi.Input

	ToGetFunctionEphemeralStorageArrayOutput() GetFunctionEphemeralStorageArrayOutput
	ToGetFunctionEphemeralStorageArrayOutputWithContext(context.Context) GetFunctionEphemeralStorageArrayOutput
}

type GetFunctionEphemeralStorageArray []GetFunctionEphemeralStorageInput

func (GetFunctionEphemeralStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEphemeralStorage)(nil)).Elem()
}

func (i GetFunctionEphemeralStorageArray) ToGetFunctionEphemeralStorageArrayOutput() GetFunctionEphemeralStorageArrayOutput {
	return i.ToGetFunctionEphemeralStorageArrayOutputWithContext(context.Background())
}

func (i GetFunctionEphemeralStorageArray) ToGetFunctionEphemeralStorageArrayOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEphemeralStorageArrayOutput)
}

type GetFunctionEphemeralStorageOutput struct{ *pulumi.OutputState }

func (GetFunctionEphemeralStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEphemeralStorage)(nil)).Elem()
}

func (o GetFunctionEphemeralStorageOutput) ToGetFunctionEphemeralStorageOutput() GetFunctionEphemeralStorageOutput {
	return o
}

func (o GetFunctionEphemeralStorageOutput) ToGetFunctionEphemeralStorageOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageOutput {
	return o
}

func (o GetFunctionEphemeralStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionEphemeralStorage) int { return v.Size }).(pulumi.IntOutput)
}

type GetFunctionEphemeralStorageArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionEphemeralStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEphemeralStorage)(nil)).Elem()
}

func (o GetFunctionEphemeralStorageArrayOutput) ToGetFunctionEphemeralStorageArrayOutput() GetFunctionEphemeralStorageArrayOutput {
	return o
}

func (o GetFunctionEphemeralStorageArrayOutput) ToGetFunctionEphemeralStorageArrayOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageArrayOutput {
	return o
}

func (o GetFunctionEphemeralStorageArrayOutput) Index(i pulumi.IntInput) GetFunctionEphemeralStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionEphemeralStorage {
		return vs[0].([]GetFunctionEphemeralStorage)[vs[1].(int)]
	}).(GetFunctionEphemeralStorageOutput)
}

type GetFunctionFileSystemConfig struct {
	// Unqualified (no `:QUALIFIER` or `:VERSION` suffix) Amazon Resource Name (ARN) identifying your Lambda Function. See also `qualifiedArn`.
	Arn            string `pulumi:"arn"`
	LocalMountPath string `pulumi:"localMountPath"`
}

// GetFunctionFileSystemConfigInput is an input type that accepts GetFunctionFileSystemConfigArgs and GetFunctionFileSystemConfigOutput values.
// You can construct a concrete instance of `GetFunctionFileSystemConfigInput` via:
//
//          GetFunctionFileSystemConfigArgs{...}
type GetFunctionFileSystemConfigInput interface {
	pulumi.Input

	ToGetFunctionFileSystemConfigOutput() GetFunctionFileSystemConfigOutput
	ToGetFunctionFileSystemConfigOutputWithContext(context.Context) GetFunctionFileSystemConfigOutput
}

type GetFunctionFileSystemConfigArgs struct {
	// Unqualified (no `:QUALIFIER` or `:VERSION` suffix) Amazon Resource Name (ARN) identifying your Lambda Function. See also `qualifiedArn`.
	Arn            pulumi.StringInput `pulumi:"arn"`
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
}

func (GetFunctionFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionFileSystemConfig)(nil)).Elem()
}

func (i GetFunctionFileSystemConfigArgs) ToGetFunctionFileSystemConfigOutput() GetFunctionFileSystemConfigOutput {
	return i.ToGetFunctionFileSystemConfigOutputWithContext(context.Background())
}

func (i GetFunctionFileSystemConfigArgs) ToGetFunctionFileSystemConfigOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionFileSystemConfigOutput)
}

// GetFunctionFileSystemConfigArrayInput is an input type that accepts GetFunctionFileSystemConfigArray and GetFunctionFileSystemConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionFileSystemConfigArrayInput` via:
//
//          GetFunctionFileSystemConfigArray{ GetFunctionFileSystemConfigArgs{...} }
type GetFunctionFileSystemConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionFileSystemConfigArrayOutput() GetFunctionFileSystemConfigArrayOutput
	ToGetFunctionFileSystemConfigArrayOutputWithContext(context.Context) GetFunctionFileSystemConfigArrayOutput
}

type GetFunctionFileSystemConfigArray []GetFunctionFileSystemConfigInput

func (GetFunctionFileSystemConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionFileSystemConfig)(nil)).Elem()
}

func (i GetFunctionFileSystemConfigArray) ToGetFunctionFileSystemConfigArrayOutput() GetFunctionFileSystemConfigArrayOutput {
	return i.ToGetFunctionFileSystemConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionFileSystemConfigArray) ToGetFunctionFileSystemConfigArrayOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionFileSystemConfigArrayOutput)
}

type GetFunctionFileSystemConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionFileSystemConfig)(nil)).Elem()
}

func (o GetFunctionFileSystemConfigOutput) ToGetFunctionFileSystemConfigOutput() GetFunctionFileSystemConfigOutput {
	return o
}

func (o GetFunctionFileSystemConfigOutput) ToGetFunctionFileSystemConfigOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigOutput {
	return o
}

// Unqualified (no `:QUALIFIER` or `:VERSION` suffix) Amazon Resource Name (ARN) identifying your Lambda Function. See also `qualifiedArn`.
func (o GetFunctionFileSystemConfigOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionFileSystemConfig) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetFunctionFileSystemConfigOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionFileSystemConfig) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

type GetFunctionFileSystemConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionFileSystemConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionFileSystemConfig)(nil)).Elem()
}

func (o GetFunctionFileSystemConfigArrayOutput) ToGetFunctionFileSystemConfigArrayOutput() GetFunctionFileSystemConfigArrayOutput {
	return o
}

func (o GetFunctionFileSystemConfigArrayOutput) ToGetFunctionFileSystemConfigArrayOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigArrayOutput {
	return o
}

func (o GetFunctionFileSystemConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionFileSystemConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionFileSystemConfig {
		return vs[0].([]GetFunctionFileSystemConfig)[vs[1].(int)]
	}).(GetFunctionFileSystemConfigOutput)
}

type GetFunctionTracingConfig struct {
	Mode string `pulumi:"mode"`
}

// GetFunctionTracingConfigInput is an input type that accepts GetFunctionTracingConfigArgs and GetFunctionTracingConfigOutput values.
// You can construct a concrete instance of `GetFunctionTracingConfigInput` via:
//
//          GetFunctionTracingConfigArgs{...}
type GetFunctionTracingConfigInput interface {
	pulumi.Input

	ToGetFunctionTracingConfigOutput() GetFunctionTracingConfigOutput
	ToGetFunctionTracingConfigOutputWithContext(context.Context) GetFunctionTracingConfigOutput
}

type GetFunctionTracingConfigArgs struct {
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetFunctionTracingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTracingConfig)(nil)).Elem()
}

func (i GetFunctionTracingConfigArgs) ToGetFunctionTracingConfigOutput() GetFunctionTracingConfigOutput {
	return i.ToGetFunctionTracingConfigOutputWithContext(context.Background())
}

func (i GetFunctionTracingConfigArgs) ToGetFunctionTracingConfigOutputWithContext(ctx context.Context) GetFunctionTracingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTracingConfigOutput)
}

type GetFunctionTracingConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionTracingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTracingConfig)(nil)).Elem()
}

func (o GetFunctionTracingConfigOutput) ToGetFunctionTracingConfigOutput() GetFunctionTracingConfigOutput {
	return o
}

func (o GetFunctionTracingConfigOutput) ToGetFunctionTracingConfigOutputWithContext(ctx context.Context) GetFunctionTracingConfigOutput {
	return o
}

func (o GetFunctionTracingConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTracingConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type GetFunctionUrlCor struct {
	AllowCredentials bool     `pulumi:"allowCredentials"`
	AllowHeaders     []string `pulumi:"allowHeaders"`
	AllowMethods     []string `pulumi:"allowMethods"`
	AllowOrigins     []string `pulumi:"allowOrigins"`
	ExposeHeaders    []string `pulumi:"exposeHeaders"`
	MaxAge           int      `pulumi:"maxAge"`
}

// GetFunctionUrlCorInput is an input type that accepts GetFunctionUrlCorArgs and GetFunctionUrlCorOutput values.
// You can construct a concrete instance of `GetFunctionUrlCorInput` via:
//
//          GetFunctionUrlCorArgs{...}
type GetFunctionUrlCorInput interface {
	pulumi.Input

	ToGetFunctionUrlCorOutput() GetFunctionUrlCorOutput
	ToGetFunctionUrlCorOutputWithContext(context.Context) GetFunctionUrlCorOutput
}

type GetFunctionUrlCorArgs struct {
	AllowCredentials pulumi.BoolInput        `pulumi:"allowCredentials"`
	AllowHeaders     pulumi.StringArrayInput `pulumi:"allowHeaders"`
	AllowMethods     pulumi.StringArrayInput `pulumi:"allowMethods"`
	AllowOrigins     pulumi.StringArrayInput `pulumi:"allowOrigins"`
	ExposeHeaders    pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	MaxAge           pulumi.IntInput         `pulumi:"maxAge"`
}

func (GetFunctionUrlCorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionUrlCor)(nil)).Elem()
}

func (i GetFunctionUrlCorArgs) ToGetFunctionUrlCorOutput() GetFunctionUrlCorOutput {
	return i.ToGetFunctionUrlCorOutputWithContext(context.Background())
}

func (i GetFunctionUrlCorArgs) ToGetFunctionUrlCorOutputWithContext(ctx context.Context) GetFunctionUrlCorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionUrlCorOutput)
}

// GetFunctionUrlCorArrayInput is an input type that accepts GetFunctionUrlCorArray and GetFunctionUrlCorArrayOutput values.
// You can construct a concrete instance of `GetFunctionUrlCorArrayInput` via:
//
//          GetFunctionUrlCorArray{ GetFunctionUrlCorArgs{...} }
type GetFunctionUrlCorArrayInput interface {
	pulumi.Input

	ToGetFunctionUrlCorArrayOutput() GetFunctionUrlCorArrayOutput
	ToGetFunctionUrlCorArrayOutputWithContext(context.Context) GetFunctionUrlCorArrayOutput
}

type GetFunctionUrlCorArray []GetFunctionUrlCorInput

func (GetFunctionUrlCorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionUrlCor)(nil)).Elem()
}

func (i GetFunctionUrlCorArray) ToGetFunctionUrlCorArrayOutput() GetFunctionUrlCorArrayOutput {
	return i.ToGetFunctionUrlCorArrayOutputWithContext(context.Background())
}

func (i GetFunctionUrlCorArray) ToGetFunctionUrlCorArrayOutputWithContext(ctx context.Context) GetFunctionUrlCorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionUrlCorArrayOutput)
}

type GetFunctionUrlCorOutput struct{ *pulumi.OutputState }

func (GetFunctionUrlCorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionUrlCor)(nil)).Elem()
}

func (o GetFunctionUrlCorOutput) ToGetFunctionUrlCorOutput() GetFunctionUrlCorOutput {
	return o
}

func (o GetFunctionUrlCorOutput) ToGetFunctionUrlCorOutputWithContext(ctx context.Context) GetFunctionUrlCorOutput {
	return o
}

func (o GetFunctionUrlCorOutput) AllowCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) bool { return v.AllowCredentials }).(pulumi.BoolOutput)
}

func (o GetFunctionUrlCorOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

func (o GetFunctionUrlCorOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

func (o GetFunctionUrlCorOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.AllowOrigins }).(pulumi.StringArrayOutput)
}

func (o GetFunctionUrlCorOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o GetFunctionUrlCorOutput) MaxAge() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) int { return v.MaxAge }).(pulumi.IntOutput)
}

type GetFunctionUrlCorArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionUrlCorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionUrlCor)(nil)).Elem()
}

func (o GetFunctionUrlCorArrayOutput) ToGetFunctionUrlCorArrayOutput() GetFunctionUrlCorArrayOutput {
	return o
}

func (o GetFunctionUrlCorArrayOutput) ToGetFunctionUrlCorArrayOutputWithContext(ctx context.Context) GetFunctionUrlCorArrayOutput {
	return o
}

func (o GetFunctionUrlCorArrayOutput) Index(i pulumi.IntInput) GetFunctionUrlCorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionUrlCor {
		return vs[0].([]GetFunctionUrlCor)[vs[1].(int)]
	}).(GetFunctionUrlCorOutput)
}

type GetFunctionVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	SubnetIds        []string `pulumi:"subnetIds"`
	VpcId            string   `pulumi:"vpcId"`
}

// GetFunctionVpcConfigInput is an input type that accepts GetFunctionVpcConfigArgs and GetFunctionVpcConfigOutput values.
// You can construct a concrete instance of `GetFunctionVpcConfigInput` via:
//
//          GetFunctionVpcConfigArgs{...}
type GetFunctionVpcConfigInput interface {
	pulumi.Input

	ToGetFunctionVpcConfigOutput() GetFunctionVpcConfigOutput
	ToGetFunctionVpcConfigOutputWithContext(context.Context) GetFunctionVpcConfigOutput
}

type GetFunctionVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds        pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId            pulumi.StringInput      `pulumi:"vpcId"`
}

func (GetFunctionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionVpcConfig)(nil)).Elem()
}

func (i GetFunctionVpcConfigArgs) ToGetFunctionVpcConfigOutput() GetFunctionVpcConfigOutput {
	return i.ToGetFunctionVpcConfigOutputWithContext(context.Background())
}

func (i GetFunctionVpcConfigArgs) ToGetFunctionVpcConfigOutputWithContext(ctx context.Context) GetFunctionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionVpcConfigOutput)
}

type GetFunctionVpcConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionVpcConfig)(nil)).Elem()
}

func (o GetFunctionVpcConfigOutput) ToGetFunctionVpcConfigOutput() GetFunctionVpcConfigOutput {
	return o
}

func (o GetFunctionVpcConfigOutput) ToGetFunctionVpcConfigOutputWithContext(ctx context.Context) GetFunctionVpcConfigOutput {
	return o
}

func (o GetFunctionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o GetFunctionVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o GetFunctionVpcConfigOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionVpcConfig) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingConfigInput)(nil)).Elem(), AliasRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingConfigPtrInput)(nil)).Elem(), AliasRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigAllowedPublishersInput)(nil)).Elem(), CodeSigningConfigAllowedPublishersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigAllowedPublishersPtrInput)(nil)).Elem(), CodeSigningConfigAllowedPublishersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigPoliciesInput)(nil)).Elem(), CodeSigningConfigPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigPoliciesPtrInput)(nil)).Elem(), CodeSigningConfigPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigInput)(nil)).Elem(), EventSourceMappingDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigPtrInput)(nil)).Elem(), EventSourceMappingDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailureInput)(nil)).Elem(), EventSourceMappingDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailurePtrInput)(nil)).Elem(), EventSourceMappingDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaInput)(nil)).Elem(), EventSourceMappingFilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaPtrInput)(nil)).Elem(), EventSourceMappingFilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaFilterInput)(nil)).Elem(), EventSourceMappingFilterCriteriaFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaFilterArrayInput)(nil)).Elem(), EventSourceMappingFilterCriteriaFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedEventSourceInput)(nil)).Elem(), EventSourceMappingSelfManagedEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedEventSourcePtrInput)(nil)).Elem(), EventSourceMappingSelfManagedEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSourceAccessConfigurationInput)(nil)).Elem(), EventSourceMappingSourceAccessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSourceAccessConfigurationArrayInput)(nil)).Elem(), EventSourceMappingSourceAccessConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionDeadLetterConfigInput)(nil)).Elem(), FunctionDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionDeadLetterConfigPtrInput)(nil)).Elem(), FunctionDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEnvironmentInput)(nil)).Elem(), FunctionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEnvironmentPtrInput)(nil)).Elem(), FunctionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEphemeralStorageInput)(nil)).Elem(), FunctionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEphemeralStoragePtrInput)(nil)).Elem(), FunctionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigPtrInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailureInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccessInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFileSystemConfigInput)(nil)).Elem(), FunctionFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFileSystemConfigPtrInput)(nil)).Elem(), FunctionFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionImageConfigInput)(nil)).Elem(), FunctionImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionImageConfigPtrInput)(nil)).Elem(), FunctionImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTracingConfigInput)(nil)).Elem(), FunctionTracingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTracingConfigPtrInput)(nil)).Elem(), FunctionTracingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionUrlCorsInput)(nil)).Elem(), FunctionUrlCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionUrlCorsPtrInput)(nil)).Elem(), FunctionUrlCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVpcConfigInput)(nil)).Elem(), FunctionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVpcConfigPtrInput)(nil)).Elem(), FunctionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigAllowedPublisherInput)(nil)).Elem(), GetCodeSigningConfigAllowedPublisherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigAllowedPublisherArrayInput)(nil)).Elem(), GetCodeSigningConfigAllowedPublisherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigPolicyInput)(nil)).Elem(), GetCodeSigningConfigPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigPolicyArrayInput)(nil)).Elem(), GetCodeSigningConfigPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionDeadLetterConfigInput)(nil)).Elem(), GetFunctionDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEnvironmentInput)(nil)).Elem(), GetFunctionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEphemeralStorageInput)(nil)).Elem(), GetFunctionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEphemeralStorageArrayInput)(nil)).Elem(), GetFunctionEphemeralStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionFileSystemConfigInput)(nil)).Elem(), GetFunctionFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionFileSystemConfigArrayInput)(nil)).Elem(), GetFunctionFileSystemConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionTracingConfigInput)(nil)).Elem(), GetFunctionTracingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionUrlCorInput)(nil)).Elem(), GetFunctionUrlCorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionUrlCorArrayInput)(nil)).Elem(), GetFunctionUrlCorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionVpcConfigInput)(nil)).Elem(), GetFunctionVpcConfigArgs{})
	pulumi.RegisterOutputType(AliasRoutingConfigOutput{})
	pulumi.RegisterOutputType(AliasRoutingConfigPtrOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigAllowedPublishersOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigAllowedPublishersPtrOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigPoliciesOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigPoliciesPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigOnFailureOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigOnFailurePtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaFilterOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaFilterArrayOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedEventSourceOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedEventSourcePtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSourceAccessConfigurationOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSourceAccessConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FunctionDeadLetterConfigOutput{})
	pulumi.RegisterOutputType(FunctionDeadLetterConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionEnvironmentOutput{})
	pulumi.RegisterOutputType(FunctionEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(FunctionEphemeralStorageOutput{})
	pulumi.RegisterOutputType(FunctionEphemeralStoragePtrOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnFailureOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput{})
	pulumi.RegisterOutputType(FunctionFileSystemConfigOutput{})
	pulumi.RegisterOutputType(FunctionFileSystemConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionImageConfigOutput{})
	pulumi.RegisterOutputType(FunctionImageConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionTracingConfigOutput{})
	pulumi.RegisterOutputType(FunctionTracingConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionUrlCorsOutput{})
	pulumi.RegisterOutputType(FunctionUrlCorsPtrOutput{})
	pulumi.RegisterOutputType(FunctionVpcConfigOutput{})
	pulumi.RegisterOutputType(FunctionVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigAllowedPublisherOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigAllowedPublisherArrayOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigPolicyOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionDeadLetterConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionEnvironmentOutput{})
	pulumi.RegisterOutputType(GetFunctionEphemeralStorageOutput{})
	pulumi.RegisterOutputType(GetFunctionEphemeralStorageArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionFileSystemConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionFileSystemConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionTracingConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionUrlCorOutput{})
	pulumi.RegisterOutputType(GetFunctionUrlCorArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionVpcConfigOutput{})
}
