// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AliasRoutingConfig struct {
	// Map that defines the proportion of events that should be sent to different versions of a Lambda function.
	AdditionalVersionWeights map[string]float64 `pulumi:"additionalVersionWeights"`
}

// AliasRoutingConfigInput is an input type that accepts AliasRoutingConfigArgs and AliasRoutingConfigOutput values.
// You can construct a concrete instance of `AliasRoutingConfigInput` via:
//
//	AliasRoutingConfigArgs{...}
type AliasRoutingConfigInput interface {
	pulumi.Input

	ToAliasRoutingConfigOutput() AliasRoutingConfigOutput
	ToAliasRoutingConfigOutputWithContext(context.Context) AliasRoutingConfigOutput
}

type AliasRoutingConfigArgs struct {
	// Map that defines the proportion of events that should be sent to different versions of a Lambda function.
	AdditionalVersionWeights pulumi.Float64MapInput `pulumi:"additionalVersionWeights"`
}

func (AliasRoutingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingConfig)(nil)).Elem()
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigOutput() AliasRoutingConfigOutput {
	return i.ToAliasRoutingConfigOutputWithContext(context.Background())
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigOutputWithContext(ctx context.Context) AliasRoutingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigOutput)
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return i.ToAliasRoutingConfigPtrOutputWithContext(context.Background())
}

func (i AliasRoutingConfigArgs) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigOutput).ToAliasRoutingConfigPtrOutputWithContext(ctx)
}

// AliasRoutingConfigPtrInput is an input type that accepts AliasRoutingConfigArgs, AliasRoutingConfigPtr and AliasRoutingConfigPtrOutput values.
// You can construct a concrete instance of `AliasRoutingConfigPtrInput` via:
//
//	        AliasRoutingConfigArgs{...}
//
//	or:
//
//	        nil
type AliasRoutingConfigPtrInput interface {
	pulumi.Input

	ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput
	ToAliasRoutingConfigPtrOutputWithContext(context.Context) AliasRoutingConfigPtrOutput
}

type aliasRoutingConfigPtrType AliasRoutingConfigArgs

func AliasRoutingConfigPtr(v *AliasRoutingConfigArgs) AliasRoutingConfigPtrInput {
	return (*aliasRoutingConfigPtrType)(v)
}

func (*aliasRoutingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasRoutingConfig)(nil)).Elem()
}

func (i *aliasRoutingConfigPtrType) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return i.ToAliasRoutingConfigPtrOutputWithContext(context.Background())
}

func (i *aliasRoutingConfigPtrType) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigPtrOutput)
}

type AliasRoutingConfigOutput struct{ *pulumi.OutputState }

func (AliasRoutingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingConfig)(nil)).Elem()
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigOutput() AliasRoutingConfigOutput {
	return o
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigOutputWithContext(ctx context.Context) AliasRoutingConfigOutput {
	return o
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return o.ToAliasRoutingConfigPtrOutputWithContext(context.Background())
}

func (o AliasRoutingConfigOutput) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AliasRoutingConfig) *AliasRoutingConfig {
		return &v
	}).(AliasRoutingConfigPtrOutput)
}

// Map that defines the proportion of events that should be sent to different versions of a Lambda function.
func (o AliasRoutingConfigOutput) AdditionalVersionWeights() pulumi.Float64MapOutput {
	return o.ApplyT(func(v AliasRoutingConfig) map[string]float64 { return v.AdditionalVersionWeights }).(pulumi.Float64MapOutput)
}

type AliasRoutingConfigPtrOutput struct{ *pulumi.OutputState }

func (AliasRoutingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasRoutingConfig)(nil)).Elem()
}

func (o AliasRoutingConfigPtrOutput) ToAliasRoutingConfigPtrOutput() AliasRoutingConfigPtrOutput {
	return o
}

func (o AliasRoutingConfigPtrOutput) ToAliasRoutingConfigPtrOutputWithContext(ctx context.Context) AliasRoutingConfigPtrOutput {
	return o
}

func (o AliasRoutingConfigPtrOutput) Elem() AliasRoutingConfigOutput {
	return o.ApplyT(func(v *AliasRoutingConfig) AliasRoutingConfig {
		if v != nil {
			return *v
		}
		var ret AliasRoutingConfig
		return ret
	}).(AliasRoutingConfigOutput)
}

// Map that defines the proportion of events that should be sent to different versions of a Lambda function.
func (o AliasRoutingConfigPtrOutput) AdditionalVersionWeights() pulumi.Float64MapOutput {
	return o.ApplyT(func(v *AliasRoutingConfig) map[string]float64 {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionWeights
	}).(pulumi.Float64MapOutput)
}

type CodeSigningConfigAllowedPublishers struct {
	// Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
	SigningProfileVersionArns []string `pulumi:"signingProfileVersionArns"`
}

// CodeSigningConfigAllowedPublishersInput is an input type that accepts CodeSigningConfigAllowedPublishersArgs and CodeSigningConfigAllowedPublishersOutput values.
// You can construct a concrete instance of `CodeSigningConfigAllowedPublishersInput` via:
//
//	CodeSigningConfigAllowedPublishersArgs{...}
type CodeSigningConfigAllowedPublishersInput interface {
	pulumi.Input

	ToCodeSigningConfigAllowedPublishersOutput() CodeSigningConfigAllowedPublishersOutput
	ToCodeSigningConfigAllowedPublishersOutputWithContext(context.Context) CodeSigningConfigAllowedPublishersOutput
}

type CodeSigningConfigAllowedPublishersArgs struct {
	// Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
	SigningProfileVersionArns pulumi.StringArrayInput `pulumi:"signingProfileVersionArns"`
}

func (CodeSigningConfigAllowedPublishersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersOutput() CodeSigningConfigAllowedPublishersOutput {
	return i.ToCodeSigningConfigAllowedPublishersOutputWithContext(context.Background())
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigAllowedPublishersOutput)
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return i.ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Background())
}

func (i CodeSigningConfigAllowedPublishersArgs) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigAllowedPublishersOutput).ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx)
}

// CodeSigningConfigAllowedPublishersPtrInput is an input type that accepts CodeSigningConfigAllowedPublishersArgs, CodeSigningConfigAllowedPublishersPtr and CodeSigningConfigAllowedPublishersPtrOutput values.
// You can construct a concrete instance of `CodeSigningConfigAllowedPublishersPtrInput` via:
//
//	        CodeSigningConfigAllowedPublishersArgs{...}
//
//	or:
//
//	        nil
type CodeSigningConfigAllowedPublishersPtrInput interface {
	pulumi.Input

	ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput
	ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Context) CodeSigningConfigAllowedPublishersPtrOutput
}

type codeSigningConfigAllowedPublishersPtrType CodeSigningConfigAllowedPublishersArgs

func CodeSigningConfigAllowedPublishersPtr(v *CodeSigningConfigAllowedPublishersArgs) CodeSigningConfigAllowedPublishersPtrInput {
	return (*codeSigningConfigAllowedPublishersPtrType)(v)
}

func (*codeSigningConfigAllowedPublishersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (i *codeSigningConfigAllowedPublishersPtrType) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return i.ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Background())
}

func (i *codeSigningConfigAllowedPublishersPtrType) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigAllowedPublishersPtrOutput)
}

type CodeSigningConfigAllowedPublishersOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigAllowedPublishersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersOutput() CodeSigningConfigAllowedPublishersOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return o.ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(context.Background())
}

func (o CodeSigningConfigAllowedPublishersOutput) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeSigningConfigAllowedPublishers) *CodeSigningConfigAllowedPublishers {
		return &v
	}).(CodeSigningConfigAllowedPublishersPtrOutput)
}

// Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
func (o CodeSigningConfigAllowedPublishersOutput) SigningProfileVersionArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CodeSigningConfigAllowedPublishers) []string { return v.SigningProfileVersionArns }).(pulumi.StringArrayOutput)
}

type CodeSigningConfigAllowedPublishersPtrOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigAllowedPublishersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigAllowedPublishers)(nil)).Elem()
}

func (o CodeSigningConfigAllowedPublishersPtrOutput) ToCodeSigningConfigAllowedPublishersPtrOutput() CodeSigningConfigAllowedPublishersPtrOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersPtrOutput) ToCodeSigningConfigAllowedPublishersPtrOutputWithContext(ctx context.Context) CodeSigningConfigAllowedPublishersPtrOutput {
	return o
}

func (o CodeSigningConfigAllowedPublishersPtrOutput) Elem() CodeSigningConfigAllowedPublishersOutput {
	return o.ApplyT(func(v *CodeSigningConfigAllowedPublishers) CodeSigningConfigAllowedPublishers {
		if v != nil {
			return *v
		}
		var ret CodeSigningConfigAllowedPublishers
		return ret
	}).(CodeSigningConfigAllowedPublishersOutput)
}

// Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.
func (o CodeSigningConfigAllowedPublishersPtrOutput) SigningProfileVersionArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CodeSigningConfigAllowedPublishers) []string {
		if v == nil {
			return nil
		}
		return v.SigningProfileVersionArns
	}).(pulumi.StringArrayOutput)
}

type CodeSigningConfigPolicies struct {
	// Code signing configuration policy for deployment validation failure. If you set the policy to `Enforce`, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to `Warn`, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
	UntrustedArtifactOnDeployment string `pulumi:"untrustedArtifactOnDeployment"`
}

// CodeSigningConfigPoliciesInput is an input type that accepts CodeSigningConfigPoliciesArgs and CodeSigningConfigPoliciesOutput values.
// You can construct a concrete instance of `CodeSigningConfigPoliciesInput` via:
//
//	CodeSigningConfigPoliciesArgs{...}
type CodeSigningConfigPoliciesInput interface {
	pulumi.Input

	ToCodeSigningConfigPoliciesOutput() CodeSigningConfigPoliciesOutput
	ToCodeSigningConfigPoliciesOutputWithContext(context.Context) CodeSigningConfigPoliciesOutput
}

type CodeSigningConfigPoliciesArgs struct {
	// Code signing configuration policy for deployment validation failure. If you set the policy to `Enforce`, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to `Warn`, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
	UntrustedArtifactOnDeployment pulumi.StringInput `pulumi:"untrustedArtifactOnDeployment"`
}

func (CodeSigningConfigPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigPolicies)(nil)).Elem()
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesOutput() CodeSigningConfigPoliciesOutput {
	return i.ToCodeSigningConfigPoliciesOutputWithContext(context.Background())
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigPoliciesOutput)
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return i.ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Background())
}

func (i CodeSigningConfigPoliciesArgs) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigPoliciesOutput).ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx)
}

// CodeSigningConfigPoliciesPtrInput is an input type that accepts CodeSigningConfigPoliciesArgs, CodeSigningConfigPoliciesPtr and CodeSigningConfigPoliciesPtrOutput values.
// You can construct a concrete instance of `CodeSigningConfigPoliciesPtrInput` via:
//
//	        CodeSigningConfigPoliciesArgs{...}
//
//	or:
//
//	        nil
type CodeSigningConfigPoliciesPtrInput interface {
	pulumi.Input

	ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput
	ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Context) CodeSigningConfigPoliciesPtrOutput
}

type codeSigningConfigPoliciesPtrType CodeSigningConfigPoliciesArgs

func CodeSigningConfigPoliciesPtr(v *CodeSigningConfigPoliciesArgs) CodeSigningConfigPoliciesPtrInput {
	return (*codeSigningConfigPoliciesPtrType)(v)
}

func (*codeSigningConfigPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigPolicies)(nil)).Elem()
}

func (i *codeSigningConfigPoliciesPtrType) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return i.ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Background())
}

func (i *codeSigningConfigPoliciesPtrType) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeSigningConfigPoliciesPtrOutput)
}

type CodeSigningConfigPoliciesOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeSigningConfigPolicies)(nil)).Elem()
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesOutput() CodeSigningConfigPoliciesOutput {
	return o
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesOutput {
	return o
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return o.ToCodeSigningConfigPoliciesPtrOutputWithContext(context.Background())
}

func (o CodeSigningConfigPoliciesOutput) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeSigningConfigPolicies) *CodeSigningConfigPolicies {
		return &v
	}).(CodeSigningConfigPoliciesPtrOutput)
}

// Code signing configuration policy for deployment validation failure. If you set the policy to `Enforce`, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to `Warn`, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
func (o CodeSigningConfigPoliciesOutput) UntrustedArtifactOnDeployment() pulumi.StringOutput {
	return o.ApplyT(func(v CodeSigningConfigPolicies) string { return v.UntrustedArtifactOnDeployment }).(pulumi.StringOutput)
}

type CodeSigningConfigPoliciesPtrOutput struct{ *pulumi.OutputState }

func (CodeSigningConfigPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeSigningConfigPolicies)(nil)).Elem()
}

func (o CodeSigningConfigPoliciesPtrOutput) ToCodeSigningConfigPoliciesPtrOutput() CodeSigningConfigPoliciesPtrOutput {
	return o
}

func (o CodeSigningConfigPoliciesPtrOutput) ToCodeSigningConfigPoliciesPtrOutputWithContext(ctx context.Context) CodeSigningConfigPoliciesPtrOutput {
	return o
}

func (o CodeSigningConfigPoliciesPtrOutput) Elem() CodeSigningConfigPoliciesOutput {
	return o.ApplyT(func(v *CodeSigningConfigPolicies) CodeSigningConfigPolicies {
		if v != nil {
			return *v
		}
		var ret CodeSigningConfigPolicies
		return ret
	}).(CodeSigningConfigPoliciesOutput)
}

// Code signing configuration policy for deployment validation failure. If you set the policy to `Enforce`, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to `Warn`, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.
func (o CodeSigningConfigPoliciesPtrOutput) UntrustedArtifactOnDeployment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeSigningConfigPolicies) *string {
		if v == nil {
			return nil
		}
		return &v.UntrustedArtifactOnDeployment
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfig struct {
	// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [AmazonManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_AmazonManagedKafkaEventSourceConfig.html).
	ConsumerGroupId *string `pulumi:"consumerGroupId"`
	// Block for a Kafka schema registry setting. See below.
	SchemaRegistryConfig *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig `pulumi:"schemaRegistryConfig"`
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs and EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigInput` via:
//
//	EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs{...}
type EventSourceMappingAmazonManagedKafkaEventSourceConfigInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs struct {
	// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [AmazonManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_AmazonManagedKafkaEventSourceConfig.html).
	ConsumerGroupId pulumi.StringPtrInput `pulumi:"consumerGroupId"`
	// Block for a Kafka schema registry setting. See below.
	SchemaRegistryConfig EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput `pulumi:"schemaRegistryConfig"`
}

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput)
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput).ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs, EventSourceMappingAmazonManagedKafkaEventSourceConfigPtr and EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrInput` via:
//
//	        EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput
}

type eventSourceMappingAmazonManagedKafkaEventSourceConfigPtrType EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs

func EventSourceMappingAmazonManagedKafkaEventSourceConfigPtr(v *EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs) EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrInput {
	return (*eventSourceMappingAmazonManagedKafkaEventSourceConfigPtrType)(v)
}

func (*eventSourceMappingAmazonManagedKafkaEventSourceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingAmazonManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (i *eventSourceMappingAmazonManagedKafkaEventSourceConfigPtrType) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingAmazonManagedKafkaEventSourceConfigPtrType) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return o.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingAmazonManagedKafkaEventSourceConfig) *EventSourceMappingAmazonManagedKafkaEventSourceConfig {
		return &v
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput)
}

// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [AmazonManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_AmazonManagedKafkaEventSourceConfig.html).
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfig) *string { return v.ConsumerGroupId }).(pulumi.StringPtrOutput)
}

// Block for a Kafka schema registry setting. See below.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput) SchemaRegistryConfig() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfig) *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig {
		return v.SchemaRegistryConfig
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingAmazonManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput) Elem() EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfig) EventSourceMappingAmazonManagedKafkaEventSourceConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingAmazonManagedKafkaEventSourceConfig
		return ret
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput)
}

// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [AmazonManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_AmazonManagedKafkaEventSourceConfig.html).
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerGroupId
	}).(pulumi.StringPtrOutput)
}

// Block for a Kafka schema registry setting. See below.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput) SchemaRegistryConfig() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfig) *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryConfig
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig struct {
	// Configuration block for authentication Lambda uses to access the schema registry.
	AccessConfigs []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig `pulumi:"accessConfigs"`
	// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
	EventRecordFormat *string `pulumi:"eventRecordFormat"`
	// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
	SchemaRegistryUri *string `pulumi:"schemaRegistryUri"`
	// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
	SchemaValidationConfigs []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig `pulumi:"schemaValidationConfigs"`
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs and EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigInput` via:
//
//	EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{...}
type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs struct {
	// Configuration block for authentication Lambda uses to access the schema registry.
	AccessConfigs EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput `pulumi:"accessConfigs"`
	// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
	EventRecordFormat pulumi.StringPtrInput `pulumi:"eventRecordFormat"`
	// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
	SchemaRegistryUri pulumi.StringPtrInput `pulumi:"schemaRegistryUri"`
	// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
	SchemaValidationConfigs EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput `pulumi:"schemaValidationConfigs"`
}

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput)
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput).ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs, EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtr and EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput` via:
//
//	        EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput
}

type eventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs

func EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtr(v *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput {
	return (*eventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType)(v)
}

func (*eventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i *eventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig {
		return &v
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

// Configuration block for authentication Lambda uses to access the schema registry.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) AccessConfigs() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig {
		return v.AccessConfigs
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput)
}

// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) EventRecordFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		return v.EventRecordFormat
	}).(pulumi.StringPtrOutput)
}

// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		return v.SchemaRegistryUri
	}).(pulumi.StringPtrOutput)
}

// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) SchemaValidationConfigs() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig {
		return v.SchemaValidationConfigs
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) Elem() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig
		return ret
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput)
}

// Configuration block for authentication Lambda uses to access the schema registry.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) AccessConfigs() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig {
		if v == nil {
			return nil
		}
		return v.AccessConfigs
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput)
}

// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) EventRecordFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.EventRecordFormat
	}).(pulumi.StringPtrOutput)
}

// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryUri
	}).(pulumi.StringPtrOutput)
}

// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) SchemaValidationConfigs() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o.ApplyT(func(v *EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig {
		if v == nil {
			return nil
		}
		return v.SchemaValidationConfigs
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig struct {
	// Authentication type Lambda uses to access the schema registry.
	Type *string `pulumi:"type"`
	// URI of the secret (Secrets Manager secret ARN) used to authenticate with the schema registry.
	Uri *string `pulumi:"uri"`
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs and EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput` via:
//
//	EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs{...}
type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs struct {
	// Authentication type Lambda uses to access the schema registry.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// URI of the secret (Secrets Manager secret ARN) used to authenticate with the schema registry.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput)
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray and EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput` via:
//
//	EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray{ EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs{...} }
type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return o
}

// Authentication type Lambda uses to access the schema registry.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// URI of the secret (Secrets Manager secret ARN) used to authenticate with the schema registry.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig) *string {
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) Index(i pulumi.IntInput) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig {
		return vs[0].([]EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)[vs[1].(int)]
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig struct {
	// Message attribute to validate. Valid values: `KEY`, `VALUE`.
	Attribute *string `pulumi:"attribute"`
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs and EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput` via:
//
//	EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs{...}
type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs struct {
	// Message attribute to validate. Valid values: `KEY`, `VALUE`.
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
}

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput)
}

// EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput is an input type that accepts EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray and EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput` via:
//
//	EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray{ EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs{...} }
type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput interface {
	pulumi.Input

	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput
	ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray []EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return i.ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return o
}

// Message attribute to validate. Valid values: `KEY`, `VALUE`.
func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig) *string {
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput() EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) ToEventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o
}

func (o EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) Index(i pulumi.IntInput) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig {
		return vs[0].([]EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)[vs[1].(int)]
	}).(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput)
}

type EventSourceMappingDestinationConfig struct {
	// Destination configuration for failed invocations. See below.
	OnFailure *EventSourceMappingDestinationConfigOnFailure `pulumi:"onFailure"`
}

// EventSourceMappingDestinationConfigInput is an input type that accepts EventSourceMappingDestinationConfigArgs and EventSourceMappingDestinationConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigInput` via:
//
//	EventSourceMappingDestinationConfigArgs{...}
type EventSourceMappingDestinationConfigInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigOutput() EventSourceMappingDestinationConfigOutput
	ToEventSourceMappingDestinationConfigOutputWithContext(context.Context) EventSourceMappingDestinationConfigOutput
}

type EventSourceMappingDestinationConfigArgs struct {
	// Destination configuration for failed invocations. See below.
	OnFailure EventSourceMappingDestinationConfigOnFailurePtrInput `pulumi:"onFailure"`
}

func (EventSourceMappingDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigOutput() EventSourceMappingDestinationConfigOutput {
	return i.ToEventSourceMappingDestinationConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOutput)
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return i.ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigArgs) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOutput).ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingDestinationConfigPtrInput is an input type that accepts EventSourceMappingDestinationConfigArgs, EventSourceMappingDestinationConfigPtr and EventSourceMappingDestinationConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigPtrInput` via:
//
//	        EventSourceMappingDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingDestinationConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput
	ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Context) EventSourceMappingDestinationConfigPtrOutput
}

type eventSourceMappingDestinationConfigPtrType EventSourceMappingDestinationConfigArgs

func EventSourceMappingDestinationConfigPtr(v *EventSourceMappingDestinationConfigArgs) EventSourceMappingDestinationConfigPtrInput {
	return (*eventSourceMappingDestinationConfigPtrType)(v)
}

func (*eventSourceMappingDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (i *eventSourceMappingDestinationConfigPtrType) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return i.ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingDestinationConfigPtrType) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigPtrOutput)
}

type EventSourceMappingDestinationConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigOutput() EventSourceMappingDestinationConfigOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return o.ToEventSourceMappingDestinationConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingDestinationConfigOutput) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingDestinationConfig) *EventSourceMappingDestinationConfig {
		return &v
	}).(EventSourceMappingDestinationConfigPtrOutput)
}

// Destination configuration for failed invocations. See below.
func (o EventSourceMappingDestinationConfigOutput) OnFailure() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v EventSourceMappingDestinationConfig) *EventSourceMappingDestinationConfigOnFailure {
		return v.OnFailure
	}).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

type EventSourceMappingDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfig)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigPtrOutput) ToEventSourceMappingDestinationConfigPtrOutput() EventSourceMappingDestinationConfigPtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigPtrOutput) ToEventSourceMappingDestinationConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigPtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigPtrOutput) Elem() EventSourceMappingDestinationConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfig) EventSourceMappingDestinationConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingDestinationConfig
		return ret
	}).(EventSourceMappingDestinationConfigOutput)
}

// Destination configuration for failed invocations. See below.
func (o EventSourceMappingDestinationConfigPtrOutput) OnFailure() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfig) *EventSourceMappingDestinationConfigOnFailure {
		if v == nil {
			return nil
		}
		return v.OnFailure
	}).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

type EventSourceMappingDestinationConfigOnFailure struct {
	// ARN of the destination resource.
	DestinationArn string `pulumi:"destinationArn"`
}

// EventSourceMappingDestinationConfigOnFailureInput is an input type that accepts EventSourceMappingDestinationConfigOnFailureArgs and EventSourceMappingDestinationConfigOnFailureOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigOnFailureInput` via:
//
//	EventSourceMappingDestinationConfigOnFailureArgs{...}
type EventSourceMappingDestinationConfigOnFailureInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigOnFailureOutput() EventSourceMappingDestinationConfigOnFailureOutput
	ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(context.Context) EventSourceMappingDestinationConfigOnFailureOutput
}

type EventSourceMappingDestinationConfigOnFailureArgs struct {
	// ARN of the destination resource.
	DestinationArn pulumi.StringInput `pulumi:"destinationArn"`
}

func (EventSourceMappingDestinationConfigOnFailureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailureOutput() EventSourceMappingDestinationConfigOnFailureOutput {
	return i.ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOnFailureOutput)
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return i.ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i EventSourceMappingDestinationConfigOnFailureArgs) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOnFailureOutput).ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx)
}

// EventSourceMappingDestinationConfigOnFailurePtrInput is an input type that accepts EventSourceMappingDestinationConfigOnFailureArgs, EventSourceMappingDestinationConfigOnFailurePtr and EventSourceMappingDestinationConfigOnFailurePtrOutput values.
// You can construct a concrete instance of `EventSourceMappingDestinationConfigOnFailurePtrInput` via:
//
//	        EventSourceMappingDestinationConfigOnFailureArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingDestinationConfigOnFailurePtrInput interface {
	pulumi.Input

	ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput
	ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput
}

type eventSourceMappingDestinationConfigOnFailurePtrType EventSourceMappingDestinationConfigOnFailureArgs

func EventSourceMappingDestinationConfigOnFailurePtr(v *EventSourceMappingDestinationConfigOnFailureArgs) EventSourceMappingDestinationConfigOnFailurePtrInput {
	return (*eventSourceMappingDestinationConfigOnFailurePtrType)(v)
}

func (*eventSourceMappingDestinationConfigOnFailurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (i *eventSourceMappingDestinationConfigOnFailurePtrType) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return i.ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingDestinationConfigOnFailurePtrType) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

type EventSourceMappingDestinationConfigOnFailureOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigOnFailureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailureOutput() EventSourceMappingDestinationConfigOnFailureOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailureOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailureOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (o EventSourceMappingDestinationConfigOnFailureOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingDestinationConfigOnFailure) *EventSourceMappingDestinationConfigOnFailure {
		return &v
	}).(EventSourceMappingDestinationConfigOnFailurePtrOutput)
}

// ARN of the destination resource.
func (o EventSourceMappingDestinationConfigOnFailureOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceMappingDestinationConfigOnFailure) string { return v.DestinationArn }).(pulumi.StringOutput)
}

type EventSourceMappingDestinationConfigOnFailurePtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDestinationConfigOnFailurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDestinationConfigOnFailure)(nil)).Elem()
}

func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutput() EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) ToEventSourceMappingDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) EventSourceMappingDestinationConfigOnFailurePtrOutput {
	return o
}

func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) Elem() EventSourceMappingDestinationConfigOnFailureOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfigOnFailure) EventSourceMappingDestinationConfigOnFailure {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingDestinationConfigOnFailure
		return ret
	}).(EventSourceMappingDestinationConfigOnFailureOutput)
}

// ARN of the destination resource.
func (o EventSourceMappingDestinationConfigOnFailurePtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingDestinationConfigOnFailure) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingDocumentDbEventSourceConfig struct {
	// Name of the collection to consume within the database. If you do not specify a collection, Lambda consumes all collections.
	CollectionName *string `pulumi:"collectionName"`
	// Name of the database to consume within the DocumentDB cluster.
	DatabaseName string `pulumi:"databaseName"`
	// Determines what DocumentDB sends to your event stream during document update operations. If set to `UpdateLookup`, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes. Valid values: `UpdateLookup`, `Default`.
	FullDocument *string `pulumi:"fullDocument"`
}

// EventSourceMappingDocumentDbEventSourceConfigInput is an input type that accepts EventSourceMappingDocumentDbEventSourceConfigArgs and EventSourceMappingDocumentDbEventSourceConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingDocumentDbEventSourceConfigInput` via:
//
//	EventSourceMappingDocumentDbEventSourceConfigArgs{...}
type EventSourceMappingDocumentDbEventSourceConfigInput interface {
	pulumi.Input

	ToEventSourceMappingDocumentDbEventSourceConfigOutput() EventSourceMappingDocumentDbEventSourceConfigOutput
	ToEventSourceMappingDocumentDbEventSourceConfigOutputWithContext(context.Context) EventSourceMappingDocumentDbEventSourceConfigOutput
}

type EventSourceMappingDocumentDbEventSourceConfigArgs struct {
	// Name of the collection to consume within the database. If you do not specify a collection, Lambda consumes all collections.
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Name of the database to consume within the DocumentDB cluster.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Determines what DocumentDB sends to your event stream during document update operations. If set to `UpdateLookup`, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes. Valid values: `UpdateLookup`, `Default`.
	FullDocument pulumi.StringPtrInput `pulumi:"fullDocument"`
}

func (EventSourceMappingDocumentDbEventSourceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDocumentDbEventSourceConfig)(nil)).Elem()
}

func (i EventSourceMappingDocumentDbEventSourceConfigArgs) ToEventSourceMappingDocumentDbEventSourceConfigOutput() EventSourceMappingDocumentDbEventSourceConfigOutput {
	return i.ToEventSourceMappingDocumentDbEventSourceConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingDocumentDbEventSourceConfigArgs) ToEventSourceMappingDocumentDbEventSourceConfigOutputWithContext(ctx context.Context) EventSourceMappingDocumentDbEventSourceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDocumentDbEventSourceConfigOutput)
}

func (i EventSourceMappingDocumentDbEventSourceConfigArgs) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutput() EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return i.ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingDocumentDbEventSourceConfigArgs) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDocumentDbEventSourceConfigOutput).ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingDocumentDbEventSourceConfigPtrInput is an input type that accepts EventSourceMappingDocumentDbEventSourceConfigArgs, EventSourceMappingDocumentDbEventSourceConfigPtr and EventSourceMappingDocumentDbEventSourceConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingDocumentDbEventSourceConfigPtrInput` via:
//
//	        EventSourceMappingDocumentDbEventSourceConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingDocumentDbEventSourceConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingDocumentDbEventSourceConfigPtrOutput() EventSourceMappingDocumentDbEventSourceConfigPtrOutput
	ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(context.Context) EventSourceMappingDocumentDbEventSourceConfigPtrOutput
}

type eventSourceMappingDocumentDbEventSourceConfigPtrType EventSourceMappingDocumentDbEventSourceConfigArgs

func EventSourceMappingDocumentDbEventSourceConfigPtr(v *EventSourceMappingDocumentDbEventSourceConfigArgs) EventSourceMappingDocumentDbEventSourceConfigPtrInput {
	return (*eventSourceMappingDocumentDbEventSourceConfigPtrType)(v)
}

func (*eventSourceMappingDocumentDbEventSourceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDocumentDbEventSourceConfig)(nil)).Elem()
}

func (i *eventSourceMappingDocumentDbEventSourceConfigPtrType) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutput() EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return i.ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingDocumentDbEventSourceConfigPtrType) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingDocumentDbEventSourceConfigPtrOutput)
}

type EventSourceMappingDocumentDbEventSourceConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDocumentDbEventSourceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingDocumentDbEventSourceConfig)(nil)).Elem()
}

func (o EventSourceMappingDocumentDbEventSourceConfigOutput) ToEventSourceMappingDocumentDbEventSourceConfigOutput() EventSourceMappingDocumentDbEventSourceConfigOutput {
	return o
}

func (o EventSourceMappingDocumentDbEventSourceConfigOutput) ToEventSourceMappingDocumentDbEventSourceConfigOutputWithContext(ctx context.Context) EventSourceMappingDocumentDbEventSourceConfigOutput {
	return o
}

func (o EventSourceMappingDocumentDbEventSourceConfigOutput) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutput() EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return o.ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingDocumentDbEventSourceConfigOutput) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingDocumentDbEventSourceConfig) *EventSourceMappingDocumentDbEventSourceConfig {
		return &v
	}).(EventSourceMappingDocumentDbEventSourceConfigPtrOutput)
}

// Name of the collection to consume within the database. If you do not specify a collection, Lambda consumes all collections.
func (o EventSourceMappingDocumentDbEventSourceConfigOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingDocumentDbEventSourceConfig) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Name of the database to consume within the DocumentDB cluster.
func (o EventSourceMappingDocumentDbEventSourceConfigOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceMappingDocumentDbEventSourceConfig) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Determines what DocumentDB sends to your event stream during document update operations. If set to `UpdateLookup`, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes. Valid values: `UpdateLookup`, `Default`.
func (o EventSourceMappingDocumentDbEventSourceConfigOutput) FullDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingDocumentDbEventSourceConfig) *string { return v.FullDocument }).(pulumi.StringPtrOutput)
}

type EventSourceMappingDocumentDbEventSourceConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingDocumentDbEventSourceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingDocumentDbEventSourceConfig)(nil)).Elem()
}

func (o EventSourceMappingDocumentDbEventSourceConfigPtrOutput) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutput() EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return o
}

func (o EventSourceMappingDocumentDbEventSourceConfigPtrOutput) ToEventSourceMappingDocumentDbEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingDocumentDbEventSourceConfigPtrOutput {
	return o
}

func (o EventSourceMappingDocumentDbEventSourceConfigPtrOutput) Elem() EventSourceMappingDocumentDbEventSourceConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingDocumentDbEventSourceConfig) EventSourceMappingDocumentDbEventSourceConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingDocumentDbEventSourceConfig
		return ret
	}).(EventSourceMappingDocumentDbEventSourceConfigOutput)
}

// Name of the collection to consume within the database. If you do not specify a collection, Lambda consumes all collections.
func (o EventSourceMappingDocumentDbEventSourceConfigPtrOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingDocumentDbEventSourceConfig) *string {
		if v == nil {
			return nil
		}
		return v.CollectionName
	}).(pulumi.StringPtrOutput)
}

// Name of the database to consume within the DocumentDB cluster.
func (o EventSourceMappingDocumentDbEventSourceConfigPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingDocumentDbEventSourceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Determines what DocumentDB sends to your event stream during document update operations. If set to `UpdateLookup`, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes. Valid values: `UpdateLookup`, `Default`.
func (o EventSourceMappingDocumentDbEventSourceConfigPtrOutput) FullDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingDocumentDbEventSourceConfig) *string {
		if v == nil {
			return nil
		}
		return v.FullDocument
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingFilterCriteria struct {
	// Set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. See below.
	Filters []EventSourceMappingFilterCriteriaFilter `pulumi:"filters"`
}

// EventSourceMappingFilterCriteriaInput is an input type that accepts EventSourceMappingFilterCriteriaArgs and EventSourceMappingFilterCriteriaOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaInput` via:
//
//	EventSourceMappingFilterCriteriaArgs{...}
type EventSourceMappingFilterCriteriaInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaOutput() EventSourceMappingFilterCriteriaOutput
	ToEventSourceMappingFilterCriteriaOutputWithContext(context.Context) EventSourceMappingFilterCriteriaOutput
}

type EventSourceMappingFilterCriteriaArgs struct {
	// Set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. See below.
	Filters EventSourceMappingFilterCriteriaFilterArrayInput `pulumi:"filters"`
}

func (EventSourceMappingFilterCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaOutput() EventSourceMappingFilterCriteriaOutput {
	return i.ToEventSourceMappingFilterCriteriaOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaOutput)
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return i.ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaArgs) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaOutput).ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx)
}

// EventSourceMappingFilterCriteriaPtrInput is an input type that accepts EventSourceMappingFilterCriteriaArgs, EventSourceMappingFilterCriteriaPtr and EventSourceMappingFilterCriteriaPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaPtrInput` via:
//
//	        EventSourceMappingFilterCriteriaArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingFilterCriteriaPtrInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput
	ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Context) EventSourceMappingFilterCriteriaPtrOutput
}

type eventSourceMappingFilterCriteriaPtrType EventSourceMappingFilterCriteriaArgs

func EventSourceMappingFilterCriteriaPtr(v *EventSourceMappingFilterCriteriaArgs) EventSourceMappingFilterCriteriaPtrInput {
	return (*eventSourceMappingFilterCriteriaPtrType)(v)
}

func (*eventSourceMappingFilterCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (i *eventSourceMappingFilterCriteriaPtrType) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return i.ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingFilterCriteriaPtrType) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaPtrOutput)
}

type EventSourceMappingFilterCriteriaOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaOutput() EventSourceMappingFilterCriteriaOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return o.ToEventSourceMappingFilterCriteriaPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingFilterCriteriaOutput) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingFilterCriteria) *EventSourceMappingFilterCriteria {
		return &v
	}).(EventSourceMappingFilterCriteriaPtrOutput)
}

// Set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. See below.
func (o EventSourceMappingFilterCriteriaOutput) Filters() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o.ApplyT(func(v EventSourceMappingFilterCriteria) []EventSourceMappingFilterCriteriaFilter { return v.Filters }).(EventSourceMappingFilterCriteriaFilterArrayOutput)
}

type EventSourceMappingFilterCriteriaPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingFilterCriteria)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaPtrOutput) ToEventSourceMappingFilterCriteriaPtrOutput() EventSourceMappingFilterCriteriaPtrOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaPtrOutput) ToEventSourceMappingFilterCriteriaPtrOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaPtrOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaPtrOutput) Elem() EventSourceMappingFilterCriteriaOutput {
	return o.ApplyT(func(v *EventSourceMappingFilterCriteria) EventSourceMappingFilterCriteria {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingFilterCriteria
		return ret
	}).(EventSourceMappingFilterCriteriaOutput)
}

// Set of up to 5 filter. If an event satisfies at least one, Lambda sends the event to the function or adds it to the next batch. See below.
func (o EventSourceMappingFilterCriteriaPtrOutput) Filters() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o.ApplyT(func(v *EventSourceMappingFilterCriteria) []EventSourceMappingFilterCriteriaFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(EventSourceMappingFilterCriteriaFilterArrayOutput)
}

type EventSourceMappingFilterCriteriaFilter struct {
	// Filter pattern up to 4096 characters. See [Filter Rule Syntax](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax).
	Pattern *string `pulumi:"pattern"`
}

// EventSourceMappingFilterCriteriaFilterInput is an input type that accepts EventSourceMappingFilterCriteriaFilterArgs and EventSourceMappingFilterCriteriaFilterOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaFilterInput` via:
//
//	EventSourceMappingFilterCriteriaFilterArgs{...}
type EventSourceMappingFilterCriteriaFilterInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaFilterOutput() EventSourceMappingFilterCriteriaFilterOutput
	ToEventSourceMappingFilterCriteriaFilterOutputWithContext(context.Context) EventSourceMappingFilterCriteriaFilterOutput
}

type EventSourceMappingFilterCriteriaFilterArgs struct {
	// Filter pattern up to 4096 characters. See [Filter Rule Syntax](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax).
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
}

func (EventSourceMappingFilterCriteriaFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (i EventSourceMappingFilterCriteriaFilterArgs) ToEventSourceMappingFilterCriteriaFilterOutput() EventSourceMappingFilterCriteriaFilterOutput {
	return i.ToEventSourceMappingFilterCriteriaFilterOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaFilterArgs) ToEventSourceMappingFilterCriteriaFilterOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaFilterOutput)
}

// EventSourceMappingFilterCriteriaFilterArrayInput is an input type that accepts EventSourceMappingFilterCriteriaFilterArray and EventSourceMappingFilterCriteriaFilterArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingFilterCriteriaFilterArrayInput` via:
//
//	EventSourceMappingFilterCriteriaFilterArray{ EventSourceMappingFilterCriteriaFilterArgs{...} }
type EventSourceMappingFilterCriteriaFilterArrayInput interface {
	pulumi.Input

	ToEventSourceMappingFilterCriteriaFilterArrayOutput() EventSourceMappingFilterCriteriaFilterArrayOutput
	ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(context.Context) EventSourceMappingFilterCriteriaFilterArrayOutput
}

type EventSourceMappingFilterCriteriaFilterArray []EventSourceMappingFilterCriteriaFilterInput

func (EventSourceMappingFilterCriteriaFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (i EventSourceMappingFilterCriteriaFilterArray) ToEventSourceMappingFilterCriteriaFilterArrayOutput() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return i.ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingFilterCriteriaFilterArray) ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingFilterCriteriaFilterArrayOutput)
}

type EventSourceMappingFilterCriteriaFilterOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaFilterOutput) ToEventSourceMappingFilterCriteriaFilterOutput() EventSourceMappingFilterCriteriaFilterOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaFilterOutput) ToEventSourceMappingFilterCriteriaFilterOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterOutput {
	return o
}

// Filter pattern up to 4096 characters. See [Filter Rule Syntax](https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax).
func (o EventSourceMappingFilterCriteriaFilterOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingFilterCriteriaFilter) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

type EventSourceMappingFilterCriteriaFilterArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingFilterCriteriaFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingFilterCriteriaFilter)(nil)).Elem()
}

func (o EventSourceMappingFilterCriteriaFilterArrayOutput) ToEventSourceMappingFilterCriteriaFilterArrayOutput() EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaFilterArrayOutput) ToEventSourceMappingFilterCriteriaFilterArrayOutputWithContext(ctx context.Context) EventSourceMappingFilterCriteriaFilterArrayOutput {
	return o
}

func (o EventSourceMappingFilterCriteriaFilterArrayOutput) Index(i pulumi.IntInput) EventSourceMappingFilterCriteriaFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingFilterCriteriaFilter {
		return vs[0].([]EventSourceMappingFilterCriteriaFilter)[vs[1].(int)]
	}).(EventSourceMappingFilterCriteriaFilterOutput)
}

type EventSourceMappingMetricsConfig struct {
	// List containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
	Metrics []string `pulumi:"metrics"`
}

// EventSourceMappingMetricsConfigInput is an input type that accepts EventSourceMappingMetricsConfigArgs and EventSourceMappingMetricsConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingMetricsConfigInput` via:
//
//	EventSourceMappingMetricsConfigArgs{...}
type EventSourceMappingMetricsConfigInput interface {
	pulumi.Input

	ToEventSourceMappingMetricsConfigOutput() EventSourceMappingMetricsConfigOutput
	ToEventSourceMappingMetricsConfigOutputWithContext(context.Context) EventSourceMappingMetricsConfigOutput
}

type EventSourceMappingMetricsConfigArgs struct {
	// List containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
	Metrics pulumi.StringArrayInput `pulumi:"metrics"`
}

func (EventSourceMappingMetricsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingMetricsConfig)(nil)).Elem()
}

func (i EventSourceMappingMetricsConfigArgs) ToEventSourceMappingMetricsConfigOutput() EventSourceMappingMetricsConfigOutput {
	return i.ToEventSourceMappingMetricsConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingMetricsConfigArgs) ToEventSourceMappingMetricsConfigOutputWithContext(ctx context.Context) EventSourceMappingMetricsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingMetricsConfigOutput)
}

func (i EventSourceMappingMetricsConfigArgs) ToEventSourceMappingMetricsConfigPtrOutput() EventSourceMappingMetricsConfigPtrOutput {
	return i.ToEventSourceMappingMetricsConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingMetricsConfigArgs) ToEventSourceMappingMetricsConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingMetricsConfigOutput).ToEventSourceMappingMetricsConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingMetricsConfigPtrInput is an input type that accepts EventSourceMappingMetricsConfigArgs, EventSourceMappingMetricsConfigPtr and EventSourceMappingMetricsConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingMetricsConfigPtrInput` via:
//
//	        EventSourceMappingMetricsConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingMetricsConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingMetricsConfigPtrOutput() EventSourceMappingMetricsConfigPtrOutput
	ToEventSourceMappingMetricsConfigPtrOutputWithContext(context.Context) EventSourceMappingMetricsConfigPtrOutput
}

type eventSourceMappingMetricsConfigPtrType EventSourceMappingMetricsConfigArgs

func EventSourceMappingMetricsConfigPtr(v *EventSourceMappingMetricsConfigArgs) EventSourceMappingMetricsConfigPtrInput {
	return (*eventSourceMappingMetricsConfigPtrType)(v)
}

func (*eventSourceMappingMetricsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingMetricsConfig)(nil)).Elem()
}

func (i *eventSourceMappingMetricsConfigPtrType) ToEventSourceMappingMetricsConfigPtrOutput() EventSourceMappingMetricsConfigPtrOutput {
	return i.ToEventSourceMappingMetricsConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingMetricsConfigPtrType) ToEventSourceMappingMetricsConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingMetricsConfigPtrOutput)
}

type EventSourceMappingMetricsConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingMetricsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingMetricsConfig)(nil)).Elem()
}

func (o EventSourceMappingMetricsConfigOutput) ToEventSourceMappingMetricsConfigOutput() EventSourceMappingMetricsConfigOutput {
	return o
}

func (o EventSourceMappingMetricsConfigOutput) ToEventSourceMappingMetricsConfigOutputWithContext(ctx context.Context) EventSourceMappingMetricsConfigOutput {
	return o
}

func (o EventSourceMappingMetricsConfigOutput) ToEventSourceMappingMetricsConfigPtrOutput() EventSourceMappingMetricsConfigPtrOutput {
	return o.ToEventSourceMappingMetricsConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingMetricsConfigOutput) ToEventSourceMappingMetricsConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingMetricsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingMetricsConfig) *EventSourceMappingMetricsConfig {
		return &v
	}).(EventSourceMappingMetricsConfigPtrOutput)
}

// List containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
func (o EventSourceMappingMetricsConfigOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventSourceMappingMetricsConfig) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

type EventSourceMappingMetricsConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingMetricsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingMetricsConfig)(nil)).Elem()
}

func (o EventSourceMappingMetricsConfigPtrOutput) ToEventSourceMappingMetricsConfigPtrOutput() EventSourceMappingMetricsConfigPtrOutput {
	return o
}

func (o EventSourceMappingMetricsConfigPtrOutput) ToEventSourceMappingMetricsConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingMetricsConfigPtrOutput {
	return o
}

func (o EventSourceMappingMetricsConfigPtrOutput) Elem() EventSourceMappingMetricsConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingMetricsConfig) EventSourceMappingMetricsConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingMetricsConfig
		return ret
	}).(EventSourceMappingMetricsConfigOutput)
}

// List containing the metrics to be produced by the event source mapping. Valid values: `EventCount`.
func (o EventSourceMappingMetricsConfigPtrOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventSourceMappingMetricsConfig) []string {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(pulumi.StringArrayOutput)
}

type EventSourceMappingProvisionedPollerConfig struct {
	// Maximum number of event pollers this event source can scale up to. The range is between 1 and 2000.
	MaximumPollers *int `pulumi:"maximumPollers"`
	// Minimum number of event pollers this event source can scale down to. The range is between 1 and 200.
	MinimumPollers *int `pulumi:"minimumPollers"`
}

// EventSourceMappingProvisionedPollerConfigInput is an input type that accepts EventSourceMappingProvisionedPollerConfigArgs and EventSourceMappingProvisionedPollerConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingProvisionedPollerConfigInput` via:
//
//	EventSourceMappingProvisionedPollerConfigArgs{...}
type EventSourceMappingProvisionedPollerConfigInput interface {
	pulumi.Input

	ToEventSourceMappingProvisionedPollerConfigOutput() EventSourceMappingProvisionedPollerConfigOutput
	ToEventSourceMappingProvisionedPollerConfigOutputWithContext(context.Context) EventSourceMappingProvisionedPollerConfigOutput
}

type EventSourceMappingProvisionedPollerConfigArgs struct {
	// Maximum number of event pollers this event source can scale up to. The range is between 1 and 2000.
	MaximumPollers pulumi.IntPtrInput `pulumi:"maximumPollers"`
	// Minimum number of event pollers this event source can scale down to. The range is between 1 and 200.
	MinimumPollers pulumi.IntPtrInput `pulumi:"minimumPollers"`
}

func (EventSourceMappingProvisionedPollerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingProvisionedPollerConfig)(nil)).Elem()
}

func (i EventSourceMappingProvisionedPollerConfigArgs) ToEventSourceMappingProvisionedPollerConfigOutput() EventSourceMappingProvisionedPollerConfigOutput {
	return i.ToEventSourceMappingProvisionedPollerConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingProvisionedPollerConfigArgs) ToEventSourceMappingProvisionedPollerConfigOutputWithContext(ctx context.Context) EventSourceMappingProvisionedPollerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingProvisionedPollerConfigOutput)
}

func (i EventSourceMappingProvisionedPollerConfigArgs) ToEventSourceMappingProvisionedPollerConfigPtrOutput() EventSourceMappingProvisionedPollerConfigPtrOutput {
	return i.ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingProvisionedPollerConfigArgs) ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingProvisionedPollerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingProvisionedPollerConfigOutput).ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingProvisionedPollerConfigPtrInput is an input type that accepts EventSourceMappingProvisionedPollerConfigArgs, EventSourceMappingProvisionedPollerConfigPtr and EventSourceMappingProvisionedPollerConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingProvisionedPollerConfigPtrInput` via:
//
//	        EventSourceMappingProvisionedPollerConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingProvisionedPollerConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingProvisionedPollerConfigPtrOutput() EventSourceMappingProvisionedPollerConfigPtrOutput
	ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(context.Context) EventSourceMappingProvisionedPollerConfigPtrOutput
}

type eventSourceMappingProvisionedPollerConfigPtrType EventSourceMappingProvisionedPollerConfigArgs

func EventSourceMappingProvisionedPollerConfigPtr(v *EventSourceMappingProvisionedPollerConfigArgs) EventSourceMappingProvisionedPollerConfigPtrInput {
	return (*eventSourceMappingProvisionedPollerConfigPtrType)(v)
}

func (*eventSourceMappingProvisionedPollerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingProvisionedPollerConfig)(nil)).Elem()
}

func (i *eventSourceMappingProvisionedPollerConfigPtrType) ToEventSourceMappingProvisionedPollerConfigPtrOutput() EventSourceMappingProvisionedPollerConfigPtrOutput {
	return i.ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingProvisionedPollerConfigPtrType) ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingProvisionedPollerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingProvisionedPollerConfigPtrOutput)
}

type EventSourceMappingProvisionedPollerConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingProvisionedPollerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingProvisionedPollerConfig)(nil)).Elem()
}

func (o EventSourceMappingProvisionedPollerConfigOutput) ToEventSourceMappingProvisionedPollerConfigOutput() EventSourceMappingProvisionedPollerConfigOutput {
	return o
}

func (o EventSourceMappingProvisionedPollerConfigOutput) ToEventSourceMappingProvisionedPollerConfigOutputWithContext(ctx context.Context) EventSourceMappingProvisionedPollerConfigOutput {
	return o
}

func (o EventSourceMappingProvisionedPollerConfigOutput) ToEventSourceMappingProvisionedPollerConfigPtrOutput() EventSourceMappingProvisionedPollerConfigPtrOutput {
	return o.ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingProvisionedPollerConfigOutput) ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingProvisionedPollerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingProvisionedPollerConfig) *EventSourceMappingProvisionedPollerConfig {
		return &v
	}).(EventSourceMappingProvisionedPollerConfigPtrOutput)
}

// Maximum number of event pollers this event source can scale up to. The range is between 1 and 2000.
func (o EventSourceMappingProvisionedPollerConfigOutput) MaximumPollers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventSourceMappingProvisionedPollerConfig) *int { return v.MaximumPollers }).(pulumi.IntPtrOutput)
}

// Minimum number of event pollers this event source can scale down to. The range is between 1 and 200.
func (o EventSourceMappingProvisionedPollerConfigOutput) MinimumPollers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventSourceMappingProvisionedPollerConfig) *int { return v.MinimumPollers }).(pulumi.IntPtrOutput)
}

type EventSourceMappingProvisionedPollerConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingProvisionedPollerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingProvisionedPollerConfig)(nil)).Elem()
}

func (o EventSourceMappingProvisionedPollerConfigPtrOutput) ToEventSourceMappingProvisionedPollerConfigPtrOutput() EventSourceMappingProvisionedPollerConfigPtrOutput {
	return o
}

func (o EventSourceMappingProvisionedPollerConfigPtrOutput) ToEventSourceMappingProvisionedPollerConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingProvisionedPollerConfigPtrOutput {
	return o
}

func (o EventSourceMappingProvisionedPollerConfigPtrOutput) Elem() EventSourceMappingProvisionedPollerConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingProvisionedPollerConfig) EventSourceMappingProvisionedPollerConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingProvisionedPollerConfig
		return ret
	}).(EventSourceMappingProvisionedPollerConfigOutput)
}

// Maximum number of event pollers this event source can scale up to. The range is between 1 and 2000.
func (o EventSourceMappingProvisionedPollerConfigPtrOutput) MaximumPollers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingProvisionedPollerConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaximumPollers
	}).(pulumi.IntPtrOutput)
}

// Minimum number of event pollers this event source can scale down to. The range is between 1 and 200.
func (o EventSourceMappingProvisionedPollerConfigPtrOutput) MinimumPollers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingProvisionedPollerConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinimumPollers
	}).(pulumi.IntPtrOutput)
}

type EventSourceMappingScalingConfig struct {
	// Limits the number of concurrent instances that the Amazon SQS event source can invoke. Must be greater than or equal to 2. See [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency). You need to raise a [Service Quota Ticket](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) to increase the concurrency beyond 1000.
	MaximumConcurrency *int `pulumi:"maximumConcurrency"`
}

// EventSourceMappingScalingConfigInput is an input type that accepts EventSourceMappingScalingConfigArgs and EventSourceMappingScalingConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingScalingConfigInput` via:
//
//	EventSourceMappingScalingConfigArgs{...}
type EventSourceMappingScalingConfigInput interface {
	pulumi.Input

	ToEventSourceMappingScalingConfigOutput() EventSourceMappingScalingConfigOutput
	ToEventSourceMappingScalingConfigOutputWithContext(context.Context) EventSourceMappingScalingConfigOutput
}

type EventSourceMappingScalingConfigArgs struct {
	// Limits the number of concurrent instances that the Amazon SQS event source can invoke. Must be greater than or equal to 2. See [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency). You need to raise a [Service Quota Ticket](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) to increase the concurrency beyond 1000.
	MaximumConcurrency pulumi.IntPtrInput `pulumi:"maximumConcurrency"`
}

func (EventSourceMappingScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingScalingConfig)(nil)).Elem()
}

func (i EventSourceMappingScalingConfigArgs) ToEventSourceMappingScalingConfigOutput() EventSourceMappingScalingConfigOutput {
	return i.ToEventSourceMappingScalingConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingScalingConfigArgs) ToEventSourceMappingScalingConfigOutputWithContext(ctx context.Context) EventSourceMappingScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingScalingConfigOutput)
}

func (i EventSourceMappingScalingConfigArgs) ToEventSourceMappingScalingConfigPtrOutput() EventSourceMappingScalingConfigPtrOutput {
	return i.ToEventSourceMappingScalingConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingScalingConfigArgs) ToEventSourceMappingScalingConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingScalingConfigOutput).ToEventSourceMappingScalingConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingScalingConfigPtrInput is an input type that accepts EventSourceMappingScalingConfigArgs, EventSourceMappingScalingConfigPtr and EventSourceMappingScalingConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingScalingConfigPtrInput` via:
//
//	        EventSourceMappingScalingConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingScalingConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingScalingConfigPtrOutput() EventSourceMappingScalingConfigPtrOutput
	ToEventSourceMappingScalingConfigPtrOutputWithContext(context.Context) EventSourceMappingScalingConfigPtrOutput
}

type eventSourceMappingScalingConfigPtrType EventSourceMappingScalingConfigArgs

func EventSourceMappingScalingConfigPtr(v *EventSourceMappingScalingConfigArgs) EventSourceMappingScalingConfigPtrInput {
	return (*eventSourceMappingScalingConfigPtrType)(v)
}

func (*eventSourceMappingScalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingScalingConfig)(nil)).Elem()
}

func (i *eventSourceMappingScalingConfigPtrType) ToEventSourceMappingScalingConfigPtrOutput() EventSourceMappingScalingConfigPtrOutput {
	return i.ToEventSourceMappingScalingConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingScalingConfigPtrType) ToEventSourceMappingScalingConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingScalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingScalingConfigPtrOutput)
}

type EventSourceMappingScalingConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingScalingConfig)(nil)).Elem()
}

func (o EventSourceMappingScalingConfigOutput) ToEventSourceMappingScalingConfigOutput() EventSourceMappingScalingConfigOutput {
	return o
}

func (o EventSourceMappingScalingConfigOutput) ToEventSourceMappingScalingConfigOutputWithContext(ctx context.Context) EventSourceMappingScalingConfigOutput {
	return o
}

func (o EventSourceMappingScalingConfigOutput) ToEventSourceMappingScalingConfigPtrOutput() EventSourceMappingScalingConfigPtrOutput {
	return o.ToEventSourceMappingScalingConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingScalingConfigOutput) ToEventSourceMappingScalingConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingScalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingScalingConfig) *EventSourceMappingScalingConfig {
		return &v
	}).(EventSourceMappingScalingConfigPtrOutput)
}

// Limits the number of concurrent instances that the Amazon SQS event source can invoke. Must be greater than or equal to 2. See [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency). You need to raise a [Service Quota Ticket](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) to increase the concurrency beyond 1000.
func (o EventSourceMappingScalingConfigOutput) MaximumConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventSourceMappingScalingConfig) *int { return v.MaximumConcurrency }).(pulumi.IntPtrOutput)
}

type EventSourceMappingScalingConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingScalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingScalingConfig)(nil)).Elem()
}

func (o EventSourceMappingScalingConfigPtrOutput) ToEventSourceMappingScalingConfigPtrOutput() EventSourceMappingScalingConfigPtrOutput {
	return o
}

func (o EventSourceMappingScalingConfigPtrOutput) ToEventSourceMappingScalingConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingScalingConfigPtrOutput {
	return o
}

func (o EventSourceMappingScalingConfigPtrOutput) Elem() EventSourceMappingScalingConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingScalingConfig) EventSourceMappingScalingConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingScalingConfig
		return ret
	}).(EventSourceMappingScalingConfigOutput)
}

// Limits the number of concurrent instances that the Amazon SQS event source can invoke. Must be greater than or equal to 2. See [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency). You need to raise a [Service Quota Ticket](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) to increase the concurrency beyond 1000.
func (o EventSourceMappingScalingConfigPtrOutput) MaximumConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingScalingConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaximumConcurrency
	}).(pulumi.IntPtrOutput)
}

type EventSourceMappingSelfManagedEventSource struct {
	// Map of endpoints for the self managed source. For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
	Endpoints map[string]string `pulumi:"endpoints"`
}

// EventSourceMappingSelfManagedEventSourceInput is an input type that accepts EventSourceMappingSelfManagedEventSourceArgs and EventSourceMappingSelfManagedEventSourceOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedEventSourceInput` via:
//
//	EventSourceMappingSelfManagedEventSourceArgs{...}
type EventSourceMappingSelfManagedEventSourceInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedEventSourceOutput() EventSourceMappingSelfManagedEventSourceOutput
	ToEventSourceMappingSelfManagedEventSourceOutputWithContext(context.Context) EventSourceMappingSelfManagedEventSourceOutput
}

type EventSourceMappingSelfManagedEventSourceArgs struct {
	// Map of endpoints for the self managed source. For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
	Endpoints pulumi.StringMapInput `pulumi:"endpoints"`
}

func (EventSourceMappingSelfManagedEventSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourceOutput() EventSourceMappingSelfManagedEventSourceOutput {
	return i.ToEventSourceMappingSelfManagedEventSourceOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourceOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedEventSourceOutput)
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return i.ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedEventSourceArgs) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedEventSourceOutput).ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx)
}

// EventSourceMappingSelfManagedEventSourcePtrInput is an input type that accepts EventSourceMappingSelfManagedEventSourceArgs, EventSourceMappingSelfManagedEventSourcePtr and EventSourceMappingSelfManagedEventSourcePtrOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedEventSourcePtrInput` via:
//
//	        EventSourceMappingSelfManagedEventSourceArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingSelfManagedEventSourcePtrInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput
	ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput
}

type eventSourceMappingSelfManagedEventSourcePtrType EventSourceMappingSelfManagedEventSourceArgs

func EventSourceMappingSelfManagedEventSourcePtr(v *EventSourceMappingSelfManagedEventSourceArgs) EventSourceMappingSelfManagedEventSourcePtrInput {
	return (*eventSourceMappingSelfManagedEventSourcePtrType)(v)
}

func (*eventSourceMappingSelfManagedEventSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (i *eventSourceMappingSelfManagedEventSourcePtrType) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return i.ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingSelfManagedEventSourcePtrType) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedEventSourcePtrOutput)
}

type EventSourceMappingSelfManagedEventSourceOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedEventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourceOutput() EventSourceMappingSelfManagedEventSourceOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourceOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourceOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o.ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(context.Background())
}

func (o EventSourceMappingSelfManagedEventSourceOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingSelfManagedEventSource) *EventSourceMappingSelfManagedEventSource {
		return &v
	}).(EventSourceMappingSelfManagedEventSourcePtrOutput)
}

// Map of endpoints for the self managed source. For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
func (o EventSourceMappingSelfManagedEventSourceOutput) Endpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedEventSource) map[string]string { return v.Endpoints }).(pulumi.StringMapOutput)
}

type EventSourceMappingSelfManagedEventSourcePtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedEventSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedEventSource)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedEventSourcePtrOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutput() EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourcePtrOutput) ToEventSourceMappingSelfManagedEventSourcePtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedEventSourcePtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedEventSourcePtrOutput) Elem() EventSourceMappingSelfManagedEventSourceOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedEventSource) EventSourceMappingSelfManagedEventSource {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingSelfManagedEventSource
		return ret
	}).(EventSourceMappingSelfManagedEventSourceOutput)
}

// Map of endpoints for the self managed source. For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.
func (o EventSourceMappingSelfManagedEventSourcePtrOutput) Endpoints() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedEventSource) map[string]string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringMapOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfig struct {
	// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [SelfManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_SelfManagedKafkaEventSourceConfig.html).
	ConsumerGroupId *string `pulumi:"consumerGroupId"`
	// Block for a Kafka schema registry setting. See below.
	SchemaRegistryConfig *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig `pulumi:"schemaRegistryConfig"`
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigArgs and EventSourceMappingSelfManagedKafkaEventSourceConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigInput` via:
//
//	EventSourceMappingSelfManagedKafkaEventSourceConfigArgs{...}
type EventSourceMappingSelfManagedKafkaEventSourceConfigInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigOutput
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigArgs struct {
	// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [SelfManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_SelfManagedKafkaEventSourceConfig.html).
	ConsumerGroupId pulumi.StringPtrInput `pulumi:"consumerGroupId"`
	// Block for a Kafka schema registry setting. See below.
	SchemaRegistryConfig EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput `pulumi:"schemaRegistryConfig"`
}

func (EventSourceMappingSelfManagedKafkaEventSourceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigOutput)
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigOutput).ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigPtrInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigArgs, EventSourceMappingSelfManagedKafkaEventSourceConfigPtr and EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigPtrInput` via:
//
//	        EventSourceMappingSelfManagedKafkaEventSourceConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingSelfManagedKafkaEventSourceConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput
}

type eventSourceMappingSelfManagedKafkaEventSourceConfigPtrType EventSourceMappingSelfManagedKafkaEventSourceConfigArgs

func EventSourceMappingSelfManagedKafkaEventSourceConfigPtr(v *EventSourceMappingSelfManagedKafkaEventSourceConfigArgs) EventSourceMappingSelfManagedKafkaEventSourceConfigPtrInput {
	return (*eventSourceMappingSelfManagedKafkaEventSourceConfigPtrType)(v)
}

func (*eventSourceMappingSelfManagedKafkaEventSourceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (i *eventSourceMappingSelfManagedKafkaEventSourceConfigPtrType) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingSelfManagedKafkaEventSourceConfigPtrType) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return o.ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingSelfManagedKafkaEventSourceConfig) *EventSourceMappingSelfManagedKafkaEventSourceConfig {
		return &v
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput)
}

// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [SelfManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_SelfManagedKafkaEventSourceConfig.html).
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfig) *string { return v.ConsumerGroupId }).(pulumi.StringPtrOutput)
}

// Block for a Kafka schema registry setting. See below.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigOutput) SchemaRegistryConfig() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfig) *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig {
		return v.SchemaRegistryConfig
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedKafkaEventSourceConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput) Elem() EventSourceMappingSelfManagedKafkaEventSourceConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfig) EventSourceMappingSelfManagedKafkaEventSourceConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingSelfManagedKafkaEventSourceConfig
		return ret
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigOutput)
}

// Kafka consumer group ID between 1 and 200 characters for use when creating this event source mapping. If one is not specified, this value will be automatically generated. See [SelfManagedKafkaEventSourceConfig Syntax](https://docs.aws.amazon.com/lambda/latest/dg/API_SelfManagedKafkaEventSourceConfig.html).
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput) ConsumerGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerGroupId
	}).(pulumi.StringPtrOutput)
}

// Block for a Kafka schema registry setting. See below.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput) SchemaRegistryConfig() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfig) *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryConfig
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig struct {
	// Configuration block for authentication Lambda uses to access the schema registry.
	AccessConfigs []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig `pulumi:"accessConfigs"`
	// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
	EventRecordFormat *string `pulumi:"eventRecordFormat"`
	// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
	SchemaRegistryUri *string `pulumi:"schemaRegistryUri"`
	// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
	SchemaValidationConfigs []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig `pulumi:"schemaValidationConfigs"`
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs and EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigInput` via:
//
//	EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{...}
type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs struct {
	// Configuration block for authentication Lambda uses to access the schema registry.
	AccessConfigs EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput `pulumi:"accessConfigs"`
	// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
	EventRecordFormat pulumi.StringPtrInput `pulumi:"eventRecordFormat"`
	// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
	SchemaRegistryUri pulumi.StringPtrInput `pulumi:"schemaRegistryUri"`
	// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
	SchemaValidationConfigs EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput `pulumi:"schemaValidationConfigs"`
}

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput)
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput).ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx)
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs, EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtr and EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput` via:
//
//	        EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{...}
//
//	or:
//
//	        nil
type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput
}

type eventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs

func EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtr(v *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput {
	return (*eventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType)(v)
}

func (*eventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (i *eventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (i *eventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrType) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(context.Background())
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig {
		return &v
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput)
}

// Configuration block for authentication Lambda uses to access the schema registry.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) AccessConfigs() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig {
		return v.AccessConfigs
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput)
}

// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) EventRecordFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		return v.EventRecordFormat
	}).(pulumi.StringPtrOutput)
}

// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		return v.SchemaRegistryUri
	}).(pulumi.StringPtrOutput)
}

// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput) SchemaValidationConfigs() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig {
		return v.SchemaValidationConfigs
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) Elem() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig {
		if v != nil {
			return *v
		}
		var ret EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig
		return ret
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput)
}

// Configuration block for authentication Lambda uses to access the schema registry.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) AccessConfigs() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig {
		if v == nil {
			return nil
		}
		return v.AccessConfigs
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput)
}

// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) EventRecordFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.EventRecordFormat
	}).(pulumi.StringPtrOutput)
}

// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) SchemaRegistryUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.SchemaRegistryUri
	}).(pulumi.StringPtrOutput)
}

// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput) SchemaValidationConfigs() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o.ApplyT(func(v *EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfig) []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig {
		if v == nil {
			return nil
		}
		return v.SchemaValidationConfigs
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig struct {
	// Authentication type Lambda uses to access the schema registry.
	Type *string `pulumi:"type"`
	// URI of the secret (Secrets Manager secret ARN) used to authenticate with the schema registry.
	Uri *string `pulumi:"uri"`
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs and EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput` via:
//
//	EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs{...}
type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs struct {
	// Authentication type Lambda uses to access the schema registry.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// URI of the secret (Secrets Manager secret ARN) used to authenticate with the schema registry.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput)
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray and EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput` via:
//
//	EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray{ EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs{...} }
type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return o
}

// Authentication type Lambda uses to access the schema registry.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// URI of the secret (Secrets Manager secret ARN) used to authenticate with the schema registry.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig) *string {
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput) Index(i pulumi.IntInput) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig {
		return vs[0].([]EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig)[vs[1].(int)]
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig struct {
	// Message attribute to validate. Valid values: `KEY`, `VALUE`.
	Attribute *string `pulumi:"attribute"`
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs and EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput` via:
//
//	EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs{...}
type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs struct {
	// Message attribute to validate. Valid values: `KEY`, `VALUE`.
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
}

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput)
}

// EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput is an input type that accepts EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray and EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput` via:
//
//	EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray{ EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs{...} }
type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput interface {
	pulumi.Input

	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput
	ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray []EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return i.ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return o
}

// Message attribute to validate. Valid values: `KEY`, `VALUE`.
func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig) *string {
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

type EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)(nil)).Elem()
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput() EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) ToEventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutputWithContext(ctx context.Context) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput {
	return o
}

func (o EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput) Index(i pulumi.IntInput) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig {
		return vs[0].([]EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig)[vs[1].(int)]
	}).(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput)
}

type EventSourceMappingSourceAccessConfiguration struct {
	// Type of authentication protocol, VPC components, or virtual host for your event source. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/api/API_SourceAccessConfiguration.html).
	Type string `pulumi:"type"`
	// URI for this configuration. For type `VPC_SUBNET` the value should be `subnet:subnet_id` where `subnetId` is the value you would find in an ec2.Subnet resource's id attribute. For type `VPC_SECURITY_GROUP` the value should be `security_group:security_group_id` where `securityGroupId` is the value you would find in an ec2.SecurityGroup resource's id attribute.
	Uri string `pulumi:"uri"`
}

// EventSourceMappingSourceAccessConfigurationInput is an input type that accepts EventSourceMappingSourceAccessConfigurationArgs and EventSourceMappingSourceAccessConfigurationOutput values.
// You can construct a concrete instance of `EventSourceMappingSourceAccessConfigurationInput` via:
//
//	EventSourceMappingSourceAccessConfigurationArgs{...}
type EventSourceMappingSourceAccessConfigurationInput interface {
	pulumi.Input

	ToEventSourceMappingSourceAccessConfigurationOutput() EventSourceMappingSourceAccessConfigurationOutput
	ToEventSourceMappingSourceAccessConfigurationOutputWithContext(context.Context) EventSourceMappingSourceAccessConfigurationOutput
}

type EventSourceMappingSourceAccessConfigurationArgs struct {
	// Type of authentication protocol, VPC components, or virtual host for your event source. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/api/API_SourceAccessConfiguration.html).
	Type pulumi.StringInput `pulumi:"type"`
	// URI for this configuration. For type `VPC_SUBNET` the value should be `subnet:subnet_id` where `subnetId` is the value you would find in an ec2.Subnet resource's id attribute. For type `VPC_SECURITY_GROUP` the value should be `security_group:security_group_id` where `securityGroupId` is the value you would find in an ec2.SecurityGroup resource's id attribute.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (EventSourceMappingSourceAccessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (i EventSourceMappingSourceAccessConfigurationArgs) ToEventSourceMappingSourceAccessConfigurationOutput() EventSourceMappingSourceAccessConfigurationOutput {
	return i.ToEventSourceMappingSourceAccessConfigurationOutputWithContext(context.Background())
}

func (i EventSourceMappingSourceAccessConfigurationArgs) ToEventSourceMappingSourceAccessConfigurationOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSourceAccessConfigurationOutput)
}

// EventSourceMappingSourceAccessConfigurationArrayInput is an input type that accepts EventSourceMappingSourceAccessConfigurationArray and EventSourceMappingSourceAccessConfigurationArrayOutput values.
// You can construct a concrete instance of `EventSourceMappingSourceAccessConfigurationArrayInput` via:
//
//	EventSourceMappingSourceAccessConfigurationArray{ EventSourceMappingSourceAccessConfigurationArgs{...} }
type EventSourceMappingSourceAccessConfigurationArrayInput interface {
	pulumi.Input

	ToEventSourceMappingSourceAccessConfigurationArrayOutput() EventSourceMappingSourceAccessConfigurationArrayOutput
	ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(context.Context) EventSourceMappingSourceAccessConfigurationArrayOutput
}

type EventSourceMappingSourceAccessConfigurationArray []EventSourceMappingSourceAccessConfigurationInput

func (EventSourceMappingSourceAccessConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (i EventSourceMappingSourceAccessConfigurationArray) ToEventSourceMappingSourceAccessConfigurationArrayOutput() EventSourceMappingSourceAccessConfigurationArrayOutput {
	return i.ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(context.Background())
}

func (i EventSourceMappingSourceAccessConfigurationArray) ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourceMappingSourceAccessConfigurationArrayOutput)
}

type EventSourceMappingSourceAccessConfigurationOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSourceAccessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (o EventSourceMappingSourceAccessConfigurationOutput) ToEventSourceMappingSourceAccessConfigurationOutput() EventSourceMappingSourceAccessConfigurationOutput {
	return o
}

func (o EventSourceMappingSourceAccessConfigurationOutput) ToEventSourceMappingSourceAccessConfigurationOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationOutput {
	return o
}

// Type of authentication protocol, VPC components, or virtual host for your event source. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/api/API_SourceAccessConfiguration.html).
func (o EventSourceMappingSourceAccessConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceMappingSourceAccessConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

// URI for this configuration. For type `VPC_SUBNET` the value should be `subnet:subnet_id` where `subnetId` is the value you would find in an ec2.Subnet resource's id attribute. For type `VPC_SECURITY_GROUP` the value should be `security_group:security_group_id` where `securityGroupId` is the value you would find in an ec2.SecurityGroup resource's id attribute.
func (o EventSourceMappingSourceAccessConfigurationOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourceMappingSourceAccessConfiguration) string { return v.Uri }).(pulumi.StringOutput)
}

type EventSourceMappingSourceAccessConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EventSourceMappingSourceAccessConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourceMappingSourceAccessConfiguration)(nil)).Elem()
}

func (o EventSourceMappingSourceAccessConfigurationArrayOutput) ToEventSourceMappingSourceAccessConfigurationArrayOutput() EventSourceMappingSourceAccessConfigurationArrayOutput {
	return o
}

func (o EventSourceMappingSourceAccessConfigurationArrayOutput) ToEventSourceMappingSourceAccessConfigurationArrayOutputWithContext(ctx context.Context) EventSourceMappingSourceAccessConfigurationArrayOutput {
	return o
}

func (o EventSourceMappingSourceAccessConfigurationArrayOutput) Index(i pulumi.IntInput) EventSourceMappingSourceAccessConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourceMappingSourceAccessConfiguration {
		return vs[0].([]EventSourceMappingSourceAccessConfiguration)[vs[1].(int)]
	}).(EventSourceMappingSourceAccessConfigurationOutput)
}

type FunctionDeadLetterConfig struct {
	// ARN of an SNS topic or SQS queue to notify when an invocation fails.
	TargetArn string `pulumi:"targetArn"`
}

// FunctionDeadLetterConfigInput is an input type that accepts FunctionDeadLetterConfigArgs and FunctionDeadLetterConfigOutput values.
// You can construct a concrete instance of `FunctionDeadLetterConfigInput` via:
//
//	FunctionDeadLetterConfigArgs{...}
type FunctionDeadLetterConfigInput interface {
	pulumi.Input

	ToFunctionDeadLetterConfigOutput() FunctionDeadLetterConfigOutput
	ToFunctionDeadLetterConfigOutputWithContext(context.Context) FunctionDeadLetterConfigOutput
}

type FunctionDeadLetterConfigArgs struct {
	// ARN of an SNS topic or SQS queue to notify when an invocation fails.
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (FunctionDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionDeadLetterConfig)(nil)).Elem()
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigOutput() FunctionDeadLetterConfigOutput {
	return i.ToFunctionDeadLetterConfigOutputWithContext(context.Background())
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigOutputWithContext(ctx context.Context) FunctionDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionDeadLetterConfigOutput)
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return i.ToFunctionDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i FunctionDeadLetterConfigArgs) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionDeadLetterConfigOutput).ToFunctionDeadLetterConfigPtrOutputWithContext(ctx)
}

// FunctionDeadLetterConfigPtrInput is an input type that accepts FunctionDeadLetterConfigArgs, FunctionDeadLetterConfigPtr and FunctionDeadLetterConfigPtrOutput values.
// You can construct a concrete instance of `FunctionDeadLetterConfigPtrInput` via:
//
//	        FunctionDeadLetterConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionDeadLetterConfigPtrInput interface {
	pulumi.Input

	ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput
	ToFunctionDeadLetterConfigPtrOutputWithContext(context.Context) FunctionDeadLetterConfigPtrOutput
}

type functionDeadLetterConfigPtrType FunctionDeadLetterConfigArgs

func FunctionDeadLetterConfigPtr(v *FunctionDeadLetterConfigArgs) FunctionDeadLetterConfigPtrInput {
	return (*functionDeadLetterConfigPtrType)(v)
}

func (*functionDeadLetterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionDeadLetterConfig)(nil)).Elem()
}

func (i *functionDeadLetterConfigPtrType) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return i.ToFunctionDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i *functionDeadLetterConfigPtrType) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionDeadLetterConfigPtrOutput)
}

type FunctionDeadLetterConfigOutput struct{ *pulumi.OutputState }

func (FunctionDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionDeadLetterConfig)(nil)).Elem()
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigOutput() FunctionDeadLetterConfigOutput {
	return o
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigOutputWithContext(ctx context.Context) FunctionDeadLetterConfigOutput {
	return o
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return o.ToFunctionDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (o FunctionDeadLetterConfigOutput) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionDeadLetterConfig) *FunctionDeadLetterConfig {
		return &v
	}).(FunctionDeadLetterConfigPtrOutput)
}

// ARN of an SNS topic or SQS queue to notify when an invocation fails.
func (o FunctionDeadLetterConfigOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionDeadLetterConfig) string { return v.TargetArn }).(pulumi.StringOutput)
}

type FunctionDeadLetterConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionDeadLetterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionDeadLetterConfig)(nil)).Elem()
}

func (o FunctionDeadLetterConfigPtrOutput) ToFunctionDeadLetterConfigPtrOutput() FunctionDeadLetterConfigPtrOutput {
	return o
}

func (o FunctionDeadLetterConfigPtrOutput) ToFunctionDeadLetterConfigPtrOutputWithContext(ctx context.Context) FunctionDeadLetterConfigPtrOutput {
	return o
}

func (o FunctionDeadLetterConfigPtrOutput) Elem() FunctionDeadLetterConfigOutput {
	return o.ApplyT(func(v *FunctionDeadLetterConfig) FunctionDeadLetterConfig {
		if v != nil {
			return *v
		}
		var ret FunctionDeadLetterConfig
		return ret
	}).(FunctionDeadLetterConfigOutput)
}

// ARN of an SNS topic or SQS queue to notify when an invocation fails.
func (o FunctionDeadLetterConfigPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionDeadLetterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type FunctionEnvironment struct {
	// Map of environment variables available to your Lambda function during execution.
	Variables map[string]string `pulumi:"variables"`
}

// FunctionEnvironmentInput is an input type that accepts FunctionEnvironmentArgs and FunctionEnvironmentOutput values.
// You can construct a concrete instance of `FunctionEnvironmentInput` via:
//
//	FunctionEnvironmentArgs{...}
type FunctionEnvironmentInput interface {
	pulumi.Input

	ToFunctionEnvironmentOutput() FunctionEnvironmentOutput
	ToFunctionEnvironmentOutputWithContext(context.Context) FunctionEnvironmentOutput
}

type FunctionEnvironmentArgs struct {
	// Map of environment variables available to your Lambda function during execution.
	Variables pulumi.StringMapInput `pulumi:"variables"`
}

func (FunctionEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnvironment)(nil)).Elem()
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentOutput() FunctionEnvironmentOutput {
	return i.ToFunctionEnvironmentOutputWithContext(context.Background())
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentOutputWithContext(ctx context.Context) FunctionEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvironmentOutput)
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return i.ToFunctionEnvironmentPtrOutputWithContext(context.Background())
}

func (i FunctionEnvironmentArgs) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvironmentOutput).ToFunctionEnvironmentPtrOutputWithContext(ctx)
}

// FunctionEnvironmentPtrInput is an input type that accepts FunctionEnvironmentArgs, FunctionEnvironmentPtr and FunctionEnvironmentPtrOutput values.
// You can construct a concrete instance of `FunctionEnvironmentPtrInput` via:
//
//	        FunctionEnvironmentArgs{...}
//
//	or:
//
//	        nil
type FunctionEnvironmentPtrInput interface {
	pulumi.Input

	ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput
	ToFunctionEnvironmentPtrOutputWithContext(context.Context) FunctionEnvironmentPtrOutput
}

type functionEnvironmentPtrType FunctionEnvironmentArgs

func FunctionEnvironmentPtr(v *FunctionEnvironmentArgs) FunctionEnvironmentPtrInput {
	return (*functionEnvironmentPtrType)(v)
}

func (*functionEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEnvironment)(nil)).Elem()
}

func (i *functionEnvironmentPtrType) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return i.ToFunctionEnvironmentPtrOutputWithContext(context.Background())
}

func (i *functionEnvironmentPtrType) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvironmentPtrOutput)
}

type FunctionEnvironmentOutput struct{ *pulumi.OutputState }

func (FunctionEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnvironment)(nil)).Elem()
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentOutput() FunctionEnvironmentOutput {
	return o
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentOutputWithContext(ctx context.Context) FunctionEnvironmentOutput {
	return o
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return o.ToFunctionEnvironmentPtrOutputWithContext(context.Background())
}

func (o FunctionEnvironmentOutput) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEnvironment) *FunctionEnvironment {
		return &v
	}).(FunctionEnvironmentPtrOutput)
}

// Map of environment variables available to your Lambda function during execution.
func (o FunctionEnvironmentOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v FunctionEnvironment) map[string]string { return v.Variables }).(pulumi.StringMapOutput)
}

type FunctionEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (FunctionEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEnvironment)(nil)).Elem()
}

func (o FunctionEnvironmentPtrOutput) ToFunctionEnvironmentPtrOutput() FunctionEnvironmentPtrOutput {
	return o
}

func (o FunctionEnvironmentPtrOutput) ToFunctionEnvironmentPtrOutputWithContext(ctx context.Context) FunctionEnvironmentPtrOutput {
	return o
}

func (o FunctionEnvironmentPtrOutput) Elem() FunctionEnvironmentOutput {
	return o.ApplyT(func(v *FunctionEnvironment) FunctionEnvironment {
		if v != nil {
			return *v
		}
		var ret FunctionEnvironment
		return ret
	}).(FunctionEnvironmentOutput)
}

// Map of environment variables available to your Lambda function during execution.
func (o FunctionEnvironmentPtrOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FunctionEnvironment) map[string]string {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(pulumi.StringMapOutput)
}

type FunctionEphemeralStorage struct {
	// Amount of ephemeral storage (`/tmp`) in MB. Valid between 512 MB and 10,240 MB (10 GB).
	Size *int `pulumi:"size"`
}

// FunctionEphemeralStorageInput is an input type that accepts FunctionEphemeralStorageArgs and FunctionEphemeralStorageOutput values.
// You can construct a concrete instance of `FunctionEphemeralStorageInput` via:
//
//	FunctionEphemeralStorageArgs{...}
type FunctionEphemeralStorageInput interface {
	pulumi.Input

	ToFunctionEphemeralStorageOutput() FunctionEphemeralStorageOutput
	ToFunctionEphemeralStorageOutputWithContext(context.Context) FunctionEphemeralStorageOutput
}

type FunctionEphemeralStorageArgs struct {
	// Amount of ephemeral storage (`/tmp`) in MB. Valid between 512 MB and 10,240 MB (10 GB).
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (FunctionEphemeralStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEphemeralStorage)(nil)).Elem()
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStorageOutput() FunctionEphemeralStorageOutput {
	return i.ToFunctionEphemeralStorageOutputWithContext(context.Background())
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStorageOutputWithContext(ctx context.Context) FunctionEphemeralStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEphemeralStorageOutput)
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return i.ToFunctionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (i FunctionEphemeralStorageArgs) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEphemeralStorageOutput).ToFunctionEphemeralStoragePtrOutputWithContext(ctx)
}

// FunctionEphemeralStoragePtrInput is an input type that accepts FunctionEphemeralStorageArgs, FunctionEphemeralStoragePtr and FunctionEphemeralStoragePtrOutput values.
// You can construct a concrete instance of `FunctionEphemeralStoragePtrInput` via:
//
//	        FunctionEphemeralStorageArgs{...}
//
//	or:
//
//	        nil
type FunctionEphemeralStoragePtrInput interface {
	pulumi.Input

	ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput
	ToFunctionEphemeralStoragePtrOutputWithContext(context.Context) FunctionEphemeralStoragePtrOutput
}

type functionEphemeralStoragePtrType FunctionEphemeralStorageArgs

func FunctionEphemeralStoragePtr(v *FunctionEphemeralStorageArgs) FunctionEphemeralStoragePtrInput {
	return (*functionEphemeralStoragePtrType)(v)
}

func (*functionEphemeralStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEphemeralStorage)(nil)).Elem()
}

func (i *functionEphemeralStoragePtrType) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return i.ToFunctionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (i *functionEphemeralStoragePtrType) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEphemeralStoragePtrOutput)
}

type FunctionEphemeralStorageOutput struct{ *pulumi.OutputState }

func (FunctionEphemeralStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEphemeralStorage)(nil)).Elem()
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStorageOutput() FunctionEphemeralStorageOutput {
	return o
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStorageOutputWithContext(ctx context.Context) FunctionEphemeralStorageOutput {
	return o
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return o.ToFunctionEphemeralStoragePtrOutputWithContext(context.Background())
}

func (o FunctionEphemeralStorageOutput) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEphemeralStorage) *FunctionEphemeralStorage {
		return &v
	}).(FunctionEphemeralStoragePtrOutput)
}

// Amount of ephemeral storage (`/tmp`) in MB. Valid between 512 MB and 10,240 MB (10 GB).
func (o FunctionEphemeralStorageOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionEphemeralStorage) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type FunctionEphemeralStoragePtrOutput struct{ *pulumi.OutputState }

func (FunctionEphemeralStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEphemeralStorage)(nil)).Elem()
}

func (o FunctionEphemeralStoragePtrOutput) ToFunctionEphemeralStoragePtrOutput() FunctionEphemeralStoragePtrOutput {
	return o
}

func (o FunctionEphemeralStoragePtrOutput) ToFunctionEphemeralStoragePtrOutputWithContext(ctx context.Context) FunctionEphemeralStoragePtrOutput {
	return o
}

func (o FunctionEphemeralStoragePtrOutput) Elem() FunctionEphemeralStorageOutput {
	return o.ApplyT(func(v *FunctionEphemeralStorage) FunctionEphemeralStorage {
		if v != nil {
			return *v
		}
		var ret FunctionEphemeralStorage
		return ret
	}).(FunctionEphemeralStorageOutput)
}

// Amount of ephemeral storage (`/tmp`) in MB. Valid between 512 MB and 10,240 MB (10 GB).
func (o FunctionEphemeralStoragePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FunctionEphemeralStorage) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfig struct {
	// Configuration block with destination configuration for failed asynchronous invocations. See below.
	OnFailure *FunctionEventInvokeConfigDestinationConfigOnFailure `pulumi:"onFailure"`
	// Configuration block with destination configuration for successful asynchronous invocations. See below.
	OnSuccess *FunctionEventInvokeConfigDestinationConfigOnSuccess `pulumi:"onSuccess"`
}

// FunctionEventInvokeConfigDestinationConfigInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigArgs and FunctionEventInvokeConfigDestinationConfigOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigInput` via:
//
//	FunctionEventInvokeConfigDestinationConfigArgs{...}
type FunctionEventInvokeConfigDestinationConfigInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOutput() FunctionEventInvokeConfigDestinationConfigOutput
	ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOutput
}

type FunctionEventInvokeConfigDestinationConfigArgs struct {
	// Configuration block with destination configuration for failed asynchronous invocations. See below.
	OnFailure FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput `pulumi:"onFailure"`
	// Configuration block with destination configuration for successful asynchronous invocations. See below.
	OnSuccess FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput `pulumi:"onSuccess"`
}

func (FunctionEventInvokeConfigDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigOutput() FunctionEventInvokeConfigDestinationConfigOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOutput)
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigArgs) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOutput).ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx)
}

// FunctionEventInvokeConfigDestinationConfigPtrInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigArgs, FunctionEventInvokeConfigDestinationConfigPtr and FunctionEventInvokeConfigDestinationConfigPtrOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigPtrInput` via:
//
//	        FunctionEventInvokeConfigDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionEventInvokeConfigDestinationConfigPtrInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput
	ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput
}

type functionEventInvokeConfigDestinationConfigPtrType FunctionEventInvokeConfigDestinationConfigArgs

func FunctionEventInvokeConfigDestinationConfigPtr(v *FunctionEventInvokeConfigDestinationConfigArgs) FunctionEventInvokeConfigDestinationConfigPtrInput {
	return (*functionEventInvokeConfigDestinationConfigPtrType)(v)
}

func (*functionEventInvokeConfigDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (i *functionEventInvokeConfigDestinationConfigPtrType) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *functionEventInvokeConfigDestinationConfigPtrType) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigOutput() FunctionEventInvokeConfigDestinationConfigOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o.ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(context.Background())
}

func (o FunctionEventInvokeConfigDestinationConfigOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfig {
		return &v
	}).(FunctionEventInvokeConfigDestinationConfigPtrOutput)
}

// Configuration block with destination configuration for failed asynchronous invocations. See below.
func (o FunctionEventInvokeConfigDestinationConfigOutput) OnFailure() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnFailure {
		return v.OnFailure
	}).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

// Configuration block with destination configuration for successful asynchronous invocations. See below.
func (o FunctionEventInvokeConfigDestinationConfigOutput) OnSuccess() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnSuccess {
		return v.OnSuccess
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutput() FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) ToFunctionEventInvokeConfigDestinationConfigPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) Elem() FunctionEventInvokeConfigDestinationConfigOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfig) FunctionEventInvokeConfigDestinationConfig {
		if v != nil {
			return *v
		}
		var ret FunctionEventInvokeConfigDestinationConfig
		return ret
	}).(FunctionEventInvokeConfigDestinationConfigOutput)
}

// Configuration block with destination configuration for failed asynchronous invocations. See below.
func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) OnFailure() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnFailure {
		if v == nil {
			return nil
		}
		return v.OnFailure
	}).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

// Configuration block with destination configuration for successful asynchronous invocations. See below.
func (o FunctionEventInvokeConfigDestinationConfigPtrOutput) OnSuccess() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfig) *FunctionEventInvokeConfigDestinationConfigOnSuccess {
		if v == nil {
			return nil
		}
		return v.OnSuccess
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnFailure struct {
	// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination string `pulumi:"destination"`
}

// FunctionEventInvokeConfigDestinationConfigOnFailureInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnFailureArgs and FunctionEventInvokeConfigDestinationConfigOnFailureOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnFailureInput` via:
//
//	FunctionEventInvokeConfigDestinationConfigOnFailureArgs{...}
type FunctionEventInvokeConfigDestinationConfigOnFailureInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnFailureOutput() FunctionEventInvokeConfigDestinationConfigOnFailureOutput
	ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnFailureOutput
}

type FunctionEventInvokeConfigDestinationConfigOnFailureArgs struct {
	// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination pulumi.StringInput `pulumi:"destination"`
}

func (FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutput() FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnFailureOutput)
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnFailureArgs) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnFailureOutput).ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx)
}

// FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnFailureArgs, FunctionEventInvokeConfigDestinationConfigOnFailurePtr and FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput` via:
//
//	        FunctionEventInvokeConfigDestinationConfigOnFailureArgs{...}
//
//	or:
//
//	        nil
type FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput
	ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput
}

type functionEventInvokeConfigDestinationConfigOnFailurePtrType FunctionEventInvokeConfigDestinationConfigOnFailureArgs

func FunctionEventInvokeConfigDestinationConfigOnFailurePtr(v *FunctionEventInvokeConfigDestinationConfigOnFailureArgs) FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput {
	return (*functionEventInvokeConfigDestinationConfigOnFailurePtrType)(v)
}

func (*functionEventInvokeConfigDestinationConfigOnFailurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (i *functionEventInvokeConfigDestinationConfigOnFailurePtrType) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (i *functionEventInvokeConfigDestinationConfigOnFailurePtrType) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnFailureOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutput() FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailureOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(context.Background())
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventInvokeConfigDestinationConfigOnFailure) *FunctionEventInvokeConfigDestinationConfigOnFailure {
		return &v
	}).(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput)
}

// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnFailureOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfigOnFailure) string { return v.Destination }).(pulumi.StringOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnFailure)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput() FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnFailurePtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) Elem() FunctionEventInvokeConfigDestinationConfigOnFailureOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnFailure) FunctionEventInvokeConfigDestinationConfigOnFailure {
		if v != nil {
			return *v
		}
		var ret FunctionEventInvokeConfigDestinationConfigOnFailure
		return ret
	}).(FunctionEventInvokeConfigDestinationConfigOnFailureOutput)
}

// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnFailure) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnSuccess struct {
	// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination string `pulumi:"destination"`
}

// FunctionEventInvokeConfigDestinationConfigOnSuccessInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnSuccessArgs and FunctionEventInvokeConfigDestinationConfigOnSuccessOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnSuccessInput` via:
//
//	FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{...}
type FunctionEventInvokeConfigDestinationConfigOnSuccessInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput
	ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessOutput
}

type FunctionEventInvokeConfigDestinationConfigOnSuccessArgs struct {
	// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
	Destination pulumi.StringInput `pulumi:"destination"`
}

func (FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput)
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput).ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx)
}

// FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput is an input type that accepts FunctionEventInvokeConfigDestinationConfigOnSuccessArgs, FunctionEventInvokeConfigDestinationConfigOnSuccessPtr and FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput` via:
//
//	        FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{...}
//
//	or:
//
//	        nil
type FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput
	ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput
}

type functionEventInvokeConfigDestinationConfigOnSuccessPtrType FunctionEventInvokeConfigDestinationConfigOnSuccessArgs

func FunctionEventInvokeConfigDestinationConfigOnSuccessPtr(v *FunctionEventInvokeConfigDestinationConfigOnSuccessArgs) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput {
	return (*functionEventInvokeConfigDestinationConfigOnSuccessPtrType)(v)
}

func (*functionEventInvokeConfigDestinationConfigOnSuccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (i *functionEventInvokeConfigDestinationConfigOnSuccessPtrType) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return i.ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Background())
}

func (i *functionEventInvokeConfigDestinationConfigOnSuccessPtrType) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnSuccessOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(context.Background())
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionEventInvokeConfigDestinationConfigOnSuccess) *FunctionEventInvokeConfigDestinationConfigOnSuccess {
		return &v
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput)
}

// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnSuccessOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventInvokeConfigDestinationConfigOnSuccess) string { return v.Destination }).(pulumi.StringOutput)
}

type FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfigDestinationConfigOnSuccess)(nil)).Elem()
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput() FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) ToFunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutputWithContext(ctx context.Context) FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput {
	return o
}

func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) Elem() FunctionEventInvokeConfigDestinationConfigOnSuccessOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnSuccess) FunctionEventInvokeConfigDestinationConfigOnSuccess {
		if v != nil {
			return *v
		}
		var ret FunctionEventInvokeConfigDestinationConfigOnSuccess
		return ret
	}).(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput)
}

// ARN of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
func (o FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfigDestinationConfigOnSuccess) *string {
		if v == nil {
			return nil
		}
		return &v.Destination
	}).(pulumi.StringPtrOutput)
}

type FunctionFileSystemConfig struct {
	// ARN of the Amazon EFS Access Point.
	Arn string `pulumi:"arn"`
	// Path where the function can access the file system. Must start with `/mnt/`.
	LocalMountPath string `pulumi:"localMountPath"`
}

// FunctionFileSystemConfigInput is an input type that accepts FunctionFileSystemConfigArgs and FunctionFileSystemConfigOutput values.
// You can construct a concrete instance of `FunctionFileSystemConfigInput` via:
//
//	FunctionFileSystemConfigArgs{...}
type FunctionFileSystemConfigInput interface {
	pulumi.Input

	ToFunctionFileSystemConfigOutput() FunctionFileSystemConfigOutput
	ToFunctionFileSystemConfigOutputWithContext(context.Context) FunctionFileSystemConfigOutput
}

type FunctionFileSystemConfigArgs struct {
	// ARN of the Amazon EFS Access Point.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Path where the function can access the file system. Must start with `/mnt/`.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
}

func (FunctionFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFileSystemConfig)(nil)).Elem()
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigOutput() FunctionFileSystemConfigOutput {
	return i.ToFunctionFileSystemConfigOutputWithContext(context.Background())
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigOutputWithContext(ctx context.Context) FunctionFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFileSystemConfigOutput)
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return i.ToFunctionFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i FunctionFileSystemConfigArgs) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFileSystemConfigOutput).ToFunctionFileSystemConfigPtrOutputWithContext(ctx)
}

// FunctionFileSystemConfigPtrInput is an input type that accepts FunctionFileSystemConfigArgs, FunctionFileSystemConfigPtr and FunctionFileSystemConfigPtrOutput values.
// You can construct a concrete instance of `FunctionFileSystemConfigPtrInput` via:
//
//	        FunctionFileSystemConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionFileSystemConfigPtrInput interface {
	pulumi.Input

	ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput
	ToFunctionFileSystemConfigPtrOutputWithContext(context.Context) FunctionFileSystemConfigPtrOutput
}

type functionFileSystemConfigPtrType FunctionFileSystemConfigArgs

func FunctionFileSystemConfigPtr(v *FunctionFileSystemConfigArgs) FunctionFileSystemConfigPtrInput {
	return (*functionFileSystemConfigPtrType)(v)
}

func (*functionFileSystemConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionFileSystemConfig)(nil)).Elem()
}

func (i *functionFileSystemConfigPtrType) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return i.ToFunctionFileSystemConfigPtrOutputWithContext(context.Background())
}

func (i *functionFileSystemConfigPtrType) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFileSystemConfigPtrOutput)
}

type FunctionFileSystemConfigOutput struct{ *pulumi.OutputState }

func (FunctionFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFileSystemConfig)(nil)).Elem()
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigOutput() FunctionFileSystemConfigOutput {
	return o
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigOutputWithContext(ctx context.Context) FunctionFileSystemConfigOutput {
	return o
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return o.ToFunctionFileSystemConfigPtrOutputWithContext(context.Background())
}

func (o FunctionFileSystemConfigOutput) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionFileSystemConfig) *FunctionFileSystemConfig {
		return &v
	}).(FunctionFileSystemConfigPtrOutput)
}

// ARN of the Amazon EFS Access Point.
func (o FunctionFileSystemConfigOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFileSystemConfig) string { return v.Arn }).(pulumi.StringOutput)
}

// Path where the function can access the file system. Must start with `/mnt/`.
func (o FunctionFileSystemConfigOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFileSystemConfig) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

type FunctionFileSystemConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionFileSystemConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionFileSystemConfig)(nil)).Elem()
}

func (o FunctionFileSystemConfigPtrOutput) ToFunctionFileSystemConfigPtrOutput() FunctionFileSystemConfigPtrOutput {
	return o
}

func (o FunctionFileSystemConfigPtrOutput) ToFunctionFileSystemConfigPtrOutputWithContext(ctx context.Context) FunctionFileSystemConfigPtrOutput {
	return o
}

func (o FunctionFileSystemConfigPtrOutput) Elem() FunctionFileSystemConfigOutput {
	return o.ApplyT(func(v *FunctionFileSystemConfig) FunctionFileSystemConfig {
		if v != nil {
			return *v
		}
		var ret FunctionFileSystemConfig
		return ret
	}).(FunctionFileSystemConfigOutput)
}

// ARN of the Amazon EFS Access Point.
func (o FunctionFileSystemConfigPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// Path where the function can access the file system. Must start with `/mnt/`.
func (o FunctionFileSystemConfigPtrOutput) LocalMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionFileSystemConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LocalMountPath
	}).(pulumi.StringPtrOutput)
}

type FunctionImageConfig struct {
	// Parameters to pass to the container image.
	Commands []string `pulumi:"commands"`
	// Entry point to your application.
	EntryPoints []string `pulumi:"entryPoints"`
	// Working directory for the container image.
	WorkingDirectory *string `pulumi:"workingDirectory"`
}

// FunctionImageConfigInput is an input type that accepts FunctionImageConfigArgs and FunctionImageConfigOutput values.
// You can construct a concrete instance of `FunctionImageConfigInput` via:
//
//	FunctionImageConfigArgs{...}
type FunctionImageConfigInput interface {
	pulumi.Input

	ToFunctionImageConfigOutput() FunctionImageConfigOutput
	ToFunctionImageConfigOutputWithContext(context.Context) FunctionImageConfigOutput
}

type FunctionImageConfigArgs struct {
	// Parameters to pass to the container image.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// Entry point to your application.
	EntryPoints pulumi.StringArrayInput `pulumi:"entryPoints"`
	// Working directory for the container image.
	WorkingDirectory pulumi.StringPtrInput `pulumi:"workingDirectory"`
}

func (FunctionImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionImageConfig)(nil)).Elem()
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigOutput() FunctionImageConfigOutput {
	return i.ToFunctionImageConfigOutputWithContext(context.Background())
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigOutputWithContext(ctx context.Context) FunctionImageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigOutput)
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return i.ToFunctionImageConfigPtrOutputWithContext(context.Background())
}

func (i FunctionImageConfigArgs) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigOutput).ToFunctionImageConfigPtrOutputWithContext(ctx)
}

// FunctionImageConfigPtrInput is an input type that accepts FunctionImageConfigArgs, FunctionImageConfigPtr and FunctionImageConfigPtrOutput values.
// You can construct a concrete instance of `FunctionImageConfigPtrInput` via:
//
//	        FunctionImageConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionImageConfigPtrInput interface {
	pulumi.Input

	ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput
	ToFunctionImageConfigPtrOutputWithContext(context.Context) FunctionImageConfigPtrOutput
}

type functionImageConfigPtrType FunctionImageConfigArgs

func FunctionImageConfigPtr(v *FunctionImageConfigArgs) FunctionImageConfigPtrInput {
	return (*functionImageConfigPtrType)(v)
}

func (*functionImageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionImageConfig)(nil)).Elem()
}

func (i *functionImageConfigPtrType) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return i.ToFunctionImageConfigPtrOutputWithContext(context.Background())
}

func (i *functionImageConfigPtrType) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionImageConfigPtrOutput)
}

type FunctionImageConfigOutput struct{ *pulumi.OutputState }

func (FunctionImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionImageConfig)(nil)).Elem()
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigOutput() FunctionImageConfigOutput {
	return o
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigOutputWithContext(ctx context.Context) FunctionImageConfigOutput {
	return o
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return o.ToFunctionImageConfigPtrOutputWithContext(context.Background())
}

func (o FunctionImageConfigOutput) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionImageConfig) *FunctionImageConfig {
		return &v
	}).(FunctionImageConfigPtrOutput)
}

// Parameters to pass to the container image.
func (o FunctionImageConfigOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionImageConfig) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// Entry point to your application.
func (o FunctionImageConfigOutput) EntryPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionImageConfig) []string { return v.EntryPoints }).(pulumi.StringArrayOutput)
}

// Working directory for the container image.
func (o FunctionImageConfigOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionImageConfig) *string { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type FunctionImageConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionImageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionImageConfig)(nil)).Elem()
}

func (o FunctionImageConfigPtrOutput) ToFunctionImageConfigPtrOutput() FunctionImageConfigPtrOutput {
	return o
}

func (o FunctionImageConfigPtrOutput) ToFunctionImageConfigPtrOutputWithContext(ctx context.Context) FunctionImageConfigPtrOutput {
	return o
}

func (o FunctionImageConfigPtrOutput) Elem() FunctionImageConfigOutput {
	return o.ApplyT(func(v *FunctionImageConfig) FunctionImageConfig {
		if v != nil {
			return *v
		}
		var ret FunctionImageConfig
		return ret
	}).(FunctionImageConfigOutput)
}

// Parameters to pass to the container image.
func (o FunctionImageConfigPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionImageConfig) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

// Entry point to your application.
func (o FunctionImageConfigPtrOutput) EntryPoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionImageConfig) []string {
		if v == nil {
			return nil
		}
		return v.EntryPoints
	}).(pulumi.StringArrayOutput)
}

// Working directory for the container image.
func (o FunctionImageConfigPtrOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionImageConfig) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDirectory
	}).(pulumi.StringPtrOutput)
}

type FunctionLoggingConfig struct {
	// Detail level of application logs. Valid values: `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `FATAL`.
	ApplicationLogLevel *string `pulumi:"applicationLogLevel"`
	// Log format. Valid values: `Text`, `JSON`.
	LogFormat string `pulumi:"logFormat"`
	// CloudWatch log group where logs are sent.
	LogGroup *string `pulumi:"logGroup"`
	// Detail level of Lambda platform logs. Valid values: `DEBUG`, `INFO`, `WARN`.
	SystemLogLevel *string `pulumi:"systemLogLevel"`
}

// FunctionLoggingConfigInput is an input type that accepts FunctionLoggingConfigArgs and FunctionLoggingConfigOutput values.
// You can construct a concrete instance of `FunctionLoggingConfigInput` via:
//
//	FunctionLoggingConfigArgs{...}
type FunctionLoggingConfigInput interface {
	pulumi.Input

	ToFunctionLoggingConfigOutput() FunctionLoggingConfigOutput
	ToFunctionLoggingConfigOutputWithContext(context.Context) FunctionLoggingConfigOutput
}

type FunctionLoggingConfigArgs struct {
	// Detail level of application logs. Valid values: `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `FATAL`.
	ApplicationLogLevel pulumi.StringPtrInput `pulumi:"applicationLogLevel"`
	// Log format. Valid values: `Text`, `JSON`.
	LogFormat pulumi.StringInput `pulumi:"logFormat"`
	// CloudWatch log group where logs are sent.
	LogGroup pulumi.StringPtrInput `pulumi:"logGroup"`
	// Detail level of Lambda platform logs. Valid values: `DEBUG`, `INFO`, `WARN`.
	SystemLogLevel pulumi.StringPtrInput `pulumi:"systemLogLevel"`
}

func (FunctionLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionLoggingConfig)(nil)).Elem()
}

func (i FunctionLoggingConfigArgs) ToFunctionLoggingConfigOutput() FunctionLoggingConfigOutput {
	return i.ToFunctionLoggingConfigOutputWithContext(context.Background())
}

func (i FunctionLoggingConfigArgs) ToFunctionLoggingConfigOutputWithContext(ctx context.Context) FunctionLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionLoggingConfigOutput)
}

func (i FunctionLoggingConfigArgs) ToFunctionLoggingConfigPtrOutput() FunctionLoggingConfigPtrOutput {
	return i.ToFunctionLoggingConfigPtrOutputWithContext(context.Background())
}

func (i FunctionLoggingConfigArgs) ToFunctionLoggingConfigPtrOutputWithContext(ctx context.Context) FunctionLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionLoggingConfigOutput).ToFunctionLoggingConfigPtrOutputWithContext(ctx)
}

// FunctionLoggingConfigPtrInput is an input type that accepts FunctionLoggingConfigArgs, FunctionLoggingConfigPtr and FunctionLoggingConfigPtrOutput values.
// You can construct a concrete instance of `FunctionLoggingConfigPtrInput` via:
//
//	        FunctionLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionLoggingConfigPtrInput interface {
	pulumi.Input

	ToFunctionLoggingConfigPtrOutput() FunctionLoggingConfigPtrOutput
	ToFunctionLoggingConfigPtrOutputWithContext(context.Context) FunctionLoggingConfigPtrOutput
}

type functionLoggingConfigPtrType FunctionLoggingConfigArgs

func FunctionLoggingConfigPtr(v *FunctionLoggingConfigArgs) FunctionLoggingConfigPtrInput {
	return (*functionLoggingConfigPtrType)(v)
}

func (*functionLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionLoggingConfig)(nil)).Elem()
}

func (i *functionLoggingConfigPtrType) ToFunctionLoggingConfigPtrOutput() FunctionLoggingConfigPtrOutput {
	return i.ToFunctionLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *functionLoggingConfigPtrType) ToFunctionLoggingConfigPtrOutputWithContext(ctx context.Context) FunctionLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionLoggingConfigPtrOutput)
}

type FunctionLoggingConfigOutput struct{ *pulumi.OutputState }

func (FunctionLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionLoggingConfig)(nil)).Elem()
}

func (o FunctionLoggingConfigOutput) ToFunctionLoggingConfigOutput() FunctionLoggingConfigOutput {
	return o
}

func (o FunctionLoggingConfigOutput) ToFunctionLoggingConfigOutputWithContext(ctx context.Context) FunctionLoggingConfigOutput {
	return o
}

func (o FunctionLoggingConfigOutput) ToFunctionLoggingConfigPtrOutput() FunctionLoggingConfigPtrOutput {
	return o.ToFunctionLoggingConfigPtrOutputWithContext(context.Background())
}

func (o FunctionLoggingConfigOutput) ToFunctionLoggingConfigPtrOutputWithContext(ctx context.Context) FunctionLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionLoggingConfig) *FunctionLoggingConfig {
		return &v
	}).(FunctionLoggingConfigPtrOutput)
}

// Detail level of application logs. Valid values: `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `FATAL`.
func (o FunctionLoggingConfigOutput) ApplicationLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionLoggingConfig) *string { return v.ApplicationLogLevel }).(pulumi.StringPtrOutput)
}

// Log format. Valid values: `Text`, `JSON`.
func (o FunctionLoggingConfigOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionLoggingConfig) string { return v.LogFormat }).(pulumi.StringOutput)
}

// CloudWatch log group where logs are sent.
func (o FunctionLoggingConfigOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionLoggingConfig) *string { return v.LogGroup }).(pulumi.StringPtrOutput)
}

// Detail level of Lambda platform logs. Valid values: `DEBUG`, `INFO`, `WARN`.
func (o FunctionLoggingConfigOutput) SystemLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionLoggingConfig) *string { return v.SystemLogLevel }).(pulumi.StringPtrOutput)
}

type FunctionLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionLoggingConfig)(nil)).Elem()
}

func (o FunctionLoggingConfigPtrOutput) ToFunctionLoggingConfigPtrOutput() FunctionLoggingConfigPtrOutput {
	return o
}

func (o FunctionLoggingConfigPtrOutput) ToFunctionLoggingConfigPtrOutputWithContext(ctx context.Context) FunctionLoggingConfigPtrOutput {
	return o
}

func (o FunctionLoggingConfigPtrOutput) Elem() FunctionLoggingConfigOutput {
	return o.ApplyT(func(v *FunctionLoggingConfig) FunctionLoggingConfig {
		if v != nil {
			return *v
		}
		var ret FunctionLoggingConfig
		return ret
	}).(FunctionLoggingConfigOutput)
}

// Detail level of application logs. Valid values: `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `FATAL`.
func (o FunctionLoggingConfigPtrOutput) ApplicationLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationLogLevel
	}).(pulumi.StringPtrOutput)
}

// Log format. Valid values: `Text`, `JSON`.
func (o FunctionLoggingConfigPtrOutput) LogFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LogFormat
	}).(pulumi.StringPtrOutput)
}

// CloudWatch log group where logs are sent.
func (o FunctionLoggingConfigPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogGroup
	}).(pulumi.StringPtrOutput)
}

// Detail level of Lambda platform logs. Valid values: `DEBUG`, `INFO`, `WARN`.
func (o FunctionLoggingConfigPtrOutput) SystemLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return v.SystemLogLevel
	}).(pulumi.StringPtrOutput)
}

type FunctionSnapStart struct {
	// When to apply snap start optimization. Valid value: `PublishedVersions`.
	ApplyOn string `pulumi:"applyOn"`
	// Optimization status of the snap start configuration. Valid values are `On` and `Off`.
	OptimizationStatus *string `pulumi:"optimizationStatus"`
}

// FunctionSnapStartInput is an input type that accepts FunctionSnapStartArgs and FunctionSnapStartOutput values.
// You can construct a concrete instance of `FunctionSnapStartInput` via:
//
//	FunctionSnapStartArgs{...}
type FunctionSnapStartInput interface {
	pulumi.Input

	ToFunctionSnapStartOutput() FunctionSnapStartOutput
	ToFunctionSnapStartOutputWithContext(context.Context) FunctionSnapStartOutput
}

type FunctionSnapStartArgs struct {
	// When to apply snap start optimization. Valid value: `PublishedVersions`.
	ApplyOn pulumi.StringInput `pulumi:"applyOn"`
	// Optimization status of the snap start configuration. Valid values are `On` and `Off`.
	OptimizationStatus pulumi.StringPtrInput `pulumi:"optimizationStatus"`
}

func (FunctionSnapStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSnapStart)(nil)).Elem()
}

func (i FunctionSnapStartArgs) ToFunctionSnapStartOutput() FunctionSnapStartOutput {
	return i.ToFunctionSnapStartOutputWithContext(context.Background())
}

func (i FunctionSnapStartArgs) ToFunctionSnapStartOutputWithContext(ctx context.Context) FunctionSnapStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSnapStartOutput)
}

func (i FunctionSnapStartArgs) ToFunctionSnapStartPtrOutput() FunctionSnapStartPtrOutput {
	return i.ToFunctionSnapStartPtrOutputWithContext(context.Background())
}

func (i FunctionSnapStartArgs) ToFunctionSnapStartPtrOutputWithContext(ctx context.Context) FunctionSnapStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSnapStartOutput).ToFunctionSnapStartPtrOutputWithContext(ctx)
}

// FunctionSnapStartPtrInput is an input type that accepts FunctionSnapStartArgs, FunctionSnapStartPtr and FunctionSnapStartPtrOutput values.
// You can construct a concrete instance of `FunctionSnapStartPtrInput` via:
//
//	        FunctionSnapStartArgs{...}
//
//	or:
//
//	        nil
type FunctionSnapStartPtrInput interface {
	pulumi.Input

	ToFunctionSnapStartPtrOutput() FunctionSnapStartPtrOutput
	ToFunctionSnapStartPtrOutputWithContext(context.Context) FunctionSnapStartPtrOutput
}

type functionSnapStartPtrType FunctionSnapStartArgs

func FunctionSnapStartPtr(v *FunctionSnapStartArgs) FunctionSnapStartPtrInput {
	return (*functionSnapStartPtrType)(v)
}

func (*functionSnapStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSnapStart)(nil)).Elem()
}

func (i *functionSnapStartPtrType) ToFunctionSnapStartPtrOutput() FunctionSnapStartPtrOutput {
	return i.ToFunctionSnapStartPtrOutputWithContext(context.Background())
}

func (i *functionSnapStartPtrType) ToFunctionSnapStartPtrOutputWithContext(ctx context.Context) FunctionSnapStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSnapStartPtrOutput)
}

type FunctionSnapStartOutput struct{ *pulumi.OutputState }

func (FunctionSnapStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSnapStart)(nil)).Elem()
}

func (o FunctionSnapStartOutput) ToFunctionSnapStartOutput() FunctionSnapStartOutput {
	return o
}

func (o FunctionSnapStartOutput) ToFunctionSnapStartOutputWithContext(ctx context.Context) FunctionSnapStartOutput {
	return o
}

func (o FunctionSnapStartOutput) ToFunctionSnapStartPtrOutput() FunctionSnapStartPtrOutput {
	return o.ToFunctionSnapStartPtrOutputWithContext(context.Background())
}

func (o FunctionSnapStartOutput) ToFunctionSnapStartPtrOutputWithContext(ctx context.Context) FunctionSnapStartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionSnapStart) *FunctionSnapStart {
		return &v
	}).(FunctionSnapStartPtrOutput)
}

// When to apply snap start optimization. Valid value: `PublishedVersions`.
func (o FunctionSnapStartOutput) ApplyOn() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSnapStart) string { return v.ApplyOn }).(pulumi.StringOutput)
}

// Optimization status of the snap start configuration. Valid values are `On` and `Off`.
func (o FunctionSnapStartOutput) OptimizationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSnapStart) *string { return v.OptimizationStatus }).(pulumi.StringPtrOutput)
}

type FunctionSnapStartPtrOutput struct{ *pulumi.OutputState }

func (FunctionSnapStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSnapStart)(nil)).Elem()
}

func (o FunctionSnapStartPtrOutput) ToFunctionSnapStartPtrOutput() FunctionSnapStartPtrOutput {
	return o
}

func (o FunctionSnapStartPtrOutput) ToFunctionSnapStartPtrOutputWithContext(ctx context.Context) FunctionSnapStartPtrOutput {
	return o
}

func (o FunctionSnapStartPtrOutput) Elem() FunctionSnapStartOutput {
	return o.ApplyT(func(v *FunctionSnapStart) FunctionSnapStart {
		if v != nil {
			return *v
		}
		var ret FunctionSnapStart
		return ret
	}).(FunctionSnapStartOutput)
}

// When to apply snap start optimization. Valid value: `PublishedVersions`.
func (o FunctionSnapStartPtrOutput) ApplyOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSnapStart) *string {
		if v == nil {
			return nil
		}
		return &v.ApplyOn
	}).(pulumi.StringPtrOutput)
}

// Optimization status of the snap start configuration. Valid values are `On` and `Off`.
func (o FunctionSnapStartPtrOutput) OptimizationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSnapStart) *string {
		if v == nil {
			return nil
		}
		return v.OptimizationStatus
	}).(pulumi.StringPtrOutput)
}

type FunctionTracingConfig struct {
	// X-Ray tracing mode. Valid values: `Active`, `PassThrough`.
	Mode string `pulumi:"mode"`
}

// FunctionTracingConfigInput is an input type that accepts FunctionTracingConfigArgs and FunctionTracingConfigOutput values.
// You can construct a concrete instance of `FunctionTracingConfigInput` via:
//
//	FunctionTracingConfigArgs{...}
type FunctionTracingConfigInput interface {
	pulumi.Input

	ToFunctionTracingConfigOutput() FunctionTracingConfigOutput
	ToFunctionTracingConfigOutputWithContext(context.Context) FunctionTracingConfigOutput
}

type FunctionTracingConfigArgs struct {
	// X-Ray tracing mode. Valid values: `Active`, `PassThrough`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (FunctionTracingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTracingConfig)(nil)).Elem()
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigOutput() FunctionTracingConfigOutput {
	return i.ToFunctionTracingConfigOutputWithContext(context.Background())
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigOutputWithContext(ctx context.Context) FunctionTracingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTracingConfigOutput)
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return i.ToFunctionTracingConfigPtrOutputWithContext(context.Background())
}

func (i FunctionTracingConfigArgs) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTracingConfigOutput).ToFunctionTracingConfigPtrOutputWithContext(ctx)
}

// FunctionTracingConfigPtrInput is an input type that accepts FunctionTracingConfigArgs, FunctionTracingConfigPtr and FunctionTracingConfigPtrOutput values.
// You can construct a concrete instance of `FunctionTracingConfigPtrInput` via:
//
//	        FunctionTracingConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionTracingConfigPtrInput interface {
	pulumi.Input

	ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput
	ToFunctionTracingConfigPtrOutputWithContext(context.Context) FunctionTracingConfigPtrOutput
}

type functionTracingConfigPtrType FunctionTracingConfigArgs

func FunctionTracingConfigPtr(v *FunctionTracingConfigArgs) FunctionTracingConfigPtrInput {
	return (*functionTracingConfigPtrType)(v)
}

func (*functionTracingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTracingConfig)(nil)).Elem()
}

func (i *functionTracingConfigPtrType) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return i.ToFunctionTracingConfigPtrOutputWithContext(context.Background())
}

func (i *functionTracingConfigPtrType) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTracingConfigPtrOutput)
}

type FunctionTracingConfigOutput struct{ *pulumi.OutputState }

func (FunctionTracingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTracingConfig)(nil)).Elem()
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigOutput() FunctionTracingConfigOutput {
	return o
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigOutputWithContext(ctx context.Context) FunctionTracingConfigOutput {
	return o
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return o.ToFunctionTracingConfigPtrOutputWithContext(context.Background())
}

func (o FunctionTracingConfigOutput) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTracingConfig) *FunctionTracingConfig {
		return &v
	}).(FunctionTracingConfigPtrOutput)
}

// X-Ray tracing mode. Valid values: `Active`, `PassThrough`.
func (o FunctionTracingConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTracingConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type FunctionTracingConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionTracingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTracingConfig)(nil)).Elem()
}

func (o FunctionTracingConfigPtrOutput) ToFunctionTracingConfigPtrOutput() FunctionTracingConfigPtrOutput {
	return o
}

func (o FunctionTracingConfigPtrOutput) ToFunctionTracingConfigPtrOutputWithContext(ctx context.Context) FunctionTracingConfigPtrOutput {
	return o
}

func (o FunctionTracingConfigPtrOutput) Elem() FunctionTracingConfigOutput {
	return o.ApplyT(func(v *FunctionTracingConfig) FunctionTracingConfig {
		if v != nil {
			return *v
		}
		var ret FunctionTracingConfig
		return ret
	}).(FunctionTracingConfigOutput)
}

// X-Ray tracing mode. Valid values: `Active`, `PassThrough`.
func (o FunctionTracingConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTracingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type FunctionUrlCors struct {
	// Whether to allow cookies or other credentials in requests to the function URL.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// HTTP headers that origins can include in requests to the function URL.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// HTTP methods that are allowed when calling the function URL.
	AllowMethods []string `pulumi:"allowMethods"`
	// Origins that can access the function URL.
	AllowOrigins []string `pulumi:"allowOrigins"`
	// HTTP headers in your function response that you want to expose to origins that call the function URL.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Maximum amount of time, in seconds, that web browsers can cache results of a preflight request. Maximum value is `86400`.
	MaxAge *int `pulumi:"maxAge"`
}

// FunctionUrlCorsInput is an input type that accepts FunctionUrlCorsArgs and FunctionUrlCorsOutput values.
// You can construct a concrete instance of `FunctionUrlCorsInput` via:
//
//	FunctionUrlCorsArgs{...}
type FunctionUrlCorsInput interface {
	pulumi.Input

	ToFunctionUrlCorsOutput() FunctionUrlCorsOutput
	ToFunctionUrlCorsOutputWithContext(context.Context) FunctionUrlCorsOutput
}

type FunctionUrlCorsArgs struct {
	// Whether to allow cookies or other credentials in requests to the function URL.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// HTTP headers that origins can include in requests to the function URL.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// HTTP methods that are allowed when calling the function URL.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	// Origins that can access the function URL.
	AllowOrigins pulumi.StringArrayInput `pulumi:"allowOrigins"`
	// HTTP headers in your function response that you want to expose to origins that call the function URL.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Maximum amount of time, in seconds, that web browsers can cache results of a preflight request. Maximum value is `86400`.
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
}

func (FunctionUrlCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionUrlCors)(nil)).Elem()
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsOutput() FunctionUrlCorsOutput {
	return i.ToFunctionUrlCorsOutputWithContext(context.Background())
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsOutputWithContext(ctx context.Context) FunctionUrlCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlCorsOutput)
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return i.ToFunctionUrlCorsPtrOutputWithContext(context.Background())
}

func (i FunctionUrlCorsArgs) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlCorsOutput).ToFunctionUrlCorsPtrOutputWithContext(ctx)
}

// FunctionUrlCorsPtrInput is an input type that accepts FunctionUrlCorsArgs, FunctionUrlCorsPtr and FunctionUrlCorsPtrOutput values.
// You can construct a concrete instance of `FunctionUrlCorsPtrInput` via:
//
//	        FunctionUrlCorsArgs{...}
//
//	or:
//
//	        nil
type FunctionUrlCorsPtrInput interface {
	pulumi.Input

	ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput
	ToFunctionUrlCorsPtrOutputWithContext(context.Context) FunctionUrlCorsPtrOutput
}

type functionUrlCorsPtrType FunctionUrlCorsArgs

func FunctionUrlCorsPtr(v *FunctionUrlCorsArgs) FunctionUrlCorsPtrInput {
	return (*functionUrlCorsPtrType)(v)
}

func (*functionUrlCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionUrlCors)(nil)).Elem()
}

func (i *functionUrlCorsPtrType) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return i.ToFunctionUrlCorsPtrOutputWithContext(context.Background())
}

func (i *functionUrlCorsPtrType) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlCorsPtrOutput)
}

type FunctionUrlCorsOutput struct{ *pulumi.OutputState }

func (FunctionUrlCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionUrlCors)(nil)).Elem()
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsOutput() FunctionUrlCorsOutput {
	return o
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsOutputWithContext(ctx context.Context) FunctionUrlCorsOutput {
	return o
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return o.ToFunctionUrlCorsPtrOutputWithContext(context.Background())
}

func (o FunctionUrlCorsOutput) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionUrlCors) *FunctionUrlCors {
		return &v
	}).(FunctionUrlCorsPtrOutput)
}

// Whether to allow cookies or other credentials in requests to the function URL.
func (o FunctionUrlCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionUrlCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// HTTP headers that origins can include in requests to the function URL.
func (o FunctionUrlCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// HTTP methods that are allowed when calling the function URL.
func (o FunctionUrlCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

// Origins that can access the function URL.
func (o FunctionUrlCorsOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.AllowOrigins }).(pulumi.StringArrayOutput)
}

// HTTP headers in your function response that you want to expose to origins that call the function URL.
func (o FunctionUrlCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionUrlCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Maximum amount of time, in seconds, that web browsers can cache results of a preflight request. Maximum value is `86400`.
func (o FunctionUrlCorsOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionUrlCors) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

type FunctionUrlCorsPtrOutput struct{ *pulumi.OutputState }

func (FunctionUrlCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionUrlCors)(nil)).Elem()
}

func (o FunctionUrlCorsPtrOutput) ToFunctionUrlCorsPtrOutput() FunctionUrlCorsPtrOutput {
	return o
}

func (o FunctionUrlCorsPtrOutput) ToFunctionUrlCorsPtrOutputWithContext(ctx context.Context) FunctionUrlCorsPtrOutput {
	return o
}

func (o FunctionUrlCorsPtrOutput) Elem() FunctionUrlCorsOutput {
	return o.ApplyT(func(v *FunctionUrlCors) FunctionUrlCors {
		if v != nil {
			return *v
		}
		var ret FunctionUrlCors
		return ret
	}).(FunctionUrlCorsOutput)
}

// Whether to allow cookies or other credentials in requests to the function URL.
func (o FunctionUrlCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionUrlCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// HTTP headers that origins can include in requests to the function URL.
func (o FunctionUrlCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// HTTP methods that are allowed when calling the function URL.
func (o FunctionUrlCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

// Origins that can access the function URL.
func (o FunctionUrlCorsPtrOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(pulumi.StringArrayOutput)
}

// HTTP headers in your function response that you want to expose to origins that call the function URL.
func (o FunctionUrlCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionUrlCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// Maximum amount of time, in seconds, that web browsers can cache results of a preflight request. Maximum value is `86400`.
func (o FunctionUrlCorsPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FunctionUrlCors) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

type FunctionVpcConfig struct {
	// Whether to allow outbound IPv6 traffic on VPC functions connected to dual-stack subnets. Default: `false`.
	Ipv6AllowedForDualStack *bool `pulumi:"ipv6AllowedForDualStack"`
	// List of security group IDs associated with the Lambda function.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of subnet IDs associated with the Lambda function.
	SubnetIds []string `pulumi:"subnetIds"`
	// ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

// FunctionVpcConfigInput is an input type that accepts FunctionVpcConfigArgs and FunctionVpcConfigOutput values.
// You can construct a concrete instance of `FunctionVpcConfigInput` via:
//
//	FunctionVpcConfigArgs{...}
type FunctionVpcConfigInput interface {
	pulumi.Input

	ToFunctionVpcConfigOutput() FunctionVpcConfigOutput
	ToFunctionVpcConfigOutputWithContext(context.Context) FunctionVpcConfigOutput
}

type FunctionVpcConfigArgs struct {
	// Whether to allow outbound IPv6 traffic on VPC functions connected to dual-stack subnets. Default: `false`.
	Ipv6AllowedForDualStack pulumi.BoolPtrInput `pulumi:"ipv6AllowedForDualStack"`
	// List of security group IDs associated with the Lambda function.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of subnet IDs associated with the Lambda function.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// ID of the VPC.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (FunctionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVpcConfig)(nil)).Elem()
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigOutput() FunctionVpcConfigOutput {
	return i.ToFunctionVpcConfigOutputWithContext(context.Background())
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigOutputWithContext(ctx context.Context) FunctionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigOutput)
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return i.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigOutput).ToFunctionVpcConfigPtrOutputWithContext(ctx)
}

// FunctionVpcConfigPtrInput is an input type that accepts FunctionVpcConfigArgs, FunctionVpcConfigPtr and FunctionVpcConfigPtrOutput values.
// You can construct a concrete instance of `FunctionVpcConfigPtrInput` via:
//
//	        FunctionVpcConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionVpcConfigPtrInput interface {
	pulumi.Input

	ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput
	ToFunctionVpcConfigPtrOutputWithContext(context.Context) FunctionVpcConfigPtrOutput
}

type functionVpcConfigPtrType FunctionVpcConfigArgs

func FunctionVpcConfigPtr(v *FunctionVpcConfigArgs) FunctionVpcConfigPtrInput {
	return (*functionVpcConfigPtrType)(v)
}

func (*functionVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVpcConfig)(nil)).Elem()
}

func (i *functionVpcConfigPtrType) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return i.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (i *functionVpcConfigPtrType) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigPtrOutput)
}

type FunctionVpcConfigOutput struct{ *pulumi.OutputState }

func (FunctionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVpcConfig)(nil)).Elem()
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigOutput() FunctionVpcConfigOutput {
	return o
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigOutputWithContext(ctx context.Context) FunctionVpcConfigOutput {
	return o
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return o.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionVpcConfig) *FunctionVpcConfig {
		return &v
	}).(FunctionVpcConfigPtrOutput)
}

// Whether to allow outbound IPv6 traffic on VPC functions connected to dual-stack subnets. Default: `false`.
func (o FunctionVpcConfigOutput) Ipv6AllowedForDualStack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionVpcConfig) *bool { return v.Ipv6AllowedForDualStack }).(pulumi.BoolPtrOutput)
}

// List of security group IDs associated with the Lambda function.
func (o FunctionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of subnet IDs associated with the Lambda function.
func (o FunctionVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// ID of the VPC.
func (o FunctionVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type FunctionVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVpcConfig)(nil)).Elem()
}

func (o FunctionVpcConfigPtrOutput) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return o
}

func (o FunctionVpcConfigPtrOutput) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return o
}

func (o FunctionVpcConfigPtrOutput) Elem() FunctionVpcConfigOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) FunctionVpcConfig {
		if v != nil {
			return *v
		}
		var ret FunctionVpcConfig
		return ret
	}).(FunctionVpcConfigOutput)
}

// Whether to allow outbound IPv6 traffic on VPC functions connected to dual-stack subnets. Default: `false`.
func (o FunctionVpcConfigPtrOutput) Ipv6AllowedForDualStack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Ipv6AllowedForDualStack
	}).(pulumi.BoolPtrOutput)
}

// List of security group IDs associated with the Lambda function.
func (o FunctionVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// List of subnet IDs associated with the Lambda function.
func (o FunctionVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// ID of the VPC.
func (o FunctionVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type GetCodeSigningConfigAllowedPublisher struct {
	// Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	SigningProfileVersionArns []string `pulumi:"signingProfileVersionArns"`
}

// GetCodeSigningConfigAllowedPublisherInput is an input type that accepts GetCodeSigningConfigAllowedPublisherArgs and GetCodeSigningConfigAllowedPublisherOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigAllowedPublisherInput` via:
//
//	GetCodeSigningConfigAllowedPublisherArgs{...}
type GetCodeSigningConfigAllowedPublisherInput interface {
	pulumi.Input

	ToGetCodeSigningConfigAllowedPublisherOutput() GetCodeSigningConfigAllowedPublisherOutput
	ToGetCodeSigningConfigAllowedPublisherOutputWithContext(context.Context) GetCodeSigningConfigAllowedPublisherOutput
}

type GetCodeSigningConfigAllowedPublisherArgs struct {
	// Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	SigningProfileVersionArns pulumi.StringArrayInput `pulumi:"signingProfileVersionArns"`
}

func (GetCodeSigningConfigAllowedPublisherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (i GetCodeSigningConfigAllowedPublisherArgs) ToGetCodeSigningConfigAllowedPublisherOutput() GetCodeSigningConfigAllowedPublisherOutput {
	return i.ToGetCodeSigningConfigAllowedPublisherOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigAllowedPublisherArgs) ToGetCodeSigningConfigAllowedPublisherOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigAllowedPublisherOutput)
}

// GetCodeSigningConfigAllowedPublisherArrayInput is an input type that accepts GetCodeSigningConfigAllowedPublisherArray and GetCodeSigningConfigAllowedPublisherArrayOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigAllowedPublisherArrayInput` via:
//
//	GetCodeSigningConfigAllowedPublisherArray{ GetCodeSigningConfigAllowedPublisherArgs{...} }
type GetCodeSigningConfigAllowedPublisherArrayInput interface {
	pulumi.Input

	ToGetCodeSigningConfigAllowedPublisherArrayOutput() GetCodeSigningConfigAllowedPublisherArrayOutput
	ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(context.Context) GetCodeSigningConfigAllowedPublisherArrayOutput
}

type GetCodeSigningConfigAllowedPublisherArray []GetCodeSigningConfigAllowedPublisherInput

func (GetCodeSigningConfigAllowedPublisherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (i GetCodeSigningConfigAllowedPublisherArray) ToGetCodeSigningConfigAllowedPublisherArrayOutput() GetCodeSigningConfigAllowedPublisherArrayOutput {
	return i.ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigAllowedPublisherArray) ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigAllowedPublisherArrayOutput)
}

type GetCodeSigningConfigAllowedPublisherOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigAllowedPublisherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (o GetCodeSigningConfigAllowedPublisherOutput) ToGetCodeSigningConfigAllowedPublisherOutput() GetCodeSigningConfigAllowedPublisherOutput {
	return o
}

func (o GetCodeSigningConfigAllowedPublisherOutput) ToGetCodeSigningConfigAllowedPublisherOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherOutput {
	return o
}

// Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
func (o GetCodeSigningConfigAllowedPublisherOutput) SigningProfileVersionArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCodeSigningConfigAllowedPublisher) []string { return v.SigningProfileVersionArns }).(pulumi.StringArrayOutput)
}

type GetCodeSigningConfigAllowedPublisherArrayOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigAllowedPublisherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigAllowedPublisher)(nil)).Elem()
}

func (o GetCodeSigningConfigAllowedPublisherArrayOutput) ToGetCodeSigningConfigAllowedPublisherArrayOutput() GetCodeSigningConfigAllowedPublisherArrayOutput {
	return o
}

func (o GetCodeSigningConfigAllowedPublisherArrayOutput) ToGetCodeSigningConfigAllowedPublisherArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigAllowedPublisherArrayOutput {
	return o
}

func (o GetCodeSigningConfigAllowedPublisherArrayOutput) Index(i pulumi.IntInput) GetCodeSigningConfigAllowedPublisherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCodeSigningConfigAllowedPublisher {
		return vs[0].([]GetCodeSigningConfigAllowedPublisher)[vs[1].(int)]
	}).(GetCodeSigningConfigAllowedPublisherOutput)
}

type GetCodeSigningConfigPolicy struct {
	// Code signing configuration policy for deployment validation failure. Valid values: `Warn`, `Enforce`.
	UntrustedArtifactOnDeployment string `pulumi:"untrustedArtifactOnDeployment"`
}

// GetCodeSigningConfigPolicyInput is an input type that accepts GetCodeSigningConfigPolicyArgs and GetCodeSigningConfigPolicyOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigPolicyInput` via:
//
//	GetCodeSigningConfigPolicyArgs{...}
type GetCodeSigningConfigPolicyInput interface {
	pulumi.Input

	ToGetCodeSigningConfigPolicyOutput() GetCodeSigningConfigPolicyOutput
	ToGetCodeSigningConfigPolicyOutputWithContext(context.Context) GetCodeSigningConfigPolicyOutput
}

type GetCodeSigningConfigPolicyArgs struct {
	// Code signing configuration policy for deployment validation failure. Valid values: `Warn`, `Enforce`.
	UntrustedArtifactOnDeployment pulumi.StringInput `pulumi:"untrustedArtifactOnDeployment"`
}

func (GetCodeSigningConfigPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (i GetCodeSigningConfigPolicyArgs) ToGetCodeSigningConfigPolicyOutput() GetCodeSigningConfigPolicyOutput {
	return i.ToGetCodeSigningConfigPolicyOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigPolicyArgs) ToGetCodeSigningConfigPolicyOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigPolicyOutput)
}

// GetCodeSigningConfigPolicyArrayInput is an input type that accepts GetCodeSigningConfigPolicyArray and GetCodeSigningConfigPolicyArrayOutput values.
// You can construct a concrete instance of `GetCodeSigningConfigPolicyArrayInput` via:
//
//	GetCodeSigningConfigPolicyArray{ GetCodeSigningConfigPolicyArgs{...} }
type GetCodeSigningConfigPolicyArrayInput interface {
	pulumi.Input

	ToGetCodeSigningConfigPolicyArrayOutput() GetCodeSigningConfigPolicyArrayOutput
	ToGetCodeSigningConfigPolicyArrayOutputWithContext(context.Context) GetCodeSigningConfigPolicyArrayOutput
}

type GetCodeSigningConfigPolicyArray []GetCodeSigningConfigPolicyInput

func (GetCodeSigningConfigPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (i GetCodeSigningConfigPolicyArray) ToGetCodeSigningConfigPolicyArrayOutput() GetCodeSigningConfigPolicyArrayOutput {
	return i.ToGetCodeSigningConfigPolicyArrayOutputWithContext(context.Background())
}

func (i GetCodeSigningConfigPolicyArray) ToGetCodeSigningConfigPolicyArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCodeSigningConfigPolicyArrayOutput)
}

type GetCodeSigningConfigPolicyOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (o GetCodeSigningConfigPolicyOutput) ToGetCodeSigningConfigPolicyOutput() GetCodeSigningConfigPolicyOutput {
	return o
}

func (o GetCodeSigningConfigPolicyOutput) ToGetCodeSigningConfigPolicyOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyOutput {
	return o
}

// Code signing configuration policy for deployment validation failure. Valid values: `Warn`, `Enforce`.
func (o GetCodeSigningConfigPolicyOutput) UntrustedArtifactOnDeployment() pulumi.StringOutput {
	return o.ApplyT(func(v GetCodeSigningConfigPolicy) string { return v.UntrustedArtifactOnDeployment }).(pulumi.StringOutput)
}

type GetCodeSigningConfigPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetCodeSigningConfigPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCodeSigningConfigPolicy)(nil)).Elem()
}

func (o GetCodeSigningConfigPolicyArrayOutput) ToGetCodeSigningConfigPolicyArrayOutput() GetCodeSigningConfigPolicyArrayOutput {
	return o
}

func (o GetCodeSigningConfigPolicyArrayOutput) ToGetCodeSigningConfigPolicyArrayOutputWithContext(ctx context.Context) GetCodeSigningConfigPolicyArrayOutput {
	return o
}

func (o GetCodeSigningConfigPolicyArrayOutput) Index(i pulumi.IntInput) GetCodeSigningConfigPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCodeSigningConfigPolicy {
		return vs[0].([]GetCodeSigningConfigPolicy)[vs[1].(int)]
	}).(GetCodeSigningConfigPolicyOutput)
}

type GetFunctionDeadLetterConfig struct {
	// ARN of an SNS topic or SQS queue to notify when an invocation fails.
	TargetArn string `pulumi:"targetArn"`
}

// GetFunctionDeadLetterConfigInput is an input type that accepts GetFunctionDeadLetterConfigArgs and GetFunctionDeadLetterConfigOutput values.
// You can construct a concrete instance of `GetFunctionDeadLetterConfigInput` via:
//
//	GetFunctionDeadLetterConfigArgs{...}
type GetFunctionDeadLetterConfigInput interface {
	pulumi.Input

	ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput
	ToGetFunctionDeadLetterConfigOutputWithContext(context.Context) GetFunctionDeadLetterConfigOutput
}

type GetFunctionDeadLetterConfigArgs struct {
	// ARN of an SNS topic or SQS queue to notify when an invocation fails.
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (GetFunctionDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionDeadLetterConfig)(nil)).Elem()
}

func (i GetFunctionDeadLetterConfigArgs) ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput {
	return i.ToGetFunctionDeadLetterConfigOutputWithContext(context.Background())
}

func (i GetFunctionDeadLetterConfigArgs) ToGetFunctionDeadLetterConfigOutputWithContext(ctx context.Context) GetFunctionDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionDeadLetterConfigOutput)
}

type GetFunctionDeadLetterConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionDeadLetterConfig)(nil)).Elem()
}

func (o GetFunctionDeadLetterConfigOutput) ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput {
	return o
}

func (o GetFunctionDeadLetterConfigOutput) ToGetFunctionDeadLetterConfigOutputWithContext(ctx context.Context) GetFunctionDeadLetterConfigOutput {
	return o
}

// ARN of an SNS topic or SQS queue to notify when an invocation fails.
func (o GetFunctionDeadLetterConfigOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionDeadLetterConfig) string { return v.TargetArn }).(pulumi.StringOutput)
}

type GetFunctionEnvironment struct {
	// Map of environment variables that are accessible from the function code during execution.
	Variables map[string]string `pulumi:"variables"`
}

// GetFunctionEnvironmentInput is an input type that accepts GetFunctionEnvironmentArgs and GetFunctionEnvironmentOutput values.
// You can construct a concrete instance of `GetFunctionEnvironmentInput` via:
//
//	GetFunctionEnvironmentArgs{...}
type GetFunctionEnvironmentInput interface {
	pulumi.Input

	ToGetFunctionEnvironmentOutput() GetFunctionEnvironmentOutput
	ToGetFunctionEnvironmentOutputWithContext(context.Context) GetFunctionEnvironmentOutput
}

type GetFunctionEnvironmentArgs struct {
	// Map of environment variables that are accessible from the function code during execution.
	Variables pulumi.StringMapInput `pulumi:"variables"`
}

func (GetFunctionEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEnvironment)(nil)).Elem()
}

func (i GetFunctionEnvironmentArgs) ToGetFunctionEnvironmentOutput() GetFunctionEnvironmentOutput {
	return i.ToGetFunctionEnvironmentOutputWithContext(context.Background())
}

func (i GetFunctionEnvironmentArgs) ToGetFunctionEnvironmentOutputWithContext(ctx context.Context) GetFunctionEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEnvironmentOutput)
}

type GetFunctionEnvironmentOutput struct{ *pulumi.OutputState }

func (GetFunctionEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEnvironment)(nil)).Elem()
}

func (o GetFunctionEnvironmentOutput) ToGetFunctionEnvironmentOutput() GetFunctionEnvironmentOutput {
	return o
}

func (o GetFunctionEnvironmentOutput) ToGetFunctionEnvironmentOutputWithContext(ctx context.Context) GetFunctionEnvironmentOutput {
	return o
}

// Map of environment variables that are accessible from the function code during execution.
func (o GetFunctionEnvironmentOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFunctionEnvironment) map[string]string { return v.Variables }).(pulumi.StringMapOutput)
}

type GetFunctionEphemeralStorage struct {
	// Size of the Lambda function ephemeral storage (`/tmp`) in MB.
	Size int `pulumi:"size"`
}

// GetFunctionEphemeralStorageInput is an input type that accepts GetFunctionEphemeralStorageArgs and GetFunctionEphemeralStorageOutput values.
// You can construct a concrete instance of `GetFunctionEphemeralStorageInput` via:
//
//	GetFunctionEphemeralStorageArgs{...}
type GetFunctionEphemeralStorageInput interface {
	pulumi.Input

	ToGetFunctionEphemeralStorageOutput() GetFunctionEphemeralStorageOutput
	ToGetFunctionEphemeralStorageOutputWithContext(context.Context) GetFunctionEphemeralStorageOutput
}

type GetFunctionEphemeralStorageArgs struct {
	// Size of the Lambda function ephemeral storage (`/tmp`) in MB.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetFunctionEphemeralStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEphemeralStorage)(nil)).Elem()
}

func (i GetFunctionEphemeralStorageArgs) ToGetFunctionEphemeralStorageOutput() GetFunctionEphemeralStorageOutput {
	return i.ToGetFunctionEphemeralStorageOutputWithContext(context.Background())
}

func (i GetFunctionEphemeralStorageArgs) ToGetFunctionEphemeralStorageOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEphemeralStorageOutput)
}

// GetFunctionEphemeralStorageArrayInput is an input type that accepts GetFunctionEphemeralStorageArray and GetFunctionEphemeralStorageArrayOutput values.
// You can construct a concrete instance of `GetFunctionEphemeralStorageArrayInput` via:
//
//	GetFunctionEphemeralStorageArray{ GetFunctionEphemeralStorageArgs{...} }
type GetFunctionEphemeralStorageArrayInput interface {
	pulumi.Input

	ToGetFunctionEphemeralStorageArrayOutput() GetFunctionEphemeralStorageArrayOutput
	ToGetFunctionEphemeralStorageArrayOutputWithContext(context.Context) GetFunctionEphemeralStorageArrayOutput
}

type GetFunctionEphemeralStorageArray []GetFunctionEphemeralStorageInput

func (GetFunctionEphemeralStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEphemeralStorage)(nil)).Elem()
}

func (i GetFunctionEphemeralStorageArray) ToGetFunctionEphemeralStorageArrayOutput() GetFunctionEphemeralStorageArrayOutput {
	return i.ToGetFunctionEphemeralStorageArrayOutputWithContext(context.Background())
}

func (i GetFunctionEphemeralStorageArray) ToGetFunctionEphemeralStorageArrayOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionEphemeralStorageArrayOutput)
}

type GetFunctionEphemeralStorageOutput struct{ *pulumi.OutputState }

func (GetFunctionEphemeralStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionEphemeralStorage)(nil)).Elem()
}

func (o GetFunctionEphemeralStorageOutput) ToGetFunctionEphemeralStorageOutput() GetFunctionEphemeralStorageOutput {
	return o
}

func (o GetFunctionEphemeralStorageOutput) ToGetFunctionEphemeralStorageOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageOutput {
	return o
}

// Size of the Lambda function ephemeral storage (`/tmp`) in MB.
func (o GetFunctionEphemeralStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionEphemeralStorage) int { return v.Size }).(pulumi.IntOutput)
}

type GetFunctionEphemeralStorageArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionEphemeralStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionEphemeralStorage)(nil)).Elem()
}

func (o GetFunctionEphemeralStorageArrayOutput) ToGetFunctionEphemeralStorageArrayOutput() GetFunctionEphemeralStorageArrayOutput {
	return o
}

func (o GetFunctionEphemeralStorageArrayOutput) ToGetFunctionEphemeralStorageArrayOutputWithContext(ctx context.Context) GetFunctionEphemeralStorageArrayOutput {
	return o
}

func (o GetFunctionEphemeralStorageArrayOutput) Index(i pulumi.IntInput) GetFunctionEphemeralStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionEphemeralStorage {
		return vs[0].([]GetFunctionEphemeralStorage)[vs[1].(int)]
	}).(GetFunctionEphemeralStorageOutput)
}

type GetFunctionFileSystemConfig struct {
	// ARN of the Amazon EFS Access Point that provides access to the file system.
	Arn string `pulumi:"arn"`
	// Path where the function can access the file system, starting with `/mnt/`.
	LocalMountPath string `pulumi:"localMountPath"`
}

// GetFunctionFileSystemConfigInput is an input type that accepts GetFunctionFileSystemConfigArgs and GetFunctionFileSystemConfigOutput values.
// You can construct a concrete instance of `GetFunctionFileSystemConfigInput` via:
//
//	GetFunctionFileSystemConfigArgs{...}
type GetFunctionFileSystemConfigInput interface {
	pulumi.Input

	ToGetFunctionFileSystemConfigOutput() GetFunctionFileSystemConfigOutput
	ToGetFunctionFileSystemConfigOutputWithContext(context.Context) GetFunctionFileSystemConfigOutput
}

type GetFunctionFileSystemConfigArgs struct {
	// ARN of the Amazon EFS Access Point that provides access to the file system.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Path where the function can access the file system, starting with `/mnt/`.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
}

func (GetFunctionFileSystemConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionFileSystemConfig)(nil)).Elem()
}

func (i GetFunctionFileSystemConfigArgs) ToGetFunctionFileSystemConfigOutput() GetFunctionFileSystemConfigOutput {
	return i.ToGetFunctionFileSystemConfigOutputWithContext(context.Background())
}

func (i GetFunctionFileSystemConfigArgs) ToGetFunctionFileSystemConfigOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionFileSystemConfigOutput)
}

// GetFunctionFileSystemConfigArrayInput is an input type that accepts GetFunctionFileSystemConfigArray and GetFunctionFileSystemConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionFileSystemConfigArrayInput` via:
//
//	GetFunctionFileSystemConfigArray{ GetFunctionFileSystemConfigArgs{...} }
type GetFunctionFileSystemConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionFileSystemConfigArrayOutput() GetFunctionFileSystemConfigArrayOutput
	ToGetFunctionFileSystemConfigArrayOutputWithContext(context.Context) GetFunctionFileSystemConfigArrayOutput
}

type GetFunctionFileSystemConfigArray []GetFunctionFileSystemConfigInput

func (GetFunctionFileSystemConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionFileSystemConfig)(nil)).Elem()
}

func (i GetFunctionFileSystemConfigArray) ToGetFunctionFileSystemConfigArrayOutput() GetFunctionFileSystemConfigArrayOutput {
	return i.ToGetFunctionFileSystemConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionFileSystemConfigArray) ToGetFunctionFileSystemConfigArrayOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionFileSystemConfigArrayOutput)
}

type GetFunctionFileSystemConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionFileSystemConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionFileSystemConfig)(nil)).Elem()
}

func (o GetFunctionFileSystemConfigOutput) ToGetFunctionFileSystemConfigOutput() GetFunctionFileSystemConfigOutput {
	return o
}

func (o GetFunctionFileSystemConfigOutput) ToGetFunctionFileSystemConfigOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigOutput {
	return o
}

// ARN of the Amazon EFS Access Point that provides access to the file system.
func (o GetFunctionFileSystemConfigOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionFileSystemConfig) string { return v.Arn }).(pulumi.StringOutput)
}

// Path where the function can access the file system, starting with `/mnt/`.
func (o GetFunctionFileSystemConfigOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionFileSystemConfig) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

type GetFunctionFileSystemConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionFileSystemConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionFileSystemConfig)(nil)).Elem()
}

func (o GetFunctionFileSystemConfigArrayOutput) ToGetFunctionFileSystemConfigArrayOutput() GetFunctionFileSystemConfigArrayOutput {
	return o
}

func (o GetFunctionFileSystemConfigArrayOutput) ToGetFunctionFileSystemConfigArrayOutputWithContext(ctx context.Context) GetFunctionFileSystemConfigArrayOutput {
	return o
}

func (o GetFunctionFileSystemConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionFileSystemConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionFileSystemConfig {
		return vs[0].([]GetFunctionFileSystemConfig)[vs[1].(int)]
	}).(GetFunctionFileSystemConfigOutput)
}

type GetFunctionLoggingConfig struct {
	// Detail level of the logs your application sends to CloudWatch when using supported logging libraries.
	ApplicationLogLevel string `pulumi:"applicationLogLevel"`
	// Format for your function's logs. Valid values: `Text`, `JSON`.
	LogFormat string `pulumi:"logFormat"`
	// CloudWatch log group your function sends logs to.
	LogGroup string `pulumi:"logGroup"`
	// Detail level of the Lambda platform event logs sent to CloudWatch.
	SystemLogLevel string `pulumi:"systemLogLevel"`
}

// GetFunctionLoggingConfigInput is an input type that accepts GetFunctionLoggingConfigArgs and GetFunctionLoggingConfigOutput values.
// You can construct a concrete instance of `GetFunctionLoggingConfigInput` via:
//
//	GetFunctionLoggingConfigArgs{...}
type GetFunctionLoggingConfigInput interface {
	pulumi.Input

	ToGetFunctionLoggingConfigOutput() GetFunctionLoggingConfigOutput
	ToGetFunctionLoggingConfigOutputWithContext(context.Context) GetFunctionLoggingConfigOutput
}

type GetFunctionLoggingConfigArgs struct {
	// Detail level of the logs your application sends to CloudWatch when using supported logging libraries.
	ApplicationLogLevel pulumi.StringInput `pulumi:"applicationLogLevel"`
	// Format for your function's logs. Valid values: `Text`, `JSON`.
	LogFormat pulumi.StringInput `pulumi:"logFormat"`
	// CloudWatch log group your function sends logs to.
	LogGroup pulumi.StringInput `pulumi:"logGroup"`
	// Detail level of the Lambda platform event logs sent to CloudWatch.
	SystemLogLevel pulumi.StringInput `pulumi:"systemLogLevel"`
}

func (GetFunctionLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionLoggingConfig)(nil)).Elem()
}

func (i GetFunctionLoggingConfigArgs) ToGetFunctionLoggingConfigOutput() GetFunctionLoggingConfigOutput {
	return i.ToGetFunctionLoggingConfigOutputWithContext(context.Background())
}

func (i GetFunctionLoggingConfigArgs) ToGetFunctionLoggingConfigOutputWithContext(ctx context.Context) GetFunctionLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionLoggingConfigOutput)
}

// GetFunctionLoggingConfigArrayInput is an input type that accepts GetFunctionLoggingConfigArray and GetFunctionLoggingConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionLoggingConfigArrayInput` via:
//
//	GetFunctionLoggingConfigArray{ GetFunctionLoggingConfigArgs{...} }
type GetFunctionLoggingConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionLoggingConfigArrayOutput() GetFunctionLoggingConfigArrayOutput
	ToGetFunctionLoggingConfigArrayOutputWithContext(context.Context) GetFunctionLoggingConfigArrayOutput
}

type GetFunctionLoggingConfigArray []GetFunctionLoggingConfigInput

func (GetFunctionLoggingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionLoggingConfig)(nil)).Elem()
}

func (i GetFunctionLoggingConfigArray) ToGetFunctionLoggingConfigArrayOutput() GetFunctionLoggingConfigArrayOutput {
	return i.ToGetFunctionLoggingConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionLoggingConfigArray) ToGetFunctionLoggingConfigArrayOutputWithContext(ctx context.Context) GetFunctionLoggingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionLoggingConfigArrayOutput)
}

type GetFunctionLoggingConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionLoggingConfig)(nil)).Elem()
}

func (o GetFunctionLoggingConfigOutput) ToGetFunctionLoggingConfigOutput() GetFunctionLoggingConfigOutput {
	return o
}

func (o GetFunctionLoggingConfigOutput) ToGetFunctionLoggingConfigOutputWithContext(ctx context.Context) GetFunctionLoggingConfigOutput {
	return o
}

// Detail level of the logs your application sends to CloudWatch when using supported logging libraries.
func (o GetFunctionLoggingConfigOutput) ApplicationLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionLoggingConfig) string { return v.ApplicationLogLevel }).(pulumi.StringOutput)
}

// Format for your function's logs. Valid values: `Text`, `JSON`.
func (o GetFunctionLoggingConfigOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionLoggingConfig) string { return v.LogFormat }).(pulumi.StringOutput)
}

// CloudWatch log group your function sends logs to.
func (o GetFunctionLoggingConfigOutput) LogGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionLoggingConfig) string { return v.LogGroup }).(pulumi.StringOutput)
}

// Detail level of the Lambda platform event logs sent to CloudWatch.
func (o GetFunctionLoggingConfigOutput) SystemLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionLoggingConfig) string { return v.SystemLogLevel }).(pulumi.StringOutput)
}

type GetFunctionLoggingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionLoggingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionLoggingConfig)(nil)).Elem()
}

func (o GetFunctionLoggingConfigArrayOutput) ToGetFunctionLoggingConfigArrayOutput() GetFunctionLoggingConfigArrayOutput {
	return o
}

func (o GetFunctionLoggingConfigArrayOutput) ToGetFunctionLoggingConfigArrayOutputWithContext(ctx context.Context) GetFunctionLoggingConfigArrayOutput {
	return o
}

func (o GetFunctionLoggingConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionLoggingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionLoggingConfig {
		return vs[0].([]GetFunctionLoggingConfig)[vs[1].(int)]
	}).(GetFunctionLoggingConfigOutput)
}

type GetFunctionTracingConfig struct {
	// Tracing mode. Valid values: `Active`, `PassThrough`.
	Mode string `pulumi:"mode"`
}

// GetFunctionTracingConfigInput is an input type that accepts GetFunctionTracingConfigArgs and GetFunctionTracingConfigOutput values.
// You can construct a concrete instance of `GetFunctionTracingConfigInput` via:
//
//	GetFunctionTracingConfigArgs{...}
type GetFunctionTracingConfigInput interface {
	pulumi.Input

	ToGetFunctionTracingConfigOutput() GetFunctionTracingConfigOutput
	ToGetFunctionTracingConfigOutputWithContext(context.Context) GetFunctionTracingConfigOutput
}

type GetFunctionTracingConfigArgs struct {
	// Tracing mode. Valid values: `Active`, `PassThrough`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetFunctionTracingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTracingConfig)(nil)).Elem()
}

func (i GetFunctionTracingConfigArgs) ToGetFunctionTracingConfigOutput() GetFunctionTracingConfigOutput {
	return i.ToGetFunctionTracingConfigOutputWithContext(context.Background())
}

func (i GetFunctionTracingConfigArgs) ToGetFunctionTracingConfigOutputWithContext(ctx context.Context) GetFunctionTracingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionTracingConfigOutput)
}

type GetFunctionTracingConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionTracingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionTracingConfig)(nil)).Elem()
}

func (o GetFunctionTracingConfigOutput) ToGetFunctionTracingConfigOutput() GetFunctionTracingConfigOutput {
	return o
}

func (o GetFunctionTracingConfigOutput) ToGetFunctionTracingConfigOutputWithContext(ctx context.Context) GetFunctionTracingConfigOutput {
	return o
}

// Tracing mode. Valid values: `Active`, `PassThrough`.
func (o GetFunctionTracingConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionTracingConfig) string { return v.Mode }).(pulumi.StringOutput)
}

type GetFunctionUrlCor struct {
	// Whether credentials are included in the CORS request.
	AllowCredentials bool `pulumi:"allowCredentials"`
	// List of headers that are specified in the Access-Control-Request-Headers header.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// List of HTTP methods that are allowed when calling the function URL.
	AllowMethods []string `pulumi:"allowMethods"`
	// List of origins that are allowed to make requests to the function URL.
	AllowOrigins []string `pulumi:"allowOrigins"`
	// List of headers in the response that you want to expose to the origin that called the function URL.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Maximum amount of time, in seconds, that web browsers can cache results of a preflight request.
	MaxAge int `pulumi:"maxAge"`
}

// GetFunctionUrlCorInput is an input type that accepts GetFunctionUrlCorArgs and GetFunctionUrlCorOutput values.
// You can construct a concrete instance of `GetFunctionUrlCorInput` via:
//
//	GetFunctionUrlCorArgs{...}
type GetFunctionUrlCorInput interface {
	pulumi.Input

	ToGetFunctionUrlCorOutput() GetFunctionUrlCorOutput
	ToGetFunctionUrlCorOutputWithContext(context.Context) GetFunctionUrlCorOutput
}

type GetFunctionUrlCorArgs struct {
	// Whether credentials are included in the CORS request.
	AllowCredentials pulumi.BoolInput `pulumi:"allowCredentials"`
	// List of headers that are specified in the Access-Control-Request-Headers header.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// List of HTTP methods that are allowed when calling the function URL.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	// List of origins that are allowed to make requests to the function URL.
	AllowOrigins pulumi.StringArrayInput `pulumi:"allowOrigins"`
	// List of headers in the response that you want to expose to the origin that called the function URL.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Maximum amount of time, in seconds, that web browsers can cache results of a preflight request.
	MaxAge pulumi.IntInput `pulumi:"maxAge"`
}

func (GetFunctionUrlCorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionUrlCor)(nil)).Elem()
}

func (i GetFunctionUrlCorArgs) ToGetFunctionUrlCorOutput() GetFunctionUrlCorOutput {
	return i.ToGetFunctionUrlCorOutputWithContext(context.Background())
}

func (i GetFunctionUrlCorArgs) ToGetFunctionUrlCorOutputWithContext(ctx context.Context) GetFunctionUrlCorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionUrlCorOutput)
}

// GetFunctionUrlCorArrayInput is an input type that accepts GetFunctionUrlCorArray and GetFunctionUrlCorArrayOutput values.
// You can construct a concrete instance of `GetFunctionUrlCorArrayInput` via:
//
//	GetFunctionUrlCorArray{ GetFunctionUrlCorArgs{...} }
type GetFunctionUrlCorArrayInput interface {
	pulumi.Input

	ToGetFunctionUrlCorArrayOutput() GetFunctionUrlCorArrayOutput
	ToGetFunctionUrlCorArrayOutputWithContext(context.Context) GetFunctionUrlCorArrayOutput
}

type GetFunctionUrlCorArray []GetFunctionUrlCorInput

func (GetFunctionUrlCorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionUrlCor)(nil)).Elem()
}

func (i GetFunctionUrlCorArray) ToGetFunctionUrlCorArrayOutput() GetFunctionUrlCorArrayOutput {
	return i.ToGetFunctionUrlCorArrayOutputWithContext(context.Background())
}

func (i GetFunctionUrlCorArray) ToGetFunctionUrlCorArrayOutputWithContext(ctx context.Context) GetFunctionUrlCorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionUrlCorArrayOutput)
}

type GetFunctionUrlCorOutput struct{ *pulumi.OutputState }

func (GetFunctionUrlCorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionUrlCor)(nil)).Elem()
}

func (o GetFunctionUrlCorOutput) ToGetFunctionUrlCorOutput() GetFunctionUrlCorOutput {
	return o
}

func (o GetFunctionUrlCorOutput) ToGetFunctionUrlCorOutputWithContext(ctx context.Context) GetFunctionUrlCorOutput {
	return o
}

// Whether credentials are included in the CORS request.
func (o GetFunctionUrlCorOutput) AllowCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) bool { return v.AllowCredentials }).(pulumi.BoolOutput)
}

// List of headers that are specified in the Access-Control-Request-Headers header.
func (o GetFunctionUrlCorOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// List of HTTP methods that are allowed when calling the function URL.
func (o GetFunctionUrlCorOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

// List of origins that are allowed to make requests to the function URL.
func (o GetFunctionUrlCorOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.AllowOrigins }).(pulumi.StringArrayOutput)
}

// List of headers in the response that you want to expose to the origin that called the function URL.
func (o GetFunctionUrlCorOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Maximum amount of time, in seconds, that web browsers can cache results of a preflight request.
func (o GetFunctionUrlCorOutput) MaxAge() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionUrlCor) int { return v.MaxAge }).(pulumi.IntOutput)
}

type GetFunctionUrlCorArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionUrlCorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionUrlCor)(nil)).Elem()
}

func (o GetFunctionUrlCorArrayOutput) ToGetFunctionUrlCorArrayOutput() GetFunctionUrlCorArrayOutput {
	return o
}

func (o GetFunctionUrlCorArrayOutput) ToGetFunctionUrlCorArrayOutputWithContext(ctx context.Context) GetFunctionUrlCorArrayOutput {
	return o
}

func (o GetFunctionUrlCorArrayOutput) Index(i pulumi.IntInput) GetFunctionUrlCorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionUrlCor {
		return vs[0].([]GetFunctionUrlCor)[vs[1].(int)]
	}).(GetFunctionUrlCorOutput)
}

type GetFunctionVpcConfig struct {
	Ipv6AllowedForDualStack bool `pulumi:"ipv6AllowedForDualStack"`
	// List of security group IDs associated with the Lambda function.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of subnet IDs associated with the Lambda function.
	SubnetIds []string `pulumi:"subnetIds"`
	// ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetFunctionVpcConfigInput is an input type that accepts GetFunctionVpcConfigArgs and GetFunctionVpcConfigOutput values.
// You can construct a concrete instance of `GetFunctionVpcConfigInput` via:
//
//	GetFunctionVpcConfigArgs{...}
type GetFunctionVpcConfigInput interface {
	pulumi.Input

	ToGetFunctionVpcConfigOutput() GetFunctionVpcConfigOutput
	ToGetFunctionVpcConfigOutputWithContext(context.Context) GetFunctionVpcConfigOutput
}

type GetFunctionVpcConfigArgs struct {
	Ipv6AllowedForDualStack pulumi.BoolInput `pulumi:"ipv6AllowedForDualStack"`
	// List of security group IDs associated with the Lambda function.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of subnet IDs associated with the Lambda function.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetFunctionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionVpcConfig)(nil)).Elem()
}

func (i GetFunctionVpcConfigArgs) ToGetFunctionVpcConfigOutput() GetFunctionVpcConfigOutput {
	return i.ToGetFunctionVpcConfigOutputWithContext(context.Background())
}

func (i GetFunctionVpcConfigArgs) ToGetFunctionVpcConfigOutputWithContext(ctx context.Context) GetFunctionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionVpcConfigOutput)
}

type GetFunctionVpcConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionVpcConfig)(nil)).Elem()
}

func (o GetFunctionVpcConfigOutput) ToGetFunctionVpcConfigOutput() GetFunctionVpcConfigOutput {
	return o
}

func (o GetFunctionVpcConfigOutput) ToGetFunctionVpcConfigOutputWithContext(ctx context.Context) GetFunctionVpcConfigOutput {
	return o
}

func (o GetFunctionVpcConfigOutput) Ipv6AllowedForDualStack() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionVpcConfig) bool { return v.Ipv6AllowedForDualStack }).(pulumi.BoolOutput)
}

// List of security group IDs associated with the Lambda function.
func (o GetFunctionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of subnet IDs associated with the Lambda function.
func (o GetFunctionVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// ID of the VPC.
func (o GetFunctionVpcConfigOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionVpcConfig) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingConfigInput)(nil)).Elem(), AliasRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingConfigPtrInput)(nil)).Elem(), AliasRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigAllowedPublishersInput)(nil)).Elem(), CodeSigningConfigAllowedPublishersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigAllowedPublishersPtrInput)(nil)).Elem(), CodeSigningConfigAllowedPublishersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigPoliciesInput)(nil)).Elem(), CodeSigningConfigPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeSigningConfigPoliciesPtrInput)(nil)).Elem(), CodeSigningConfigPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput)(nil)).Elem(), EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigInput)(nil)).Elem(), EventSourceMappingDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigPtrInput)(nil)).Elem(), EventSourceMappingDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailureInput)(nil)).Elem(), EventSourceMappingDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDestinationConfigOnFailurePtrInput)(nil)).Elem(), EventSourceMappingDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDocumentDbEventSourceConfigInput)(nil)).Elem(), EventSourceMappingDocumentDbEventSourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingDocumentDbEventSourceConfigPtrInput)(nil)).Elem(), EventSourceMappingDocumentDbEventSourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaInput)(nil)).Elem(), EventSourceMappingFilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaPtrInput)(nil)).Elem(), EventSourceMappingFilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaFilterInput)(nil)).Elem(), EventSourceMappingFilterCriteriaFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingFilterCriteriaFilterArrayInput)(nil)).Elem(), EventSourceMappingFilterCriteriaFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingMetricsConfigInput)(nil)).Elem(), EventSourceMappingMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingMetricsConfigPtrInput)(nil)).Elem(), EventSourceMappingMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingProvisionedPollerConfigInput)(nil)).Elem(), EventSourceMappingProvisionedPollerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingProvisionedPollerConfigPtrInput)(nil)).Elem(), EventSourceMappingProvisionedPollerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingScalingConfigInput)(nil)).Elem(), EventSourceMappingScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingScalingConfigPtrInput)(nil)).Elem(), EventSourceMappingScalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedEventSourceInput)(nil)).Elem(), EventSourceMappingSelfManagedEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedEventSourcePtrInput)(nil)).Elem(), EventSourceMappingSelfManagedEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigPtrInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayInput)(nil)).Elem(), EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSourceAccessConfigurationInput)(nil)).Elem(), EventSourceMappingSourceAccessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourceMappingSourceAccessConfigurationArrayInput)(nil)).Elem(), EventSourceMappingSourceAccessConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionDeadLetterConfigInput)(nil)).Elem(), FunctionDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionDeadLetterConfigPtrInput)(nil)).Elem(), FunctionDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEnvironmentInput)(nil)).Elem(), FunctionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEnvironmentPtrInput)(nil)).Elem(), FunctionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEphemeralStorageInput)(nil)).Elem(), FunctionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEphemeralStoragePtrInput)(nil)).Elem(), FunctionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigPtrInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailureInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnFailurePtrInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnFailureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccessInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigDestinationConfigOnSuccessPtrInput)(nil)).Elem(), FunctionEventInvokeConfigDestinationConfigOnSuccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFileSystemConfigInput)(nil)).Elem(), FunctionFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFileSystemConfigPtrInput)(nil)).Elem(), FunctionFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionImageConfigInput)(nil)).Elem(), FunctionImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionImageConfigPtrInput)(nil)).Elem(), FunctionImageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionLoggingConfigInput)(nil)).Elem(), FunctionLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionLoggingConfigPtrInput)(nil)).Elem(), FunctionLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSnapStartInput)(nil)).Elem(), FunctionSnapStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSnapStartPtrInput)(nil)).Elem(), FunctionSnapStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTracingConfigInput)(nil)).Elem(), FunctionTracingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTracingConfigPtrInput)(nil)).Elem(), FunctionTracingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionUrlCorsInput)(nil)).Elem(), FunctionUrlCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionUrlCorsPtrInput)(nil)).Elem(), FunctionUrlCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVpcConfigInput)(nil)).Elem(), FunctionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVpcConfigPtrInput)(nil)).Elem(), FunctionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigAllowedPublisherInput)(nil)).Elem(), GetCodeSigningConfigAllowedPublisherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigAllowedPublisherArrayInput)(nil)).Elem(), GetCodeSigningConfigAllowedPublisherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigPolicyInput)(nil)).Elem(), GetCodeSigningConfigPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCodeSigningConfigPolicyArrayInput)(nil)).Elem(), GetCodeSigningConfigPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionDeadLetterConfigInput)(nil)).Elem(), GetFunctionDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEnvironmentInput)(nil)).Elem(), GetFunctionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEphemeralStorageInput)(nil)).Elem(), GetFunctionEphemeralStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionEphemeralStorageArrayInput)(nil)).Elem(), GetFunctionEphemeralStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionFileSystemConfigInput)(nil)).Elem(), GetFunctionFileSystemConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionFileSystemConfigArrayInput)(nil)).Elem(), GetFunctionFileSystemConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionLoggingConfigInput)(nil)).Elem(), GetFunctionLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionLoggingConfigArrayInput)(nil)).Elem(), GetFunctionLoggingConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionTracingConfigInput)(nil)).Elem(), GetFunctionTracingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionUrlCorInput)(nil)).Elem(), GetFunctionUrlCorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionUrlCorArrayInput)(nil)).Elem(), GetFunctionUrlCorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionVpcConfigInput)(nil)).Elem(), GetFunctionVpcConfigArgs{})
	pulumi.RegisterOutputType(AliasRoutingConfigOutput{})
	pulumi.RegisterOutputType(AliasRoutingConfigPtrOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigAllowedPublishersOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigAllowedPublishersPtrOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigPoliciesOutput{})
	pulumi.RegisterOutputType(CodeSigningConfigPoliciesPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigOnFailureOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDestinationConfigOnFailurePtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDocumentDbEventSourceConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingDocumentDbEventSourceConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaFilterOutput{})
	pulumi.RegisterOutputType(EventSourceMappingFilterCriteriaFilterArrayOutput{})
	pulumi.RegisterOutputType(EventSourceMappingMetricsConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingMetricsConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingProvisionedPollerConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingProvisionedPollerConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingScalingConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingScalingConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedEventSourceOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedEventSourcePtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigPtrOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfigArrayOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSelfManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfigArrayOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSourceAccessConfigurationOutput{})
	pulumi.RegisterOutputType(EventSourceMappingSourceAccessConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FunctionDeadLetterConfigOutput{})
	pulumi.RegisterOutputType(FunctionDeadLetterConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionEnvironmentOutput{})
	pulumi.RegisterOutputType(FunctionEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(FunctionEphemeralStorageOutput{})
	pulumi.RegisterOutputType(FunctionEphemeralStoragePtrOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnFailureOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnFailurePtrOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnSuccessOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigDestinationConfigOnSuccessPtrOutput{})
	pulumi.RegisterOutputType(FunctionFileSystemConfigOutput{})
	pulumi.RegisterOutputType(FunctionFileSystemConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionImageConfigOutput{})
	pulumi.RegisterOutputType(FunctionImageConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionLoggingConfigOutput{})
	pulumi.RegisterOutputType(FunctionLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionSnapStartOutput{})
	pulumi.RegisterOutputType(FunctionSnapStartPtrOutput{})
	pulumi.RegisterOutputType(FunctionTracingConfigOutput{})
	pulumi.RegisterOutputType(FunctionTracingConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionUrlCorsOutput{})
	pulumi.RegisterOutputType(FunctionUrlCorsPtrOutput{})
	pulumi.RegisterOutputType(FunctionVpcConfigOutput{})
	pulumi.RegisterOutputType(FunctionVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigAllowedPublisherOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigAllowedPublisherArrayOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigPolicyOutput{})
	pulumi.RegisterOutputType(GetCodeSigningConfigPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionDeadLetterConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionEnvironmentOutput{})
	pulumi.RegisterOutputType(GetFunctionEphemeralStorageOutput{})
	pulumi.RegisterOutputType(GetFunctionEphemeralStorageArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionFileSystemConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionFileSystemConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionLoggingConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionLoggingConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionTracingConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionUrlCorOutput{})
	pulumi.RegisterOutputType(GetFunctionUrlCorArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionVpcConfigOutput{})
}
