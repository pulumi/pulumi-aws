// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Invokes an AWS Lambda Function and returns its results. Use this data source to execute Lambda functions during Pulumi operations and use their results in other resources or outputs.
//
// The Lambda function is invoked with [RequestResponse](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax) invocation type.
//
// > **Note:** The `lambda.Invocation` data source invokes the function during the first `apply` and every subsequent `plan` when the function is known.
//
// > **Note:** If you get a `KMSAccessDeniedException: Lambda was unable to decrypt the environment variables because KMS access was denied` error when invoking a Lambda function with environment variables, the IAM role associated with the function may have been deleted and recreated after the function was created. You can fix the problem two ways: 1) updating the function's role to another role and then updating it back again to the recreated role. (When you create a function, Lambda grants permissions on the KMS key to the function's IAM role. If the IAM role is recreated, the grant is no longer valid. Changing the function's role or recreating the function causes Lambda to update the grant.)
//
// ## Example Usage
//
// ### Basic Invocation
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/lambda"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"operation": "getStatus",
//				"id":        "123456",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			example, err := lambda.LookupInvocation(ctx, &lambda.LookupInvocationArgs{
//				FunctionName: exampleAwsLambdaFunction.FunctionName,
//				Input:        json0,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("result", pulumi.Any(std.Jsondecode(ctx, &std.JsondecodeArgs{
//				Input: example.Result,
//			}, nil).Result))
//			return nil
//		})
//	}
//
// ```
//
// ### Dynamic Resource Configuration
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/elasticache"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/lambda"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"environment": environment,
//				"region":      current.Region,
//				"service":     "api",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			// Get resource configuration from Lambda
//			resourceConfig, err := lambda.LookupInvocation(ctx, &lambda.LookupInvocationArgs{
//				FunctionName: "resource-config-generator",
//				Qualifier:    pulumi.StringRef("production"),
//				Input:        json0,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			config := std.Jsondecode(ctx, &std.JsondecodeArgs{
//				Input: resourceConfig.Result,
//			}, nil).Result
//			// Use dynamic configuration
//			_, err = elasticache.NewCluster(ctx, "example", &elasticache.ClusterArgs{
//				ClusterId:          pulumi.Any(config.Cache.ClusterId),
//				Engine:             pulumi.Any(config.Cache.Engine),
//				NodeType:           pulumi.Any(config.Cache.NodeType),
//				NumCacheNodes:      pulumi.Any(config.Cache.Nodes),
//				ParameterGroupName: pulumi.Any(config.Cache.ParameterGroup),
//				Tags:               pulumi.Any(config.Tags),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInvocation(ctx *pulumi.Context, args *LookupInvocationArgs, opts ...pulumi.InvokeOption) (*LookupInvocationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInvocationResult
	err := ctx.Invoke("aws:lambda/getInvocation:getInvocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInvocation.
type LookupInvocationArgs struct {
	// Name of the Lambda function.
	FunctionName string `pulumi:"functionName"`
	// String in JSON format that is passed as payload to the Lambda function.
	//
	// The following arguments are optional:
	Input string `pulumi:"input"`
	// Qualifier (a.k.a version) of the Lambda function. Defaults to `$LATEST`.
	Qualifier *string `pulumi:"qualifier"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getInvocation.
type LookupInvocationResult struct {
	FunctionName string `pulumi:"functionName"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	Input     string  `pulumi:"input"`
	Qualifier *string `pulumi:"qualifier"`
	Region    string  `pulumi:"region"`
	// String result of the Lambda function invocation.
	Result string `pulumi:"result"`
}

func LookupInvocationOutput(ctx *pulumi.Context, args LookupInvocationOutputArgs, opts ...pulumi.InvokeOption) LookupInvocationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInvocationResultOutput, error) {
			args := v.(LookupInvocationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:lambda/getInvocation:getInvocation", args, LookupInvocationResultOutput{}, options).(LookupInvocationResultOutput), nil
		}).(LookupInvocationResultOutput)
}

// A collection of arguments for invoking getInvocation.
type LookupInvocationOutputArgs struct {
	// Name of the Lambda function.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// String in JSON format that is passed as payload to the Lambda function.
	//
	// The following arguments are optional:
	Input pulumi.StringInput `pulumi:"input"`
	// Qualifier (a.k.a version) of the Lambda function. Defaults to `$LATEST`.
	Qualifier pulumi.StringPtrInput `pulumi:"qualifier"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupInvocationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvocationArgs)(nil)).Elem()
}

// A collection of values returned by getInvocation.
type LookupInvocationResultOutput struct{ *pulumi.OutputState }

func (LookupInvocationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvocationResult)(nil)).Elem()
}

func (o LookupInvocationResultOutput) ToLookupInvocationResultOutput() LookupInvocationResultOutput {
	return o
}

func (o LookupInvocationResultOutput) ToLookupInvocationResultOutputWithContext(ctx context.Context) LookupInvocationResultOutput {
	return o
}

func (o LookupInvocationResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInvocationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInvocationResultOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.Input }).(pulumi.StringOutput)
}

func (o LookupInvocationResultOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvocationResult) *string { return v.Qualifier }).(pulumi.StringPtrOutput)
}

func (o LookupInvocationResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.Region }).(pulumi.StringOutput)
}

// String result of the Lambda function invocation.
func (o LookupInvocationResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.Result }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInvocationResultOutput{})
}
