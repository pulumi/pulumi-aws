// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to invoke custom lambda functions as data source.
// The lambda function is invoked with [RequestResponse](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax)
// invocation type.
//
// > **NOTE:** If you get a `KMSAccessDeniedException: Lambda was unable to decrypt the environment variables because KMS access was denied` error when invoking an `lambda.Function` with environment variables, the IAM role associated with the function may have been deleted and recreated _after_ the function was created. You can fix the problem two ways: 1) updating the function's role to another role and then updating it back again to the recreated role, or 2) by using Pulumi to `taint` the function and `apply` your configuration again to recreate the function. (When you create a function, Lambda grants permissions on the KMS key to the function's IAM role. If the IAM role is recreated, the grant is no longer valid. Changing the function's role or recreating the function causes Lambda to update the grant.)
func LookupInvocation(ctx *pulumi.Context, args *LookupInvocationArgs, opts ...pulumi.InvokeOption) (*LookupInvocationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInvocationResult
	err := ctx.Invoke("aws:lambda/getInvocation:getInvocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInvocation.
type LookupInvocationArgs struct {
	// Name of the lambda function.
	FunctionName string `pulumi:"functionName"`
	// String in JSON format that is passed as payload to the lambda function.
	Input string `pulumi:"input"`
	// Qualifier (a.k.a version) of the lambda function. Defaults
	// to `$LATEST`.
	Qualifier *string `pulumi:"qualifier"`
}

// A collection of values returned by getInvocation.
type LookupInvocationResult struct {
	FunctionName string `pulumi:"functionName"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	Input     string  `pulumi:"input"`
	Qualifier *string `pulumi:"qualifier"`
	// String result of the lambda function invocation.
	Result string `pulumi:"result"`
}

func LookupInvocationOutput(ctx *pulumi.Context, args LookupInvocationOutputArgs, opts ...pulumi.InvokeOption) LookupInvocationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInvocationResult, error) {
			args := v.(LookupInvocationArgs)
			r, err := LookupInvocation(ctx, &args, opts...)
			var s LookupInvocationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInvocationResultOutput)
}

// A collection of arguments for invoking getInvocation.
type LookupInvocationOutputArgs struct {
	// Name of the lambda function.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// String in JSON format that is passed as payload to the lambda function.
	Input pulumi.StringInput `pulumi:"input"`
	// Qualifier (a.k.a version) of the lambda function. Defaults
	// to `$LATEST`.
	Qualifier pulumi.StringPtrInput `pulumi:"qualifier"`
}

func (LookupInvocationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvocationArgs)(nil)).Elem()
}

// A collection of values returned by getInvocation.
type LookupInvocationResultOutput struct{ *pulumi.OutputState }

func (LookupInvocationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvocationResult)(nil)).Elem()
}

func (o LookupInvocationResultOutput) ToLookupInvocationResultOutput() LookupInvocationResultOutput {
	return o
}

func (o LookupInvocationResultOutput) ToLookupInvocationResultOutputWithContext(ctx context.Context) LookupInvocationResultOutput {
	return o
}

func (o LookupInvocationResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInvocationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInvocationResultOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.Input }).(pulumi.StringOutput)
}

func (o LookupInvocationResultOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvocationResult) *string { return v.Qualifier }).(pulumi.StringPtrOutput)
}

// String result of the lambda function invocation.
func (o LookupInvocationResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInvocationResult) string { return v.Result }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInvocationResultOutput{})
}
