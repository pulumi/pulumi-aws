// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupLayerVersion(ctx *pulumi.Context, args *LookupLayerVersionArgs, opts ...pulumi.InvokeOption) (*LookupLayerVersionResult, error) {
	var rv LookupLayerVersionResult
	err := ctx.Invoke("aws:lambda/getLayerVersion:getLayerVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLayerVersion.
type LookupLayerVersionArgs struct {
	CompatibleArchitecture *string `pulumi:"compatibleArchitecture"`
	CompatibleRuntime      *string `pulumi:"compatibleRuntime"`
	LayerName              string  `pulumi:"layerName"`
	Version                *int    `pulumi:"version"`
}

// A collection of values returned by getLayerVersion.
type LookupLayerVersionResult struct {
	Arn                     string   `pulumi:"arn"`
	CompatibleArchitecture  *string  `pulumi:"compatibleArchitecture"`
	CompatibleArchitectures []string `pulumi:"compatibleArchitectures"`
	CompatibleRuntime       *string  `pulumi:"compatibleRuntime"`
	CompatibleRuntimes      []string `pulumi:"compatibleRuntimes"`
	CreatedDate             string   `pulumi:"createdDate"`
	Description             string   `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string `pulumi:"id"`
	LayerArn                 string `pulumi:"layerArn"`
	LayerName                string `pulumi:"layerName"`
	LicenseInfo              string `pulumi:"licenseInfo"`
	SigningJobArn            string `pulumi:"signingJobArn"`
	SigningProfileVersionArn string `pulumi:"signingProfileVersionArn"`
	SourceCodeHash           string `pulumi:"sourceCodeHash"`
	SourceCodeSize           int    `pulumi:"sourceCodeSize"`
	Version                  int    `pulumi:"version"`
}

func LookupLayerVersionOutput(ctx *pulumi.Context, args LookupLayerVersionOutputArgs, opts ...pulumi.InvokeOption) LookupLayerVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLayerVersionResult, error) {
			args := v.(LookupLayerVersionArgs)
			r, err := LookupLayerVersion(ctx, &args, opts...)
			var s LookupLayerVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLayerVersionResultOutput)
}

// A collection of arguments for invoking getLayerVersion.
type LookupLayerVersionOutputArgs struct {
	CompatibleArchitecture pulumi.StringPtrInput `pulumi:"compatibleArchitecture"`
	CompatibleRuntime      pulumi.StringPtrInput `pulumi:"compatibleRuntime"`
	LayerName              pulumi.StringInput    `pulumi:"layerName"`
	Version                pulumi.IntPtrInput    `pulumi:"version"`
}

func (LookupLayerVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLayerVersionArgs)(nil)).Elem()
}

// A collection of values returned by getLayerVersion.
type LookupLayerVersionResultOutput struct{ *pulumi.OutputState }

func (LookupLayerVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLayerVersionResult)(nil)).Elem()
}

func (o LookupLayerVersionResultOutput) ToLookupLayerVersionResultOutput() LookupLayerVersionResultOutput {
	return o
}

func (o LookupLayerVersionResultOutput) ToLookupLayerVersionResultOutputWithContext(ctx context.Context) LookupLayerVersionResultOutput {
	return o
}

func (o LookupLayerVersionResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) CompatibleArchitecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) *string { return v.CompatibleArchitecture }).(pulumi.StringPtrOutput)
}

func (o LookupLayerVersionResultOutput) CompatibleArchitectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) []string { return v.CompatibleArchitectures }).(pulumi.StringArrayOutput)
}

func (o LookupLayerVersionResultOutput) CompatibleRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) *string { return v.CompatibleRuntime }).(pulumi.StringPtrOutput)
}

func (o LookupLayerVersionResultOutput) CompatibleRuntimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) []string { return v.CompatibleRuntimes }).(pulumi.StringArrayOutput)
}

func (o LookupLayerVersionResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLayerVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) LayerArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.LayerArn }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) LayerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.LayerName }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) LicenseInfo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.LicenseInfo }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) SigningJobArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.SigningJobArn }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) SigningProfileVersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.SigningProfileVersionArn }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) SourceCodeHash() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) string { return v.SourceCodeHash }).(pulumi.StringOutput)
}

func (o LookupLayerVersionResultOutput) SourceCodeSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) int { return v.SourceCodeSize }).(pulumi.IntOutput)
}

func (o LookupLayerVersionResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLayerVersionResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLayerVersionResultOutput{})
}
