// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCodeSigningConfig(ctx *pulumi.Context, args *LookupCodeSigningConfigArgs, opts ...pulumi.InvokeOption) (*LookupCodeSigningConfigResult, error) {
	var rv LookupCodeSigningConfigResult
	err := ctx.Invoke("aws:lambda/getCodeSigningConfig:getCodeSigningConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCodeSigningConfig.
type LookupCodeSigningConfigArgs struct {
	Arn string `pulumi:"arn"`
}

// A collection of values returned by getCodeSigningConfig.
type LookupCodeSigningConfigResult struct {
	AllowedPublishers []GetCodeSigningConfigAllowedPublisher `pulumi:"allowedPublishers"`
	Arn               string                                 `pulumi:"arn"`
	ConfigId          string                                 `pulumi:"configId"`
	Description       string                                 `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                       `pulumi:"id"`
	LastModified string                       `pulumi:"lastModified"`
	Policies     []GetCodeSigningConfigPolicy `pulumi:"policies"`
}

func LookupCodeSigningConfigOutput(ctx *pulumi.Context, args LookupCodeSigningConfigOutputArgs, opts ...pulumi.InvokeOption) LookupCodeSigningConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCodeSigningConfigResult, error) {
			args := v.(LookupCodeSigningConfigArgs)
			r, err := LookupCodeSigningConfig(ctx, &args, opts...)
			var s LookupCodeSigningConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCodeSigningConfigResultOutput)
}

// A collection of arguments for invoking getCodeSigningConfig.
type LookupCodeSigningConfigOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupCodeSigningConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCodeSigningConfigArgs)(nil)).Elem()
}

// A collection of values returned by getCodeSigningConfig.
type LookupCodeSigningConfigResultOutput struct{ *pulumi.OutputState }

func (LookupCodeSigningConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCodeSigningConfigResult)(nil)).Elem()
}

func (o LookupCodeSigningConfigResultOutput) ToLookupCodeSigningConfigResultOutput() LookupCodeSigningConfigResultOutput {
	return o
}

func (o LookupCodeSigningConfigResultOutput) ToLookupCodeSigningConfigResultOutputWithContext(ctx context.Context) LookupCodeSigningConfigResultOutput {
	return o
}

func (o LookupCodeSigningConfigResultOutput) AllowedPublishers() GetCodeSigningConfigAllowedPublisherArrayOutput {
	return o.ApplyT(func(v LookupCodeSigningConfigResult) []GetCodeSigningConfigAllowedPublisher {
		return v.AllowedPublishers
	}).(GetCodeSigningConfigAllowedPublisherArrayOutput)
}

func (o LookupCodeSigningConfigResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCodeSigningConfigResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupCodeSigningConfigResultOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCodeSigningConfigResult) string { return v.ConfigId }).(pulumi.StringOutput)
}

func (o LookupCodeSigningConfigResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCodeSigningConfigResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCodeSigningConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCodeSigningConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCodeSigningConfigResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCodeSigningConfigResult) string { return v.LastModified }).(pulumi.StringOutput)
}

func (o LookupCodeSigningConfigResultOutput) Policies() GetCodeSigningConfigPolicyArrayOutput {
	return o.ApplyT(func(v LookupCodeSigningConfigResult) []GetCodeSigningConfigPolicy { return v.Policies }).(GetCodeSigningConfigPolicyArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCodeSigningConfigResultOutput{})
}
