// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Lambda function URL resource. A function URL is a dedicated HTTP(S) endpoint for a Lambda function.
//
// See the [AWS Lambda documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html) for more information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lambda"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lambda.NewFunctionUrl(ctx, "testLatest", &lambda.FunctionUrlArgs{
//				FunctionName:      pulumi.Any(aws_lambda_function.Test.Function_name),
//				AuthorizationType: pulumi.String("NONE"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = lambda.NewFunctionUrl(ctx, "testLive", &lambda.FunctionUrlArgs{
//				FunctionName:      pulumi.Any(aws_lambda_function.Test.Function_name),
//				Qualifier:         pulumi.String("my_alias"),
//				AuthorizationType: pulumi.String("AWS_IAM"),
//				Cors: &lambda.FunctionUrlCorsArgs{
//					AllowCredentials: pulumi.Bool(true),
//					AllowOrigins: pulumi.StringArray{
//						pulumi.String("*"),
//					},
//					AllowMethods: pulumi.StringArray{
//						pulumi.String("*"),
//					},
//					AllowHeaders: pulumi.StringArray{
//						pulumi.String("date"),
//						pulumi.String("keep-alive"),
//					},
//					ExposeHeaders: pulumi.StringArray{
//						pulumi.String("keep-alive"),
//						pulumi.String("date"),
//					},
//					MaxAge: pulumi.Int(86400),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// terraform import {
//
//	to = aws_lambda_function_url.test_lambda_url
//
//	id = "my_test_lambda_function" } Using `pulumi import`, import Lambda function URLs using the `function_name` or `function_name/qualifier`. For exampleconsole % pulumi import aws_lambda_function_url.test_lambda_url my_test_lambda_function
type FunctionUrl struct {
	pulumi.CustomResourceState

	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType pulumi.StringOutput `pulumi:"authorizationType"`
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors FunctionUrlCorsPtrOutput `pulumi:"cors"`
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn pulumi.StringOutput `pulumi:"functionArn"`
	// The name (or ARN) of the Lambda function.
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
	FunctionUrl pulumi.StringOutput `pulumi:"functionUrl"`
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode pulumi.StringPtrOutput `pulumi:"invokeMode"`
	// The alias name or `"$LATEST"`.
	Qualifier pulumi.StringPtrOutput `pulumi:"qualifier"`
	// A generated ID for the endpoint.
	UrlId pulumi.StringOutput `pulumi:"urlId"`
}

// NewFunctionUrl registers a new resource with the given unique name, arguments, and options.
func NewFunctionUrl(ctx *pulumi.Context,
	name string, args *FunctionUrlArgs, opts ...pulumi.ResourceOption) (*FunctionUrl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthorizationType == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizationType'")
	}
	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FunctionUrl
	err := ctx.RegisterResource("aws:lambda/functionUrl:FunctionUrl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionUrl gets an existing FunctionUrl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionUrl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionUrlState, opts ...pulumi.ResourceOption) (*FunctionUrl, error) {
	var resource FunctionUrl
	err := ctx.ReadResource("aws:lambda/functionUrl:FunctionUrl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionUrl resources.
type functionUrlState struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType *string `pulumi:"authorizationType"`
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors *FunctionUrlCors `pulumi:"cors"`
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn *string `pulumi:"functionArn"`
	// The name (or ARN) of the Lambda function.
	FunctionName *string `pulumi:"functionName"`
	// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
	FunctionUrl *string `pulumi:"functionUrl"`
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode *string `pulumi:"invokeMode"`
	// The alias name or `"$LATEST"`.
	Qualifier *string `pulumi:"qualifier"`
	// A generated ID for the endpoint.
	UrlId *string `pulumi:"urlId"`
}

type FunctionUrlState struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType pulumi.StringPtrInput
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors FunctionUrlCorsPtrInput
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn pulumi.StringPtrInput
	// The name (or ARN) of the Lambda function.
	FunctionName pulumi.StringPtrInput
	// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
	FunctionUrl pulumi.StringPtrInput
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode pulumi.StringPtrInput
	// The alias name or `"$LATEST"`.
	Qualifier pulumi.StringPtrInput
	// A generated ID for the endpoint.
	UrlId pulumi.StringPtrInput
}

func (FunctionUrlState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionUrlState)(nil)).Elem()
}

type functionUrlArgs struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType string `pulumi:"authorizationType"`
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors *FunctionUrlCors `pulumi:"cors"`
	// The name (or ARN) of the Lambda function.
	FunctionName string `pulumi:"functionName"`
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode *string `pulumi:"invokeMode"`
	// The alias name or `"$LATEST"`.
	Qualifier *string `pulumi:"qualifier"`
}

// The set of arguments for constructing a FunctionUrl resource.
type FunctionUrlArgs struct {
	// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
	AuthorizationType pulumi.StringInput
	// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
	Cors FunctionUrlCorsPtrInput
	// The name (or ARN) of the Lambda function.
	FunctionName pulumi.StringInput
	// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
	InvokeMode pulumi.StringPtrInput
	// The alias name or `"$LATEST"`.
	Qualifier pulumi.StringPtrInput
}

func (FunctionUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionUrlArgs)(nil)).Elem()
}

type FunctionUrlInput interface {
	pulumi.Input

	ToFunctionUrlOutput() FunctionUrlOutput
	ToFunctionUrlOutputWithContext(ctx context.Context) FunctionUrlOutput
}

func (*FunctionUrl) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionUrl)(nil)).Elem()
}

func (i *FunctionUrl) ToFunctionUrlOutput() FunctionUrlOutput {
	return i.ToFunctionUrlOutputWithContext(context.Background())
}

func (i *FunctionUrl) ToFunctionUrlOutputWithContext(ctx context.Context) FunctionUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlOutput)
}

// FunctionUrlArrayInput is an input type that accepts FunctionUrlArray and FunctionUrlArrayOutput values.
// You can construct a concrete instance of `FunctionUrlArrayInput` via:
//
//	FunctionUrlArray{ FunctionUrlArgs{...} }
type FunctionUrlArrayInput interface {
	pulumi.Input

	ToFunctionUrlArrayOutput() FunctionUrlArrayOutput
	ToFunctionUrlArrayOutputWithContext(context.Context) FunctionUrlArrayOutput
}

type FunctionUrlArray []FunctionUrlInput

func (FunctionUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionUrl)(nil)).Elem()
}

func (i FunctionUrlArray) ToFunctionUrlArrayOutput() FunctionUrlArrayOutput {
	return i.ToFunctionUrlArrayOutputWithContext(context.Background())
}

func (i FunctionUrlArray) ToFunctionUrlArrayOutputWithContext(ctx context.Context) FunctionUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlArrayOutput)
}

// FunctionUrlMapInput is an input type that accepts FunctionUrlMap and FunctionUrlMapOutput values.
// You can construct a concrete instance of `FunctionUrlMapInput` via:
//
//	FunctionUrlMap{ "key": FunctionUrlArgs{...} }
type FunctionUrlMapInput interface {
	pulumi.Input

	ToFunctionUrlMapOutput() FunctionUrlMapOutput
	ToFunctionUrlMapOutputWithContext(context.Context) FunctionUrlMapOutput
}

type FunctionUrlMap map[string]FunctionUrlInput

func (FunctionUrlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionUrl)(nil)).Elem()
}

func (i FunctionUrlMap) ToFunctionUrlMapOutput() FunctionUrlMapOutput {
	return i.ToFunctionUrlMapOutputWithContext(context.Background())
}

func (i FunctionUrlMap) ToFunctionUrlMapOutputWithContext(ctx context.Context) FunctionUrlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionUrlMapOutput)
}

type FunctionUrlOutput struct{ *pulumi.OutputState }

func (FunctionUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionUrl)(nil)).Elem()
}

func (o FunctionUrlOutput) ToFunctionUrlOutput() FunctionUrlOutput {
	return o
}

func (o FunctionUrlOutput) ToFunctionUrlOutputWithContext(ctx context.Context) FunctionUrlOutput {
	return o
}

// The type of authentication that the function URL uses. Set to `"AWS_IAM"` to restrict access to authenticated IAM users only. Set to `"NONE"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.
func (o FunctionUrlOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionUrl) pulumi.StringOutput { return v.AuthorizationType }).(pulumi.StringOutput)
}

// The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.
func (o FunctionUrlOutput) Cors() FunctionUrlCorsPtrOutput {
	return o.ApplyT(func(v *FunctionUrl) FunctionUrlCorsPtrOutput { return v.Cors }).(FunctionUrlCorsPtrOutput)
}

// The Amazon Resource Name (ARN) of the function.
func (o FunctionUrlOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionUrl) pulumi.StringOutput { return v.FunctionArn }).(pulumi.StringOutput)
}

// The name (or ARN) of the Lambda function.
func (o FunctionUrlOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionUrl) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.
func (o FunctionUrlOutput) FunctionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionUrl) pulumi.StringOutput { return v.FunctionUrl }).(pulumi.StringOutput)
}

// Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).
func (o FunctionUrlOutput) InvokeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionUrl) pulumi.StringPtrOutput { return v.InvokeMode }).(pulumi.StringPtrOutput)
}

// The alias name or `"$LATEST"`.
func (o FunctionUrlOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionUrl) pulumi.StringPtrOutput { return v.Qualifier }).(pulumi.StringPtrOutput)
}

// A generated ID for the endpoint.
func (o FunctionUrlOutput) UrlId() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionUrl) pulumi.StringOutput { return v.UrlId }).(pulumi.StringOutput)
}

type FunctionUrlArrayOutput struct{ *pulumi.OutputState }

func (FunctionUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionUrl)(nil)).Elem()
}

func (o FunctionUrlArrayOutput) ToFunctionUrlArrayOutput() FunctionUrlArrayOutput {
	return o
}

func (o FunctionUrlArrayOutput) ToFunctionUrlArrayOutputWithContext(ctx context.Context) FunctionUrlArrayOutput {
	return o
}

func (o FunctionUrlArrayOutput) Index(i pulumi.IntInput) FunctionUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FunctionUrl {
		return vs[0].([]*FunctionUrl)[vs[1].(int)]
	}).(FunctionUrlOutput)
}

type FunctionUrlMapOutput struct{ *pulumi.OutputState }

func (FunctionUrlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionUrl)(nil)).Elem()
}

func (o FunctionUrlMapOutput) ToFunctionUrlMapOutput() FunctionUrlMapOutput {
	return o
}

func (o FunctionUrlMapOutput) ToFunctionUrlMapOutputWithContext(ctx context.Context) FunctionUrlMapOutput {
	return o
}

func (o FunctionUrlMapOutput) MapIndex(k pulumi.StringInput) FunctionUrlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FunctionUrl {
		return vs[0].(map[string]*FunctionUrl)[vs[1].(string)]
	}).(FunctionUrlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionUrlInput)(nil)).Elem(), &FunctionUrl{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionUrlArrayInput)(nil)).Elem(), FunctionUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionUrlMapInput)(nil)).Elem(), FunctionUrlMap{})
	pulumi.RegisterOutputType(FunctionUrlOutput{})
	pulumi.RegisterOutputType(FunctionUrlArrayOutput{})
	pulumi.RegisterOutputType(FunctionUrlMapOutput{})
}
