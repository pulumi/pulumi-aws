// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package secretsmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SecretRotationRules struct {
	// Specifies the number of days between automatic scheduled rotations of the secret.
	AutomaticallyAfterDays int `pulumi:"automaticallyAfterDays"`
}

// SecretRotationRulesInput is an input type that accepts SecretRotationRulesArgs and SecretRotationRulesOutput values.
// You can construct a concrete instance of `SecretRotationRulesInput` via:
//
// 		 SecretRotationRulesArgs{...}
//
type SecretRotationRulesInput interface {
	pulumi.Input

	ToSecretRotationRulesOutput() SecretRotationRulesOutput
	ToSecretRotationRulesOutputWithContext(context.Context) SecretRotationRulesOutput
}

type SecretRotationRulesArgs struct {
	// Specifies the number of days between automatic scheduled rotations of the secret.
	AutomaticallyAfterDays pulumi.IntInput `pulumi:"automaticallyAfterDays"`
}

func (SecretRotationRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationRules)(nil)).Elem()
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesOutput() SecretRotationRulesOutput {
	return i.ToSecretRotationRulesOutputWithContext(context.Background())
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesOutputWithContext(ctx context.Context) SecretRotationRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationRulesOutput)
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return i.ToSecretRotationRulesPtrOutputWithContext(context.Background())
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationRulesOutput).ToSecretRotationRulesPtrOutputWithContext(ctx)
}

// SecretRotationRulesPtrInput is an input type that accepts SecretRotationRulesArgs, SecretRotationRulesPtr and SecretRotationRulesPtrOutput values.
// You can construct a concrete instance of `SecretRotationRulesPtrInput` via:
//
// 		 SecretRotationRulesArgs{...}
//
//  or:
//
// 		 nil
//
type SecretRotationRulesPtrInput interface {
	pulumi.Input

	ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput
	ToSecretRotationRulesPtrOutputWithContext(context.Context) SecretRotationRulesPtrOutput
}

type secretRotationRulesPtrType SecretRotationRulesArgs

func SecretRotationRulesPtr(v *SecretRotationRulesArgs) SecretRotationRulesPtrInput {
	return (*secretRotationRulesPtrType)(v)
}

func (*secretRotationRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationRules)(nil)).Elem()
}

func (i *secretRotationRulesPtrType) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return i.ToSecretRotationRulesPtrOutputWithContext(context.Background())
}

func (i *secretRotationRulesPtrType) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationRulesPtrOutput)
}

type SecretRotationRulesOutput struct{ *pulumi.OutputState }

func (SecretRotationRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationRules)(nil)).Elem()
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesOutput() SecretRotationRulesOutput {
	return o
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesOutputWithContext(ctx context.Context) SecretRotationRulesOutput {
	return o
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return o.ToSecretRotationRulesPtrOutputWithContext(context.Background())
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return o.ApplyT(func(v SecretRotationRules) *SecretRotationRules {
		return &v
	}).(SecretRotationRulesPtrOutput)
}

// Specifies the number of days between automatic scheduled rotations of the secret.
func (o SecretRotationRulesOutput) AutomaticallyAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v SecretRotationRules) int { return v.AutomaticallyAfterDays }).(pulumi.IntOutput)
}

type SecretRotationRulesPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationRules)(nil)).Elem()
}

func (o SecretRotationRulesPtrOutput) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return o
}

func (o SecretRotationRulesPtrOutput) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return o
}

func (o SecretRotationRulesPtrOutput) Elem() SecretRotationRulesOutput {
	return o.ApplyT(func(v *SecretRotationRules) SecretRotationRules { return *v }).(SecretRotationRulesOutput)
}

// Specifies the number of days between automatic scheduled rotations of the secret.
func (o SecretRotationRulesPtrOutput) AutomaticallyAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v SecretRotationRules) int { return v.AutomaticallyAfterDays }).(pulumi.IntOutput)
}

type GetSecretRotationRule struct {
	AutomaticallyAfterDays int `pulumi:"automaticallyAfterDays"`
}

// GetSecretRotationRuleInput is an input type that accepts GetSecretRotationRuleArgs and GetSecretRotationRuleOutput values.
// You can construct a concrete instance of `GetSecretRotationRuleInput` via:
//
// 		 GetSecretRotationRuleArgs{...}
//
type GetSecretRotationRuleInput interface {
	pulumi.Input

	ToGetSecretRotationRuleOutput() GetSecretRotationRuleOutput
	ToGetSecretRotationRuleOutputWithContext(context.Context) GetSecretRotationRuleOutput
}

type GetSecretRotationRuleArgs struct {
	AutomaticallyAfterDays pulumi.IntInput `pulumi:"automaticallyAfterDays"`
}

func (GetSecretRotationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotationRule)(nil)).Elem()
}

func (i GetSecretRotationRuleArgs) ToGetSecretRotationRuleOutput() GetSecretRotationRuleOutput {
	return i.ToGetSecretRotationRuleOutputWithContext(context.Background())
}

func (i GetSecretRotationRuleArgs) ToGetSecretRotationRuleOutputWithContext(ctx context.Context) GetSecretRotationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationRuleOutput)
}

// GetSecretRotationRuleArrayInput is an input type that accepts GetSecretRotationRuleArray and GetSecretRotationRuleArrayOutput values.
// You can construct a concrete instance of `GetSecretRotationRuleArrayInput` via:
//
// 		 GetSecretRotationRuleArray{ GetSecretRotationRuleArgs{...} }
//
type GetSecretRotationRuleArrayInput interface {
	pulumi.Input

	ToGetSecretRotationRuleArrayOutput() GetSecretRotationRuleArrayOutput
	ToGetSecretRotationRuleArrayOutputWithContext(context.Context) GetSecretRotationRuleArrayOutput
}

type GetSecretRotationRuleArray []GetSecretRotationRuleInput

func (GetSecretRotationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotationRule)(nil)).Elem()
}

func (i GetSecretRotationRuleArray) ToGetSecretRotationRuleArrayOutput() GetSecretRotationRuleArrayOutput {
	return i.ToGetSecretRotationRuleArrayOutputWithContext(context.Background())
}

func (i GetSecretRotationRuleArray) ToGetSecretRotationRuleArrayOutputWithContext(ctx context.Context) GetSecretRotationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretRotationRuleArrayOutput)
}

type GetSecretRotationRuleOutput struct{ *pulumi.OutputState }

func (GetSecretRotationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretRotationRule)(nil)).Elem()
}

func (o GetSecretRotationRuleOutput) ToGetSecretRotationRuleOutput() GetSecretRotationRuleOutput {
	return o
}

func (o GetSecretRotationRuleOutput) ToGetSecretRotationRuleOutputWithContext(ctx context.Context) GetSecretRotationRuleOutput {
	return o
}

func (o GetSecretRotationRuleOutput) AutomaticallyAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecretRotationRule) int { return v.AutomaticallyAfterDays }).(pulumi.IntOutput)
}

type GetSecretRotationRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecretRotationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretRotationRule)(nil)).Elem()
}

func (o GetSecretRotationRuleArrayOutput) ToGetSecretRotationRuleArrayOutput() GetSecretRotationRuleArrayOutput {
	return o
}

func (o GetSecretRotationRuleArrayOutput) ToGetSecretRotationRuleArrayOutputWithContext(ctx context.Context) GetSecretRotationRuleArrayOutput {
	return o
}

func (o GetSecretRotationRuleArrayOutput) Index(i pulumi.IntInput) GetSecretRotationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretRotationRule {
		return vs[0].([]GetSecretRotationRule)[vs[1].(int)]
	}).(GetSecretRotationRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(SecretRotationRulesOutput{})
	pulumi.RegisterOutputType(SecretRotationRulesPtrOutput{})
	pulumi.RegisterOutputType(GetSecretRotationRuleOutput{})
	pulumi.RegisterOutputType(GetSecretRotationRuleArrayOutput{})
}
