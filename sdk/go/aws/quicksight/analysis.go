// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing a QuickSight Analysis.
//
// ## Example Usage
// ### From Source Template
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/quicksight"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := quicksight.NewAnalysis(ctx, "example", &quicksight.AnalysisArgs{
//				AnalysisId: pulumi.String("example-id"),
//				SourceEntity: &quicksight.AnalysisSourceEntityArgs{
//					SourceTemplate: &quicksight.AnalysisSourceEntitySourceTemplateArgs{
//						Arn: pulumi.Any(aws_quicksight_template.Source.Arn),
//						DataSetReferences: quicksight.AnalysisSourceEntitySourceTemplateDataSetReferenceArray{
//							&quicksight.AnalysisSourceEntitySourceTemplateDataSetReferenceArgs{
//								DataSetArn:         pulumi.Any(aws_quicksight_data_set.Dataset.Arn),
//								DataSetPlaceholder: pulumi.String("1"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// A QuickSight Analysis can be imported using the AWS account ID and analysis ID separated by a comma (`,`) e.g.,
//
// ```sh
//
//	$ pulumi import aws:quicksight/analysis:Analysis example 123456789012,example-id
//
// ```
type Analysis struct {
	pulumi.CustomResourceState

	// Identifier for the analysis.
	AnalysisId pulumi.StringOutput `pulumi:"analysisId"`
	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// The time that the analysis was created.
	CreatedTime       pulumi.StringOutput `pulumi:"createdTime"`
	LastPublishedTime pulumi.StringOutput `pulumi:"lastPublishedTime"`
	// The time that the analysis was last updated.
	LastUpdatedTime pulumi.StringOutput `pulumi:"lastUpdatedTime"`
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name pulumi.StringOutput `pulumi:"name"`
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters AnalysisParametersOutput `pulumi:"parameters"`
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions AnalysisPermissionArrayOutput `pulumi:"permissions"`
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays pulumi.IntPtrOutput `pulumi:"recoveryWindowInDays"`
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity AnalysisSourceEntityPtrOutput `pulumi:"sourceEntity"`
	// The analysis creation status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn pulumi.StringPtrOutput `pulumi:"themeArn"`
}

// NewAnalysis registers a new resource with the given unique name, arguments, and options.
func NewAnalysis(ctx *pulumi.Context,
	name string, args *AnalysisArgs, opts ...pulumi.ResourceOption) (*Analysis, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AnalysisId == nil {
		return nil, errors.New("invalid value for required argument 'AnalysisId'")
	}
	var resource Analysis
	err := ctx.RegisterResource("aws:quicksight/analysis:Analysis", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalysis gets an existing Analysis resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalysis(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalysisState, opts ...pulumi.ResourceOption) (*Analysis, error) {
	var resource Analysis
	err := ctx.ReadResource("aws:quicksight/analysis:Analysis", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Analysis resources.
type analysisState struct {
	// Identifier for the analysis.
	AnalysisId *string `pulumi:"analysisId"`
	// The Amazon Resource Name (ARN) of the resource.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The time that the analysis was created.
	CreatedTime       *string `pulumi:"createdTime"`
	LastPublishedTime *string `pulumi:"lastPublishedTime"`
	// The time that the analysis was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters *AnalysisParameters `pulumi:"parameters"`
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions []AnalysisPermission `pulumi:"permissions"`
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *AnalysisSourceEntity `pulumi:"sourceEntity"`
	// The analysis creation status.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn *string `pulumi:"themeArn"`
}

type AnalysisState struct {
	// Identifier for the analysis.
	AnalysisId pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumi.StringPtrInput
	// AWS account ID.
	AwsAccountId pulumi.StringPtrInput
	// The time that the analysis was created.
	CreatedTime       pulumi.StringPtrInput
	LastPublishedTime pulumi.StringPtrInput
	// The time that the analysis was last updated.
	LastUpdatedTime pulumi.StringPtrInput
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters AnalysisParametersPtrInput
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions AnalysisPermissionArrayInput
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays pulumi.IntPtrInput
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity AnalysisSourceEntityPtrInput
	// The analysis creation status.
	Status pulumi.StringPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn pulumi.StringPtrInput
}

func (AnalysisState) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisState)(nil)).Elem()
}

type analysisArgs struct {
	// Identifier for the analysis.
	AnalysisId string `pulumi:"analysisId"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters *AnalysisParameters `pulumi:"parameters"`
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions []AnalysisPermission `pulumi:"permissions"`
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *AnalysisSourceEntity `pulumi:"sourceEntity"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn *string `pulumi:"themeArn"`
}

// The set of arguments for constructing a Analysis resource.
type AnalysisArgs struct {
	// Identifier for the analysis.
	AnalysisId pulumi.StringInput
	// AWS account ID.
	AwsAccountId pulumi.StringPtrInput
	// Display name for the analysis.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters AnalysisParametersPtrInput
	// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
	Permissions AnalysisPermissionArrayInput
	// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
	RecoveryWindowInDays pulumi.IntPtrInput
	// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity AnalysisSourceEntityPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
	ThemeArn pulumi.StringPtrInput
}

func (AnalysisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analysisArgs)(nil)).Elem()
}

type AnalysisInput interface {
	pulumi.Input

	ToAnalysisOutput() AnalysisOutput
	ToAnalysisOutputWithContext(ctx context.Context) AnalysisOutput
}

func (*Analysis) ElementType() reflect.Type {
	return reflect.TypeOf((**Analysis)(nil)).Elem()
}

func (i *Analysis) ToAnalysisOutput() AnalysisOutput {
	return i.ToAnalysisOutputWithContext(context.Background())
}

func (i *Analysis) ToAnalysisOutputWithContext(ctx context.Context) AnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisOutput)
}

// AnalysisArrayInput is an input type that accepts AnalysisArray and AnalysisArrayOutput values.
// You can construct a concrete instance of `AnalysisArrayInput` via:
//
//	AnalysisArray{ AnalysisArgs{...} }
type AnalysisArrayInput interface {
	pulumi.Input

	ToAnalysisArrayOutput() AnalysisArrayOutput
	ToAnalysisArrayOutputWithContext(context.Context) AnalysisArrayOutput
}

type AnalysisArray []AnalysisInput

func (AnalysisArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Analysis)(nil)).Elem()
}

func (i AnalysisArray) ToAnalysisArrayOutput() AnalysisArrayOutput {
	return i.ToAnalysisArrayOutputWithContext(context.Background())
}

func (i AnalysisArray) ToAnalysisArrayOutputWithContext(ctx context.Context) AnalysisArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisArrayOutput)
}

// AnalysisMapInput is an input type that accepts AnalysisMap and AnalysisMapOutput values.
// You can construct a concrete instance of `AnalysisMapInput` via:
//
//	AnalysisMap{ "key": AnalysisArgs{...} }
type AnalysisMapInput interface {
	pulumi.Input

	ToAnalysisMapOutput() AnalysisMapOutput
	ToAnalysisMapOutputWithContext(context.Context) AnalysisMapOutput
}

type AnalysisMap map[string]AnalysisInput

func (AnalysisMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Analysis)(nil)).Elem()
}

func (i AnalysisMap) ToAnalysisMapOutput() AnalysisMapOutput {
	return i.ToAnalysisMapOutputWithContext(context.Background())
}

func (i AnalysisMap) ToAnalysisMapOutputWithContext(ctx context.Context) AnalysisMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalysisMapOutput)
}

type AnalysisOutput struct{ *pulumi.OutputState }

func (AnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Analysis)(nil)).Elem()
}

func (o AnalysisOutput) ToAnalysisOutput() AnalysisOutput {
	return o
}

func (o AnalysisOutput) ToAnalysisOutputWithContext(ctx context.Context) AnalysisOutput {
	return o
}

// Identifier for the analysis.
func (o AnalysisOutput) AnalysisId() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.AnalysisId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the resource.
func (o AnalysisOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// AWS account ID.
func (o AnalysisOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// The time that the analysis was created.
func (o AnalysisOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o AnalysisOutput) LastPublishedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.LastPublishedTime }).(pulumi.StringOutput)
}

// The time that the analysis was last updated.
func (o AnalysisOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Display name for the analysis.
//
// The following arguments are optional:
func (o AnalysisOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parameters for the creation of the analysis, which you want to use to override the default settings. An analysis can have any type of parameters, and some parameters might accept multiple values. See parameters.
func (o AnalysisOutput) Parameters() AnalysisParametersOutput {
	return o.ApplyT(func(v *Analysis) AnalysisParametersOutput { return v.Parameters }).(AnalysisParametersOutput)
}

// A set of resource permissions on the analysis. Maximum of 64 items. See permissions.
func (o AnalysisOutput) Permissions() AnalysisPermissionArrayOutput {
	return o.ApplyT(func(v *Analysis) AnalysisPermissionArrayOutput { return v.Permissions }).(AnalysisPermissionArrayOutput)
}

// A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. Use `0` to force deletion without recovery. Minimum value of `7`. Maximum value of `30`. Default to `30`.
func (o AnalysisOutput) RecoveryWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Analysis) pulumi.IntPtrOutput { return v.RecoveryWindowInDays }).(pulumi.IntPtrOutput)
}

// The entity that you are using as a source when you create the analysis (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
func (o AnalysisOutput) SourceEntity() AnalysisSourceEntityPtrOutput {
	return o.ApplyT(func(v *Analysis) AnalysisSourceEntityPtrOutput { return v.SourceEntity }).(AnalysisSourceEntityPtrOutput)
}

// The analysis creation status.
func (o AnalysisOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AnalysisOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AnalysisOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The Amazon Resource Name (ARN) of the theme that is being used for this analysis. The theme ARN must exist in the same AWS account where you create the analysis.
func (o AnalysisOutput) ThemeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Analysis) pulumi.StringPtrOutput { return v.ThemeArn }).(pulumi.StringPtrOutput)
}

type AnalysisArrayOutput struct{ *pulumi.OutputState }

func (AnalysisArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Analysis)(nil)).Elem()
}

func (o AnalysisArrayOutput) ToAnalysisArrayOutput() AnalysisArrayOutput {
	return o
}

func (o AnalysisArrayOutput) ToAnalysisArrayOutputWithContext(ctx context.Context) AnalysisArrayOutput {
	return o
}

func (o AnalysisArrayOutput) Index(i pulumi.IntInput) AnalysisOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Analysis {
		return vs[0].([]*Analysis)[vs[1].(int)]
	}).(AnalysisOutput)
}

type AnalysisMapOutput struct{ *pulumi.OutputState }

func (AnalysisMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Analysis)(nil)).Elem()
}

func (o AnalysisMapOutput) ToAnalysisMapOutput() AnalysisMapOutput {
	return o
}

func (o AnalysisMapOutput) ToAnalysisMapOutputWithContext(ctx context.Context) AnalysisMapOutput {
	return o
}

func (o AnalysisMapOutput) MapIndex(k pulumi.StringInput) AnalysisOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Analysis {
		return vs[0].(map[string]*Analysis)[vs[1].(string)]
	}).(AnalysisOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisInput)(nil)).Elem(), &Analysis{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisArrayInput)(nil)).Elem(), AnalysisArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalysisMapInput)(nil)).Elem(), AnalysisMap{})
	pulumi.RegisterOutputType(AnalysisOutput{})
	pulumi.RegisterOutputType(AnalysisArrayOutput{})
	pulumi.RegisterOutputType(AnalysisMapOutput{})
}
