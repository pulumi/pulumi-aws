// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS QuickSight Folder Membership.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/quicksight"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := quicksight.NewFolderMembership(ctx, "example", &quicksight.FolderMembershipArgs{
//				FolderId:   pulumi.Any(aws_quicksight_folder.Example.Folder_id),
//				MemberType: pulumi.String("DATASET"),
//				MemberId:   pulumi.Any(aws_quicksight_data_set.Example.Data_set_id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import QuickSight Folder Membership using the AWS account ID, folder ID, member type, and member ID separated by commas (`,`). For example:
//
// ```sh
//
//	$ pulumi import aws:quicksight/folderMembership:FolderMembership example 123456789012,example-folder,DATASET,example-dataset
//
// ```
type FolderMembership struct {
	pulumi.CustomResourceState

	// AWS account ID.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// Identifier for the folder.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId pulumi.StringOutput `pulumi:"memberId"`
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType pulumi.StringOutput `pulumi:"memberType"`
}

// NewFolderMembership registers a new resource with the given unique name, arguments, and options.
func NewFolderMembership(ctx *pulumi.Context,
	name string, args *FolderMembershipArgs, opts ...pulumi.ResourceOption) (*FolderMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FolderId == nil {
		return nil, errors.New("invalid value for required argument 'FolderId'")
	}
	if args.MemberId == nil {
		return nil, errors.New("invalid value for required argument 'MemberId'")
	}
	if args.MemberType == nil {
		return nil, errors.New("invalid value for required argument 'MemberType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FolderMembership
	err := ctx.RegisterResource("aws:quicksight/folderMembership:FolderMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolderMembership gets an existing FolderMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolderMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderMembershipState, opts ...pulumi.ResourceOption) (*FolderMembership, error) {
	var resource FolderMembership
	err := ctx.ReadResource("aws:quicksight/folderMembership:FolderMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FolderMembership resources.
type folderMembershipState struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Identifier for the folder.
	FolderId *string `pulumi:"folderId"`
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId *string `pulumi:"memberId"`
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType *string `pulumi:"memberType"`
}

type FolderMembershipState struct {
	// AWS account ID.
	AwsAccountId pulumi.StringPtrInput
	// Identifier for the folder.
	FolderId pulumi.StringPtrInput
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId pulumi.StringPtrInput
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType pulumi.StringPtrInput
}

func (FolderMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderMembershipState)(nil)).Elem()
}

type folderMembershipArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Identifier for the folder.
	FolderId string `pulumi:"folderId"`
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId string `pulumi:"memberId"`
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType string `pulumi:"memberType"`
}

// The set of arguments for constructing a FolderMembership resource.
type FolderMembershipArgs struct {
	// AWS account ID.
	AwsAccountId pulumi.StringPtrInput
	// Identifier for the folder.
	FolderId pulumi.StringInput
	// ID of the asset (the dashboard, analysis, or dataset).
	MemberId pulumi.StringInput
	// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
	//
	// The following arguments are optional:
	MemberType pulumi.StringInput
}

func (FolderMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderMembershipArgs)(nil)).Elem()
}

type FolderMembershipInput interface {
	pulumi.Input

	ToFolderMembershipOutput() FolderMembershipOutput
	ToFolderMembershipOutputWithContext(ctx context.Context) FolderMembershipOutput
}

func (*FolderMembership) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderMembership)(nil)).Elem()
}

func (i *FolderMembership) ToFolderMembershipOutput() FolderMembershipOutput {
	return i.ToFolderMembershipOutputWithContext(context.Background())
}

func (i *FolderMembership) ToFolderMembershipOutputWithContext(ctx context.Context) FolderMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderMembershipOutput)
}

// FolderMembershipArrayInput is an input type that accepts FolderMembershipArray and FolderMembershipArrayOutput values.
// You can construct a concrete instance of `FolderMembershipArrayInput` via:
//
//	FolderMembershipArray{ FolderMembershipArgs{...} }
type FolderMembershipArrayInput interface {
	pulumi.Input

	ToFolderMembershipArrayOutput() FolderMembershipArrayOutput
	ToFolderMembershipArrayOutputWithContext(context.Context) FolderMembershipArrayOutput
}

type FolderMembershipArray []FolderMembershipInput

func (FolderMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FolderMembership)(nil)).Elem()
}

func (i FolderMembershipArray) ToFolderMembershipArrayOutput() FolderMembershipArrayOutput {
	return i.ToFolderMembershipArrayOutputWithContext(context.Background())
}

func (i FolderMembershipArray) ToFolderMembershipArrayOutputWithContext(ctx context.Context) FolderMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderMembershipArrayOutput)
}

// FolderMembershipMapInput is an input type that accepts FolderMembershipMap and FolderMembershipMapOutput values.
// You can construct a concrete instance of `FolderMembershipMapInput` via:
//
//	FolderMembershipMap{ "key": FolderMembershipArgs{...} }
type FolderMembershipMapInput interface {
	pulumi.Input

	ToFolderMembershipMapOutput() FolderMembershipMapOutput
	ToFolderMembershipMapOutputWithContext(context.Context) FolderMembershipMapOutput
}

type FolderMembershipMap map[string]FolderMembershipInput

func (FolderMembershipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FolderMembership)(nil)).Elem()
}

func (i FolderMembershipMap) ToFolderMembershipMapOutput() FolderMembershipMapOutput {
	return i.ToFolderMembershipMapOutputWithContext(context.Background())
}

func (i FolderMembershipMap) ToFolderMembershipMapOutputWithContext(ctx context.Context) FolderMembershipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderMembershipMapOutput)
}

type FolderMembershipOutput struct{ *pulumi.OutputState }

func (FolderMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderMembership)(nil)).Elem()
}

func (o FolderMembershipOutput) ToFolderMembershipOutput() FolderMembershipOutput {
	return o
}

func (o FolderMembershipOutput) ToFolderMembershipOutputWithContext(ctx context.Context) FolderMembershipOutput {
	return o
}

// AWS account ID.
func (o FolderMembershipOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderMembership) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Identifier for the folder.
func (o FolderMembershipOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderMembership) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// ID of the asset (the dashboard, analysis, or dataset).
func (o FolderMembershipOutput) MemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderMembership) pulumi.StringOutput { return v.MemberId }).(pulumi.StringOutput)
}

// Type of the member. Valid values are `ANALYSIS`, `DASHBOARD`, and `DATASET`.
//
// The following arguments are optional:
func (o FolderMembershipOutput) MemberType() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderMembership) pulumi.StringOutput { return v.MemberType }).(pulumi.StringOutput)
}

type FolderMembershipArrayOutput struct{ *pulumi.OutputState }

func (FolderMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FolderMembership)(nil)).Elem()
}

func (o FolderMembershipArrayOutput) ToFolderMembershipArrayOutput() FolderMembershipArrayOutput {
	return o
}

func (o FolderMembershipArrayOutput) ToFolderMembershipArrayOutputWithContext(ctx context.Context) FolderMembershipArrayOutput {
	return o
}

func (o FolderMembershipArrayOutput) Index(i pulumi.IntInput) FolderMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FolderMembership {
		return vs[0].([]*FolderMembership)[vs[1].(int)]
	}).(FolderMembershipOutput)
}

type FolderMembershipMapOutput struct{ *pulumi.OutputState }

func (FolderMembershipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FolderMembership)(nil)).Elem()
}

func (o FolderMembershipMapOutput) ToFolderMembershipMapOutput() FolderMembershipMapOutput {
	return o
}

func (o FolderMembershipMapOutput) ToFolderMembershipMapOutputWithContext(ctx context.Context) FolderMembershipMapOutput {
	return o
}

func (o FolderMembershipMapOutput) MapIndex(k pulumi.StringInput) FolderMembershipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FolderMembership {
		return vs[0].(map[string]*FolderMembership)[vs[1].(string)]
	}).(FolderMembershipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FolderMembershipInput)(nil)).Elem(), &FolderMembership{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderMembershipArrayInput)(nil)).Elem(), FolderMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FolderMembershipMapInput)(nil)).Elem(), FolderMembershipMap{})
	pulumi.RegisterOutputType(FolderMembershipOutput{})
	pulumi.RegisterOutputType(FolderMembershipArrayOutput{})
	pulumi.RegisterOutputType(FolderMembershipMapOutput{})
}
