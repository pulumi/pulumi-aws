// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the content and status of IP rules.
//
// > Deletion of this resource clears all IP restrictions from a QuickSight account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/quicksight"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := quicksight.NewIpRestriction(ctx, "example", &quicksight.IpRestrictionArgs{
//				Enabled: pulumi.Bool(true),
//				IpRestrictionRuleMap: pulumi.StringMap{
//					"108.56.166.202/32": pulumi.String("Allow self"),
//				},
//				VpcIdRestrictionRuleMap: pulumi.StringMap{
//					exampleAwsVpc.Id: "Main VPC",
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import QuickSight IP restriction using the AWS account ID. For example:
//
// ```sh
// $ pulumi import aws:quicksight/ipRestriction:IpRestriction example "012345678901"
// ```
type IpRestriction struct {
	pulumi.CustomResourceState

	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// Whether IP rules are turned on.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Map of allowed IPv4 CIDR ranges and descriptions.
	IpRestrictionRuleMap pulumi.StringMapOutput `pulumi:"ipRestrictionRuleMap"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Map of allowed VPC endpoint IDs and descriptions.
	VpcEndpointIdRestrictionRuleMap pulumi.StringMapOutput `pulumi:"vpcEndpointIdRestrictionRuleMap"`
	// Map of VPC IDs and descriptions. Traffic from all VPC endpoints that are present in the specified VPC is allowed.
	VpcIdRestrictionRuleMap pulumi.StringMapOutput `pulumi:"vpcIdRestrictionRuleMap"`
}

// NewIpRestriction registers a new resource with the given unique name, arguments, and options.
func NewIpRestriction(ctx *pulumi.Context,
	name string, args *IpRestrictionArgs, opts ...pulumi.ResourceOption) (*IpRestriction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpRestriction
	err := ctx.RegisterResource("aws:quicksight/ipRestriction:IpRestriction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpRestriction gets an existing IpRestriction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpRestriction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpRestrictionState, opts ...pulumi.ResourceOption) (*IpRestriction, error) {
	var resource IpRestriction
	err := ctx.ReadResource("aws:quicksight/ipRestriction:IpRestriction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpRestriction resources.
type ipRestrictionState struct {
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Whether IP rules are turned on.
	Enabled *bool `pulumi:"enabled"`
	// Map of allowed IPv4 CIDR ranges and descriptions.
	IpRestrictionRuleMap map[string]string `pulumi:"ipRestrictionRuleMap"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Map of allowed VPC endpoint IDs and descriptions.
	VpcEndpointIdRestrictionRuleMap map[string]string `pulumi:"vpcEndpointIdRestrictionRuleMap"`
	// Map of VPC IDs and descriptions. Traffic from all VPC endpoints that are present in the specified VPC is allowed.
	VpcIdRestrictionRuleMap map[string]string `pulumi:"vpcIdRestrictionRuleMap"`
}

type IpRestrictionState struct {
	AwsAccountId pulumi.StringPtrInput
	// Whether IP rules are turned on.
	Enabled pulumi.BoolPtrInput
	// Map of allowed IPv4 CIDR ranges and descriptions.
	IpRestrictionRuleMap pulumi.StringMapInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Map of allowed VPC endpoint IDs and descriptions.
	VpcEndpointIdRestrictionRuleMap pulumi.StringMapInput
	// Map of VPC IDs and descriptions. Traffic from all VPC endpoints that are present in the specified VPC is allowed.
	VpcIdRestrictionRuleMap pulumi.StringMapInput
}

func (IpRestrictionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipRestrictionState)(nil)).Elem()
}

type ipRestrictionArgs struct {
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Whether IP rules are turned on.
	Enabled bool `pulumi:"enabled"`
	// Map of allowed IPv4 CIDR ranges and descriptions.
	IpRestrictionRuleMap map[string]string `pulumi:"ipRestrictionRuleMap"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Map of allowed VPC endpoint IDs and descriptions.
	VpcEndpointIdRestrictionRuleMap map[string]string `pulumi:"vpcEndpointIdRestrictionRuleMap"`
	// Map of VPC IDs and descriptions. Traffic from all VPC endpoints that are present in the specified VPC is allowed.
	VpcIdRestrictionRuleMap map[string]string `pulumi:"vpcIdRestrictionRuleMap"`
}

// The set of arguments for constructing a IpRestriction resource.
type IpRestrictionArgs struct {
	AwsAccountId pulumi.StringPtrInput
	// Whether IP rules are turned on.
	Enabled pulumi.BoolInput
	// Map of allowed IPv4 CIDR ranges and descriptions.
	IpRestrictionRuleMap pulumi.StringMapInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Map of allowed VPC endpoint IDs and descriptions.
	VpcEndpointIdRestrictionRuleMap pulumi.StringMapInput
	// Map of VPC IDs and descriptions. Traffic from all VPC endpoints that are present in the specified VPC is allowed.
	VpcIdRestrictionRuleMap pulumi.StringMapInput
}

func (IpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipRestrictionArgs)(nil)).Elem()
}

type IpRestrictionInput interface {
	pulumi.Input

	ToIpRestrictionOutput() IpRestrictionOutput
	ToIpRestrictionOutputWithContext(ctx context.Context) IpRestrictionOutput
}

func (*IpRestriction) ElementType() reflect.Type {
	return reflect.TypeOf((**IpRestriction)(nil)).Elem()
}

func (i *IpRestriction) ToIpRestrictionOutput() IpRestrictionOutput {
	return i.ToIpRestrictionOutputWithContext(context.Background())
}

func (i *IpRestriction) ToIpRestrictionOutputWithContext(ctx context.Context) IpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpRestrictionOutput)
}

// IpRestrictionArrayInput is an input type that accepts IpRestrictionArray and IpRestrictionArrayOutput values.
// You can construct a concrete instance of `IpRestrictionArrayInput` via:
//
//	IpRestrictionArray{ IpRestrictionArgs{...} }
type IpRestrictionArrayInput interface {
	pulumi.Input

	ToIpRestrictionArrayOutput() IpRestrictionArrayOutput
	ToIpRestrictionArrayOutputWithContext(context.Context) IpRestrictionArrayOutput
}

type IpRestrictionArray []IpRestrictionInput

func (IpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpRestriction)(nil)).Elem()
}

func (i IpRestrictionArray) ToIpRestrictionArrayOutput() IpRestrictionArrayOutput {
	return i.ToIpRestrictionArrayOutputWithContext(context.Background())
}

func (i IpRestrictionArray) ToIpRestrictionArrayOutputWithContext(ctx context.Context) IpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpRestrictionArrayOutput)
}

// IpRestrictionMapInput is an input type that accepts IpRestrictionMap and IpRestrictionMapOutput values.
// You can construct a concrete instance of `IpRestrictionMapInput` via:
//
//	IpRestrictionMap{ "key": IpRestrictionArgs{...} }
type IpRestrictionMapInput interface {
	pulumi.Input

	ToIpRestrictionMapOutput() IpRestrictionMapOutput
	ToIpRestrictionMapOutputWithContext(context.Context) IpRestrictionMapOutput
}

type IpRestrictionMap map[string]IpRestrictionInput

func (IpRestrictionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpRestriction)(nil)).Elem()
}

func (i IpRestrictionMap) ToIpRestrictionMapOutput() IpRestrictionMapOutput {
	return i.ToIpRestrictionMapOutputWithContext(context.Background())
}

func (i IpRestrictionMap) ToIpRestrictionMapOutputWithContext(ctx context.Context) IpRestrictionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpRestrictionMapOutput)
}

type IpRestrictionOutput struct{ *pulumi.OutputState }

func (IpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpRestriction)(nil)).Elem()
}

func (o IpRestrictionOutput) ToIpRestrictionOutput() IpRestrictionOutput {
	return o
}

func (o IpRestrictionOutput) ToIpRestrictionOutputWithContext(ctx context.Context) IpRestrictionOutput {
	return o
}

func (o IpRestrictionOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpRestriction) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Whether IP rules are turned on.
func (o IpRestrictionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *IpRestriction) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Map of allowed IPv4 CIDR ranges and descriptions.
func (o IpRestrictionOutput) IpRestrictionRuleMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IpRestriction) pulumi.StringMapOutput { return v.IpRestrictionRuleMap }).(pulumi.StringMapOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o IpRestrictionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *IpRestriction) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Map of allowed VPC endpoint IDs and descriptions.
func (o IpRestrictionOutput) VpcEndpointIdRestrictionRuleMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IpRestriction) pulumi.StringMapOutput { return v.VpcEndpointIdRestrictionRuleMap }).(pulumi.StringMapOutput)
}

// Map of VPC IDs and descriptions. Traffic from all VPC endpoints that are present in the specified VPC is allowed.
func (o IpRestrictionOutput) VpcIdRestrictionRuleMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IpRestriction) pulumi.StringMapOutput { return v.VpcIdRestrictionRuleMap }).(pulumi.StringMapOutput)
}

type IpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (IpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpRestriction)(nil)).Elem()
}

func (o IpRestrictionArrayOutput) ToIpRestrictionArrayOutput() IpRestrictionArrayOutput {
	return o
}

func (o IpRestrictionArrayOutput) ToIpRestrictionArrayOutputWithContext(ctx context.Context) IpRestrictionArrayOutput {
	return o
}

func (o IpRestrictionArrayOutput) Index(i pulumi.IntInput) IpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpRestriction {
		return vs[0].([]*IpRestriction)[vs[1].(int)]
	}).(IpRestrictionOutput)
}

type IpRestrictionMapOutput struct{ *pulumi.OutputState }

func (IpRestrictionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpRestriction)(nil)).Elem()
}

func (o IpRestrictionMapOutput) ToIpRestrictionMapOutput() IpRestrictionMapOutput {
	return o
}

func (o IpRestrictionMapOutput) ToIpRestrictionMapOutputWithContext(ctx context.Context) IpRestrictionMapOutput {
	return o
}

func (o IpRestrictionMapOutput) MapIndex(k pulumi.StringInput) IpRestrictionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpRestriction {
		return vs[0].(map[string]*IpRestriction)[vs[1].(string)]
	}).(IpRestrictionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpRestrictionInput)(nil)).Elem(), &IpRestriction{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpRestrictionArrayInput)(nil)).Elem(), IpRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpRestrictionMapInput)(nil)).Elem(), IpRestrictionMap{})
	pulumi.RegisterOutputType(IpRestrictionOutput{})
	pulumi.RegisterOutputType(IpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(IpRestrictionMapOutput{})
}
