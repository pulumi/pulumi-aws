// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the custom permissions profile for a user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/quicksight"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := quicksight.NewUserCustomPermission(ctx, "example", &quicksight.UserCustomPermissionArgs{
//				UserName:              pulumi.Any(exampleAwsQuicksightUser.UserName),
//				CustomPermissionsName: pulumi.Any(exampleAwsQuicksightCustomPermissions.CustomPermissionsName),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import QuickSight user custom permissions using a comma-delimited string combining the `aws_account_id`, `namespace`, and `user_name`. For example:
//
// ```sh
// $ pulumi import aws:quicksight/userCustomPermission:UserCustomPermission example 012345678901,default,user1
// ```
type UserCustomPermission struct {
	pulumi.CustomResourceState

	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// Custom permissions profile name.
	CustomPermissionsName pulumi.StringOutput `pulumi:"customPermissionsName"`
	// Namespace that the user belongs to. Defaults to `default`.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Username of the user.
	//
	// The following arguments are optional:
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewUserCustomPermission registers a new resource with the given unique name, arguments, and options.
func NewUserCustomPermission(ctx *pulumi.Context,
	name string, args *UserCustomPermissionArgs, opts ...pulumi.ResourceOption) (*UserCustomPermission, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomPermissionsName == nil {
		return nil, errors.New("invalid value for required argument 'CustomPermissionsName'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserCustomPermission
	err := ctx.RegisterResource("aws:quicksight/userCustomPermission:UserCustomPermission", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserCustomPermission gets an existing UserCustomPermission resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserCustomPermission(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserCustomPermissionState, opts ...pulumi.ResourceOption) (*UserCustomPermission, error) {
	var resource UserCustomPermission
	err := ctx.ReadResource("aws:quicksight/userCustomPermission:UserCustomPermission", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserCustomPermission resources.
type userCustomPermissionState struct {
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Custom permissions profile name.
	CustomPermissionsName *string `pulumi:"customPermissionsName"`
	// Namespace that the user belongs to. Defaults to `default`.
	Namespace *string `pulumi:"namespace"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Username of the user.
	//
	// The following arguments are optional:
	UserName *string `pulumi:"userName"`
}

type UserCustomPermissionState struct {
	AwsAccountId pulumi.StringPtrInput
	// Custom permissions profile name.
	CustomPermissionsName pulumi.StringPtrInput
	// Namespace that the user belongs to. Defaults to `default`.
	Namespace pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Username of the user.
	//
	// The following arguments are optional:
	UserName pulumi.StringPtrInput
}

func (UserCustomPermissionState) ElementType() reflect.Type {
	return reflect.TypeOf((*userCustomPermissionState)(nil)).Elem()
}

type userCustomPermissionArgs struct {
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Custom permissions profile name.
	CustomPermissionsName string `pulumi:"customPermissionsName"`
	// Namespace that the user belongs to. Defaults to `default`.
	Namespace *string `pulumi:"namespace"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Username of the user.
	//
	// The following arguments are optional:
	UserName string `pulumi:"userName"`
}

// The set of arguments for constructing a UserCustomPermission resource.
type UserCustomPermissionArgs struct {
	AwsAccountId pulumi.StringPtrInput
	// Custom permissions profile name.
	CustomPermissionsName pulumi.StringInput
	// Namespace that the user belongs to. Defaults to `default`.
	Namespace pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Username of the user.
	//
	// The following arguments are optional:
	UserName pulumi.StringInput
}

func (UserCustomPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userCustomPermissionArgs)(nil)).Elem()
}

type UserCustomPermissionInput interface {
	pulumi.Input

	ToUserCustomPermissionOutput() UserCustomPermissionOutput
	ToUserCustomPermissionOutputWithContext(ctx context.Context) UserCustomPermissionOutput
}

func (*UserCustomPermission) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCustomPermission)(nil)).Elem()
}

func (i *UserCustomPermission) ToUserCustomPermissionOutput() UserCustomPermissionOutput {
	return i.ToUserCustomPermissionOutputWithContext(context.Background())
}

func (i *UserCustomPermission) ToUserCustomPermissionOutputWithContext(ctx context.Context) UserCustomPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCustomPermissionOutput)
}

// UserCustomPermissionArrayInput is an input type that accepts UserCustomPermissionArray and UserCustomPermissionArrayOutput values.
// You can construct a concrete instance of `UserCustomPermissionArrayInput` via:
//
//	UserCustomPermissionArray{ UserCustomPermissionArgs{...} }
type UserCustomPermissionArrayInput interface {
	pulumi.Input

	ToUserCustomPermissionArrayOutput() UserCustomPermissionArrayOutput
	ToUserCustomPermissionArrayOutputWithContext(context.Context) UserCustomPermissionArrayOutput
}

type UserCustomPermissionArray []UserCustomPermissionInput

func (UserCustomPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserCustomPermission)(nil)).Elem()
}

func (i UserCustomPermissionArray) ToUserCustomPermissionArrayOutput() UserCustomPermissionArrayOutput {
	return i.ToUserCustomPermissionArrayOutputWithContext(context.Background())
}

func (i UserCustomPermissionArray) ToUserCustomPermissionArrayOutputWithContext(ctx context.Context) UserCustomPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCustomPermissionArrayOutput)
}

// UserCustomPermissionMapInput is an input type that accepts UserCustomPermissionMap and UserCustomPermissionMapOutput values.
// You can construct a concrete instance of `UserCustomPermissionMapInput` via:
//
//	UserCustomPermissionMap{ "key": UserCustomPermissionArgs{...} }
type UserCustomPermissionMapInput interface {
	pulumi.Input

	ToUserCustomPermissionMapOutput() UserCustomPermissionMapOutput
	ToUserCustomPermissionMapOutputWithContext(context.Context) UserCustomPermissionMapOutput
}

type UserCustomPermissionMap map[string]UserCustomPermissionInput

func (UserCustomPermissionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserCustomPermission)(nil)).Elem()
}

func (i UserCustomPermissionMap) ToUserCustomPermissionMapOutput() UserCustomPermissionMapOutput {
	return i.ToUserCustomPermissionMapOutputWithContext(context.Background())
}

func (i UserCustomPermissionMap) ToUserCustomPermissionMapOutputWithContext(ctx context.Context) UserCustomPermissionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserCustomPermissionMapOutput)
}

type UserCustomPermissionOutput struct{ *pulumi.OutputState }

func (UserCustomPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserCustomPermission)(nil)).Elem()
}

func (o UserCustomPermissionOutput) ToUserCustomPermissionOutput() UserCustomPermissionOutput {
	return o
}

func (o UserCustomPermissionOutput) ToUserCustomPermissionOutputWithContext(ctx context.Context) UserCustomPermissionOutput {
	return o
}

func (o UserCustomPermissionOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserCustomPermission) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Custom permissions profile name.
func (o UserCustomPermissionOutput) CustomPermissionsName() pulumi.StringOutput {
	return o.ApplyT(func(v *UserCustomPermission) pulumi.StringOutput { return v.CustomPermissionsName }).(pulumi.StringOutput)
}

// Namespace that the user belongs to. Defaults to `default`.
func (o UserCustomPermissionOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *UserCustomPermission) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o UserCustomPermissionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *UserCustomPermission) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Username of the user.
//
// The following arguments are optional:
func (o UserCustomPermissionOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *UserCustomPermission) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

type UserCustomPermissionArrayOutput struct{ *pulumi.OutputState }

func (UserCustomPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserCustomPermission)(nil)).Elem()
}

func (o UserCustomPermissionArrayOutput) ToUserCustomPermissionArrayOutput() UserCustomPermissionArrayOutput {
	return o
}

func (o UserCustomPermissionArrayOutput) ToUserCustomPermissionArrayOutputWithContext(ctx context.Context) UserCustomPermissionArrayOutput {
	return o
}

func (o UserCustomPermissionArrayOutput) Index(i pulumi.IntInput) UserCustomPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserCustomPermission {
		return vs[0].([]*UserCustomPermission)[vs[1].(int)]
	}).(UserCustomPermissionOutput)
}

type UserCustomPermissionMapOutput struct{ *pulumi.OutputState }

func (UserCustomPermissionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserCustomPermission)(nil)).Elem()
}

func (o UserCustomPermissionMapOutput) ToUserCustomPermissionMapOutput() UserCustomPermissionMapOutput {
	return o
}

func (o UserCustomPermissionMapOutput) ToUserCustomPermissionMapOutputWithContext(ctx context.Context) UserCustomPermissionMapOutput {
	return o
}

func (o UserCustomPermissionMapOutput) MapIndex(k pulumi.StringInput) UserCustomPermissionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserCustomPermission {
		return vs[0].(map[string]*UserCustomPermission)[vs[1].(string)]
	}).(UserCustomPermissionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserCustomPermissionInput)(nil)).Elem(), &UserCustomPermission{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserCustomPermissionArrayInput)(nil)).Elem(), UserCustomPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserCustomPermissionMapInput)(nil)).Elem(), UserCustomPermissionMap{})
	pulumi.RegisterOutputType(UserCustomPermissionOutput{})
	pulumi.RegisterOutputType(UserCustomPermissionArrayOutput{})
	pulumi.RegisterOutputType(UserCustomPermissionMapOutput{})
}
