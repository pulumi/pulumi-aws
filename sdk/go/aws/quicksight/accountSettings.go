// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS QuickSight Account Settings.
//
// > Deletion of this resource will not modify any settings, only remove the resource from state.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/quicksight"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			subscription, err := quicksight.NewAccountSubscription(ctx, "subscription", &quicksight.AccountSubscriptionArgs{
//				AccountName:          pulumi.String("quicksight-terraform"),
//				AuthenticationMethod: pulumi.String("IAM_AND_QUICKSIGHT"),
//				Edition:              pulumi.String("ENTERPRISE"),
//				NotificationEmail:    pulumi.String("notification@email.com"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = quicksight.NewAccountSettings(ctx, "example", &quicksight.AccountSettingsArgs{
//				TerminationProtectionEnabled: pulumi.Bool(false),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				subscription,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import QuickSight Account Settings using the AWS account ID. For example:
//
// ```sh
// $ pulumi import aws:quicksight/accountSettings:AccountSettings example "012345678901"
// ```
type AccountSettings struct {
	pulumi.CustomResourceState

	// The ID for the AWS account that contains the settings.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// The default namespace for this Amazon Web Services account. Currently, the default is `default`.
	DefaultNamespace pulumi.StringOutput `pulumi:"defaultNamespace"`
	// A boolean value that determines whether or not an Amazon QuickSight account can be deleted. If `true`, it does not allow the account to be deleted and results in an error message if a user tries to make a DeleteAccountSubscription request. If `false`, it will allow the account to be deleted.
	TerminationProtectionEnabled pulumi.BoolOutput                `pulumi:"terminationProtectionEnabled"`
	Timeouts                     AccountSettingsTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewAccountSettings registers a new resource with the given unique name, arguments, and options.
func NewAccountSettings(ctx *pulumi.Context,
	name string, args *AccountSettingsArgs, opts ...pulumi.ResourceOption) (*AccountSettings, error) {
	if args == nil {
		args = &AccountSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountSettings
	err := ctx.RegisterResource("aws:quicksight/accountSettings:AccountSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountSettings gets an existing AccountSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountSettingsState, opts ...pulumi.ResourceOption) (*AccountSettings, error) {
	var resource AccountSettings
	err := ctx.ReadResource("aws:quicksight/accountSettings:AccountSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountSettings resources.
type accountSettingsState struct {
	// The ID for the AWS account that contains the settings.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The default namespace for this Amazon Web Services account. Currently, the default is `default`.
	DefaultNamespace *string `pulumi:"defaultNamespace"`
	// A boolean value that determines whether or not an Amazon QuickSight account can be deleted. If `true`, it does not allow the account to be deleted and results in an error message if a user tries to make a DeleteAccountSubscription request. If `false`, it will allow the account to be deleted.
	TerminationProtectionEnabled *bool                    `pulumi:"terminationProtectionEnabled"`
	Timeouts                     *AccountSettingsTimeouts `pulumi:"timeouts"`
}

type AccountSettingsState struct {
	// The ID for the AWS account that contains the settings.
	AwsAccountId pulumi.StringPtrInput
	// The default namespace for this Amazon Web Services account. Currently, the default is `default`.
	DefaultNamespace pulumi.StringPtrInput
	// A boolean value that determines whether or not an Amazon QuickSight account can be deleted. If `true`, it does not allow the account to be deleted and results in an error message if a user tries to make a DeleteAccountSubscription request. If `false`, it will allow the account to be deleted.
	TerminationProtectionEnabled pulumi.BoolPtrInput
	Timeouts                     AccountSettingsTimeoutsPtrInput
}

func (AccountSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountSettingsState)(nil)).Elem()
}

type accountSettingsArgs struct {
	// The ID for the AWS account that contains the settings.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The default namespace for this Amazon Web Services account. Currently, the default is `default`.
	DefaultNamespace *string `pulumi:"defaultNamespace"`
	// A boolean value that determines whether or not an Amazon QuickSight account can be deleted. If `true`, it does not allow the account to be deleted and results in an error message if a user tries to make a DeleteAccountSubscription request. If `false`, it will allow the account to be deleted.
	TerminationProtectionEnabled *bool                    `pulumi:"terminationProtectionEnabled"`
	Timeouts                     *AccountSettingsTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a AccountSettings resource.
type AccountSettingsArgs struct {
	// The ID for the AWS account that contains the settings.
	AwsAccountId pulumi.StringPtrInput
	// The default namespace for this Amazon Web Services account. Currently, the default is `default`.
	DefaultNamespace pulumi.StringPtrInput
	// A boolean value that determines whether or not an Amazon QuickSight account can be deleted. If `true`, it does not allow the account to be deleted and results in an error message if a user tries to make a DeleteAccountSubscription request. If `false`, it will allow the account to be deleted.
	TerminationProtectionEnabled pulumi.BoolPtrInput
	Timeouts                     AccountSettingsTimeoutsPtrInput
}

func (AccountSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountSettingsArgs)(nil)).Elem()
}

type AccountSettingsInput interface {
	pulumi.Input

	ToAccountSettingsOutput() AccountSettingsOutput
	ToAccountSettingsOutputWithContext(ctx context.Context) AccountSettingsOutput
}

func (*AccountSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountSettings)(nil)).Elem()
}

func (i *AccountSettings) ToAccountSettingsOutput() AccountSettingsOutput {
	return i.ToAccountSettingsOutputWithContext(context.Background())
}

func (i *AccountSettings) ToAccountSettingsOutputWithContext(ctx context.Context) AccountSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountSettingsOutput)
}

// AccountSettingsArrayInput is an input type that accepts AccountSettingsArray and AccountSettingsArrayOutput values.
// You can construct a concrete instance of `AccountSettingsArrayInput` via:
//
//	AccountSettingsArray{ AccountSettingsArgs{...} }
type AccountSettingsArrayInput interface {
	pulumi.Input

	ToAccountSettingsArrayOutput() AccountSettingsArrayOutput
	ToAccountSettingsArrayOutputWithContext(context.Context) AccountSettingsArrayOutput
}

type AccountSettingsArray []AccountSettingsInput

func (AccountSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountSettings)(nil)).Elem()
}

func (i AccountSettingsArray) ToAccountSettingsArrayOutput() AccountSettingsArrayOutput {
	return i.ToAccountSettingsArrayOutputWithContext(context.Background())
}

func (i AccountSettingsArray) ToAccountSettingsArrayOutputWithContext(ctx context.Context) AccountSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountSettingsArrayOutput)
}

// AccountSettingsMapInput is an input type that accepts AccountSettingsMap and AccountSettingsMapOutput values.
// You can construct a concrete instance of `AccountSettingsMapInput` via:
//
//	AccountSettingsMap{ "key": AccountSettingsArgs{...} }
type AccountSettingsMapInput interface {
	pulumi.Input

	ToAccountSettingsMapOutput() AccountSettingsMapOutput
	ToAccountSettingsMapOutputWithContext(context.Context) AccountSettingsMapOutput
}

type AccountSettingsMap map[string]AccountSettingsInput

func (AccountSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountSettings)(nil)).Elem()
}

func (i AccountSettingsMap) ToAccountSettingsMapOutput() AccountSettingsMapOutput {
	return i.ToAccountSettingsMapOutputWithContext(context.Background())
}

func (i AccountSettingsMap) ToAccountSettingsMapOutputWithContext(ctx context.Context) AccountSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountSettingsMapOutput)
}

type AccountSettingsOutput struct{ *pulumi.OutputState }

func (AccountSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountSettings)(nil)).Elem()
}

func (o AccountSettingsOutput) ToAccountSettingsOutput() AccountSettingsOutput {
	return o
}

func (o AccountSettingsOutput) ToAccountSettingsOutputWithContext(ctx context.Context) AccountSettingsOutput {
	return o
}

// The ID for the AWS account that contains the settings.
func (o AccountSettingsOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountSettings) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// The default namespace for this Amazon Web Services account. Currently, the default is `default`.
func (o AccountSettingsOutput) DefaultNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountSettings) pulumi.StringOutput { return v.DefaultNamespace }).(pulumi.StringOutput)
}

// A boolean value that determines whether or not an Amazon QuickSight account can be deleted. If `true`, it does not allow the account to be deleted and results in an error message if a user tries to make a DeleteAccountSubscription request. If `false`, it will allow the account to be deleted.
func (o AccountSettingsOutput) TerminationProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountSettings) pulumi.BoolOutput { return v.TerminationProtectionEnabled }).(pulumi.BoolOutput)
}

func (o AccountSettingsOutput) Timeouts() AccountSettingsTimeoutsPtrOutput {
	return o.ApplyT(func(v *AccountSettings) AccountSettingsTimeoutsPtrOutput { return v.Timeouts }).(AccountSettingsTimeoutsPtrOutput)
}

type AccountSettingsArrayOutput struct{ *pulumi.OutputState }

func (AccountSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountSettings)(nil)).Elem()
}

func (o AccountSettingsArrayOutput) ToAccountSettingsArrayOutput() AccountSettingsArrayOutput {
	return o
}

func (o AccountSettingsArrayOutput) ToAccountSettingsArrayOutputWithContext(ctx context.Context) AccountSettingsArrayOutput {
	return o
}

func (o AccountSettingsArrayOutput) Index(i pulumi.IntInput) AccountSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountSettings {
		return vs[0].([]*AccountSettings)[vs[1].(int)]
	}).(AccountSettingsOutput)
}

type AccountSettingsMapOutput struct{ *pulumi.OutputState }

func (AccountSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountSettings)(nil)).Elem()
}

func (o AccountSettingsMapOutput) ToAccountSettingsMapOutput() AccountSettingsMapOutput {
	return o
}

func (o AccountSettingsMapOutput) ToAccountSettingsMapOutputWithContext(ctx context.Context) AccountSettingsMapOutput {
	return o
}

func (o AccountSettingsMapOutput) MapIndex(k pulumi.StringInput) AccountSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountSettings {
		return vs[0].(map[string]*AccountSettings)[vs[1].(string)]
	}).(AccountSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountSettingsInput)(nil)).Elem(), &AccountSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountSettingsArrayInput)(nil)).Elem(), AccountSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountSettingsMapInput)(nil)).Elem(), AccountSettingsMap{})
	pulumi.RegisterOutputType(AccountSettingsOutput{})
	pulumi.RegisterOutputType(AccountSettingsArrayOutput{})
	pulumi.RegisterOutputType(AccountSettingsMapOutput{})
}
