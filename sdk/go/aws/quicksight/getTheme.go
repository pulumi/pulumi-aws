// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS QuickSight Theme.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/quicksight"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := quicksight.LookupTheme(ctx, &quicksight.LookupThemeArgs{
//				ThemeId: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTheme(ctx *pulumi.Context, args *LookupThemeArgs, opts ...pulumi.InvokeOption) (*LookupThemeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupThemeResult
	err := ctx.Invoke("aws:quicksight/getTheme:getTheme", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTheme.
type LookupThemeArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	Tags map[string]string `pulumi:"tags"`
	// Identifier of the theme.
	//
	// The following arguments are optional:
	ThemeId string `pulumi:"themeId"`
}

// A collection of values returned by getTheme.
type LookupThemeResult struct {
	// ARN of the theme.
	Arn          string `pulumi:"arn"`
	AwsAccountId string `pulumi:"awsAccountId"`
	// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight.
	BaseThemeId string `pulumi:"baseThemeId"`
	// The theme configuration, which contains the theme display properties. See configuration.
	Configurations []GetThemeConfiguration `pulumi:"configurations"`
	// The time that the theme was created.
	CreatedTime string `pulumi:"createdTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The time that the theme was last updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// Display name of the theme.
	Name string `pulumi:"name"`
	// A set of resource permissions on the theme. See permissions.
	Permissions []GetThemePermission `pulumi:"permissions"`
	// The theme creation status.
	Status string `pulumi:"status"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	Tags    map[string]string `pulumi:"tags"`
	ThemeId string            `pulumi:"themeId"`
	// A description of the current theme version being created/updated.
	VersionDescription string `pulumi:"versionDescription"`
	// The version number of the theme version.
	VersionNumber int `pulumi:"versionNumber"`
}

func LookupThemeOutput(ctx *pulumi.Context, args LookupThemeOutputArgs, opts ...pulumi.InvokeOption) LookupThemeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupThemeResult, error) {
			args := v.(LookupThemeArgs)
			r, err := LookupTheme(ctx, &args, opts...)
			var s LookupThemeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupThemeResultOutput)
}

// A collection of arguments for invoking getTheme.
type LookupThemeOutputArgs struct {
	// AWS account ID.
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Identifier of the theme.
	//
	// The following arguments are optional:
	ThemeId pulumi.StringInput `pulumi:"themeId"`
}

func (LookupThemeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupThemeArgs)(nil)).Elem()
}

// A collection of values returned by getTheme.
type LookupThemeResultOutput struct{ *pulumi.OutputState }

func (LookupThemeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupThemeResult)(nil)).Elem()
}

func (o LookupThemeResultOutput) ToLookupThemeResultOutput() LookupThemeResultOutput {
	return o
}

func (o LookupThemeResultOutput) ToLookupThemeResultOutputWithContext(ctx context.Context) LookupThemeResultOutput {
	return o
}

// ARN of the theme.
func (o LookupThemeResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupThemeResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight.
func (o LookupThemeResultOutput) BaseThemeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.BaseThemeId }).(pulumi.StringOutput)
}

// The theme configuration, which contains the theme display properties. See configuration.
func (o LookupThemeResultOutput) Configurations() GetThemeConfigurationArrayOutput {
	return o.ApplyT(func(v LookupThemeResult) []GetThemeConfiguration { return v.Configurations }).(GetThemeConfigurationArrayOutput)
}

// The time that the theme was created.
func (o LookupThemeResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupThemeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The time that the theme was last updated.
func (o LookupThemeResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Display name of the theme.
func (o LookupThemeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.Name }).(pulumi.StringOutput)
}

// A set of resource permissions on the theme. See permissions.
func (o LookupThemeResultOutput) Permissions() GetThemePermissionArrayOutput {
	return o.ApplyT(func(v LookupThemeResult) []GetThemePermission { return v.Permissions }).(GetThemePermissionArrayOutput)
}

// The theme creation status.
func (o LookupThemeResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.Status }).(pulumi.StringOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o LookupThemeResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupThemeResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupThemeResultOutput) ThemeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.ThemeId }).(pulumi.StringOutput)
}

// A description of the current theme version being created/updated.
func (o LookupThemeResultOutput) VersionDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupThemeResult) string { return v.VersionDescription }).(pulumi.StringOutput)
}

// The version number of the theme version.
func (o LookupThemeResultOutput) VersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupThemeResult) int { return v.VersionNumber }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupThemeResultOutput{})
}
