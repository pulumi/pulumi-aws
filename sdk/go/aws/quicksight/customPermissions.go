// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a QuickSight custom permissions profile.
//
// ## Example Usage
//
//	resource "quicksight.CustomPermissions" "example" {
//	  customPermissionsName = "example-permissions"
//
//	  capabilities {
//	    printReports    = "DENY"
//	    shareDashboards = "DENY"
//	  }
//	}
//
// ## Import
//
// Using `pulumi import`, import a QuickSight custom permissions profile using the AWS account ID and custom permissions profile name separated by a comma (`,`). For example:
//
// ```sh
// $ pulumi import aws:quicksight/customPermissions:CustomPermissions example 123456789012,example-permissions
// ```
type CustomPermissions struct {
	pulumi.CustomResourceState

	// ARN of the custom permissions profile.
	Arn          pulumi.StringOutput `pulumi:"arn"`
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// Actions to include in the custom permissions profile. See capabilities.
	Capabilities CustomPermissionsCapabilitiesPtrOutput `pulumi:"capabilities"`
	// Custom permissions profile name.
	//
	// The following arguments are optional:
	CustomPermissionsName pulumi.StringOutput `pulumi:"customPermissionsName"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewCustomPermissions registers a new resource with the given unique name, arguments, and options.
func NewCustomPermissions(ctx *pulumi.Context,
	name string, args *CustomPermissionsArgs, opts ...pulumi.ResourceOption) (*CustomPermissions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomPermissionsName == nil {
		return nil, errors.New("invalid value for required argument 'CustomPermissionsName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomPermissions
	err := ctx.RegisterResource("aws:quicksight/customPermissions:CustomPermissions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomPermissions gets an existing CustomPermissions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomPermissions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomPermissionsState, opts ...pulumi.ResourceOption) (*CustomPermissions, error) {
	var resource CustomPermissions
	err := ctx.ReadResource("aws:quicksight/customPermissions:CustomPermissions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomPermissions resources.
type customPermissionsState struct {
	// ARN of the custom permissions profile.
	Arn          *string `pulumi:"arn"`
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Actions to include in the custom permissions profile. See capabilities.
	Capabilities *CustomPermissionsCapabilities `pulumi:"capabilities"`
	// Custom permissions profile name.
	//
	// The following arguments are optional:
	CustomPermissionsName *string `pulumi:"customPermissionsName"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CustomPermissionsState struct {
	// ARN of the custom permissions profile.
	Arn          pulumi.StringPtrInput
	AwsAccountId pulumi.StringPtrInput
	// Actions to include in the custom permissions profile. See capabilities.
	Capabilities CustomPermissionsCapabilitiesPtrInput
	// Custom permissions profile name.
	//
	// The following arguments are optional:
	CustomPermissionsName pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
}

func (CustomPermissionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*customPermissionsState)(nil)).Elem()
}

type customPermissionsArgs struct {
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Actions to include in the custom permissions profile. See capabilities.
	Capabilities *CustomPermissionsCapabilities `pulumi:"capabilities"`
	// Custom permissions profile name.
	//
	// The following arguments are optional:
	CustomPermissionsName string `pulumi:"customPermissionsName"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CustomPermissions resource.
type CustomPermissionsArgs struct {
	AwsAccountId pulumi.StringPtrInput
	// Actions to include in the custom permissions profile. See capabilities.
	Capabilities CustomPermissionsCapabilitiesPtrInput
	// Custom permissions profile name.
	//
	// The following arguments are optional:
	CustomPermissionsName pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (CustomPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customPermissionsArgs)(nil)).Elem()
}

type CustomPermissionsInput interface {
	pulumi.Input

	ToCustomPermissionsOutput() CustomPermissionsOutput
	ToCustomPermissionsOutputWithContext(ctx context.Context) CustomPermissionsOutput
}

func (*CustomPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPermissions)(nil)).Elem()
}

func (i *CustomPermissions) ToCustomPermissionsOutput() CustomPermissionsOutput {
	return i.ToCustomPermissionsOutputWithContext(context.Background())
}

func (i *CustomPermissions) ToCustomPermissionsOutputWithContext(ctx context.Context) CustomPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPermissionsOutput)
}

// CustomPermissionsArrayInput is an input type that accepts CustomPermissionsArray and CustomPermissionsArrayOutput values.
// You can construct a concrete instance of `CustomPermissionsArrayInput` via:
//
//	CustomPermissionsArray{ CustomPermissionsArgs{...} }
type CustomPermissionsArrayInput interface {
	pulumi.Input

	ToCustomPermissionsArrayOutput() CustomPermissionsArrayOutput
	ToCustomPermissionsArrayOutputWithContext(context.Context) CustomPermissionsArrayOutput
}

type CustomPermissionsArray []CustomPermissionsInput

func (CustomPermissionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomPermissions)(nil)).Elem()
}

func (i CustomPermissionsArray) ToCustomPermissionsArrayOutput() CustomPermissionsArrayOutput {
	return i.ToCustomPermissionsArrayOutputWithContext(context.Background())
}

func (i CustomPermissionsArray) ToCustomPermissionsArrayOutputWithContext(ctx context.Context) CustomPermissionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPermissionsArrayOutput)
}

// CustomPermissionsMapInput is an input type that accepts CustomPermissionsMap and CustomPermissionsMapOutput values.
// You can construct a concrete instance of `CustomPermissionsMapInput` via:
//
//	CustomPermissionsMap{ "key": CustomPermissionsArgs{...} }
type CustomPermissionsMapInput interface {
	pulumi.Input

	ToCustomPermissionsMapOutput() CustomPermissionsMapOutput
	ToCustomPermissionsMapOutputWithContext(context.Context) CustomPermissionsMapOutput
}

type CustomPermissionsMap map[string]CustomPermissionsInput

func (CustomPermissionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomPermissions)(nil)).Elem()
}

func (i CustomPermissionsMap) ToCustomPermissionsMapOutput() CustomPermissionsMapOutput {
	return i.ToCustomPermissionsMapOutputWithContext(context.Background())
}

func (i CustomPermissionsMap) ToCustomPermissionsMapOutputWithContext(ctx context.Context) CustomPermissionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPermissionsMapOutput)
}

type CustomPermissionsOutput struct{ *pulumi.OutputState }

func (CustomPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPermissions)(nil)).Elem()
}

func (o CustomPermissionsOutput) ToCustomPermissionsOutput() CustomPermissionsOutput {
	return o
}

func (o CustomPermissionsOutput) ToCustomPermissionsOutputWithContext(ctx context.Context) CustomPermissionsOutput {
	return o
}

// ARN of the custom permissions profile.
func (o CustomPermissionsOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o CustomPermissionsOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Actions to include in the custom permissions profile. See capabilities.
func (o CustomPermissionsOutput) Capabilities() CustomPermissionsCapabilitiesPtrOutput {
	return o.ApplyT(func(v *CustomPermissions) CustomPermissionsCapabilitiesPtrOutput { return v.Capabilities }).(CustomPermissionsCapabilitiesPtrOutput)
}

// Custom permissions profile name.
//
// The following arguments are optional:
func (o CustomPermissionsOutput) CustomPermissionsName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringOutput { return v.CustomPermissionsName }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o CustomPermissionsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CustomPermissionsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CustomPermissionsOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomPermissions) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type CustomPermissionsArrayOutput struct{ *pulumi.OutputState }

func (CustomPermissionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomPermissions)(nil)).Elem()
}

func (o CustomPermissionsArrayOutput) ToCustomPermissionsArrayOutput() CustomPermissionsArrayOutput {
	return o
}

func (o CustomPermissionsArrayOutput) ToCustomPermissionsArrayOutputWithContext(ctx context.Context) CustomPermissionsArrayOutput {
	return o
}

func (o CustomPermissionsArrayOutput) Index(i pulumi.IntInput) CustomPermissionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomPermissions {
		return vs[0].([]*CustomPermissions)[vs[1].(int)]
	}).(CustomPermissionsOutput)
}

type CustomPermissionsMapOutput struct{ *pulumi.OutputState }

func (CustomPermissionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomPermissions)(nil)).Elem()
}

func (o CustomPermissionsMapOutput) ToCustomPermissionsMapOutput() CustomPermissionsMapOutput {
	return o
}

func (o CustomPermissionsMapOutput) ToCustomPermissionsMapOutputWithContext(ctx context.Context) CustomPermissionsMapOutput {
	return o
}

func (o CustomPermissionsMapOutput) MapIndex(k pulumi.StringInput) CustomPermissionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomPermissions {
		return vs[0].(map[string]*CustomPermissions)[vs[1].(string)]
	}).(CustomPermissionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPermissionsInput)(nil)).Elem(), &CustomPermissions{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPermissionsArrayInput)(nil)).Elem(), CustomPermissionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPermissionsMapInput)(nil)).Elem(), CustomPermissionsMap{})
	pulumi.RegisterOutputType(CustomPermissionsOutput{})
	pulumi.RegisterOutputType(CustomPermissionsArrayOutput{})
	pulumi.RegisterOutputType(CustomPermissionsMapOutput{})
}
