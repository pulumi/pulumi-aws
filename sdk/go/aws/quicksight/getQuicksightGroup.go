// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can be used to fetch information about a specific
// QuickSight group. By using this data source, you can reference QuickSight group
// properties without having to hard code ARNs or unique IDs as input.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/quicksight"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := quicksight.GetQuicksightGroup(ctx, &quicksight.GetQuicksightGroupArgs{
//				GroupName: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQuicksightGroup(ctx *pulumi.Context, args *GetQuicksightGroupArgs, opts ...pulumi.InvokeOption) (*GetQuicksightGroupResult, error) {
	var rv GetQuicksightGroupResult
	err := ctx.Invoke("aws:quicksight/getQuicksightGroup:getQuicksightGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuicksightGroup.
type GetQuicksightGroupArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The name of the group that you want to match.
	//
	// The following arguments are optional:
	GroupName string `pulumi:"groupName"`
	// QuickSight namespace. Defaults to `default`.
	Namespace *string `pulumi:"namespace"`
}

// A collection of values returned by getQuicksightGroup.
type GetQuicksightGroupResult struct {
	// The Amazon Resource Name (ARN) for the group.
	Arn          string `pulumi:"arn"`
	AwsAccountId string `pulumi:"awsAccountId"`
	// The group description.
	Description string `pulumi:"description"`
	GroupName   string `pulumi:"groupName"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	Namespace *string `pulumi:"namespace"`
	// The principal ID of the group.
	PrincipalId string `pulumi:"principalId"`
}

func GetQuicksightGroupOutput(ctx *pulumi.Context, args GetQuicksightGroupOutputArgs, opts ...pulumi.InvokeOption) GetQuicksightGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQuicksightGroupResult, error) {
			args := v.(GetQuicksightGroupArgs)
			r, err := GetQuicksightGroup(ctx, &args, opts...)
			var s GetQuicksightGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQuicksightGroupResultOutput)
}

// A collection of arguments for invoking getQuicksightGroup.
type GetQuicksightGroupOutputArgs struct {
	// AWS account ID.
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// The name of the group that you want to match.
	//
	// The following arguments are optional:
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// QuickSight namespace. Defaults to `default`.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (GetQuicksightGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuicksightGroupArgs)(nil)).Elem()
}

// A collection of values returned by getQuicksightGroup.
type GetQuicksightGroupResultOutput struct{ *pulumi.OutputState }

func (GetQuicksightGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuicksightGroupResult)(nil)).Elem()
}

func (o GetQuicksightGroupResultOutput) ToGetQuicksightGroupResultOutput() GetQuicksightGroupResultOutput {
	return o
}

func (o GetQuicksightGroupResultOutput) ToGetQuicksightGroupResultOutputWithContext(ctx context.Context) GetQuicksightGroupResultOutput {
	return o
}

// The Amazon Resource Name (ARN) for the group.
func (o GetQuicksightGroupResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuicksightGroupResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetQuicksightGroupResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuicksightGroupResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// The group description.
func (o GetQuicksightGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuicksightGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetQuicksightGroupResultOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuicksightGroupResult) string { return v.GroupName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetQuicksightGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuicksightGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetQuicksightGroupResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQuicksightGroupResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The principal ID of the group.
func (o GetQuicksightGroupResultOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuicksightGroupResult) string { return v.PrincipalId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQuicksightGroupResultOutput{})
}
