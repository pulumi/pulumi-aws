// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information on an EC2 Transit Gateway Multicast Domain.
//
// ## Example Usage
// ### By Filter
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2transitgateway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2transitgateway.LookupMulticastDomain(ctx, &ec2transitgateway.LookupMulticastDomainArgs{
// 			Filters: []ec2transitgateway.GetMulticastDomainFilter{
// 				ec2transitgateway.GetMulticastDomainFilter{
// 					Name: "transit-gateway-multicast-domain-id",
// 					Values: []string{
// 						"tgw-mcast-domain-12345678",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### By Identifier
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2transitgateway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2transitgateway.LookupMulticastDomain(ctx, &ec2transitgateway.LookupMulticastDomainArgs{
// 			TransitGatewayMulticastDomainId: pulumi.StringRef("tgw-mcast-domain-12345678"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupMulticastDomain(ctx *pulumi.Context, args *LookupMulticastDomainArgs, opts ...pulumi.InvokeOption) (*LookupMulticastDomainResult, error) {
	var rv LookupMulticastDomainResult
	err := ctx.Invoke("aws:ec2transitgateway/getMulticastDomain:getMulticastDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMulticastDomain.
type LookupMulticastDomainArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters []GetMulticastDomainFilter `pulumi:"filters"`
	// Key-value tags for the EC2 Transit Gateway Multicast Domain.
	Tags map[string]string `pulumi:"tags"`
	// Identifier of the EC2 Transit Gateway Multicast Domain.
	TransitGatewayMulticastDomainId *string `pulumi:"transitGatewayMulticastDomainId"`
}

// A collection of values returned by getMulticastDomain.
type LookupMulticastDomainResult struct {
	// EC2 Transit Gateway Multicast Domain Amazon Resource Name (ARN).
	Arn string `pulumi:"arn"`
	// EC2 Transit Gateway Multicast Domain Associations
	Associations []GetMulticastDomainAssociationType `pulumi:"associations"`
	// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain.
	AutoAcceptSharedAssociations string                     `pulumi:"autoAcceptSharedAssociations"`
	Filters                      []GetMulticastDomainFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain.
	Igmpv2Support string `pulumi:"igmpv2Support"`
	// EC2 Multicast Domain Group Members
	Members []GetMulticastDomainMember `pulumi:"members"`
	// Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
	OwnerId string `pulumi:"ownerId"`
	// EC2 Multicast Domain Group Sources
	Sources []GetMulticastDomainSource `pulumi:"sources"`
	State   string                     `pulumi:"state"`
	// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain.
	StaticSourcesSupport string `pulumi:"staticSourcesSupport"`
	// Key-value tags for the EC2 Transit Gateway Multicast Domain.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// EC2 Transit Gateway identifier.
	TransitGatewayId                string `pulumi:"transitGatewayId"`
	TransitGatewayMulticastDomainId string `pulumi:"transitGatewayMulticastDomainId"`
}

func LookupMulticastDomainOutput(ctx *pulumi.Context, args LookupMulticastDomainOutputArgs, opts ...pulumi.InvokeOption) LookupMulticastDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMulticastDomainResult, error) {
			args := v.(LookupMulticastDomainArgs)
			r, err := LookupMulticastDomain(ctx, &args, opts...)
			return *r, err
		}).(LookupMulticastDomainResultOutput)
}

// A collection of arguments for invoking getMulticastDomain.
type LookupMulticastDomainOutputArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters GetMulticastDomainFilterArrayInput `pulumi:"filters"`
	// Key-value tags for the EC2 Transit Gateway Multicast Domain.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Identifier of the EC2 Transit Gateway Multicast Domain.
	TransitGatewayMulticastDomainId pulumi.StringPtrInput `pulumi:"transitGatewayMulticastDomainId"`
}

func (LookupMulticastDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMulticastDomainArgs)(nil)).Elem()
}

// A collection of values returned by getMulticastDomain.
type LookupMulticastDomainResultOutput struct{ *pulumi.OutputState }

func (LookupMulticastDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMulticastDomainResult)(nil)).Elem()
}

func (o LookupMulticastDomainResultOutput) ToLookupMulticastDomainResultOutput() LookupMulticastDomainResultOutput {
	return o
}

func (o LookupMulticastDomainResultOutput) ToLookupMulticastDomainResultOutputWithContext(ctx context.Context) LookupMulticastDomainResultOutput {
	return o
}

// EC2 Transit Gateway Multicast Domain Amazon Resource Name (ARN).
func (o LookupMulticastDomainResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.Arn }).(pulumi.StringOutput)
}

// EC2 Transit Gateway Multicast Domain Associations
func (o LookupMulticastDomainResultOutput) Associations() GetMulticastDomainAssociationTypeArrayOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) []GetMulticastDomainAssociationType { return v.Associations }).(GetMulticastDomainAssociationTypeArrayOutput)
}

// Whether to automatically accept cross-account subnet associations that are associated with the EC2 Transit Gateway Multicast Domain.
func (o LookupMulticastDomainResultOutput) AutoAcceptSharedAssociations() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.AutoAcceptSharedAssociations }).(pulumi.StringOutput)
}

func (o LookupMulticastDomainResultOutput) Filters() GetMulticastDomainFilterArrayOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) []GetMulticastDomainFilter { return v.Filters }).(GetMulticastDomainFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMulticastDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to enable Internet Group Management Protocol (IGMP) version 2 for the EC2 Transit Gateway Multicast Domain.
func (o LookupMulticastDomainResultOutput) Igmpv2Support() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.Igmpv2Support }).(pulumi.StringOutput)
}

// EC2 Multicast Domain Group Members
func (o LookupMulticastDomainResultOutput) Members() GetMulticastDomainMemberArrayOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) []GetMulticastDomainMember { return v.Members }).(GetMulticastDomainMemberArrayOutput)
}

// Identifier of the AWS account that owns the EC2 Transit Gateway Multicast Domain.
func (o LookupMulticastDomainResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

// EC2 Multicast Domain Group Sources
func (o LookupMulticastDomainResultOutput) Sources() GetMulticastDomainSourceArrayOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) []GetMulticastDomainSource { return v.Sources }).(GetMulticastDomainSourceArrayOutput)
}

func (o LookupMulticastDomainResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.State }).(pulumi.StringOutput)
}

// Whether to enable support for statically configuring multicast group sources for the EC2 Transit Gateway Multicast Domain.
func (o LookupMulticastDomainResultOutput) StaticSourcesSupport() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.StaticSourcesSupport }).(pulumi.StringOutput)
}

// Key-value tags for the EC2 Transit Gateway Multicast Domain.
func (o LookupMulticastDomainResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the transit gateway attachment.
func (o LookupMulticastDomainResultOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// EC2 Transit Gateway identifier.
func (o LookupMulticastDomainResultOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

func (o LookupMulticastDomainResultOutput) TransitGatewayMulticastDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMulticastDomainResult) string { return v.TransitGatewayMulticastDomainId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMulticastDomainResultOutput{})
}
