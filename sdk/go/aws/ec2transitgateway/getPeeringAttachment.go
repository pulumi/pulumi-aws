// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get information on an EC2 Transit Gateway Peering Attachment.
//
// ## Example Usage
//
// ### By Filter
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := ec2transitgateway.LookupPeeringAttachment(ctx, &ec2transitgateway.LookupPeeringAttachmentArgs{
// 			Filters: ec2transitgateway.getPeeringAttachmentFilterArray{
// 				&ec2transitgateway.LookupPeeringAttachmentFilter{
// 					Name: "transit-gateway-attachment-id",
// 					Values: []string{
// 						"tgw-attach-12345678",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ### By Identifier
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		attachment, err := ec2transitgateway.LookupPeeringAttachment(ctx, &ec2transitgateway.LookupPeeringAttachmentArgs{
// 			Id: "tgw-attach-12345678",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupPeeringAttachment(ctx *pulumi.Context, args *LookupPeeringAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupPeeringAttachmentResult, error) {
	var rv LookupPeeringAttachmentResult
	err := ctx.Invoke("aws:ec2transitgateway/getPeeringAttachment:getPeeringAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeeringAttachment.
type LookupPeeringAttachmentArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters []GetPeeringAttachmentFilter `pulumi:"filters"`
	// Identifier of the EC2 Transit Gateway Peering Attachment.
	Id *string `pulumi:"id"`
	// A mapping of tags, each pair of which must exactly match
	// a pair on the specific EC2 Transit Gateway Peering Attachment to retrieve.
	Tags map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getPeeringAttachment.
type LookupPeeringAttachmentResult struct {
	Filters []GetPeeringAttachmentFilter `pulumi:"filters"`
	Id      *string                      `pulumi:"id"`
	// Identifier of the peer AWS account
	PeerAccountId string `pulumi:"peerAccountId"`
	// Identifier of the peer AWS region
	PeerRegion string `pulumi:"peerRegion"`
	// Identifier of the peer EC2 Transit Gateway
	PeerTransitGatewayId string                 `pulumi:"peerTransitGatewayId"`
	Tags                 map[string]interface{} `pulumi:"tags"`
	// Identifier of the local EC2 Transit Gateway
	TransitGatewayId string `pulumi:"transitGatewayId"`
}
