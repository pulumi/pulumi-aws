// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type InstanceConnectEndpointTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
}

// InstanceConnectEndpointTimeoutsInput is an input type that accepts InstanceConnectEndpointTimeoutsArgs and InstanceConnectEndpointTimeoutsOutput values.
// You can construct a concrete instance of `InstanceConnectEndpointTimeoutsInput` via:
//
//	InstanceConnectEndpointTimeoutsArgs{...}
type InstanceConnectEndpointTimeoutsInput interface {
	pulumi.Input

	ToInstanceConnectEndpointTimeoutsOutput() InstanceConnectEndpointTimeoutsOutput
	ToInstanceConnectEndpointTimeoutsOutputWithContext(context.Context) InstanceConnectEndpointTimeoutsOutput
}

type InstanceConnectEndpointTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
}

func (InstanceConnectEndpointTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectEndpointTimeouts)(nil)).Elem()
}

func (i InstanceConnectEndpointTimeoutsArgs) ToInstanceConnectEndpointTimeoutsOutput() InstanceConnectEndpointTimeoutsOutput {
	return i.ToInstanceConnectEndpointTimeoutsOutputWithContext(context.Background())
}

func (i InstanceConnectEndpointTimeoutsArgs) ToInstanceConnectEndpointTimeoutsOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConnectEndpointTimeoutsOutput)
}

func (i InstanceConnectEndpointTimeoutsArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConnectEndpointTimeouts] {
	return pulumix.Output[InstanceConnectEndpointTimeouts]{
		OutputState: i.ToInstanceConnectEndpointTimeoutsOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConnectEndpointTimeoutsArgs) ToInstanceConnectEndpointTimeoutsPtrOutput() InstanceConnectEndpointTimeoutsPtrOutput {
	return i.ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(context.Background())
}

func (i InstanceConnectEndpointTimeoutsArgs) ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConnectEndpointTimeoutsOutput).ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(ctx)
}

// InstanceConnectEndpointTimeoutsPtrInput is an input type that accepts InstanceConnectEndpointTimeoutsArgs, InstanceConnectEndpointTimeoutsPtr and InstanceConnectEndpointTimeoutsPtrOutput values.
// You can construct a concrete instance of `InstanceConnectEndpointTimeoutsPtrInput` via:
//
//	        InstanceConnectEndpointTimeoutsArgs{...}
//
//	or:
//
//	        nil
type InstanceConnectEndpointTimeoutsPtrInput interface {
	pulumi.Input

	ToInstanceConnectEndpointTimeoutsPtrOutput() InstanceConnectEndpointTimeoutsPtrOutput
	ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(context.Context) InstanceConnectEndpointTimeoutsPtrOutput
}

type instanceConnectEndpointTimeoutsPtrType InstanceConnectEndpointTimeoutsArgs

func InstanceConnectEndpointTimeoutsPtr(v *InstanceConnectEndpointTimeoutsArgs) InstanceConnectEndpointTimeoutsPtrInput {
	return (*instanceConnectEndpointTimeoutsPtrType)(v)
}

func (*instanceConnectEndpointTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConnectEndpointTimeouts)(nil)).Elem()
}

func (i *instanceConnectEndpointTimeoutsPtrType) ToInstanceConnectEndpointTimeoutsPtrOutput() InstanceConnectEndpointTimeoutsPtrOutput {
	return i.ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(context.Background())
}

func (i *instanceConnectEndpointTimeoutsPtrType) ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConnectEndpointTimeoutsPtrOutput)
}

func (i *instanceConnectEndpointTimeoutsPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConnectEndpointTimeouts] {
	return pulumix.Output[*InstanceConnectEndpointTimeouts]{
		OutputState: i.ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(ctx).OutputState,
	}
}

type InstanceConnectEndpointTimeoutsOutput struct{ *pulumi.OutputState }

func (InstanceConnectEndpointTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectEndpointTimeouts)(nil)).Elem()
}

func (o InstanceConnectEndpointTimeoutsOutput) ToInstanceConnectEndpointTimeoutsOutput() InstanceConnectEndpointTimeoutsOutput {
	return o
}

func (o InstanceConnectEndpointTimeoutsOutput) ToInstanceConnectEndpointTimeoutsOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsOutput {
	return o
}

func (o InstanceConnectEndpointTimeoutsOutput) ToInstanceConnectEndpointTimeoutsPtrOutput() InstanceConnectEndpointTimeoutsPtrOutput {
	return o.ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(context.Background())
}

func (o InstanceConnectEndpointTimeoutsOutput) ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConnectEndpointTimeouts) *InstanceConnectEndpointTimeouts {
		return &v
	}).(InstanceConnectEndpointTimeoutsPtrOutput)
}

func (o InstanceConnectEndpointTimeoutsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConnectEndpointTimeouts] {
	return pulumix.Output[InstanceConnectEndpointTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConnectEndpointTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectEndpointTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o InstanceConnectEndpointTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectEndpointTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

type InstanceConnectEndpointTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (InstanceConnectEndpointTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConnectEndpointTimeouts)(nil)).Elem()
}

func (o InstanceConnectEndpointTimeoutsPtrOutput) ToInstanceConnectEndpointTimeoutsPtrOutput() InstanceConnectEndpointTimeoutsPtrOutput {
	return o
}

func (o InstanceConnectEndpointTimeoutsPtrOutput) ToInstanceConnectEndpointTimeoutsPtrOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsPtrOutput {
	return o
}

func (o InstanceConnectEndpointTimeoutsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConnectEndpointTimeouts] {
	return pulumix.Output[*InstanceConnectEndpointTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConnectEndpointTimeoutsPtrOutput) Elem() InstanceConnectEndpointTimeoutsOutput {
	return o.ApplyT(func(v *InstanceConnectEndpointTimeouts) InstanceConnectEndpointTimeouts {
		if v != nil {
			return *v
		}
		var ret InstanceConnectEndpointTimeouts
		return ret
	}).(InstanceConnectEndpointTimeoutsOutput)
}

func (o InstanceConnectEndpointTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectEndpointTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o InstanceConnectEndpointTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectEndpointTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

type GetAttachmentFilter struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetAttachmentFilterInput is an input type that accepts GetAttachmentFilterArgs and GetAttachmentFilterOutput values.
// You can construct a concrete instance of `GetAttachmentFilterInput` via:
//
//	GetAttachmentFilterArgs{...}
type GetAttachmentFilterInput interface {
	pulumi.Input

	ToGetAttachmentFilterOutput() GetAttachmentFilterOutput
	ToGetAttachmentFilterOutputWithContext(context.Context) GetAttachmentFilterOutput
}

type GetAttachmentFilterArgs struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentFilter)(nil)).Elem()
}

func (i GetAttachmentFilterArgs) ToGetAttachmentFilterOutput() GetAttachmentFilterOutput {
	return i.ToGetAttachmentFilterOutputWithContext(context.Background())
}

func (i GetAttachmentFilterArgs) ToGetAttachmentFilterOutputWithContext(ctx context.Context) GetAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentFilterOutput)
}

func (i GetAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttachmentFilter] {
	return pulumix.Output[GetAttachmentFilter]{
		OutputState: i.ToGetAttachmentFilterOutputWithContext(ctx).OutputState,
	}
}

// GetAttachmentFilterArrayInput is an input type that accepts GetAttachmentFilterArray and GetAttachmentFilterArrayOutput values.
// You can construct a concrete instance of `GetAttachmentFilterArrayInput` via:
//
//	GetAttachmentFilterArray{ GetAttachmentFilterArgs{...} }
type GetAttachmentFilterArrayInput interface {
	pulumi.Input

	ToGetAttachmentFilterArrayOutput() GetAttachmentFilterArrayOutput
	ToGetAttachmentFilterArrayOutputWithContext(context.Context) GetAttachmentFilterArrayOutput
}

type GetAttachmentFilterArray []GetAttachmentFilterInput

func (GetAttachmentFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentFilter)(nil)).Elem()
}

func (i GetAttachmentFilterArray) ToGetAttachmentFilterArrayOutput() GetAttachmentFilterArrayOutput {
	return i.ToGetAttachmentFilterArrayOutputWithContext(context.Background())
}

func (i GetAttachmentFilterArray) ToGetAttachmentFilterArrayOutputWithContext(ctx context.Context) GetAttachmentFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentFilterArrayOutput)
}

func (i GetAttachmentFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttachmentFilter] {
	return pulumix.Output[[]GetAttachmentFilter]{
		OutputState: i.ToGetAttachmentFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentFilter)(nil)).Elem()
}

func (o GetAttachmentFilterOutput) ToGetAttachmentFilterOutput() GetAttachmentFilterOutput {
	return o
}

func (o GetAttachmentFilterOutput) ToGetAttachmentFilterOutputWithContext(ctx context.Context) GetAttachmentFilterOutput {
	return o
}

func (o GetAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttachmentFilter] {
	return pulumix.Output[GetAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
func (o GetAttachmentFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetAttachmentFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttachmentFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAttachmentFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAttachmentFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentFilter)(nil)).Elem()
}

func (o GetAttachmentFilterArrayOutput) ToGetAttachmentFilterArrayOutput() GetAttachmentFilterArrayOutput {
	return o
}

func (o GetAttachmentFilterArrayOutput) ToGetAttachmentFilterArrayOutputWithContext(ctx context.Context) GetAttachmentFilterArrayOutput {
	return o
}

func (o GetAttachmentFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttachmentFilter] {
	return pulumix.Output[[]GetAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetAttachmentFilterArrayOutput) Index(i pulumi.IntInput) GetAttachmentFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttachmentFilter {
		return vs[0].([]GetAttachmentFilter)[vs[1].(int)]
	}).(GetAttachmentFilterOutput)
}

type GetAttachmentsFilter struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html)
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetAttachmentsFilterInput is an input type that accepts GetAttachmentsFilterArgs and GetAttachmentsFilterOutput values.
// You can construct a concrete instance of `GetAttachmentsFilterInput` via:
//
//	GetAttachmentsFilterArgs{...}
type GetAttachmentsFilterInput interface {
	pulumi.Input

	ToGetAttachmentsFilterOutput() GetAttachmentsFilterOutput
	ToGetAttachmentsFilterOutputWithContext(context.Context) GetAttachmentsFilterOutput
}

type GetAttachmentsFilterArgs struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html)
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAttachmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsFilter)(nil)).Elem()
}

func (i GetAttachmentsFilterArgs) ToGetAttachmentsFilterOutput() GetAttachmentsFilterOutput {
	return i.ToGetAttachmentsFilterOutputWithContext(context.Background())
}

func (i GetAttachmentsFilterArgs) ToGetAttachmentsFilterOutputWithContext(ctx context.Context) GetAttachmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentsFilterOutput)
}

func (i GetAttachmentsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttachmentsFilter] {
	return pulumix.Output[GetAttachmentsFilter]{
		OutputState: i.ToGetAttachmentsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetAttachmentsFilterArrayInput is an input type that accepts GetAttachmentsFilterArray and GetAttachmentsFilterArrayOutput values.
// You can construct a concrete instance of `GetAttachmentsFilterArrayInput` via:
//
//	GetAttachmentsFilterArray{ GetAttachmentsFilterArgs{...} }
type GetAttachmentsFilterArrayInput interface {
	pulumi.Input

	ToGetAttachmentsFilterArrayOutput() GetAttachmentsFilterArrayOutput
	ToGetAttachmentsFilterArrayOutputWithContext(context.Context) GetAttachmentsFilterArrayOutput
}

type GetAttachmentsFilterArray []GetAttachmentsFilterInput

func (GetAttachmentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentsFilter)(nil)).Elem()
}

func (i GetAttachmentsFilterArray) ToGetAttachmentsFilterArrayOutput() GetAttachmentsFilterArrayOutput {
	return i.ToGetAttachmentsFilterArrayOutputWithContext(context.Background())
}

func (i GetAttachmentsFilterArray) ToGetAttachmentsFilterArrayOutputWithContext(ctx context.Context) GetAttachmentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentsFilterArrayOutput)
}

func (i GetAttachmentsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttachmentsFilter] {
	return pulumix.Output[[]GetAttachmentsFilter]{
		OutputState: i.ToGetAttachmentsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttachmentsFilterOutput struct{ *pulumi.OutputState }

func (GetAttachmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsFilter)(nil)).Elem()
}

func (o GetAttachmentsFilterOutput) ToGetAttachmentsFilterOutput() GetAttachmentsFilterOutput {
	return o
}

func (o GetAttachmentsFilterOutput) ToGetAttachmentsFilterOutputWithContext(ctx context.Context) GetAttachmentsFilterOutput {
	return o
}

func (o GetAttachmentsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttachmentsFilter] {
	return pulumix.Output[GetAttachmentsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html)
func (o GetAttachmentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetAttachmentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttachmentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAttachmentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAttachmentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentsFilter)(nil)).Elem()
}

func (o GetAttachmentsFilterArrayOutput) ToGetAttachmentsFilterArrayOutput() GetAttachmentsFilterArrayOutput {
	return o
}

func (o GetAttachmentsFilterArrayOutput) ToGetAttachmentsFilterArrayOutputWithContext(ctx context.Context) GetAttachmentsFilterArrayOutput {
	return o
}

func (o GetAttachmentsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttachmentsFilter] {
	return pulumix.Output[[]GetAttachmentsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetAttachmentsFilterArrayOutput) Index(i pulumi.IntInput) GetAttachmentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttachmentsFilter {
		return vs[0].([]GetAttachmentsFilter)[vs[1].(int)]
	}).(GetAttachmentsFilterOutput)
}

type GetConnectFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetConnectFilterInput is an input type that accepts GetConnectFilterArgs and GetConnectFilterOutput values.
// You can construct a concrete instance of `GetConnectFilterInput` via:
//
//	GetConnectFilterArgs{...}
type GetConnectFilterInput interface {
	pulumi.Input

	ToGetConnectFilterOutput() GetConnectFilterOutput
	ToGetConnectFilterOutputWithContext(context.Context) GetConnectFilterOutput
}

type GetConnectFilterArgs struct {
	// Name of the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConnectFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectFilter)(nil)).Elem()
}

func (i GetConnectFilterArgs) ToGetConnectFilterOutput() GetConnectFilterOutput {
	return i.ToGetConnectFilterOutputWithContext(context.Background())
}

func (i GetConnectFilterArgs) ToGetConnectFilterOutputWithContext(ctx context.Context) GetConnectFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectFilterOutput)
}

func (i GetConnectFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectFilter] {
	return pulumix.Output[GetConnectFilter]{
		OutputState: i.ToGetConnectFilterOutputWithContext(ctx).OutputState,
	}
}

// GetConnectFilterArrayInput is an input type that accepts GetConnectFilterArray and GetConnectFilterArrayOutput values.
// You can construct a concrete instance of `GetConnectFilterArrayInput` via:
//
//	GetConnectFilterArray{ GetConnectFilterArgs{...} }
type GetConnectFilterArrayInput interface {
	pulumi.Input

	ToGetConnectFilterArrayOutput() GetConnectFilterArrayOutput
	ToGetConnectFilterArrayOutputWithContext(context.Context) GetConnectFilterArrayOutput
}

type GetConnectFilterArray []GetConnectFilterInput

func (GetConnectFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectFilter)(nil)).Elem()
}

func (i GetConnectFilterArray) ToGetConnectFilterArrayOutput() GetConnectFilterArrayOutput {
	return i.ToGetConnectFilterArrayOutputWithContext(context.Background())
}

func (i GetConnectFilterArray) ToGetConnectFilterArrayOutputWithContext(ctx context.Context) GetConnectFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectFilterArrayOutput)
}

func (i GetConnectFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectFilter] {
	return pulumix.Output[[]GetConnectFilter]{
		OutputState: i.ToGetConnectFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectFilterOutput struct{ *pulumi.OutputState }

func (GetConnectFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectFilter)(nil)).Elem()
}

func (o GetConnectFilterOutput) ToGetConnectFilterOutput() GetConnectFilterOutput {
	return o
}

func (o GetConnectFilterOutput) ToGetConnectFilterOutputWithContext(ctx context.Context) GetConnectFilterOutput {
	return o
}

func (o GetConnectFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectFilter] {
	return pulumix.Output[GetConnectFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetConnectFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetConnectFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConnectFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConnectFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectFilter)(nil)).Elem()
}

func (o GetConnectFilterArrayOutput) ToGetConnectFilterArrayOutput() GetConnectFilterArrayOutput {
	return o
}

func (o GetConnectFilterArrayOutput) ToGetConnectFilterArrayOutputWithContext(ctx context.Context) GetConnectFilterArrayOutput {
	return o
}

func (o GetConnectFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectFilter] {
	return pulumix.Output[[]GetConnectFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectFilterArrayOutput) Index(i pulumi.IntInput) GetConnectFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectFilter {
		return vs[0].([]GetConnectFilter)[vs[1].(int)]
	}).(GetConnectFilterOutput)
}

type GetConnectPeerFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetConnectPeerFilterInput is an input type that accepts GetConnectPeerFilterArgs and GetConnectPeerFilterOutput values.
// You can construct a concrete instance of `GetConnectPeerFilterInput` via:
//
//	GetConnectPeerFilterArgs{...}
type GetConnectPeerFilterInput interface {
	pulumi.Input

	ToGetConnectPeerFilterOutput() GetConnectPeerFilterOutput
	ToGetConnectPeerFilterOutputWithContext(context.Context) GetConnectPeerFilterOutput
}

type GetConnectPeerFilterArgs struct {
	// Name of the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConnectPeerFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectPeerFilter)(nil)).Elem()
}

func (i GetConnectPeerFilterArgs) ToGetConnectPeerFilterOutput() GetConnectPeerFilterOutput {
	return i.ToGetConnectPeerFilterOutputWithContext(context.Background())
}

func (i GetConnectPeerFilterArgs) ToGetConnectPeerFilterOutputWithContext(ctx context.Context) GetConnectPeerFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectPeerFilterOutput)
}

func (i GetConnectPeerFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectPeerFilter] {
	return pulumix.Output[GetConnectPeerFilter]{
		OutputState: i.ToGetConnectPeerFilterOutputWithContext(ctx).OutputState,
	}
}

// GetConnectPeerFilterArrayInput is an input type that accepts GetConnectPeerFilterArray and GetConnectPeerFilterArrayOutput values.
// You can construct a concrete instance of `GetConnectPeerFilterArrayInput` via:
//
//	GetConnectPeerFilterArray{ GetConnectPeerFilterArgs{...} }
type GetConnectPeerFilterArrayInput interface {
	pulumi.Input

	ToGetConnectPeerFilterArrayOutput() GetConnectPeerFilterArrayOutput
	ToGetConnectPeerFilterArrayOutputWithContext(context.Context) GetConnectPeerFilterArrayOutput
}

type GetConnectPeerFilterArray []GetConnectPeerFilterInput

func (GetConnectPeerFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectPeerFilter)(nil)).Elem()
}

func (i GetConnectPeerFilterArray) ToGetConnectPeerFilterArrayOutput() GetConnectPeerFilterArrayOutput {
	return i.ToGetConnectPeerFilterArrayOutputWithContext(context.Background())
}

func (i GetConnectPeerFilterArray) ToGetConnectPeerFilterArrayOutputWithContext(ctx context.Context) GetConnectPeerFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectPeerFilterArrayOutput)
}

func (i GetConnectPeerFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectPeerFilter] {
	return pulumix.Output[[]GetConnectPeerFilter]{
		OutputState: i.ToGetConnectPeerFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectPeerFilterOutput struct{ *pulumi.OutputState }

func (GetConnectPeerFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectPeerFilter)(nil)).Elem()
}

func (o GetConnectPeerFilterOutput) ToGetConnectPeerFilterOutput() GetConnectPeerFilterOutput {
	return o
}

func (o GetConnectPeerFilterOutput) ToGetConnectPeerFilterOutputWithContext(ctx context.Context) GetConnectPeerFilterOutput {
	return o
}

func (o GetConnectPeerFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectPeerFilter] {
	return pulumix.Output[GetConnectPeerFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetConnectPeerFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectPeerFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetConnectPeerFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectPeerFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConnectPeerFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConnectPeerFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectPeerFilter)(nil)).Elem()
}

func (o GetConnectPeerFilterArrayOutput) ToGetConnectPeerFilterArrayOutput() GetConnectPeerFilterArrayOutput {
	return o
}

func (o GetConnectPeerFilterArrayOutput) ToGetConnectPeerFilterArrayOutputWithContext(ctx context.Context) GetConnectPeerFilterArrayOutput {
	return o
}

func (o GetConnectPeerFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectPeerFilter] {
	return pulumix.Output[[]GetConnectPeerFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectPeerFilterArrayOutput) Index(i pulumi.IntInput) GetConnectPeerFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectPeerFilter {
		return vs[0].([]GetConnectPeerFilter)[vs[1].(int)]
	}).(GetConnectPeerFilterOutput)
}

type GetDirectConnectGatewayAttachmentFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetDirectConnectGatewayAttachmentFilterInput is an input type that accepts GetDirectConnectGatewayAttachmentFilterArgs and GetDirectConnectGatewayAttachmentFilterOutput values.
// You can construct a concrete instance of `GetDirectConnectGatewayAttachmentFilterInput` via:
//
//	GetDirectConnectGatewayAttachmentFilterArgs{...}
type GetDirectConnectGatewayAttachmentFilterInput interface {
	pulumi.Input

	ToGetDirectConnectGatewayAttachmentFilterOutput() GetDirectConnectGatewayAttachmentFilterOutput
	ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(context.Context) GetDirectConnectGatewayAttachmentFilterOutput
}

type GetDirectConnectGatewayAttachmentFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDirectConnectGatewayAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectConnectGatewayAttachmentFilter)(nil)).Elem()
}

func (i GetDirectConnectGatewayAttachmentFilterArgs) ToGetDirectConnectGatewayAttachmentFilterOutput() GetDirectConnectGatewayAttachmentFilterOutput {
	return i.ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(context.Background())
}

func (i GetDirectConnectGatewayAttachmentFilterArgs) ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(ctx context.Context) GetDirectConnectGatewayAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectConnectGatewayAttachmentFilterOutput)
}

func (i GetDirectConnectGatewayAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectConnectGatewayAttachmentFilter] {
	return pulumix.Output[GetDirectConnectGatewayAttachmentFilter]{
		OutputState: i.ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(ctx).OutputState,
	}
}

// GetDirectConnectGatewayAttachmentFilterArrayInput is an input type that accepts GetDirectConnectGatewayAttachmentFilterArray and GetDirectConnectGatewayAttachmentFilterArrayOutput values.
// You can construct a concrete instance of `GetDirectConnectGatewayAttachmentFilterArrayInput` via:
//
//	GetDirectConnectGatewayAttachmentFilterArray{ GetDirectConnectGatewayAttachmentFilterArgs{...} }
type GetDirectConnectGatewayAttachmentFilterArrayInput interface {
	pulumi.Input

	ToGetDirectConnectGatewayAttachmentFilterArrayOutput() GetDirectConnectGatewayAttachmentFilterArrayOutput
	ToGetDirectConnectGatewayAttachmentFilterArrayOutputWithContext(context.Context) GetDirectConnectGatewayAttachmentFilterArrayOutput
}

type GetDirectConnectGatewayAttachmentFilterArray []GetDirectConnectGatewayAttachmentFilterInput

func (GetDirectConnectGatewayAttachmentFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectConnectGatewayAttachmentFilter)(nil)).Elem()
}

func (i GetDirectConnectGatewayAttachmentFilterArray) ToGetDirectConnectGatewayAttachmentFilterArrayOutput() GetDirectConnectGatewayAttachmentFilterArrayOutput {
	return i.ToGetDirectConnectGatewayAttachmentFilterArrayOutputWithContext(context.Background())
}

func (i GetDirectConnectGatewayAttachmentFilterArray) ToGetDirectConnectGatewayAttachmentFilterArrayOutputWithContext(ctx context.Context) GetDirectConnectGatewayAttachmentFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectConnectGatewayAttachmentFilterArrayOutput)
}

func (i GetDirectConnectGatewayAttachmentFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectConnectGatewayAttachmentFilter] {
	return pulumix.Output[[]GetDirectConnectGatewayAttachmentFilter]{
		OutputState: i.ToGetDirectConnectGatewayAttachmentFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectConnectGatewayAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetDirectConnectGatewayAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectConnectGatewayAttachmentFilter)(nil)).Elem()
}

func (o GetDirectConnectGatewayAttachmentFilterOutput) ToGetDirectConnectGatewayAttachmentFilterOutput() GetDirectConnectGatewayAttachmentFilterOutput {
	return o
}

func (o GetDirectConnectGatewayAttachmentFilterOutput) ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(ctx context.Context) GetDirectConnectGatewayAttachmentFilterOutput {
	return o
}

func (o GetDirectConnectGatewayAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectConnectGatewayAttachmentFilter] {
	return pulumix.Output[GetDirectConnectGatewayAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
func (o GetDirectConnectGatewayAttachmentFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectConnectGatewayAttachmentFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetDirectConnectGatewayAttachmentFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectConnectGatewayAttachmentFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDirectConnectGatewayAttachmentFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDirectConnectGatewayAttachmentFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectConnectGatewayAttachmentFilter)(nil)).Elem()
}

func (o GetDirectConnectGatewayAttachmentFilterArrayOutput) ToGetDirectConnectGatewayAttachmentFilterArrayOutput() GetDirectConnectGatewayAttachmentFilterArrayOutput {
	return o
}

func (o GetDirectConnectGatewayAttachmentFilterArrayOutput) ToGetDirectConnectGatewayAttachmentFilterArrayOutputWithContext(ctx context.Context) GetDirectConnectGatewayAttachmentFilterArrayOutput {
	return o
}

func (o GetDirectConnectGatewayAttachmentFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectConnectGatewayAttachmentFilter] {
	return pulumix.Output[[]GetDirectConnectGatewayAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectConnectGatewayAttachmentFilterArrayOutput) Index(i pulumi.IntInput) GetDirectConnectGatewayAttachmentFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectConnectGatewayAttachmentFilter {
		return vs[0].([]GetDirectConnectGatewayAttachmentFilter)[vs[1].(int)]
	}).(GetDirectConnectGatewayAttachmentFilterOutput)
}

type GetMulticastDomainAssociationType struct {
	// The ID of the subnet associated with the transit gateway multicast domain.
	SubnetId string `pulumi:"subnetId"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
}

// GetMulticastDomainAssociationTypeInput is an input type that accepts GetMulticastDomainAssociationTypeArgs and GetMulticastDomainAssociationTypeOutput values.
// You can construct a concrete instance of `GetMulticastDomainAssociationTypeInput` via:
//
//	GetMulticastDomainAssociationTypeArgs{...}
type GetMulticastDomainAssociationTypeInput interface {
	pulumi.Input

	ToGetMulticastDomainAssociationTypeOutput() GetMulticastDomainAssociationTypeOutput
	ToGetMulticastDomainAssociationTypeOutputWithContext(context.Context) GetMulticastDomainAssociationTypeOutput
}

type GetMulticastDomainAssociationTypeArgs struct {
	// The ID of the subnet associated with the transit gateway multicast domain.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId pulumi.StringInput `pulumi:"transitGatewayAttachmentId"`
}

func (GetMulticastDomainAssociationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainAssociationType)(nil)).Elem()
}

func (i GetMulticastDomainAssociationTypeArgs) ToGetMulticastDomainAssociationTypeOutput() GetMulticastDomainAssociationTypeOutput {
	return i.ToGetMulticastDomainAssociationTypeOutputWithContext(context.Background())
}

func (i GetMulticastDomainAssociationTypeArgs) ToGetMulticastDomainAssociationTypeOutputWithContext(ctx context.Context) GetMulticastDomainAssociationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainAssociationTypeOutput)
}

func (i GetMulticastDomainAssociationTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainAssociationType] {
	return pulumix.Output[GetMulticastDomainAssociationType]{
		OutputState: i.ToGetMulticastDomainAssociationTypeOutputWithContext(ctx).OutputState,
	}
}

// GetMulticastDomainAssociationTypeArrayInput is an input type that accepts GetMulticastDomainAssociationTypeArray and GetMulticastDomainAssociationTypeArrayOutput values.
// You can construct a concrete instance of `GetMulticastDomainAssociationTypeArrayInput` via:
//
//	GetMulticastDomainAssociationTypeArray{ GetMulticastDomainAssociationTypeArgs{...} }
type GetMulticastDomainAssociationTypeArrayInput interface {
	pulumi.Input

	ToGetMulticastDomainAssociationTypeArrayOutput() GetMulticastDomainAssociationTypeArrayOutput
	ToGetMulticastDomainAssociationTypeArrayOutputWithContext(context.Context) GetMulticastDomainAssociationTypeArrayOutput
}

type GetMulticastDomainAssociationTypeArray []GetMulticastDomainAssociationTypeInput

func (GetMulticastDomainAssociationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainAssociationType)(nil)).Elem()
}

func (i GetMulticastDomainAssociationTypeArray) ToGetMulticastDomainAssociationTypeArrayOutput() GetMulticastDomainAssociationTypeArrayOutput {
	return i.ToGetMulticastDomainAssociationTypeArrayOutputWithContext(context.Background())
}

func (i GetMulticastDomainAssociationTypeArray) ToGetMulticastDomainAssociationTypeArrayOutputWithContext(ctx context.Context) GetMulticastDomainAssociationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainAssociationTypeArrayOutput)
}

func (i GetMulticastDomainAssociationTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainAssociationType] {
	return pulumix.Output[[]GetMulticastDomainAssociationType]{
		OutputState: i.ToGetMulticastDomainAssociationTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetMulticastDomainAssociationTypeOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainAssociationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainAssociationType)(nil)).Elem()
}

func (o GetMulticastDomainAssociationTypeOutput) ToGetMulticastDomainAssociationTypeOutput() GetMulticastDomainAssociationTypeOutput {
	return o
}

func (o GetMulticastDomainAssociationTypeOutput) ToGetMulticastDomainAssociationTypeOutputWithContext(ctx context.Context) GetMulticastDomainAssociationTypeOutput {
	return o
}

func (o GetMulticastDomainAssociationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainAssociationType] {
	return pulumix.Output[GetMulticastDomainAssociationType]{
		OutputState: o.OutputState,
	}
}

// The ID of the subnet associated with the transit gateway multicast domain.
func (o GetMulticastDomainAssociationTypeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastDomainAssociationType) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The ID of the transit gateway attachment.
func (o GetMulticastDomainAssociationTypeOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastDomainAssociationType) string { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

type GetMulticastDomainAssociationTypeArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainAssociationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainAssociationType)(nil)).Elem()
}

func (o GetMulticastDomainAssociationTypeArrayOutput) ToGetMulticastDomainAssociationTypeArrayOutput() GetMulticastDomainAssociationTypeArrayOutput {
	return o
}

func (o GetMulticastDomainAssociationTypeArrayOutput) ToGetMulticastDomainAssociationTypeArrayOutputWithContext(ctx context.Context) GetMulticastDomainAssociationTypeArrayOutput {
	return o
}

func (o GetMulticastDomainAssociationTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainAssociationType] {
	return pulumix.Output[[]GetMulticastDomainAssociationType]{
		OutputState: o.OutputState,
	}
}

func (o GetMulticastDomainAssociationTypeArrayOutput) Index(i pulumi.IntInput) GetMulticastDomainAssociationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastDomainAssociationType {
		return vs[0].([]GetMulticastDomainAssociationType)[vs[1].(int)]
	}).(GetMulticastDomainAssociationTypeOutput)
}

type GetMulticastDomainFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. A multicast domain will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetMulticastDomainFilterInput is an input type that accepts GetMulticastDomainFilterArgs and GetMulticastDomainFilterOutput values.
// You can construct a concrete instance of `GetMulticastDomainFilterInput` via:
//
//	GetMulticastDomainFilterArgs{...}
type GetMulticastDomainFilterInput interface {
	pulumi.Input

	ToGetMulticastDomainFilterOutput() GetMulticastDomainFilterOutput
	ToGetMulticastDomainFilterOutputWithContext(context.Context) GetMulticastDomainFilterOutput
}

type GetMulticastDomainFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field. A multicast domain will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetMulticastDomainFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainFilter)(nil)).Elem()
}

func (i GetMulticastDomainFilterArgs) ToGetMulticastDomainFilterOutput() GetMulticastDomainFilterOutput {
	return i.ToGetMulticastDomainFilterOutputWithContext(context.Background())
}

func (i GetMulticastDomainFilterArgs) ToGetMulticastDomainFilterOutputWithContext(ctx context.Context) GetMulticastDomainFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainFilterOutput)
}

func (i GetMulticastDomainFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainFilter] {
	return pulumix.Output[GetMulticastDomainFilter]{
		OutputState: i.ToGetMulticastDomainFilterOutputWithContext(ctx).OutputState,
	}
}

// GetMulticastDomainFilterArrayInput is an input type that accepts GetMulticastDomainFilterArray and GetMulticastDomainFilterArrayOutput values.
// You can construct a concrete instance of `GetMulticastDomainFilterArrayInput` via:
//
//	GetMulticastDomainFilterArray{ GetMulticastDomainFilterArgs{...} }
type GetMulticastDomainFilterArrayInput interface {
	pulumi.Input

	ToGetMulticastDomainFilterArrayOutput() GetMulticastDomainFilterArrayOutput
	ToGetMulticastDomainFilterArrayOutputWithContext(context.Context) GetMulticastDomainFilterArrayOutput
}

type GetMulticastDomainFilterArray []GetMulticastDomainFilterInput

func (GetMulticastDomainFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainFilter)(nil)).Elem()
}

func (i GetMulticastDomainFilterArray) ToGetMulticastDomainFilterArrayOutput() GetMulticastDomainFilterArrayOutput {
	return i.ToGetMulticastDomainFilterArrayOutputWithContext(context.Background())
}

func (i GetMulticastDomainFilterArray) ToGetMulticastDomainFilterArrayOutputWithContext(ctx context.Context) GetMulticastDomainFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainFilterArrayOutput)
}

func (i GetMulticastDomainFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainFilter] {
	return pulumix.Output[[]GetMulticastDomainFilter]{
		OutputState: i.ToGetMulticastDomainFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetMulticastDomainFilterOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainFilter)(nil)).Elem()
}

func (o GetMulticastDomainFilterOutput) ToGetMulticastDomainFilterOutput() GetMulticastDomainFilterOutput {
	return o
}

func (o GetMulticastDomainFilterOutput) ToGetMulticastDomainFilterOutputWithContext(ctx context.Context) GetMulticastDomainFilterOutput {
	return o
}

func (o GetMulticastDomainFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainFilter] {
	return pulumix.Output[GetMulticastDomainFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html).
func (o GetMulticastDomainFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastDomainFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field. A multicast domain will be selected if any one of the given values matches.
func (o GetMulticastDomainFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMulticastDomainFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetMulticastDomainFilterArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainFilter)(nil)).Elem()
}

func (o GetMulticastDomainFilterArrayOutput) ToGetMulticastDomainFilterArrayOutput() GetMulticastDomainFilterArrayOutput {
	return o
}

func (o GetMulticastDomainFilterArrayOutput) ToGetMulticastDomainFilterArrayOutputWithContext(ctx context.Context) GetMulticastDomainFilterArrayOutput {
	return o
}

func (o GetMulticastDomainFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainFilter] {
	return pulumix.Output[[]GetMulticastDomainFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetMulticastDomainFilterArrayOutput) Index(i pulumi.IntInput) GetMulticastDomainFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastDomainFilter {
		return vs[0].([]GetMulticastDomainFilter)[vs[1].(int)]
	}).(GetMulticastDomainFilterOutput)
}

type GetMulticastDomainMember struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

// GetMulticastDomainMemberInput is an input type that accepts GetMulticastDomainMemberArgs and GetMulticastDomainMemberOutput values.
// You can construct a concrete instance of `GetMulticastDomainMemberInput` via:
//
//	GetMulticastDomainMemberArgs{...}
type GetMulticastDomainMemberInput interface {
	pulumi.Input

	ToGetMulticastDomainMemberOutput() GetMulticastDomainMemberOutput
	ToGetMulticastDomainMemberOutputWithContext(context.Context) GetMulticastDomainMemberOutput
}

type GetMulticastDomainMemberArgs struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress pulumi.StringInput `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (GetMulticastDomainMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainMember)(nil)).Elem()
}

func (i GetMulticastDomainMemberArgs) ToGetMulticastDomainMemberOutput() GetMulticastDomainMemberOutput {
	return i.ToGetMulticastDomainMemberOutputWithContext(context.Background())
}

func (i GetMulticastDomainMemberArgs) ToGetMulticastDomainMemberOutputWithContext(ctx context.Context) GetMulticastDomainMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainMemberOutput)
}

func (i GetMulticastDomainMemberArgs) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainMember] {
	return pulumix.Output[GetMulticastDomainMember]{
		OutputState: i.ToGetMulticastDomainMemberOutputWithContext(ctx).OutputState,
	}
}

// GetMulticastDomainMemberArrayInput is an input type that accepts GetMulticastDomainMemberArray and GetMulticastDomainMemberArrayOutput values.
// You can construct a concrete instance of `GetMulticastDomainMemberArrayInput` via:
//
//	GetMulticastDomainMemberArray{ GetMulticastDomainMemberArgs{...} }
type GetMulticastDomainMemberArrayInput interface {
	pulumi.Input

	ToGetMulticastDomainMemberArrayOutput() GetMulticastDomainMemberArrayOutput
	ToGetMulticastDomainMemberArrayOutputWithContext(context.Context) GetMulticastDomainMemberArrayOutput
}

type GetMulticastDomainMemberArray []GetMulticastDomainMemberInput

func (GetMulticastDomainMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainMember)(nil)).Elem()
}

func (i GetMulticastDomainMemberArray) ToGetMulticastDomainMemberArrayOutput() GetMulticastDomainMemberArrayOutput {
	return i.ToGetMulticastDomainMemberArrayOutputWithContext(context.Background())
}

func (i GetMulticastDomainMemberArray) ToGetMulticastDomainMemberArrayOutputWithContext(ctx context.Context) GetMulticastDomainMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainMemberArrayOutput)
}

func (i GetMulticastDomainMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainMember] {
	return pulumix.Output[[]GetMulticastDomainMember]{
		OutputState: i.ToGetMulticastDomainMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type GetMulticastDomainMemberOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainMember)(nil)).Elem()
}

func (o GetMulticastDomainMemberOutput) ToGetMulticastDomainMemberOutput() GetMulticastDomainMemberOutput {
	return o
}

func (o GetMulticastDomainMemberOutput) ToGetMulticastDomainMemberOutputWithContext(ctx context.Context) GetMulticastDomainMemberOutput {
	return o
}

func (o GetMulticastDomainMemberOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainMember] {
	return pulumix.Output[GetMulticastDomainMember]{
		OutputState: o.OutputState,
	}
}

// The IP address assigned to the transit gateway multicast group.
func (o GetMulticastDomainMemberOutput) GroupIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastDomainMember) string { return v.GroupIpAddress }).(pulumi.StringOutput)
}

// The group members' network interface ID.
func (o GetMulticastDomainMemberOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastDomainMember) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type GetMulticastDomainMemberArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainMember)(nil)).Elem()
}

func (o GetMulticastDomainMemberArrayOutput) ToGetMulticastDomainMemberArrayOutput() GetMulticastDomainMemberArrayOutput {
	return o
}

func (o GetMulticastDomainMemberArrayOutput) ToGetMulticastDomainMemberArrayOutputWithContext(ctx context.Context) GetMulticastDomainMemberArrayOutput {
	return o
}

func (o GetMulticastDomainMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainMember] {
	return pulumix.Output[[]GetMulticastDomainMember]{
		OutputState: o.OutputState,
	}
}

func (o GetMulticastDomainMemberArrayOutput) Index(i pulumi.IntInput) GetMulticastDomainMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastDomainMember {
		return vs[0].([]GetMulticastDomainMember)[vs[1].(int)]
	}).(GetMulticastDomainMemberOutput)
}

type GetMulticastDomainSource struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

// GetMulticastDomainSourceInput is an input type that accepts GetMulticastDomainSourceArgs and GetMulticastDomainSourceOutput values.
// You can construct a concrete instance of `GetMulticastDomainSourceInput` via:
//
//	GetMulticastDomainSourceArgs{...}
type GetMulticastDomainSourceInput interface {
	pulumi.Input

	ToGetMulticastDomainSourceOutput() GetMulticastDomainSourceOutput
	ToGetMulticastDomainSourceOutputWithContext(context.Context) GetMulticastDomainSourceOutput
}

type GetMulticastDomainSourceArgs struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress pulumi.StringInput `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (GetMulticastDomainSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainSource)(nil)).Elem()
}

func (i GetMulticastDomainSourceArgs) ToGetMulticastDomainSourceOutput() GetMulticastDomainSourceOutput {
	return i.ToGetMulticastDomainSourceOutputWithContext(context.Background())
}

func (i GetMulticastDomainSourceArgs) ToGetMulticastDomainSourceOutputWithContext(ctx context.Context) GetMulticastDomainSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainSourceOutput)
}

func (i GetMulticastDomainSourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainSource] {
	return pulumix.Output[GetMulticastDomainSource]{
		OutputState: i.ToGetMulticastDomainSourceOutputWithContext(ctx).OutputState,
	}
}

// GetMulticastDomainSourceArrayInput is an input type that accepts GetMulticastDomainSourceArray and GetMulticastDomainSourceArrayOutput values.
// You can construct a concrete instance of `GetMulticastDomainSourceArrayInput` via:
//
//	GetMulticastDomainSourceArray{ GetMulticastDomainSourceArgs{...} }
type GetMulticastDomainSourceArrayInput interface {
	pulumi.Input

	ToGetMulticastDomainSourceArrayOutput() GetMulticastDomainSourceArrayOutput
	ToGetMulticastDomainSourceArrayOutputWithContext(context.Context) GetMulticastDomainSourceArrayOutput
}

type GetMulticastDomainSourceArray []GetMulticastDomainSourceInput

func (GetMulticastDomainSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainSource)(nil)).Elem()
}

func (i GetMulticastDomainSourceArray) ToGetMulticastDomainSourceArrayOutput() GetMulticastDomainSourceArrayOutput {
	return i.ToGetMulticastDomainSourceArrayOutputWithContext(context.Background())
}

func (i GetMulticastDomainSourceArray) ToGetMulticastDomainSourceArrayOutputWithContext(ctx context.Context) GetMulticastDomainSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainSourceArrayOutput)
}

func (i GetMulticastDomainSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainSource] {
	return pulumix.Output[[]GetMulticastDomainSource]{
		OutputState: i.ToGetMulticastDomainSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetMulticastDomainSourceOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainSource)(nil)).Elem()
}

func (o GetMulticastDomainSourceOutput) ToGetMulticastDomainSourceOutput() GetMulticastDomainSourceOutput {
	return o
}

func (o GetMulticastDomainSourceOutput) ToGetMulticastDomainSourceOutputWithContext(ctx context.Context) GetMulticastDomainSourceOutput {
	return o
}

func (o GetMulticastDomainSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainSource] {
	return pulumix.Output[GetMulticastDomainSource]{
		OutputState: o.OutputState,
	}
}

// The IP address assigned to the transit gateway multicast group.
func (o GetMulticastDomainSourceOutput) GroupIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastDomainSource) string { return v.GroupIpAddress }).(pulumi.StringOutput)
}

// The group members' network interface ID.
func (o GetMulticastDomainSourceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMulticastDomainSource) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type GetMulticastDomainSourceArrayOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMulticastDomainSource)(nil)).Elem()
}

func (o GetMulticastDomainSourceArrayOutput) ToGetMulticastDomainSourceArrayOutput() GetMulticastDomainSourceArrayOutput {
	return o
}

func (o GetMulticastDomainSourceArrayOutput) ToGetMulticastDomainSourceArrayOutputWithContext(ctx context.Context) GetMulticastDomainSourceArrayOutput {
	return o
}

func (o GetMulticastDomainSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetMulticastDomainSource] {
	return pulumix.Output[[]GetMulticastDomainSource]{
		OutputState: o.OutputState,
	}
}

func (o GetMulticastDomainSourceArrayOutput) Index(i pulumi.IntInput) GetMulticastDomainSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMulticastDomainSource {
		return vs[0].([]GetMulticastDomainSource)[vs[1].(int)]
	}).(GetMulticastDomainSourceOutput)
}

type GetPeeringAttachmentFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetPeeringAttachmentFilterInput is an input type that accepts GetPeeringAttachmentFilterArgs and GetPeeringAttachmentFilterOutput values.
// You can construct a concrete instance of `GetPeeringAttachmentFilterInput` via:
//
//	GetPeeringAttachmentFilterArgs{...}
type GetPeeringAttachmentFilterInput interface {
	pulumi.Input

	ToGetPeeringAttachmentFilterOutput() GetPeeringAttachmentFilterOutput
	ToGetPeeringAttachmentFilterOutputWithContext(context.Context) GetPeeringAttachmentFilterOutput
}

type GetPeeringAttachmentFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPeeringAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAttachmentFilter)(nil)).Elem()
}

func (i GetPeeringAttachmentFilterArgs) ToGetPeeringAttachmentFilterOutput() GetPeeringAttachmentFilterOutput {
	return i.ToGetPeeringAttachmentFilterOutputWithContext(context.Background())
}

func (i GetPeeringAttachmentFilterArgs) ToGetPeeringAttachmentFilterOutputWithContext(ctx context.Context) GetPeeringAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAttachmentFilterOutput)
}

func (i GetPeeringAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetPeeringAttachmentFilter] {
	return pulumix.Output[GetPeeringAttachmentFilter]{
		OutputState: i.ToGetPeeringAttachmentFilterOutputWithContext(ctx).OutputState,
	}
}

// GetPeeringAttachmentFilterArrayInput is an input type that accepts GetPeeringAttachmentFilterArray and GetPeeringAttachmentFilterArrayOutput values.
// You can construct a concrete instance of `GetPeeringAttachmentFilterArrayInput` via:
//
//	GetPeeringAttachmentFilterArray{ GetPeeringAttachmentFilterArgs{...} }
type GetPeeringAttachmentFilterArrayInput interface {
	pulumi.Input

	ToGetPeeringAttachmentFilterArrayOutput() GetPeeringAttachmentFilterArrayOutput
	ToGetPeeringAttachmentFilterArrayOutputWithContext(context.Context) GetPeeringAttachmentFilterArrayOutput
}

type GetPeeringAttachmentFilterArray []GetPeeringAttachmentFilterInput

func (GetPeeringAttachmentFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAttachmentFilter)(nil)).Elem()
}

func (i GetPeeringAttachmentFilterArray) ToGetPeeringAttachmentFilterArrayOutput() GetPeeringAttachmentFilterArrayOutput {
	return i.ToGetPeeringAttachmentFilterArrayOutputWithContext(context.Background())
}

func (i GetPeeringAttachmentFilterArray) ToGetPeeringAttachmentFilterArrayOutputWithContext(ctx context.Context) GetPeeringAttachmentFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAttachmentFilterArrayOutput)
}

func (i GetPeeringAttachmentFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPeeringAttachmentFilter] {
	return pulumix.Output[[]GetPeeringAttachmentFilter]{
		OutputState: i.ToGetPeeringAttachmentFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPeeringAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetPeeringAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAttachmentFilter)(nil)).Elem()
}

func (o GetPeeringAttachmentFilterOutput) ToGetPeeringAttachmentFilterOutput() GetPeeringAttachmentFilterOutput {
	return o
}

func (o GetPeeringAttachmentFilterOutput) ToGetPeeringAttachmentFilterOutputWithContext(ctx context.Context) GetPeeringAttachmentFilterOutput {
	return o
}

func (o GetPeeringAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetPeeringAttachmentFilter] {
	return pulumix.Output[GetPeeringAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).
func (o GetPeeringAttachmentFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAttachmentFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.
func (o GetPeeringAttachmentFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringAttachmentFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPeeringAttachmentFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringAttachmentFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAttachmentFilter)(nil)).Elem()
}

func (o GetPeeringAttachmentFilterArrayOutput) ToGetPeeringAttachmentFilterArrayOutput() GetPeeringAttachmentFilterArrayOutput {
	return o
}

func (o GetPeeringAttachmentFilterArrayOutput) ToGetPeeringAttachmentFilterArrayOutputWithContext(ctx context.Context) GetPeeringAttachmentFilterArrayOutput {
	return o
}

func (o GetPeeringAttachmentFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPeeringAttachmentFilter] {
	return pulumix.Output[[]GetPeeringAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetPeeringAttachmentFilterArrayOutput) Index(i pulumi.IntInput) GetPeeringAttachmentFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringAttachmentFilter {
		return vs[0].([]GetPeeringAttachmentFilter)[vs[1].(int)]
	}).(GetPeeringAttachmentFilterOutput)
}

type GetRouteTableAssociationsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetRouteTableAssociationsFilterInput is an input type that accepts GetRouteTableAssociationsFilterArgs and GetRouteTableAssociationsFilterOutput values.
// You can construct a concrete instance of `GetRouteTableAssociationsFilterInput` via:
//
//	GetRouteTableAssociationsFilterArgs{...}
type GetRouteTableAssociationsFilterInput interface {
	pulumi.Input

	ToGetRouteTableAssociationsFilterOutput() GetRouteTableAssociationsFilterOutput
	ToGetRouteTableAssociationsFilterOutputWithContext(context.Context) GetRouteTableAssociationsFilterOutput
}

type GetRouteTableAssociationsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTableAssociationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationsFilter)(nil)).Elem()
}

func (i GetRouteTableAssociationsFilterArgs) ToGetRouteTableAssociationsFilterOutput() GetRouteTableAssociationsFilterOutput {
	return i.ToGetRouteTableAssociationsFilterOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationsFilterArgs) ToGetRouteTableAssociationsFilterOutputWithContext(ctx context.Context) GetRouteTableAssociationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationsFilterOutput)
}

func (i GetRouteTableAssociationsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableAssociationsFilter] {
	return pulumix.Output[GetRouteTableAssociationsFilter]{
		OutputState: i.ToGetRouteTableAssociationsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetRouteTableAssociationsFilterArrayInput is an input type that accepts GetRouteTableAssociationsFilterArray and GetRouteTableAssociationsFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTableAssociationsFilterArrayInput` via:
//
//	GetRouteTableAssociationsFilterArray{ GetRouteTableAssociationsFilterArgs{...} }
type GetRouteTableAssociationsFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTableAssociationsFilterArrayOutput() GetRouteTableAssociationsFilterArrayOutput
	ToGetRouteTableAssociationsFilterArrayOutputWithContext(context.Context) GetRouteTableAssociationsFilterArrayOutput
}

type GetRouteTableAssociationsFilterArray []GetRouteTableAssociationsFilterInput

func (GetRouteTableAssociationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociationsFilter)(nil)).Elem()
}

func (i GetRouteTableAssociationsFilterArray) ToGetRouteTableAssociationsFilterArrayOutput() GetRouteTableAssociationsFilterArrayOutput {
	return i.ToGetRouteTableAssociationsFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationsFilterArray) ToGetRouteTableAssociationsFilterArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationsFilterArrayOutput)
}

func (i GetRouteTableAssociationsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableAssociationsFilter] {
	return pulumix.Output[[]GetRouteTableAssociationsFilter]{
		OutputState: i.ToGetRouteTableAssociationsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRouteTableAssociationsFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationsFilter)(nil)).Elem()
}

func (o GetRouteTableAssociationsFilterOutput) ToGetRouteTableAssociationsFilterOutput() GetRouteTableAssociationsFilterOutput {
	return o
}

func (o GetRouteTableAssociationsFilterOutput) ToGetRouteTableAssociationsFilterOutputWithContext(ctx context.Context) GetRouteTableAssociationsFilterOutput {
	return o
}

func (o GetRouteTableAssociationsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableAssociationsFilter] {
	return pulumix.Output[GetRouteTableAssociationsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html).
func (o GetRouteTableAssociationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Transit Gateway Route Table will be selected if any one of the given values matches.
func (o GetRouteTableAssociationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTableAssociationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTableAssociationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociationsFilter)(nil)).Elem()
}

func (o GetRouteTableAssociationsFilterArrayOutput) ToGetRouteTableAssociationsFilterArrayOutput() GetRouteTableAssociationsFilterArrayOutput {
	return o
}

func (o GetRouteTableAssociationsFilterArrayOutput) ToGetRouteTableAssociationsFilterArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationsFilterArrayOutput {
	return o
}

func (o GetRouteTableAssociationsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableAssociationsFilter] {
	return pulumix.Output[[]GetRouteTableAssociationsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteTableAssociationsFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTableAssociationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableAssociationsFilter {
		return vs[0].([]GetRouteTableAssociationsFilter)[vs[1].(int)]
	}).(GetRouteTableAssociationsFilterOutput)
}

type GetRouteTableFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetRouteTableFilterInput is an input type that accepts GetRouteTableFilterArgs and GetRouteTableFilterOutput values.
// You can construct a concrete instance of `GetRouteTableFilterInput` via:
//
//	GetRouteTableFilterArgs{...}
type GetRouteTableFilterInput interface {
	pulumi.Input

	ToGetRouteTableFilterOutput() GetRouteTableFilterOutput
	ToGetRouteTableFilterOutputWithContext(context.Context) GetRouteTableFilterOutput
}

type GetRouteTableFilterArgs struct {
	// Name of the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTableFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return i.ToGetRouteTableFilterOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterOutput)
}

func (i GetRouteTableFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableFilter] {
	return pulumix.Output[GetRouteTableFilter]{
		OutputState: i.ToGetRouteTableFilterOutputWithContext(ctx).OutputState,
	}
}

// GetRouteTableFilterArrayInput is an input type that accepts GetRouteTableFilterArray and GetRouteTableFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTableFilterArrayInput` via:
//
//	GetRouteTableFilterArray{ GetRouteTableFilterArgs{...} }
type GetRouteTableFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput
	ToGetRouteTableFilterArrayOutputWithContext(context.Context) GetRouteTableFilterArrayOutput
}

type GetRouteTableFilterArray []GetRouteTableFilterInput

func (GetRouteTableFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return i.ToGetRouteTableFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterArrayOutput)
}

func (i GetRouteTableFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableFilter] {
	return pulumix.Output[[]GetRouteTableFilter]{
		OutputState: i.ToGetRouteTableFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRouteTableFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableFilter] {
	return pulumix.Output[GetRouteTableFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetRouteTableFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetRouteTableFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTableFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTableFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableFilter] {
	return pulumix.Output[[]GetRouteTableFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteTableFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTableFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableFilter {
		return vs[0].([]GetRouteTableFilter)[vs[1].(int)]
	}).(GetRouteTableFilterOutput)
}

type GetRouteTablePropagationsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetRouteTablePropagationsFilterInput is an input type that accepts GetRouteTablePropagationsFilterArgs and GetRouteTablePropagationsFilterOutput values.
// You can construct a concrete instance of `GetRouteTablePropagationsFilterInput` via:
//
//	GetRouteTablePropagationsFilterArgs{...}
type GetRouteTablePropagationsFilterInput interface {
	pulumi.Input

	ToGetRouteTablePropagationsFilterOutput() GetRouteTablePropagationsFilterOutput
	ToGetRouteTablePropagationsFilterOutputWithContext(context.Context) GetRouteTablePropagationsFilterOutput
}

type GetRouteTablePropagationsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTablePropagationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablePropagationsFilter)(nil)).Elem()
}

func (i GetRouteTablePropagationsFilterArgs) ToGetRouteTablePropagationsFilterOutput() GetRouteTablePropagationsFilterOutput {
	return i.ToGetRouteTablePropagationsFilterOutputWithContext(context.Background())
}

func (i GetRouteTablePropagationsFilterArgs) ToGetRouteTablePropagationsFilterOutputWithContext(ctx context.Context) GetRouteTablePropagationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablePropagationsFilterOutput)
}

func (i GetRouteTablePropagationsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetRouteTablePropagationsFilter] {
	return pulumix.Output[GetRouteTablePropagationsFilter]{
		OutputState: i.ToGetRouteTablePropagationsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetRouteTablePropagationsFilterArrayInput is an input type that accepts GetRouteTablePropagationsFilterArray and GetRouteTablePropagationsFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTablePropagationsFilterArrayInput` via:
//
//	GetRouteTablePropagationsFilterArray{ GetRouteTablePropagationsFilterArgs{...} }
type GetRouteTablePropagationsFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTablePropagationsFilterArrayOutput() GetRouteTablePropagationsFilterArrayOutput
	ToGetRouteTablePropagationsFilterArrayOutputWithContext(context.Context) GetRouteTablePropagationsFilterArrayOutput
}

type GetRouteTablePropagationsFilterArray []GetRouteTablePropagationsFilterInput

func (GetRouteTablePropagationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablePropagationsFilter)(nil)).Elem()
}

func (i GetRouteTablePropagationsFilterArray) ToGetRouteTablePropagationsFilterArrayOutput() GetRouteTablePropagationsFilterArrayOutput {
	return i.ToGetRouteTablePropagationsFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTablePropagationsFilterArray) ToGetRouteTablePropagationsFilterArrayOutputWithContext(ctx context.Context) GetRouteTablePropagationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablePropagationsFilterArrayOutput)
}

func (i GetRouteTablePropagationsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTablePropagationsFilter] {
	return pulumix.Output[[]GetRouteTablePropagationsFilter]{
		OutputState: i.ToGetRouteTablePropagationsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRouteTablePropagationsFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTablePropagationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablePropagationsFilter)(nil)).Elem()
}

func (o GetRouteTablePropagationsFilterOutput) ToGetRouteTablePropagationsFilterOutput() GetRouteTablePropagationsFilterOutput {
	return o
}

func (o GetRouteTablePropagationsFilterOutput) ToGetRouteTablePropagationsFilterOutputWithContext(ctx context.Context) GetRouteTablePropagationsFilterOutput {
	return o
}

func (o GetRouteTablePropagationsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTablePropagationsFilter] {
	return pulumix.Output[GetRouteTablePropagationsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html).
func (o GetRouteTablePropagationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablePropagationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Transit Gateway Route Table will be selected if any one of the given values matches.
func (o GetRouteTablePropagationsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablePropagationsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTablePropagationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablePropagationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablePropagationsFilter)(nil)).Elem()
}

func (o GetRouteTablePropagationsFilterArrayOutput) ToGetRouteTablePropagationsFilterArrayOutput() GetRouteTablePropagationsFilterArrayOutput {
	return o
}

func (o GetRouteTablePropagationsFilterArrayOutput) ToGetRouteTablePropagationsFilterArrayOutputWithContext(ctx context.Context) GetRouteTablePropagationsFilterArrayOutput {
	return o
}

func (o GetRouteTablePropagationsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTablePropagationsFilter] {
	return pulumix.Output[[]GetRouteTablePropagationsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteTablePropagationsFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTablePropagationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablePropagationsFilter {
		return vs[0].([]GetRouteTablePropagationsFilter)[vs[1].(int)]
	}).(GetRouteTablePropagationsFilterOutput)
}

type GetRouteTableRoutesFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

// GetRouteTableRoutesFilterInput is an input type that accepts GetRouteTableRoutesFilterArgs and GetRouteTableRoutesFilterOutput values.
// You can construct a concrete instance of `GetRouteTableRoutesFilterInput` via:
//
//	GetRouteTableRoutesFilterArgs{...}
type GetRouteTableRoutesFilterInput interface {
	pulumi.Input

	ToGetRouteTableRoutesFilterOutput() GetRouteTableRoutesFilterOutput
	ToGetRouteTableRoutesFilterOutputWithContext(context.Context) GetRouteTableRoutesFilterOutput
}

type GetRouteTableRoutesFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTableRoutesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesFilter)(nil)).Elem()
}

func (i GetRouteTableRoutesFilterArgs) ToGetRouteTableRoutesFilterOutput() GetRouteTableRoutesFilterOutput {
	return i.ToGetRouteTableRoutesFilterOutputWithContext(context.Background())
}

func (i GetRouteTableRoutesFilterArgs) ToGetRouteTableRoutesFilterOutputWithContext(ctx context.Context) GetRouteTableRoutesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutesFilterOutput)
}

func (i GetRouteTableRoutesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableRoutesFilter] {
	return pulumix.Output[GetRouteTableRoutesFilter]{
		OutputState: i.ToGetRouteTableRoutesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetRouteTableRoutesFilterArrayInput is an input type that accepts GetRouteTableRoutesFilterArray and GetRouteTableRoutesFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTableRoutesFilterArrayInput` via:
//
//	GetRouteTableRoutesFilterArray{ GetRouteTableRoutesFilterArgs{...} }
type GetRouteTableRoutesFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTableRoutesFilterArrayOutput() GetRouteTableRoutesFilterArrayOutput
	ToGetRouteTableRoutesFilterArrayOutputWithContext(context.Context) GetRouteTableRoutesFilterArrayOutput
}

type GetRouteTableRoutesFilterArray []GetRouteTableRoutesFilterInput

func (GetRouteTableRoutesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoutesFilter)(nil)).Elem()
}

func (i GetRouteTableRoutesFilterArray) ToGetRouteTableRoutesFilterArrayOutput() GetRouteTableRoutesFilterArrayOutput {
	return i.ToGetRouteTableRoutesFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRoutesFilterArray) ToGetRouteTableRoutesFilterArrayOutputWithContext(ctx context.Context) GetRouteTableRoutesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutesFilterArrayOutput)
}

func (i GetRouteTableRoutesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableRoutesFilter] {
	return pulumix.Output[[]GetRouteTableRoutesFilter]{
		OutputState: i.ToGetRouteTableRoutesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRouteTableRoutesFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesFilter)(nil)).Elem()
}

func (o GetRouteTableRoutesFilterOutput) ToGetRouteTableRoutesFilterOutput() GetRouteTableRoutesFilterOutput {
	return o
}

func (o GetRouteTableRoutesFilterOutput) ToGetRouteTableRoutesFilterOutputWithContext(ctx context.Context) GetRouteTableRoutesFilterOutput {
	return o
}

func (o GetRouteTableRoutesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableRoutesFilter] {
	return pulumix.Output[GetRouteTableRoutesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html).
func (o GetRouteTableRoutesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoutesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
func (o GetRouteTableRoutesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTableRoutesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTableRoutesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoutesFilter)(nil)).Elem()
}

func (o GetRouteTableRoutesFilterArrayOutput) ToGetRouteTableRoutesFilterArrayOutput() GetRouteTableRoutesFilterArrayOutput {
	return o
}

func (o GetRouteTableRoutesFilterArrayOutput) ToGetRouteTableRoutesFilterArrayOutputWithContext(ctx context.Context) GetRouteTableRoutesFilterArrayOutput {
	return o
}

func (o GetRouteTableRoutesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableRoutesFilter] {
	return pulumix.Output[[]GetRouteTableRoutesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteTableRoutesFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTableRoutesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableRoutesFilter {
		return vs[0].([]GetRouteTableRoutesFilter)[vs[1].(int)]
	}).(GetRouteTableRoutesFilterOutput)
}

type GetRouteTableRoutesRoute struct {
	// The CIDR used for route destination matches.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The ID of the prefix list used for destination matches.
	PrefixListId string `pulumi:"prefixListId"`
	// The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
	State string `pulumi:"state"`
	// The id of the transit gateway route table announcement, most of the time it is an empty string.
	TransitGatewayRouteTableAnnouncementId string `pulumi:"transitGatewayRouteTableAnnouncementId"`
	// The type of the route, can be `propagated` or `static`.
	Type string `pulumi:"type"`
}

// GetRouteTableRoutesRouteInput is an input type that accepts GetRouteTableRoutesRouteArgs and GetRouteTableRoutesRouteOutput values.
// You can construct a concrete instance of `GetRouteTableRoutesRouteInput` via:
//
//	GetRouteTableRoutesRouteArgs{...}
type GetRouteTableRoutesRouteInput interface {
	pulumi.Input

	ToGetRouteTableRoutesRouteOutput() GetRouteTableRoutesRouteOutput
	ToGetRouteTableRoutesRouteOutputWithContext(context.Context) GetRouteTableRoutesRouteOutput
}

type GetRouteTableRoutesRouteArgs struct {
	// The CIDR used for route destination matches.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The ID of the prefix list used for destination matches.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
	// The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
	State pulumi.StringInput `pulumi:"state"`
	// The id of the transit gateway route table announcement, most of the time it is an empty string.
	TransitGatewayRouteTableAnnouncementId pulumi.StringInput `pulumi:"transitGatewayRouteTableAnnouncementId"`
	// The type of the route, can be `propagated` or `static`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRouteTableRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesRoute)(nil)).Elem()
}

func (i GetRouteTableRoutesRouteArgs) ToGetRouteTableRoutesRouteOutput() GetRouteTableRoutesRouteOutput {
	return i.ToGetRouteTableRoutesRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRoutesRouteArgs) ToGetRouteTableRoutesRouteOutputWithContext(ctx context.Context) GetRouteTableRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutesRouteOutput)
}

func (i GetRouteTableRoutesRouteArgs) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableRoutesRoute] {
	return pulumix.Output[GetRouteTableRoutesRoute]{
		OutputState: i.ToGetRouteTableRoutesRouteOutputWithContext(ctx).OutputState,
	}
}

// GetRouteTableRoutesRouteArrayInput is an input type that accepts GetRouteTableRoutesRouteArray and GetRouteTableRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteTableRoutesRouteArrayInput` via:
//
//	GetRouteTableRoutesRouteArray{ GetRouteTableRoutesRouteArgs{...} }
type GetRouteTableRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTableRoutesRouteArrayOutput() GetRouteTableRoutesRouteArrayOutput
	ToGetRouteTableRoutesRouteArrayOutputWithContext(context.Context) GetRouteTableRoutesRouteArrayOutput
}

type GetRouteTableRoutesRouteArray []GetRouteTableRoutesRouteInput

func (GetRouteTableRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoutesRoute)(nil)).Elem()
}

func (i GetRouteTableRoutesRouteArray) ToGetRouteTableRoutesRouteArrayOutput() GetRouteTableRoutesRouteArrayOutput {
	return i.ToGetRouteTableRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRoutesRouteArray) ToGetRouteTableRoutesRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutesRouteArrayOutput)
}

func (i GetRouteTableRoutesRouteArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableRoutesRoute] {
	return pulumix.Output[[]GetRouteTableRoutesRoute]{
		OutputState: i.ToGetRouteTableRoutesRouteArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRouteTableRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesRoute)(nil)).Elem()
}

func (o GetRouteTableRoutesRouteOutput) ToGetRouteTableRoutesRouteOutput() GetRouteTableRoutesRouteOutput {
	return o
}

func (o GetRouteTableRoutesRouteOutput) ToGetRouteTableRoutesRouteOutputWithContext(ctx context.Context) GetRouteTableRoutesRouteOutput {
	return o
}

func (o GetRouteTableRoutesRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableRoutesRoute] {
	return pulumix.Output[GetRouteTableRoutesRoute]{
		OutputState: o.OutputState,
	}
}

// The CIDR used for route destination matches.
func (o GetRouteTableRoutesRouteOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoutesRoute) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The ID of the prefix list used for destination matches.
func (o GetRouteTableRoutesRouteOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoutesRoute) string { return v.PrefixListId }).(pulumi.StringOutput)
}

// The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
func (o GetRouteTableRoutesRouteOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoutesRoute) string { return v.State }).(pulumi.StringOutput)
}

// The id of the transit gateway route table announcement, most of the time it is an empty string.
func (o GetRouteTableRoutesRouteOutput) TransitGatewayRouteTableAnnouncementId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoutesRoute) string { return v.TransitGatewayRouteTableAnnouncementId }).(pulumi.StringOutput)
}

// The type of the route, can be `propagated` or `static`.
func (o GetRouteTableRoutesRouteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoutesRoute) string { return v.Type }).(pulumi.StringOutput)
}

type GetRouteTableRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoutesRoute)(nil)).Elem()
}

func (o GetRouteTableRoutesRouteArrayOutput) ToGetRouteTableRoutesRouteArrayOutput() GetRouteTableRoutesRouteArrayOutput {
	return o
}

func (o GetRouteTableRoutesRouteArrayOutput) ToGetRouteTableRoutesRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRoutesRouteArrayOutput {
	return o
}

func (o GetRouteTableRoutesRouteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRouteTableRoutesRoute] {
	return pulumix.Output[[]GetRouteTableRoutesRoute]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteTableRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTableRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableRoutesRoute {
		return vs[0].([]GetRouteTableRoutesRoute)[vs[1].(int)]
	}).(GetRouteTableRoutesRouteOutput)
}

type GetTransitGatewayFilter struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetTransitGatewayFilterInput is an input type that accepts GetTransitGatewayFilterArgs and GetTransitGatewayFilterOutput values.
// You can construct a concrete instance of `GetTransitGatewayFilterInput` via:
//
//	GetTransitGatewayFilterArgs{...}
type GetTransitGatewayFilterInput interface {
	pulumi.Input

	ToGetTransitGatewayFilterOutput() GetTransitGatewayFilterOutput
	ToGetTransitGatewayFilterOutputWithContext(context.Context) GetTransitGatewayFilterOutput
}

type GetTransitGatewayFilterArgs struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTransitGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayFilter)(nil)).Elem()
}

func (i GetTransitGatewayFilterArgs) ToGetTransitGatewayFilterOutput() GetTransitGatewayFilterOutput {
	return i.ToGetTransitGatewayFilterOutputWithContext(context.Background())
}

func (i GetTransitGatewayFilterArgs) ToGetTransitGatewayFilterOutputWithContext(ctx context.Context) GetTransitGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayFilterOutput)
}

func (i GetTransitGatewayFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetTransitGatewayFilter] {
	return pulumix.Output[GetTransitGatewayFilter]{
		OutputState: i.ToGetTransitGatewayFilterOutputWithContext(ctx).OutputState,
	}
}

// GetTransitGatewayFilterArrayInput is an input type that accepts GetTransitGatewayFilterArray and GetTransitGatewayFilterArrayOutput values.
// You can construct a concrete instance of `GetTransitGatewayFilterArrayInput` via:
//
//	GetTransitGatewayFilterArray{ GetTransitGatewayFilterArgs{...} }
type GetTransitGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetTransitGatewayFilterArrayOutput() GetTransitGatewayFilterArrayOutput
	ToGetTransitGatewayFilterArrayOutputWithContext(context.Context) GetTransitGatewayFilterArrayOutput
}

type GetTransitGatewayFilterArray []GetTransitGatewayFilterInput

func (GetTransitGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayFilter)(nil)).Elem()
}

func (i GetTransitGatewayFilterArray) ToGetTransitGatewayFilterArrayOutput() GetTransitGatewayFilterArrayOutput {
	return i.ToGetTransitGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetTransitGatewayFilterArray) ToGetTransitGatewayFilterArrayOutputWithContext(ctx context.Context) GetTransitGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayFilterArrayOutput)
}

func (i GetTransitGatewayFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTransitGatewayFilter] {
	return pulumix.Output[[]GetTransitGatewayFilter]{
		OutputState: i.ToGetTransitGatewayFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTransitGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayFilter)(nil)).Elem()
}

func (o GetTransitGatewayFilterOutput) ToGetTransitGatewayFilterOutput() GetTransitGatewayFilterOutput {
	return o
}

func (o GetTransitGatewayFilterOutput) ToGetTransitGatewayFilterOutputWithContext(ctx context.Context) GetTransitGatewayFilterOutput {
	return o
}

func (o GetTransitGatewayFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetTransitGatewayFilter] {
	return pulumix.Output[GetTransitGatewayFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).
func (o GetTransitGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetTransitGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTransitGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayFilter)(nil)).Elem()
}

func (o GetTransitGatewayFilterArrayOutput) ToGetTransitGatewayFilterArrayOutput() GetTransitGatewayFilterArrayOutput {
	return o
}

func (o GetTransitGatewayFilterArrayOutput) ToGetTransitGatewayFilterArrayOutputWithContext(ctx context.Context) GetTransitGatewayFilterArrayOutput {
	return o
}

func (o GetTransitGatewayFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTransitGatewayFilter] {
	return pulumix.Output[[]GetTransitGatewayFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetTransitGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetTransitGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitGatewayFilter {
		return vs[0].([]GetTransitGatewayFilter)[vs[1].(int)]
	}).(GetTransitGatewayFilterOutput)
}

type GetVpcAttachmentFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetVpcAttachmentFilterInput is an input type that accepts GetVpcAttachmentFilterArgs and GetVpcAttachmentFilterOutput values.
// You can construct a concrete instance of `GetVpcAttachmentFilterInput` via:
//
//	GetVpcAttachmentFilterArgs{...}
type GetVpcAttachmentFilterInput interface {
	pulumi.Input

	ToGetVpcAttachmentFilterOutput() GetVpcAttachmentFilterOutput
	ToGetVpcAttachmentFilterOutputWithContext(context.Context) GetVpcAttachmentFilterOutput
}

type GetVpcAttachmentFilterArgs struct {
	// Name of the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentFilter)(nil)).Elem()
}

func (i GetVpcAttachmentFilterArgs) ToGetVpcAttachmentFilterOutput() GetVpcAttachmentFilterOutput {
	return i.ToGetVpcAttachmentFilterOutputWithContext(context.Background())
}

func (i GetVpcAttachmentFilterArgs) ToGetVpcAttachmentFilterOutputWithContext(ctx context.Context) GetVpcAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAttachmentFilterOutput)
}

func (i GetVpcAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVpcAttachmentFilter] {
	return pulumix.Output[GetVpcAttachmentFilter]{
		OutputState: i.ToGetVpcAttachmentFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVpcAttachmentFilterArrayInput is an input type that accepts GetVpcAttachmentFilterArray and GetVpcAttachmentFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcAttachmentFilterArrayInput` via:
//
//	GetVpcAttachmentFilterArray{ GetVpcAttachmentFilterArgs{...} }
type GetVpcAttachmentFilterArrayInput interface {
	pulumi.Input

	ToGetVpcAttachmentFilterArrayOutput() GetVpcAttachmentFilterArrayOutput
	ToGetVpcAttachmentFilterArrayOutputWithContext(context.Context) GetVpcAttachmentFilterArrayOutput
}

type GetVpcAttachmentFilterArray []GetVpcAttachmentFilterInput

func (GetVpcAttachmentFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAttachmentFilter)(nil)).Elem()
}

func (i GetVpcAttachmentFilterArray) ToGetVpcAttachmentFilterArrayOutput() GetVpcAttachmentFilterArrayOutput {
	return i.ToGetVpcAttachmentFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcAttachmentFilterArray) ToGetVpcAttachmentFilterArrayOutputWithContext(ctx context.Context) GetVpcAttachmentFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAttachmentFilterArrayOutput)
}

func (i GetVpcAttachmentFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVpcAttachmentFilter] {
	return pulumix.Output[[]GetVpcAttachmentFilter]{
		OutputState: i.ToGetVpcAttachmentFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVpcAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetVpcAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentFilter)(nil)).Elem()
}

func (o GetVpcAttachmentFilterOutput) ToGetVpcAttachmentFilterOutput() GetVpcAttachmentFilterOutput {
	return o
}

func (o GetVpcAttachmentFilterOutput) ToGetVpcAttachmentFilterOutputWithContext(ctx context.Context) GetVpcAttachmentFilterOutput {
	return o
}

func (o GetVpcAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcAttachmentFilter] {
	return pulumix.Output[GetVpcAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetVpcAttachmentFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAttachmentFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetVpcAttachmentFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcAttachmentFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcAttachmentFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcAttachmentFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAttachmentFilter)(nil)).Elem()
}

func (o GetVpcAttachmentFilterArrayOutput) ToGetVpcAttachmentFilterArrayOutput() GetVpcAttachmentFilterArrayOutput {
	return o
}

func (o GetVpcAttachmentFilterArrayOutput) ToGetVpcAttachmentFilterArrayOutputWithContext(ctx context.Context) GetVpcAttachmentFilterArrayOutput {
	return o
}

func (o GetVpcAttachmentFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVpcAttachmentFilter] {
	return pulumix.Output[[]GetVpcAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVpcAttachmentFilterArrayOutput) Index(i pulumi.IntInput) GetVpcAttachmentFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcAttachmentFilter {
		return vs[0].([]GetVpcAttachmentFilter)[vs[1].(int)]
	}).(GetVpcAttachmentFilterOutput)
}

type GetVpcAttachmentsFilter struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html)
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetVpcAttachmentsFilterInput is an input type that accepts GetVpcAttachmentsFilterArgs and GetVpcAttachmentsFilterOutput values.
// You can construct a concrete instance of `GetVpcAttachmentsFilterInput` via:
//
//	GetVpcAttachmentsFilterArgs{...}
type GetVpcAttachmentsFilterInput interface {
	pulumi.Input

	ToGetVpcAttachmentsFilterOutput() GetVpcAttachmentsFilterOutput
	ToGetVpcAttachmentsFilterOutputWithContext(context.Context) GetVpcAttachmentsFilterOutput
}

type GetVpcAttachmentsFilterArgs struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html)
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcAttachmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentsFilter)(nil)).Elem()
}

func (i GetVpcAttachmentsFilterArgs) ToGetVpcAttachmentsFilterOutput() GetVpcAttachmentsFilterOutput {
	return i.ToGetVpcAttachmentsFilterOutputWithContext(context.Background())
}

func (i GetVpcAttachmentsFilterArgs) ToGetVpcAttachmentsFilterOutputWithContext(ctx context.Context) GetVpcAttachmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAttachmentsFilterOutput)
}

func (i GetVpcAttachmentsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVpcAttachmentsFilter] {
	return pulumix.Output[GetVpcAttachmentsFilter]{
		OutputState: i.ToGetVpcAttachmentsFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVpcAttachmentsFilterArrayInput is an input type that accepts GetVpcAttachmentsFilterArray and GetVpcAttachmentsFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcAttachmentsFilterArrayInput` via:
//
//	GetVpcAttachmentsFilterArray{ GetVpcAttachmentsFilterArgs{...} }
type GetVpcAttachmentsFilterArrayInput interface {
	pulumi.Input

	ToGetVpcAttachmentsFilterArrayOutput() GetVpcAttachmentsFilterArrayOutput
	ToGetVpcAttachmentsFilterArrayOutputWithContext(context.Context) GetVpcAttachmentsFilterArrayOutput
}

type GetVpcAttachmentsFilterArray []GetVpcAttachmentsFilterInput

func (GetVpcAttachmentsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAttachmentsFilter)(nil)).Elem()
}

func (i GetVpcAttachmentsFilterArray) ToGetVpcAttachmentsFilterArrayOutput() GetVpcAttachmentsFilterArrayOutput {
	return i.ToGetVpcAttachmentsFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcAttachmentsFilterArray) ToGetVpcAttachmentsFilterArrayOutputWithContext(ctx context.Context) GetVpcAttachmentsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAttachmentsFilterArrayOutput)
}

func (i GetVpcAttachmentsFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVpcAttachmentsFilter] {
	return pulumix.Output[[]GetVpcAttachmentsFilter]{
		OutputState: i.ToGetVpcAttachmentsFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVpcAttachmentsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcAttachmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentsFilter)(nil)).Elem()
}

func (o GetVpcAttachmentsFilterOutput) ToGetVpcAttachmentsFilterOutput() GetVpcAttachmentsFilterOutput {
	return o
}

func (o GetVpcAttachmentsFilterOutput) ToGetVpcAttachmentsFilterOutputWithContext(ctx context.Context) GetVpcAttachmentsFilterOutput {
	return o
}

func (o GetVpcAttachmentsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcAttachmentsFilter] {
	return pulumix.Output[GetVpcAttachmentsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html)
func (o GetVpcAttachmentsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAttachmentsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetVpcAttachmentsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcAttachmentsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcAttachmentsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcAttachmentsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAttachmentsFilter)(nil)).Elem()
}

func (o GetVpcAttachmentsFilterArrayOutput) ToGetVpcAttachmentsFilterArrayOutput() GetVpcAttachmentsFilterArrayOutput {
	return o
}

func (o GetVpcAttachmentsFilterArrayOutput) ToGetVpcAttachmentsFilterArrayOutputWithContext(ctx context.Context) GetVpcAttachmentsFilterArrayOutput {
	return o
}

func (o GetVpcAttachmentsFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVpcAttachmentsFilter] {
	return pulumix.Output[[]GetVpcAttachmentsFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVpcAttachmentsFilterArrayOutput) Index(i pulumi.IntInput) GetVpcAttachmentsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcAttachmentsFilter {
		return vs[0].([]GetVpcAttachmentsFilter)[vs[1].(int)]
	}).(GetVpcAttachmentsFilterOutput)
}

type GetVpnAttachmentFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetVpnAttachmentFilterInput is an input type that accepts GetVpnAttachmentFilterArgs and GetVpnAttachmentFilterOutput values.
// You can construct a concrete instance of `GetVpnAttachmentFilterInput` via:
//
//	GetVpnAttachmentFilterArgs{...}
type GetVpnAttachmentFilterInput interface {
	pulumi.Input

	ToGetVpnAttachmentFilterOutput() GetVpnAttachmentFilterOutput
	ToGetVpnAttachmentFilterOutputWithContext(context.Context) GetVpnAttachmentFilterOutput
}

type GetVpnAttachmentFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpnAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnAttachmentFilter)(nil)).Elem()
}

func (i GetVpnAttachmentFilterArgs) ToGetVpnAttachmentFilterOutput() GetVpnAttachmentFilterOutput {
	return i.ToGetVpnAttachmentFilterOutputWithContext(context.Background())
}

func (i GetVpnAttachmentFilterArgs) ToGetVpnAttachmentFilterOutputWithContext(ctx context.Context) GetVpnAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnAttachmentFilterOutput)
}

func (i GetVpnAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetVpnAttachmentFilter] {
	return pulumix.Output[GetVpnAttachmentFilter]{
		OutputState: i.ToGetVpnAttachmentFilterOutputWithContext(ctx).OutputState,
	}
}

// GetVpnAttachmentFilterArrayInput is an input type that accepts GetVpnAttachmentFilterArray and GetVpnAttachmentFilterArrayOutput values.
// You can construct a concrete instance of `GetVpnAttachmentFilterArrayInput` via:
//
//	GetVpnAttachmentFilterArray{ GetVpnAttachmentFilterArgs{...} }
type GetVpnAttachmentFilterArrayInput interface {
	pulumi.Input

	ToGetVpnAttachmentFilterArrayOutput() GetVpnAttachmentFilterArrayOutput
	ToGetVpnAttachmentFilterArrayOutputWithContext(context.Context) GetVpnAttachmentFilterArrayOutput
}

type GetVpnAttachmentFilterArray []GetVpnAttachmentFilterInput

func (GetVpnAttachmentFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnAttachmentFilter)(nil)).Elem()
}

func (i GetVpnAttachmentFilterArray) ToGetVpnAttachmentFilterArrayOutput() GetVpnAttachmentFilterArrayOutput {
	return i.ToGetVpnAttachmentFilterArrayOutputWithContext(context.Background())
}

func (i GetVpnAttachmentFilterArray) ToGetVpnAttachmentFilterArrayOutputWithContext(ctx context.Context) GetVpnAttachmentFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnAttachmentFilterArrayOutput)
}

func (i GetVpnAttachmentFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetVpnAttachmentFilter] {
	return pulumix.Output[[]GetVpnAttachmentFilter]{
		OutputState: i.ToGetVpnAttachmentFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetVpnAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetVpnAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnAttachmentFilter)(nil)).Elem()
}

func (o GetVpnAttachmentFilterOutput) ToGetVpnAttachmentFilterOutput() GetVpnAttachmentFilterOutput {
	return o
}

func (o GetVpnAttachmentFilterOutput) ToGetVpnAttachmentFilterOutputWithContext(ctx context.Context) GetVpnAttachmentFilterOutput {
	return o
}

func (o GetVpnAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpnAttachmentFilter] {
	return pulumix.Output[GetVpnAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
func (o GetVpnAttachmentFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnAttachmentFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetVpnAttachmentFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnAttachmentFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpnAttachmentFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpnAttachmentFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnAttachmentFilter)(nil)).Elem()
}

func (o GetVpnAttachmentFilterArrayOutput) ToGetVpnAttachmentFilterArrayOutput() GetVpnAttachmentFilterArrayOutput {
	return o
}

func (o GetVpnAttachmentFilterArrayOutput) ToGetVpnAttachmentFilterArrayOutputWithContext(ctx context.Context) GetVpnAttachmentFilterArrayOutput {
	return o
}

func (o GetVpnAttachmentFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetVpnAttachmentFilter] {
	return pulumix.Output[[]GetVpnAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetVpnAttachmentFilterArrayOutput) Index(i pulumi.IntInput) GetVpnAttachmentFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnAttachmentFilter {
		return vs[0].([]GetVpnAttachmentFilter)[vs[1].(int)]
	}).(GetVpnAttachmentFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConnectEndpointTimeoutsInput)(nil)).Elem(), InstanceConnectEndpointTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConnectEndpointTimeoutsPtrInput)(nil)).Elem(), InstanceConnectEndpointTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentFilterInput)(nil)).Elem(), GetAttachmentFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentFilterArrayInput)(nil)).Elem(), GetAttachmentFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentsFilterInput)(nil)).Elem(), GetAttachmentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentsFilterArrayInput)(nil)).Elem(), GetAttachmentsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectFilterInput)(nil)).Elem(), GetConnectFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectFilterArrayInput)(nil)).Elem(), GetConnectFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectPeerFilterInput)(nil)).Elem(), GetConnectPeerFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectPeerFilterArrayInput)(nil)).Elem(), GetConnectPeerFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectConnectGatewayAttachmentFilterInput)(nil)).Elem(), GetDirectConnectGatewayAttachmentFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectConnectGatewayAttachmentFilterArrayInput)(nil)).Elem(), GetDirectConnectGatewayAttachmentFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainAssociationTypeInput)(nil)).Elem(), GetMulticastDomainAssociationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainAssociationTypeArrayInput)(nil)).Elem(), GetMulticastDomainAssociationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainFilterInput)(nil)).Elem(), GetMulticastDomainFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainFilterArrayInput)(nil)).Elem(), GetMulticastDomainFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainMemberInput)(nil)).Elem(), GetMulticastDomainMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainMemberArrayInput)(nil)).Elem(), GetMulticastDomainMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainSourceInput)(nil)).Elem(), GetMulticastDomainSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMulticastDomainSourceArrayInput)(nil)).Elem(), GetMulticastDomainSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAttachmentFilterInput)(nil)).Elem(), GetPeeringAttachmentFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAttachmentFilterArrayInput)(nil)).Elem(), GetPeeringAttachmentFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableAssociationsFilterInput)(nil)).Elem(), GetRouteTableAssociationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableAssociationsFilterArrayInput)(nil)).Elem(), GetRouteTableAssociationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableFilterInput)(nil)).Elem(), GetRouteTableFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableFilterArrayInput)(nil)).Elem(), GetRouteTableFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablePropagationsFilterInput)(nil)).Elem(), GetRouteTablePropagationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablePropagationsFilterArrayInput)(nil)).Elem(), GetRouteTablePropagationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRoutesFilterInput)(nil)).Elem(), GetRouteTableRoutesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRoutesFilterArrayInput)(nil)).Elem(), GetRouteTableRoutesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRoutesRouteInput)(nil)).Elem(), GetRouteTableRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRoutesRouteArrayInput)(nil)).Elem(), GetRouteTableRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayFilterInput)(nil)).Elem(), GetTransitGatewayFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayFilterArrayInput)(nil)).Elem(), GetTransitGatewayFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAttachmentFilterInput)(nil)).Elem(), GetVpcAttachmentFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAttachmentFilterArrayInput)(nil)).Elem(), GetVpcAttachmentFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAttachmentsFilterInput)(nil)).Elem(), GetVpcAttachmentsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAttachmentsFilterArrayInput)(nil)).Elem(), GetVpcAttachmentsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnAttachmentFilterInput)(nil)).Elem(), GetVpnAttachmentFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnAttachmentFilterArrayInput)(nil)).Elem(), GetVpnAttachmentFilterArray{})
	pulumi.RegisterOutputType(InstanceConnectEndpointTimeoutsOutput{})
	pulumi.RegisterOutputType(InstanceConnectEndpointTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetAttachmentFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAttachmentsFilterOutput{})
	pulumi.RegisterOutputType(GetAttachmentsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConnectFilterOutput{})
	pulumi.RegisterOutputType(GetConnectFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConnectPeerFilterOutput{})
	pulumi.RegisterOutputType(GetConnectPeerFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDirectConnectGatewayAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetDirectConnectGatewayAttachmentFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainAssociationTypeOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainAssociationTypeArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainFilterOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainMemberOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainMemberArrayOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainSourceOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainSourceArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetPeeringAttachmentFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationsFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablePropagationsFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTablePropagationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutesFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetVpcAttachmentFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcAttachmentsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcAttachmentsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpnAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetVpnAttachmentFilterArrayOutput{})
}
