// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupConnect(ctx *pulumi.Context, args *LookupConnectArgs, opts ...pulumi.InvokeOption) (*LookupConnectResult, error) {
	var rv LookupConnectResult
	err := ctx.Invoke("aws:ec2transitgateway/getConnect:getConnect", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnect.
type LookupConnectArgs struct {
	Filters                 []GetConnectFilter `pulumi:"filters"`
	Tags                    map[string]string  `pulumi:"tags"`
	TransitGatewayConnectId *string            `pulumi:"transitGatewayConnectId"`
}

// A collection of values returned by getConnect.
type LookupConnectResult struct {
	Filters []GetConnectFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string            `pulumi:"id"`
	Protocol                string            `pulumi:"protocol"`
	Tags                    map[string]string `pulumi:"tags"`
	TransitGatewayConnectId string            `pulumi:"transitGatewayConnectId"`
	TransitGatewayId        string            `pulumi:"transitGatewayId"`
	TransportAttachmentId   string            `pulumi:"transportAttachmentId"`
}

func LookupConnectOutput(ctx *pulumi.Context, args LookupConnectOutputArgs, opts ...pulumi.InvokeOption) LookupConnectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectResult, error) {
			args := v.(LookupConnectArgs)
			r, err := LookupConnect(ctx, &args, opts...)
			var s LookupConnectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectResultOutput)
}

// A collection of arguments for invoking getConnect.
type LookupConnectOutputArgs struct {
	Filters                 GetConnectFilterArrayInput `pulumi:"filters"`
	Tags                    pulumi.StringMapInput      `pulumi:"tags"`
	TransitGatewayConnectId pulumi.StringPtrInput      `pulumi:"transitGatewayConnectId"`
}

func (LookupConnectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectArgs)(nil)).Elem()
}

// A collection of values returned by getConnect.
type LookupConnectResultOutput struct{ *pulumi.OutputState }

func (LookupConnectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectResult)(nil)).Elem()
}

func (o LookupConnectResultOutput) ToLookupConnectResultOutput() LookupConnectResultOutput {
	return o
}

func (o LookupConnectResultOutput) ToLookupConnectResultOutputWithContext(ctx context.Context) LookupConnectResultOutput {
	return o
}

func (o LookupConnectResultOutput) Filters() GetConnectFilterArrayOutput {
	return o.ApplyT(func(v LookupConnectResult) []GetConnectFilter { return v.Filters }).(GetConnectFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConnectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConnectResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LookupConnectResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConnectResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupConnectResultOutput) TransitGatewayConnectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectResult) string { return v.TransitGatewayConnectId }).(pulumi.StringOutput)
}

func (o LookupConnectResultOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectResult) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

func (o LookupConnectResultOutput) TransportAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectResult) string { return v.TransportAttachmentId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectResultOutput{})
}
