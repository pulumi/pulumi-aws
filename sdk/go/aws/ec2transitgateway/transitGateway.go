// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TransitGateway struct {
	pulumi.CustomResourceState

	AmazonSideAsn                  pulumi.IntPtrOutput      `pulumi:"amazonSideAsn"`
	Arn                            pulumi.StringOutput      `pulumi:"arn"`
	AssociationDefaultRouteTableId pulumi.StringOutput      `pulumi:"associationDefaultRouteTableId"`
	AutoAcceptSharedAttachments    pulumi.StringPtrOutput   `pulumi:"autoAcceptSharedAttachments"`
	DefaultRouteTableAssociation   pulumi.StringPtrOutput   `pulumi:"defaultRouteTableAssociation"`
	DefaultRouteTablePropagation   pulumi.StringPtrOutput   `pulumi:"defaultRouteTablePropagation"`
	Description                    pulumi.StringPtrOutput   `pulumi:"description"`
	DnsSupport                     pulumi.StringPtrOutput   `pulumi:"dnsSupport"`
	MulticastSupport               pulumi.StringPtrOutput   `pulumi:"multicastSupport"`
	OwnerId                        pulumi.StringOutput      `pulumi:"ownerId"`
	PropagationDefaultRouteTableId pulumi.StringOutput      `pulumi:"propagationDefaultRouteTableId"`
	Tags                           pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                        pulumi.StringMapOutput   `pulumi:"tagsAll"`
	TransitGatewayCidrBlocks       pulumi.StringArrayOutput `pulumi:"transitGatewayCidrBlocks"`
	VpnEcmpSupport                 pulumi.StringPtrOutput   `pulumi:"vpnEcmpSupport"`
}

// NewTransitGateway registers a new resource with the given unique name, arguments, and options.
func NewTransitGateway(ctx *pulumi.Context,
	name string, args *TransitGatewayArgs, opts ...pulumi.ResourceOption) (*TransitGateway, error) {
	if args == nil {
		args = &TransitGatewayArgs{}
	}

	var resource TransitGateway
	err := ctx.RegisterResource("aws:ec2transitgateway/transitGateway:TransitGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGateway gets an existing TransitGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayState, opts ...pulumi.ResourceOption) (*TransitGateway, error) {
	var resource TransitGateway
	err := ctx.ReadResource("aws:ec2transitgateway/transitGateway:TransitGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGateway resources.
type transitGatewayState struct {
	AmazonSideAsn                  *int              `pulumi:"amazonSideAsn"`
	Arn                            *string           `pulumi:"arn"`
	AssociationDefaultRouteTableId *string           `pulumi:"associationDefaultRouteTableId"`
	AutoAcceptSharedAttachments    *string           `pulumi:"autoAcceptSharedAttachments"`
	DefaultRouteTableAssociation   *string           `pulumi:"defaultRouteTableAssociation"`
	DefaultRouteTablePropagation   *string           `pulumi:"defaultRouteTablePropagation"`
	Description                    *string           `pulumi:"description"`
	DnsSupport                     *string           `pulumi:"dnsSupport"`
	MulticastSupport               *string           `pulumi:"multicastSupport"`
	OwnerId                        *string           `pulumi:"ownerId"`
	PropagationDefaultRouteTableId *string           `pulumi:"propagationDefaultRouteTableId"`
	Tags                           map[string]string `pulumi:"tags"`
	TagsAll                        map[string]string `pulumi:"tagsAll"`
	TransitGatewayCidrBlocks       []string          `pulumi:"transitGatewayCidrBlocks"`
	VpnEcmpSupport                 *string           `pulumi:"vpnEcmpSupport"`
}

type TransitGatewayState struct {
	AmazonSideAsn                  pulumi.IntPtrInput
	Arn                            pulumi.StringPtrInput
	AssociationDefaultRouteTableId pulumi.StringPtrInput
	AutoAcceptSharedAttachments    pulumi.StringPtrInput
	DefaultRouteTableAssociation   pulumi.StringPtrInput
	DefaultRouteTablePropagation   pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	DnsSupport                     pulumi.StringPtrInput
	MulticastSupport               pulumi.StringPtrInput
	OwnerId                        pulumi.StringPtrInput
	PropagationDefaultRouteTableId pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	TagsAll                        pulumi.StringMapInput
	TransitGatewayCidrBlocks       pulumi.StringArrayInput
	VpnEcmpSupport                 pulumi.StringPtrInput
}

func (TransitGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayState)(nil)).Elem()
}

type transitGatewayArgs struct {
	AmazonSideAsn                *int              `pulumi:"amazonSideAsn"`
	AutoAcceptSharedAttachments  *string           `pulumi:"autoAcceptSharedAttachments"`
	DefaultRouteTableAssociation *string           `pulumi:"defaultRouteTableAssociation"`
	DefaultRouteTablePropagation *string           `pulumi:"defaultRouteTablePropagation"`
	Description                  *string           `pulumi:"description"`
	DnsSupport                   *string           `pulumi:"dnsSupport"`
	MulticastSupport             *string           `pulumi:"multicastSupport"`
	Tags                         map[string]string `pulumi:"tags"`
	TransitGatewayCidrBlocks     []string          `pulumi:"transitGatewayCidrBlocks"`
	VpnEcmpSupport               *string           `pulumi:"vpnEcmpSupport"`
}

// The set of arguments for constructing a TransitGateway resource.
type TransitGatewayArgs struct {
	AmazonSideAsn                pulumi.IntPtrInput
	AutoAcceptSharedAttachments  pulumi.StringPtrInput
	DefaultRouteTableAssociation pulumi.StringPtrInput
	DefaultRouteTablePropagation pulumi.StringPtrInput
	Description                  pulumi.StringPtrInput
	DnsSupport                   pulumi.StringPtrInput
	MulticastSupport             pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	TransitGatewayCidrBlocks     pulumi.StringArrayInput
	VpnEcmpSupport               pulumi.StringPtrInput
}

func (TransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayArgs)(nil)).Elem()
}

type TransitGatewayInput interface {
	pulumi.Input

	ToTransitGatewayOutput() TransitGatewayOutput
	ToTransitGatewayOutputWithContext(ctx context.Context) TransitGatewayOutput
}

func (*TransitGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGateway)(nil)).Elem()
}

func (i *TransitGateway) ToTransitGatewayOutput() TransitGatewayOutput {
	return i.ToTransitGatewayOutputWithContext(context.Background())
}

func (i *TransitGateway) ToTransitGatewayOutputWithContext(ctx context.Context) TransitGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayOutput)
}

// TransitGatewayArrayInput is an input type that accepts TransitGatewayArray and TransitGatewayArrayOutput values.
// You can construct a concrete instance of `TransitGatewayArrayInput` via:
//
//	TransitGatewayArray{ TransitGatewayArgs{...} }
type TransitGatewayArrayInput interface {
	pulumi.Input

	ToTransitGatewayArrayOutput() TransitGatewayArrayOutput
	ToTransitGatewayArrayOutputWithContext(context.Context) TransitGatewayArrayOutput
}

type TransitGatewayArray []TransitGatewayInput

func (TransitGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitGateway)(nil)).Elem()
}

func (i TransitGatewayArray) ToTransitGatewayArrayOutput() TransitGatewayArrayOutput {
	return i.ToTransitGatewayArrayOutputWithContext(context.Background())
}

func (i TransitGatewayArray) ToTransitGatewayArrayOutputWithContext(ctx context.Context) TransitGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayArrayOutput)
}

// TransitGatewayMapInput is an input type that accepts TransitGatewayMap and TransitGatewayMapOutput values.
// You can construct a concrete instance of `TransitGatewayMapInput` via:
//
//	TransitGatewayMap{ "key": TransitGatewayArgs{...} }
type TransitGatewayMapInput interface {
	pulumi.Input

	ToTransitGatewayMapOutput() TransitGatewayMapOutput
	ToTransitGatewayMapOutputWithContext(context.Context) TransitGatewayMapOutput
}

type TransitGatewayMap map[string]TransitGatewayInput

func (TransitGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitGateway)(nil)).Elem()
}

func (i TransitGatewayMap) ToTransitGatewayMapOutput() TransitGatewayMapOutput {
	return i.ToTransitGatewayMapOutputWithContext(context.Background())
}

func (i TransitGatewayMap) ToTransitGatewayMapOutputWithContext(ctx context.Context) TransitGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayMapOutput)
}

type TransitGatewayOutput struct{ *pulumi.OutputState }

func (TransitGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGateway)(nil)).Elem()
}

func (o TransitGatewayOutput) ToTransitGatewayOutput() TransitGatewayOutput {
	return o
}

func (o TransitGatewayOutput) ToTransitGatewayOutputWithContext(ctx context.Context) TransitGatewayOutput {
	return o
}

func (o TransitGatewayOutput) AmazonSideAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.IntPtrOutput { return v.AmazonSideAsn }).(pulumi.IntPtrOutput)
}

func (o TransitGatewayOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o TransitGatewayOutput) AssociationDefaultRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringOutput { return v.AssociationDefaultRouteTableId }).(pulumi.StringOutput)
}

func (o TransitGatewayOutput) AutoAcceptSharedAttachments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringPtrOutput { return v.AutoAcceptSharedAttachments }).(pulumi.StringPtrOutput)
}

func (o TransitGatewayOutput) DefaultRouteTableAssociation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringPtrOutput { return v.DefaultRouteTableAssociation }).(pulumi.StringPtrOutput)
}

func (o TransitGatewayOutput) DefaultRouteTablePropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringPtrOutput { return v.DefaultRouteTablePropagation }).(pulumi.StringPtrOutput)
}

func (o TransitGatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TransitGatewayOutput) DnsSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringPtrOutput { return v.DnsSupport }).(pulumi.StringPtrOutput)
}

func (o TransitGatewayOutput) MulticastSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringPtrOutput { return v.MulticastSupport }).(pulumi.StringPtrOutput)
}

func (o TransitGatewayOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o TransitGatewayOutput) PropagationDefaultRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringOutput { return v.PropagationDefaultRouteTableId }).(pulumi.StringOutput)
}

func (o TransitGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o TransitGatewayOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o TransitGatewayOutput) TransitGatewayCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringArrayOutput { return v.TransitGatewayCidrBlocks }).(pulumi.StringArrayOutput)
}

func (o TransitGatewayOutput) VpnEcmpSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGateway) pulumi.StringPtrOutput { return v.VpnEcmpSupport }).(pulumi.StringPtrOutput)
}

type TransitGatewayArrayOutput struct{ *pulumi.OutputState }

func (TransitGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitGateway)(nil)).Elem()
}

func (o TransitGatewayArrayOutput) ToTransitGatewayArrayOutput() TransitGatewayArrayOutput {
	return o
}

func (o TransitGatewayArrayOutput) ToTransitGatewayArrayOutputWithContext(ctx context.Context) TransitGatewayArrayOutput {
	return o
}

func (o TransitGatewayArrayOutput) Index(i pulumi.IntInput) TransitGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitGateway {
		return vs[0].([]*TransitGateway)[vs[1].(int)]
	}).(TransitGatewayOutput)
}

type TransitGatewayMapOutput struct{ *pulumi.OutputState }

func (TransitGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitGateway)(nil)).Elem()
}

func (o TransitGatewayMapOutput) ToTransitGatewayMapOutput() TransitGatewayMapOutput {
	return o
}

func (o TransitGatewayMapOutput) ToTransitGatewayMapOutputWithContext(ctx context.Context) TransitGatewayMapOutput {
	return o
}

func (o TransitGatewayMapOutput) MapIndex(k pulumi.StringInput) TransitGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitGateway {
		return vs[0].(map[string]*TransitGateway)[vs[1].(string)]
	}).(TransitGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayInput)(nil)).Elem(), &TransitGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayArrayInput)(nil)).Elem(), TransitGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayMapInput)(nil)).Elem(), TransitGatewayMap{})
	pulumi.RegisterOutputType(TransitGatewayOutput{})
	pulumi.RegisterOutputType(TransitGatewayArrayOutput{})
	pulumi.RegisterOutputType(TransitGatewayMapOutput{})
}
