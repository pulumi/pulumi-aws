// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package shield

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Enables AWS Shield Advanced for a specific AWS resource.
// The resource can be an Amazon CloudFront distribution, Elastic Load Balancing load balancer, AWS Global Accelerator accelerator, Elastic IP Address, or an Amazon Route 53 hosted zone.
//
// ## Example Usage
// ### Create protection
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws"
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/ec2"
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/shield"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aws.GetAvailabilityZones(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		currentRegion, err := aws.GetRegion(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		currentCallerIdentity, err := aws.GetCallerIdentity(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleEip, err := ec2.NewEip(ctx, "exampleEip", &ec2.EipArgs{
// 			Vpc: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = shield.NewProtection(ctx, "exampleProtection", &shield.ProtectionArgs{
// 			ResourceArn: exampleEip.ID().ApplyT(func(id string) (string, error) {
// 				return fmt.Sprintf("%v%v%v%v%v%v", "arn:aws:ec2:", currentRegion.Name, ":", currentCallerIdentity.AccountId, ":eip-allocation/", id), nil
// 			}).(pulumi.StringOutput),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Shield protection resources can be imported by specifying their ID e.g.
//
// ```sh
//  $ pulumi import aws:shield/protection:Protection example ff9592dc-22f3-4e88-afa1-7b29fde9669a
// ```
type Protection struct {
	pulumi.CustomResourceState

	// A friendly name for the Protection you are creating.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ARN (Amazon Resource Name) of the resource to be protected.
	ResourceArn pulumi.StringOutput `pulumi:"resourceArn"`
}

// NewProtection registers a new resource with the given unique name, arguments, and options.
func NewProtection(ctx *pulumi.Context,
	name string, args *ProtectionArgs, opts ...pulumi.ResourceOption) (*Protection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	var resource Protection
	err := ctx.RegisterResource("aws:shield/protection:Protection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtection gets an existing Protection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtectionState, opts ...pulumi.ResourceOption) (*Protection, error) {
	var resource Protection
	err := ctx.ReadResource("aws:shield/protection:Protection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Protection resources.
type protectionState struct {
	// A friendly name for the Protection you are creating.
	Name *string `pulumi:"name"`
	// The ARN (Amazon Resource Name) of the resource to be protected.
	ResourceArn *string `pulumi:"resourceArn"`
}

type ProtectionState struct {
	// A friendly name for the Protection you are creating.
	Name pulumi.StringPtrInput
	// The ARN (Amazon Resource Name) of the resource to be protected.
	ResourceArn pulumi.StringPtrInput
}

func (ProtectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionState)(nil)).Elem()
}

type protectionArgs struct {
	// A friendly name for the Protection you are creating.
	Name *string `pulumi:"name"`
	// The ARN (Amazon Resource Name) of the resource to be protected.
	ResourceArn string `pulumi:"resourceArn"`
}

// The set of arguments for constructing a Protection resource.
type ProtectionArgs struct {
	// A friendly name for the Protection you are creating.
	Name pulumi.StringPtrInput
	// The ARN (Amazon Resource Name) of the resource to be protected.
	ResourceArn pulumi.StringInput
}

func (ProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionArgs)(nil)).Elem()
}

type ProtectionInput interface {
	pulumi.Input

	ToProtectionOutput() ProtectionOutput
	ToProtectionOutputWithContext(ctx context.Context) ProtectionOutput
}

func (Protection) ElementType() reflect.Type {
	return reflect.TypeOf((*Protection)(nil)).Elem()
}

func (i Protection) ToProtectionOutput() ProtectionOutput {
	return i.ToProtectionOutputWithContext(context.Background())
}

func (i Protection) ToProtectionOutputWithContext(ctx context.Context) ProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionOutput)
}

type ProtectionOutput struct {
	*pulumi.OutputState
}

func (ProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionOutput)(nil)).Elem()
}

func (o ProtectionOutput) ToProtectionOutput() ProtectionOutput {
	return o
}

func (o ProtectionOutput) ToProtectionOutputWithContext(ctx context.Context) ProtectionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ProtectionOutput{})
}
